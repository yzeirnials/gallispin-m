
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct RFC2507d::tcpip
         0 |   struct click_ip _ip
     0:0-3 |     unsigned int ip_hl
     0:4-7 |     unsigned int ip_v
         1 |     uint8_t ip_tos
         2 |     uint16_t ip_len
         4 |     uint16_t ip_id
         6 |     uint16_t ip_off
         8 |     uint8_t ip_ttl
         9 |     uint8_t ip_p
        10 |     uint16_t ip_sum
        12 |     struct in_addr ip_src
        12 |       in_addr_t s_addr
        16 |     struct in_addr ip_dst
        16 |       in_addr_t s_addr
        20 |   struct click_tcp _tcp
        20 |     uint16_t th_sport
        22 |     uint16_t th_dport
        24 |     tcp_seq_t th_seq
        28 |     tcp_seq_t th_ack
    32:0-3 |     unsigned int th_flags2
    32:4-7 |     unsigned int th_off
        33 |     uint8_t th_flags
        34 |     uint16_t th_win
        36 |     uint16_t th_sum
        38 |     uint16_t th_urp
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping AST Record Layout
         0 | struct RFC2507d::ccb
         0 |   struct RFC2507d::tcpip _context
         0 |     struct click_ip _ip
     0:0-3 |       unsigned int ip_hl
     0:4-7 |       unsigned int ip_v
         1 |       uint8_t ip_tos
         2 |       uint16_t ip_len
         4 |       uint16_t ip_id
         6 |       uint16_t ip_off
         8 |       uint8_t ip_ttl
         9 |       uint8_t ip_p
        10 |       uint16_t ip_sum
        12 |       struct in_addr ip_src
        12 |         in_addr_t s_addr
        16 |       struct in_addr ip_dst
        16 |         in_addr_t s_addr
        20 |     struct click_tcp _tcp
        20 |       uint16_t th_sport
        22 |       uint16_t th_dport
        24 |       tcp_seq_t th_seq
        28 |       tcp_seq_t th_ack
    32:0-3 |       unsigned int th_flags2
    32:4-7 |       unsigned int th_off
        33 |       uint8_t th_flags
        34 |       uint16_t th_win
        36 |       uint16_t th_sum
        38 |       uint16_t th_urp
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65faaee8 prev 0x55cf65fa2688 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65faafe0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55cf65fab070 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55cf65fab0e8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55cf65fab1a8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55cf65fab270 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55cf65fab3e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55cf65fab320 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55cf65fab490 <col:24>
| `-OptimizeNoneAttr 0x55cf65fab4e8 <col:34>
|-CXXMethodDecl 0x55cf65fab530 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55cf65fab7e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55cf65fab5e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55cf65fab658 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55cf65fab6d8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55cf65fab8a0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55cf65fab8d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55cf65fab940 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55cf65fab9c8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55cf65fabce8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55cf65faba80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55cf65fabaf8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55cf65fabb70 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55cf65fabbf0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55cf65fabe00 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55cf65fb2768 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55cf65fb2768
| `-ParmVarDecl 0x55cf65fb2878 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55cf65fb2918 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55cf65fb2918
| `-ParmVarDecl 0x55cf65fb2a28 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55cf65fb9ae8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65f9df00 prev 0x55cf65f9dc80 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf65f9dff8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55cf65f9e088 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55cf65f9e0e8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55cf65f9e1d8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55cf65f9e2d8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55cf65f9e4a8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55cf65f9e358 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55cf65f9e3d0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55cf65f9e638 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55cf65f9e570 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55cf65f9e6e0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f9e818 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55cf65f9e750 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55cf65f9e9b8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55cf65f9e8f8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55cf65f9eb58 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55cf65f9ea98 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55cf65f9ec00 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55cf65f9ed00 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55cf65f9ede0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f9ece0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf65f9ecc0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55cf65f9ed90 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55cf65f9edf8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65f9ed70 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55cf65f9ed50 <col:44> 'int' 2
|-CXXMethodDecl 0x55cf65f9ef40 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55cf65f9ee28 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55cf65f9eea8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55cf65f9f098 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55cf65f9f008 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55cf65f9f2d8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55cf65f9f158 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55cf65f9f1d0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55cf65f9f388 <col:20>
| `-OptimizeNoneAttr 0x55cf65f9f3e0 <col:30>
|-CXXMethodDecl 0x55cf65f9f4e8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55cf65f9f420 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55cf65f9f590 <col:20>
| `-OptimizeNoneAttr 0x55cf65f9f5e8 <col:30>
|-CXXMethodDecl 0x55cf65f9f638 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55cf65f9f700 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55cf65f9f818 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55cf65f9f8a0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55cf65f9f928 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55cf65f9f9b0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55cf65f9fa38 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55cf65f9fac8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55cf65f9fb88 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55cf65f9fc10 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55cf65f9fc98 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55cf65f9fd20 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55cf65f9fda8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55cf65f9fe30 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55cf65f9fec0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55cf65f9ff80 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55cf65fa0010 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55cf65fa0160 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55cf65fa00c8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55cf65fa02f0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55cf65fa0220 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55cf65fa05a0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55cf65fa03a8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55cf65fa0428 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55cf65fa04a8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55cf65fa0658 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55cf65fa0760 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf65fa09f0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa0740 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf65fa0720 <col:33> 'int' 0
| |-EnumConstantDecl 0x55cf65fa07f0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf65fa0a08 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa07d0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55cf65fa07b0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55cf65fa0880 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf65fa0a20 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa0860 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55cf65fa0840 <col:38> 'int' 90
| |-EnumConstantDecl 0x55cf65fa0910 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf65fa0a38 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa08f0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55cf65fa08d0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55cf65fa09a0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55cf65fa0a50 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65fa0980 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55cf65fa0960 <col:32> 'int' 2000
|-CXXMethodDecl 0x55cf65fa0a90 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55cf65fa0ed0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf65fa0d40 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55cf65fa0db8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf65fa0fa0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55cf65fa1120 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55cf65fa1050 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf65fa1328 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf65fa11d8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55cf65fa1250 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf65fa1428 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55cf65fa14c8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55cf65fa1590 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf65fa1620 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55cf65fa1850 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa1600 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55cf65fa15e0 <col:36> 'int' EnumConstant 0x55cf65fa1590 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf65fa1670 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf65fa16c0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf65fa1710 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf65fa1760 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf65fa17b0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55cf65fa1800 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55cf65fa1938 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55cf65fa1878 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55cf65fa1a00 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55cf65fa1ac0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55cf65fa1b80 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55cf65fa1c40 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55cf65fa1d58 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55cf65fa1e20 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55cf65fa1fa0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55cf65fa1ed0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55cf65fa20c8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55cf65fa22c8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55cf65fa2178 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55cf65fa21f8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55cf65faec08 <col:54, line:127:5>
|   |-ParenExpr 0x55cf65faeab8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55cf65faea88 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65fae778 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55cf65fae750 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55cf65fae738 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55cf65fae720 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55cf65fae6f0 <col:31> 'Router *' lvalue ->_router 0x55cf65fac5d0
|   |   |         `-CXXThisExpr 0x55cf65fae6e0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55cf65fae7d8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65fae7b8 <col:48> 'int' 0
|   |   `-CallExpr 0x55cf65fae9e8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55cf65fae9d0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65fae9b0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65faea28 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65fae848 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55cf65faea40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65fae868 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55cf65faea58 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65fae8a0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55cf65faea70 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65fae998 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65fae980 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65fae938 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55cf65faeb50 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55cf65faeae8 <col:9> 'Router *' lvalue ->_router 0x55cf65fac5d0
|   | | `-CXXThisExpr 0x55cf65faead8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55cf65faeb38 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf65faeb18 <col:19> 'Router *' lvalue ParmVar 0x55cf65fa2178 'r' 'Router *'
|   `-BinaryOperator 0x55cf65faebe8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55cf65faeb80 <col:9> 'int' lvalue ->_eindex 0x55cf65fac638
|     | `-CXXThisExpr 0x55cf65faeb70 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55cf65faebd0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf65faebb0 <col:19> 'int' lvalue ParmVar 0x55cf65fa21f8 'eindex' 'int'
|-CXXMethodDecl 0x55cf65fa2450 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55cf65fa2388 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55cf65fa2520 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55cf65fa25e8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55cf65fa2688 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55cf65fa28d8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55cf65fa2750 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55cf65fa27d0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55cf65fa2988 <col:20>
| `-OptimizeNoneAttr 0x55cf65fa29e0 <col:30>
|-CXXMethodDecl 0x55cf65fa2ae8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55cf65fa2a20 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55cf65fa2b90 <col:20>
| `-OptimizeNoneAttr 0x55cf65fa2be8 <col:30>
|-CXXMethodDecl 0x55cf65fa2cb8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55cf65fa2c28 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55cf65fa2d60 <col:20>
| `-OptimizeNoneAttr 0x55cf65fa2db8 <col:30>
|-CXXMethodDecl 0x55cf65fa2f48 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55cf65fa2df0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55cf65fa2e70 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55cf65fa30d8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55cf65fa3010 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55cf65fa3228 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55cf65fa3198 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55cf65fa3378 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55cf65fa32e8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55cf65fa34c8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55cf65fa3438 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55cf65fa3788 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55cf65fa3580 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55cf65fa3600 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55cf65fa36a8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55cf65fa3860 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55cf65fa3920 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55cf65fa3bf0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf65fa3aa0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55cf65fa3b18 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55cf65fa3d18 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55cf65fa3ef0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55cf65fa3dd0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55cf65fa3e50 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55cf65fa40d8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55cf65fa3fb8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55cf65fa4038 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55cf65fa4448 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55cf65fa4198 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf65fa4210 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf65fa4290 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf65fae1f0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf65fae1d0 <col:106> 'int' 0
| `-ParmVarDecl 0x55cf65fa4308 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf65fae228 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf65fae208 <col:126> 'int' 0
|-CXXMethodDecl 0x55cf65fa47e8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf65fa4518 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf65fa45b0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf65fa4630 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55cf65fa46a8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf65fae260 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf65fae240 <col:114> 'int' 0
|-CXXMethodDecl 0x55cf65fa4b78 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf65fa48c0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55cf65fa4938 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf65fa49b8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55cf65fae278 <col:96> 'int' 0
| `-ParmVarDecl 0x55cf65fa4a30 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf65fae2b8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf65fae298 <col:116> 'int' 0
|-CXXMethodDecl 0x55cf65fa4ef8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55cf65fa4c48 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55cf65fa4cc0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf65fa4d40 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf65fae2f0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf65fae2d0 <col:109> 'int' 0
| `-ParmVarDecl 0x55cf65fa4db8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf65fae328 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf65fae308 <col:129> 'int' 0
|-CXXMethodDecl 0x55cf65fa5278 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf65fa4fc8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55cf65fa5040 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf65fa50c0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55cf65fa5138 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf65fae360 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf65fae340 <col:117> 'int' 0
|-CXXMethodDecl 0x55cf65fa5608 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf65fa5350 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa53c8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf65fa5448 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55cf65fae378 <col:99> 'int' 0
| `-ParmVarDecl 0x55cf65fa54c0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf65fae3b8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf65fae398 <col:119> 'int' 0
|-CXXMethodDecl 0x55cf65fa5a28 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55cf65fa56d8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55cf65fa5758 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55cf65fa57d0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf65fa5850 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf65fae3f0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf65fae3d0 <col:108> 'int' 0
| `-ParmVarDecl 0x55cf65fa58d0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55cf65fae428 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55cf65fae408 <col:141> 'int' 0
|-CXXMethodDecl 0x55cf65fa5e48 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55cf65fa5b00 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55cf65fa5b80 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55cf65fa5bf8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf65fa5c78 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55cf65fa5cf8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55cf65fae440 <col:121> 'int' 0
|-CXXMethodDecl 0x55cf65fa6278 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55cf65fa5f28 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55cf65fa5fa8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55cf65fa6020 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf65fa60a0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55cf65fae460 <col:98> 'int' 0
| `-ParmVarDecl 0x55cf65fa6120 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55cf65fae480 <col:123> 'int' 0
|-CXXMethodDecl 0x55cf65fa6540 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55cf65fa6350 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf65fa63d0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55cf65fa6450 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55cf65fae4a0 <col:80> 'int' 0
|-EnumDecl 0x55cf65fa65f8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55cf65fa6700 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf65fa6990 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa66e0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf65fa66c0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55cf65fa6790 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf65fa69a8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa6770 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf65fa6750 <col:40> 'int' 2
| |-EnumConstantDecl 0x55cf65fa6820 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf65fa69c0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa6800 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf65fa67e0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55cf65fa68b0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf65fa69d8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fa6890 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55cf65fa6870 <col:36> 'int' 7
| `-EnumConstantDecl 0x55cf65fa6940 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55cf65fa69f0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65fa6920 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55cf65fa6900 <col:34> 'int' 6
|-CXXMethodDecl 0x55cf65fa6ca8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55cf65fa6a18 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55cf65fa6ab8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55cf65fa6b38 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55cf65fa6bb0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55cf65fae558 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cf65fae540 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cf65fae528 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cf65fae508 <col:98, col:105> 'String' (CXXTemporary 0x55cf65fae508)
|           `-CXXTemporaryObjectExpr 0x55cf65fae4d0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55cf65fa6f48 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55cf65fa6d78 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55cf65fa6df0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55cf65fa6e68 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55cf65fae608 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55cf65fae5f0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55cf65fae5d8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55cf65fae5b8 <col:94, col:101> 'String' (CXXTemporary 0x55cf65fae5b8)
| |         `-CXXTemporaryObjectExpr 0x55cf65fae580 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55cf65faedf0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55cf65faed68 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55cf65faed38 <col:9> '<bound member function type>' ->add_task_handlers 0x55cf65fa6ca8
|     | `-CXXThisExpr 0x55cf65faed28 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55cf65faeda8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf65faeca8 <col:27> 'Task *' lvalue ParmVar 0x55cf65fa6d78 'task' 'Task *'
|     |-ImplicitCastExpr 0x55cf65faedc0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf65faecc8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55cf65fa6df0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55cf65faedd8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55cf65faece8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55cf65fa6940 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55cf65faed08 <col:62> 'const String' lvalue ParmVar 0x55cf65fa6e68 'prefix' 'const String &'
|-CXXMethodDecl 0x55cf65fa7158 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55cf65fa7010 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55cf65fa7088 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55cf65fae6b8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55cf65fae6a0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55cf65fae688 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55cf65fae668 <col:70, col:77> 'String' (CXXTemporary 0x55cf65fae668)
| |         `-CXXTemporaryObjectExpr 0x55cf65fae630 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55cf65faefc8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55cf65faef40 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55cf65faef10 <col:9> '<bound member function type>' ->add_task_handlers 0x55cf65fa6ca8
|     | `-CXXThisExpr 0x55cf65faef00 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55cf65faef80 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf65faee80 <col:27> 'Task *' lvalue ParmVar 0x55cf65fa7010 'task' 'Task *'
|     |-ImplicitCastExpr 0x55cf65faef98 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55cf65faeea0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55cf65faefb0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55cf65faeec0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55cf65fa6940 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55cf65faeee0 <col:57> 'const String' lvalue ParmVar 0x55cf65fa7088 'prefix' 'const String &'
|-CXXMethodDecl 0x55cf65fa7438 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55cf65fa7220 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa72a0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa7318 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55cf65fa76e8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55cf65fa7508 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa7588 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa7608 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55cf65fa79d8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55cf65fa77b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa7838 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa78b0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55cf65fa7c88 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55cf65fa7aa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa7b28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa7ba8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55cf65fa7f38 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55cf65fa7d58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa7dd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa7e58 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55cf65fa81e8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55cf65fa8008 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa8088 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa8100 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55cf65fa8498 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55cf65fa82b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa8338 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa83b8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55cf65fa87a8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55cf65fa85c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa8640 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa86c0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55cf65fa8a88 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55cf65fa8878 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa88f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa89a0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55cf65fa8d68 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55cf65fa8b58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa8bd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa8c80 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55cf65fa8fd0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55cf65fa8e38 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55cf65fa8eb8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55cf65fa8f30 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55cf65fa9278 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55cf65fa90a0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55cf65fa9120 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55cf65fa9198 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55cf65fa9528 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55cf65fa9348 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa93c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa9448 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55cf65fa97d8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55cf65fa95f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa9678 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa96f0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55cf65fa9a88 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55cf65fa98a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa9928 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa99a0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55cf65fa9d58 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55cf65fa9b58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa9bd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf65fa9c78 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55cf65faa088 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55cf65fa9e28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf65fa9ea8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55cf65fa9f20 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55cf65fa9f98 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf65fae6d0 <col:93> 'bool' false
|-CXXMethodDecl 0x55cf65faa270 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf65faa158 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55cf65faa1d8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55cf65faa448 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf65faa330 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55cf65faa3b0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55cf65faa728 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf65faa508 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55cf65faa580 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55cf65faa600 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55cf65faa678 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55cf65faaa18 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf65faa7f8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55cf65faa870 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55cf65faa8f0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55cf65faa968 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55cf65faac50 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55cf65faaaf0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55cf65faab70 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55cf65faae38 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55cf65faad18 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55cf65faad98 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55cf65faaee8 prev 0x55cf65fa2688 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf65faafe0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55cf65fab070 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55cf65fab0e8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55cf65fab1a8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55cf65fab270 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55cf65fab3e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55cf65fab320 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55cf65fab490 <col:24>
| | `-OptimizeNoneAttr 0x55cf65fab4e8 <col:34>
| |-CXXMethodDecl 0x55cf65fab530 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55cf65fab7e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55cf65fab5e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55cf65fab658 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55cf65fab6d8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55cf65fab8a0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55cf65fab8d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55cf65fab940 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55cf65fab9c8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55cf65fabce8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55cf65faba80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55cf65fabaf8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55cf65fabb70 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55cf65fabbf0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55cf65fabe00 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55cf65fb2768 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55cf65fb2768
| | `-ParmVarDecl 0x55cf65fb2878 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55cf65fb2918 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55cf65fb2918
| | `-ParmVarDecl 0x55cf65fb2a28 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55cf65fb9ae8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cf65fabe78 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55cf65fabf18 <col:38> "" ""
|-CXXMethodDecl 0x55cf65fabfa8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55cf65fac048 <col:44> "" ""
|-AccessSpecDecl 0x55cf65fac0b8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55cf65fac0e0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55cf65fac1e0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55cf65fac230 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65fac1c0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55cf65fac1a0 <col:27> 'int' 4
|-FieldDecl 0x55cf65fac2e8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55cf65fac498 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55cf65fac550 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55cf65fac5d0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55cf65fac638 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55cf65fac788 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55cf65fac6c8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55cf65fac938 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55cf65fac848 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55cf65facb18 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55cf65fac9f8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55cf65faca78 <col:25> col:28 'int'
|-CXXMethodDecl 0x55cf65facdc0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55cf65facbe0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55cf65facc60 <col:28> col:31 'int'
| `-ParmVarDecl 0x55cf65faccd8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55cf65face78 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55cf65facf40 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55cf65facf90 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55cf65facfe0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55cf65fad1c0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf65fad070 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55cf65fad0e8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf65fad468 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55cf65fad288 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55cf65fad308 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55cf65fad380 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55cf65fad688 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55cf65fad538 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55cf65fad5b8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55cf65fad9c0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55cf65fad748 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55cf65fad7c8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55cf65fad840 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55cf65fad8c0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55cf65fadba8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf65fada90 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55cf65fadb10 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55cf65fadcf8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55cf65fadc68 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55cf65fae078 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55cf65faddb8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55cf65fade38 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55cf65fadeb0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55cf65fadf30 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55cf65fae190 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class RFC2507d
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   struct ccb [15] _ccbs
           | [sizeof=712, dsize=708, align=8,
           |  nvsize=708, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65ccf7e8 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65ccf908 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55cf65ccf9d0 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55cf65da0300 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf65da5618 <col:8>
|-CXXConstructorDecl 0x55cf65da0408 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55cf65da0408
| `-ParmVarDecl 0x55cf65da0518 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55cf65da05b8 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf65da06c8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55cf65ccf9d0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55cf65da5830 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55cf65da5800 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55cf65ccf9d0
| |     `-CXXStaticCastExpr 0x55cf65da57d0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55cf65da57a0 <col:8> 'in_addr' lvalue ParmVar 0x55cf65da06c8 '' 'in_addr &&'
| `-CompoundStmt 0x55cf65da5878 <col:8>
`-CXXDestructorDecl 0x55cf65da5ab0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65d97fe8 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65d98108 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55cf65d981f0 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55cf65d981d0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55cf65d98198 <col:22> 'int' 4
|-FieldDecl 0x55cf65d98298 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55cf65d98278 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55cf65d98240 <col:21> 'int' 4
|-FieldDecl 0x55cf65d982f8 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55cf65d98358 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55cf65d983b8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55cf65d98418 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55cf65d98478 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55cf65d984d8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55cf65d98538 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55cf65d985a8 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
|-FieldDecl 0x55cf65d98618 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'
|-CXXConstructorDecl 0x55cf65fb8138 <line:23:8> col:8 implicit used click_ip 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55cf65d985a8 'ip_src' 'struct in_addr':'in_addr'
| | `-CXXConstructExpr 0x55cf65fb8568 <col:8> 'struct in_addr':'in_addr' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55cf65d98618 'ip_dst' 'struct in_addr':'in_addr'
| | `-CXXConstructExpr 0x55cf65fb85b8 <col:8> 'struct in_addr':'in_addr' 'void () noexcept'
| `-CompoundStmt 0x55cf65fb8618 <col:8>
|-CXXConstructorDecl 0x55cf65fb8238 <col:8> col:8 implicit constexpr click_ip 'void (const click_ip &)' inline default trivial noexcept-unevaluated 0x55cf65fb8238
| `-ParmVarDecl 0x55cf65fb8348 <col:8> col:8 'const click_ip &'
|-CXXConstructorDecl 0x55cf65fb83e8 <col:8> col:8 implicit constexpr click_ip 'void (click_ip &&)' inline default trivial noexcept-unevaluated 0x55cf65fb83e8
| `-ParmVarDecl 0x55cf65fb84f8 <col:8> col:8 'click_ip &&'
`-CXXDestructorDecl 0x55cf65fb9080 <col:8> col:8 implicit ~click_ip 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65fb5940 prev 0x55cf65f61c60 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65fb5a38 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x55cf65fb5ad8 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55cf65fb5b38 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55cf65fb5bc0 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55cf65fb5c20 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55cf65fb5cc8 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x55cf65fb5ca8 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x55cf65fb5c70 <col:26> 'int' 4
|-FieldDecl 0x55cf65fb5d70 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x55cf65fb5d50 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x55cf65fb5d18 <col:23> 'int' 4
|-FieldDecl 0x55cf65fb5dd0 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55cf65fb5e30 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x55cf65fb5e90 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55cf65fb5ef0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x55cf65fb8690 <line:24:8> col:8 implicit used click_tcp 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf65fb8ac8 <col:8>
|-CXXConstructorDecl 0x55cf65fb8798 <col:8> col:8 implicit constexpr click_tcp 'void (const click_tcp &)' inline default trivial noexcept-unevaluated 0x55cf65fb8798
| `-ParmVarDecl 0x55cf65fb88a8 <col:8> col:8 'const click_tcp &'
|-CXXConstructorDecl 0x55cf65fb8948 <col:8> col:8 implicit constexpr click_tcp 'void (click_tcp &&)' inline default trivial noexcept-unevaluated 0x55cf65fb8948
| `-ParmVarDecl 0x55cf65fb8a58 <col:8> col:8 'click_tcp &&'
`-CXXDestructorDecl 0x55cf65fb9160 <col:8> col:8 implicit ~click_tcp 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65fb6170 <../elements/ip/rfc2507d.hh:27:3, line:32:3> line:27:10 struct tcpip definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65fb6288 <col:3, col:10> col:10 implicit referenced struct tcpip
|-FieldDecl 0x55cf65fb6328 <line:28:5, col:14> col:14 referenced _ip 'click_ip'
|-FieldDecl 0x55cf65fb6388 <line:29:5, col:15> col:15 _tcp 'click_tcp'
|-CXXConversionDecl 0x55cf65fb6438 <line:30:5, col:61> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x55cf65fb8108 <col:27, col:61>
|   `-ReturnStmt 0x55cf65fb80f8 <col:29, col:58>
|     `-ParenExpr 0x55cf65fb80d8 <col:35, col:58> 'bool'
|       `-BinaryOperator 0x55cf65fb80b8 <col:36, col:57> 'bool' '!='
|         |-ImplicitCastExpr 0x55cf65fb8088 <col:36, col:47> 'in_addr_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55cf65fb8038 <col:36, col:47> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x55cf65ccf9d0
|         |   `-MemberExpr 0x55cf65fb8008 <col:36, col:40> 'const struct in_addr':'const in_addr' lvalue .ip_src 0x55cf65d985a8
|         |     `-MemberExpr 0x55cf65fb7fd8 <col:36> 'const click_ip' lvalue ->_ip 0x55cf65fb6328
|         |       `-CXXThisExpr 0x55cf65fb7fc8 <col:36> 'const RFC2507d::tcpip *' implicit this
|         `-ImplicitCastExpr 0x55cf65fb80a0 <col:57> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x55cf65fb8068 <col:57> 'int' 0
|-CXXConstructorDecl 0x55cf65fb6550 <line:31:5, col:38> col:5 used tcpip 'void ()'
| |-CXXCtorInitializer Field 0x55cf65fb6328 '_ip' 'click_ip'
| | `-CXXConstructExpr 0x55cf65fb8628 <col:5> 'click_ip' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55cf65fb6388 '_tcp' 'click_tcp'
| | `-CXXConstructExpr 0x55cf65fb8ad8 <col:5> 'click_tcp' 'void () noexcept'
| `-CompoundStmt 0x55cf65fb8c30 <col:13, col:38>
|   `-BinaryOperator 0x55cf65fb8c10 <col:15, col:35> 'in_addr_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55cf65fb8ba8 <col:15, col:26> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55cf65ccf9d0
|     | `-MemberExpr 0x55cf65fb8b78 <col:15, col:19> 'struct in_addr':'in_addr' lvalue .ip_src 0x55cf65d985a8
|     |   `-MemberExpr 0x55cf65fb8b48 <col:15> 'click_ip' lvalue ->_ip 0x55cf65fb6328
|     |     `-CXXThisExpr 0x55cf65fb8b38 <col:15> 'RFC2507d::tcpip *' implicit this
|     `-ImplicitCastExpr 0x55cf65fb8bf8 <col:35> 'in_addr_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55cf65fb8bd8 <col:35> 'int' 0
|-CXXDestructorDecl 0x55cf65fb8fa0 <line:27:10> col:10 implicit ~tcpip 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55cf65fb9298 <col:10> col:10 implicit constexpr tcpip 'void (const RFC2507d::tcpip &)' inline default trivial noexcept-unevaluated 0x55cf65fb9298
| `-ParmVarDecl 0x55cf65fb93a8 <col:10> col:10 'const RFC2507d::tcpip &'
`-CXXConstructorDecl 0x55cf65fb9448 <col:10> col:10 implicit constexpr tcpip 'void (RFC2507d::tcpip &&)' inline default trivial noexcept-unevaluated 0x55cf65fb9448
  `-ParmVarDecl 0x55cf65fb9558 <col:10> col:10 'RFC2507d::tcpip &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.RFC2507d::tcpip" = type { %struct.click_ip, %struct.click_tcp }
  NonVirtualBaseLLVMType:%"struct.RFC2507d::tcpip" = type { %struct.click_ip, %struct.click_tcp }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65fb6f98 <../elements/ip/rfc2507d.hh:52:3, line:54:3> line:52:10 struct ccb definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65fb70b8 <col:3, col:10> col:10 implicit struct ccb
|-FieldDecl 0x55cf65fb71a0 <line:53:5, col:18> col:18 _context 'struct tcpip':'RFC2507d::tcpip'
|-CXXConstructorDecl 0x55cf65fb8ec8 <line:52:10> col:10 implicit used ccb 'void () noexcept(false)' inline default
| |-CXXCtorInitializer Field 0x55cf65fb71a0 '_context' 'struct tcpip':'RFC2507d::tcpip'
| | `-CXXConstructExpr 0x55cf65fb9940 <col:10> 'struct tcpip':'RFC2507d::tcpip' 'void ()'
| `-CompoundStmt 0x55cf65fb9998 <col:10>
|-CXXConstructorDecl 0x55cf65fb95c8 <col:10> col:10 implicit constexpr ccb 'void (const RFC2507d::ccb &)' inline default trivial noexcept-unevaluated 0x55cf65fb95c8
| `-ParmVarDecl 0x55cf65fb96d8 <col:10> col:10 'const RFC2507d::ccb &'
|-CXXConstructorDecl 0x55cf65fb9778 <col:10> col:10 implicit constexpr ccb 'void (RFC2507d::ccb &&)' inline default trivial noexcept-unevaluated 0x55cf65fb9778
| `-ParmVarDecl 0x55cf65fb9888 <col:10> col:10 'RFC2507d::ccb &&'
`-CXXDestructorDecl 0x55cf65fb99d0 <col:10> col:10 implicit referenced ~ccb 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.RFC2507d::ccb" = type { %"struct.RFC2507d::tcpip" }
  NonVirtualBaseLLVMType:%"struct.RFC2507d::ccb" = type { %"struct.RFC2507d::tcpip" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65fb5f58 <../elements/ip/rfc2507d.hh:23:1, line:59:1> line:23:7 class RFC2507d definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55cf65fb60b8 <col:1, col:7> col:7 implicit referenced class RFC2507d
|-AccessSpecDecl 0x55cf65fb6148 <line:24:1, col:7> col:1 public
|-CXXRecordDecl 0x55cf65fb6170 <line:27:3, line:32:3> line:27:10 struct tcpip definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf65fb6288 <col:3, col:10> col:10 implicit referenced struct tcpip
| |-FieldDecl 0x55cf65fb6328 <line:28:5, col:14> col:14 referenced _ip 'click_ip'
| |-FieldDecl 0x55cf65fb6388 <line:29:5, col:15> col:15 _tcp 'click_tcp'
| |-CXXConversionDecl 0x55cf65fb6438 <line:30:5, col:61> col:5 operator bool 'bool () const'
| | `-CompoundStmt 0x55cf65fb8108 <col:27, col:61>
| |   `-ReturnStmt 0x55cf65fb80f8 <col:29, col:58>
| |     `-ParenExpr 0x55cf65fb80d8 <col:35, col:58> 'bool'
| |       `-BinaryOperator 0x55cf65fb80b8 <col:36, col:57> 'bool' '!='
| |         |-ImplicitCastExpr 0x55cf65fb8088 <col:36, col:47> 'in_addr_t':'unsigned int' <LValueToRValue>
| |         | `-MemberExpr 0x55cf65fb8038 <col:36, col:47> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x55cf65ccf9d0
| |         |   `-MemberExpr 0x55cf65fb8008 <col:36, col:40> 'const struct in_addr':'const in_addr' lvalue .ip_src 0x55cf65d985a8
| |         |     `-MemberExpr 0x55cf65fb7fd8 <col:36> 'const click_ip' lvalue ->_ip 0x55cf65fb6328
| |         |       `-CXXThisExpr 0x55cf65fb7fc8 <col:36> 'const RFC2507d::tcpip *' implicit this
| |         `-ImplicitCastExpr 0x55cf65fb80a0 <col:57> 'unsigned int' <IntegralCast>
| |           `-IntegerLiteral 0x55cf65fb8068 <col:57> 'int' 0
| |-CXXConstructorDecl 0x55cf65fb6550 <line:31:5, col:38> col:5 used tcpip 'void ()'
| | |-CXXCtorInitializer Field 0x55cf65fb6328 '_ip' 'click_ip'
| | | `-CXXConstructExpr 0x55cf65fb8628 <col:5> 'click_ip' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55cf65fb6388 '_tcp' 'click_tcp'
| | | `-CXXConstructExpr 0x55cf65fb8ad8 <col:5> 'click_tcp' 'void () noexcept'
| | `-CompoundStmt 0x55cf65fb8c30 <col:13, col:38>
| |   `-BinaryOperator 0x55cf65fb8c10 <col:15, col:35> 'in_addr_t':'unsigned int' lvalue '='
| |     |-MemberExpr 0x55cf65fb8ba8 <col:15, col:26> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55cf65ccf9d0
| |     | `-MemberExpr 0x55cf65fb8b78 <col:15, col:19> 'struct in_addr':'in_addr' lvalue .ip_src 0x55cf65d985a8
| |     |   `-MemberExpr 0x55cf65fb8b48 <col:15> 'click_ip' lvalue ->_ip 0x55cf65fb6328
| |     |     `-CXXThisExpr 0x55cf65fb8b38 <col:15> 'RFC2507d::tcpip *' implicit this
| |     `-ImplicitCastExpr 0x55cf65fb8bf8 <col:35> 'in_addr_t':'unsigned int' <IntegralCast>
| |       `-IntegerLiteral 0x55cf65fb8bd8 <col:35> 'int' 0
| |-CXXDestructorDecl 0x55cf65fb8fa0 <line:27:10> col:10 implicit ~tcpip 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55cf65fb9298 <col:10> col:10 implicit constexpr tcpip 'void (const RFC2507d::tcpip &)' inline default trivial noexcept-unevaluated 0x55cf65fb9298
| | `-ParmVarDecl 0x55cf65fb93a8 <col:10> col:10 'const RFC2507d::tcpip &'
| `-CXXConstructorDecl 0x55cf65fb9448 <col:10> col:10 implicit constexpr tcpip 'void (RFC2507d::tcpip &&)' inline default trivial noexcept-unevaluated 0x55cf65fb9448
|   `-ParmVarDecl 0x55cf65fb9558 <col:10> col:10 'RFC2507d::tcpip &&'
|-CXXConstructorDecl 0x55cf65fb6670 <line:34:3, col:12> col:3 RFC2507d 'void ()'
|-CXXDestructorDecl 0x55cf65fb6760 <line:35:3, col:13> col:3 ~RFC2507d 'void ()' noexcept-unevaluated 0x55cf65fb6760
| `-Overrides: [ 0x55cf65f9e1d8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55cf65fb6890 <line:37:3, col:60> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55cf65f9f638 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55cf65fb8c98 <col:34, col:60>
|   `-ReturnStmt 0x55cf65fb8c88 <col:36, col:43>
|     `-ImplicitCastExpr 0x55cf65fb8c70 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55cf65fb8c48 <col:43> 'const char [14]' lvalue "RFC2507Decomp"
|-CXXMethodDecl 0x55cf65fb6958 <line:38:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55cf65f9f700 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55cf65fb8cf8 <col:34, col:54>
|   `-ReturnStmt 0x55cf65fb8ce8 <col:36, col:43>
|     `-ImplicitCastExpr 0x55cf65fb8cd0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55cf65fb8cb0 <col:43> 'const char []' lvalue Var 0x55cf65f9f9b0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x55cf65fb6a98 <line:40:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55cf65f9e818 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55cf65fb6a08 <col:25, col:32> col:33 'Packet *'
|-AccessSpecDecl 0x55cf65fb6b40 <line:42:1, col:8> col:1 private
|-EnumDecl 0x55cf65fb6b68 <line:44:3, col:25> col:3
| `-EnumConstantDecl 0x55cf65fb6c70 <col:10, col:22> col:10 referenced TCP_SPACE 'RFC2507d::(anonymous enum at ../elements/ip/rfc2507d.hh:44:3)'
|   `-ImplicitCastExpr 0x55cf65fb6cc0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65fb6c50 <col:22> 'int' Int: 15
|       `-IntegerLiteral 0x55cf65fb6c30 <col:22> 'int' 15
|-EnumDecl 0x55cf65fb6cd8 <line:47:3, line:49:25> line:47:3
| |-EnumConstantDecl 0x55cf65fb6de0 <col:10, col:21> col:10 PT_OTHER 'RFC2507d::(anonymous enum at ../elements/ip/rfc2507d.hh:47:3)'
| | `-ImplicitCastExpr 0x55cf65fb6f50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fb6dc0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf65fb6da0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55cf65fb6e70 <line:48:3, col:20> col:3 PT_FULL_HEADER 'RFC2507d::(anonymous enum at ../elements/ip/rfc2507d.hh:47:3)'
| | `-ImplicitCastExpr 0x55cf65fb6f68 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65fb6e50 <col:20> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf65fb6e30 <col:20> 'int' 1
| `-EnumConstantDecl 0x55cf65fb6f00 <line:49:3, col:23> col:3 PT_COMPRESSED_TCP 'RFC2507d::(anonymous enum at ../elements/ip/rfc2507d.hh:47:3)'
|   `-ImplicitCastExpr 0x55cf65fb6f80 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65fb6ee0 <col:23> 'int' Int: 2
|       `-IntegerLiteral 0x55cf65fb6ec0 <col:23> 'int' 2
|-CXXRecordDecl 0x55cf65fb6f98 <line:52:3, line:54:3> line:52:10 struct ccb definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable can_const_default_init
| | |-DefaultConstructor exists non_trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf65fb70b8 <col:3, col:10> col:10 implicit struct ccb
| |-FieldDecl 0x55cf65fb71a0 <line:53:5, col:18> col:18 _context 'struct tcpip':'RFC2507d::tcpip'
| |-CXXConstructorDecl 0x55cf65fb8ec8 <line:52:10> col:10 implicit used ccb 'void () noexcept(false)' inline default
| | |-CXXCtorInitializer Field 0x55cf65fb71a0 '_context' 'struct tcpip':'RFC2507d::tcpip'
| | | `-CXXConstructExpr 0x55cf65fb9940 <col:10> 'struct tcpip':'RFC2507d::tcpip' 'void ()'
| | `-CompoundStmt 0x55cf65fb9998 <col:10>
| |-CXXConstructorDecl 0x55cf65fb95c8 <col:10> col:10 implicit constexpr ccb 'void (const RFC2507d::ccb &)' inline default trivial noexcept-unevaluated 0x55cf65fb95c8
| | `-ParmVarDecl 0x55cf65fb96d8 <col:10> col:10 'const RFC2507d::ccb &'
| |-CXXConstructorDecl 0x55cf65fb9778 <col:10> col:10 implicit constexpr ccb 'void (RFC2507d::ccb &&)' inline default trivial noexcept-unevaluated 0x55cf65fb9778
| | `-ParmVarDecl 0x55cf65fb9888 <col:10> col:10 'RFC2507d::ccb &&'
| `-CXXDestructorDecl 0x55cf65fb99d0 <col:10> col:10 implicit referenced ~ccb 'void () noexcept' inline default trivial
|-FieldDecl 0x55cf65fb76a8 <line:55:3, col:29> col:14 _ccbs 'struct ccb [15]'
|-CXXMethodDecl 0x55cf65fb7958 <line:57:3, col:51> col:8 decode 'void (const u_char *&, unsigned short &)'
| |-ParmVarDecl 0x55cf65fb77c0 <col:15, col:31> col:31 in 'const u_char *&'
| `-ParmVarDecl 0x55cf65fb7840 <col:35, col:50> col:51 'unsigned short &'
|-CXXMethodDecl 0x55cf65fb7bb8 <line:58:3, col:49> col:8 decode 'void (const u_char *&, unsigned int &)'
| |-ParmVarDecl 0x55cf65fb7a20 <col:15, col:31> col:31 in 'const u_char *&'
| `-ParmVarDecl 0x55cf65fb7aa0 <col:35, col:48> col:49 'unsigned int &'
|-CXXConstructorDecl 0x55cf65fb7c98 <line:23:7> col:7 implicit RFC2507d 'void (const RFC2507d &)' inline default_delete noexcept-unevaluated 0x55cf65fb7c98
| `-ParmVarDecl 0x55cf65fb7da8 <col:7> col:7 'const RFC2507d &'
`-CXXMethodDecl 0x55cf65fb7e48 <col:7> col:7 implicit operator= 'RFC2507d &(const RFC2507d &)' inline default_delete noexcept-unevaluated 0x55cf65fb7e48
  `-ParmVarDecl 0x55cf65fb7f58 <col:7> col:7 'const RFC2507d &'

Layout: <CGRecordLayout
  LLVMType:%class.RFC2507d = type { %class.Element.base, [15 x %"struct.RFC2507d::ccb"], [4 x i8] }
  NonVirtualBaseLLVMType:%class.RFC2507d.base = type { %class.Element.base, [15 x %"struct.RFC2507d::ccb"] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65d59bf0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65d59d08 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55cf65d59d98 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55cf65d59e68 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55cf65d59f50 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf65d5a168 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf65d5a010 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5a318 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55cf65d5a220 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cf65d5a460 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55cf65d5a3d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cf65d5a5a8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf65d5a518 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5a6f0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf65d5a660 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5a7b8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55cf65d5a900 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55cf65d5a870 <col:28> col:31 'int'
|-CXXMethodDecl 0x55cf65d5a9c8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55cf65d5ab10 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55cf65d5aa80 <col:28> col:31 'int'
|-CXXMethodDecl 0x55cf65d5ac88 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55cf65d5abc8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5add0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55cf65d5ad40 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5ae98 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55cf65d5b058 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf65d5af48 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf65d5afc0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5b2a8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf65d5b118 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf65d5b190 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf65d5b358 <col:86> "" ""
|-CXXMethodDecl 0x55cf65d5b5c8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55cf65d5b438 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55cf65d5b4b0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5b778 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55cf65d5b688 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55cf65d5b928 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55cf65d5b830 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55cf65d5bbf8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55cf65d5b9e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55cf65d5ba58 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf65d5bad0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5bed8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55cf65d5bcc0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55cf65d5bd38 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf65d5bdb0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf65d5bf90 <col:115> "" ""
|-AccessSpecDecl 0x55cf65d5c000 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55cf65d5c038 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65d5c540 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55cf65d5c540
| `-ParmVarDecl 0x55cf65d5c648 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55cf65d5c6e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55cf65d5c6e8
| `-ParmVarDecl 0x55cf65d5c7f8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55cf65d91c58 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf65f84fe0 <col:7>
|-CXXConstructorDecl 0x55cf65d91d30 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55cf65d91d30
| `-ParmVarDecl 0x55cf65d91e48 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55cf65d91eb8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55cf65d91eb8
| `-ParmVarDecl 0x55cf65d91fc8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55cf65f8a3f0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65f73b48 prev 0x55cf65f68810 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65f73c40 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55cf65f73d30 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55cf65f73e58 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55cf65f73fd8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55cf65f74158 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55cf65f742d8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55cf65f85148 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf65f859b8 <col:11>
|-CXXDestructorDecl 0x55cf65f85220 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55cf65f85358 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55cf65f85358
| `-ParmVarDecl 0x55cf65f85468 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55cf65f85508 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf65f85508
| `-ParmVarDecl 0x55cf65f85618 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55cf65f8ade8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf65f8aef8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55cf65f8b178 <col:11>
|   `-ReturnStmt 0x55cf65f8b168 <col:11>
|     `-UnaryOperator 0x55cf65f8b150 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cf65f8b140 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55cf65f8af68 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf65f8af68
  `-ParmVarDecl 0x55cf65f8b078 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65f74340 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65f74458 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55cf65f744f8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55cf65f74560 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55cf65f745c8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55cf65f74630 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55cf65f74690 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55cf65f74750 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55cf65f747b0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55cf65f74810 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55cf65f85058 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55cf65f744f8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55cf65f859c8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55cf65f85a20 <col:12>
|-CXXConstructorDecl 0x55cf65f85688 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55cf65f85688
| `-ParmVarDecl 0x55cf65f85798 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55cf65f85838 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55cf65f85838
| `-ParmVarDecl 0x55cf65f85948 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55cf65f8a4d0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65f61f20 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf65f62038 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55cf65f620c8 <col:16, col:22> col:16 public
|-EnumDecl 0x55cf65f620f0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55cf65f621f0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55cf65f622d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f621d0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55cf65f621b0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55cf65f62280 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55cf65f622e8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65f62260 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55cf65f62240 <col:22> 'int' 64
|-CXXMethodDecl 0x55cf65f62628 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55cf65f62310 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf65f62390 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55cf65f62408 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf65f62480 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf65f626e8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f628e8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55cf65f62760 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55cf65f627d8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf65f62998 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f62af8 <line:55:5, col:91> col:35 used make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55cf65f62a08 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf65f62ba0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55cf65f62f00 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55cf65f62e90 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55cf65f62e30 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55cf65f62df0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55cf65a3b4e0 'void'
|       |-PointerType 0x55cf65ce1f60 'unsigned char *'
|       | `-BuiltinType 0x55cf65a3b5e0 'unsigned char'
|       |-TypedefType 0x55cf65ade530 'size_t' sugar
|       | |-Typedef 0x55cf65aabbe0 'size_t'
|       | `-BuiltinType 0x55cf65a3b640 'unsigned long'
|       `-PointerType 0x55cf65a3bce0 'void *'
|         `-BuiltinType 0x55cf65a3b4e0 'void'
|-CXXMethodDecl 0x55cf65f63378 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55cf65f62f70 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55cf65f62fe8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf65f63080 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55cf65f63100 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55cf65f7dff0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55cf65f7dfd8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55cf65f7dfa0 <col:58> 'int' 0
| |-ParmVarDecl 0x55cf65f63180 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55cf65f7e018 <col:76> 'int' 0
| |-ParmVarDecl 0x55cf65f63200 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55cf65f7e038 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55cf65f63448 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f634c8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55cf65f63588 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55cf65f63628 <col:20>
| `-OptimizeNoneAttr 0x55cf65f63680 <col:30>
|-CXXMethodDecl 0x55cf65f636f8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55cf65f63798 <col:20>
| `-OptimizeNoneAttr 0x55cf65f637f0 <col:30>
|-CXXMethodDecl 0x55cf65f63868 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55cf65f63908 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f639b8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55cf65f63a58 <col:20>
| |-OptimizeNoneAttr 0x55cf65f63ab0 <col:30>
| `-WarnUnusedResultAttr 0x55cf65f63ad8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f63b30 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf65f63bd0 <col:20>
| `-OptimizeNoneAttr 0x55cf65f63c28 <col:30>
|-CXXMethodDecl 0x55cf65f63c78 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf65f63d18 <col:20>
| `-OptimizeNoneAttr 0x55cf65f63d70 <col:30>
|-CXXMethodDecl 0x55cf65f63db8 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x55cf65f63e58 <col:20>
| `-OptimizeNoneAttr 0x55cf65f63eb0 <col:30>
|-CXXMethodDecl 0x55cf65f63ef8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf65f63fb8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf65f64080 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf65f64148 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf65f64208 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf65f64328 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55cf65f7e100 <col:54, line:99:5>
|   `-ReturnStmt 0x55cf65f7e0f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55cf65f7e0d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55cf65f7e0a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf65f74b48
|         `-CXXThisExpr 0x55cf65f7e098 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55cf65f644c8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55cf65f643d8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55cf65f7e1b0 <col:67, line:103:5>
|   `-BinaryOperator 0x55cf65f7e190 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55cf65f7e128 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf65f74b48
|     | `-CXXThisExpr 0x55cf65f7e118 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55cf65f7e178 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55cf65f7e158 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55cf65f643d8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55cf65f645c0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55cf65f7e230 <col:33, line:107:5>
|   `-ReturnStmt 0x55cf65f7e220 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55cf65f7e208 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55cf65f7e1d8 <col:16> 'void *' lvalue ->_destructor_argument 0x55cf65f74bb0
|         `-CXXThisExpr 0x55cf65f7e1c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf65f64680 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55cf65f7e860 <col:25, line:113:5>
|   |-ParenExpr 0x55cf65f7e5a8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55cf65f7e578 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f7e2e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55cf65f7e2c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55cf65f7e288 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55cf65f7e258 <col:24> '<bound member function type>' ->shared 0x55cf65f636f8
|   |   |       `-ImplicitCastExpr 0x55cf65f7e2a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55cf65f7e248 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55cf65f7e348 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f7e328 <col:42> 'int' 0
|   |   `-CallExpr 0x55cf65f7e4d8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f7e4c0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f7e4a0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f7e518 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f7e3b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55cf65f7e530 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f7e3e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f7e548 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f7e418 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55cf65f7e560 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f7e488 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f7e470 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f7e438 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55cf65f7e7a8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55cf65f7e5d8 <col:2> 'unsigned char *' lvalue ->_head 0x55cf65f74950
|   | | `-CXXThisExpr 0x55cf65f7e5c8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55cf65f7e790 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55cf65f7e770 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55cf65f7e618 <col:10> 'unsigned char *' lvalue ->_data 0x55cf65f749b8
|   |     | `-CXXThisExpr 0x55cf65f7e608 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55cf65f7e758 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55cf65f7e738 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55cf65f7e658 <col:18> 'unsigned char *' lvalue ->_tail 0x55cf65f74a20
|   |         | `-CXXThisExpr 0x55cf65f7e648 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55cf65f7e720 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55cf65f7e700 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55cf65f7e698 <col:26> 'unsigned char *' lvalue ->_end 0x55cf65f74a88
|   |             | `-CXXThisExpr 0x55cf65f7e688 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55cf65f7e6e8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55cf65f7e6c8 <col:33> 'int' 0
|   `-BinaryOperator 0x55cf65f7e840 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55cf65f7e7d8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf65f74b48
|     | `-CXXThisExpr 0x55cf65f7e7c8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55cf65f7e828 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55cf65f7e808 <col:16> 'int' 0
|-CXXMethodDecl 0x55cf65f647c0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf65f64730 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf65f64868 <col:20>
| |-OptimizeNoneAttr 0x55cf65f648c0 <col:30>
| `-WarnUnusedResultAttr 0x55cf65f648e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f649b8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf65f64928 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf65f64a60 <col:20>
| |-OptimizeNoneAttr 0x55cf65f64ab8 <col:30>
| `-WarnUnusedResultAttr 0x55cf65f64ae0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f64c18 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55cf65f64b20 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf65f64cc0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f64dc0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55cf65f64d30 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf65f64e68 <col:20>
| `-OptimizeNoneAttr 0x55cf65f64ec0 <col:30>
|-CXXMethodDecl 0x55cf65f64f88 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf65f64ef8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf65f65030 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f65130 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55cf65f650a0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf65f651d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f652d8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55cf65f65248 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf65f65380 <col:20>
| `-OptimizeNoneAttr 0x55cf65f653d8 <col:30>
|-CXXMethodDecl 0x55cf65f65568 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55cf65f65418 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55cf65f65490 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55cf65f7e058 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55cf65f65618 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55cf65f65818 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf65f65690 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55cf65f65708 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65f65a28 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf65f658d8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf65f65950 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65f65c38 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55cf65f65ae8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55cf65f65b68 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55cf65f7e068 <col:39> 'int' 0
|-CXXMethodDecl 0x55cf65f65d08 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55cf65f65dd0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf65f65e98 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf65f65f58 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf65f66020 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55cf65f66168 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55cf65f660d8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55cf65f66338 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf65f66228 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55cf65f662a0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65f66408 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55cf65f664c8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55cf65f66568 <col:20>
| `-OptimizeNoneAttr 0x55cf65f665c0 <col:30>
|-CXXMethodDecl 0x55cf65f66610 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf65f666b0 <col:20>
| `-OptimizeNoneAttr 0x55cf65f66708 <col:30>
|-CXXMethodDecl 0x55cf65f66758 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf65f66818 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf65f668e0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55cf65f66980 <col:20>
| `-OptimizeNoneAttr 0x55cf65f669d8 <col:30>
|-CXXMethodDecl 0x55cf65f66b28 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf65f66a18 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55cf65f66a90 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65f66c78 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55cf65f66be8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65f66d50 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55cf65f66e10 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55cf65f66eb0 <col:20>
| `-OptimizeNoneAttr 0x55cf65f66f08 <col:30>
|-CXXMethodDecl 0x55cf65f66f58 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf65f66ff8 <col:20>
| `-OptimizeNoneAttr 0x55cf65f67050 <col:30>
|-CXXMethodDecl 0x55cf65f670a0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf65f67168 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55cf65f67208 <col:20>
| `-OptimizeNoneAttr 0x55cf65f67260 <col:30>
|-CXXMethodDecl 0x55cf65f672a8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55cf65f673c8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55cf65f67538 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55cf65f67478 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55cf65f67628 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55cf65f676c8 <col:20>
| `-OptimizeNoneAttr 0x55cf65f67720 <col:30>
|-CXXMethodDecl 0x55cf65f67770 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf65f67830 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf65f67a68 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55cf65f678e0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55cf65f67958 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf65f67b18 <col:20>
| `-OptimizeNoneAttr 0x55cf65f67b70 <col:30>
|-CXXMethodDecl 0x55cf65f67c18 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55cf65f67cb8 <col:20>
| `-OptimizeNoneAttr 0x55cf65f67d10 <col:30>
|-CXXMethodDecl 0x55cf65f67d60 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55cf65f67e00 <col:20>
| `-OptimizeNoneAttr 0x55cf65f67e58 <col:30>
|-CXXMethodDecl 0x55cf65f67ea0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55cf65f67f40 <col:20>
| `-OptimizeNoneAttr 0x55cf65f67f98 <col:30>
|-CXXMethodDecl 0x55cf65f68098 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55cf65f67fd0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55cf65f68140 <col:20>
| `-OptimizeNoneAttr 0x55cf65f68198 <col:30>
|-CXXMethodDecl 0x55cf65f68358 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55cf65f681d0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55cf65f68248 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf65f68408 <col:20>
| `-OptimizeNoneAttr 0x55cf65f68460 <col:30>
|-CXXMethodDecl 0x55cf65f68508 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55cf65f68628 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55cf65f68748 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55cf65f687e8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf65f68810 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55cf65f68938 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55cf65f689d8 <col:20>
| `-OptimizeNoneAttr 0x55cf65f68a30 <col:30>
|-CXXMethodDecl 0x55cf65f68ad8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55cf65f68b78 <col:20>
| `-OptimizeNoneAttr 0x55cf65f68bd0 <col:30>
|-AccessSpecDecl 0x55cf65f68bf8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55cf65f68c20 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55cf65f68d20 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55cf65f68d70 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65f68d00 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55cf65f68ce0 <col:14> 'int' 48
|-CXXMethodDecl 0x55cf65f68dd8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55cf65f68e78 <col:20>
| `-OptimizeNoneAttr 0x55cf65f68ed0 <col:30>
|-CXXMethodDecl 0x55cf65f68f48 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55cf65f68fe8 <col:20>
| `-OptimizeNoneAttr 0x55cf65f69040 <col:30>
|-CXXMethodDecl 0x55cf65f69108 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55cf65f69078 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55cf65f692a8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55cf65f69448 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55cf65f69358 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55cf65f694f0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55cf65f695f0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf65f699a0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f695d0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf65f695b0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55cf65f69680 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf65f699b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f69660 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf65f69640 <col:14> 'int' 1
| |-EnumConstantDecl 0x55cf65f69710 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf65f699d0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f696f0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf65f696d0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55cf65f697a0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf65f699e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f69780 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55cf65f69760 <col:14> 'int' 3
| |-EnumConstantDecl 0x55cf65f69830 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf65f69a00 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f69810 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf65f697f0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55cf65f698c0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf65f69a18 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f698a0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55cf65f69880 <col:13> 'int' 5
| `-EnumConstantDecl 0x55cf65f69950 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55cf65f69a30 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65f69930 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55cf65f69910 <col:14> 'int' 6
|-CXXMethodDecl 0x55cf65f69a98 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55cf65f69b38 <col:20>
| `-OptimizeNoneAttr 0x55cf65f69b90 <col:30>
|-CXXMethodDecl 0x55cf65f69c88 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55cf65f69bc8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55cf65f69d30 <col:20>
| `-OptimizeNoneAttr 0x55cf65f69d88 <col:30>
|-CXXMethodDecl 0x55cf65f69df8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55cf65f69f20 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55cf65f6a098 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55cf65f69fd0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55cf65f6a160 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55cf65f6a228 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55cf65f6a368 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55cf65f6a2d8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55cf65f6a410 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55cf65f6a510 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf65f6a710 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6a4f0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf65f6a4d0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55cf65f6a5a0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf65f6a728 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6a580 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf65f6a560 <col:45> 'int' 4
| |-EnumConstantDecl 0x55cf65f6a630 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf65f6a740 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6a610 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf65f6a5f0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55cf65f6a6c0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55cf65f6a758 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65f6a6a0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55cf65f6a680 <col:47> 'int' 16
|-CXXMethodDecl 0x55cf65f6a7b8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55cf65f6a928 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55cf65f6a868 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55cf65f6a9d0 <col:20>
| `-OptimizeNoneAttr 0x55cf65f6aa28 <col:30>
|-CXXMethodDecl 0x55cf65f6aa78 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55cf65f7e980 <col:18, col:36>
|   `-ReturnStmt 0x55cf65f7e970 <col:20, col:33>
|     `-ImplicitCastExpr 0x55cf65f7e958 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55cf65f7e938 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55cf65f7e908 <col:27> '<bound member function type>' ->xanno 0x55cf65f68ad8
|           `-CXXThisExpr 0x55cf65f7e8f8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf65f6ab70 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55cf65f7ea90 <col:30, col:48>
|   `-ReturnStmt 0x55cf65f7ea80 <col:32, col:45>
|     `-ImplicitCastExpr 0x55cf65f7ea68 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55cf65f7ea48 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55cf65f7ea18 <col:39> '<bound member function type>' ->xanno 0x55cf65f68938
|           `-CXXThisExpr 0x55cf65f7ea08 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55cf65f6ac58 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55cf65f7ec28 <col:24, col:50>
|   `-ReturnStmt 0x55cf65f7ec18 <col:26, col:47>
|     `-UnaryOperator 0x55cf65f7ec00 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf65f7ebe0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf65f7ebc8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf65f7eb78 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55cf65f73e58
|         |   `-CXXMemberCallExpr 0x55cf65f7eb58 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55cf65f7eb28 <col:34> '<bound member function type>' ->xanno 0x55cf65f68ad8
|         |       `-CXXThisExpr 0x55cf65f7eb18 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55cf65f7eba8 <col:46> 'int' 0
|-CXXMethodDecl 0x55cf65f6ad60 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55cf65f7edf8 <col:36, col:62>
|   `-ReturnStmt 0x55cf65f7ede8 <col:38, col:59>
|     `-UnaryOperator 0x55cf65f7edd0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf65f7edb0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf65f7ed98 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf65f7ed10 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55cf65f73e58
|         |   `-CXXMemberCallExpr 0x55cf65f7ecf0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf65f7ecc0 <col:46> '<bound member function type>' ->xanno 0x55cf65f68938
|         |       `-CXXThisExpr 0x55cf65f7ecb0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55cf65f7ed40 <col:58> 'int' 0
|-CXXMethodDecl 0x55cf65f6ae78 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55cf65f7ef90 <col:26, col:53>
|   `-ReturnStmt 0x55cf65f7ef80 <col:28, col:50>
|     `-UnaryOperator 0x55cf65f7ef68 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf65f7ef48 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55cf65f7ef30 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf65f7eee0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55cf65f74158
|         |   `-CXXMemberCallExpr 0x55cf65f7eec0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55cf65f7ee90 <col:36> '<bound member function type>' ->xanno 0x55cf65f68ad8
|         |       `-CXXThisExpr 0x55cf65f7ee80 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55cf65f7ef10 <col:49> 'int' 0
|-CXXMethodDecl 0x55cf65f6af98 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55cf65f7f168 <col:38, col:65>
|   `-ReturnStmt 0x55cf65f7f158 <col:40, col:62>
|     `-UnaryOperator 0x55cf65f7f140 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf65f7f120 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55cf65f7f108 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf65f7f078 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55cf65f74158
|         |   `-CXXMemberCallExpr 0x55cf65f7f058 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf65f7f028 <col:48> '<bound member function type>' ->xanno 0x55cf65f68938
|         |       `-CXXThisExpr 0x55cf65f7f018 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55cf65f7f0a8 <col:61> 'int' 0
|-CXXMethodDecl 0x55cf65f6b148 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55cf65f6b050 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55cf65f7f838 <col:34, line:463:5>
|   |-ParenExpr 0x55cf65f7f680 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55cf65f7f650 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f7f2b8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f7f288 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f7f1d8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f7f1c0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f7f180 <col:23> 'int' lvalue ParmVar 0x55cf65f6b050 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f7f1a0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f7f268 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f7f238 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f7f1f8 <col:33> 'int' lvalue ParmVar 0x55cf65f6b050 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55cf65f7f250 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55cf65f7f218 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55cf65f7f318 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f7f2f8 <col:56> 'int' 0
|   |   `-CallExpr 0x55cf65f7f5b0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f7f598 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f7f578 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f7f5f0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f7f408 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55cf65f7f608 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f7f438 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f7f620 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f7f470 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55cf65f7f638 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f7f560 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f7f548 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f7f508 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55cf65f7f828 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55cf65f7f810 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55cf65f7f7f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf65f7f7c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf65f7f770 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55cf65f73e58
|         |   `-CXXMemberCallExpr 0x55cf65f7f750 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf65f7f720 <col:9> '<bound member function type>' ->xanno 0x55cf65f68938
|         |       `-CXXThisExpr 0x55cf65f7f710 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55cf65f7f7d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55cf65f7f7a0 <col:21> 'int' lvalue ParmVar 0x55cf65f6b050 'i' 'int'
|-CXXMethodDecl 0x55cf65f6b398 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55cf65f6b208 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55cf65f6b280 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55cf65f7fec8 <col:40, line:472:5>
|   |-ParenExpr 0x55cf65f7fce0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55cf65f7fcb0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f7f990 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f7f960 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f7f8b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f7f898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f7f858 <col:23> 'int' lvalue ParmVar 0x55cf65f6b208 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f7f878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f7f940 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f7f910 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f7f8d0 <col:33> 'int' lvalue ParmVar 0x55cf65f6b208 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55cf65f7f928 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55cf65f7f8f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55cf65f7f9f0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f7f9d0 <col:56> 'int' 0
|   |   `-CallExpr 0x55cf65f7fc10 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f7fbf8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f7fbd8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f7fc50 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f7fa60 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55cf65f7fc68 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f7fa90 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f7fc80 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f7fac8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55cf65f7fc98 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f7fbc0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f7fba8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f7fb68 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55cf65f7fea8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55cf65f7fe50 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55cf65f7fe20 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55cf65f7fdd0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55cf65f73e58
|     | |   `-CXXMemberCallExpr 0x55cf65f7fdb0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55cf65f7fd80 <col:2> '<bound member function type>' ->xanno 0x55cf65f68ad8
|     | |       `-CXXThisExpr 0x55cf65f7fd70 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55cf65f7fe38 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cf65f7fe00 <col:14> 'int' lvalue ParmVar 0x55cf65f6b208 'i' 'int'
|     `-ImplicitCastExpr 0x55cf65f7fe90 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55cf65f7fe70 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55cf65f6b280 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55cf65f6b558 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55cf65f6b460 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf65f80648 <col:36, line:485:5>
|   |-ParenExpr 0x55cf65f803b0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f80380 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f80060 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f80030 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f7ff40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f7ff28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f7fee8 <col:23> 'int' lvalue ParmVar 0x55cf65f6b460 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f7ff08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f80010 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f7fff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f7ff60 <col:33> 'int' lvalue ParmVar 0x55cf65f6b460 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f7ffd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f7ffc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f7ff80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f7ffa0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf65f800c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f800a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f802e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f802c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f802a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f80320 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f80130 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf65f80338 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f80168 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f80350 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f801a0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55cf65f80368 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f80290 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f80278 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f80238 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55cf65f80638 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55cf65f80620 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55cf65f80608 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf65f805d8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55cf65f80578 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf65f80548 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf65f804c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf65f73d30
|             |   `-CXXMemberCallExpr 0x55cf65f804a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf65f80470 <col:61> '<bound member function type>' ->xanno 0x55cf65f68938
|             |       `-CXXThisExpr 0x55cf65f80460 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf65f80560 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf65f804f0 <col:74> 'int' lvalue ParmVar 0x55cf65f6b460 'i' 'int'
|-CXXMethodDecl 0x55cf65f6b7a8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55cf65f6b618 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf65f6b690 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55cf65f80d98 <col:42, line:500:5>
|   |-ParenExpr 0x55cf65f80b30 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f80b00 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f807e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f807b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f806c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f806a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f80668 <col:23> 'int' lvalue ParmVar 0x55cf65f6b618 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f80688 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f80790 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f80778 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f806e0 <col:33> 'int' lvalue ParmVar 0x55cf65f6b618 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f80758 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f80740 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f80700 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f80720 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf65f80840 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f80820 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f80a60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f80a48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f80a28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f80aa0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f808b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf65f80ab8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f808e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f80ad0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f80920 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55cf65f80ae8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f80a10 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f809f8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f809b8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55cf65f80d78 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55cf65f80d28 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf65f80cf8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf65f80ca0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf65f80c70 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf65f80c20 <col:48, col:57> 'char [48]' lvalue ->c 0x55cf65f73d30
|     |     |   `-CXXMemberCallExpr 0x55cf65f80c00 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf65f80bd0 <col:48> '<bound member function type>' ->xanno 0x55cf65f68ad8
|     |     |       `-CXXThisExpr 0x55cf65f80bc0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf65f80c88 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf65f80c50 <col:61> 'int' lvalue ParmVar 0x55cf65f6b618 'i' 'int'
|     `-ImplicitCastExpr 0x55cf65f80d60 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55cf65f80d40 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55cf65f6b690 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55cf65f6b968 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55cf65f6b870 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55cf65f814f8 <col:35, line:513:5>
|   |-ParenExpr 0x55cf65f81208 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f811d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f80f30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f80f00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f80e10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f80df8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f80db8 <col:23> 'int' lvalue ParmVar 0x55cf65f6b870 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f80dd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f80ee0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f80ec8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f80e30 <col:33> 'int' lvalue ParmVar 0x55cf65f6b870 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f80ea8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f80e90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f80e50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f80e70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf65f80f90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f80f70 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f81138 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f81120 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f81100 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f81178 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f81000 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf65f81190 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f81038 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f811a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f81070 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55cf65f811c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f810e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f810d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f81090 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55cf65f814e8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55cf65f814d0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55cf65f814b8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf65f81488 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55cf65f81400 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf65f813d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf65f81380 <col:60, col:69> 'char const[48]' lvalue ->c 0x55cf65f73d30
|             |   `-CXXMemberCallExpr 0x55cf65f81360 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf65f81330 <col:60> '<bound member function type>' ->xanno 0x55cf65f68938
|             |       `-CXXThisExpr 0x55cf65f81320 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf65f813e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf65f813b0 <col:73> 'int' lvalue ParmVar 0x55cf65f6b870 'i' 'int'
|-CXXMethodDecl 0x55cf65f6bbb8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55cf65f6ba28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf65f6baa0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55cf65f81c18 <col:41, line:528:5>
|   |-ParenExpr 0x55cf65f819a0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f81970 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f81690 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f81660 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f81570 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f81558 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f81518 <col:23> 'int' lvalue ParmVar 0x55cf65f6ba28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f81538 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f81640 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f81628 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f81590 <col:33> 'int' lvalue ParmVar 0x55cf65f6ba28 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f81608 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f815f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f815b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f815d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf65f816f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f816d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f818d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f818b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f81898 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f81910 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f81760 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf65f81928 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f81798 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f81940 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f817d0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55cf65f81958 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f81880 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f81868 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f81828 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55cf65f81bf8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55cf65f81ba8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf65f81b78 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf65f81b20 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf65f81ae0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf65f81a90 <col:47, col:56> 'char [48]' lvalue ->c 0x55cf65f73d30
|     |     |   `-CXXMemberCallExpr 0x55cf65f81a70 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf65f81a40 <col:47> '<bound member function type>' ->xanno 0x55cf65f68ad8
|     |     |       `-CXXThisExpr 0x55cf65f81a30 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf65f81af8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf65f81ac0 <col:60> 'int' lvalue ParmVar 0x55cf65f6ba28 'i' 'int'
|     `-ImplicitCastExpr 0x55cf65f81be0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55cf65f81bc0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55cf65f6baa0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55cf65f6bd78 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55cf65f6bc80 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf65f822e8 <col:36, line:541:5>
|   |-ParenExpr 0x55cf65f82088 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f82058 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f81db0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f81d80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f81c90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f81c78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f81c38 <col:23> 'int' lvalue ParmVar 0x55cf65f6bc80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f81c58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f81d60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f81d48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f81cb0 <col:33> 'int' lvalue ParmVar 0x55cf65f6bc80 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f81d28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f81d10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f81cd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f81cf0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf65f81e10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f81df0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f81fb8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f81fa0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f81f80 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f81ff8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f81e80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf65f82010 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f81eb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f82028 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f81ef0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55cf65f82040 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f81f68 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f81f50 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f81f10 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55cf65f822d8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55cf65f822c0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55cf65f822a8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf65f82278 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55cf65f82220 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf65f821f0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf65f821a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf65f73d30
|             |   `-CXXMemberCallExpr 0x55cf65f82180 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf65f82150 <col:61> '<bound member function type>' ->xanno 0x55cf65f68938
|             |       `-CXXThisExpr 0x55cf65f82140 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf65f82208 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf65f821d0 <col:74> 'int' lvalue ParmVar 0x55cf65f6bc80 'i' 'int'
|-CXXMethodDecl 0x55cf65f6bf48 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55cf65f6be38 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55cf65f6beb0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf65f6bff8 <col:20>
| `-OptimizeNoneAttr 0x55cf65f6c050 <col:30>
|-CXXMethodDecl 0x55cf65f6c188 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55cf65f6c090 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55cf65f829b8 <col:35, line:562:5>
|   |-ParenExpr 0x55cf65f82758 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f82728 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f82480 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f82450 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f82360 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f82348 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f82308 <col:23> 'int' lvalue ParmVar 0x55cf65f6c090 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f82328 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f82430 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f82418 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f82380 <col:33> 'int' lvalue ParmVar 0x55cf65f6c090 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f823f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f823e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f823a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f823c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf65f824e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f824c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f82688 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f82670 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f82650 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f826c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f82550 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf65f826e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f82588 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f826f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f825c0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55cf65f82710 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f82638 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f82620 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f825e0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55cf65f829a8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55cf65f82990 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55cf65f82978 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf65f82948 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55cf65f828f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf65f828c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf65f82870 <col:60, col:69> 'char const[48]' lvalue ->c 0x55cf65f73d30
|             |   `-CXXMemberCallExpr 0x55cf65f82850 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf65f82820 <col:60> '<bound member function type>' ->xanno 0x55cf65f68938
|             |       `-CXXThisExpr 0x55cf65f82810 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf65f828d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf65f828a0 <col:73> 'int' lvalue ParmVar 0x55cf65f6c090 'i' 'int'
|-CXXMethodDecl 0x55cf65f6c398 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55cf65f6c248 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf65f6c2c0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55cf65f83098 <col:41, line:577:5>
|   |-ParenExpr 0x55cf65f82e28 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f82df8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f82b50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f82b20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f82a30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f82a18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f829d8 <col:23> 'int' lvalue ParmVar 0x55cf65f6c248 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f829f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f82b00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f82ae8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f82a50 <col:33> 'int' lvalue ParmVar 0x55cf65f6c248 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f82ac8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f82ab0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f82a70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f82a90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf65f82bb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f82b90 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f82d58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f82d40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f82d20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f82d98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f82c20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf65f82db0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f82c58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f82dc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f82c90 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55cf65f82de0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f82d08 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f82cf0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f82cb0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55cf65f83078 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55cf65f83028 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf65f82ff8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf65f82f98 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf65f82f68 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf65f82f18 <col:47, col:56> 'char [48]' lvalue ->c 0x55cf65f73d30
|     |     |   `-CXXMemberCallExpr 0x55cf65f82ef8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf65f82ec8 <col:47> '<bound member function type>' ->xanno 0x55cf65f68ad8
|     |     |       `-CXXThisExpr 0x55cf65f82eb8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf65f82f80 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf65f82f48 <col:60> 'int' lvalue ParmVar 0x55cf65f6c248 'i' 'int'
|     `-ImplicitCastExpr 0x55cf65f83060 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf65f83040 <col:65> 'int32_t':'int' lvalue ParmVar 0x55cf65f6c2c0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55cf65f6c558 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55cf65f6c460 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf65f837c8 <col:36, line:591:5>
|   |-ParenExpr 0x55cf65f83508 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f834d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f83230 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f83200 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f83110 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f830f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f830b8 <col:23> 'int' lvalue ParmVar 0x55cf65f6c460 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f830d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f831e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f831c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f83130 <col:33> 'int' lvalue ParmVar 0x55cf65f6c460 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f831a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f83190 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f83150 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f83170 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55cf65f83290 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f83270 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f83438 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f83420 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f83400 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f83478 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f83300 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55cf65f83490 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f83338 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f834a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f83370 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55cf65f834c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f833e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f833d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f83390 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55cf65f837b8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55cf65f837a0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55cf65f83788 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf65f83758 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55cf65f836d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf65f836a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf65f83650 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf65f73d30
|             |   `-CXXMemberCallExpr 0x55cf65f83630 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf65f83600 <col:61> '<bound member function type>' ->xanno 0x55cf65f68938
|             |       `-CXXThisExpr 0x55cf65f835f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf65f836b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf65f83680 <col:74> 'int' lvalue ParmVar 0x55cf65f6c460 'i' 'int'
|-CXXMethodDecl 0x55cf65f6c7a8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55cf65f6c618 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf65f6c690 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55cf65f83ea8 <col:42, line:606:5>
|   |-ParenExpr 0x55cf65f83c38 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf65f83c08 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f83960 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f83930 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f83840 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f83828 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f837e8 <col:23> 'int' lvalue ParmVar 0x55cf65f6c618 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f83808 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f83910 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf65f838f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f83860 <col:33> 'int' lvalue ParmVar 0x55cf65f6c618 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f838d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f838c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f83880 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf65f838a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55cf65f839c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f839a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf65f83b68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f83b50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f83b30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f83ba8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f83a30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55cf65f83bc0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f83a68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f83bd8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f83aa0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55cf65f83bf0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f83b18 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f83b00 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f83ac0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55cf65f83e88 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55cf65f83e38 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf65f83e08 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf65f83da8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf65f83d78 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf65f83d28 <col:48, col:57> 'char [48]' lvalue ->c 0x55cf65f73d30
|     |     |   `-CXXMemberCallExpr 0x55cf65f83d08 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf65f83cd8 <col:48> '<bound member function type>' ->xanno 0x55cf65f68ad8
|     |     |       `-CXXThisExpr 0x55cf65f83cc8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf65f83d90 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf65f83d58 <col:61> 'int' lvalue ParmVar 0x55cf65f6c618 'i' 'int'
|     `-ImplicitCastExpr 0x55cf65f83e70 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55cf65f83e50 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55cf65f6c690 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55cf65f6c940 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55cf65f6c870 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55cf65f84718 <col:33, line:620:5>
|   |-ParenExpr 0x55cf65f84490 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55cf65f84460 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f840b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f84080 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f83f20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f83f08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f83ec8 <col:23> 'int' lvalue ParmVar 0x55cf65f6c870 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f83ee8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f84060 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55cf65f84048 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f83f40 <col:33> 'int' lvalue ParmVar 0x55cf65f6c870 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f84028 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f84010 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f83f60 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55cf65f83fe8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55cf65f83fd0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55cf65f83f98 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55cf65f84110 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f840f0 <col:79> 'int' 0
|   |   `-CallExpr 0x55cf65f843c0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f843a8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f84388 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f84400 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f841f8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55cf65f84418 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f84240 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f84430 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f84278 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55cf65f84448 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f84370 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f84358 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f84318 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55cf65f84708 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55cf65f846f0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55cf65f846d8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf65f846a8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55cf65f84620 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf65f845f0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf65f845a0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55cf65f73d30
|             |   `-CXXMemberCallExpr 0x55cf65f84580 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf65f84550 <col:67> '<bound member function type>' ->xanno 0x55cf65f68938
|             |       `-CXXThisExpr 0x55cf65f84540 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf65f84608 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf65f845d0 <col:80> 'int' lvalue ParmVar 0x55cf65f6c870 'i' 'int'
|-CXXMethodDecl 0x55cf65f6cb58 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55cf65f6ca00 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf65f6ca80 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55cf65f84f40 <col:45, line:635:5>
|   |-ParenExpr 0x55cf65f84c88 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55cf65f84c58 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55cf65f84920 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf65f848f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf65f84790 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf65f84778 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf65f84738 <col:23> 'int' lvalue ParmVar 0x55cf65f6ca00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf65f84758 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf65f848d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55cf65f848b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf65f847b0 <col:33> 'int' lvalue ParmVar 0x55cf65f6ca00 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf65f84898 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf65f84880 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf65f847d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf65f68d20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55cf65f84858 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55cf65f84840 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55cf65f84808 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55cf65f84980 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf65f84960 <col:79> 'int' 0
|   |   `-CallExpr 0x55cf65f84bb8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55cf65f84ba0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf65f84b80 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf65f84bf8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f849f0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55cf65f84c10 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf65f84a38 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf65f84c28 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf65f84a70 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55cf65f84c40 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf65f84b68 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf65f84b50 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf65f84b08 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55cf65f84f20 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55cf65f84e88 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf65f84e58 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf65f84df8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf65f84dc8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf65f84d78 <col:54, col:63> 'char [48]' lvalue ->c 0x55cf65f73d30
|     |     |   `-CXXMemberCallExpr 0x55cf65f84d58 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf65f84d28 <col:54> '<bound member function type>' ->xanno 0x55cf65f68ad8
|     |     |       `-CXXThisExpr 0x55cf65f84d18 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf65f84de0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf65f84da8 <col:67> 'int' lvalue ParmVar 0x55cf65f6ca00 'i' 'int'
|     `-CXXConstCastExpr 0x55cf65f84ef0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55cf65f84ed8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55cf65f84ea0 <col:91> 'const void *' lvalue ParmVar 0x55cf65f6ca80 'x' 'const void *'
|-CXXMethodDecl 0x55cf65f6cc28 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55cf65f84fc8 <col:34, line:640:5>
|   `-ReturnStmt 0x55cf65f84fb8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55cf65f84fa0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55cf65f84f70 <col:16> 'Packet *' lvalue ->_data_packet 0x55cf65f748e8
|         `-CXXThisExpr 0x55cf65f84f60 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf65f6cd68 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55cf65f6ccd8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf65f7e088 <col:46> 'bool' true
|-CXXMethodDecl 0x55cf65f6cee8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55cf65f6ce20 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55cf65f6cf90 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55cf65f6d740 <line:660:22> "" ""
| |-EnumConstantDecl 0x55cf65f6d090 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d7b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d070 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55cf65f6d050 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55cf65f621f0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55cf65f6d120 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d7c8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d100 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55cf65f6d0e0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55cf65f62280 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55cf65f6d1b0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d7e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d190 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf65f6d170 <col:21> 'int' 0
| |-EnumConstantDecl 0x55cf65f6d240 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d7f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d220 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55cf65f6d200 <col:19> 'int' 16
| |-EnumConstantDecl 0x55cf65f6d2d0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d810 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d2b0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55cf65f6d290 <col:21> 'int' 16
| |-EnumConstantDecl 0x55cf65f6d360 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d828 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d340 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55cf65f6d320 <col:19> 'int' 32
| |-EnumConstantDecl 0x55cf65f6d3f0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d840 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d3d0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55cf65f6d3b0 <col:19> 'int' EnumConstant 0x55cf65f6d240 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55cf65f6d480 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d858 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d460 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55cf65f6d440 <col:19> 'int' EnumConstant 0x55cf65f6d360 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55cf65f6d550 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d870 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d530 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55cf65f6d510 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55cf65f6d4d0 <col:23> 'int' EnumConstant 0x55cf65f6d480 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55cf65f6d4f0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55cf65f6d620 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf65f6d888 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf65f6d600 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55cf65f6d5e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55cf65f6d5a0 <col:23> 'int' EnumConstant 0x55cf65f6d480 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55cf65f6d5c0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55cf65f6d6f0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55cf65f6d8a0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65f6d6d0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55cf65f6d6b0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55cf65f6d670 <col:23> 'int' EnumConstant 0x55cf65f6d480 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55cf65f6d690 <col:40> 'int' 8
|-CXXMethodDecl 0x55cf65f6d8e0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55cf65f6d980 <col:68> "" ""
|-CXXMethodDecl 0x55cf65f6da18 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55cf65f6dab8 <col:45> "" ""
|-CXXMethodDecl 0x55cf65f6db50 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55cf65f6dbf0 <col:57> "" ""
|-CXXMethodDecl 0x55cf65f6dc88 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55cf65f6dd28 <col:45> "" ""
|-CXXMethodDecl 0x55cf65f6ddc0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55cf65f6de60 <col:57> "" ""
|-CXXMethodDecl 0x55cf65f6def0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55cf65f6df90 <col:51> "" ""
|-CXXMethodDecl 0x55cf65f6e020 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55cf65f6e0c0 <col:63> "" ""
|-CXXMethodDecl 0x55cf65f6e150 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55cf65f6e1f0 <col:53> "" ""
|-CXXMethodDecl 0x55cf65f6e280 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55cf65f6e320 <col:65> "" ""
|-CXXMethodDecl 0x55cf65f6e438 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55cf65f6e3a8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55cf65f6e4e0 <col:61> "" ""
|-CXXMethodDecl 0x55cf65f6e678 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55cf65f6e568 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55cf65f6e5e0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55cf65f6e728 <col:67> "" ""
|-CXXMethodDecl 0x55cf65f6e840 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55cf65f6e7b0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf65f6e8e8 <col:63> "" ""
|-CXXMethodDecl 0x55cf65f6ea80 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55cf65f6e970 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf65f6e9e8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55cf65f6eb30 <col:69> "" ""
|-CXXMethodDecl 0x55cf65f6ec48 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55cf65f6ebb8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf65f6ecf0 <col:63> "" ""
|-CXXMethodDecl 0x55cf65f71908 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cf65f717f8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf65f71870 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf65f719b8 <col:69> "" ""
|-CXXMethodDecl 0x55cf65f71ad0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55cf65f71a40 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55cf65f71b78 <col:62> "" ""
|-CXXMethodDecl 0x55cf65f71d10 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55cf65f71c00 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf65f71c78 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55cf65f71dc0 <col:68> "" ""
|-CXXMethodDecl 0x55cf65f71ed8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55cf65f71e48 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf65f71f80 <col:63> "" ""
|-CXXMethodDecl 0x55cf65f72118 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55cf65f72008 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf65f72080 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55cf65f721c8 <col:69> "" ""
|-CXXMethodDecl 0x55cf65f72258 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55cf65f722f8 <col:64> "" ""
|-CXXMethodDecl 0x55cf65f72388 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55cf65f72428 <col:52> "" ""
|-CXXMethodDecl 0x55cf65f724b8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55cf65f72558 <col:67> "" ""
|-CXXMethodDecl 0x55cf65f725e8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55cf65f72688 <col:55> "" ""
|-CXXMethodDecl 0x55cf65f727a0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55cf65f72710 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf65f72848 <col:58> "" ""
|-CXXMethodDecl 0x55cf65f729e0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55cf65f728d0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf65f72948 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55cf65f72a90 <col:62> "" ""
|-CXXMethodDecl 0x55cf65f72ba8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55cf65f72b18 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf65f72c50 <col:58> "" ""
|-CXXMethodDecl 0x55cf65f72de8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55cf65f72cd8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf65f72d50 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55cf65f72e98 <col:62> "" ""
|-CXXMethodDecl 0x55cf65f72fb0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55cf65f72f20 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55cf65f73058 <col:60> "" ""
|-CXXMethodDecl 0x55cf65f731f0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55cf65f730e0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55cf65f73158 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55cf65f732a0 <col:64> "" ""
|-CXXMethodDecl 0x55cf65f733b8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55cf65f73328 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf65f73460 <col:58> "" ""
|-CXXMethodDecl 0x55cf65f735f8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55cf65f734e8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf65f73560 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55cf65f736a8 <col:62> "" ""
|-CXXMethodDecl 0x55cf65f737c0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55cf65f73730 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55cf65f73868 <col:59> "" ""
|-CXXMethodDecl 0x55cf65f73a00 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cf65f738f0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf65f73968 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf65f73ab0 <col:63> "" ""
|-AccessSpecDecl 0x55cf65f73b20 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf65f73b48 prev 0x55cf65f68810 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf65f73c40 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55cf65f73d30 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55cf65f73e58 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55cf65f73fd8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55cf65f74158 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55cf65f742d8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55cf65f85148 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cf65f859b8 <col:11>
| |-CXXDestructorDecl 0x55cf65f85220 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55cf65f85358 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55cf65f85358
| | `-ParmVarDecl 0x55cf65f85468 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55cf65f85508 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf65f85508
| | `-ParmVarDecl 0x55cf65f85618 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55cf65f8ade8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf65f8aef8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55cf65f8b178 <col:11>
| |   `-ReturnStmt 0x55cf65f8b168 <col:11>
| |     `-UnaryOperator 0x55cf65f8b150 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cf65f8b140 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55cf65f8af68 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf65f8af68
|   `-ParmVarDecl 0x55cf65f8b078 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55cf65f74340 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf65f74458 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55cf65f744f8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55cf65f74560 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55cf65f745c8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55cf65f74630 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55cf65f74690 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55cf65f74750 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55cf65f747b0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55cf65f74810 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55cf65f85058 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55cf65f744f8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55cf65f859c8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55cf65f85a20 <col:12>
| |-CXXConstructorDecl 0x55cf65f85688 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55cf65f85688
| | `-ParmVarDecl 0x55cf65f85798 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55cf65f85838 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55cf65f85838
| | `-ParmVarDecl 0x55cf65f85948 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55cf65f8a4d0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55cf65f74888 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55cf65f748e8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55cf65f74950 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55cf65f749b8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55cf65f74a20 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55cf65f74a88 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55cf65f74ae8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55cf65f74b48 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55cf65f74bb0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55cf65f74c38 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55cf65f74888 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55cf65f84ff0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55cf65f74ae8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55cf65f85a30 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55cf65f85a90 <col:21, line:755:5>
|-CXXConstructorDecl 0x55cf65f74dd8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55cf65f74d18 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55cf65f74ed0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55cf65f750b8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55cf65f74fc0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55cf65f75388 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55cf65f75170 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf65f751e8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf65f75260 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65f755a8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55cf65f75458 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55cf65f754d0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55cf65f7dbc8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55cf65f75668 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55cf65f756e0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55cf65f75758 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55cf65f7dd20 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55cf65f7dc90 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65f7de68 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55cf65f7ddd8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55cf65f7df60 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65f88540 prev 0x55cf65f61e70 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55cf65f88678 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55cf65f88708 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55cf65f887b0 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x55cf65f88850 <col:20>
| `-OptimizeNoneAttr 0x55cf65f888a8 <col:30>
|-CXXMethodDecl 0x55cf65f888f8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55cf65f88998 <col:20>
| `-OptimizeNoneAttr 0x55cf65f889f0 <col:30>
|-CXXMethodDecl 0x55cf65f88a40 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55cf65f88b08 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55cf65f88bd0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55cf65f88ce8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55cf65f88db0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55cf65f88e50 <col:20>
| `-OptimizeNoneAttr 0x55cf65f88ea8 <col:30>
|-CXXMethodDecl 0x55cf65f88f18 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55cf65f88fb8 <col:20>
| `-OptimizeNoneAttr 0x55cf65f89010 <col:30>
|-CXXMethodDecl 0x55cf65f890b8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55cf65f89158 <col:20>
| `-OptimizeNoneAttr 0x55cf65f891b0 <col:30>
|-CXXMethodDecl 0x55cf65f89200 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55cf65f89318 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55cf65f89438 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55cf65f89558 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55cf65f89620 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55cf65f896c0 <col:62> "" ""
|-AccessSpecDecl 0x55cf65f89730 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55cf65f89790 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55cf65f8a388 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55cf65f8a5b0 <col:29, col:31>
|-CXXMethodDecl 0x55cf65f89858 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55cf65f89998 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55cf65f89908 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55cf65f89a90 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55cf65f8a5c0 <col:23, col:25>
|-CXXMethodDecl 0x55cf65f89c48 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55cf65f89b80 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55cf65f89f18 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55cf65f89d00 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf65f89d78 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf65f89df0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf65f8a0a8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55cf65f89fe0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55cf65f8a1a0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55cf65f8a208 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55cf65f8a208
  `-ParmVarDecl 0x55cf65f8a318 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65d6df90 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55cf65d6e0a8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55cf65d6e148 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55cf65d6e1a8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55cf65d6e208 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55cf65d6e2b8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65d6e5c0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf65d6e6d8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55cf65d6e780 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55cf65d6e7e8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55cf65d6e878 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55cf65d74780 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf65d74bb8 <col:12>
|-CXXConstructorDecl 0x55cf65d74888 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf65d74998 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf65d6e780 'data' 'const char *'
| | `-ImplicitCastExpr 0x55cf65d77140 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55cf65d77110 <col:12> 'const char *const' lvalue .data 0x55cf65d6e780
| |     `-DeclRefExpr 0x55cf65d770f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d74998 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf65d6e7e8 'length' 'int'
| | `-ImplicitCastExpr 0x55cf65d771d0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55cf65d771a0 <col:12> 'const int' lvalue .length 0x55cf65d6e7e8
| |     `-DeclRefExpr 0x55cf65d77180 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d74998 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf65d6e878 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55cf65d77260 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55cf65d77230 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf65d6e878
| |     `-DeclRefExpr 0x55cf65d77210 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d74998 '' 'const String::rep_t &'
| `-CompoundStmt 0x55cf65d772b8 <col:12>
|-CXXConstructorDecl 0x55cf65d74a38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf65d74a38
| `-ParmVarDecl 0x55cf65d74b48 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55cf65d7a0a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cf65d85ab8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf65d85bc8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55cf65d860e0 <col:12>
|   |-BinaryOperator 0x55cf65d85ef8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55cf65d85eb0 <col:12> 'const char *' lvalue ->data 0x55cf65d6e780
|   | | `-CXXThisExpr 0x55cf65d85ea0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf65d85ee0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55cf65d85e70 <col:12> 'const char *const' lvalue .data 0x55cf65d6e780
|   |     `-DeclRefExpr 0x55cf65d85e50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d85bc8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55cf65d85fc0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55cf65d85f78 <col:12> 'int' lvalue ->length 0x55cf65d6e7e8
|   | | `-CXXThisExpr 0x55cf65d85f68 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf65d85fa8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55cf65d85f38 <col:12> 'const int' lvalue .length 0x55cf65d6e7e8
|   |     `-DeclRefExpr 0x55cf65d85f18 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d85bc8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55cf65d86088 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55cf65d86040 <col:12> 'String::memo_t *' lvalue ->memo 0x55cf65d6e878
|   | | `-CXXThisExpr 0x55cf65d86030 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf65d86070 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55cf65d86000 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf65d6e878
|   |     `-DeclRefExpr 0x55cf65d85fe0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d85bc8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55cf65d860d0 <col:12>
|     `-UnaryOperator 0x55cf65d860b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cf65d860a8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55cf65d85c38 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf65d85c38
  `-ParmVarDecl 0x55cf65d85d48 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf65d65540 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf65d65658 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55cf65d656e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55cf65d65728 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55cf65a3bfd0 'const char *'
|   `-QualType 0x55cf65a3b521 'const char' const
|     `-BuiltinType 0x55cf65a3b520 'char'
|-TypedefDecl 0x55cf65d657b0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55cf65d65780 'String::const_iterator' sugar
|   |-Typedef 0x55cf65d65728 'const_iterator'
|   `-PointerType 0x55cf65a3bfd0 'const char *'
|     `-QualType 0x55cf65a3b521 'const char' const
|       `-BuiltinType 0x55cf65a3b520 'char'
|-TypedefDecl 0x55cf65d65920 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55cf65d65890 'int (String::*)() const'
|   |-RecordType 0x55cf65d655d0 'String'
|   | `-CXXRecord 0x55cf65d65540 'String'
|   `-ParenType 0x55cf65d65830 'int () const' sugar
|     `-FunctionProtoType 0x55cf65d3a3d0 'int () const' const cdecl
|       `-BuiltinType 0x55cf65a3b580 'int'
|-TypedefDecl 0x55cf65d65988 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55cf65b8ea80 'int64_t' sugar
|   |-Typedef 0x55cf65aa4390 'int64_t'
|   `-TypedefType 0x55cf65a7d630 '__int64_t' sugar
|     |-Typedef 0x55cf65a7d208 '__int64_t'
|     `-BuiltinType 0x55cf65a3b5a0 'long'
|-TypedefDecl 0x55cf65d659f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55cf65b8e9a0 'uint64_t' sugar
|   |-Typedef 0x55cf65aa4530 'uint64_t'
|   `-TypedefType 0x55cf65a7d6c0 '__uint64_t' sugar
|     |-Typedef 0x55cf65a7d278 '__uint64_t'
|     `-BuiltinType 0x55cf65a3b640 'unsigned long'
|-TypedefDecl 0x55cf65d65a80 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55cf65d65a50 'String::intmax_t' sugar
|   |-Typedef 0x55cf65d65988 'intmax_t'
|   `-TypedefType 0x55cf65b8ea80 'int64_t' sugar
|     |-Typedef 0x55cf65aa4390 'int64_t'
|     `-TypedefType 0x55cf65a7d630 '__int64_t' sugar
|       |-Typedef 0x55cf65a7d208 '__int64_t'
|       `-BuiltinType 0x55cf65a3b5a0 'long'
|-TypedefDecl 0x55cf65d65b10 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55cf65d65ae0 'String::uintmax_t' sugar
|   |-Typedef 0x55cf65d659f0 'uintmax_t'
|   `-TypedefType 0x55cf65b8e9a0 'uint64_t' sugar
|     |-Typedef 0x55cf65aa4530 'uint64_t'
|     `-TypedefType 0x55cf65a7d6c0 '__uint64_t' sugar
|       |-Typedef 0x55cf65a7d278 '__uint64_t'
|       `-BuiltinType 0x55cf65a3b640 'unsigned long'
|-CXXConstructorDecl 0x55cf65d65bd0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55cf65d65d78 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55cf65d65cb8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55cf65d65f28 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55cf65d65e68 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55cf65d66080 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55cf65d65ff0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55cf65d66298 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55cf65d66148 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55cf65d661c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55cf65d664b8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55cf65d66368 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55cf65d663e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55cf65d666d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55cf65d66588 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55cf65d66608 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55cf65d668f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55cf65d667a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55cf65d66828 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55cf65d66a88 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55cf65d669c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55cf65d66c08 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55cf65d66b48 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55cf65d66d98 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55cf65d66cd0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55cf65d66ef0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55cf65d66e60 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55cf65d67048 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55cf65d66fb8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55cf65d671a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55cf65d67110 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55cf65d67328 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55cf65d67268 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55cf65d674b8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55cf65d673f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55cf65d67648 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55cf65d67580 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55cf65d677d8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55cf65d67710 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55cf65d678d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55cf65d679f8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55cf65d67b78 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55cf65d67ab0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55cf65d67cc8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55cf65d67c38 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55cf65d67d80 <col:63> "" ""
|-CXXMethodDecl 0x55cf65d67ec8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55cf65d67e08 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55cf65d680d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55cf65d67f88 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55cf65d68008 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55cf65d682f8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55cf65d681a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55cf65d68220 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55cf65d685d8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55cf65d683b8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55cf65d68438 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55cf65d74250 <col:55> 'int' 10
| `-ParmVarDecl 0x55cf65d684b0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf65d74270 <col:76> 'bool' true
|-CXXMethodDecl 0x55cf65d688b8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55cf65d686a0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55cf65d68720 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55cf65d74280 <col:56> 'int' 10
| `-ParmVarDecl 0x55cf65d68798 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf65d742a0 <col:77> 'bool' true
|-CXXMethodDecl 0x55cf65d689c0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55cf65d68a88 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55cf65d68b50 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55cf65d68bf0 <col:20>
| `-OptimizeNoneAttr 0x55cf65d68c48 <col:30>
|-CXXConversionDecl 0x55cf65d68d38 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55cf65d68e08 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55cf65d68ec8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55cf65d68fb8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55cf65d69078 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55cf65d691f8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55cf65d69130 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55cf65d69348 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55cf65d692b8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55cf65d69438 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55cf65d694f8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55cf65d69748 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55cf65d695b0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55cf65d69630 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55cf65d699a8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55cf65d69810 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55cf65d69890 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55cf65d69a78 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf65d69c88 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55cf65d69b30 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55cf65d69bb0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55cf65d69ea8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55cf65d69d50 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55cf65d69dd0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55cf65d6a038 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55cf65d69f70 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55cf65d6a128 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55cf65d6a298 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55cf65d6a1d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf65d6a4a8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55cf65d6a358 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55cf65d6a3d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55cf65d6a6c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55cf65d6a568 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55cf65d6a5e0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55cf65d6a850 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55cf65d6a780 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf65d6aa70 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55cf65d6a910 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55cf65d6a990 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55cf65d6abc0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55cf65d6ab30 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55cf65d6ad98 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55cf65d6ac80 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55cf65d6ad00 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55cf65d6aee8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55cf65d6ae58 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55cf65d6b100 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55cf65d6afa0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55cf65d6b020 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55cf65d742b0 <col:39> 'int' 0
|-CXXMethodDecl 0x55cf65d6b320 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55cf65d6b1c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55cf65d6b240 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55cf65d742d0 <col:48> 'int' 0
|-CXXMethodDecl 0x55cf65d6b500 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55cf65d6b3e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55cf65d6b460 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55cf65d742f0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55cf65d6b5d0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55cf65d6b690 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55cf65d6b750 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55cf65d6b810 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55cf65d6b8d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55cf65d6ba78 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55cf65d6b980 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55cf65d6bbf8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55cf65d6bb30 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55cf65d6bd90 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55cf65d6bcb8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55cf65d6bf08 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55cf65d6be48 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55cf65d6c050 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55cf65d6bfc0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf65d6c1a0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55cf65d6c110 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55cf65d6c378 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55cf65d6c260 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55cf65d6c2e0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55cf65d6c558 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55cf65d6c440 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55cf65d6c4c0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55cf65d6c6a8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55cf65d6c618 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55cf65d6c8b8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55cf65d6c768 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55cf65d6c7e8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55cf65d6ca18 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55cf65d6c980 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55cf65d6cb70 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55cf65d6cad8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55cf65d6cc18 <col:57> "" ""
|-CXXMethodDecl 0x55cf65d6cd28 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55cf65d6cc98 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55cf65d6ce78 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55cf65d6cde8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55cf65d6cff8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55cf65d6cf30 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55cf65d6d0c0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55cf65d6d180 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55cf65d6d240 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55cf65d6d2e0 <col:49> "" ""
|-CXXMethodDecl 0x55cf65d6d370 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55cf65d6d430 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55cf65d6d520 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55cf65d6d5e8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55cf65d6d6a8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55cf65d6d768 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55cf65d6d860 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55cf65d6d928 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55cf65d6d9f0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55cf65d6dbc8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55cf65d6daa8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55cf65d6db28 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55cf65d6ddf0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55cf65d6dc90 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55cf65d6dd10 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55cf65d6df00 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55cf65d6df68 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf65d6df90 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf65d6e0a8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55cf65d6e148 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55cf65d6e1a8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55cf65d6e208 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55cf65d6e2b8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55cf65d6e320 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55cf65d6e558 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55cf65d6e5a8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65d6e538 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55cf65d6e448 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55cf65d6e3f0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55cf65d6e430 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55cf65d6e410 <col:32> 'int' 8
|-CXXRecordDecl 0x55cf65d6e5c0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf65d6e6d8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55cf65d6e780 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55cf65d6e7e8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55cf65d6e878 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55cf65d74780 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cf65d74bb8 <col:12>
| |-CXXConstructorDecl 0x55cf65d74888 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf65d74998 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf65d6e780 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55cf65d77140 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55cf65d77110 <col:12> 'const char *const' lvalue .data 0x55cf65d6e780
| | |     `-DeclRefExpr 0x55cf65d770f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d74998 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf65d6e7e8 'length' 'int'
| | | `-ImplicitCastExpr 0x55cf65d771d0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55cf65d771a0 <col:12> 'const int' lvalue .length 0x55cf65d6e7e8
| | |     `-DeclRefExpr 0x55cf65d77180 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d74998 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf65d6e878 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55cf65d77260 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55cf65d77230 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf65d6e878
| | |     `-DeclRefExpr 0x55cf65d77210 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d74998 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55cf65d772b8 <col:12>
| |-CXXConstructorDecl 0x55cf65d74a38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf65d74a38
| | `-ParmVarDecl 0x55cf65d74b48 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55cf65d7a0a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55cf65d85ab8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf65d85bc8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55cf65d860e0 <col:12>
| |   |-BinaryOperator 0x55cf65d85ef8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55cf65d85eb0 <col:12> 'const char *' lvalue ->data 0x55cf65d6e780
| |   | | `-CXXThisExpr 0x55cf65d85ea0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf65d85ee0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf65d85e70 <col:12> 'const char *const' lvalue .data 0x55cf65d6e780
| |   |     `-DeclRefExpr 0x55cf65d85e50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d85bc8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55cf65d85fc0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55cf65d85f78 <col:12> 'int' lvalue ->length 0x55cf65d6e7e8
| |   | | `-CXXThisExpr 0x55cf65d85f68 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf65d85fa8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf65d85f38 <col:12> 'const int' lvalue .length 0x55cf65d6e7e8
| |   |     `-DeclRefExpr 0x55cf65d85f18 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d85bc8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55cf65d86088 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55cf65d86040 <col:12> 'String::memo_t *' lvalue ->memo 0x55cf65d6e878
| |   | | `-CXXThisExpr 0x55cf65d86030 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf65d86070 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf65d86000 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf65d6e878
| |   |     `-DeclRefExpr 0x55cf65d85fe0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf65d85bc8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55cf65d860d0 <col:12>
| |     `-UnaryOperator 0x55cf65d860b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cf65d860a8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55cf65d85c38 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf65d85c38
|   `-ParmVarDecl 0x55cf65d85d48 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55cf65d6e8f0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55cf65d6eb38 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55cf65d6e958 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55cf65d6e9d8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55cf65d6ea50 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55cf65d74740 <col:79, line:261:5>
|   |-BinaryOperator 0x55cf65d743b8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55cf65d74350 <col:2, col:5> 'const char *' lvalue .data 0x55cf65d6e780
|   | | `-MemberExpr 0x55cf65d74320 <col:2> 'String::rep_t' lvalue ->_r 0x55cf65d6e8f0
|   | |   `-CXXThisExpr 0x55cf65d74310 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55cf65d743a0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf65d74380 <col:12> 'const char *' lvalue ParmVar 0x55cf65d6e958 'data' 'const char *'
|   |-BinaryOperator 0x55cf65d74480 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55cf65d74418 <col:2, col:5> 'int' lvalue .length 0x55cf65d6e7e8
|   | | `-MemberExpr 0x55cf65d743e8 <col:2> 'String::rep_t' lvalue ->_r 0x55cf65d6e8f0
|   | |   `-CXXThisExpr 0x55cf65d743d8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55cf65d74468 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf65d74448 <col:14> 'int' lvalue ParmVar 0x55cf65d6e9d8 'length' 'int'
|   `-IfStmt 0x55cf65d74728 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55cf65d745a0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55cf65d74588 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55cf65d74568 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55cf65d74548 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55cf65d744e0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55cf65d6e878
|     |       | `-MemberExpr 0x55cf65d744b0 <col:7> 'String::rep_t' lvalue ->_r 0x55cf65d6e8f0
|     |       |   `-CXXThisExpr 0x55cf65d744a0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55cf65d74530 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55cf65d74510 <col:17> 'String::memo_t *' lvalue ParmVar 0x55cf65d6ea50 'memo' 'String::memo_t *'
|     `-CallExpr 0x55cf65d74700 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55cf65d746e8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf65d745f0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55cf65d5d5a8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55cf65d74658 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf65d6e148
|         `-ImplicitCastExpr 0x55cf65d74640 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55cf65d74620 <col:27> 'String::memo_t *' lvalue ParmVar 0x55cf65d6ea50 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55cf65d6ede8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55cf65d6ec08 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55cf65d6ec88 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55cf65d6ed00 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55cf65d6e8f0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55cf65d74bc8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf65d74d58 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55cf65d74cc0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55cf65d74c30 <col:2> '<bound member function type>' ->assign_memo 0x55cf65d6eb38
|     | `-ImplicitCastExpr 0x55cf65d74cf8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55cf65d74c20 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55cf65d74d10 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf65d74c60 <col:14> 'const char *' lvalue ParmVar 0x55cf65d6ec08 'data' 'const char *'
|     |-ImplicitCastExpr 0x55cf65d74d28 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf65d74c80 <col:20> 'int' lvalue ParmVar 0x55cf65d6ec88 'length' 'int'
|     `-ImplicitCastExpr 0x55cf65d74d40 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55cf65d74ca0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55cf65d6ed00 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55cf65d6ef78 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55cf65d6eeb8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55cf65d74fb0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55cf65d74f30 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55cf65d74d80 <col:2> '<bound member function type>' ->assign_memo 0x55cf65d6eb38
|     | `-CXXThisExpr 0x55cf65d74d70 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55cf65d74f68 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55cf65d74e00 <col:14, col:19> 'const char *' lvalue .data 0x55cf65d6e780
|     |   `-MemberExpr 0x55cf65d74dd0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55cf65d6e8f0
|     |     `-DeclRefExpr 0x55cf65d74db0 <col:14> 'const String' lvalue ParmVar 0x55cf65d6eeb8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55cf65d74f80 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55cf65d74e80 <col:25, col:30> 'int' lvalue .length 0x55cf65d6e7e8
|     |   `-MemberExpr 0x55cf65d74e50 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55cf65d6e8f0
|     |     `-DeclRefExpr 0x55cf65d74e30 <col:25> 'const String' lvalue ParmVar 0x55cf65d6eeb8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55cf65d74f98 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55cf65d74f00 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55cf65d6e878
|         `-MemberExpr 0x55cf65d74ed0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55cf65d6e8f0
|           `-DeclRefExpr 0x55cf65d74eb0 <col:38> 'const String' lvalue ParmVar 0x55cf65d6eeb8 'x' 'const String &'
|-CXXMethodDecl 0x55cf65d6f040 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55cf65d75970 <col:31, line:278:5>
|   `-IfStmt 0x55cf65d75958 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55cf65d75050 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55cf65d75038 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55cf65d75008 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55cf65d6e878
|     |     `-MemberExpr 0x55cf65d74fd8 <col:6> 'String::rep_t' lvalue ->_r 0x55cf65d6e8f0
|     |       `-CXXThisExpr 0x55cf65d74fc8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55cf65d75930 <col:15, line:277:2>
|       |-ParenExpr 0x55cf65d75500 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55cf65d754d0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55cf65d75160 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55cf65d75148 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55cf65d75130 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55cf65d750f0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf65d6e148
|       |   |       `-ImplicitCastExpr 0x55cf65d750d8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55cf65d750a8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55cf65d6e878
|       |   |           `-MemberExpr 0x55cf65d75078 <col:27> 'String::rep_t' lvalue ->_r 0x55cf65d6e8f0
|       |   |             `-CXXThisExpr 0x55cf65d75068 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55cf65d751c0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55cf65d751a0 <col:54> 'int' 0
|       |   `-CallExpr 0x55cf65d75430 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55cf65d75418 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55cf65d75398 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf65ad5290 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55cf65d75470 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55cf65d752a8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55cf65d75488 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55cf65d752d8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55cf65d754a0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55cf65d75310 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55cf65d754b8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55cf65d75380 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55cf65d75368 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55cf65d75330 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55cf65d75850 <line:274:6, line:275:22>
|       | |-CallExpr 0x55cf65d75710 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55cf65d756f8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55cf65d75670 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55cf65d5e9f0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55cf65d75640 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf65d6e148
|       | |   `-ImplicitCastExpr 0x55cf65d75628 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55cf65d755f8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55cf65d6e878
|       | |       `-MemberExpr 0x55cf65d755c8 <col:40> 'String::rep_t' lvalue ->_r 0x55cf65d6e8f0
|       | |         `-CXXThisExpr 0x55cf65d755b8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55cf65d75810 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55cf65d757f8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55cf65d75738 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55cf65d73690 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55cf65d75838 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55cf65d75798 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55cf65d6e878
|       |       `-MemberExpr 0x55cf65d75768 <col:15> 'String::rep_t' lvalue ->_r 0x55cf65d6e8f0
|       |         `-CXXThisExpr 0x55cf65d75758 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55cf65d75910 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55cf65d758a8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55cf65d6e878
|         | `-MemberExpr 0x55cf65d75878 <col:6> 'String::rep_t' lvalue ->_r 0x55cf65d6e8f0
|         |   `-CXXThisExpr 0x55cf65d75868 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55cf65d758f8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55cf65d758d8 <col:16> 'int' 0
|-CXXMethodDecl 0x55cf65d6f2d8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55cf65d6f0f8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55cf65d6f178 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55cf65d6f1f0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55cf65d6f3b0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55cf65d6f600 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55cf65d6f468 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55cf65d6f4e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55cf65d6f560 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55cf65d6f7e8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55cf65d6f6d0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55cf65d6f750 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55cf65d6f8e8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55cf65d75a48 <col:41, line:286:5>
|   `-ReturnStmt 0x55cf65d75a38 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55cf65d75a08 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55cf65d759d0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55cf65d759b8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55cf65d75998 <col:46> 'int' 1
|-CXXMethodDecl 0x55cf65d6fb88 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55cf65d6f9a0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55cf65d6fa20 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55cf65d6faa0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55cf65d73690 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55cf65d6fc50 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55cf65d73760 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55cf65d73930 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55cf65d73818 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55cf65d73898 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55cf65d739f0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55cf65d73ab8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55cf65d73bb8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55cf65d73c30 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55cf65d73ca8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55cf65d73d10 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55cf65d73e10 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55cf65d73e60 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf65d73df0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55cf65d73dd0 <col:22> 'int' 14
|-CXXMethodDecl 0x55cf65d74078 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55cf65d73e90 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55cf65d73f10 <col:38> col:41 'int'
| `-ParmVarDecl 0x55cf65d73f90 <col:43> col:46 'int'
|-FriendDecl 0x55cf65d74180 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55cf65d74210 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
