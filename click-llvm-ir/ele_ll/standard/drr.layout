
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d54858 prev 0x55ea34d4c0d8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34d54950 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55ea34d549e0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55ea34d54a58 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55ea34d54b18 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55ea34d54be0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55ea34d54d58 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55ea34d54c90 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55ea34d54e00 <col:24>
| `-OptimizeNoneAttr 0x55ea34d54e58 <col:34>
|-CXXMethodDecl 0x55ea34d54ea0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55ea34d55158 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55ea34d54f50 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55ea34d54fc8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55ea34d55048 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55ea34d55210 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55ea34d55248 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55ea34d552b0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55ea34d55338 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55ea34d55670 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55ea34d553f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55ea34d55468 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55ea34d554e0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55ea34d55560 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55ea34d55780 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55ea34d5c068 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55ea34d5c068
| `-ParmVarDecl 0x55ea34d5c178 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55ea34d5c218 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55ea34d5c218
| `-ParmVarDecl 0x55ea34d5c328 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55ea34e16368 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d47b50 prev 0x55ea34d478f0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea34d47c48 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55ea34d47cd8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55ea34d47d38 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55ea34d47e28 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55ea34d47f28 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55ea34d480f8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55ea34d47fa8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55ea34d48020 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55ea34d48288 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55ea34d481c0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55ea34d48330 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55ea34d48468 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55ea34d483a0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55ea34d48608 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55ea34d48548 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55ea34d487a8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55ea34d486e8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55ea34d48850 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55ea34d48950 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55ea34d48a30 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d48930 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55ea34d48910 <col:26> 'int' 1
| `-EnumConstantDecl 0x55ea34d489e0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55ea34d48a48 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34d489c0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55ea34d489a0 <col:44> 'int' 2
|-CXXMethodDecl 0x55ea34d48b90 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55ea34d48a78 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55ea34d48af8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55ea34d48ce8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55ea34d48c58 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55ea34d48ef8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55ea34d48da8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55ea34d48e20 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55ea34d48fa8 <col:20>
| `-OptimizeNoneAttr 0x55ea34d49000 <col:30>
|-CXXMethodDecl 0x55ea34d49108 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55ea34d49040 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55ea34d491b0 <col:20>
| `-OptimizeNoneAttr 0x55ea34d49208 <col:30>
|-CXXMethodDecl 0x55ea34d49258 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55ea34d49320 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55ea34d493e0 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55ea34d49468 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55ea34d494f0 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55ea34d49578 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55ea34d49600 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55ea34d49690 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55ea34d49750 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55ea34d497d8 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55ea34d49860 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x55ea34d498e8 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55ea34d49970 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55ea34d499f8 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55ea34d49a88 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55ea34d49b48 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55ea34d49bd8 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55ea34d49d28 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55ea34d49c90 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55ea34d49eb0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55ea34d49de8 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55ea34d4a150 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55ea34d49f68 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55ea34d49fe8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55ea34d4a068 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55ea34d4a208 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55ea34d4a310 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55ea34d4a5a0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d4a2f0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55ea34d4a2d0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55ea34d4a3a0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55ea34d4a5b8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d4a380 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55ea34d4a360 <col:32> 'int' 20
| |-EnumConstantDecl 0x55ea34d4a430 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55ea34d4a5d0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d4a410 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55ea34d4a3f0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55ea34d4a4c0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55ea34d4a5e8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d4a4a0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55ea34d4a480 <col:35> 'int' 100
| `-EnumConstantDecl 0x55ea34d4a550 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55ea34d4a600 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34d4a530 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55ea34d4a510 <col:32> 'int' 2000
|-CXXMethodDecl 0x55ea34d4a640 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55ea34d4a950 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55ea34d4a7c0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55ea34d4a838 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34d4aa20 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55ea34d4aba0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55ea34d4aad0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34d4ada8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55ea34d4ac58 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55ea34d4acd0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34d4aea8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55ea34d4af48 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55ea34d4b010 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ea34d4b0a0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55ea34d4b2d0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d4b080 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55ea34d4b060 <col:36> 'int' EnumConstant 0x55ea34d4b010 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ea34d4b0f0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ea34d4b140 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ea34d4b190 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ea34d4b1e0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ea34d4b230 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55ea34d4b280 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55ea34d4b3b8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55ea34d4b2f8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55ea34d4b480 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55ea34d4b540 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55ea34d4b600 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55ea34d4b6c0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55ea34d4b7a8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55ea34d4b870 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55ea34d4b9f0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55ea34d4b920 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55ea34d4bb18 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55ea34d4bd18 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55ea34d4bbc8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55ea34d4bc48 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55ea34d58538 <col:54, line:127:5>
|   |-ParenExpr 0x55ea34d583e8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55ea34d583b8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d580a0 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55ea34d58078 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55ea34d58060 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55ea34d58048 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55ea34d58018 <col:31> 'Router *' lvalue ->_router 0x55ea34d55f30
|   |   |         `-CXXThisExpr 0x55ea34d58008 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55ea34d58100 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d580e0 <col:48> 'int' 0
|   |   `-CallExpr 0x55ea34d58318 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d58300 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d582e0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d58358 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d58170 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55ea34d58370 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d58190 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55ea34d58388 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d581c8 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55ea34d583a0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d582c8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d582b0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d58268 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55ea34d58480 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55ea34d58418 <col:9> 'Router *' lvalue ->_router 0x55ea34d55f30
|   | | `-CXXThisExpr 0x55ea34d58408 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d58468 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ea34d58448 <col:19> 'Router *' lvalue ParmVar 0x55ea34d4bbc8 'r' 'Router *'
|   `-BinaryOperator 0x55ea34d58518 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55ea34d584b0 <col:9> 'int' lvalue ->_eindex 0x55ea34d55f98
|     | `-CXXThisExpr 0x55ea34d584a0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55ea34d58500 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34d584e0 <col:19> 'int' lvalue ParmVar 0x55ea34d4bc48 'eindex' 'int'
|-CXXMethodDecl 0x55ea34d4bea0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55ea34d4bdd8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55ea34d4bf70 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55ea34d4c038 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55ea34d4c0d8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55ea34d4c328 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55ea34d4c1a0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55ea34d4c220 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55ea34d4c3d8 <col:20>
| `-OptimizeNoneAttr 0x55ea34d4c430 <col:30>
|-CXXMethodDecl 0x55ea34d4c538 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55ea34d4c470 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55ea34d4c5e0 <col:20>
| `-OptimizeNoneAttr 0x55ea34d4c638 <col:30>
|-CXXMethodDecl 0x55ea34d4c708 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55ea34d4c678 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55ea34d4c7b0 <col:20>
| `-OptimizeNoneAttr 0x55ea34d4c808 <col:30>
|-CXXMethodDecl 0x55ea34d4c998 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55ea34d4c840 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55ea34d4c8c0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55ea34d4cb28 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55ea34d4ca60 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55ea34d4cc78 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55ea34d4cbe8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55ea34d4cdc8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55ea34d4cd38 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55ea34d4cf18 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55ea34d4ce88 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55ea34d4d1d8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55ea34d4cfd0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55ea34d4d050 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55ea34d4d0f8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55ea34d4d2b0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55ea34d4d370 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55ea34d4d658 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55ea34d4d4f0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55ea34d4d568 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34d4d788 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55ea34d4d960 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55ea34d4d840 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55ea34d4d8c0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55ea34d4db48 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55ea34d4da28 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55ea34d4daa8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55ea34d4deb8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55ea34d4dc08 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55ea34d4dc80 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55ea34d4dd00 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55ea34d57b18 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55ea34d57af8 <col:106> 'int' 0
| `-ParmVarDecl 0x55ea34d4dd78 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ea34d57b50 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ea34d57b30 <col:126> 'int' 0
|-CXXMethodDecl 0x55ea34d4e238 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55ea34d4df88 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55ea34d4e000 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55ea34d4e080 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55ea34d4e0f8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ea34d57b88 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ea34d57b68 <col:114> 'int' 0
|-CXXMethodDecl 0x55ea34d4e5c8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55ea34d4e310 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55ea34d4e388 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55ea34d4e408 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55ea34d57ba0 <col:96> 'int' 0
| `-ParmVarDecl 0x55ea34d4e480 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ea34d57be0 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ea34d57bc0 <col:116> 'int' 0
|-CXXMethodDecl 0x55ea34d4e948 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55ea34d4e698 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55ea34d4e710 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34d4e790 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55ea34d57c18 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55ea34d57bf8 <col:109> 'int' 0
| `-ParmVarDecl 0x55ea34d4e808 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ea34d57c50 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ea34d57c30 <col:129> 'int' 0
|-CXXMethodDecl 0x55ea34d4ecc8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55ea34d4ea18 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55ea34d4ea90 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34d4eb10 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55ea34d4eb88 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ea34d57c88 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ea34d57c68 <col:117> 'int' 0
|-CXXMethodDecl 0x55ea34d4f058 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55ea34d4eda0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d4ee18 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34d4ee98 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55ea34d57ca0 <col:99> 'int' 0
| `-ParmVarDecl 0x55ea34d4ef10 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ea34d57ce0 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ea34d57cc0 <col:119> 'int' 0
|-CXXMethodDecl 0x55ea34d4f478 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55ea34d4f128 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55ea34d4f1a8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55ea34d4f220 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34d4f2a0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55ea34d57d18 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55ea34d57cf8 <col:108> 'int' 0
| `-ParmVarDecl 0x55ea34d4f320 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55ea34d57d50 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55ea34d57d30 <col:141> 'int' 0
|-CXXMethodDecl 0x55ea34d4f898 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55ea34d4f550 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55ea34d4f5d0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55ea34d4f648 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34d4f6c8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55ea34d4f748 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55ea34d57d68 <col:121> 'int' 0
|-CXXMethodDecl 0x55ea34d4fcc8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55ea34d4f978 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55ea34d4f9f8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55ea34d4fa70 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34d4faf0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55ea34d57d88 <col:98> 'int' 0
| `-ParmVarDecl 0x55ea34d4fb70 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55ea34d57da8 <col:123> 'int' 0
|-CXXMethodDecl 0x55ea34d4ff90 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55ea34d4fda0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55ea34d4fe20 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55ea34d4fea0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55ea34d57dc8 <col:80> 'int' 0
|-EnumDecl 0x55ea34d50048 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55ea34d50150 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55ea34d503e0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d50130 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55ea34d50110 <col:42> 'int' 1
| |-EnumConstantDecl 0x55ea34d501e0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55ea34d503f8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d501c0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55ea34d501a0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55ea34d50270 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55ea34d50410 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d50250 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55ea34d50230 <col:44> 'int' 4
| |-EnumConstantDecl 0x55ea34d50300 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55ea34d50428 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d502e0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55ea34d502c0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55ea34d50390 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55ea34d50440 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34d50370 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55ea34d50350 <col:34> 'int' 6
|-CXXMethodDecl 0x55ea34d506f8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55ea34d50468 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55ea34d50508 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55ea34d50588 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55ea34d50600 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55ea34d57e80 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55ea34d57e68 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55ea34d57e50 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55ea34d57e30 <col:98, col:105> 'String' (CXXTemporary 0x55ea34d57e30)
|           `-CXXTemporaryObjectExpr 0x55ea34d57df8 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55ea34d50998 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55ea34d507c8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55ea34d50840 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55ea34d508b8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55ea34d57f30 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55ea34d57f18 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55ea34d57f00 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55ea34d57ee0 <col:94, col:101> 'String' (CXXTemporary 0x55ea34d57ee0)
| |         `-CXXTemporaryObjectExpr 0x55ea34d57ea8 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55ea34d58720 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55ea34d58698 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55ea34d58668 <col:9> '<bound member function type>' ->add_task_handlers 0x55ea34d506f8
|     | `-CXXThisExpr 0x55ea34d58658 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55ea34d586d8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55ea34d585d8 <col:27> 'Task *' lvalue ParmVar 0x55ea34d507c8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55ea34d586f0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55ea34d585f8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55ea34d50840 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55ea34d58708 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55ea34d58618 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55ea34d50390 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55ea34d58638 <col:62> 'const String' lvalue ParmVar 0x55ea34d508b8 'prefix' 'const String &'
|-CXXMethodDecl 0x55ea34d50ba8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55ea34d50a60 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55ea34d50ad8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55ea34d57fe0 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55ea34d57fc8 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55ea34d57fb0 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55ea34d57f90 <col:70, col:77> 'String' (CXXTemporary 0x55ea34d57f90)
| |         `-CXXTemporaryObjectExpr 0x55ea34d57f58 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55ea34d588f8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55ea34d58870 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55ea34d58840 <col:9> '<bound member function type>' ->add_task_handlers 0x55ea34d506f8
|     | `-CXXThisExpr 0x55ea34d58830 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55ea34d588b0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55ea34d587b0 <col:27> 'Task *' lvalue ParmVar 0x55ea34d50a60 'task' 'Task *'
|     |-ImplicitCastExpr 0x55ea34d588c8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55ea34d587d0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55ea34d588e0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55ea34d587f0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55ea34d50390 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55ea34d58810 <col:57> 'const String' lvalue ParmVar 0x55ea34d50ad8 'prefix' 'const String &'
|-CXXMethodDecl 0x55ea34d50e88 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55ea34d50c70 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d50cf0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d50d68 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55ea34d51138 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55ea34d50f58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d50fd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d51058 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55ea34d51428 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55ea34d51208 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d51288 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d51300 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55ea34d516d8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55ea34d514f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d51578 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d515f8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55ea34d51988 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55ea34d517a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d51828 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d518a8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55ea34d51c38 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55ea34d51a58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d51ad8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d51b50 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55ea34d51ee8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55ea34d51d08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d51d88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d51e08 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55ea34d52198 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55ea34d51fb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d52038 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d520b8 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55ea34d52448 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55ea34d52268 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d522e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d52368 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55ea34d526f8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55ea34d52518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d52598 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d52618 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55ea34d52960 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55ea34d527c8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55ea34d52848 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55ea34d528c0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55ea34d52c08 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55ea34d52a30 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55ea34d52ab0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55ea34d52b28 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55ea34d52eb8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55ea34d52cd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d52d58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d52dd8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55ea34d53168 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55ea34d52f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d53008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d53080 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55ea34d53418 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55ea34d53238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d532b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d53330 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55ea34d536c8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55ea34d534e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d53568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ea34d535e0 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55ea34d539f8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55ea34d53798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ea34d53818 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55ea34d53890 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55ea34d53908 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ea34d57ff8 <col:93> 'bool' false
|-CXXMethodDecl 0x55ea34d53be0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55ea34d53ac8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55ea34d53b48 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55ea34d53db8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55ea34d53ca0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55ea34d53d20 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55ea34d54098 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55ea34d53e78 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55ea34d53ef0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55ea34d53f70 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55ea34d53fe8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34d54388 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55ea34d54168 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55ea34d541e0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55ea34d54260 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55ea34d542d8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34d545c0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55ea34d54460 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55ea34d544e0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55ea34d547a8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55ea34d54688 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55ea34d54708 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55ea34d54858 prev 0x55ea34d4c0d8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ea34d54950 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55ea34d549e0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55ea34d54a58 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55ea34d54b18 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55ea34d54be0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55ea34d54d58 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55ea34d54c90 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55ea34d54e00 <col:24>
| | `-OptimizeNoneAttr 0x55ea34d54e58 <col:34>
| |-CXXMethodDecl 0x55ea34d54ea0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55ea34d55158 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55ea34d54f50 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55ea34d54fc8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55ea34d55048 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55ea34d55210 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55ea34d55248 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55ea34d552b0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55ea34d55338 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55ea34d55670 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55ea34d553f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55ea34d55468 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55ea34d554e0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55ea34d55560 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55ea34d55780 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55ea34d5c068 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55ea34d5c068
| | `-ParmVarDecl 0x55ea34d5c178 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55ea34d5c218 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55ea34d5c218
| | `-ParmVarDecl 0x55ea34d5c328 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55ea34e16368 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55ea34d557f8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55ea34d55898 <col:38> "" ""
|-CXXMethodDecl 0x55ea34d55928 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55ea34d559c8 <col:44> "" ""
|-AccessSpecDecl 0x55ea34d55a38 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55ea34d55a60 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55ea34d55b60 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55ea34d55bb0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34d55b40 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55ea34d55b20 <col:27> 'int' 4
|-FieldDecl 0x55ea34d55c68 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55ea34d55e18 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55ea34d55ed0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55ea34d55f30 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55ea34d55f98 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55ea34d560e8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55ea34d56028 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55ea34d56298 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55ea34d561a8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55ea34d56478 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55ea34d56358 <col:20> col:23 'int'
| `-ParmVarDecl 0x55ea34d563d8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55ea34d56720 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34d56540 <col:23> col:26 'int'
| |-ParmVarDecl 0x55ea34d565c0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55ea34d56638 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55ea34d567d8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55ea34d568a0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55ea34d568f0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55ea34d56940 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55ea34d56b20 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55ea34d569d0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55ea34d56a48 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34d56dc8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55ea34d56be8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55ea34d56c68 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55ea34d56ce0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34d56fe8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55ea34d56e98 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55ea34d56f18 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55ea34d57320 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55ea34d570a8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55ea34d57128 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55ea34d571a0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55ea34d57220 <col:57> col:60 'int'
|-CXXMethodDecl 0x55ea34d57508 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55ea34d573f0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55ea34d57470 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55ea34d57658 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55ea34d575c8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55ea34d579d8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55ea34d57718 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55ea34d57798 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55ea34d57810 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55ea34d57890 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55ea34d57ab8 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class DRRSched
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   int _quantum
       112 |   struct DRRSched::portinfo * _pi
       120 |   class Notifier _notifier
       120 |     (Notifier vtable pointer)
       128 |     class NotifierSignal _signal
       128 |       union NotifierSignal::vmvalue _v
       128 |         class atomic_uint32_t * v1
       128 |         struct NotifierSignal::vmpair * vm
       136 |       uint32_t _mask
       144 |     enum Notifier::SearchOp _search_op
       152 |   int _next
           | [sizeof=160, dsize=156, align=8,
           |  nvsize=156, nvalign=8]

*** Dumping AST Record Layout
         0 | struct DRRSched::portinfo
         0 |   class Packet * head
         8 |   unsigned int deficit
        16 |   class NotifierSignal signal
        16 |     union NotifierSignal::vmvalue _v
        16 |       class atomic_uint32_t * v1
        16 |       struct NotifierSignal::vmpair * vm
        24 |     uint32_t _mask
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea3493d4e8 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea3493d608 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55ea3493d698 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55ea3493d768 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55ea3493d850 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea3493e908 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55ea3493e7b0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea3493eab8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55ea3493e9c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55ea3493ec00 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55ea3493eb70 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55ea3493ed48 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55ea3493ecb8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea3493ee90 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55ea3493ee00 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea3493ef58 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55ea3493f0d8 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55ea3493f010 <col:28> col:31 'int'
|-CXXMethodDecl 0x55ea3493f1a0 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55ea3493f2e8 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55ea3493f258 <col:28> col:31 'int'
|-CXXMethodDecl 0x55ea3493f468 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55ea3493f3a0 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea3493f5b0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55ea3493f520 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea3493f678 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55ea3493f8b8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55ea3493f728 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ea3493f7a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea3493fb08 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55ea3493f978 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ea3493f9f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea3493fbb8 <col:86> "" ""
|-CXXMethodDecl 0x55ea3493fe28 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55ea3493fc98 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55ea3493fd10 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea3493ffd8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55ea3493fee8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55ea34940188 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55ea34940090 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55ea34940458 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55ea34940240 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55ea349402b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ea34940330 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea349407c0 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55ea34940520 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55ea34940598 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ea34940610 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34940878 <col:115> "" ""
|-AccessSpecDecl 0x55ea349408e8 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55ea34940920 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34940dc8 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55ea34940dc8
| `-ParmVarDecl 0x55ea34940ed8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55ea34940f78 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55ea34940f78
| `-ParmVarDecl 0x55ea34941088 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55ea349887d8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ea34d1b9d0 <col:7>
|-CXXConstructorDecl 0x55ea349888b0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55ea349888b0
| `-ParmVarDecl 0x55ea349889c8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55ea34988a38 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55ea34988a38
| `-ParmVarDecl 0x55ea34988b48 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55ea34d1e340 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d02a98 prev 0x55ea34cfa1c0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34d02b90 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55ea34d02c80 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55ea34d02d30 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55ea34d02eb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55ea34d03038 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55ea34d031b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55ea34d1bb38 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ea34d1c3a8 <col:11>
|-CXXDestructorDecl 0x55ea34d1bc10 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55ea34d1bd48 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55ea34d1bd48
| `-ParmVarDecl 0x55ea34d1be58 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55ea34d1bef8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55ea34d1bef8
| `-ParmVarDecl 0x55ea34d1c008 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55ea34d1ed38 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34d1ee48 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55ea34d1f0c8 <col:11>
|   `-ReturnStmt 0x55ea34d1f0b8 <col:11>
|     `-UnaryOperator 0x55ea34d1f0a0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34d1f090 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55ea34d1eeb8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55ea34d1eeb8
  `-ParmVarDecl 0x55ea34d1efc8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d03220 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34d03338 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55ea34d033d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55ea34d03440 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55ea34d034a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55ea34d03510 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55ea34d03570 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55ea34d03630 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55ea34d03690 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55ea34d135a0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55ea34d1ba48 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55ea34d033d8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55ea34d1c3b8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55ea34d1c410 <col:12>
|-CXXConstructorDecl 0x55ea34d1c078 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55ea34d1c078
| `-ParmVarDecl 0x55ea34d1c188 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55ea34d1c228 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55ea34d1c228
| `-ParmVarDecl 0x55ea34d1c338 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55ea34d1e420 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34cf3910 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea34cf3a28 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55ea34cf3ab8 <col:16, col:22> col:16 public
|-EnumDecl 0x55ea34cf3ae0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55ea34cf3be0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55ea34cf3cc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cf3bc0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55ea34cf3ba0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55ea34cf3c70 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55ea34cf3cd8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34cf3c50 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55ea34cf3c30 <col:22> 'int' 64
|-CXXMethodDecl 0x55ea34cf4018 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55ea34cf3d00 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ea34cf3d80 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55ea34cf3df8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ea34cf3e70 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ea34cf40d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf42d8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55ea34cf4150 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55ea34cf41c8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ea34cf4388 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf44e8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55ea34cf43f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ea34cf4590 <col:72> warn_unused_result ""
|-TypedefDecl 0x55ea34cf48c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55ea34cf4850 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55ea34cf47f0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55ea34cf47b0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55ea3471d4e0 'void'
|       |-PointerType 0x55ea34973cf0 'unsigned char *'
|       | `-BuiltinType 0x55ea3471d5e0 'unsigned char'
|       |-TypedefType 0x55ea347c5c00 'size_t' sugar
|       | |-Typedef 0x55ea3478dbe0 'size_t'
|       | `-BuiltinType 0x55ea3471d640 'unsigned long'
|       `-PointerType 0x55ea3471dce0 'void *'
|         `-BuiltinType 0x55ea3471d4e0 'void'
|-CXXMethodDecl 0x55ea34cf4d38 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55ea34cf4930 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55ea34cf49a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ea34cf4a40 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55ea34cf4ac0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55ea34d14a30 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55ea34d14a18 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55ea34d149e0 <col:58> 'int' 0
| |-ParmVarDecl 0x55ea34cf4b40 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55ea34d14a58 <col:76> 'int' 0
| |-ParmVarDecl 0x55ea34cf4bc0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55ea34d14a78 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55ea34cf4e08 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf4e88 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55ea34cf4f48 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55ea34cf4fe8 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf5040 <col:30>
|-CXXMethodDecl 0x55ea34cf50b8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55ea34cf5158 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf51b0 <col:30>
|-CXXMethodDecl 0x55ea34cf5228 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55ea34cf52c8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf5378 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55ea34cf5418 <col:20>
| |-OptimizeNoneAttr 0x55ea34cf5470 <col:30>
| `-WarnUnusedResultAttr 0x55ea34cf5498 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf54f0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55ea34cf5590 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf55e8 <col:30>
|-CXXMethodDecl 0x55ea34cf5638 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55ea34cf56d8 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf5730 <col:30>
|-CXXMethodDecl 0x55ea34cf5778 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55ea34cf5818 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf5870 <col:30>
|-CXXMethodDecl 0x55ea34cf58b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34cf5978 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34cf5a40 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55ea34cf5b08 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55ea34cf5bc8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34cf5ce8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55ea34d14b40 <col:54, line:99:5>
|   `-ReturnStmt 0x55ea34d14b30 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55ea34d14b18 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55ea34d14ae8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55ea34d138d8
|         `-CXXThisExpr 0x55ea34d14ad8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55ea34cf5e88 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55ea34cf5d98 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55ea34d14bf0 <col:67, line:103:5>
|   `-BinaryOperator 0x55ea34d14bd0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55ea34d14b68 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55ea34d138d8
|     | `-CXXThisExpr 0x55ea34d14b58 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55ea34d14bb8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34d14b98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55ea34cf5d98 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55ea34cf5f80 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55ea34d14c70 <col:33, line:107:5>
|   `-ReturnStmt 0x55ea34d14c60 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55ea34d14c48 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55ea34d14c18 <col:16> 'void *' lvalue ->_destructor_argument 0x55ea34d13940
|         `-CXXThisExpr 0x55ea34d14c08 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55ea34cf6040 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55ea34d152a0 <col:25, line:113:5>
|   |-ParenExpr 0x55ea34d14fe8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55ea34d14fb8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d14d28 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55ea34d14d00 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55ea34d14cc8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55ea34d14c98 <col:24> '<bound member function type>' ->shared 0x55ea34cf50b8
|   |   |       `-ImplicitCastExpr 0x55ea34d14ce8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55ea34d14c88 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55ea34d14d88 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d14d68 <col:42> 'int' 0
|   |   `-CallExpr 0x55ea34d14f18 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d14f00 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d14ee0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d14f58 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d14df8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55ea34d14f70 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d14e20 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d14f88 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d14e58 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55ea34d14fa0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d14ec8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d14eb0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d14e78 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55ea34d151e8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55ea34d15018 <col:2> 'unsigned char *' lvalue ->_head 0x55ea34d136e0
|   | | `-CXXThisExpr 0x55ea34d15008 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d151d0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55ea34d151b0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55ea34d15058 <col:10> 'unsigned char *' lvalue ->_data 0x55ea34d13748
|   |     | `-CXXThisExpr 0x55ea34d15048 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55ea34d15198 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55ea34d15178 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55ea34d15098 <col:18> 'unsigned char *' lvalue ->_tail 0x55ea34d137b0
|   |         | `-CXXThisExpr 0x55ea34d15088 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55ea34d15160 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55ea34d15140 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55ea34d150d8 <col:26> 'unsigned char *' lvalue ->_end 0x55ea34d13818
|   |             | `-CXXThisExpr 0x55ea34d150c8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55ea34d15128 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55ea34d15108 <col:33> 'int' 0
|   `-BinaryOperator 0x55ea34d15280 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55ea34d15218 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55ea34d138d8
|     | `-CXXThisExpr 0x55ea34d15208 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55ea34d15268 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55ea34d15248 <col:16> 'int' 0
|-CXXMethodDecl 0x55ea34cf6180 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55ea34cf60f0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ea34cf6228 <col:20>
| |-OptimizeNoneAttr 0x55ea34cf6280 <col:30>
| `-WarnUnusedResultAttr 0x55ea34cf62a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf6378 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55ea34cf62e8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ea34cf6420 <col:20>
| |-OptimizeNoneAttr 0x55ea34cf6478 <col:30>
| `-WarnUnusedResultAttr 0x55ea34cf64a0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf65d8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55ea34cf64e0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ea34cf6680 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf6780 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55ea34cf66f0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ea34cf6828 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf6880 <col:30>
|-CXXMethodDecl 0x55ea34cf6948 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55ea34cf68b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ea34cf69f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf6af0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55ea34cf6a60 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ea34cf6b98 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf6c98 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55ea34cf6c08 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ea34cf6d40 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf6d98 <col:30>
|-CXXMethodDecl 0x55ea34cf6f28 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55ea34cf6dd8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55ea34cf6e50 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55ea34d14a98 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55ea34cf6fd8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55ea34cf71d8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55ea34cf7050 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55ea34cf70c8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34cf73e8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55ea34cf7298 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ea34cf7310 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34cf75f8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55ea34cf74a8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55ea34cf7528 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55ea34d14aa8 <col:39> 'int' 0
|-CXXMethodDecl 0x55ea34cf76c8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55ea34cf7790 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55ea34cf7858 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55ea34cf7918 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34cf79e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55ea34cf7b28 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55ea34cf7a98 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55ea34cf7cf8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55ea34cf7be8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55ea34cf7c60 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34cf7dc8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55ea34cf7e88 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55ea34cf7f28 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf7f80 <col:30>
|-CXXMethodDecl 0x55ea34cf7fd0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55ea34cf8070 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf80c8 <col:30>
|-CXXMethodDecl 0x55ea34cf8118 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55ea34cf81d8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34cf82a0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55ea34cf8340 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf8398 <col:30>
|-CXXMethodDecl 0x55ea34cf84e8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55ea34cf83d8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55ea34cf8450 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34cf8638 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55ea34cf85a8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34cf8700 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55ea34cf87c0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55ea34cf8860 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf88b8 <col:30>
|-CXXMethodDecl 0x55ea34cf8908 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55ea34cf89a8 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf8a00 <col:30>
|-CXXMethodDecl 0x55ea34cf8a50 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55ea34cf8b18 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55ea34cf8bb8 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf8c10 <col:30>
|-CXXMethodDecl 0x55ea34cf8c58 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55ea34cf8d78 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55ea34cf8ee8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55ea34cf8e28 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55ea34cf8fd8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55ea34cf9078 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf90d0 <col:30>
|-CXXMethodDecl 0x55ea34cf9120 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55ea34cf91e0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34cf9418 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55ea34cf9290 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55ea34cf9308 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ea34cf94c8 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf9520 <col:30>
|-CXXMethodDecl 0x55ea34cf95c8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55ea34cf9668 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf96c0 <col:30>
|-CXXMethodDecl 0x55ea34cf9710 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55ea34cf97b0 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf9808 <col:30>
|-CXXMethodDecl 0x55ea34cf9850 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55ea34cf98f0 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf9948 <col:30>
|-CXXMethodDecl 0x55ea34cf9a48 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55ea34cf9980 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55ea34cf9af0 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf9b48 <col:30>
|-CXXMethodDecl 0x55ea34cf9d08 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55ea34cf9b80 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55ea34cf9bf8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ea34cf9db8 <col:20>
| `-OptimizeNoneAttr 0x55ea34cf9e10 <col:30>
|-CXXMethodDecl 0x55ea34cf9eb8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55ea34cf9fd8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55ea34cfa0f8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55ea34cfa198 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55ea34cfa1c0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55ea34cfa2e8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55ea34cfa388 <col:20>
| `-OptimizeNoneAttr 0x55ea34cfa3e0 <col:30>
|-CXXMethodDecl 0x55ea34cfa488 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55ea34cfa528 <col:20>
| `-OptimizeNoneAttr 0x55ea34cfa580 <col:30>
|-AccessSpecDecl 0x55ea34cfa5a8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55ea34cfa5d0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55ea34cfa6d0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55ea34cfa720 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34cfa6b0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55ea34cfa690 <col:14> 'int' 48
|-CXXMethodDecl 0x55ea34cfa788 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55ea34cfa828 <col:20>
| `-OptimizeNoneAttr 0x55ea34cfa880 <col:30>
|-CXXMethodDecl 0x55ea34cfa8f8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55ea34cfa998 <col:20>
| `-OptimizeNoneAttr 0x55ea34cfa9f0 <col:30>
|-CXXMethodDecl 0x55ea34cfaab8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55ea34cfaa28 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55ea34cfac58 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55ea34cfadf8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55ea34cfad08 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55ea34cfaea0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55ea34cfafa0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ea34cfb350 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfaf80 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55ea34cfaf60 <col:9> 'int' 0
| |-EnumConstantDecl 0x55ea34cfb030 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ea34cfb368 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfb010 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55ea34cfaff0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55ea34cfb0c0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ea34cfb380 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfb0a0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55ea34cfb080 <col:14> 'int' 2
| |-EnumConstantDecl 0x55ea34cfb150 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ea34cfb398 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfb130 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55ea34cfb110 <col:14> 'int' 3
| |-EnumConstantDecl 0x55ea34cfb1e0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ea34cfb3b0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfb1c0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55ea34cfb1a0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55ea34cfb270 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ea34cfb3c8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfb250 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55ea34cfb230 <col:13> 'int' 5
| `-EnumConstantDecl 0x55ea34cfb300 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55ea34cfb3e0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34cfb2e0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55ea34cfb2c0 <col:14> 'int' 6
|-CXXMethodDecl 0x55ea34cfb448 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55ea34cfb4e8 <col:20>
| `-OptimizeNoneAttr 0x55ea34cfb540 <col:30>
|-CXXMethodDecl 0x55ea34cfb638 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55ea34cfb578 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55ea34cfb6e0 <col:20>
| `-OptimizeNoneAttr 0x55ea34cfb760 <col:30>
|-CXXMethodDecl 0x55ea34cfb7d8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55ea34cfb900 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55ea34cfba78 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55ea34cfb9b0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55ea34cfbb40 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55ea34cfbc08 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55ea34cfbd48 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55ea34cfbcb8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55ea34cfbdf0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55ea34cfbef0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55ea34cfc0f0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfbed0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55ea34cfbeb0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55ea34cfbf80 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55ea34cfc108 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfbf60 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55ea34cfbf40 <col:45> 'int' 4
| |-EnumConstantDecl 0x55ea34cfc010 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55ea34cfc120 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfbff0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55ea34cfbfd0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55ea34cfc0a0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55ea34cfc138 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34cfc080 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55ea34cfc060 <col:47> 'int' 16
|-CXXMethodDecl 0x55ea34cfc198 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55ea34cfc308 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55ea34cfc248 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55ea34cfc3b0 <col:20>
| `-OptimizeNoneAttr 0x55ea34cfc408 <col:30>
|-CXXMethodDecl 0x55ea34cfc458 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55ea34d153c0 <col:18, col:36>
|   `-ReturnStmt 0x55ea34d153b0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55ea34d15398 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55ea34d15378 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55ea34d15348 <col:27> '<bound member function type>' ->xanno 0x55ea34cfa488
|           `-CXXThisExpr 0x55ea34d15338 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55ea34cfc550 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55ea34d154d0 <col:30, col:48>
|   `-ReturnStmt 0x55ea34d154c0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55ea34d154a8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55ea34d15488 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55ea34d15458 <col:39> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|           `-CXXThisExpr 0x55ea34d15448 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55ea34cfc638 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55ea34d15668 <col:24, col:50>
|   `-ReturnStmt 0x55ea34d15658 <col:26, col:47>
|     `-UnaryOperator 0x55ea34d15640 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55ea34d15620 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55ea34d15608 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ea34d155b8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55ea34d02d30
|         |   `-CXXMemberCallExpr 0x55ea34d15598 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55ea34d15568 <col:34> '<bound member function type>' ->xanno 0x55ea34cfa488
|         |       `-CXXThisExpr 0x55ea34d15558 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55ea34d155e8 <col:46> 'int' 0
|-CXXMethodDecl 0x55ea34cfc728 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55ea34d15800 <col:36, col:62>
|   `-ReturnStmt 0x55ea34d157f0 <col:38, col:59>
|     `-UnaryOperator 0x55ea34d157d8 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55ea34d157b8 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55ea34d157a0 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ea34d15750 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55ea34d02d30
|         |   `-CXXMemberCallExpr 0x55ea34d15730 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55ea34d15700 <col:46> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|         |       `-CXXThisExpr 0x55ea34d156f0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55ea34d15780 <col:58> 'int' 0
|-CXXMethodDecl 0x55ea34cfc848 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55ea34d15998 <col:26, col:53>
|   `-ReturnStmt 0x55ea34d15988 <col:28, col:50>
|     `-UnaryOperator 0x55ea34d15970 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55ea34d15950 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55ea34d15938 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ea34d158e8 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55ea34d03038
|         |   `-CXXMemberCallExpr 0x55ea34d158c8 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55ea34d15898 <col:36> '<bound member function type>' ->xanno 0x55ea34cfa488
|         |       `-CXXThisExpr 0x55ea34d15888 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55ea34d15918 <col:49> 'int' 0
|-CXXMethodDecl 0x55ea34cfc968 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55ea34d15b68 <col:38, col:65>
|   `-ReturnStmt 0x55ea34d15b58 <col:40, col:62>
|     `-UnaryOperator 0x55ea34d15b40 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55ea34d15b20 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55ea34d15b08 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ea34d15a80 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55ea34d03038
|         |   `-CXXMemberCallExpr 0x55ea34d15a60 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55ea34d15a30 <col:48> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|         |       `-CXXThisExpr 0x55ea34d15a20 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55ea34d15ab0 <col:61> 'int' 0
|-CXXMethodDecl 0x55ea34cfcb18 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55ea34cfca20 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55ea34d16238 <col:34, line:463:5>
|   |-ParenExpr 0x55ea34d16080 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55ea34d16050 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d15cb8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d15c88 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d15bd8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d15bc0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d15b80 <col:23> 'int' lvalue ParmVar 0x55ea34cfca20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d15ba0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d15c68 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d15c38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d15bf8 <col:33> 'int' lvalue ParmVar 0x55ea34cfca20 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55ea34d15c50 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55ea34d15c18 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55ea34d15d18 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d15cf8 <col:56> 'int' 0
|   |   `-CallExpr 0x55ea34d15fb0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d15f98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d15f78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d15ff0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d15e08 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55ea34d16008 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d15e38 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d16020 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d15e70 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55ea34d16038 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d15f60 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d15f48 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d15f08 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55ea34d16228 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55ea34d16210 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55ea34d161f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55ea34d161c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ea34d16170 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55ea34d02d30
|         |   `-CXXMemberCallExpr 0x55ea34d16150 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55ea34d16120 <col:9> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|         |       `-CXXThisExpr 0x55ea34d16110 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55ea34d161d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55ea34d161a0 <col:21> 'int' lvalue ParmVar 0x55ea34cfca20 'i' 'int'
|-CXXMethodDecl 0x55ea34cfcd68 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55ea34cfcbd8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55ea34cfcc50 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55ea34d168c8 <col:40, line:472:5>
|   |-ParenExpr 0x55ea34d166e0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55ea34d166b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d16390 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d16360 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d162b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d16298 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d16258 <col:23> 'int' lvalue ParmVar 0x55ea34cfcbd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d16278 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d16340 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d16310 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d162d0 <col:33> 'int' lvalue ParmVar 0x55ea34cfcbd8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55ea34d16328 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55ea34d162f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55ea34d163f0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d163d0 <col:56> 'int' 0
|   |   `-CallExpr 0x55ea34d16610 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d165f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d165d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d16650 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d16460 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55ea34d16668 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d16490 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d16680 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d164c8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55ea34d16698 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d165c0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d165a8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d16568 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55ea34d168a8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55ea34d16850 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55ea34d16820 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55ea34d167d0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55ea34d02d30
|     | |   `-CXXMemberCallExpr 0x55ea34d167b0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55ea34d16780 <col:2> '<bound member function type>' ->xanno 0x55ea34cfa488
|     | |       `-CXXThisExpr 0x55ea34d16770 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55ea34d16838 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ea34d16800 <col:14> 'int' lvalue ParmVar 0x55ea34cfcbd8 'i' 'int'
|     `-ImplicitCastExpr 0x55ea34d16890 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34d16870 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55ea34cfcc50 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55ea34cfcf28 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55ea34cfce30 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55ea34d17048 <col:36, line:485:5>
|   |-ParenExpr 0x55ea34d16db0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d16d80 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d16a60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d16a30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d16940 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d16928 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d168e8 <col:23> 'int' lvalue ParmVar 0x55ea34cfce30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d16908 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d16a10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d169f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d16960 <col:33> 'int' lvalue ParmVar 0x55ea34cfce30 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d169d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d169c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d16980 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d169a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55ea34d16ac0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d16aa0 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d16ce0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d16cc8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d16ca8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d16d20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d16b30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55ea34d16d38 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d16b68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d16d50 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d16ba0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55ea34d16d68 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d16c90 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d16c78 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d16c38 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55ea34d17038 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55ea34d17020 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55ea34d17008 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ea34d16fd8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55ea34d16f78 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ea34d16f48 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ea34d16ec0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55ea34d02c80
|             |   `-CXXMemberCallExpr 0x55ea34d16ea0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ea34d16e70 <col:61> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|             |       `-CXXThisExpr 0x55ea34d16e60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ea34d16f60 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ea34d16ef0 <col:74> 'int' lvalue ParmVar 0x55ea34cfce30 'i' 'int'
|-CXXMethodDecl 0x55ea34cfd178 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55ea34cfcfe8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ea34cfd060 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55ea34d17798 <col:42, line:500:5>
|   |-ParenExpr 0x55ea34d17530 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d17500 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d171e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d171b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d170c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d170a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d17068 <col:23> 'int' lvalue ParmVar 0x55ea34cfcfe8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d17088 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d17190 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d17178 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d170e0 <col:33> 'int' lvalue ParmVar 0x55ea34cfcfe8 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d17158 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d17140 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d17100 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d17120 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55ea34d17240 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d17220 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d17460 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d17448 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d17428 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d174a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d172b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55ea34d174b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d172e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d174d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d17320 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55ea34d174e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d17410 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d173f8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d173b8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55ea34d17778 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55ea34d17728 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ea34d176f8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55ea34d176a0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ea34d17670 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ea34d17620 <col:48, col:57> 'char [48]' lvalue ->c 0x55ea34d02c80
|     |     |   `-CXXMemberCallExpr 0x55ea34d17600 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ea34d175d0 <col:48> '<bound member function type>' ->xanno 0x55ea34cfa488
|     |     |       `-CXXThisExpr 0x55ea34d175c0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ea34d17688 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ea34d17650 <col:61> 'int' lvalue ParmVar 0x55ea34cfcfe8 'i' 'int'
|     `-ImplicitCastExpr 0x55ea34d17760 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34d17740 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55ea34cfd060 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55ea34cfd338 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55ea34cfd240 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55ea34d17ef8 <col:35, line:513:5>
|   |-ParenExpr 0x55ea34d17c08 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d17bd8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d17930 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d17900 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d17810 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d177f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d177b8 <col:23> 'int' lvalue ParmVar 0x55ea34cfd240 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d177d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d178e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d178c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d17830 <col:33> 'int' lvalue ParmVar 0x55ea34cfd240 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d178a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d17890 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d17850 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d17870 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55ea34d17990 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d17970 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d17b38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d17b20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d17b00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d17b78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d17a00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55ea34d17b90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d17a38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d17ba8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d17a70 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55ea34d17bc0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d17ae8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d17ad0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d17a90 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55ea34d17ee8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55ea34d17ed0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55ea34d17eb8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ea34d17e88 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55ea34d17e00 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ea34d17dd0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ea34d17d80 <col:60, col:69> 'char const[48]' lvalue ->c 0x55ea34d02c80
|             |   `-CXXMemberCallExpr 0x55ea34d17d60 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ea34d17d30 <col:60> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|             |       `-CXXThisExpr 0x55ea34d17d20 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ea34d17de8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ea34d17db0 <col:73> 'int' lvalue ParmVar 0x55ea34cfd240 'i' 'int'
|-CXXMethodDecl 0x55ea34cfd588 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55ea34cfd3f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ea34cfd470 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55ea34d185d8 <col:41, line:528:5>
|   |-ParenExpr 0x55ea34d18368 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d18338 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d18090 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d18060 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d17f70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d17f58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d17f18 <col:23> 'int' lvalue ParmVar 0x55ea34cfd3f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d17f38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d18040 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d18028 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d17f90 <col:33> 'int' lvalue ParmVar 0x55ea34cfd3f8 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d18008 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d17ff0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d17fb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d17fd0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55ea34d180f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d180d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d18298 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d18280 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d18260 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d182d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d18160 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55ea34d182f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d18198 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d18308 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d181d0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55ea34d18320 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d18248 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d18230 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d181f0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55ea34d185b8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55ea34d18568 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ea34d18538 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55ea34d184d8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ea34d184a8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ea34d18458 <col:47, col:56> 'char [48]' lvalue ->c 0x55ea34d02c80
|     |     |   `-CXXMemberCallExpr 0x55ea34d18438 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ea34d18408 <col:47> '<bound member function type>' ->xanno 0x55ea34cfa488
|     |     |       `-CXXThisExpr 0x55ea34d183f8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ea34d184c0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ea34d18488 <col:60> 'int' lvalue ParmVar 0x55ea34cfd3f8 'i' 'int'
|     `-ImplicitCastExpr 0x55ea34d185a0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34d18580 <col:65> 'int16_t':'short' lvalue ParmVar 0x55ea34cfd470 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55ea34cfd748 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55ea34cfd650 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55ea34d18ca8 <col:36, line:541:5>
|   |-ParenExpr 0x55ea34d18a48 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d18a18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d18770 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d18740 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d18650 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d18638 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d185f8 <col:23> 'int' lvalue ParmVar 0x55ea34cfd650 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d18618 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d18720 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d18708 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d18670 <col:33> 'int' lvalue ParmVar 0x55ea34cfd650 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d186e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d186d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d18690 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d186b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55ea34d187d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d187b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d18978 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d18960 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d18940 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d189b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d18840 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55ea34d189d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d18878 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d189e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d188b0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55ea34d18a00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d18928 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d18910 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d188d0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55ea34d18c98 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55ea34d18c80 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55ea34d18c68 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ea34d18c38 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55ea34d18be0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ea34d18bb0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ea34d18b60 <col:61, col:70> 'char const[48]' lvalue ->c 0x55ea34d02c80
|             |   `-CXXMemberCallExpr 0x55ea34d18b40 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ea34d18b10 <col:61> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|             |       `-CXXThisExpr 0x55ea34d18b00 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ea34d18bc8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ea34d18b90 <col:74> 'int' lvalue ParmVar 0x55ea34cfd650 'i' 'int'
|-CXXMethodDecl 0x55ea34cfd918 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55ea34cfd808 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55ea34cfd880 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ea34cfd9c8 <col:20>
| `-OptimizeNoneAttr 0x55ea34cfda20 <col:30>
|-CXXMethodDecl 0x55ea34cfdb58 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55ea34cfda60 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55ea34d19378 <col:35, line:562:5>
|   |-ParenExpr 0x55ea34d19118 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d190e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d18e40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d18e10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d18d20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d18d08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d18cc8 <col:23> 'int' lvalue ParmVar 0x55ea34cfda60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d18ce8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d18df0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d18dd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d18d40 <col:33> 'int' lvalue ParmVar 0x55ea34cfda60 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d18db8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d18da0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d18d60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d18d80 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55ea34d18ea0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d18e80 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d19048 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d19030 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d19010 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d19088 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d18f10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55ea34d190a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d18f48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d190b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d18f80 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55ea34d190d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d18ff8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d18fe0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d18fa0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55ea34d19368 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55ea34d19350 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55ea34d19338 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ea34d19308 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55ea34d192b0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ea34d19280 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ea34d19230 <col:60, col:69> 'char const[48]' lvalue ->c 0x55ea34d02c80
|             |   `-CXXMemberCallExpr 0x55ea34d19210 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ea34d191e0 <col:60> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|             |       `-CXXThisExpr 0x55ea34d191d0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ea34d19298 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ea34d19260 <col:73> 'int' lvalue ParmVar 0x55ea34cfda60 'i' 'int'
|-CXXMethodDecl 0x55ea34cfdd68 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55ea34cfdc18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ea34cfdc90 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55ea34d19a58 <col:41, line:577:5>
|   |-ParenExpr 0x55ea34d197e8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d197b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d19510 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d194e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d193f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d193d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d19398 <col:23> 'int' lvalue ParmVar 0x55ea34cfdc18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d193b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d194c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d194a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d19410 <col:33> 'int' lvalue ParmVar 0x55ea34cfdc18 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d19488 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d19470 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d19430 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d19450 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55ea34d19570 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d19550 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d19718 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d19700 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d196e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d19758 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d195e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55ea34d19770 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d19618 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d19788 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d19650 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55ea34d197a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d196c8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d196b0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d19670 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55ea34d19a38 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55ea34d199e8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ea34d199b8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55ea34d19958 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ea34d19928 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ea34d198d8 <col:47, col:56> 'char [48]' lvalue ->c 0x55ea34d02c80
|     |     |   `-CXXMemberCallExpr 0x55ea34d198b8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ea34d19888 <col:47> '<bound member function type>' ->xanno 0x55ea34cfa488
|     |     |       `-CXXThisExpr 0x55ea34d19878 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ea34d19940 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ea34d19908 <col:60> 'int' lvalue ParmVar 0x55ea34cfdc18 'i' 'int'
|     `-ImplicitCastExpr 0x55ea34d19a20 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34d19a00 <col:65> 'int32_t':'int' lvalue ParmVar 0x55ea34cfdc90 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55ea34cfdf28 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55ea34cfde30 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55ea34d1a188 <col:36, line:591:5>
|   |-ParenExpr 0x55ea34d19ec8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d19e98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d19bf0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d19bc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d19ad0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d19ab8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d19a78 <col:23> 'int' lvalue ParmVar 0x55ea34cfde30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d19a98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d19ba0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d19b88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d19af0 <col:33> 'int' lvalue ParmVar 0x55ea34cfde30 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d19b68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d19b50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d19b10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d19b30 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55ea34d19c50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d19c30 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d19df8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d19de0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d19dc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d19e38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d19cc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55ea34d19e50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d19cf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d19e68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d19d30 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55ea34d19e80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d19da8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d19d90 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d19d50 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55ea34d1a178 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55ea34d1a160 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55ea34d1a148 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ea34d1a118 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55ea34d1a090 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ea34d1a060 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ea34d1a010 <col:61, col:70> 'char const[48]' lvalue ->c 0x55ea34d02c80
|             |   `-CXXMemberCallExpr 0x55ea34d19ff0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ea34d19fc0 <col:61> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|             |       `-CXXThisExpr 0x55ea34d19fb0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ea34d1a078 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ea34d1a040 <col:74> 'int' lvalue ParmVar 0x55ea34cfde30 'i' 'int'
|-CXXMethodDecl 0x55ea34cfe178 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55ea34cfdfe8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ea34cfe060 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55ea34d1a868 <col:42, line:606:5>
|   |-ParenExpr 0x55ea34d1a5f8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ea34d1a5c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d1a320 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d1a2f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d1a200 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d1a1e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d1a1a8 <col:23> 'int' lvalue ParmVar 0x55ea34cfdfe8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d1a1c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d1a2d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ea34d1a2b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d1a220 <col:33> 'int' lvalue ParmVar 0x55ea34cfdfe8 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d1a298 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d1a280 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d1a240 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ea34d1a260 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55ea34d1a380 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d1a360 <col:60> 'int' 0
|   |   `-CallExpr 0x55ea34d1a528 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d1a510 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d1a4f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d1a568 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d1a3f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55ea34d1a580 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d1a428 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d1a598 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d1a460 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55ea34d1a5b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d1a4d8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d1a4c0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d1a480 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55ea34d1a848 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55ea34d1a7f8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ea34d1a7c8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55ea34d1a768 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ea34d1a738 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ea34d1a6e8 <col:48, col:57> 'char [48]' lvalue ->c 0x55ea34d02c80
|     |     |   `-CXXMemberCallExpr 0x55ea34d1a6c8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ea34d1a698 <col:48> '<bound member function type>' ->xanno 0x55ea34cfa488
|     |     |       `-CXXThisExpr 0x55ea34d1a688 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ea34d1a750 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ea34d1a718 <col:61> 'int' lvalue ParmVar 0x55ea34cfdfe8 'i' 'int'
|     `-ImplicitCastExpr 0x55ea34d1a830 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34d1a810 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55ea34cfe060 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55ea34cfe310 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55ea34cfe240 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55ea34d1b0d8 <col:33, line:620:5>
|   |-ParenExpr 0x55ea34d1ae50 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55ea34d1ae20 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d1aa70 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d1aa40 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d1a8e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d1a8c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d1a888 <col:23> 'int' lvalue ParmVar 0x55ea34cfe240 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d1a8a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d1aa20 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55ea34d1aa08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d1a900 <col:33> 'int' lvalue ParmVar 0x55ea34cfe240 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d1a9e8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d1a9d0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d1a920 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55ea34d1a9a8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55ea34d1a990 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55ea34d1a958 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55ea34d1aad0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d1aab0 <col:79> 'int' 0
|   |   `-CallExpr 0x55ea34d1ad80 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d1ad68 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d1ad48 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d1adc0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d1abb8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55ea34d1add8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d1ac00 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d1adf0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d1ac38 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55ea34d1ae08 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d1ad30 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d1ad18 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d1acd8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55ea34d1b0c8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55ea34d1b0b0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55ea34d1b098 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ea34d1b068 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55ea34d1afe0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ea34d1afb0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ea34d1af60 <col:67, col:76> 'char const[48]' lvalue ->c 0x55ea34d02c80
|             |   `-CXXMemberCallExpr 0x55ea34d1af40 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ea34d1af10 <col:67> '<bound member function type>' ->xanno 0x55ea34cfa2e8
|             |       `-CXXThisExpr 0x55ea34d1af00 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ea34d1afc8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ea34d1af90 <col:80> 'int' lvalue ParmVar 0x55ea34cfe240 'i' 'int'
|-CXXMethodDecl 0x55ea34cfe528 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55ea34cfe3d0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ea34cfe450 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55ea34d1b930 <col:45, line:635:5>
|   |-ParenExpr 0x55ea34d1b680 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55ea34d1b650 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55ea34d1b2e0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ea34d1b2b0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ea34d1b150 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ea34d1b138 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ea34d1b0f8 <col:23> 'int' lvalue ParmVar 0x55ea34cfe3d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ea34d1b118 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ea34d1b290 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55ea34d1b278 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ea34d1b170 <col:33> 'int' lvalue ParmVar 0x55ea34cfe3d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55ea34d1b258 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ea34d1b240 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ea34d1b190 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ea34cfa6d0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55ea34d1b218 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55ea34d1b200 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55ea34d1b1c8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55ea34d1b340 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ea34d1b320 <col:79> 'int' 0
|   |   `-CallExpr 0x55ea34d1b5b0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55ea34d1b560 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34d1b540 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ea34d1b5f0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d1b3b0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55ea34d1b608 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ea34d1b3f8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ea34d1b620 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ea34d1b430 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55ea34d1b638 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ea34d1b528 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ea34d1b510 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ea34d1b4c8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55ea34d1b910 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55ea34d1b878 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ea34d1b848 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55ea34d1b7f0 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ea34d1b7c0 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ea34d1b770 <col:54, col:63> 'char [48]' lvalue ->c 0x55ea34d02c80
|     |     |   `-CXXMemberCallExpr 0x55ea34d1b750 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ea34d1b720 <col:54> '<bound member function type>' ->xanno 0x55ea34cfa488
|     |     |       `-CXXThisExpr 0x55ea34d1b710 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ea34d1b7d8 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ea34d1b7a0 <col:67> 'int' lvalue ParmVar 0x55ea34cfe3d0 'i' 'int'
|     `-CXXConstCastExpr 0x55ea34d1b8e0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55ea34d1b8c8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55ea34d1b890 <col:91> 'const void *' lvalue ParmVar 0x55ea34cfe450 'x' 'const void *'
|-CXXMethodDecl 0x55ea34cfe5f8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55ea34d1b9b8 <col:34, line:640:5>
|   `-ReturnStmt 0x55ea34d1b9a8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55ea34d1b990 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55ea34d1b960 <col:16> 'Packet *' lvalue ->_data_packet 0x55ea34d13678
|         `-CXXThisExpr 0x55ea34d1b950 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55ea34cfe738 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55ea34cfe6a8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ea34d14ac8 <col:46> 'bool' true
|-CXXMethodDecl 0x55ea34cfe8b8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55ea34cfe7f0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55ea34cfe960 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55ea34cff110 <line:660:22> "" ""
| |-EnumConstantDecl 0x55ea34cfea60 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff180 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfea40 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55ea34cfea20 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55ea34cf3be0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55ea34cfeaf0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff198 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfead0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55ea34cfeab0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55ea34cf3c70 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55ea34cfeb80 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff1b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfeb60 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55ea34cfeb40 <col:21> 'int' 0
| |-EnumConstantDecl 0x55ea34cfec10 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff1c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfebf0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55ea34cfebd0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55ea34cfeca0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff1e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfec80 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55ea34cfec60 <col:21> 'int' 16
| |-EnumConstantDecl 0x55ea34cfed30 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff1f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfed10 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55ea34cfecf0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55ea34cfedc0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff210 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfeda0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55ea34cfed80 <col:19> 'int' EnumConstant 0x55ea34cfec10 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55ea34cfee50 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff228 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfee30 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55ea34cfee10 <col:19> 'int' EnumConstant 0x55ea34cfed30 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55ea34cfef20 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff240 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfef00 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55ea34cfeee0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55ea34cfeea0 <col:23> 'int' EnumConstant 0x55ea34cfee50 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55ea34cfeec0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55ea34cfeff0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ea34cff258 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34cfefd0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55ea34cfefb0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55ea34cfef70 <col:23> 'int' EnumConstant 0x55ea34cfee50 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55ea34cfef90 <col:40> 'int' 4
| `-EnumConstantDecl 0x55ea34cff0c0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55ea34cff270 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34cff0a0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55ea34cff080 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55ea34cff040 <col:23> 'int' EnumConstant 0x55ea34cfee50 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55ea34cff060 <col:40> 'int' 8
|-CXXMethodDecl 0x55ea34cff2b0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55ea34cff350 <col:68> "" ""
|-CXXMethodDecl 0x55ea34cff3e8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55ea34cff488 <col:45> "" ""
|-CXXMethodDecl 0x55ea34cff520 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55ea34cff5c0 <col:57> "" ""
|-CXXMethodDecl 0x55ea34cff658 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55ea34cff6f8 <col:45> "" ""
|-CXXMethodDecl 0x55ea34cff790 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55ea34cff830 <col:57> "" ""
|-CXXMethodDecl 0x55ea34cff8c0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55ea34cff960 <col:51> "" ""
|-CXXMethodDecl 0x55ea34cff9f0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55ea34cffa90 <col:63> "" ""
|-CXXMethodDecl 0x55ea34cffb20 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55ea34cffbc0 <col:53> "" ""
|-CXXMethodDecl 0x55ea34cffc50 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55ea34cffcf0 <col:65> "" ""
|-CXXMethodDecl 0x55ea34cffe08 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55ea34cffd78 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55ea34cffeb0 <col:61> "" ""
|-CXXMethodDecl 0x55ea34d00048 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55ea34cfff38 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55ea34cfffb0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55ea34d000f8 <col:67> "" ""
|-CXXMethodDecl 0x55ea34d00210 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55ea34d00180 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55ea34d002b8 <col:63> "" ""
|-CXXMethodDecl 0x55ea34d00450 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55ea34d00340 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55ea34d003b8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55ea34d00500 <col:69> "" ""
|-CXXMethodDecl 0x55ea34d00618 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55ea34d00588 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55ea34d006c0 <col:63> "" ""
|-CXXMethodDecl 0x55ea34d00858 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55ea34d00748 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55ea34d007c0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34d00908 <col:69> "" ""
|-CXXMethodDecl 0x55ea34d00a20 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55ea34d00990 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55ea34d00ac8 <col:62> "" ""
|-CXXMethodDecl 0x55ea34d00c60 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55ea34d00b50 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55ea34d00bc8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55ea34d00d10 <col:68> "" ""
|-CXXMethodDecl 0x55ea34d00e28 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55ea34d00d98 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55ea34d00ed0 <col:63> "" ""
|-CXXMethodDecl 0x55ea34d01068 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55ea34d00f58 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55ea34d00fd0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55ea34d01118 <col:69> "" ""
|-CXXMethodDecl 0x55ea34d011a8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55ea34d01248 <col:64> "" ""
|-CXXMethodDecl 0x55ea34d012d8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55ea34d01378 <col:52> "" ""
|-CXXMethodDecl 0x55ea34d01408 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55ea34d014a8 <col:67> "" ""
|-CXXMethodDecl 0x55ea34d01538 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55ea34d015d8 <col:55> "" ""
|-CXXMethodDecl 0x55ea34d016f0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55ea34d01660 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55ea34d01798 <col:58> "" ""
|-CXXMethodDecl 0x55ea34d01930 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55ea34d01820 <col:33> col:36 'int'
| |-ParmVarDecl 0x55ea34d01898 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55ea34d019e0 <col:62> "" ""
|-CXXMethodDecl 0x55ea34d01af8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55ea34d01a68 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55ea34d01ba0 <col:58> "" ""
|-CXXMethodDecl 0x55ea34d01d38 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55ea34d01c28 <col:33> col:36 'int'
| |-ParmVarDecl 0x55ea34d01ca0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55ea34d01de8 <col:62> "" ""
|-CXXMethodDecl 0x55ea34d01f00 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55ea34d01e70 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55ea34d01fa8 <col:60> "" ""
|-CXXMethodDecl 0x55ea34d02140 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55ea34d02030 <col:34> col:37 'int'
| |-ParmVarDecl 0x55ea34d020a8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55ea34d021f0 <col:64> "" ""
|-CXXMethodDecl 0x55ea34d02308 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55ea34d02278 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55ea34d023b0 <col:58> "" ""
|-CXXMethodDecl 0x55ea34d02548 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55ea34d02438 <col:33> col:36 'int'
| |-ParmVarDecl 0x55ea34d024b0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55ea34d025f8 <col:62> "" ""
|-CXXMethodDecl 0x55ea34d02710 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55ea34d02680 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55ea34d027b8 <col:59> "" ""
|-CXXMethodDecl 0x55ea34d02950 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55ea34d02840 <col:33> col:36 'int'
| |-ParmVarDecl 0x55ea34d028b8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34d02a00 <col:63> "" ""
|-AccessSpecDecl 0x55ea34d02a70 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55ea34d02a98 prev 0x55ea34cfa1c0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ea34d02b90 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55ea34d02c80 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55ea34d02d30 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55ea34d02eb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55ea34d03038 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55ea34d031b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55ea34d1bb38 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ea34d1c3a8 <col:11>
| |-CXXDestructorDecl 0x55ea34d1bc10 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55ea34d1bd48 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55ea34d1bd48
| | `-ParmVarDecl 0x55ea34d1be58 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55ea34d1bef8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55ea34d1bef8
| | `-ParmVarDecl 0x55ea34d1c008 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55ea34d1ed38 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ea34d1ee48 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55ea34d1f0c8 <col:11>
| |   `-ReturnStmt 0x55ea34d1f0b8 <col:11>
| |     `-UnaryOperator 0x55ea34d1f0a0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55ea34d1f090 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55ea34d1eeb8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55ea34d1eeb8
|   `-ParmVarDecl 0x55ea34d1efc8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55ea34d03220 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ea34d03338 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55ea34d033d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55ea34d03440 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55ea34d034a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55ea34d03510 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55ea34d03570 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55ea34d03630 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55ea34d03690 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55ea34d135a0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55ea34d1ba48 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55ea34d033d8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55ea34d1c3b8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55ea34d1c410 <col:12>
| |-CXXConstructorDecl 0x55ea34d1c078 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55ea34d1c078
| | `-ParmVarDecl 0x55ea34d1c188 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55ea34d1c228 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55ea34d1c228
| | `-ParmVarDecl 0x55ea34d1c338 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55ea34d1e420 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55ea34d13618 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55ea34d13678 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55ea34d136e0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55ea34d13748 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55ea34d137b0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55ea34d13818 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55ea34d13878 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55ea34d138d8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55ea34d13940 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55ea34d139c8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55ea34d13618 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55ea34d1b9e0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55ea34d13878 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55ea34d1c420 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55ea34d1c480 <col:21, line:755:5>
|-CXXConstructorDecl 0x55ea34d13b68 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55ea34d13aa8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55ea34d13c60 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55ea34d13e48 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55ea34d13d50 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55ea34d14118 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55ea34d13f00 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ea34d13f78 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ea34d13ff0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34d14338 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55ea34d141e8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55ea34d14260 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55ea34d14608 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55ea34d143f8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55ea34d14470 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55ea34d144e8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55ea34d14760 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55ea34d146d0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34d148a8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55ea34d14818 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55ea34d149a0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34defb48 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34defc68 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x55ea34defd08 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x55ea34defd68 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x55ea34dfaa68 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55ea34dfaa68

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34defdd0 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34defee8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x55ea34deff88 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x55ea34df0018 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x55ea34df9600 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ea34df9a38 <col:11>
|-CXXConstructorDecl 0x55ea34df9708 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55ea34df9708
| `-ParmVarDecl 0x55ea34df9818 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x55ea34df98b8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55ea34df98b8
| `-ParmVarDecl 0x55ea34df99c8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x55ea34dfa730 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34deda80 prev 0x55ea34d47840 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea34dedb78 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x55ea34dedc08 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x55ea34dedd38 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x55ea34dedcb0 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x55ea34d478d0 'NotifierSignal'
|   | `-CXXRecord 0x55ea34deda80 'NotifierSignal'
|   `-ParenType 0x55ea34dedc50 'bool () const' sugar
|     `-FunctionProtoType 0x55ea347c8940 'bool () const' const cdecl
|       `-BuiltinType 0x55ea3471d500 'bool'
|-CXXConstructorDecl 0x55ea34deddc8 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x55ea34dee008 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x55ea34dede80 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55ea34dedef8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ea34dee1b8 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x55ea34dee0f8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x55ea34dee2b0 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x55ea34dee3d8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55ea34dee498 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55ea34dee558 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55ea34dee618 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55ea34dee708 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x55ea34dee878 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55ea34dee9f8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55ea34dee938 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55ea34deeac0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x55ea34deeb80 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x55ea34deec40 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x55ea34deed00 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x55ea34deefb8 <line:36:5, col:76> col:17
| `-FunctionDecl 0x55ea34deeef8 parent 0x55ea3471d488 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55ea34deedb0 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55ea34deee28 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x55ea34def1d8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x55ea34def118 parent 0x55ea3471d488 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55ea34def008 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55ea34def080 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55ea34def318 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55ea34def228 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55ea34def460 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55ea34def3d0 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x55ea34def728 <line:41:5, col:78> col:27
| `-FunctionDecl 0x55ea34def668 parent 0x55ea3471d488 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x55ea34def518 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x55ea34def590 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55ea34def838 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x55ea34def778 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x55ea34def9b8 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x55ea34def8f0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x55ea34defa80 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x55ea34defb20 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x55ea34defb48 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ea34defc68 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x55ea34defd08 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x55ea34defd68 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x55ea34dfaa68 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55ea34dfaa68
|-CXXRecordDecl 0x55ea34defdd0 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ea34defee8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x55ea34deff88 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x55ea34df0018 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x55ea34df9600 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ea34df9a38 <col:11>
| |-CXXConstructorDecl 0x55ea34df9708 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55ea34df9708
| | `-ParmVarDecl 0x55ea34df9818 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x55ea34df98b8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55ea34df98b8
| | `-ParmVarDecl 0x55ea34df99c8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x55ea34dfa730 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x55ea34df0090 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x55ea34df00f0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x55ea34df0140 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x55ea34df0240 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55ea34df0440 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34df0220 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55ea34df0200 <col:14> 'int' 1
| |-EnumConstantDecl 0x55ea34df02d0 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55ea34df0458 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34df02b0 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x55ea34df0290 <col:30> 'int' 2
| |-EnumConstantDecl 0x55ea34df0360 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55ea34df0470 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34df0340 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x55ea34df0320 <col:52> 'int' 4
| `-EnumConstantDecl 0x55ea34df03f0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x55ea34df0488 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34df03d0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x55ea34df03b0 <col:23> 'int' 8
|-VarDecl 0x55ea34df04b0 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x55ea34df05b8 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x55ea34df0528 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55ea34df0780 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x55ea34df0670 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55ea34df06e8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x55ea34df09b8 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x55ea34df0868 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x55ea34df08e0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34e14bc0 <../elements/standard/drr.hh:59:5, line:63:5> line:59:12 referenced struct portinfo definition
|-DefinitionData aggregate standard_layout
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55ea34e14cd8 <col:5, col:12> col:12 implicit struct portinfo
|-FieldDecl 0x55ea34e14d78 <line:60:2, col:10> col:10 head 'Packet *'
|-FieldDecl 0x55ea34e14de0 <line:61:2, col:11> col:11 deficit 'unsigned int'
|-FieldDecl 0x55ea34e14e40 <line:62:2, col:17> col:17 signal 'NotifierSignal'
|-CXXConstructorDecl 0x55ea34e14ed0 <line:59:12> col:12 implicit portinfo 'void (const DRRSched::portinfo &)' inline default noexcept-unevaluated 0x55ea34e14ed0
| `-ParmVarDecl 0x55ea34e14fe8 <col:12> col:12 'const DRRSched::portinfo &'
|-CXXConstructorDecl 0x55ea34e15088 <col:12> col:12 implicit portinfo 'void (DRRSched::portinfo &&)' inline default noexcept-unevaluated 0x55ea34e15088
| `-ParmVarDecl 0x55ea34e15198 <col:12> col:12 'DRRSched::portinfo &&'
|-CXXMethodDecl 0x55ea34e15238 <col:12> col:12 implicit operator= 'DRRSched::portinfo &(DRRSched::portinfo &&)' inline default noexcept-unevaluated 0x55ea34e15238
| `-ParmVarDecl 0x55ea34e15348 <col:12> col:12 'DRRSched::portinfo &&'
`-CXXDestructorDecl 0x55ea34e153d0 <col:12> col:12 implicit ~portinfo 'void ()' inline default noexcept-unevaluated 0x55ea34e153d0

Layout: <CGRecordLayout
  LLVMType:%"struct.DRRSched::portinfo" = type { %class.Packet*, i32, [4 x i8], %class.NotifierSignal }
  NonVirtualBaseLLVMType:%"struct.DRRSched::portinfo" = type { %class.Packet*, i32, [4 x i8], %class.NotifierSignal }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34df0a68 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55ea34df0b88 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x55ea34df0c18 <col:18, col:24> col:18 public
|-EnumDecl 0x55ea34df0c40 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x55ea34df0d40 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x55ea34df0e30 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34df0d20 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x55ea34df0d00 <col:35> 'int' 0
| |-EnumConstantDecl 0x55ea34df0d90 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x55ea34df0de0 <col:55> col:55 referenced SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x55ea34df1078 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x55ea34df1010 'void (*)(void *, Notifier *)'
|   `-ParenType 0x55ea34df0fb0 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x55ea34df0f70 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x55ea3471d4e0 'void'
|       |-PointerType 0x55ea3471dce0 'void *'
|       | `-BuiltinType 0x55ea3471d4e0 'void'
|       `-PointerType 0x55ea34df0ed0 'Notifier *'
|         `-RecordType 0x55ea34df0b00 'Notifier'
|           `-CXXRecord 0x55ea34df0a68 'Notifier'
|-CXXConstructorDecl 0x55ea34df11b8 <line:78:5, col:46> col:12 used Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x55ea34df10e0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55ea34df7808 <col:35> 'Notifier::SearchOp' EnumConstant 0x55ea34df0d40 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x55ea34df13c8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x55ea34df1278 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x55ea34df12f0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55ea34df7828 <col:65> 'Notifier::SearchOp' EnumConstant 0x55ea34df0d40 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55ea34df14c8 <line:80:5, col:23> col:13 used ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x55ea34df15f8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55ea34df78e8 <col:37, line:85:5>
|   `-ReturnStmt 0x55ea34df78d8 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x55ea34df78b8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x55ea34df7888 <col:9, col:17> '<bound member function type>' .initialized 0x55ea34deed00
|         `-MemberExpr 0x55ea34df7858 <col:9> 'const NotifierSignal' lvalue ->_signal 0x55ea34df7228
|           `-CXXThisExpr 0x55ea34df7848 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x55ea34df1800 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x55ea34df16b0 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x55ea34df1728 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x55ea34df18f8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x55ea34df19e8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x55ea34df4160 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55ea34df42a0 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55ea34df4210 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55ea34df4368 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55ea34df4428 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x55ea34df46a0 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55ea34df4500 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55ea34df4580 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x55ea34df48f8 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55ea34df4760 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55ea34df47e0 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x55ea34df4a80 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x55ea34df49b8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x55ea34df4bc8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x55ea34df4b38 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x55ea34df4d50 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x55ea34df4c80 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x55ea34df4ec8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x55ea34df4e08 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x55ea34df4f90 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x55ea34df5018 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x55ea34df51e8 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55ea34df5090 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x55ea34df5110 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x55ea34df5488 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55ea34df52a8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55ea34df5328 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55ea34df53a0 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x55ea34df5728 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55ea34df5550 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55ea34df55d0 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55ea34df5648 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55ea34df5aa8 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55ea34df57f0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55ea34df5870 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x55ea34df58e8 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55ea34df5968 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x55ea34df5c90 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55ea34df5b78 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x55ea34df5bf8 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x55ea34df5ee8 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55ea34df5d50 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55ea34df5dd0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55ea34df5e48 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x55ea34df6148 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55ea34df5fb0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55ea34df6030 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55ea34df60a8 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55ea34df6430 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55ea34df6210 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x55ea34df6290 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x55ea34df6308 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55ea34df6388 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x55ea34df66e8 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55ea34df6500 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55ea34df6580 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55ea34df6600 <col:78> col:81 'int'
| `-DeprecatedAttr 0x55ea34df67a0 <col:98> "" ""
|-CXXMethodDecl 0x55ea34df6a88 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55ea34df6820 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55ea34df68a0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55ea34df6920 <col:78> col:81 'int'
| |-ParmVarDecl 0x55ea34df6998 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x55ea34df6b48 <col:110> "" ""
|-CXXMethodDecl 0x55ea34df6d68 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55ea34df6bc8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55ea34df6c48 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55ea34df6cc8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x55ea34df6e20 <col:99> "" ""
|-CXXMethodDecl 0x55ea34df70c0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55ea34df6ea0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55ea34df6f20 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55ea34df6fa0 <col:79> col:82 'int'
| |-ParmVarDecl 0x55ea34df7018 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x55ea34df7180 <col:111> "" ""
|-AccessSpecDecl 0x55ea34df71f0 <line:123:3, col:10> col:3 private
|-FieldDecl 0x55ea34df7228 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x55ea34df7288 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x55ea34df7400 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x55ea34df72f0 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x55ea34df7368 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x55ea34df74d8 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x55ea34df74d8
| `-ParmVarDecl 0x55ea34df75e8 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x55ea34df7688 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x55ea34df7688
  `-ParmVarDecl 0x55ea34df7798 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34e13d08 <../elements/standard/drr.hh:41:1, line:70:1> line:41:7 class DRRSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55ea34e13e68 <col:1, col:7> col:7 implicit referenced class DRRSched
|-AccessSpecDecl 0x55ea34e13ef8 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x55ea34e13f80 <line:43:5, col:14> col:5 DRRSched 'void ()'
|-CXXMethodDecl 0x55ea34e14080 <line:45:5, col:57> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55ea34d49258 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55ea34e15e38 <col:36, col:57>
|   `-ReturnStmt 0x55ea34e15e28 <col:38, col:45>
|     `-ImplicitCastExpr 0x55ea34e15e10 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55ea34e15df0 <col:45> 'const char [9]' lvalue "DRRSched"
|-CXXMethodDecl 0x55ea34e14148 <line:46:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55ea34d49320 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55ea34e15e98 <col:36, col:52>
|   `-ReturnStmt 0x55ea34e15e88 <col:38, col:45>
|     `-ImplicitCastExpr 0x55ea34e15e70 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55ea34e15e50 <col:45> 'const char [4]' lvalue "-/1"
|-CXXMethodDecl 0x55ea34e14210 <line:47:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55ea34d49690 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55ea34e15ef8 <col:36, col:51>
|   `-ReturnStmt 0x55ea34e15ee8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55ea34e15ed0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55ea34e15eb0 <col:45> 'const char []' lvalue Var 0x55ea34d49860 'PULL' 'const char []'
|-CXXMethodDecl 0x55ea34e142d8 <line:48:5, col:46> col:17 flags 'const char *() const'
| |-Overrides: [ 0x55ea34d49bd8 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x55ea34e15f58 <col:31, col:46>
|   `-ReturnStmt 0x55ea34e15f48 <col:33, col:40>
|     `-ImplicitCastExpr 0x55ea34e15f30 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55ea34e15f10 <col:40> 'const char [3]' lvalue "S0"
|-CXXMethodDecl 0x55ea34e14428 <line:49:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55ea34d49eb0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55ea34e14390 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55ea34e14700 <line:51:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55ea34d4a950 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55ea34e145b0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55ea34e14628 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34e14858 <line:52:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55ea34d4aba0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55ea34e147c0 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x55ea34e149a0 <line:53:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55ea34d4b3b8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55ea34e14910 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55ea34e14af0 <line:55:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55ea34d48288 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55ea34e14a60 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x55ea34e14b98 <line:57:3, col:10> col:3 private
|-CXXRecordDecl 0x55ea34e14bc0 <line:59:5, line:63:5> line:59:12 referenced struct portinfo definition
| |-DefinitionData aggregate standard_layout
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55ea34e14cd8 <col:5, col:12> col:12 implicit struct portinfo
| |-FieldDecl 0x55ea34e14d78 <line:60:2, col:10> col:10 head 'Packet *'
| |-FieldDecl 0x55ea34e14de0 <line:61:2, col:11> col:11 deficit 'unsigned int'
| |-FieldDecl 0x55ea34e14e40 <line:62:2, col:17> col:17 signal 'NotifierSignal'
| |-CXXConstructorDecl 0x55ea34e14ed0 <line:59:12> col:12 implicit portinfo 'void (const DRRSched::portinfo &)' inline default noexcept-unevaluated 0x55ea34e14ed0
| | `-ParmVarDecl 0x55ea34e14fe8 <col:12> col:12 'const DRRSched::portinfo &'
| |-CXXConstructorDecl 0x55ea34e15088 <col:12> col:12 implicit portinfo 'void (DRRSched::portinfo &&)' inline default noexcept-unevaluated 0x55ea34e15088
| | `-ParmVarDecl 0x55ea34e15198 <col:12> col:12 'DRRSched::portinfo &&'
| |-CXXMethodDecl 0x55ea34e15238 <col:12> col:12 implicit operator= 'DRRSched::portinfo &(DRRSched::portinfo &&)' inline default noexcept-unevaluated 0x55ea34e15238
| | `-ParmVarDecl 0x55ea34e15348 <col:12> col:12 'DRRSched::portinfo &&'
| `-CXXDestructorDecl 0x55ea34e153d0 <col:12> col:12 implicit ~portinfo 'void ()' inline default noexcept-unevaluated 0x55ea34e153d0
|-FieldDecl 0x55ea34e154c8 <line:65:5, col:9> col:9 _quantum 'int'
|-FieldDecl 0x55ea34e15558 <line:66:5, col:15> col:15 _pi 'DRRSched::portinfo *'
|-FieldDecl 0x55ea34e155b8 <line:67:5, col:14> col:14 _notifier 'Notifier'
|-FieldDecl 0x55ea34e15620 <line:68:5, col:9> col:9 _next 'int'
|-CXXConstructorDecl 0x55ea34e15698 <line:41:7> col:7 implicit DRRSched 'void (const DRRSched &)' inline default_delete noexcept-unevaluated 0x55ea34e15698
| `-ParmVarDecl 0x55ea34e157a8 <col:7> col:7 'const DRRSched &'
|-CXXConstructorDecl 0x55ea34e15848 <col:7> col:7 implicit DRRSched 'void (DRRSched &&)' inline default_delete noexcept-unevaluated 0x55ea34e15848
| `-ParmVarDecl 0x55ea34e15958 <col:7> col:7 'DRRSched &&'
|-CXXMethodDecl 0x55ea34e159f8 <col:7> col:7 implicit operator= 'DRRSched &(const DRRSched &)' inline default_delete noexcept-unevaluated 0x55ea34e159f8
| `-ParmVarDecl 0x55ea34e15b08 <col:7> col:7 'const DRRSched &'
|-CXXMethodDecl 0x55ea34e15b78 <col:7> col:7 implicit operator= 'DRRSched &(DRRSched &&)' inline default_delete noexcept-unevaluated 0x55ea34e15b78
| `-ParmVarDecl 0x55ea34e15c88 <col:7> col:7 'DRRSched &&'
`-CXXDestructorDecl 0x55ea34e15d10 <col:7> col:7 implicit ~DRRSched 'void ()' inline default noexcept-unevaluated 0x55ea34e15d10
  `-Overrides: [ 0x55ea34d47e28 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.DRRSched = type <{ %class.Element.base, i32, %"struct.DRRSched::portinfo"*, %class.Notifier, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.DRRSched.base = type <{ %class.Element.base, i32, %"struct.DRRSched::portinfo"*, %class.Notifier, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34964ad0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55ea34966d70 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55ea34966e10 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55ea34966e70 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55ea34966ed0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55ea34966f80 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34967290 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea349673a8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55ea34967450 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55ea349674b8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55ea34967548 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55ea3496b780 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ea3496bbb8 <col:12>
|-CXXConstructorDecl 0x55ea3496b888 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea3496b998 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55ea34967450 'data' 'const char *'
| | `-ImplicitCastExpr 0x55ea3496e870 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55ea3496e840 <col:12> 'const char *const' lvalue .data 0x55ea34967450
| |     `-DeclRefExpr 0x55ea3496e820 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3496b998 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55ea349674b8 'length' 'int'
| | `-ImplicitCastExpr 0x55ea3496e900 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55ea3496e8d0 <col:12> 'const int' lvalue .length 0x55ea349674b8
| |     `-DeclRefExpr 0x55ea3496e8b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3496b998 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55ea34967548 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55ea3496e990 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55ea3496e960 <col:12> 'String::memo_t *const' lvalue .memo 0x55ea34967548
| |     `-DeclRefExpr 0x55ea3496e940 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3496b998 '' 'const String::rep_t &'
| `-CompoundStmt 0x55ea3496e9e8 <col:12>
|-CXXConstructorDecl 0x55ea3496ba38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ea3496ba38
| `-ParmVarDecl 0x55ea3496bb48 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55ea34973fc0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55ea3497f928 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea3497fa38 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55ea3497ff50 <col:12>
|   |-BinaryOperator 0x55ea3497fd68 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55ea3497fd20 <col:12> 'const char *' lvalue ->data 0x55ea34967450
|   | | `-CXXThisExpr 0x55ea3497fd10 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55ea3497fd50 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55ea3497fce0 <col:12> 'const char *const' lvalue .data 0x55ea34967450
|   |     `-DeclRefExpr 0x55ea3497fcc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3497fa38 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55ea3497fe30 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55ea3497fde8 <col:12> 'int' lvalue ->length 0x55ea349674b8
|   | | `-CXXThisExpr 0x55ea3497fdd8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55ea3497fe18 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55ea3497fda8 <col:12> 'const int' lvalue .length 0x55ea349674b8
|   |     `-DeclRefExpr 0x55ea3497fd88 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3497fa38 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55ea3497fef8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55ea3497feb0 <col:12> 'String::memo_t *' lvalue ->memo 0x55ea34967548
|   | | `-CXXThisExpr 0x55ea3497fea0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55ea3497fee0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55ea3497fe70 <col:12> 'String::memo_t *const' lvalue .memo 0x55ea34967548
|   |     `-DeclRefExpr 0x55ea3497fe50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3497fa38 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55ea3497ff40 <col:12>
|     `-UnaryOperator 0x55ea3497ff28 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea3497ff18 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55ea3497faa8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ea3497faa8
  `-ParmVarDecl 0x55ea3497fbb8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea3495b1e0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea3495b2f8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55ea3495b388 <col:16, col:22> col:16 public
|-TypedefDecl 0x55ea3495b3c8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55ea3471dfd0 'const char *'
|   `-QualType 0x55ea3471d521 'const char' const
|     `-BuiltinType 0x55ea3471d520 'char'
|-TypedefDecl 0x55ea3495b450 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55ea3495b420 'String::const_iterator' sugar
|   |-Typedef 0x55ea3495b3c8 'const_iterator'
|   `-PointerType 0x55ea3471dfd0 'const char *'
|     `-QualType 0x55ea3471d521 'const char' const
|       `-BuiltinType 0x55ea3471d520 'char'
|-TypedefDecl 0x55ea3495b5f0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55ea3495b560 'int (String::*)() const'
|   |-RecordType 0x55ea3495b270 'String'
|   | `-CXXRecord 0x55ea3495b1e0 'String'
|   `-ParenType 0x55ea3495b500 'int () const' sugar
|     `-FunctionProtoType 0x55ea3495b4d0 'int () const' const cdecl
|       `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea3495b658 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55ea34876180 'int64_t' sugar
|   |-Typedef 0x55ea34786390 'int64_t'
|   `-TypedefType 0x55ea3475f630 '__int64_t' sugar
|     |-Typedef 0x55ea3475f208 '__int64_t'
|     `-BuiltinType 0x55ea3471d5a0 'long'
|-TypedefDecl 0x55ea3495b6c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55ea348760a0 'uint64_t' sugar
|   |-Typedef 0x55ea34786530 'uint64_t'
|   `-TypedefType 0x55ea3475f6c0 '__uint64_t' sugar
|     |-Typedef 0x55ea3475f278 '__uint64_t'
|     `-BuiltinType 0x55ea3471d640 'unsigned long'
|-TypedefDecl 0x55ea3495b750 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55ea3495b720 'String::intmax_t' sugar
|   |-Typedef 0x55ea3495b658 'intmax_t'
|   `-TypedefType 0x55ea34876180 'int64_t' sugar
|     |-Typedef 0x55ea34786390 'int64_t'
|     `-TypedefType 0x55ea3475f630 '__int64_t' sugar
|       |-Typedef 0x55ea3475f208 '__int64_t'
|       `-BuiltinType 0x55ea3471d5a0 'long'
|-TypedefDecl 0x55ea3495b7e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55ea3495b7b0 'String::uintmax_t' sugar
|   |-Typedef 0x55ea3495b6c0 'uintmax_t'
|   `-TypedefType 0x55ea348760a0 'uint64_t' sugar
|     |-Typedef 0x55ea34786530 'uint64_t'
|     `-TypedefType 0x55ea3475f6c0 '__uint64_t' sugar
|       |-Typedef 0x55ea3475f278 '__uint64_t'
|       `-BuiltinType 0x55ea3471d640 'unsigned long'
|-CXXConstructorDecl 0x55ea3495b8a0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55ea3495ba48 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55ea3495b988 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55ea3495bbf8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55ea3495bb38 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55ea3495bd50 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55ea3495bcc0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55ea3495bfd0 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55ea3495be18 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55ea3495be98 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55ea3495c228 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55ea3495c0d0 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55ea3495c150 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55ea3495c448 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55ea3495c2f8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55ea3495c378 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55ea3495c668 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55ea3495c518 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55ea3495c598 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55ea3495c7f8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55ea3495c730 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55ea3495c978 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55ea3495c8b8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55ea3495cb08 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55ea3495ca40 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55ea3495cc60 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55ea3495cbd0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55ea3495cde8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55ea3495cd28 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55ea3495cf78 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55ea3495ceb0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55ea3495d108 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55ea3495d040 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55ea3495d298 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55ea3495d1d0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55ea3495d428 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55ea3495d360 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55ea3495d5b8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55ea3495d4f0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55ea3495d6b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55ea3495d7d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55ea3495d958 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55ea3495d890 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55ea3495daa8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55ea3495da18 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55ea3495db50 <col:63> "" ""
|-CXXMethodDecl 0x55ea3495dc98 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55ea3495dbd8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55ea3495dea8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55ea3495dd58 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55ea3495ddd8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55ea3495e548 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55ea3495e3f0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55ea3495e470 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55ea3495e828 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55ea3495e608 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55ea3495e688 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55ea3496b250 <col:55> 'int' 10
| `-ParmVarDecl 0x55ea3495e700 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ea3496b270 <col:76> 'bool' true
|-CXXMethodDecl 0x55ea3495eb08 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55ea3495e8f0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55ea3495e970 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55ea3496b280 <col:56> 'int' 10
| `-ParmVarDecl 0x55ea3495e9e8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ea3496b2a0 <col:77> 'bool' true
|-CXXMethodDecl 0x55ea3495ec10 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55ea3495ecd8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55ea3495eda0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55ea3495ee40 <col:20>
| `-OptimizeNoneAttr 0x55ea3495ee98 <col:30>
|-CXXConversionDecl 0x55ea3495ef88 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55ea3495f058 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55ea3495f118 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55ea3495f208 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55ea3495f2c8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55ea3495f448 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55ea3495f380 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55ea3495f598 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55ea3495f508 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55ea3495f688 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55ea3495f748 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55ea3495f998 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55ea3495f800 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55ea3495f880 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55ea3495fbf8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55ea3495fa60 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55ea3495fae0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55ea3495fcc8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea3495fed8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55ea3495fd80 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55ea3495fe00 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55ea349600f8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55ea3495ffa0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55ea34960020 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55ea34960288 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55ea349601c0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55ea349608d0 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55ea34960a48 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55ea34960980 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55ea34960c58 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55ea34960b08 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55ea34960b88 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55ea34960e70 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55ea34960d18 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55ea34960d90 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55ea34961000 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55ea34960f30 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55ea34961220 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55ea349610c0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55ea34961140 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55ea34961370 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55ea349612e0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55ea34961548 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55ea34961430 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55ea349614b0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55ea34961698 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55ea34961608 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55ea349618b0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55ea34961750 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55ea349617d0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55ea3496b2b0 <col:39> 'int' 0
|-CXXMethodDecl 0x55ea34961ad0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55ea34961970 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55ea349619f0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55ea3496b2d0 <col:48> 'int' 0
|-CXXMethodDecl 0x55ea34961cb0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55ea34961b90 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55ea34961c10 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55ea3496b2f0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55ea34961d80 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55ea34961e40 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55ea34961f00 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55ea34961fc0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55ea34962080 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55ea34962228 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55ea34962130 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55ea349623a8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55ea349622e0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55ea34962528 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55ea34962468 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55ea349626a8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55ea349625e0 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55ea349627f0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55ea34962760 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55ea34962ce0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55ea34962c50 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55ea34962eb8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55ea34962da0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55ea34962e20 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55ea34963098 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55ea34962f80 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55ea34963000 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55ea349631e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55ea34963158 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55ea349633f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55ea349632a8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55ea34963328 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55ea34963558 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55ea349634c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55ea349636b0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55ea34963618 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55ea34963758 <col:57> "" ""
|-CXXMethodDecl 0x55ea34963868 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55ea349637d8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55ea349639b8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55ea34963928 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55ea34963b38 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55ea34963a70 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55ea34963c00 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55ea34963cc0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55ea34963d80 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55ea34963e20 <col:49> "" ""
|-CXXMethodDecl 0x55ea34963eb0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55ea34963f70 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55ea34964060 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55ea34964128 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55ea349641e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55ea349642a8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55ea349643a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55ea34964468 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55ea34964530 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55ea34964708 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55ea349645e8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55ea34964668 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55ea34964930 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55ea349647d0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55ea34964850 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55ea34964a40 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55ea34964aa8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55ea34964ad0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ea34966d70 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55ea34966e10 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55ea34966e70 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55ea34966ed0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55ea34966f80 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55ea34966fe8 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55ea34967228 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55ea34967278 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34967208 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55ea34967118 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55ea349670c0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55ea34967100 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55ea349670e0 <col:32> 'int' 8
|-CXXRecordDecl 0x55ea34967290 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ea349673a8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55ea34967450 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55ea349674b8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55ea34967548 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55ea3496b780 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ea3496bbb8 <col:12>
| |-CXXConstructorDecl 0x55ea3496b888 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ea3496b998 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55ea34967450 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55ea3496e870 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55ea3496e840 <col:12> 'const char *const' lvalue .data 0x55ea34967450
| | |     `-DeclRefExpr 0x55ea3496e820 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3496b998 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55ea349674b8 'length' 'int'
| | | `-ImplicitCastExpr 0x55ea3496e900 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55ea3496e8d0 <col:12> 'const int' lvalue .length 0x55ea349674b8
| | |     `-DeclRefExpr 0x55ea3496e8b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3496b998 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55ea34967548 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55ea3496e990 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55ea3496e960 <col:12> 'String::memo_t *const' lvalue .memo 0x55ea34967548
| | |     `-DeclRefExpr 0x55ea3496e940 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3496b998 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55ea3496e9e8 <col:12>
| |-CXXConstructorDecl 0x55ea3496ba38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ea3496ba38
| | `-ParmVarDecl 0x55ea3496bb48 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55ea34973fc0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55ea3497f928 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ea3497fa38 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55ea3497ff50 <col:12>
| |   |-BinaryOperator 0x55ea3497fd68 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55ea3497fd20 <col:12> 'const char *' lvalue ->data 0x55ea34967450
| |   | | `-CXXThisExpr 0x55ea3497fd10 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55ea3497fd50 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55ea3497fce0 <col:12> 'const char *const' lvalue .data 0x55ea34967450
| |   |     `-DeclRefExpr 0x55ea3497fcc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3497fa38 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55ea3497fe30 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55ea3497fde8 <col:12> 'int' lvalue ->length 0x55ea349674b8
| |   | | `-CXXThisExpr 0x55ea3497fdd8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55ea3497fe18 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55ea3497fda8 <col:12> 'const int' lvalue .length 0x55ea349674b8
| |   |     `-DeclRefExpr 0x55ea3497fd88 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3497fa38 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55ea3497fef8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55ea3497feb0 <col:12> 'String::memo_t *' lvalue ->memo 0x55ea34967548
| |   | | `-CXXThisExpr 0x55ea3497fea0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55ea3497fee0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55ea3497fe70 <col:12> 'String::memo_t *const' lvalue .memo 0x55ea34967548
| |   |     `-DeclRefExpr 0x55ea3497fe50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ea3497fa38 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55ea3497ff40 <col:12>
| |     `-UnaryOperator 0x55ea3497ff28 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55ea3497ff18 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55ea3497faa8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ea3497faa8
|   `-ParmVarDecl 0x55ea3497fbb8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55ea349675c0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55ea34967808 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55ea34967628 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55ea349676a8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55ea34967720 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55ea3496b740 <col:79, line:261:5>
|   |-BinaryOperator 0x55ea3496b3b8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55ea3496b350 <col:2, col:5> 'const char *' lvalue .data 0x55ea34967450
|   | | `-MemberExpr 0x55ea3496b320 <col:2> 'String::rep_t' lvalue ->_r 0x55ea349675c0
|   | |   `-CXXThisExpr 0x55ea3496b310 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55ea3496b3a0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ea3496b380 <col:12> 'const char *' lvalue ParmVar 0x55ea34967628 'data' 'const char *'
|   |-BinaryOperator 0x55ea3496b480 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55ea3496b418 <col:2, col:5> 'int' lvalue .length 0x55ea349674b8
|   | | `-MemberExpr 0x55ea3496b3e8 <col:2> 'String::rep_t' lvalue ->_r 0x55ea349675c0
|   | |   `-CXXThisExpr 0x55ea3496b3d8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55ea3496b468 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ea3496b448 <col:14> 'int' lvalue ParmVar 0x55ea349676a8 'length' 'int'
|   `-IfStmt 0x55ea3496b728 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55ea3496b5a0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55ea3496b588 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55ea3496b568 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55ea3496b548 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55ea3496b4e0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55ea34967548
|     |       | `-MemberExpr 0x55ea3496b4b0 <col:7> 'String::rep_t' lvalue ->_r 0x55ea349675c0
|     |       |   `-CXXThisExpr 0x55ea3496b4a0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55ea3496b530 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ea3496b510 <col:17> 'String::memo_t *' lvalue ParmVar 0x55ea34967720 'memo' 'String::memo_t *'
|     `-CallExpr 0x55ea3496b700 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55ea3496b6e8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ea3496b5f0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55ea34941e38 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55ea3496b658 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55ea34966e10
|         `-ImplicitCastExpr 0x55ea3496b640 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55ea3496b620 <col:27> 'String::memo_t *' lvalue ParmVar 0x55ea34967720 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55ea34967ab8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55ea349678d8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55ea34967958 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55ea349679d0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55ea349675c0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55ea3496bbc8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ea3496bd58 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55ea3496bcc0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55ea3496bc30 <col:2> '<bound member function type>' ->assign_memo 0x55ea34967808
|     | `-ImplicitCastExpr 0x55ea3496bcf8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55ea3496bc20 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55ea3496bd10 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55ea3496bc60 <col:14> 'const char *' lvalue ParmVar 0x55ea349678d8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55ea3496bd28 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55ea3496bc80 <col:20> 'int' lvalue ParmVar 0x55ea34967958 'length' 'int'
|     `-ImplicitCastExpr 0x55ea3496bd40 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55ea3496bca0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55ea349679d0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55ea34967c48 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55ea34967b88 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55ea3496bfb0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55ea3496bf30 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55ea3496bd80 <col:2> '<bound member function type>' ->assign_memo 0x55ea34967808
|     | `-CXXThisExpr 0x55ea3496bd70 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55ea3496bf68 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55ea3496be00 <col:14, col:19> 'const char *' lvalue .data 0x55ea34967450
|     |   `-MemberExpr 0x55ea3496bdd0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55ea349675c0
|     |     `-DeclRefExpr 0x55ea3496bdb0 <col:14> 'const String' lvalue ParmVar 0x55ea34967b88 'x' 'const String &'
|     |-ImplicitCastExpr 0x55ea3496bf80 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55ea3496be80 <col:25, col:30> 'int' lvalue .length 0x55ea349674b8
|     |   `-MemberExpr 0x55ea3496be50 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55ea349675c0
|     |     `-DeclRefExpr 0x55ea3496be30 <col:25> 'const String' lvalue ParmVar 0x55ea34967b88 'x' 'const String &'
|     `-ImplicitCastExpr 0x55ea3496bf98 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55ea3496bf00 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55ea34967548
|         `-MemberExpr 0x55ea3496bed0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55ea349675c0
|           `-DeclRefExpr 0x55ea3496beb0 <col:38> 'const String' lvalue ParmVar 0x55ea34967b88 'x' 'const String &'
|-CXXMethodDecl 0x55ea34967d10 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55ea3496d078 <col:31, line:278:5>
|   `-IfStmt 0x55ea3496d060 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55ea3496c050 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55ea3496c038 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55ea3496c008 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55ea34967548
|     |     `-MemberExpr 0x55ea3496bfd8 <col:6> 'String::rep_t' lvalue ->_r 0x55ea349675c0
|     |       `-CXXThisExpr 0x55ea3496bfc8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55ea3496d038 <col:15, line:277:2>
|       |-ParenExpr 0x55ea3496c5f0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55ea3496c5c0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55ea3496c160 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55ea3496c148 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55ea3496c130 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55ea3496c0f0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55ea34966e10
|       |   |       `-ImplicitCastExpr 0x55ea3496c0d8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55ea3496c0a8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55ea34967548
|       |   |           `-MemberExpr 0x55ea3496c078 <col:27> 'String::rep_t' lvalue ->_r 0x55ea349675c0
|       |   |             `-CXXThisExpr 0x55ea3496c068 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55ea3496c1c0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55ea3496c1a0 <col:54> 'int' 0
|       |   `-CallExpr 0x55ea3496c520 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55ea3496c508 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55ea3496c490 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55ea3496c560 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55ea3496c2a8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55ea3496c578 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55ea3496c358 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55ea3496c590 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55ea3496c390 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55ea3496c5a8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55ea3496c478 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55ea3496c460 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55ea3496c428 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55ea3496cf58 <line:274:6, line:275:22>
|       | |-CallExpr 0x55ea3496c800 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55ea3496c7e8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55ea3496c760 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55ea349471d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55ea3496c730 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55ea34966e10
|       | |   `-ImplicitCastExpr 0x55ea3496c718 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55ea3496c6e8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55ea34967548
|       | |       `-MemberExpr 0x55ea3496c6b8 <col:40> 'String::rep_t' lvalue ->_r 0x55ea349675c0
|       | |         `-CXXThisExpr 0x55ea3496c6a8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55ea3496c900 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55ea3496c8e8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55ea3496c828 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55ea349689e8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55ea3496cf40 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55ea3496c888 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55ea34967548
|       |       `-MemberExpr 0x55ea3496c858 <col:15> 'String::rep_t' lvalue ->_r 0x55ea349675c0
|       |         `-CXXThisExpr 0x55ea3496c848 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55ea3496d018 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55ea3496cfb0 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55ea34967548
|         | `-MemberExpr 0x55ea3496cf80 <col:6> 'String::rep_t' lvalue ->_r 0x55ea349675c0
|         |   `-CXXThisExpr 0x55ea3496cf70 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55ea3496d000 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55ea3496cfe0 <col:16> 'int' 0
|-CXXMethodDecl 0x55ea34967fa8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55ea34967dc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55ea34967e48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55ea34967ec0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55ea34968080 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55ea349682d0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55ea34968138 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55ea349681b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55ea34968230 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55ea349684b8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55ea349683a0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55ea34968420 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55ea349685b8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55ea3496d170 <col:41, line:286:5>
|   `-ReturnStmt 0x55ea3496d160 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55ea3496d130 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55ea3496d0f8 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55ea3496d0e0 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55ea3496d0c0 <col:46> 'int' 1
|-CXXMethodDecl 0x55ea34968858 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55ea34968670 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55ea349686f0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55ea34968770 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55ea349689e8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55ea34968920 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55ea34968ab8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55ea34968c88 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55ea34968b70 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55ea34968bf0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55ea3496a930 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55ea3496aa78 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55ea3496abb8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55ea3496ac30 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55ea3496aca8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55ea3496ad10 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55ea3496ae10 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55ea3496ae60 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea3496adf0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55ea3496add0 <col:22> 'int' 14
|-CXXMethodDecl 0x55ea3496b078 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55ea3496ae90 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55ea3496af10 <col:38> col:41 'int'
| `-ParmVarDecl 0x55ea3496af90 <col:43> col:46 'int'
|-FriendDecl 0x55ea3496b180 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55ea3496b210 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34ab7820 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55ea34ab79f8 prev 0x55ea34ab7820 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ea34ab7a88 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ea34abb1a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34abcb00 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55ea34abcab0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55ea34abca90 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55ea34abb3b8 'type'
|     `-SubstTemplateTypeParmType 0x55ea34abb380 'String' sugar
|       |-TemplateTypeParmType 0x55ea34a6ab60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a6ab10 'T'
|       `-RecordType 0x55ea3495b270 'String'
|         `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abcbb8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55ea34abcb80 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55ea34abcb60 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55ea34abcb00 'type'
|     `-ElaboratedType 0x55ea34abcab0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55ea34abca90 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55ea34abb3b8 'type'
|         `-SubstTemplateTypeParmType 0x55ea34abb380 'String' sugar
|           |-TemplateTypeParmType 0x55ea34a6ab60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ea34a6ab10 'T'
|           `-RecordType 0x55ea3495b270 'String'
|             `-CXXRecord 0x55ea3495b1e0 'String'
|-CXXMethodDecl 0x55ea34abcd38 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55ea34abcc48 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55ea34abce28 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ea34abcf08 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ea34abcf08
|-CXXMethodDecl 0x55ea34abd1d8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55ea34abd0e0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55ea34abd418 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55ea34abd290 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34abd308 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ea34abd5e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55ea34abd4d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34abd550 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ea34abd748 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55ea34abd818 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55ea34abda68 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55ea34abd8d8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55ea34abd950 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ea34abdcc8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55ea34abdb38 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55ea34abdbb0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ea34abde88 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55ea34abdd98 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ea34abe048 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55ea34abdf50 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ea34abe100 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34abe1b0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34abe3e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55ea34abe260 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34abe2d8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ea34abe688 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55ea34abe590 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55ea34abe750 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55ea34abe7a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ea34abe7f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34a976b0 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55ea34ab6288 prev 0x55ea34a976b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ea34ab7790 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55ea34ab7740 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55ea34ab7720 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55ea34ab75d0 'type'
|     `-SubstTemplateTypeParmType 0x55ea34ab7460 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55ea349c6010 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55ea349c5fb8 'F'
|       `-RecordType 0x55ea34ab70c0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55ea34ab6fe0 'typed_array_memory'
|-FieldDecl 0x55ea34abe840 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55ea34abe890 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ea34abe8c8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55ea34ab6320 'String' sugar
|   |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ea34a766b0 'T'
|   `-RecordType 0x55ea3495b270 'String'
|     `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abe958 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55ea34abe920 'String &'
|   `-SubstTemplateTypeParmType 0x55ea34ab6320 'String' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea3495b270 'String'
|       `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abe9e8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55ea34abe9b0 'const String &'
|   `-QualType 0x55ea34ab6321 'const String' const
|     `-SubstTemplateTypeParmType 0x55ea34ab6320 'String' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea3495b270 'String'
|         `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abea78 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55ea34abea40 'String *'
|   `-SubstTemplateTypeParmType 0x55ea34ab6320 'String' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea3495b270 'String'
|       `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abeb08 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55ea34abead0 'const String *'
|   `-QualType 0x55ea34ab6321 'const String' const
|     `-SubstTemplateTypeParmType 0x55ea34ab6320 'String' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea3495b270 'String'
|         `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abf790 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55ea34abf740 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55ea34abf720 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55ea34abf658 'type'
|     `-LValueReferenceType 0x55ea34abf620 'const String &'
|       `-QualType 0x55ea34abf3c1 'const String' const
|         `-SubstTemplateTypeParmType 0x55ea34abf3c0 'String' sugar
|           |-TemplateTypeParmType 0x55ea349cf250 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ea349cf1f8 'T'
|           `-RecordType 0x55ea3495b270 'String'
|             `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abf7f8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55ea34abe9b0 'const String &'
|   `-QualType 0x55ea34ab6321 'const String' const
|     `-SubstTemplateTypeParmType 0x55ea34ab6320 'String' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea3495b270 'String'
|         `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abf850 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34abf8b8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55ea34abea40 'String *'
|   `-SubstTemplateTypeParmType 0x55ea34ab6320 'String' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea3495b270 'String'
|       `-CXXRecord 0x55ea3495b1e0 'String'
|-TypedefDecl 0x55ea34abf920 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55ea34abead0 'const String *'
|   `-QualType 0x55ea34ab6321 'const String' const
|     `-SubstTemplateTypeParmType 0x55ea34ab6320 'String' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea3495b270 'String'
|         `-CXXRecord 0x55ea3495b1e0 'String'
|-EnumDecl 0x55ea34abf978 <line:134:5> col:5
| `-EnumConstantDecl 0x55ea34abfa70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ea34abfa50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ea34a778c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ea34a778a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ea34a77880 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ea34abfaf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ea34abfd88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34abfbb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34abfc50 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55ea34ac0018 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55ea34abff00 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55ea34ac02d8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55ea34ac01c0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55ea34ac05f0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55ea34ac04d0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55ea34ac0900 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55ea34ac07e0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55ea34ac0bf0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34ac0a38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34ac0ab0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55ea34ac0d18 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55ea34ac0dc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34ac0e20 <col:30> Inherited
|-CXXMethodDecl 0x55ea34ac0e68 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55ea34ac0f18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34ac0f70 <col:30> Inherited
|-CXXMethodDecl 0x55ea34ac1038 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55ea34ac10e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34ac1140 <col:30> Inherited
|-CXXMethodDecl 0x55ea34ac1188 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55ea34ac1238 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34ac1290 <col:30> Inherited
|-CXXMethodDecl 0x55ea34ac12d8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55ea34ac1388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34ac13e0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34ac1428 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55ea34ac14d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34ac1530 <col:30> Inherited
|-CXXMethodDecl 0x55ea34ac1558 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34ac1608 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34ac16b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ea34ac1878 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34ac1768 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34ac17e0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55ea34ac19c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34ac1938 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34ac1b78 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55ea34ac1a80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34ac1c30 <col:20>
| `-OptimizeNoneAttr 0x55ea34ac1c88 <col:30>
|-CXXMethodDecl 0x55ea34ac1da8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55ea34ac1cb0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34ac1e60 <col:20>
| `-OptimizeNoneAttr 0x55ea34ac1eb8 <col:30>
|-CXXMethodDecl 0x55ea34ac1f70 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34ac1ee0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34ac20b8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34ac2028 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34ac21e8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55ea34ac2318 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55ea34ac23e8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55ea34ac24b8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55ea34ac25f8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34ac2568 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34ac2740 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34ac26b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34ac2888 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ea34ac27f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34ac2940 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ea34ac2a40 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ea34ac29b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34ac2af8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ea34ac2bb8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55ea34ac2cb8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55ea34ac2e38 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34ac2d78 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55ea34ac3618 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ea34ac2ef0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55ea34ac3578 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55ea34ac3478 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55ea34ac36f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34ac3848 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34ac37b8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55ea34ac3900 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ea34ac3b48 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34ac39c0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55ea34ac3a38 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55ea34ac3cd8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55ea34ac3c18 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55ea34ac3ee8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55ea34ac3da0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55ea34ac3e18 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55ea34ac3fa8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55ea34ac4208 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55ea34ac4110 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55ea34ac42d8 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ea34ac42d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea349aba70 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea349abb88 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55ea349abc18 <col:22, col:28> col:22 public
|-EnumDecl 0x55ea349abc40 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55ea349abd58 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349abd38 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55ea349abd20 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ea349abd00 <col:14> 'int' 999
| |-EnumConstantDecl 0x55ea349abe00 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349abde0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55ea349abdc8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ea349abda8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55ea349abe90 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349abe70 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55ea349abe50 <col:17> 'int' 0
| |-EnumConstantDecl 0x55ea349abf20 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349abf00 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55ea349abee0 <col:13> 'int' 1
| |-EnumConstantDecl 0x55ea349abfb0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349abf90 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55ea349abf70 <col:16> 'int' 2
| |-EnumConstantDecl 0x55ea349ac040 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349ac020 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55ea349ac000 <col:13> 'int' 3
| |-EnumConstantDecl 0x55ea349ac0d0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349ac0b0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55ea349ac090 <col:15> 'int' 4
| |-EnumConstantDecl 0x55ea349ac160 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349ac140 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55ea349ac120 <col:14> 'int' 5
| |-EnumConstantDecl 0x55ea349ac1f0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ea349ac1d0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55ea349ac1b0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55ea349ac280 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55ea349ac260 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55ea349ac240 <col:13> 'int' 7
|-VarDecl 0x55ea349ac348 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55ea349ac3d0 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55ea349ac458 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55ea349ac4e0 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55ea349ac568 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55ea349ac5f0 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55ea349ac6a0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55ea349ac728 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55ea349ac7b0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55ea349ac838 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55ea349ac8c0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55ea349ac9f0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55ea349b2038 '_nerrors' 'int'
| | `-IntegerLiteral 0x55ea349b27c8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55ea349b4570 <col:16, line:129:5>
|-CXXDestructorDecl 0x55ea349acae0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55ea349b4580 <col:29, line:132:5>
|-CXXMethodDecl 0x55ea349acc98 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55ea349acbd0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ea349acd60 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55ea349ace48 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55ea349b45d8 <col:44, line:161:5>
|   `-ReturnStmt 0x55ea349b45c8 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55ea349b45b0 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55ea349b4590 <col:9> 'ErrorHandler *' lvalue Var 0x55ea349b2098 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55ea349acfb8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55ea349acef8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ea349ad080 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55ea349b4638 <col:43, line:173:5>
|   `-ReturnStmt 0x55ea349b4628 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55ea349b4610 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55ea349b45f0 <col:9> 'ErrorHandler *' lvalue Var 0x55ea349b2110 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55ea349ad138 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55ea349ad1b8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55ea349ad300 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55ea349ad238 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ad450 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55ea349ad3c0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ad5a8 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55ea349ad510 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ad700 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x55ea349ad668 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ad858 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55ea349ad7c0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ada70 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ea349ad910 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55ea349ad990 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55ea349adc48 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ea349adb30 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55ea349adbb0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ade68 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ea349add08 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55ea349add88 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ae048 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ea349adf28 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55ea349adfa8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ae228 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ea349ae108 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55ea349ae188 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55ea349ae3b0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55ea349ae2e8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55ea349ae580 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55ea349ae468 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55ea349ae4e0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55ea349b4898 <col:57, line:234:5>
|   `-ReturnStmt 0x55ea349b4888 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55ea349b4870 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55ea349b4818 <col:9, col:41> 'int'
|         |-MemberExpr 0x55ea349b47e8 <col:9> '<bound member function type>' ->xmessage 0x55ea349ae3b0
|         | `-CXXThisExpr 0x55ea349b47d8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55ea349b4858 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55ea349b4840 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55ea349b47b8 <col:18, col:40> 'String' (CXXTemporary 0x55ea349b47b8)
|               `-CallExpr 0x55ea349b4780 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55ea349b4768 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55ea349b46d8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55ea349b0820 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55ea349b46f8 <col:31> 'const String' lvalue ParmVar 0x55ea349ae4e0 'str' 'const String &'
|                 `-DeclRefExpr 0x55ea349b4718 <col:36> 'const String' lvalue ParmVar 0x55ea349ae468 'anno' 'const String &'
|-CXXMethodDecl 0x55ea349ae930 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55ea349ae6b0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55ea349ae730 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55ea349ae800 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55ea349b4b28 <col:68, line:243:5>
|   `-ReturnStmt 0x55ea349b4b18 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55ea349b4b00 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55ea349b4aa0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55ea349b4a70 <col:9> '<bound member function type>' ->xmessage 0x55ea349ae580
|         | `-CXXThisExpr 0x55ea349b4a60 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55ea349b4938 <col:18> 'const String' lvalue ParmVar 0x55ea349ae6b0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55ea349b4ae8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55ea349b4ad0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55ea349b4a40 <col:24, col:40> 'String' (CXXTemporary 0x55ea349b4a40)
|               `-CXXMemberCallExpr 0x55ea349b49d8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55ea349b4968 <col:24> '<bound member function type>' ->vformat 0x55ea349afb10
|                 | `-CXXThisExpr 0x55ea349b4958 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55ea349b4a08 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55ea349b4998 <col:32> 'const char *' lvalue ParmVar 0x55ea349ae730 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55ea349b4a20 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55ea349b49b8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55ea349ae800 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ea349aebd0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55ea349ae9f8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55ea349aea70 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55ea349aeae8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55ea349b4e68 <col:23, line:254:5>
|   `-ReturnStmt 0x55ea349b4e58 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55ea349b4e40 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55ea349b4de0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55ea349b4db0 <col:9> '<bound member function type>' ->xmessage 0x55ea349ae580
|         | `-CXXThisExpr 0x55ea349b4da0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55ea349b4e28 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55ea349b4e10 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55ea349b4d60 <col:18, col:65> 'String' (CXXTemporary 0x55ea349b4d60)
|         |     `-CallExpr 0x55ea349b4cf8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55ea349b4ce0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55ea349b4bc8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55ea349b0820 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55ea349b4be8 <col:31> 'const String' lvalue ParmVar 0x55ea349aea70 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55ea349b4d40 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55ea349b4d28 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55ea349b4cc0 <col:37, col:64> 'String' (CXXTemporary 0x55ea349b4cc0)
|         |             `-CallExpr 0x55ea349b4c90 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55ea349b4c78 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55ea349b4c08 <col:37> 'String (const String &)' lvalue CXXMethod 0x55ea349b0e78 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55ea349b4c28 <col:56> 'const String' lvalue ParmVar 0x55ea349ae9f8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55ea349b4d80 <col:68> 'const String' lvalue ParmVar 0x55ea349aeae8 'str' 'const String &'
|-CXXMethodDecl 0x55ea349aef50 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55ea349aec98 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55ea349aed10 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55ea349aed90 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55ea349aee08 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55ea349b5120 <col:34, line:267:5>
|   `-ReturnStmt 0x55ea349b5110 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55ea349b50f8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55ea349b5090 <col:9, col:51> 'int'
|         |-MemberExpr 0x55ea349b5060 <col:9> '<bound member function type>' ->xmessage 0x55ea349aebd0
|         | `-CXXThisExpr 0x55ea349b5050 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55ea349b4f08 <col:18> 'const String' lvalue ParmVar 0x55ea349aec98 'landmark' 'const String &'
|         |-DeclRefExpr 0x55ea349b4f28 <col:28> 'const String' lvalue ParmVar 0x55ea349aed10 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55ea349b50e0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55ea349b50c8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55ea349b5030 <col:34, col:50> 'String' (CXXTemporary 0x55ea349b5030)
|               `-CXXMemberCallExpr 0x55ea349b4fc8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55ea349b4f58 <col:34> '<bound member function type>' ->vformat 0x55ea349afb10
|                 | `-CXXThisExpr 0x55ea349b4f48 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55ea349b4ff8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55ea349b4f88 <col:42> 'const char *' lvalue ParmVar 0x55ea349aed90 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55ea349b5010 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55ea349b4fa8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55ea349aee08 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ea349af060 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55ea349b51a0 <col:25, line:288:5>
|   `-ReturnStmt 0x55ea349b5190 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55ea349b5178 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55ea349b5148 <col:9> 'const int' lvalue ->_nerrors 0x55ea349b2038
|         `-CXXThisExpr 0x55ea349b5138 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55ea349af270 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55ea349af118 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55ea349af198 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55ea349af558 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55ea349af338 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55ea349af3b8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55ea349af430 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ea349af6f0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55ea349af628 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55ea349af938 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55ea349af7b0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55ea349af828 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55ea349b5400 <col:58, line:357:5>
|   `-ReturnStmt 0x55ea349b53f0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55ea349b53d8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55ea349b53a8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55ea349b5390 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55ea349b5370 <col:9, col:29> 'String' (CXXTemporary 0x55ea349b5370)
|             `-CallExpr 0x55ea349b5300 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55ea349b52e8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ea349b5268 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55ea349af558 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55ea349b5208 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55ea349b5338 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55ea349b5228 <col:21> 'const char *' lvalue ParmVar 0x55ea349af7b0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55ea349b5350 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55ea349b5248 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55ea349af828 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ea349afb10 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55ea349afa00 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55ea349afa78 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ea349afc68 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55ea349afbd8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55ea349afde8 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55ea349afd20 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55ea349b0080 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55ea349afea0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55ea349aff20 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55ea349aff98 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55ea349b01e0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55ea349b0150 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55ea349b5518 <col:37, line:441:5>
|   `-IfStmt 0x55ea349b5500 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55ea349b5488 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55ea349b5458 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55ea349b5418 <col:6> 'int' lvalue ParmVar 0x55ea349b0150 'level' 'int'
|     | `-ImplicitCastExpr 0x55ea349b5470 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55ea349b5438 <col:15> 'ErrorHandler::Level' EnumConstant 0x55ea349ac040 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55ea349b54e8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55ea349b54b8 <col:8> 'int' lvalue ->_nerrors 0x55ea349b2038
|         `-CXXThisExpr 0x55ea349b54a8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55ea349b02a8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55ea349b55b0 <col:26, line:448:5>
|   `-BinaryOperator 0x55ea349b5590 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55ea349b5540 <col:2> 'int' lvalue ->_nerrors 0x55ea349b2038
|     | `-CXXThisExpr 0x55ea349b5530 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55ea349b5570 <col:13> 'int' 0
|-CXXMethodDecl 0x55ea349b0470 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55ea349b0360 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55ea349b03d8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55ea349b0820 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55ea349b0530 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55ea349b05a8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55ea349b0ad8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55ea349b08e0 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55ea349b0960 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55ea349b09e0 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55ea349b0b90 <col:59> 0 0
|-CXXMethodDecl 0x55ea349b0d28 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55ea349b0c08 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55ea349b0c88 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55ea349b5c20 <col:70, line:534:5>
|   |-DeclStmt 0x55ea349b5720 <line:528:2, col:20>
|   | |-VarDecl 0x55ea349b55d8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55ea349b5640 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55ea349b5678 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55ea349b56e0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55ea349b57f0 <line:529:2, col:23>
|   | `-VarDecl 0x55ea349b5750 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55ea349b57d8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55ea349b57b8 <col:18> 'const char *' lvalue ParmVar 0x55ea349b0c08 'begin' 'const char *'
|   |-DoStmt 0x55ea349b5bb8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55ea349b5ae8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55ea349b5ad0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55ea349b5ab0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55ea349b5808 <col:6> 'const char *' lvalue Var 0x55ea349b5750 'x' 'const char *'
|   | |     `-CallExpr 0x55ea349b5a00 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55ea349b59e8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55ea349b59a0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55ea349b2510 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55ea349b5a68 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55ea349b5a50 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55ea349b58c0 <col:20, col:27> 'String' (CXXTemporary 0x55ea349b58c0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55ea349b5888 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55ea349b5a80 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55ea349b58e0 <col:30> 'const char *' lvalue Var 0x55ea349b5750 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55ea349b5a98 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55ea349b5900 <col:33> 'const char *' lvalue ParmVar 0x55ea349b0c88 'end' 'const char *'
|   | |       |-UnaryOperator 0x55ea349b5940 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55ea349b5920 <col:39> 'String' lvalue Var 0x55ea349b55d8 'name' 'String'
|   | |       |-UnaryOperator 0x55ea349b5978 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55ea349b5958 <col:46> 'String' lvalue Var 0x55ea349b5678 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55ea349b5990 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55ea349b5ba0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55ea349b5b88 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55ea349b5b68 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55ea349b5b38 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|   |         `-ImplicitCastExpr 0x55ea349b5b20 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55ea349b5b00 <col:11> 'String' lvalue Var 0x55ea349b55d8 'name' 'String'
|   `-ReturnStmt 0x55ea349b5c10 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55ea349b5bf8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55ea349b5bd8 <col:9> 'const char *' lvalue Var 0x55ea349b5750 'x' 'const char *'
|-CXXMethodDecl 0x55ea349b0e78 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55ea349b0de8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55ea349b6228 <col:55, line:550:5>
|   `-IfStmt 0x55ea349b6200 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55ea349b5e60 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55ea349b5e48 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55ea349b5e30 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55ea349b5e10 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55ea349b5de0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|     | |       `-DeclRefExpr 0x55ea349b5c80 <col:6> 'const String' lvalue ParmVar 0x55ea349b0de8 'x' 'const String &'
|     | `-BinaryOperator 0x55ea349b5dc0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55ea349b5d90 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55ea349b5d40 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55ea349b5d28 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55ea349b5ce0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55ea34979f10 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55ea349b5ca0 <col:11> 'const String' lvalue ParmVar 0x55ea349b0de8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55ea349b5cc0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55ea349b5da8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55ea349b5d78 <col:19> 'char' 123
|     |-ReturnStmt 0x55ea349b5ed0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55ea349b5ea0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55ea349b5e80 <col:13> 'const String' lvalue ParmVar 0x55ea349b0de8 'x' 'const String &'
|     `-IfStmt 0x55ea349b61d8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55ea349b5f68 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ea349b5f50 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ea349b5f30 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ea349b5f00 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|       |       `-DeclRefExpr 0x55ea349b5ee0 <col:11> 'const String' lvalue ParmVar 0x55ea349b0de8 'x' 'const String &'
|       |-ReturnStmt 0x55ea349b60f0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55ea349b60d8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55ea349b60a8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55ea349b6090 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55ea349b6070 <col:13, col:29> 'String' (CXXTemporary 0x55ea349b6070)
|       |         `-CallExpr 0x55ea349b6020 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55ea349b6008 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55ea349b5f80 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55ea349b0470 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55ea349b6050 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55ea349b5fa0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55ea349b5fc0 <col:28> 'const String' lvalue ParmVar 0x55ea349b0de8 'x' 'const String &'
|       `-ReturnStmt 0x55ea349b61c8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55ea349b61b0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55ea349b6180 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55ea349b6168 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55ea349b6148 <col:13, col:20> 'String' (CXXTemporary 0x55ea349b6148)
|                 `-CXXTemporaryObjectExpr 0x55ea349b6110 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55ea349b1078 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55ea349b0f30 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55ea349b0fa8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ea349b27b8 <col:71> 'bool' false
|-CXXRecordDecl 0x55ea349b1128 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55ea349b1428 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55ea349b13c0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55ea349b1360 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55ea349b1320 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55ea3495b270 'String'
|       | `-CXXRecord 0x55ea3495b1e0 'String'
|       |-BuiltinType 0x55ea3471d580 'int'
|       `-DecayedType 0x55ea349ae7d0 '__va_list_tag *' sugar
|         |-TypedefType 0x55ea349ae7a0 'va_list' sugar
|         | |-Typedef 0x55ea34991f20 'va_list'
|         | `-TypedefType 0x55ea34991ed0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55ea3498d2a8 '__gnuc_va_list'
|         |   `-TypedefType 0x55ea3498d210 '__builtin_va_list' sugar
|         |     |-Typedef 0x55ea3475ed38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55ea3475ece0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55ea3471e2d0 '__va_list_tag'
|         |         `-CXXRecord 0x55ea3471e238 '__va_list_tag'
|         `-PointerType 0x55ea34997aa0 '__va_list_tag *'
|           `-RecordType 0x55ea3471e2d0 '__va_list_tag'
|             `-CXXRecord 0x55ea3471e238 '__va_list_tag'
|-EnumDecl 0x55ea349b1480 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55ea349b1580 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1ae0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b1560 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55ea349b1540 <col:16> 'int' 1
| |-EnumConstantDecl 0x55ea349b1610 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1af8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b15f0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55ea349b15d0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55ea349b16a0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1b10 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b1680 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55ea349b1660 <col:22> 'int' 4
| |-EnumConstantDecl 0x55ea349b1730 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1b28 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b1710 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55ea349b16f0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55ea349b17c0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1b40 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b17a0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55ea349b1780 <col:22> 'int' 16
| |-EnumConstantDecl 0x55ea349b1850 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1b58 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b1830 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55ea349b1810 <col:19> 'int' 32
| |-EnumConstantDecl 0x55ea349b18e0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1b70 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b18c0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55ea349b18a0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55ea349b1970 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1b88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b1950 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55ea349b1930 <col:14> 'int' 128
| |-EnumConstantDecl 0x55ea349b1a00 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ea349b1ba0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea349b19e0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55ea349b19c0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55ea349b1a90 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55ea349b1bb8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea349b1a70 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55ea349b1a50 <col:12> 'int' 1024
|-CXXMethodDecl 0x55ea349b1dc8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55ea349b1be0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55ea349b1c80 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55ea349b1f50 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55ea349b1e88 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55ea349b1ff8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55ea349b2038 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55ea349b2098 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55ea349b2110 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55ea349b2510 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55ea349b2188 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55ea349b2208 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55ea349b2288 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55ea349b2300 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55ea349b2378 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55ea349b23f0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55ea349b2638 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55ea349b2638
| `-ParmVarDecl 0x55ea349b2748 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55ea349bbeb8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55ea349bbeb8
  `-ParmVarDecl 0x55ea349bbfc8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34c7a960 prev 0x55ea34c794a8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34c7aa58 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55ea34c7aae8 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55ea34c7abf8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55ea34c7ab20 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55ea34c7bfd0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55ea34c7bfb0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55ea34c7bb48 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55ea34c7c060 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55ea34c7c020 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55ea34c7ab20 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55ea34c7bbb0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55ea34c7c0e0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55ea34c7c0a0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55ea34c7bc10 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55ea34c7c120 <col:54> 'bool' false
| `-CompoundStmt 0x55ea34c7c228 <col:61, line:38:5>
|   `-BinaryOperator 0x55ea34c7c208 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55ea34c7c1a0 <col:9> 'const Element *' lvalue ->_context 0x55ea34c7bae8
|     | `-CXXThisExpr 0x55ea34c7c190 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55ea34c7c1f0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55ea34c7c1d0 <col:20> 'int' 0
|-CXXConstructorDecl 0x55ea34c7ae08 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34c7acb8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55ea34c7ad30 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55ea34c7c008 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55ea34c7bfe8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55ea34c7bae8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55ea34c7c280 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55ea34c7c240 <col:20> 'const Element *' lvalue ParmVar 0x55ea34c7acb8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55ea34c7bb48 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55ea34c7c300 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55ea34c7c2c0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55ea34c7ad30 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55ea34c7bbb0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55ea34c7c380 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55ea34c7c340 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55ea34c7bc10 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55ea34c7c3c0 <col:73> 'bool' false
| `-CompoundStmt 0x55ea34c7c438 <col:80, line:46:5>
|-CXXMethodDecl 0x55ea34c7af38 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55ea34c7c4b0 <col:36, line:51:5>
|   `-ReturnStmt 0x55ea34c7c4a0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55ea34c7c488 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55ea34c7c458 <col:16> 'const Element *const' lvalue ->_context 0x55ea34c7bae8
|         `-CXXThisExpr 0x55ea34c7c448 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55ea34c7b028 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55ea34c7c530 <col:32, line:57:5>
|   `-ReturnStmt 0x55ea34c7c520 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55ea34c7c508 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55ea34c7c4d8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55ea34c7bb48
|         `-CXXThisExpr 0x55ea34c7c4c8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55ea34c7b0e8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55ea34c7b270 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55ea34c7b1a0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55ea34c7b3c0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55ea34c7b330 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55ea34c7b510 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55ea34c7b480 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55ea34c7b718 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55ea34c7b5c8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55ea34c7b640 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55ea34c7b9f8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55ea34c7b7d8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55ea34c7b858 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55ea34c7b8d0 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55ea34c7bab0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55ea34c7bae8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55ea34c7bb48 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55ea34c7bbb0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55ea34c7bc10 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55ea34c7bc60 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55ea34c7bc60
| `-ParmVarDecl 0x55ea34c7bd78 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55ea34c7be18 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55ea34c7be18
| `-ParmVarDecl 0x55ea34c7bf28 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55ea34e179d8 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34ca3a70 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55ea34ca3c48 prev 0x55ea34ca3a70 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ea34ca3cd8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ea34ca3d00 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34ca8af0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55ea34ca8aa0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55ea34ca41b0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55ea34ca40b0 'type'
|     `-TemplateSpecializationType 0x55ea34ca4040 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55ea34ca3f20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55ea34ca3f00 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55ea34ca3ee0 <col:24> 'unsigned long' 4
|       `-RecordType 0x55ea34ca4020 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55ea34ca3f40 'char_array'
|-TypedefDecl 0x55ea34ca8ba8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55ea34ca8b70 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55ea34ca8b50 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55ea34ca8af0 'type'
|     `-ElaboratedType 0x55ea34ca8aa0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55ea34ca41b0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55ea34ca40b0 'type'
|         `-TemplateSpecializationType 0x55ea34ca4040 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55ea34ca3f20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55ea34ca3f00 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55ea34ca3ee0 <col:24> 'unsigned long' 4
|           `-RecordType 0x55ea34ca4020 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55ea34ca3f40 'char_array'
|-CXXMethodDecl 0x55ea34ca8d28 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55ea34ca8c38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55ea34ca8e18 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ea34ca8ef8 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55ea34ca91c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55ea34ca90d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55ea34ca9408 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55ea34ca9280 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34ca92f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ea34ca95d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55ea34ca94c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34ca9540 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ea34ca9738 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55ea34ca9808 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55ea34ca9a58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55ea34ca98c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55ea34ca9940 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ea34ca9cb8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55ea34ca9b28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55ea34ca9ba0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ea34ca9e78 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55ea34ca9d88 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ea34caa038 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55ea34ca9f40 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ea34caa0f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34caa1a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34caa3d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55ea34caa250 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34caa2c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ea34caa678 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55ea34caa580 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55ea34caa740 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55ea34caa790 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ea34caa7e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34ca2478 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55ea34ca2688 prev 0x55ea34ca2478 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ea34ca39e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55ea34ca3990 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55ea34ca3970 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55ea34ca3820 'type'
|     `-SubstTemplateTypeParmType 0x55ea34ca3640 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55ea349c5860 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea349c5808 'T'
|       `-RecordType 0x55ea34ca3190 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55ea34ca30a8 'sized_array_memory'
|-FieldDecl 0x55ea34caa830 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55ea34caa880 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ea34caa8b8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55ea34ca2720 'int' sugar
|   |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ea34a766b0 'T'
|   `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34caa948 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55ea34caa910 'int &'
|   `-SubstTemplateTypeParmType 0x55ea34ca2720 'int' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34caaa08 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55ea34caa9d0 'const int &'
|   `-QualType 0x55ea34ca2721 'const int' const
|     `-SubstTemplateTypeParmType 0x55ea34ca2720 'int' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34caaa98 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55ea34caaa60 'int *'
|   `-SubstTemplateTypeParmType 0x55ea34ca2720 'int' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34caab28 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55ea34caaaf0 'const int *'
|   `-QualType 0x55ea34ca2721 'const int' const
|     `-SubstTemplateTypeParmType 0x55ea34ca2720 'int' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34cab710 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55ea34cab6c0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55ea34cab6a0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55ea34cab630 'type'
|     `-SubstTemplateTypeParmType 0x55ea34cab3f0 'int' sugar
|       |-TemplateTypeParmType 0x55ea349cf980 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea349cf930 'T'
|       `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34cab778 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55ea34caa9d0 'const int &'
|   `-QualType 0x55ea34ca2721 'const int' const
|     `-SubstTemplateTypeParmType 0x55ea34ca2720 'int' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34cab7d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34cab838 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55ea34caaa60 'int *'
|   `-SubstTemplateTypeParmType 0x55ea34ca2720 'int' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34cab8a0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55ea34caaaf0 'const int *'
|   `-QualType 0x55ea34ca2721 'const int' const
|     `-SubstTemplateTypeParmType 0x55ea34ca2720 'int' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-BuiltinType 0x55ea3471d580 'int'
|-EnumDecl 0x55ea34caffe0 <line:134:5> col:5
| `-EnumConstantDecl 0x55ea34cb00d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ea34cb00b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ea34a778c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ea34a778a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ea34a77880 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ea34cb0158 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ea34cb03a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34cb0210 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34cb02b0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55ea34cb0668 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55ea34cb0550 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55ea34cb0928 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55ea34cb0810 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55ea34cb0c70 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55ea34cb0b50 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55ea34cb0f80 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55ea34cb0e60 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55ea34cb1270 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34cb10b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34cb1130 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55ea34cb1398 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55ea34cb1478 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34cb14d0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34cb1518 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55ea34cb15c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34cb1620 <col:30> Inherited
|-CXXMethodDecl 0x55ea34cb16e8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55ea34cb1798 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34cb17f0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34cb1838 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55ea34cb18e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34cb1940 <col:30> Inherited
|-CXXMethodDecl 0x55ea34cb1988 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55ea34cb1a38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34cb1a90 <col:30> Inherited
|-CXXMethodDecl 0x55ea34cb1ad8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55ea34cb1b88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34cb1be0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34cb1c08 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34cb1cb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34cb1d68 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ea34cb1f28 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34cb1e18 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34cb1e90 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55ea34cb2078 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34cb1fe8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34cb2228 <line:163:5, col:65> col:43 operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55ea34cb2130 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34cb22e0 <col:20>
| `-OptimizeNoneAttr 0x55ea34cb2338 <col:30>
|-CXXMethodDecl 0x55ea34cb2458 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55ea34cb2360 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34cb2510 <col:20>
| `-OptimizeNoneAttr 0x55ea34cb2568 <col:30>
|-CXXMethodDecl 0x55ea34cb2620 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34cb2590 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34cb2768 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34cb26d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34cb2898 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55ea34cb29c8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55ea34cb2a98 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55ea34cb2b68 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x55ea34cb2ca8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34cb2c18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34cb2df0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34cb2d60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34cb2f38 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ea34cb2ea8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34cb2ff0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ea34cb30f0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ea34cb3060 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34cb31a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ea34cb3268 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55ea34cb3368 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55ea34cb34e8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34cb3428 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55ea34cb3ca8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ea34cb35a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55ea34cb3c08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55ea34cb3b08 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55ea34cb3d88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34cb3ed8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34cb3e48 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55ea34cb3f90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ea34cb41d8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34cb4050 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55ea34cb40c8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55ea34cb4398 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55ea34cb42a8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55ea34cb45e8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55ea34cb4460 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55ea34cb44d8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55ea34cb46a8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55ea34cb4908 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55ea34cb4810 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55ea34cb49d8 <line:111:7> col:7 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34c98c18 prev 0x55ea34c813b8 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea34ca06e0 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55ea34ca07d0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55ea34cc4a00 <col:16, line:828:9>
|-CXXDestructorDecl 0x55ea34ca08c0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55ea34cc4a10 <col:25, line:830:9>
|-CXXMethodDecl 0x55ea34ca09c0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55ea34ca0a70 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55ea34ca0b18 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55ea34ca0b18
| `-ParmVarDecl 0x55ea34ca0c28 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55ea34ca13e8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55ea34ca13e8
  `-ParmVarDecl 0x55ea34ca14f8 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34c811c8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55ea34c81328 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55ea34c813b8 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55ea34c81470 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55ea34c81578 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55ea34c814a8 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ea34cb6018 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ea34cb5ff8 <col:31> 'int' 0
|-CXXConstructorDecl 0x55ea34c81898 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34c81710 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55ea34c81788 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ea34cb6050 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ea34cb6030 <col:59> 'int' 0
|-CXXConstructorDecl 0x55ea34c81a70 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34c81960 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55ea34c819d8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ea34cb6088 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ea34cb6068 <col:55> 'int' 0
|-CXXConstructorDecl 0x55ea34c81e28 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55ea34c81c10 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55ea34c81c88 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55ea34c81d00 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ea34cb60c0 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ea34cb60a0 <col:31> 'int' 0
|-CXXConstructorDecl 0x55ea34c81fe8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55ea34c81f28 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55ea34c820e0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55ea34c822c8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55ea34c821d0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55ea34c823b8 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55ea34cb64b0 <col:24, line:291:5>
|   `-ReturnStmt 0x55ea34cb64a0 <line:290:9, col:79>
|     `-BinaryOperator 0x55ea34cb6480 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55ea34cb6318 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55ea34cb6270 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55ea34cb6250 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55ea34cb6148 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55ea34cb6130 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55ea34cb6118 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55ea34cb60e8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55ea34ca2410
|       | |   |       `-CXXThisExpr 0x55ea34cb60d8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55ea34cb6238 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55ea34cb6220 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55ea34cb61e8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55ea34cb61b8 <col:28, col:35> '<bound member function type>' ->size 0x55ea34ac1558
|       | |           `-ImplicitCastExpr 0x55ea34cb6208 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55ea34cb61a0 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55ea34cb6170 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55ea34ca2410
|       | |                 `-CXXThisExpr 0x55ea34cb6160 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55ea34cb6300 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55ea34cb62e8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55ea34cb62d0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55ea34cb62a0 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55ea34cb4b20
|       |         `-CXXThisExpr 0x55ea34cb6290 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55ea34cb6460 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55ea34cb6448 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55ea34cb6430 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55ea34cb63f0 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55ea34cb63d8 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55ea34cb6348 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55ea34cb4c48
|         |     |   `-CXXThisExpr 0x55ea34cb6338 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55ea34cb6378 <col:73> 'int' 0
|         `-IntegerLiteral 0x55ea34cb6410 <col:79> 'int' 0
|-CXXMethodDecl 0x55ea34c82478 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55ea34cb6688 <col:32, line:296:5>
|   `-ReturnStmt 0x55ea34cb6678 <line:295:9, col:49>
|     `-BinaryOperator 0x55ea34cb6658 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55ea34cb6538 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55ea34cb6520 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55ea34cb6508 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55ea34cb64d8 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55ea34cb4b20
|       |       `-CXXThisExpr 0x55ea34cb64c8 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55ea34cb6638 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55ea34cb6620 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55ea34cb6608 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55ea34cb65c8 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55ea34cb65b0 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55ea34cb6560 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55ea34cb4c48
|         |     |   `-CXXThisExpr 0x55ea34cb6550 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55ea34cb6590 <col:43> 'int' 0
|         `-IntegerLiteral 0x55ea34cb65e8 <col:49> 'int' 0
|-CXXMethodDecl 0x55ea34c82568 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55ea34cb6898 <col:19, line:306:5>
|   |-IfStmt 0x55ea34cb67b8 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55ea34cb66f8 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55ea34cb66e0 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55ea34cb66b0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55ea34ca2410
|   | |     `-CXXThisExpr 0x55ea34cb66a0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55ea34cb6798 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55ea34cb6768 <col:13, col:20> '<bound member function type>' ->clear 0x55ea34ac3fa8
|   |     `-ImplicitCastExpr 0x55ea34cb6750 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55ea34cb6720 <col:13> 'Vector<String> *' lvalue ->_conf 0x55ea34ca2410
|   |         `-CXXThisExpr 0x55ea34cb6710 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55ea34cb6840 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55ea34cb6810 <col:9, col:16> '<bound member function type>' .clear 0x55ea34cb46a8
|   |   `-MemberExpr 0x55ea34cb67e0 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55ea34cb4ac0
|   |     `-CXXThisExpr 0x55ea34cb67d0 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55ea34cb6888 <line:305:9, col:17>
|     `-UnaryOperator 0x55ea34cb6870 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34cb6860 <col:17> 'Args *' this
|-CXXMethodDecl 0x55ea34c82860 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55ea34c826f0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55ea34c829d8 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55ea34c82918 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55ea34c82d58 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55ea34c82a80 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55ea34c82cb8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55ea34c82b28 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55ea34c82ba0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55ea34cb6ba8 <col:67, line:327:5>
|     |-WhileStmt 0x55ea34cb6b58 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55ea34cb6970 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55ea34cb6900 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55ea34c719d8 0x55ea34a5e880 0x55ea34989130 0x55ea34988de0 0x55ea349886d0 0x55ea34949660
|     | | |-DeclRefExpr 0x55ea34cb68c0 <col:16> 'Iter' lvalue ParmVar 0x55ea34c82b28 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55ea34cb68e0 <col:25> 'Iter' lvalue ParmVar 0x55ea34c82ba0 'end' 'Iter'
|     | `-CompoundStmt 0x55ea34cb6b38 <col:30, line:325:9>
|     |   |-CallExpr 0x55ea34cb6ad8 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55ea34cb69b8 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55ea34cb6aa8 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55ea34cb6a38 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|     |   |   `-DeclRefExpr 0x55ea34cb6a18 <col:24> 'Iter' lvalue ParmVar 0x55ea34c82b28 'begin' 'Iter'
|     |   `-UnaryOperator 0x55ea34cb6b20 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55ea34cb6b00 <col:15> 'Iter' lvalue ParmVar 0x55ea34c82b28 'begin' 'Iter'
|     `-ReturnStmt 0x55ea34cb6b98 <line:326:9, col:17>
|       `-UnaryOperator 0x55ea34cb6b80 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cb6b70 <col:17> 'Args *' this
|-CXXMethodDecl 0x55ea34c82e60 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55ea34c82dd0 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55ea34c82fa8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55ea34c82f18 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55ea34c83070 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55ea34cb6c88 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55ea34cb6c28 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55ea34cb6bd8 <col:9> '<bound member function type>' ->reset_from 0x55ea34cb4fc8
|   | | `-CXXThisExpr 0x55ea34cb6bc8 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55ea34cb6c08 <col:20> 'int' 0
|   `-ReturnStmt 0x55ea34cb6c78 <line:352:9, col:17>
|     `-UnaryOperator 0x55ea34cb6c60 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34cb6c50 <col:17> 'Args *' this
|-VarDecl 0x55ea34c83128 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55ea34c83190 <col:38> 'int' 1
|-VarDecl 0x55ea34c83220 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55ea34c83288 <col:39> 'int' 2
|-VarDecl 0x55ea34c83318 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55ea34c83380 <col:39> 'int' 4
|-VarDecl 0x55ea34c83410 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55ea34c83478 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55ea34c837f8 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55ea34c834f0 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ea34c83758 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55ea34c835a0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c83648 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb6de0 <col:43, line:371:5>
|     `-ReturnStmt 0x55ea34cb6dd0 <line:370:9, col:34>
|       `-CallExpr 0x55ea34cb6d98 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb6cb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb6d38 <col:21> 'const char *' lvalue ParmVar 0x55ea34c835a0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cb6d58 <col:30> 'int' 0
|         `-DeclRefExpr 0x55ea34cb6d78 <col:33> 'T' lvalue ParmVar 0x55ea34c83648 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c83b28 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55ea34c83860 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ea34c83a88 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55ea34c83910 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c839b8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb6f30 <col:45, line:375:5>
|     `-ReturnStmt 0x55ea34cb6f20 <line:374:9, col:42>
|       `-CallExpr 0x55ea34cb6ee8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb6e08 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb6e88 <col:21> 'const char *' lvalue ParmVar 0x55ea34c83910 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb6ea8 <col:30> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int'
|         `-DeclRefExpr 0x55ea34cb6ec8 <col:41> 'T' lvalue ParmVar 0x55ea34c839b8 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c83e58 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55ea34c83b90 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55ea34c83db8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55ea34c83c40 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55ea34c83ce8 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x55ea34cb7080 <col:45, line:379:5>
| |   `-ReturnStmt 0x55ea34cb7070 <line:378:9, col:43>
| |     `-CallExpr 0x55ea34cb7038 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55ea34cb6f58 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55ea34cb6fd8 <col:21> 'const char *' lvalue ParmVar 0x55ea34c83c40 'keyword' 'const char *'
| |       |-DeclRefExpr 0x55ea34cb6ff8 <col:30> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int'
| |       `-DeclRefExpr 0x55ea34cb7018 <col:42> 'T' lvalue ParmVar 0x55ea34c83ce8 'x' 'T &'
| `-CXXMethodDecl 0x55ea34e2d5e8 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, int &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55ea34e2d400 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x55ea34e2d4d8 <col:39, col:42> col:42 x 'int &'
|-FunctionTemplateDecl 0x55ea34c84188 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55ea34c83ec0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ea34c840e8 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55ea34c83f70 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c84018 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb7280 <col:46, line:383:5>
|     `-ReturnStmt 0x55ea34cb7270 <line:382:9, col:55>
|       `-CallExpr 0x55ea34cb7238 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb70a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb7128 <col:21> 'const char *' lvalue ParmVar 0x55ea34c83f70 'keyword' 'const char *'
|         |-BinaryOperator 0x55ea34cb71f8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55ea34cb71a8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ea34cb7188 <col:30> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55ea34cb71e0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ea34cb71c0 <col:42> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55ea34cb7218 <col:54> 'T' lvalue ParmVar 0x55ea34c84018 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c84588 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55ea34c841f0 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ea34c844e8 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55ea34c842a0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c84320 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c843c8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb73c0 <col:54, line:388:5>
|     |-CallExpr 0x55ea34cb7348 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cb7298 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55ea34cb72d8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cb72e8 <col:30> 'const char *' lvalue ParmVar 0x55ea34c842a0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ea34cb7308 <col:39> 'int' lvalue ParmVar 0x55ea34c84320 'flags' 'int'
|     | `-DeclRefExpr 0x55ea34cb7328 <col:46> 'T' lvalue ParmVar 0x55ea34c843c8 'x' 'T &'
|     `-ReturnStmt 0x55ea34cb73b0 <line:387:9, col:17>
|       `-UnaryOperator 0x55ea34cb7398 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cb7388 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c84a38 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55ea34c845f8 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ea34c84678 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ea34c84998 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55ea34c84738 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c847d8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55ea34c84878 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ea34cb7530 <col:74, line:403:5>
|     `-ReturnStmt 0x55ea34cb7520 <line:402:9, col:56>
|       `-CallExpr 0x55ea34cb74e0 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb73f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb7460 <col:28> 'const char *' lvalue ParmVar 0x55ea34c84738 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cb7480 <col:37> 'int' 0
|         |-DeclRefExpr 0x55ea34cb74a0 <col:40> 'T' lvalue ParmVar 0x55ea34c847d8 'x' 'T &'
|         `-DeclRefExpr 0x55ea34cb74c0 <col:43> 'const V' lvalue ParmVar 0x55ea34c84878 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55ea34c84ea8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55ea34c84aa8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ea34c84b28 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ea34c84e08 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55ea34c84be8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c84c88 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55ea34c84d28 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ea34cb7698 <col:76, line:407:5>
|     `-ReturnStmt 0x55ea34cb7688 <line:406:9, col:65>
|       `-CallExpr 0x55ea34cb7648 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb7558 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb75c8 <col:28> 'const char *' lvalue ParmVar 0x55ea34c84be8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb75e8 <col:37> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int'
|         |-DeclRefExpr 0x55ea34cb7608 <col:49> 'T' lvalue ParmVar 0x55ea34c84c88 'x' 'T &'
|         `-DeclRefExpr 0x55ea34cb7628 <col:52> 'const V' lvalue ParmVar 0x55ea34c84d28 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55ea34c853f8 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55ea34c84f18 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ea34c84f98 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ea34c85358 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55ea34c85058 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c850d8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c85178 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55ea34c85218 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ea34cb7800 <col:85, line:412:5>
|     |-CallExpr 0x55ea34cb7780 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cb76b0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55ea34cb76f0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cb7700 <col:37> 'const char *' lvalue ParmVar 0x55ea34c85058 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ea34cb7720 <col:46> 'int' lvalue ParmVar 0x55ea34c850d8 'flags' 'int'
|     | |-DeclRefExpr 0x55ea34cb7740 <col:53> 'T' lvalue ParmVar 0x55ea34c85178 'x' 'T &'
|     | `-DeclRefExpr 0x55ea34cb7760 <col:56> 'const V' lvalue ParmVar 0x55ea34c85218 'default_value' 'const V &'
|     `-ReturnStmt 0x55ea34cb77f0 <line:411:9, col:17>
|       `-UnaryOperator 0x55ea34cb77d8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cb77c8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c85888 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55ea34c85470 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c854e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c857e8 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c855a8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c85620 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c856c8 <col:47, col:50> col:50 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb7980 <col:53, line:425:5>
|     `-ReturnStmt 0x55ea34cb7970 <line:424:9, col:42>
|       `-CallExpr 0x55ea34cb7930 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb7830 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb78b0 <col:21> 'const char *' lvalue ParmVar 0x55ea34c855a8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cb78d0 <col:30> 'int' 0
|         |-DeclRefExpr 0x55ea34cb78f0 <col:33> 'P' lvalue ParmVar 0x55ea34c85620 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb7910 <col:41> 'T' lvalue ParmVar 0x55ea34c856c8 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c85cd8 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55ea34c858f8 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c85978 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c85c38 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c85a38 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c85ab0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c85b58 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb7af8 <col:55, line:429:5>
|     `-ReturnStmt 0x55ea34cb7ae8 <line:428:9, col:50>
|       `-CallExpr 0x55ea34cb7aa8 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb79a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb7a28 <col:21> 'const char *' lvalue ParmVar 0x55ea34c85a38 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb7a48 <col:30> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int'
|         |-DeclRefExpr 0x55ea34cb7a68 <col:41> 'P' lvalue ParmVar 0x55ea34c85ab0 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb7a88 <col:49> 'T' lvalue ParmVar 0x55ea34c85b58 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c86128 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55ea34c85d48 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c85dc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c86088 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c85e88 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c85f00 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c85fa8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb7c70 <col:55, line:433:5>
|     `-ReturnStmt 0x55ea34cb7c60 <line:432:9, col:51>
|       `-CallExpr 0x55ea34cb7c20 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb7b20 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb7ba0 <col:21> 'const char *' lvalue ParmVar 0x55ea34c85e88 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb7bc0 <col:30> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int'
|         |-DeclRefExpr 0x55ea34cb7be0 <col:42> 'P' lvalue ParmVar 0x55ea34c85f00 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb7c00 <col:50> 'T' lvalue ParmVar 0x55ea34c85fa8 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c86578 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55ea34c86198 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c86218 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c864d8 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c862d8 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c86350 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c863f8 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb7e98 <col:56, line:437:5>
|     `-ReturnStmt 0x55ea34cb7e88 <line:436:9, col:63>
|       `-CallExpr 0x55ea34cb7e48 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb7c98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb7d18 <col:21> 'const char *' lvalue ParmVar 0x55ea34c862d8 'keyword' 'const char *'
|         |-BinaryOperator 0x55ea34cb7de8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55ea34cb7d98 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ea34cb7d78 <col:30> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55ea34cb7dd0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ea34cb7db0 <col:42> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55ea34cb7e08 <col:54> 'P' lvalue ParmVar 0x55ea34c86350 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb7e28 <col:62> 'T' lvalue ParmVar 0x55ea34c863f8 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c86e98 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55ea34c865e8 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c86668 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c86df8 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ea34c86728 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c867a8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c86c10 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c86cb8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb83c8 <col:64, line:442:5>
|     |-CallExpr 0x55ea34cb7f80 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cb7eb0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55ea34cb7ef0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cb7f00 <col:30> 'const char *' lvalue ParmVar 0x55ea34c86728 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ea34cb7f20 <col:39> 'int' lvalue ParmVar 0x55ea34c867a8 'flags' 'int'
|     | |-DeclRefExpr 0x55ea34cb7f40 <col:46> 'P' lvalue ParmVar 0x55ea34c86c10 'parser' 'P'
|     | `-DeclRefExpr 0x55ea34cb7f60 <col:54> 'T' lvalue ParmVar 0x55ea34c86cb8 'x' 'T &'
|     `-ReturnStmt 0x55ea34cb83b8 <line:441:9, col:17>
|       `-UnaryOperator 0x55ea34cb83a0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cb7fc8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c87498 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55ea34c86f10 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c86f88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55ea34c87008 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55ea34c873f8 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55ea34c870d0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c87148 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c871e8 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55ea34c872b8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ea34cb8560 <col:84, line:458:5>
|     `-ReturnStmt 0x55ea34cb8550 <line:457:9, col:64>
|       `-CallExpr 0x55ea34cb8508 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb83f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb8468 <col:28> 'const char *' lvalue ParmVar 0x55ea34c870d0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cb8488 <col:37> 'int' 0
|         |-DeclRefExpr 0x55ea34cb84a8 <col:40> 'P' lvalue ParmVar 0x55ea34c87148 'parser' 'P'
|         |-DeclRefExpr 0x55ea34cb84c8 <col:48> 'T' lvalue ParmVar 0x55ea34c871e8 'x' 'T &'
|         `-DeclRefExpr 0x55ea34cb84e8 <col:51> 'const V' lvalue ParmVar 0x55ea34c872b8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55ea34c87a18 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55ea34c87510 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c87588 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55ea34c87608 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55ea34c87978 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55ea34c876d0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c87748 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c877e8 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55ea34c87888 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ea34cb86f0 <col:86, line:462:5>
|     `-ReturnStmt 0x55ea34cb86e0 <line:461:9, col:73>
|       `-CallExpr 0x55ea34cb8698 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb8588 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb85f8 <col:28> 'const char *' lvalue ParmVar 0x55ea34c876d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb8618 <col:37> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int'
|         |-DeclRefExpr 0x55ea34cb8638 <col:49> 'P' lvalue ParmVar 0x55ea34c87748 'parser' 'P'
|         |-DeclRefExpr 0x55ea34cb8658 <col:57> 'T' lvalue ParmVar 0x55ea34c877e8 'x' 'T &'
|         `-DeclRefExpr 0x55ea34cb8678 <col:60> 'const V' lvalue ParmVar 0x55ea34c87888 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55ea34c88078 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55ea34c87a90 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c87b08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55ea34c87b88 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55ea34c87fd8 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55ea34c87c50 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c87cd0 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c87d48 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c87de8 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55ea34c87e88 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ea34cb8880 <col:95, line:467:5>
|     |-CallExpr 0x55ea34cb87f8 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cb8708 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55ea34cb8748 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cb8758 <col:37> 'const char *' lvalue ParmVar 0x55ea34c87c50 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ea34cb8778 <col:46> 'int' lvalue ParmVar 0x55ea34c87cd0 'flags' 'int'
|     | |-DeclRefExpr 0x55ea34cb8798 <col:53> 'P' lvalue ParmVar 0x55ea34c87d48 'parser' 'P'
|     | |-DeclRefExpr 0x55ea34cb87b8 <col:61> 'T' lvalue ParmVar 0x55ea34c87de8 'x' 'T &'
|     | `-DeclRefExpr 0x55ea34cb87d8 <col:64> 'const V' lvalue ParmVar 0x55ea34c87e88 'default_value' 'const V &'
|     `-ReturnStmt 0x55ea34cb8870 <line:466:9, col:17>
|       `-UnaryOperator 0x55ea34cb8858 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cb8848 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c88658 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55ea34c880f8 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c88178 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ea34c881f8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ea34c885b8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ea34c882c0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c88338 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c883d8 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ea34c88478 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ea34cb8a28 <col:63, line:481:5>
|     `-ReturnStmt 0x55ea34cb8a18 <line:480:9, col:47>
|       `-CallExpr 0x55ea34cb89d0 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb88b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb8930 <col:21> 'const char *' lvalue ParmVar 0x55ea34c882c0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cb8950 <col:30> 'int' 0
|         |-DeclRefExpr 0x55ea34cb8970 <col:33> 'P' lvalue ParmVar 0x55ea34c88338 'parser' 'P'
|         |-DeclRefExpr 0x55ea34cb8990 <col:41> 'T1' lvalue ParmVar 0x55ea34c883d8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55ea34cb89b0 <col:45> 'T2' lvalue ParmVar 0x55ea34c88478 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55ea34c88bd8 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55ea34c886d0 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c88748 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ea34c887c8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ea34c88b38 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ea34c88890 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c88908 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c889a8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ea34c88a48 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ea34cb8bc8 <col:65, line:485:5>
|     `-ReturnStmt 0x55ea34cb8bb8 <line:484:9, col:55>
|       `-CallExpr 0x55ea34cb8b70 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb8a50 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb8ad0 <col:21> 'const char *' lvalue ParmVar 0x55ea34c88890 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb8af0 <col:30> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int'
|         |-DeclRefExpr 0x55ea34cb8b10 <col:41> 'P' lvalue ParmVar 0x55ea34c88908 'parser' 'P'
|         |-DeclRefExpr 0x55ea34cb8b30 <col:49> 'T1' lvalue ParmVar 0x55ea34c889a8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55ea34cb8b50 <col:53> 'T2' lvalue ParmVar 0x55ea34c88a48 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55ea34c89158 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55ea34c88c50 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c88cc8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ea34c88d48 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ea34c890b8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ea34c88e10 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c88e88 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c88f28 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ea34c88fc8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ea34cb8d68 <col:65, line:489:5>
|     `-ReturnStmt 0x55ea34cb8d58 <line:488:9, col:56>
|       `-CallExpr 0x55ea34cb8d10 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb8bf0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb8c70 <col:21> 'const char *' lvalue ParmVar 0x55ea34c88e10 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb8c90 <col:30> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int'
|         |-DeclRefExpr 0x55ea34cb8cb0 <col:42> 'P' lvalue ParmVar 0x55ea34c88e88 'parser' 'P'
|         |-DeclRefExpr 0x55ea34cb8cd0 <col:50> 'T1' lvalue ParmVar 0x55ea34c88f28 'x1' 'T1 &'
|         `-DeclRefExpr 0x55ea34cb8cf0 <col:54> 'T2' lvalue ParmVar 0x55ea34c88fc8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55ea34c896d8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55ea34c891d0 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c89248 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ea34c892c8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ea34c89638 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ea34c89390 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c89408 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c894a8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ea34c89548 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ea34cb8fb8 <col:66, line:493:5>
|     `-ReturnStmt 0x55ea34cb8fa8 <line:492:9, col:68>
|       `-CallExpr 0x55ea34cb8f60 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb8d90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb8e10 <col:21> 'const char *' lvalue ParmVar 0x55ea34c89390 'keyword' 'const char *'
|         |-BinaryOperator 0x55ea34cb8ee0 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55ea34cb8e90 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ea34cb8e70 <col:30> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55ea34cb8ec8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ea34cb8ea8 <col:42> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55ea34cb8f00 <col:54> 'P' lvalue ParmVar 0x55ea34c89408 'parser' 'P'
|         |-DeclRefExpr 0x55ea34cb8f20 <col:62> 'T1' lvalue ParmVar 0x55ea34c894a8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55ea34cb8f40 <col:66> 'T2' lvalue ParmVar 0x55ea34c89548 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55ea34c89d38 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55ea34c89750 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c897c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ea34c89848 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ea34c89c98 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ea34c89910 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c89990 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c89a08 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c89aa8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ea34c89b48 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ea34cb9148 <col:74, line:498:5>
|     |-CallExpr 0x55ea34cb90c0 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cb8fd0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55ea34cb9010 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cb9020 <col:30> 'const char *' lvalue ParmVar 0x55ea34c89910 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ea34cb9040 <col:39> 'int' lvalue ParmVar 0x55ea34c89990 'flags' 'int'
|     | |-DeclRefExpr 0x55ea34cb9060 <col:46> 'P' lvalue ParmVar 0x55ea34c89a08 'parser' 'P'
|     | |-DeclRefExpr 0x55ea34cb9080 <col:54> 'T1' lvalue ParmVar 0x55ea34c89aa8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55ea34cb90a0 <col:58> 'T2' lvalue ParmVar 0x55ea34c89b48 'x2' 'T2 &'
|     `-ReturnStmt 0x55ea34cb9138 <line:497:9, col:17>
|       `-UnaryOperator 0x55ea34cb9120 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cb9110 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c8a098 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55ea34c89db8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c89ff8 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ea34c89e70 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c89ee8 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cb9290 <col:52, line:509:5>
|     `-ReturnStmt 0x55ea34cb9280 <line:508:9, col:44>
|       `-CallExpr 0x55ea34cb9248 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb9178 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb91e8 <col:26> 'const char *' lvalue ParmVar 0x55ea34c89e70 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cb9208 <col:35> 'int' 0
|         `-DeclRefExpr 0x55ea34cb9228 <col:38> 'P' lvalue ParmVar 0x55ea34c89ee8 'parser' 'P'
|-FunctionTemplateDecl 0x55ea34c8a398 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55ea34c8a100 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c8a2f8 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ea34c8a1b0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8a228 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cb93d0 <col:54, line:513:5>
|     `-ReturnStmt 0x55ea34cb93c0 <line:512:9, col:52>
|       `-CallExpr 0x55ea34cb9388 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb92b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb9328 <col:26> 'const char *' lvalue ParmVar 0x55ea34c8a1b0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb9348 <col:35> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int'
|         `-DeclRefExpr 0x55ea34cb9368 <col:46> 'P' lvalue ParmVar 0x55ea34c8a228 'parser' 'P'
|-FunctionTemplateDecl 0x55ea34c8a698 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55ea34c8a400 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c8a5f8 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ea34c8a4b0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8a528 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cb9510 <col:54, line:517:5>
|     `-ReturnStmt 0x55ea34cb9500 <line:516:9, col:53>
|       `-CallExpr 0x55ea34cb94c8 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb93f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb9468 <col:26> 'const char *' lvalue ParmVar 0x55ea34c8a4b0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb9488 <col:35> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int'
|         `-DeclRefExpr 0x55ea34cb94a8 <col:47> 'P' lvalue ParmVar 0x55ea34c8a528 'parser' 'P'
|-FunctionTemplateDecl 0x55ea34c8a998 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55ea34c8a700 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c8a8f8 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ea34c8a7b0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8a828 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cb9700 <col:55, line:521:5>
|     `-ReturnStmt 0x55ea34cb96f0 <line:520:9, col:65>
|       `-CallExpr 0x55ea34cb96b8 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb9538 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb95a8 <col:26> 'const char *' lvalue ParmVar 0x55ea34c8a7b0 'keyword' 'const char *'
|         |-BinaryOperator 0x55ea34cb9678 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55ea34cb9628 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ea34cb9608 <col:35> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55ea34cb9660 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ea34cb9640 <col:47> 'const int' lvalue Var 0x55ea34c83220 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55ea34cb9698 <col:59> 'P' lvalue ParmVar 0x55ea34c8a828 'parser' 'P'
|-FunctionTemplateDecl 0x55ea34c8d128 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55ea34c8aa00 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c8d088 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55ea34c8aab0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8ab30 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c8aba8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cb9840 <col:63, line:526:5>
|     |-CallExpr 0x55ea34cb97c8 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cb9718 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55ea34cb9758 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cb9768 <col:35> 'const char *' lvalue ParmVar 0x55ea34c8aab0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ea34cb9788 <col:44> 'int' lvalue ParmVar 0x55ea34c8ab30 'flags' 'int'
|     | `-DeclRefExpr 0x55ea34cb97a8 <col:51> 'P' lvalue ParmVar 0x55ea34c8aba8 'parser' 'P'
|     `-ReturnStmt 0x55ea34cb9830 <line:525:9, col:17>
|       `-UnaryOperator 0x55ea34cb9818 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cb9808 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c8d578 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55ea34c8d198 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c8d218 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c8d4d8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c8d2d8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8d350 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c8d3f8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb9998 <col:58, line:541:5>
|     `-ReturnStmt 0x55ea34cb9988 <line:540:9, col:39>
|       `-CallExpr 0x55ea34cb9950 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb9870 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb98f0 <col:21> 'const char *' lvalue ParmVar 0x55ea34c8d2d8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb9910 <col:30> 'P' lvalue ParmVar 0x55ea34c8d350 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb9930 <col:38> 'T' lvalue ParmVar 0x55ea34c8d3f8 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c8d9c8 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55ea34c8d5e8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c8d668 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c8d928 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c8d728 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8d7a0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c8d848 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb9ad0 <col:60, line:545:5>
|     `-ReturnStmt 0x55ea34cb9ac0 <line:544:9, col:41>
|       `-CallExpr 0x55ea34cb9a88 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb99c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb9a28 <col:23> 'const char *' lvalue ParmVar 0x55ea34c8d728 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb9a48 <col:32> 'P' lvalue ParmVar 0x55ea34c8d7a0 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb9a68 <col:40> 'T' lvalue ParmVar 0x55ea34c8d848 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c8de18 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55ea34c8da38 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c8dab8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c8dd78 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c8db78 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8dbf0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c8dc98 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb9c08 <col:60, line:549:5>
|     `-ReturnStmt 0x55ea34cb9bf8 <line:548:9, col:41>
|       `-CallExpr 0x55ea34cb9bc0 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb9af8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb9b60 <col:23> 'const char *' lvalue ParmVar 0x55ea34c8db78 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb9b80 <col:32> 'P' lvalue ParmVar 0x55ea34c8dbf0 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb9ba0 <col:40> 'T' lvalue ParmVar 0x55ea34c8dc98 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c8e268 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55ea34c8de88 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c8df08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c8e1c8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c8dfc8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8e040 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c8e0e8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb9d40 <col:61, line:553:5>
|     `-ReturnStmt 0x55ea34cb9d30 <line:552:9, col:42>
|       `-CallExpr 0x55ea34cb9cf8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb9c30 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb9c98 <col:24> 'const char *' lvalue ParmVar 0x55ea34c8dfc8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb9cb8 <col:33> 'P' lvalue ParmVar 0x55ea34c8e040 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb9cd8 <col:41> 'T' lvalue ParmVar 0x55ea34c8e0e8 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c8e748 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55ea34c8e2d8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c8e358 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c8e6a8 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ea34c8e418 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8e498 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c8e510 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c8e5b8 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cb9eb8 <col:69, line:557:5>
|     `-ReturnStmt 0x55ea34cb9ea8 <line:556:9, col:46>
|       `-CallExpr 0x55ea34cb9e68 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb9d68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb9de8 <col:21> 'const char *' lvalue ParmVar 0x55ea34c8e418 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cb9e08 <col:30> 'int' lvalue ParmVar 0x55ea34c8e498 'flags' 'int'
|         |-DeclRefExpr 0x55ea34cb9e28 <col:37> 'P' lvalue ParmVar 0x55ea34c8e510 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cb9e48 <col:45> 'T' lvalue ParmVar 0x55ea34c8e5b8 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c8ea58 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55ea34c8e7c0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c8e9b8 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ea34c8e870 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8e8e8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cb9ff8 <col:56, line:571:5>
|     `-ReturnStmt 0x55ea34cb9fe8 <line:570:9, col:48>
|       `-CallExpr 0x55ea34cb9fb0 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cb9ee0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cb9f50 <col:30> 'const char *' lvalue ParmVar 0x55ea34c8e870 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cb9f70 <col:39> 'int' 0
|         `-DeclRefExpr 0x55ea34cb9f90 <col:42> 'P' lvalue ParmVar 0x55ea34c8e8e8 'parser' 'P'
|-FunctionTemplateDecl 0x55ea34c8ede8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55ea34c8eac0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c8ed48 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55ea34c8eb70 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8ebf0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c8ec68 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cba1c8 <col:67, line:576:5>
|     |-CallExpr 0x55ea34cba150 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cba010 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55ea34cba050 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cba060 <col:39> 'const char *' lvalue ParmVar 0x55ea34c8eb70 'keyword' 'const char *'
|     | |-BinaryOperator 0x55ea34cba110 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55ea34cba0c0 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55ea34cba080 <col:48> 'int' lvalue ParmVar 0x55ea34c8ebf0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55ea34cba0f8 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55ea34cba0d8 <col:56> 'const int' lvalue Var 0x55ea34c83410 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55ea34cba130 <col:68> 'P' lvalue ParmVar 0x55ea34c8ec68 'parser' 'P'
|     `-ReturnStmt 0x55ea34cba1b8 <line:575:9, col:17>
|       `-UnaryOperator 0x55ea34cba1a0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cba190 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c8f238 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55ea34c8ee58 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c8eed8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c8f198 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ea34c8ef98 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8f010 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c8f0b8 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cba338 <col:62, line:592:5>
|     `-ReturnStmt 0x55ea34cba328 <line:591:9, col:51>
|       `-CallExpr 0x55ea34cba2e8 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cba1f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cba268 <col:30> 'const char *' lvalue ParmVar 0x55ea34c8ef98 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cba288 <col:39> 'int' 0
|         |-DeclRefExpr 0x55ea34cba2a8 <col:42> 'P' lvalue ParmVar 0x55ea34c8f010 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cba2c8 <col:50> 'T' lvalue ParmVar 0x55ea34c8f0b8 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c8f718 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55ea34c8f2a8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c8f328 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c8f678 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ea34c8f3e8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8f468 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c8f4e0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c8f588 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cba530 <col:73, line:597:5>
|     |-CallExpr 0x55ea34cba4b0 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cba350 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55ea34cba390 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cba3a0 <col:39> 'const char *' lvalue ParmVar 0x55ea34c8f3e8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55ea34cba450 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55ea34cba400 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55ea34cba3c0 <col:48> 'int' lvalue ParmVar 0x55ea34c8f468 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55ea34cba438 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55ea34cba418 <col:56> 'const int' lvalue Var 0x55ea34c83410 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55ea34cba470 <col:68> 'P' lvalue ParmVar 0x55ea34c8f4e0 'parser' 'P'
|     | `-DeclRefExpr 0x55ea34cba490 <col:76> 'T' lvalue ParmVar 0x55ea34c8f588 'x' 'T &'
|     `-ReturnStmt 0x55ea34cba520 <line:596:9, col:17>
|       `-UnaryOperator 0x55ea34cba508 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cba4f8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c8fcc8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55ea34c8f790 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c8f808 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c8fc28 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55ea34c8f8c8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8f940 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c8fb00 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55ea34cba6a0 <col:65, line:614:5>
|     `-ReturnStmt 0x55ea34cba690 <line:613:9, col:46>
|       `-CallExpr 0x55ea34cba650 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cba560 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cba5d0 <col:25> 'const char *' lvalue ParmVar 0x55ea34c8f8c8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cba5f0 <col:34> 'int' 0
|         |-DeclRefExpr 0x55ea34cba610 <col:37> 'P' lvalue ParmVar 0x55ea34c8f940 'parser' 'P'
|         `-DeclRefExpr 0x55ea34cba630 <col:45> 'Vector<T>' lvalue ParmVar 0x55ea34c8fb00 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55ea34c900f8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55ea34c8fd38 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ea34c90058 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55ea34c8fdf0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c8ff40 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55ea34cba8c0 <col:55, line:618:5>
|     `-ReturnStmt 0x55ea34cba8b0 <line:617:9, col:55>
|       `-CallExpr 0x55ea34cba870 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cba6c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cba738 <col:25> 'const char *' lvalue ParmVar 0x55ea34c8fdf0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ea34cba758 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55ea34cba830 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55ea34cba850 <col:54> 'Vector<T>' lvalue ParmVar 0x55ea34c8ff40 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55ea34c906c8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55ea34c90160 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c901d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c90628 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55ea34c90298 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c90318 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c90390 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c904e0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55ea34cbaab8 <col:76, line:623:5>
|     |-CallExpr 0x55ea34cbaa38 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ea34cba8d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55ea34cba918 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55ea34cba928 <col:34> 'const char *' lvalue ParmVar 0x55ea34c90298 'keyword' 'const char *'
|     | |-BinaryOperator 0x55ea34cba9d8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55ea34cba988 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55ea34cba948 <col:43> 'int' lvalue ParmVar 0x55ea34c90318 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55ea34cba9c0 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55ea34cba9a0 <col:51> 'const int' lvalue Var 0x55ea34c83410 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55ea34cba9f8 <col:63> 'P' lvalue ParmVar 0x55ea34c90390 'parser' 'P'
|     | `-DeclRefExpr 0x55ea34cbaa18 <col:71> 'Vector<T>' lvalue ParmVar 0x55ea34c904e0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55ea34cbaaa8 <line:622:9, col:17>
|       `-UnaryOperator 0x55ea34cbaa90 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cbaa80 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c90c08 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55ea34c90740 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c907b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c90b68 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55ea34c90878 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c908f8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c90a40 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55ea34cbad20 <col:66, line:627:5>
|     `-ReturnStmt 0x55ea34cbad10 <line:626:9, col:59>
|       `-CallExpr 0x55ea34cbacd0 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ea34cbaae8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ea34cbab58 <col:25> 'const char *' lvalue ParmVar 0x55ea34c90878 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ea34cbab78 <col:34> 'int' lvalue ParmVar 0x55ea34c908f8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55ea34cbac90 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55ea34cbacb0 <col:58> 'Vector<T>' lvalue ParmVar 0x55ea34c90a40 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55ea34c90c98 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55ea34cbada0 <col:25, line:633:5>
|   `-ReturnStmt 0x55ea34cbad90 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55ea34cbad78 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55ea34cbad48 <col:16> 'const bool' lvalue ->_status 0x55ea34ca2278
|         `-CXXThisExpr 0x55ea34cbad38 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55ea34c90e48 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55ea34c90d80 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55ea34cbae88 <col:27, line:639:5>
|   |-BinaryOperator 0x55ea34cbae30 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55ea34cbadb8 <col:9> 'bool' lvalue ParmVar 0x55ea34c90d80 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55ea34cbae18 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55ea34cbade8 <col:13> 'bool' lvalue ->_status 0x55ea34ca2278
|   |     `-CXXThisExpr 0x55ea34cbadd8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55ea34cbae78 <line:638:9, col:17>
|     `-UnaryOperator 0x55ea34cbae60 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34cbae50 <col:17> 'Args *' this
|-CXXMethodDecl 0x55ea34c94d70 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55ea34c90f08 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55ea34cbaf78 <col:39, line:644:5>
|   |-BinaryOperator 0x55ea34cbaf20 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55ea34cbaea8 <col:9> 'bool' lvalue ParmVar 0x55ea34c90f08 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55ea34cbaf08 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55ea34cbaed8 <col:13> 'const bool' lvalue ->_status 0x55ea34ca2278
|   |     `-CXXThisExpr 0x55ea34cbaec8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55ea34cbaf68 <line:643:9, col:17>
|     `-UnaryOperator 0x55ea34cbaf50 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34cbaf40 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55ea34c94e38 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55ea34cbb020 <col:30, line:651:5>
|   `-ReturnStmt 0x55ea34cbb010 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55ea34cbaff8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55ea34cbafc8 <col:16> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|         `-ImplicitCastExpr 0x55ea34cbafa8 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55ea34cbaf98 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55ea34c94f80 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55ea34c94ef0 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55ea34cbb128 <col:32, line:658:5>
|   |-BinaryOperator 0x55ea34cbb0d0 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55ea34cbb038 <col:9> 'bool' lvalue ParmVar 0x55ea34c94ef0 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55ea34cbb0b8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55ea34cbb088 <col:13> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|   |     `-ImplicitCastExpr 0x55ea34cbb068 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55ea34cbb058 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55ea34cbb118 <line:657:9, col:17>
|     `-UnaryOperator 0x55ea34cbb100 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34cbb0f0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55ea34c950d0 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55ea34c95040 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55ea34cbb238 <col:44, line:663:5>
|   |-BinaryOperator 0x55ea34cbb1e0 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55ea34cbb148 <col:9> 'bool' lvalue ParmVar 0x55ea34c95040 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55ea34cbb1c8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55ea34cbb198 <col:13> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|   |     `-ImplicitCastExpr 0x55ea34cbb178 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55ea34cbb168 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55ea34cbb228 <line:662:9, col:17>
|     `-UnaryOperator 0x55ea34cbb210 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34cbb200 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55ea34c95198 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55ea34c95260 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55ea34c95328 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55ea34c953f0 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55ea34c956f8 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55ea34c95490 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ea34c95658 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55ea34c95568 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cbb590 <col:19, line:706:5>
|     `-IfStmt 0x55ea34cbb568 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55ea34cbb338 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55ea34cbb498 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55ea34cbb468 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55ea34cbb428 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55ea34cbb390 <col:42> '<bound member function type>' ->simple_slot 0x55ea34cb5c80
|       |     | `-CXXThisExpr 0x55ea34cbb380 <col:42> 'Args *' implicit this
|       |     |-UnaryOperator 0x55ea34cbb3e0 <col:54, col:55> '<dependent type>' prefix '&' cannot overflow
|       |     | `-DeclRefExpr 0x55ea34cbb3c0 <col:55> 'T' lvalue ParmVar 0x55ea34c95568 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55ea34cbb408 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55ea34cbb558 <line:705:13, col:34>
|         `-CallExpr 0x55ea34cbb530 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55ea34cbb4b8 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55ea34cbb510 <col:33> 'T' lvalue ParmVar 0x55ea34c95568 'x' 'T &'
|-FunctionTemplateDecl 0x55ea34c959c8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55ea34c95758 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ea34c95928 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55ea34c95838 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55ea34cbb970 <col:31, line:717:5>
|     |-DeclStmt 0x55ea34cbb6d0 <line:713:9, col:23>
|     | `-VarDecl 0x55ea34cbb5b8 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55ea34cbb6a8 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55ea34cbb630 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55ea34cbb688 <col:21> 'T' lvalue ParmVar 0x55ea34c95838 'x' 'T &'
|     |-IfStmt 0x55ea34cbb920 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55ea34cbb7c8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55ea34cbb900 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55ea34cbb8a0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55ea34cbb830 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|     |   | `-DeclRefExpr 0x55ea34cbb810 <col:14> 'T *' lvalue Var 0x55ea34cbb5b8 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55ea34cbb8e0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55ea34cbb958 <line:716:9, col:16>
|       `-DeclRefExpr 0x55ea34cbb938 <col:16> 'T *' lvalue Var 0x55ea34cbb5b8 's' 'T *'
|-FunctionTemplateDecl 0x55ea34c95dd8 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55ea34c95a28 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ea34c95aa8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ea34c95d38 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55ea34c95b88 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55ea34c95c28 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55ea34cbbc80 <col:37, line:726:5>
|     |-IfStmt 0x55ea34cbbc10 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55ea34cbbc30 <line:723:13, col:26>
|     | | `-VarDecl 0x55ea34cbb9d8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55ea34cbbac8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55ea34cbba50 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55ea34cbbaa8 <col:25> 'T' lvalue ParmVar 0x55ea34c95b88 'x' 'T &'
|     | |-DeclRefExpr 0x55ea34cbbaf0 <col:16> 'T *' lvalue Var 0x55ea34cbb9d8 's' 'T *'
|     | `-BinaryOperator 0x55ea34cbbbf0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55ea34cbbba0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55ea34cbbb30 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|     |   | `-DeclRefExpr 0x55ea34cbbb10 <col:14> 'T *' lvalue Var 0x55ea34cbb9d8 's' 'T *'
|     |   `-DeclRefExpr 0x55ea34cbbbd0 <col:18> 'const V' lvalue ParmVar 0x55ea34c95c28 'value' 'const V &'
|     `-ReturnStmt 0x55ea34cbbc70 <line:725:9, col:17>
|       `-UnaryOperator 0x55ea34cbbc58 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34cbbc48 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ea34c961d8 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55ea34c95e40 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ea34c96138 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55ea34c95ef0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c95f70 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c96018 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55ea34cbcaa0 <col:65, line:737:5>
|     |-DeclStmt 0x55ea34cbbd18 <line:732:9, col:26>
|     | `-VarDecl 0x55ea34cbbcb0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55ea34cbca68 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55ea34cbca88 <line:733:13, col:58>
|       | `-VarDecl 0x55ea34cbbd40 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55ea34cbbf20 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55ea34cbbef0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55ea34cbbed8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55ea34cbbeb8 <col:26, col:58> 'String' (CXXTemporary 0x55ea34cbbeb8)
|       |           `-CXXMemberCallExpr 0x55ea34cbbe48 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55ea34cbbdb8 <col:26> '<bound member function type>' ->find 0x55ea34cb5298
|       |             | `-CXXThisExpr 0x55ea34cbbda8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55ea34cbbe80 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ea34cbbde8 <col:31> 'const char *' lvalue ParmVar 0x55ea34c95ef0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55ea34cbbe98 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ea34cbbe08 <col:40> 'int' lvalue ParmVar 0x55ea34c95f70 'flags' 'int'
|       |             `-DeclRefExpr 0x55ea34cbbe28 <col:47> 'Args::Slot *' lvalue Var 0x55ea34cbbcb0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55ea34cbbfd8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ea34cbbfc0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ea34cbbfa0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ea34cbbf70 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|       |       `-ImplicitCastExpr 0x55ea34cbbf58 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55ea34cbbf38 <col:20> 'String' lvalue Var 0x55ea34cbbd40 'str' 'String'
|       `-CompoundStmt 0x55ea34cbca48 <col:61, line:736:9>
|         |-DeclStmt 0x55ea34cbc490 <line:734:13, col:76>
|         | `-VarDecl 0x55ea34cbc028 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55ea34cbc460 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55ea34cbc3d0 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55ea34cbc418 <col:60> 'T' lvalue ParmVar 0x55ea34c96018 'variable' 'T &'
|         |     `-UnaryOperator 0x55ea34cbc448 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55ea34cbc438 <col:71> 'Args *' this
|         `-CallExpr 0x55ea34cbca18 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55ea34cbc4b8 <col:13> '<bound member function type>' ->postparse 0x55ea34cb54a8
|           | `-CXXThisExpr 0x55ea34cbc4a8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55ea34cbc9d8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55ea34cbc4e8 <col:23> 'T *' lvalue Var 0x55ea34cbc028 's' 'T *'
|           | `-CallExpr 0x55ea34cbc998 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55ea34cbc770 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55ea34cbc870 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55ea34cbc890 <col:86> 'String' lvalue Var 0x55ea34cbbd40 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55ea34cbc940 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55ea34cbc8d0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|           |   | `-DeclRefExpr 0x55ea34cbc8b0 <col:92> 'T *' lvalue Var 0x55ea34cbc028 's' 'T *'
|           |   `-UnaryOperator 0x55ea34cbc980 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55ea34cbc970 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55ea34cbc9f8 <col:103> 'Args::Slot *' lvalue Var 0x55ea34cbbcb0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ea34c96728 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55ea34c96248 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ea34c962c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ea34c96688 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55ea34c96388 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c96408 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c964a8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55ea34c96548 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55ea34cbd940 <col:88, line:745:5>
|     |-DeclStmt 0x55ea34cbcb38 <line:741:9, col:26>
|     | `-VarDecl 0x55ea34cbcad0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ea34cbcd58 <line:742:9, col:55>
|     | `-VarDecl 0x55ea34cbcb60 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55ea34cbcd40 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55ea34cbcd10 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55ea34cbccf8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55ea34cbccd8 <col:22, col:54> 'String' (CXXTemporary 0x55ea34cbccd8)
|     |           `-CXXMemberCallExpr 0x55ea34cbcc68 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55ea34cbcbd8 <col:22> '<bound member function type>' ->find 0x55ea34cb5298
|     |             | `-CXXThisExpr 0x55ea34cbcbc8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55ea34cbcca0 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55ea34cbcc08 <col:27> 'const char *' lvalue ParmVar 0x55ea34c96388 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55ea34cbccb8 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55ea34cbcc28 <col:36> 'int' lvalue ParmVar 0x55ea34c96408 'flags' 'int'
|     |             `-DeclRefExpr 0x55ea34cbcc48 <col:43> 'Args::Slot *' lvalue Var 0x55ea34cbcad0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55ea34cbd130 <line:743:9, col:72>
|     | `-VarDecl 0x55ea34cbcda8 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55ea34cbd100 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55ea34cbd070 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55ea34cbd0b8 <col:56> 'T' lvalue ParmVar 0x55ea34c964a8 'variable' 'T &'
|     |     `-UnaryOperator 0x55ea34cbd0e8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55ea34cbd0d8 <col:67> 'Args *' this
|     `-CallExpr 0x55ea34cbd910 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55ea34cbd158 <col:9> '<bound member function type>' ->postparse 0x55ea34cb54a8
|       | `-CXXThisExpr 0x55ea34cbd148 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55ea34cbd8d0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55ea34cbd188 <col:19> 'T *' lvalue Var 0x55ea34cbcda8 's' 'T *'
|       | `-ParenExpr 0x55ea34cbd8b0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55ea34cbd880 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55ea34cbd868 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55ea34cbd850 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55ea34cbd830 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55ea34cbd800 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|       |     |       `-ImplicitCastExpr 0x55ea34cbd7e8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55ea34cbd1a8 <col:25> 'String' lvalue Var 0x55ea34cbcb60 'str' 'String'
|       |     |-CallExpr 0x55ea34cbd658 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55ea34cbd430 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55ea34cbd530 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55ea34cbd550 <col:89> 'String' lvalue Var 0x55ea34cbcb60 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55ea34cbd600 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55ea34cbd590 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|       |     | | `-DeclRefExpr 0x55ea34cbd570 <col:95> 'T *' lvalue Var 0x55ea34cbcda8 's' 'T *'
|       |     | `-UnaryOperator 0x55ea34cbd640 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55ea34cbd630 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55ea34cbd7c8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55ea34cbd7a8 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55ea34cbd778 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55ea34cbd728 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55ea34cbd6b8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|       |         | | `-DeclRefExpr 0x55ea34cbd698 <col:109> 'T *' lvalue Var 0x55ea34cbcda8 's' 'T *'
|       |         | `-DeclRefExpr 0x55ea34cbd758 <col:113> 'const V' lvalue ParmVar 0x55ea34c96548 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55ea34cbd798 <col:120> 'bool' true
|       `-DeclRefExpr 0x55ea34cbd8f0 <col:128> 'Args::Slot *' lvalue Var 0x55ea34cbcad0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ea34c96c58 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55ea34c967a0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c96818 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c96bb8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ea34c968d8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c96958 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c969d0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c96a78 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55ea34cbe538 <col:75, line:754:5>
|     |-DeclStmt 0x55ea34cbd9e8 <line:749:9, col:26>
|     | `-VarDecl 0x55ea34cbd980 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55ea34cbe500 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55ea34cbe520 <line:750:13, col:58>
|       | `-VarDecl 0x55ea34cbda10 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55ea34cbdbf0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55ea34cbdbc0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55ea34cbdba8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55ea34cbdb88 <col:26, col:58> 'String' (CXXTemporary 0x55ea34cbdb88)
|       |           `-CXXMemberCallExpr 0x55ea34cbdb18 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55ea34cbda88 <col:26> '<bound member function type>' ->find 0x55ea34cb5298
|       |             | `-CXXThisExpr 0x55ea34cbda78 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55ea34cbdb50 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ea34cbdab8 <col:31> 'const char *' lvalue ParmVar 0x55ea34c968d8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55ea34cbdb68 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ea34cbdad8 <col:40> 'int' lvalue ParmVar 0x55ea34c96958 'flags' 'int'
|       |             `-DeclRefExpr 0x55ea34cbdaf8 <col:47> 'Args::Slot *' lvalue Var 0x55ea34cbd980 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55ea34cbdca8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ea34cbdc90 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ea34cbdc70 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ea34cbdc40 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|       |       `-ImplicitCastExpr 0x55ea34cbdc28 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55ea34cbdc08 <col:20> 'String' lvalue Var 0x55ea34cbda10 'str' 'String'
|       `-CompoundStmt 0x55ea34cbe4e0 <col:61, line:753:9>
|         |-DeclStmt 0x55ea34cbe080 <line:751:13, col:63>
|         | `-VarDecl 0x55ea34cbdcf8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55ea34cbe050 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55ea34cbdfc0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55ea34cbe008 <col:47> 'T' lvalue ParmVar 0x55ea34c96a78 'variable' 'T &'
|         |     `-UnaryOperator 0x55ea34cbe038 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55ea34cbe028 <col:58> 'Args *' this
|         `-CallExpr 0x55ea34cbe4b0 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55ea34cbe0a8 <col:13> '<bound member function type>' ->postparse 0x55ea34cb54a8
|           | `-CXXThisExpr 0x55ea34cbe098 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55ea34cbe470 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55ea34cbe0d8 <col:23> 'T *' lvalue Var 0x55ea34cbdcf8 's' 'T *'
|           | `-CallExpr 0x55ea34cbe430 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55ea34cbe2c0 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55ea34cbe308 <col:56> 'P' lvalue ParmVar 0x55ea34c969d0 'parser' 'P'
|           |   |-DeclRefExpr 0x55ea34cbe328 <col:64> 'String' lvalue Var 0x55ea34cbda10 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55ea34cbe3d8 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55ea34cbe368 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|           |   | `-DeclRefExpr 0x55ea34cbe348 <col:70> 'T *' lvalue Var 0x55ea34cbdcf8 's' 'T *'
|           |   `-UnaryOperator 0x55ea34cbe418 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55ea34cbe408 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55ea34cbe490 <col:81> 'Args::Slot *' lvalue Var 0x55ea34cbd980 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ea34c972b8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55ea34c96cd0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ea34c96d48 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55ea34c96dc8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55ea34c97218 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55ea34c96e90 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c96f10 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c96f88 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c97028 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55ea34c970c8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55ea34cbf2c8 <col:98, line:762:5>
|     |-DeclStmt 0x55ea34cbe5d0 <line:758:9, col:26>
|     | `-VarDecl 0x55ea34cbe568 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ea34cbe7f0 <line:759:9, col:55>
|     | `-VarDecl 0x55ea34cbe5f8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55ea34cbe7d8 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55ea34cbe7a8 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55ea34cbe790 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55ea34cbe770 <col:22, col:54> 'String' (CXXTemporary 0x55ea34cbe770)
|     |           `-CXXMemberCallExpr 0x55ea34cbe700 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55ea34cbe670 <col:22> '<bound member function type>' ->find 0x55ea34cb5298
|     |             | `-CXXThisExpr 0x55ea34cbe660 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55ea34cbe738 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55ea34cbe6a0 <col:27> 'const char *' lvalue ParmVar 0x55ea34c96e90 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55ea34cbe750 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55ea34cbe6c0 <col:36> 'int' lvalue ParmVar 0x55ea34c96f10 'flags' 'int'
|     |             `-DeclRefExpr 0x55ea34cbe6e0 <col:43> 'Args::Slot *' lvalue Var 0x55ea34cbe568 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55ea34cbec10 <line:760:9, col:59>
|     | `-VarDecl 0x55ea34cbe848 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55ea34cbebe0 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55ea34cbeb50 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55ea34cbeb98 <col:43> 'T' lvalue ParmVar 0x55ea34c97028 'variable' 'T &'
|     |     `-UnaryOperator 0x55ea34cbebc8 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55ea34cbebb8 <col:54> 'Args *' this
|     `-CallExpr 0x55ea34cbf298 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55ea34cbec38 <col:9> '<bound member function type>' ->postparse 0x55ea34cb54a8
|       | `-CXXThisExpr 0x55ea34cbec28 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55ea34cbf258 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55ea34cbec68 <col:19> 'T *' lvalue Var 0x55ea34cbe848 's' 'T *'
|       | `-ParenExpr 0x55ea34cbf238 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55ea34cbf208 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55ea34cbf1f0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55ea34cbf1d8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55ea34cbf1b8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55ea34cbf188 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|       |     |       `-ImplicitCastExpr 0x55ea34cbf170 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55ea34cbec88 <col:25> 'String' lvalue Var 0x55ea34cbe5f8 'str' 'String'
|       |     |-CallExpr 0x55ea34cbefe0 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55ea34cbee70 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55ea34cbeeb8 <col:59> 'P' lvalue ParmVar 0x55ea34c96f88 'parser' 'P'
|       |     | |-DeclRefExpr 0x55ea34cbeed8 <col:67> 'String' lvalue Var 0x55ea34cbe5f8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55ea34cbef88 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55ea34cbef18 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|       |     | | `-DeclRefExpr 0x55ea34cbeef8 <col:73> 'T *' lvalue Var 0x55ea34cbe848 's' 'T *'
|       |     | `-UnaryOperator 0x55ea34cbefc8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55ea34cbefb8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55ea34cbf150 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55ea34cbf130 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55ea34cbf100 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55ea34cbf0b0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55ea34cbf040 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|       |         | | `-DeclRefExpr 0x55ea34cbf020 <col:87> 'T *' lvalue Var 0x55ea34cbe848 's' 'T *'
|       |         | `-DeclRefExpr 0x55ea34cbf0e0 <col:91> 'const V' lvalue ParmVar 0x55ea34c970c8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55ea34cbf120 <col:98> 'bool' true
|       `-DeclRefExpr 0x55ea34cbf278 <col:106> 'Args::Slot *' lvalue Var 0x55ea34cbe568 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ea34c97928 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55ea34c97338 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c973b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ea34c97438 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ea34c97888 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ea34c97500 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c97580 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c975f8 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c97698 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55ea34c97738 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55ea34cc02a8 <col:60, line:773:5>
|     |-DeclStmt 0x55ea34cbf370 <line:767:9, col:26>
|     | `-VarDecl 0x55ea34cbf308 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55ea34cc0270 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55ea34cc0290 <line:768:13, col:58>
|       | `-VarDecl 0x55ea34cbf398 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55ea34cbf578 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55ea34cbf548 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55ea34cbf530 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55ea34cbf510 <col:26, col:58> 'String' (CXXTemporary 0x55ea34cbf510)
|       |           `-CXXMemberCallExpr 0x55ea34cbf4a0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55ea34cbf410 <col:26> '<bound member function type>' ->find 0x55ea34cb5298
|       |             | `-CXXThisExpr 0x55ea34cbf400 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55ea34cbf4d8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ea34cbf440 <col:31> 'const char *' lvalue ParmVar 0x55ea34c97500 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55ea34cbf4f0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ea34cbf460 <col:40> 'int' lvalue ParmVar 0x55ea34c97580 'flags' 'int'
|       |             `-DeclRefExpr 0x55ea34cbf480 <col:47> 'Args::Slot *' lvalue Var 0x55ea34cbf308 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55ea34cbf630 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ea34cbf618 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ea34cbf5f8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ea34cbf5c8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|       |       `-ImplicitCastExpr 0x55ea34cbf5b0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55ea34cbf590 <col:20> 'String' lvalue Var 0x55ea34cbf398 'str' 'String'
|       `-CompoundStmt 0x55ea34cc0248 <col:61, line:772:9>
|         |-DeclStmt 0x55ea34cbf970 <line:769:13, col:66>
|         | `-VarDecl 0x55ea34cbf688 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55ea34cbf940 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55ea34cbf8b0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55ea34cbf8f8 <col:49> 'T1' lvalue ParmVar 0x55ea34c97698 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55ea34cbf928 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55ea34cbf918 <col:61> 'Args *' this
|         |-DeclStmt 0x55ea34cbfce0 <line:770:13, col:66>
|         | `-VarDecl 0x55ea34cbf9f8 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55ea34cbfcb0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55ea34cbfc20 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55ea34cbfc68 <col:49> 'T2' lvalue ParmVar 0x55ea34c97738 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55ea34cbfc98 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55ea34cbfc88 <col:61> 'Args *' this
|         `-CallExpr 0x55ea34cc0218 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55ea34cbfd08 <col:13> '<bound member function type>' ->postparse 0x55ea34cb54a8
|           | `-CXXThisExpr 0x55ea34cbfcf8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55ea34cc01d8 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55ea34cbfd78 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55ea34cbfd38 <col:23> 'T1 *' lvalue Var 0x55ea34cbf688 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55ea34cbfd58 <col:29> 'T2 *' lvalue Var 0x55ea34cbf9f8 's2' 'T2 *'
|           | `-CallExpr 0x55ea34cc0190 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55ea34cbff60 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55ea34cbffa8 <col:63> 'P' lvalue ParmVar 0x55ea34c975f8 'parser' 'P'
|           |   |-DeclRefExpr 0x55ea34cbffc8 <col:71> 'String' lvalue Var 0x55ea34cbf398 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55ea34cc0078 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55ea34cc0008 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|           |   | `-DeclRefExpr 0x55ea34cbffe8 <col:77> 'T1 *' lvalue Var 0x55ea34cbf688 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55ea34cc0138 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55ea34cc00c8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|           |   | `-DeclRefExpr 0x55ea34cc00a8 <col:82> 'T2 *' lvalue Var 0x55ea34cbf9f8 's2' 'T2 *'
|           |   `-UnaryOperator 0x55ea34cc0178 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55ea34cc0168 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55ea34cc01f8 <col:94> 'Args::Slot *' lvalue Var 0x55ea34cbf308 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ea34c97d18 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55ea34c979a8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c97c78 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55ea34c97a60 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c97ae0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c97b58 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cc22b8 <col:67, line:780:5>
|     |-DeclStmt 0x55ea34cc0340 <line:777:9, col:26>
|     | `-VarDecl 0x55ea34cc02d8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55ea34cc2280 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55ea34cc22a0 <line:778:13, col:58>
|       | `-VarDecl 0x55ea34cc1e60 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55ea34cc2040 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55ea34cc2010 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55ea34cc1ff8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55ea34cc1fd8 <col:26, col:58> 'String' (CXXTemporary 0x55ea34cc1fd8)
|       |           `-CXXMemberCallExpr 0x55ea34cc1f68 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55ea34cc1ed8 <col:26> '<bound member function type>' ->find 0x55ea34cb5298
|       |             | `-CXXThisExpr 0x55ea34cc1ec8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55ea34cc1fa0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ea34cc1f08 <col:31> 'const char *' lvalue ParmVar 0x55ea34c97a60 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55ea34cc1fb8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ea34cc1f28 <col:40> 'int' lvalue ParmVar 0x55ea34c97ae0 'flags' 'int'
|       |             `-DeclRefExpr 0x55ea34cc1f48 <col:47> 'Args::Slot *' lvalue Var 0x55ea34cc02d8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55ea34cc20f8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ea34cc20e0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ea34cc20c0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ea34cc2090 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|       |       `-ImplicitCastExpr 0x55ea34cc2078 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55ea34cc2058 <col:20> 'String' lvalue Var 0x55ea34cc1e60 'str' 'String'
|       `-CallExpr 0x55ea34cc2250 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55ea34cc2120 <col:13> '<bound member function type>' ->postparse 0x55ea34cb54a8
|         | `-CXXThisExpr 0x55ea34cc2110 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55ea34cc2200 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55ea34cc2170 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55ea34cc2150 <col:23> 'P' lvalue ParmVar 0x55ea34c97b58 'parser' 'P'
|         | |-DeclRefExpr 0x55ea34cc21b8 <col:36> 'String' lvalue Var 0x55ea34cc1e60 'str' 'String'
|         | `-UnaryOperator 0x55ea34cc21e8 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55ea34cc21d8 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55ea34cc2230 <col:49> 'Args::Slot *' lvalue Var 0x55ea34cc02d8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ea34c980b8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55ea34c97d88 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ea34c98018 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55ea34c97e40 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c97ec0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c97f38 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55ea34cc2c28 <col:71, line:792:5>
|     |-DeclStmt 0x55ea34cc2350 <line:784:9, col:26>
|     | `-VarDecl 0x55ea34cc22e8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ea34cc2420 <line:785:9, col:29>
|     | `-VarDecl 0x55ea34cc2380 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55ea34cc2408 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55ea34cc23e8 <col:28> 'int' 1
|     |-WhileStmt 0x55ea34cc2ad8 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55ea34cc2af8 <line:786:16, col:61>
|     | | `-VarDecl 0x55ea34cc2448 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55ea34cc2628 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55ea34cc25f8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55ea34cc25e0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55ea34cc25c0 <col:29, col:61> 'String' (CXXTemporary 0x55ea34cc25c0)
|     | |           `-CXXMemberCallExpr 0x55ea34cc2550 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55ea34cc24c0 <col:29> '<bound member function type>' ->find 0x55ea34cb5298
|     | |             | `-CXXThisExpr 0x55ea34cc24b0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55ea34cc2588 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ea34cc24f0 <col:34> 'const char *' lvalue ParmVar 0x55ea34c97e40 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55ea34cc25a0 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ea34cc2510 <col:43> 'int' lvalue ParmVar 0x55ea34c97ec0 'flags' 'int'
|     | |             `-DeclRefExpr 0x55ea34cc2530 <col:50> 'Args::Slot *' lvalue Var 0x55ea34cc22e8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55ea34cc26e0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55ea34cc26c8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55ea34cc26a8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55ea34cc2678 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|     | |       `-ImplicitCastExpr 0x55ea34cc2660 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55ea34cc2640 <col:23> 'String' lvalue Var 0x55ea34cc2448 'str' 'String'
|     | `-CompoundStmt 0x55ea34cc2ab0 <col:64, line:790:9>
|     |   |-CallExpr 0x55ea34cc2838 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55ea34cc2708 <col:13> '<bound member function type>' ->postparse 0x55ea34cb54a8
|     |   | | `-CXXThisExpr 0x55ea34cc26f8 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55ea34cc27e8 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55ea34cc2758 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55ea34cc2738 <col:23> 'P' lvalue ParmVar 0x55ea34c97f38 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55ea34cc27a0 <col:36> 'String' lvalue Var 0x55ea34cc2448 'str' 'String'
|     |   | | `-UnaryOperator 0x55ea34cc27d0 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55ea34cc27c0 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55ea34cc2818 <col:49> 'Args::Slot *' lvalue Var 0x55ea34cc22e8 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55ea34cc29d0 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55ea34cc2868 <col:13> 'int' lvalue Var 0x55ea34cc2380 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55ea34cc29b8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55ea34cc2998 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55ea34cc2900 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55ea34cc28e0 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55ea34cc28c8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55ea34cc2888 <col:28> 'int' lvalue Var 0x55ea34cc2380 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55ea34cc28a8 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55ea34cc2980 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55ea34cc2950 <col:49> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|     |   |         `-ImplicitCastExpr 0x55ea34cc2930 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55ea34cc2920 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55ea34cc2a80 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55ea34cc29f0 <col:13> 'int' lvalue ParmVar 0x55ea34c97ec0 'flags' 'int'
|     |     `-UnaryOperator 0x55ea34cc2a68 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55ea34cc2a50 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ea34cc2a30 <col:23> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55ea34cc2c08 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55ea34cc2b40 <col:9> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|       | `-ImplicitCastExpr 0x55ea34cc2b20 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55ea34cc2b10 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55ea34cc2be8 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55ea34cc2bc8 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55ea34cc2bb0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55ea34cc2b70 <col:25> 'int' lvalue Var 0x55ea34cc2380 'read_status' 'int'
|           `-IntegerLiteral 0x55ea34cc2b90 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55ea34c98598 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55ea34c98128 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c981a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c984f8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ea34c98268 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c982e8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c98360 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c98408 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55ea34cc3bc0 <col:84, line:805:5>
|     |-DeclStmt 0x55ea34cc2cd0 <line:796:9, col:26>
|     | `-VarDecl 0x55ea34cc2c68 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ea34cc2da0 <line:797:9, col:29>
|     | `-VarDecl 0x55ea34cc2d00 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55ea34cc2d88 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55ea34cc2d68 <col:28> 'int' 1
|     |-DeclStmt 0x55ea34cc30e0 <line:798:9, col:71>
|     | `-VarDecl 0x55ea34cc2df8 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55ea34cc30b0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55ea34cc3020 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55ea34cc3068 <col:55> 'T' lvalue ParmVar 0x55ea34c98408 'variable' 'T &'
|     |     `-UnaryOperator 0x55ea34cc3098 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55ea34cc3088 <col:66> 'Args *' this
|     |-WhileStmt 0x55ea34cc3a70 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55ea34cc3a90 <line:799:16, col:61>
|     | | `-VarDecl 0x55ea34cc3108 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55ea34cc32e8 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55ea34cc32b8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55ea34cc32a0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55ea34cc3280 <col:29, col:61> 'String' (CXXTemporary 0x55ea34cc3280)
|     | |           `-CXXMemberCallExpr 0x55ea34cc3210 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55ea34cc3180 <col:29> '<bound member function type>' ->find 0x55ea34cb5298
|     | |             | `-CXXThisExpr 0x55ea34cc3170 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55ea34cc3248 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ea34cc31b0 <col:34> 'const char *' lvalue ParmVar 0x55ea34c98268 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55ea34cc3260 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ea34cc31d0 <col:43> 'int' lvalue ParmVar 0x55ea34c982e8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55ea34cc31f0 <col:50> 'Args::Slot *' lvalue Var 0x55ea34cc2c68 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55ea34cc33a0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55ea34cc3388 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55ea34cc3368 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55ea34cc3338 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|     | |       `-ImplicitCastExpr 0x55ea34cc3320 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55ea34cc3300 <col:23> 'String' lvalue Var 0x55ea34cc3108 'str' 'String'
|     | `-CompoundStmt 0x55ea34cc3a48 <col:64, line:803:9>
|     |   |-CallExpr 0x55ea34cc37d0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55ea34cc33c8 <col:13> '<bound member function type>' ->postparse 0x55ea34cb54a8
|     |   | | `-CXXThisExpr 0x55ea34cc33b8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55ea34cc3790 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55ea34cc33f8 <col:23> 'T *' lvalue Var 0x55ea34cc2df8 's' 'T *'
|     |   | | `-CallExpr 0x55ea34cc3750 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55ea34cc35e0 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55ea34cc3628 <col:56> 'P' lvalue ParmVar 0x55ea34c98360 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55ea34cc3648 <col:64> 'String' lvalue Var 0x55ea34cc3108 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55ea34cc36f8 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55ea34cc3688 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|     |   | |   | `-DeclRefExpr 0x55ea34cc3668 <col:70> 'T *' lvalue Var 0x55ea34cc2df8 's' 'T *'
|     |   | |   `-UnaryOperator 0x55ea34cc3738 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55ea34cc3728 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55ea34cc37b0 <col:81> 'Args::Slot *' lvalue Var 0x55ea34cc2c68 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55ea34cc3968 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55ea34cc3800 <col:13> 'int' lvalue Var 0x55ea34cc2d00 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55ea34cc3950 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55ea34cc3930 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55ea34cc3898 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55ea34cc3878 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55ea34cc3860 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55ea34cc3820 <col:28> 'int' lvalue Var 0x55ea34cc2d00 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55ea34cc3840 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55ea34cc3918 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55ea34cc38e8 <col:49> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|     |   |         `-ImplicitCastExpr 0x55ea34cc38c8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55ea34cc38b8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55ea34cc3a18 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55ea34cc3988 <col:13> 'int' lvalue ParmVar 0x55ea34c982e8 'flags' 'int'
|     |     `-UnaryOperator 0x55ea34cc3a00 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55ea34cc39e8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ea34cc39c8 <col:23> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55ea34cc3ba0 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55ea34cc3ad8 <col:9> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|       | `-ImplicitCastExpr 0x55ea34cc3ab8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55ea34cc3aa8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55ea34cc3b80 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55ea34cc3b60 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55ea34cc3b48 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55ea34cc3b08 <col:25> 'int' lvalue Var 0x55ea34cc2d00 'read_status' 'int'
|           `-IntegerLiteral 0x55ea34cc3b28 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55ea34c98b78 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55ea34c98610 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ea34c98688 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ea34c98ad8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55ea34c98748 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ea34c987c8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55ea34c98840 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55ea34c98990 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55ea34cc49c8 <col:87, line:821:5>
|     |-DeclStmt 0x55ea34cc3c70 <line:809:9, col:26>
|     | `-VarDecl 0x55ea34cc3c08 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ea34cc3d40 <line:810:9, col:29>
|     | `-VarDecl 0x55ea34cc3ca0 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55ea34cc3d28 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55ea34cc3d08 <col:28> 'int' 1
|     |-DeclStmt 0x55ea34cc3f88 <line:811:9, col:38>
|     | `-VarDecl 0x55ea34cc3e70 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55ea34cc3f60 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55ea34cc3ee8 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55ea34cc3f40 <col:29> 'Vector<T>' lvalue ParmVar 0x55ea34c98990 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55ea34cc4878 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55ea34cc4898 <line:812:16, col:61>
|     | | `-VarDecl 0x55ea34cc3fb0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55ea34cc4190 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55ea34cc4160 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55ea34cc4148 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55ea34cc4128 <col:29, col:61> 'String' (CXXTemporary 0x55ea34cc4128)
|     | |           `-CXXMemberCallExpr 0x55ea34cc40b8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55ea34cc4028 <col:29> '<bound member function type>' ->find 0x55ea34cb5298
|     | |             | `-CXXThisExpr 0x55ea34cc4018 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55ea34cc40f0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ea34cc4058 <col:34> 'const char *' lvalue ParmVar 0x55ea34c98748 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55ea34cc4108 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ea34cc4078 <col:43> 'int' lvalue ParmVar 0x55ea34c987c8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55ea34cc4098 <col:50> 'Args::Slot *' lvalue Var 0x55ea34cc3c08 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55ea34cc4248 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55ea34cc4230 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55ea34cc4210 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55ea34cc41e0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55ea3495ef88
|     | |       `-ImplicitCastExpr 0x55ea34cc41c8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55ea34cc41a8 <col:23> 'String' lvalue Var 0x55ea34cc3fb0 'str' 'String'
|     | `-CompoundStmt 0x55ea34cc4840 <col:64, line:819:9>
|     |   |-DeclStmt 0x55ea34cc4308 <line:813:13, col:23>
|     |   | `-VarDecl 0x55ea34cc4270 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55ea34cc42e8 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55ea34cc4488 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55ea34cc4330 <col:13> '<bound member function type>' ->postparse 0x55ea34cb54a8
|     |   | | `-CXXThisExpr 0x55ea34cc4320 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55ea34cc4430 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55ea34cc4380 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55ea34cc4360 <col:23> 'P' lvalue ParmVar 0x55ea34c98840 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55ea34cc43c8 <col:36> 'String' lvalue Var 0x55ea34cc3fb0 'str' 'String'
|     |   | | |-DeclRefExpr 0x55ea34cc43e8 <col:41> 'T' lvalue Var 0x55ea34cc4270 'sx' 'T'
|     |   | | `-UnaryOperator 0x55ea34cc4418 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55ea34cc4408 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55ea34cc4468 <col:53> 'Args::Slot *' lvalue Var 0x55ea34cc3c08 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55ea34cc45e0 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55ea34cc4518 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55ea34cc44e8 <col:17> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|     |   | |   `-ImplicitCastExpr 0x55ea34cc44c8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55ea34cc44b8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55ea34cc45b8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55ea34cc4550 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55ea34cc4530 <col:17> 'Vector<T> *' lvalue Var 0x55ea34cc3e70 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55ea34cc4598 <col:30> 'T' lvalue Var 0x55ea34cc4270 'sx' 'T'
|     |   |-BinaryOperator 0x55ea34cc4760 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55ea34cc45f8 <col:13> 'int' lvalue Var 0x55ea34cc3ca0 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55ea34cc4748 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55ea34cc4728 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55ea34cc4690 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55ea34cc4670 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55ea34cc4658 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55ea34cc4618 <col:28> 'int' lvalue Var 0x55ea34cc3ca0 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55ea34cc4638 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55ea34cc4710 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55ea34cc46e0 <col:49> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|     |   |         `-ImplicitCastExpr 0x55ea34cc46c0 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55ea34cc46b0 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55ea34cc4810 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55ea34cc4780 <col:13> 'int' lvalue ParmVar 0x55ea34c987c8 'flags' 'int'
|     |     `-UnaryOperator 0x55ea34cc47f8 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55ea34cc47e0 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ea34cc47c0 <col:23> 'const int' lvalue Var 0x55ea34c83128 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55ea34cc49a8 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55ea34cc48e0 <col:9> 'bool' lvalue ->_read_status 0x55ea34c7bc10
|       | `-ImplicitCastExpr 0x55ea34cc48c0 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55ea34cc48b0 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55ea34cc4988 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55ea34cc4968 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55ea34cc4950 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55ea34cc4910 <col:25> 'int' lvalue Var 0x55ea34cc3ca0 'read_status' 'int'
|           `-IntegerLiteral 0x55ea34cc4930 <col:40> 'int' 1
|-AccessSpecDecl 0x55ea34c98bf0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55ea34c98c18 prev 0x55ea34c813b8 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55ea34ca06e0 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55ea34ca07d0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55ea34cc4a00 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55ea34ca08c0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55ea34cc4a10 <col:25, line:830:9>
| |-CXXMethodDecl 0x55ea34ca09c0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55ea34ca0a70 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55ea34ca0b18 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55ea34ca0b18
| | `-ParmVarDecl 0x55ea34ca0c28 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55ea34ca13e8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55ea34ca13e8
|   `-ParmVarDecl 0x55ea34ca14f8 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55ea34ca0c98 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55ea34ca0df8 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55ea34ca0ff0 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55ea34ca0ea0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55ea34ca0f18 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55ea34cc4bf0 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55ea34ca12a8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55ea34cc4a60 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55ea34cc4a20 <col:20> 'void *' lvalue ParmVar 0x55ea34ca0ea0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55ea34ca1310 '_slot' 'char *'
| | | `-CXXNewExpr 0x55ea34cc4ae8 <col:32, col:45> 'char *' array Function 0x55ea34873b58 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55ea34cc4ad0 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55ea34cc4aa0 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55ea34ca0f18 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55ea34ca1370 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55ea34cc4bb0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55ea34cc4b70 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55ea34ca0f18 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55ea34cc4c70 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55ea34ca10f0 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55ea34ca08c0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55ea34cc4cf8 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55ea34cc4cd8 <line:840:13, col:22> 'void' array Function 0x55ea34873eb8 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55ea34cc4cc0 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55ea34cc4c90 <col:22> 'char *' lvalue ->_slot 0x55ea34ca1310
| |         `-CXXThisExpr 0x55ea34cc4c80 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55ea34ca11f0 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55ea34ca09c0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55ea34cc4ee8 <col:22, line:844:9>
| |   `-CallExpr 0x55ea34cc4e50 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55ea34cc4e38 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55ea34cc4e18 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55ea3494a7b8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55ea34cc4e88 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55ea34cc4d68 <col:20> 'void *' lvalue ->_ptr 0x55ea34ca12a8
| |     |   `-CXXThisExpr 0x55ea34cc4d58 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55ea34cc4eb8 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55ea34cc4ea0 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55ea34cc4da8 <col:26> 'char *' lvalue ->_slot 0x55ea34ca1310
| |     |     `-CXXThisExpr 0x55ea34cc4d98 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55ea34cc4ed0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55ea34cc4de8 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55ea34ca1370
| |         `-CXXThisExpr 0x55ea34cc4dd8 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55ea34ca12a8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55ea34ca1310 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55ea34ca1370 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55ea34ca1568 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55ea34ca1568
| | `-ParmVarDecl 0x55ea34ca1678 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55ea34ca1718 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55ea34ca1718
|   `-ParmVarDecl 0x55ea34ca1828 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55ea34ca19c8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55ea34ca1898 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55ea34ca1938 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55ea34ca1c60 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55ea34ca1e58 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55ea34ca1d28 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55ea34ca1fd8 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55ea34cc4f20 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55ea34cc4f00 <col:20> 'T *' lvalue ParmVar 0x55ea34ca1d28 'ptr' 'T *'
|   | `-CompoundStmt 0x55ea34cc4f70 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55ea34ca1f28 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55ea34ca09c0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55ea34cc5120 <col:22, line:857:9>
|   |   `-CallExpr 0x55ea34cc50f0 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55ea34cc4f80 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55ea34a8d1f8 0x55ea3493b828
|   |     |-CXXOperatorCallExpr 0x55ea34cc5080 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55ea34cc5010 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ea34c76b08 0x55ea34c766f8 0x55ea34c76328 0x55ea34c75f48 0x55ea34c75b68 0x55ea34c75798
|   |     | `-MemberExpr 0x55ea34cc4fe0 <col:29> 'T *' lvalue ->_ptr 0x55ea34ca1fd8
|   |     |   `-CXXThisExpr 0x55ea34cc4fd0 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55ea34cc50c0 <col:35> 'T' lvalue ->_slot 0x55ea34ca2038
|   |       `-CXXThisExpr 0x55ea34cc50b0 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55ea34ca1fd8 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55ea34ca2038 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55ea34ca20a0 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55ea34ca21a0 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55ea34ca21f0 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34ca2180 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55ea34ca2160 <col:31> 'int' 48
|-FieldDecl 0x55ea34ca2218 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55ea34ca2278 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55ea34ca22d8 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55ea34ca2410 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55ea34cb4ac0 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55ea34cb4b20 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55ea34cb4c48 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55ea34cb4e78 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55ea34cb4d80 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55ea34cb4fc8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55ea34cb4f38 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55ea34cb5298 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55ea34cb5088 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55ea34cb5108 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55ea34cb51b0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55ea34cb54a8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55ea34cb5360 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55ea34cb53d8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55ea34cb5578 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55ea34cb56c8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55ea34cb5630 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55ea34cb5a58 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55ea34cb5788 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55ea34cb5808 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55ea34cb58b0 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55ea34cb5968 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55ea34cb5c80 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55ea34cb5b30 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55ea34cb5ba8 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55ea34cb5f98 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55ea34cb5d30 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55ea34cb5ef8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55ea34cb5e08 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector*, %class.Vector.0, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector*, %class.Vector.0, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d66150 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34d66268 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55ea34d66338 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55ea34d66398 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55ea34d66400 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55ea34d66488 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55ea34d666f0 <col:16, line:46:5>
|   |-BinaryOperator 0x55ea34d66638 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55ea34d66558 <col:9> 'TaskLink *' lvalue ->_prev 0x55ea34d66338
|   | | `-CXXThisExpr 0x55ea34d66548 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d66620 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55ea34d66600 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55ea34d66598 <col:17> 'TaskLink *' lvalue ->_next 0x55ea34d66398
|   |     | `-CXXThisExpr 0x55ea34d66588 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55ea34d665e8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55ea34d665c8 <col:25> 'int' 0
|   `-BinaryOperator 0x55ea34d666d0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55ea34d66668 <col:9> 'unsigned int' lvalue ->_pass 0x55ea34d66400
|     | `-CXXThisExpr 0x55ea34d66658 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55ea34d666b8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55ea34d66698 <col:17> 'int' 0
|-CXXConstructorDecl 0x55ea34de1178 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55ea34de1178
| `-ParmVarDecl 0x55ea34de1288 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55ea34de1328 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55ea34de1328
| `-ParmVarDecl 0x55ea34de1438 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55ea34de1628 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55ea34de1628
|-CXXMethodDecl 0x55ea34de1e28 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55ea34de1e28
| `-ParmVarDecl 0x55ea34de1f38 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55ea34de1fa8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55ea34de1fa8
  `-ParmVarDecl 0x55ea34de20b8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d69d78 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55ea34d69ea8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55ea34d69f08 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55ea34d69f68 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55ea34de8338 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55ea34de8410 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ea34de8410
|-CXXConstructorDecl 0x55ea34de86c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55ea34de86c8
| `-ParmVarDecl 0x55ea34de87d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55ea34de8878 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55ea34de8878
  `-ParmVarDecl 0x55ea34de8988 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d69bd0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55ea34d69ce8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55ea34d69d78 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55ea34d69ea8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55ea34d69f08 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55ea34d69f68 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55ea34de8338 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55ea34de8410 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ea34de8410
| |-CXXConstructorDecl 0x55ea34de86c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55ea34de86c8
| | `-ParmVarDecl 0x55ea34de87d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55ea34de8878 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55ea34de8878
|   `-ParmVarDecl 0x55ea34de8988 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55ea34d6a028 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55ea34d6a088 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55ea34d6a028 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55ea34d69ea8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55ea34d6a0e0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55ea34d6a028 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55ea34d69f08 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55ea34d6a138 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55ea34d6a028 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55ea34d69f68 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55ea34d6a190 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ea34de8248 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ea34de9c48 <col:11>
|-CXXConstructorDecl 0x55ea34de8518 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55ea34de8518
| `-ParmVarDecl 0x55ea34de8628 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55ea34de9ac0 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55ea34de9ac0
  `-ParmVarDecl 0x55ea34de9bd8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34c502b0 prev 0x55ea34b36de0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34c503a8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55ea34c50448 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55ea34c552b8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ea34c55698 <col:11>
|-CXXConstructorDecl 0x55ea34c55390 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34c55478 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55ea34c55de0 <col:11>
|-CXXConstructorDecl 0x55ea34c55518 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34c55628 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55ea34c57a38 <col:11>
|-CXXDestructorDecl 0x55ea34c56948 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55ea34d22848 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34d22958 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55ea34d23220 <col:11>
|   `-ReturnStmt 0x55ea34d23210 <col:11>
|     `-UnaryOperator 0x55ea34d231f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34d231e8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55ea34d229c8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55ea34d22ad8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55ea34d7ddb0 <col:11>
    `-ReturnStmt 0x55ea34d7dda0 <col:11>
      `-UnaryOperator 0x55ea34d7dd88 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55ea34d7dd78 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34c3d778 prev 0x55ea34c3d4e0 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34c3d870 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55ea34c3d900 <col:19, col:25> col:19 public
|-TypedefDecl 0x55ea34c3d938 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55ea34875fc0 'int32_t' sugar
|   |-Typedef 0x55ea34786328 'int32_t'
|   `-TypedefType 0x55ea3475f510 '__int32_t' sugar
|     |-Typedef 0x55ea3475f128 '__int32_t'
|     `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34c3d9a0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55ea34876180 'int64_t' sugar
|   |-Typedef 0x55ea34786390 'int64_t'
|   `-TypedefType 0x55ea3475f630 '__int64_t' sugar
|     |-Typedef 0x55ea3475f208 '__int64_t'
|     `-BuiltinType 0x55ea3471d5a0 'long'
|-EnumDecl 0x55ea34c3d9f8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55ea34c3db70 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55ea34c3db50 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55ea34c3db28 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55ea34c3db10 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55ea34c3dae0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55ea34c3dc68 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55ea34c3dc48 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55ea34c3dc20 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55ea34c3dc08 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55ea34c3dbe0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55ea34c3dbc0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55ea34c3dcb8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55ea34c3ddc0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ea34b36b30 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c3dda0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55ea34c3dd80 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55ea34c3de50 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ea34b36b48 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c3de30 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55ea34c3de10 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55ea34c3dee0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ea34b36b60 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c3dec0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55ea34c3dea0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55ea34c3df70 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ea34b36b78 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c3df50 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55ea34c3df30 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55ea34c3e000 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ea34b36b90 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c3dfe0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55ea34c3dfc0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55ea34c3e090 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ea34b36ba8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c3e070 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55ea34c3e050 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55ea34b36940 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ea34b36bc0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34b36920 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55ea34c3e0e0 <col:26> 'int' EnumConstant 0x55ea34c3ddc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55ea34b36a10 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ea34b36bd8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34b369f0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55ea34b369d0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55ea34b36990 <col:27> 'int' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55ea34b369b0 <col:44> 'int' EnumConstant 0x55ea34c3e090 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55ea34b36ae0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55ea34b36bf0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34b36ac0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55ea34b36aa0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55ea34b36a60 <col:27> 'int' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55ea34b36a80 <col:44> 'int' EnumConstant 0x55ea34c3df70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55ea34b36c08 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55ea34b36d10 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55ea34b36d60 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34b36cf0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55ea34b36cd0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55ea34b36d88 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55ea34875bf0 'uninitialized_type'
|   `-CXXRecord 0x55ea34875b58 'uninitialized_type'
|-CXXRecordDecl 0x55ea34b36de0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55ea34b36ec8 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c556a8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ea34c557c8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55ea34c55780 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55ea34c55710 <col:9> '<bound member function type>' ->assign 0x55ea34c4e4d8
|     | `-CXXThisExpr 0x55ea34c55700 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55ea34c55740 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55ea34c557b0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55ea34c55760 <col:19> 'int' 0
|-CXXConstructorDecl 0x55ea34b37118 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55ea34b36f88 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55ea34b37000 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ea34c55150 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ea34c55130 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c557e0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ea34c55930 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55ea34c558b8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55ea34c55848 <col:9> '<bound member function type>' ->assign 0x55ea34c4e4d8
|     | `-CXXThisExpr 0x55ea34c55838 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ea34c55900 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55ea34c558e8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ea34c55878 <col:16> 'long' lvalue ParmVar 0x55ea34b36f88 'sec' 'long'
|     `-ImplicitCastExpr 0x55ea34c55918 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34c55898 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34b37000 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ea34b37378 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55ea34b371e8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55ea34b37260 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ea34c55188 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ea34c55168 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c55948 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ea34c55a80 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55ea34c55a20 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55ea34c559b0 <col:9> '<bound member function type>' ->assign 0x55ea34c4e4d8
|     | `-CXXThisExpr 0x55ea34c559a0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ea34c55a50 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55ea34c559e0 <col:16> 'int' lvalue ParmVar 0x55ea34b371e8 'sec' 'int'
|     `-ImplicitCastExpr 0x55ea34c55a68 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34c55a00 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34b37260 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ea34b375d8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55ea34b37448 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55ea34b374c0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ea34c551c0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ea34c551a0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c55a98 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ea34c55be8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55ea34c55b70 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55ea34c55b00 <col:9> '<bound member function type>' ->assign 0x55ea34c4e4d8
|     | `-CXXThisExpr 0x55ea34c55af0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ea34c55bb8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55ea34c55ba0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ea34c55b30 <col:16> 'unsigned long' lvalue ParmVar 0x55ea34b37448 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55ea34c55bd0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34c55b50 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34b374c0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ea34b37838 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55ea34b376a8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55ea34b37720 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ea34c551f8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ea34c551d8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c55c00 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ea34c55d50 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55ea34c55cd8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55ea34c55c68 <col:9> '<bound member function type>' ->assign 0x55ea34c4e4d8
|     | `-CXXThisExpr 0x55ea34c55c58 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ea34c55d20 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55ea34c55d08 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ea34c55c98 <col:16> 'unsigned int' lvalue ParmVar 0x55ea34b376a8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55ea34c55d38 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34c55cb8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34b37720 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ea34b37998 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55ea34b37908 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55ea34b37b38 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55ea34b37a70 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55ea34b37d68 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55ea34b37c70 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55ea34b37f18 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55ea34b37e58 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c55df0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55ea34c55d68 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55ea34b37e58 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55ea34c55e50 <col:19, line:214:5>
|-CXXConstructorDecl 0x55ea34b38148 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55ea34b38058 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c55e60 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ea34c55f10 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55ea34c55ee8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55ea34c55eb8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55ea34b38058 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55ea34b38338 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55ea34b382b0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55ea34a960e0 'Timestamp'
|   | `-CXXRecord 0x55ea34c3d778 'Timestamp'
|   `-ParenType 0x55ea34b38250 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55ea34b38220 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55ea34c3dac0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55ea34c3d938 'seconds_type'
|         `-TypedefType 0x55ea34875fc0 'int32_t' sugar
|           |-Typedef 0x55ea34786328 'int32_t'
|           `-TypedefType 0x55ea3475f510 '__int32_t' sugar
|             |-Typedef 0x55ea3475f128 '__int32_t'
|             `-BuiltinType 0x55ea3471d580 'int'
|-CXXConversionDecl 0x55ea34b38478 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55ea34b38548 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55ea34c56018 <col:37, line:231:5>
|   `-ReturnStmt 0x55ea34c56008 <line:227:9, col:23>
|     `-BinaryOperator 0x55ea34c55fe8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55ea34c55fb8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55ea34c55f68 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55ea34c50448
|       |   `-MemberExpr 0x55ea34c55f38 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55ea34c513f8
|       |     `-CXXThisExpr 0x55ea34c55f28 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55ea34c55fd0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55ea34c55f98 <col:23> 'int' 0
|-CXXMethodDecl 0x55ea34b38608 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55ea34b386c8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34b38788 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34b38848 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34b38908 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55ea34b38a78 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55ea34b389b8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55ea34b38bc0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55ea34b38b30 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34b38c88 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55ea34b38d28 <col:54> "" ""
|-CXXMethodDecl 0x55ea34b38db8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55ea34b38e58 <col:54> "" ""
|-CXXMethodDecl 0x55ea34b38ee8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55ea34b38f88 <col:54> "" ""
|-CXXMethodDecl 0x55ea34b39088 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55ea34b39158 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55ea34b39288 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55ea34b39380 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55ea34b394b8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55ea34c56230 <col:39, line:271:5>
|   `-ReturnStmt 0x55ea34c56220 <line:267:9, col:61>
|     `-CallExpr 0x55ea34c561c0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55ea34c561a8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ea34c56030 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55ea34c51728 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55ea34c561f0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55ea34c56090 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55ea34c50448
|       |   `-MemberExpr 0x55ea34c56060 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55ea34c513f8
|       |     `-CXXThisExpr 0x55ea34c56050 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55ea34c56208 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55ea34c56130 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55ea34c56100 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55ea34c560c0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55ea34c56118 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55ea34c560e0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3e090 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ea34b39578 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55ea34c563f0 <col:39, line:279:5>
|   `-ReturnStmt 0x55ea34c563e0 <line:275:9, col:61>
|     `-CallExpr 0x55ea34c56380 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55ea34c56368 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ea34c56248 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55ea34c51728 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55ea34c563b0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55ea34c562a8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55ea34c50448
|       |   `-MemberExpr 0x55ea34c56278 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55ea34c513f8
|       |     `-CXXThisExpr 0x55ea34c56268 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55ea34c563c8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55ea34c56348 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55ea34c56318 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55ea34c562d8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55ea34c56330 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55ea34c562f8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3df70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ea34b39638 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55ea34c56588 <col:39, line:287:5>
|   `-ReturnStmt 0x55ea34c56578 <line:283:9, col:53>
|     `-BinaryOperator 0x55ea34c56558 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55ea34c56528 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55ea34c56448 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55ea34c50448
|       |   `-MemberExpr 0x55ea34c56418 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55ea34c513f8
|       |     `-CXXThisExpr 0x55ea34c56408 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55ea34c56540 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55ea34c56508 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55ea34c564e8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55ea34c564b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ea34c56478 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3ddc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ea34c564d0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ea34c56498 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ea34b39728 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55ea34c57c20 <col:40, line:293:5>
|   |-DeclStmt 0x55ea34c566d0 <line:291:9, col:48>
|   | `-VarDecl 0x55ea34c565b0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55ea34c566b0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55ea34c56658 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55ea34c56628 <col:22> '<bound member function type>' ->subsec 0x55ea34b386c8
|   |     |   `-CXXThisExpr 0x55ea34c56618 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55ea34c56698 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55ea34c56678 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36a10 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ea34c57c10 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55ea34c57bf8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55ea34c57bc8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ea34c57bb0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55ea34c57b90 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55ea34c57b60 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55ea34c578f8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55ea34c578e0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55ea34c566e8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55ea34c565b0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55ea34c57b00 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55ea34c57ae8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55ea34c57ab8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55ea34c57910 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55ea34c57880 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55ea34c57868 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55ea34c57818 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ea34c3d6c8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55ea34c577b8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55ea34c56718 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55ea34c56708 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55ea34c57800 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55ea34c577e8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55ea34c56bd8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55ea34c56740 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55ea34c567d0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55ea34c567a0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55ea34c56760 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36a10 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55ea34c567b8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55ea34c56780 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55ea34c565b0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55ea34c57b30 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55ea34c578c8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55ea34c578b8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55ea34b397e8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55ea34c58178 <col:40, line:302:5>
|   |-DeclStmt 0x55ea34c57d70 <line:297:9, col:48>
|   | `-VarDecl 0x55ea34c57c50 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55ea34c57d50 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55ea34c57cf8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55ea34c57cc8 <col:22> '<bound member function type>' ->subsec 0x55ea34b386c8
|   |     |   `-CXXThisExpr 0x55ea34c57cb8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55ea34c57d38 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55ea34c57d18 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36ae0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ea34c58168 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55ea34c58150 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55ea34c58120 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ea34c58108 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55ea34c580e8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55ea34c580b8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55ea34c57fe0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55ea34c57fc8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55ea34c57d88 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55ea34c57c50 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55ea34c58058 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55ea34c58040 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55ea34c58010 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55ea34c57ff8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55ea34c57f68 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55ea34c57f50 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55ea34c57f30 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ea34c3d6c8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55ea34c57ed0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55ea34c57db8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55ea34c57da8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55ea34c57f18 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55ea34c57f00 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55ea34c57e90 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55ea34c57de0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55ea34c57e70 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55ea34c57e40 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55ea34c57e00 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36ae0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55ea34c57e58 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55ea34c57e20 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55ea34c57c50 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55ea34c58088 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55ea34c57fb0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55ea34c57fa0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55ea34b398a8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55ea34c58200 <col:40, line:306:5>
|   `-ReturnStmt 0x55ea34c581f0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55ea34c581c0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55ea34c581a8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34c58198 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55ea34b39a48 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55ea34b39958 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55ea34b39c18 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55ea34b39b20 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55ea34b39d08 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55ea34b39e78 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55ea34b39db8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55ea34c62818 <col:56, line:320:5>
|   `-ReturnStmt 0x55ea34c62808 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55ea34c627f0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55ea34c582f0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ea34c582d8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ea34c58298 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55ea34c58268 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ea34c58228 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ea34b39db8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55ea34c58280 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55ea34c58248 <col:31> 'int' 0
|-CXXMethodDecl 0x55ea34b3a0b8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ea34b39f30 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34b39fa8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c629e8 <col:72, line:326:5>
|   `-ReturnStmt 0x55ea34c629d8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55ea34c629c0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55ea34c62990 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ea34c62978 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ea34c62938 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55ea34c62920 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ea34c62840 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ea34b39f30 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55ea34c628e0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55ea34c628c8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ea34c62860 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ea34c4fba0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55ea34c62908 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55ea34c62880 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34b39fa8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34b3a268 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55ea34b3a178 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55ea34c630b0 <col:56, line:337:5>
|   |-DeclStmt 0x55ea34c62ce8 <line:329:9, col:51>
|   | `-VarDecl 0x55ea34c62a10 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55ea34c62cd0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55ea34c62ca0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55ea34c62c88 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55ea34c62c70 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55ea34c62c40 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55ea34c62c28 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55ea34c62c10 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55ea34c62b00 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55ea34c62ea0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55ea34c62d50 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55ea34c50448
|   | | `-MemberExpr 0x55ea34c62d20 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55ea34c513f8
|   | |   `-DeclRefExpr 0x55ea34c62d00 <col:9> 'Timestamp' lvalue Var 0x55ea34c62a10 't' 'Timestamp'
|   | `-BinaryOperator 0x55ea34c62e80 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55ea34c62e50 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ea34c62d80 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ea34b3a178 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55ea34c62e68 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55ea34c62e30 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55ea34c62e10 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55ea34c62de0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55ea34c62da0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55ea34c62df8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55ea34c62dc0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3e090 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ea34c63098 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55ea34c63068 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55ea34c63050 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55ea34c63030 <col:16> 'Timestamp' lvalue Var 0x55ea34c62a10 't' 'Timestamp'
|-CXXMethodDecl 0x55ea34b3a430 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ea34b3a320 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34b3a398 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c63268 <col:72, line:343:5>
|   `-ReturnStmt 0x55ea34c63258 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55ea34c63240 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55ea34c63210 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ea34c631f8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ea34c631b8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55ea34c631a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ea34c630e8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ea34b3a320 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55ea34c63160 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55ea34c63148 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ea34c63108 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ea34c4fce8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55ea34c63188 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55ea34c63128 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34b3a398 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34b3a580 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55ea34b3a4f0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55ea34c636b0 <col:56, line:354:5>
|   |-DeclStmt 0x55ea34c63458 <line:346:9, col:51>
|   | `-VarDecl 0x55ea34c63290 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55ea34c63440 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55ea34c63410 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55ea34c633f8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55ea34c633e0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55ea34c633b0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55ea34c63398 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55ea34c63380 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55ea34c63350 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55ea34c63610 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55ea34c634c0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55ea34c50448
|   | | `-MemberExpr 0x55ea34c63490 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55ea34c513f8
|   | |   `-DeclRefExpr 0x55ea34c63470 <col:9> 'Timestamp' lvalue Var 0x55ea34c63290 't' 'Timestamp'
|   | `-BinaryOperator 0x55ea34c635f0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55ea34c635c0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ea34c634f0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ea34b3a4f0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55ea34c635d8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55ea34c635a0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55ea34c63580 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55ea34c63550 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55ea34c63510 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55ea34c63568 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55ea34c63530 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3df70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ea34c63698 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55ea34c63668 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55ea34c63650 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55ea34c63630 <col:16> 'Timestamp' lvalue Var 0x55ea34c63290 't' 'Timestamp'
|-CXXMethodDecl 0x55ea34b3a748 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ea34b3a638 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34b3a6b0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c63868 <col:72, line:360:5>
|   `-ReturnStmt 0x55ea34c63858 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55ea34c63840 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55ea34c63810 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ea34c637f8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ea34c637b8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55ea34c637a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ea34c636e8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ea34b3a638 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55ea34c63760 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55ea34c63748 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ea34c63708 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ea34c4fe30 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55ea34c63788 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55ea34c63728 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34b3a6b0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34c4e120 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55ea34b3a808 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55ea34c63cd8 <col:56, line:371:5>
|   |-DeclStmt 0x55ea34c63a58 <line:363:9, col:51>
|   | `-VarDecl 0x55ea34c63890 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55ea34c63a40 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55ea34c63a10 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55ea34c639f8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55ea34c639e0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55ea34c639b0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55ea34c63998 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55ea34c63980 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55ea34c63950 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55ea34c63c38 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55ea34c63ac0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55ea34c50448
|   | | `-MemberExpr 0x55ea34c63a90 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55ea34c513f8
|   | |   `-DeclRefExpr 0x55ea34c63a70 <col:9> 'Timestamp' lvalue Var 0x55ea34c63890 't' 'Timestamp'
|   | `-CallExpr 0x55ea34c63bd8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55ea34c63bc0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55ea34c63af0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55ea34c51728 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55ea34c63c08 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ea34c63b10 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ea34b3a808 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55ea34c63c20 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55ea34c63ba0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55ea34c63b70 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55ea34c63b30 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3ddc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55ea34c63b88 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55ea34c63b50 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ea34c63cc0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55ea34c63c90 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55ea34c63c78 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55ea34c63c58 <col:16> 'Timestamp' lvalue Var 0x55ea34c63890 't' 'Timestamp'
|-CXXMethodDecl 0x55ea34c4e218 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55ea34c63e18 <col:39, line:377:5>
|   `-ReturnStmt 0x55ea34c63e08 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55ea34c63df0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55ea34c63dc0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ea34c63da8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ea34c63d68 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55ea34c63d10 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55ea34c63d50 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55ea34c63d30 <col:29> 'int' 1
|-CXXMethodDecl 0x55ea34c4e2d8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55ea34c63ef8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55ea34c63eb0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55ea34c63e40 <col:9> '<bound member function type>' ->assign 0x55ea34c4e4d8
|     | `-CXXThisExpr 0x55ea34c63e30 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55ea34c63e70 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55ea34c63ee0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55ea34c63e90 <col:19> 'int' 0
|-CXXMethodDecl 0x55ea34c4e4d8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ea34c4e388 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34c4e400 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ea34c55230 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ea34c55210 <col:60> 'int' 0
| `-CompoundStmt 0x55ea34c640f0 <col:63, line:395:5>
|   `-BinaryOperator 0x55ea34c640d0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55ea34c63f50 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55ea34c50448
|     | `-MemberExpr 0x55ea34c63f20 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55ea34c513f8
|     |   `-CXXThisExpr 0x55ea34c63f10 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55ea34c640b0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55ea34c64040 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55ea34c63fe0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55ea34c63fc8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55ea34c63fb0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55ea34c63f80 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ea34c4e388 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55ea34c64028 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55ea34c64008 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55ea34c64098 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55ea34c64080 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55ea34c64060 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c4e400 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34c4e6a8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ea34c4e598 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34c4e610 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c64248 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55ea34c64200 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55ea34c64118 <col:9> '<bound member function type>' ->assign 0x55ea34c4e4d8
|     | `-CXXThisExpr 0x55ea34c64108 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ea34c64230 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55ea34c64148 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ea34c4e598 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55ea34c641c0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55ea34c641a8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ea34c64168 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ea34c4fce8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55ea34c641e8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ea34c64188 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c4e610 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34c4e878 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ea34c4e768 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34c4e7e0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c643a0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55ea34c64358 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55ea34c64270 <col:9> '<bound member function type>' ->assign 0x55ea34c4e4d8
|     | `-CXXThisExpr 0x55ea34c64260 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ea34c64388 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55ea34c642a0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ea34c4e768 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55ea34c64318 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55ea34c64300 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ea34c642c0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ea34c4fe30 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55ea34c64340 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ea34c642e0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c4e7e0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34c4ea48 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ea34c4e938 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34c4e9b0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ea34c55268 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ea34c55248 <col:57> 'int' 0
| `-DeprecatedAttr 0x55ea34c4eaf8 <col:75> "" ""
|-CXXMethodDecl 0x55ea34c4ec88 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ea34c4eb78 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34c4ebf0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34c4ed38 <col:74> "" ""
|-CXXMethodDecl 0x55ea34c4eec8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ea34c4edb8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ea34c4ee30 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34c4ef78 <col:74> "" ""
|-CXXMethodDecl 0x55ea34c4f008 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55ea34c4f0a8 <col:42> "" ""
|-CXXMethodDecl 0x55ea34c4f250 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55ea34c4f130 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55ea34c4f1b0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55ea34c4f320 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ea34c4f3e0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55ea34c4f480 <col:20>
| `-OptimizeNoneAttr 0x55ea34c4f4d8 <col:30>
|-CXXMethodDecl 0x55ea34c4f520 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ea34c4f5e0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55ea34c4f6a0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ea34c4f760 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55ea34c4f820 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ea34c4f8e0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55ea34c4f9a0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55ea34c4fa60 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55ea34c4fba0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ea34c4fb10 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c644e8 <col:58, line:512:5>
|   `-ReturnStmt 0x55ea34c644d8 <line:511:9, col:53>
|     `-BinaryOperator 0x55ea34c644b8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55ea34c64488 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ea34c643b8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c4fb10 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ea34c644a0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ea34c64468 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55ea34c64448 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55ea34c64418 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ea34c643d8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ea34c64430 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ea34c643f8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3e090 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ea34c4fce8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ea34c4fc58 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c64630 <col:58, line:516:5>
|   `-ReturnStmt 0x55ea34c64620 <line:515:9, col:53>
|     `-BinaryOperator 0x55ea34c64600 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55ea34c645d0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ea34c64500 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c4fc58 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ea34c645e8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ea34c645b0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55ea34c64590 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55ea34c64560 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ea34c64520 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ea34c64578 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ea34c64540 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3df70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ea34c4fe30 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ea34c4fda0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c64778 <col:58, line:520:5>
|   `-ReturnStmt 0x55ea34c64768 <line:519:9, col:53>
|     `-BinaryOperator 0x55ea34c64748 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55ea34c64718 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ea34c64648 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c4fda0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ea34c64730 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ea34c646f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55ea34c646d8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55ea34c646a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ea34c64668 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3ddc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ea34c646c0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ea34c64688 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ea34c4ff78 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ea34c4fee8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c648c0 <col:60, line:524:5>
|   `-ReturnStmt 0x55ea34c648b0 <line:523:9, col:55>
|     `-BinaryOperator 0x55ea34c64890 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55ea34c64860 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ea34c64790 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c4fee8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ea34c64878 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ea34c64840 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55ea34c64820 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55ea34c647f0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ea34c647b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ea34c64808 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ea34c647d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3e090 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ea34c500c0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ea34c50030 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c64a08 <col:60, line:528:5>
|   `-ReturnStmt 0x55ea34c649f8 <line:527:9, col:55>
|     `-BinaryOperator 0x55ea34c649d8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55ea34c649a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ea34c648d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c50030 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ea34c649c0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ea34c64988 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55ea34c64968 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55ea34c64938 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ea34c648f8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ea34c64950 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ea34c64918 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3df70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ea34c50208 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ea34c50178 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c64b50 <col:60, line:532:5>
|   `-ReturnStmt 0x55ea34c64b40 <line:531:9, col:55>
|     `-BinaryOperator 0x55ea34c64b20 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55ea34c64af0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ea34c64a20 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c50178 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ea34c64b08 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ea34c64ad0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55ea34c64ab0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55ea34c64a80 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ea34c64a40 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34c3ddc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ea34c64a98 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ea34c64a60 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ea34b36940 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55ea34c502b0 prev 0x55ea34b36de0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ea34c503a8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55ea34c50448 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55ea34c552b8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ea34c55698 <col:11>
| |-CXXConstructorDecl 0x55ea34c55390 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ea34c55478 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55ea34c55de0 <col:11>
| |-CXXConstructorDecl 0x55ea34c55518 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ea34c55628 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55ea34c57a38 <col:11>
| |-CXXDestructorDecl 0x55ea34c56948 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55ea34d22848 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ea34d22958 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55ea34d23220 <col:11>
| |   `-ReturnStmt 0x55ea34d23210 <col:11>
| |     `-UnaryOperator 0x55ea34d231f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55ea34d231e8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55ea34d229c8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55ea34d22ad8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55ea34d7ddb0 <col:11>
|     `-ReturnStmt 0x55ea34d7dda0 <col:11>
|       `-UnaryOperator 0x55ea34d7dd88 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ea34d7dd78 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55ea34c504b0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55ea34c505b0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55ea34c507b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c50590 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55ea34c50570 <col:21> 'int' 0
| |-EnumConstantDecl 0x55ea34c50640 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55ea34c507c8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c50620 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55ea34c50600 <col:23> 'int' 1
| |-EnumConstantDecl 0x55ea34c506d0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55ea34c507e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34c506b0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55ea34c50690 <col:23> 'int' 2
| `-EnumConstantDecl 0x55ea34c50760 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55ea34c507f8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34c50740 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55ea34c50720 <col:27> 'int' 3
|-CXXMethodDecl 0x55ea34c50838 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55ea34c50900 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55ea34c50b08 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55ea34c509b0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55ea34c50a30 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55ea34c55280 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55ea34c50d18 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55ea34c50bc8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55ea34c50c40 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55ea34c50de8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55ea34c50ea8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55ea34c51018 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55ea34c50f58 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55ea34c510e0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ea34c511a0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55ea34c51260 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ea34c51320 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55ea34c513c0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55ea34c513f8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55ea34c51468 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55ea34c64b68 <col:27, line:684:5>
|-CXXMethodDecl 0x55ea34c51528 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55ea34c64b78 <col:27, line:696:5>
|-CXXMethodDecl 0x55ea34c51728 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ea34c515d8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55ea34c51650 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c64d00 <col:66, line:700:5>
|   `-ReturnStmt 0x55ea34c64cf0 <line:699:9, col:31>
|     `-CallExpr 0x55ea34c64c90 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55ea34c64c78 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ea34c64c28 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55ea34adac28 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55ea34c64cc0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55ea34c64be8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ea34c515d8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55ea34c64cd8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ea34c64c08 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c51650 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34c51a98 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ea34c517e8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55ea34c51860 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55ea34c518d8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55ea34c51950 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34c65050 <col:64, line:707:5>
|   |-DeclStmt 0x55ea34c64d90 <line:704:9, col:24>
|   | `-VarDecl 0x55ea34c64d28 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55ea34c64fa0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55ea34c64da8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55ea34c51860 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55ea34c64f88 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55ea34c64f20 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55ea34c64f08 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ea34c64e88 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55ea34adff28 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55ea34c64f58 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55ea34c64e28 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ea34c518d8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55ea34c64f70 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55ea34c64e48 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34c51950 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55ea34c64e68 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55ea34c64d28 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55ea34c65030 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55ea34c64fc0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55ea34c517e8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55ea34c65018 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55ea34c65000 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55ea34c64fe0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55ea34c64d28 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55ea34c51d38 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55ea34c51b68 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55ea34c51be0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55ea34c51c58 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55ea34c51fd8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55ea34c51e00 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55ea34c51e78 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55ea34c51ef0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55ea34c54378 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55ea34c520a0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55ea34c54578 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55ea34c54430 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55ea34c544a8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55ea34c54848 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55ea34c54788 parent 0x55ea3471d488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55ea34c54638 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55ea34c546b0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55ea34c54a68 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55ea34c549a8 parent 0x55ea3471d488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55ea34c54898 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55ea34c54910 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55ea34c54c30 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55ea34c54b78 parent 0x55ea3471d488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55ea34c54ab8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55ea34c54eb8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55ea34c54df8 parent 0x55ea3471d488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55ea34c54ca8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55ea34c54d20 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55ea34c550d8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55ea34c55018 parent 0x55ea3471d488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55ea34c54f08 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55ea34c54f80 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55ea34c567f0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34c568d8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c57748 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55ea34c57700 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55ea34c513f8
| |     `-DeclRefExpr 0x55ea34c576e0 <col:7> 'const Timestamp' lvalue ParmVar 0x55ea34c568d8 '' 'const Timestamp &'
| `-CompoundStmt 0x55ea34c577a8 <col:7>
|-CXXConstructorDecl 0x55ea34c56a58 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34c56b68 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55ea34c513f8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ea34c57a48 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55ea34c579f0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55ea34c513f8
| |     `-CXXStaticCastExpr 0x55ea34c579c0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55ea34c57990 <col:7> 'Timestamp' lvalue ParmVar 0x55ea34c56b68 '' 'Timestamp &&'
| `-CompoundStmt 0x55ea34c57aa8 <col:7>
|-CXXDestructorDecl 0x55ea34c56c18 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55ea34d226a0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34d227a8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55ea34d23298 <col:7>
|   |-CXXMemberCallExpr 0x55ea34d23238 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55ea34d23178 <col:7> '<bound member function type>' .operator= 0x55ea34d22848
|   | | `-MemberExpr 0x55ea34d23088 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55ea34c513f8
|   | |   `-CXXThisExpr 0x55ea34d23078 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55ea34d23148 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55ea34c513f8
|   |   `-DeclRefExpr 0x55ea34d23128 <col:7> 'const Timestamp' lvalue ParmVar 0x55ea34d227a8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55ea34d23288 <col:7>
|     `-UnaryOperator 0x55ea34d23270 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ea34d23260 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55ea34d22b48 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55ea34d22c58 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55ea34d7de28 <col:7>
    |-CXXMemberCallExpr 0x55ea34d7ddc8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55ea34d7dd30 <col:7> '<bound member function type>' .operator= 0x55ea34d229c8
    | | `-MemberExpr 0x55ea34d7dc00 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55ea34c513f8
    | |   `-CXXThisExpr 0x55ea34d7dbf0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55ea34d7dd00 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55ea34c513f8
    |   `-CXXStaticCastExpr 0x55ea34d7dcd0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55ea34d7dca0 <col:7> 'Timestamp' lvalue ParmVar 0x55ea34d22c58 '' 'Timestamp &&'
    `-ReturnStmt 0x55ea34d7de18 <col:7>
      `-UnaryOperator 0x55ea34d7de00 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55ea34d7ddf0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34d828e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55ea34d82ab8 prev 0x55ea34d828e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ea34d82b48 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ea34d82b70 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34d86bf0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55ea34d86ba0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55ea34d83020 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55ea34d82f20 'type'
|     `-TemplateSpecializationType 0x55ea34d82eb0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55ea34d82d90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55ea34d82d70 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55ea34d82d50 <col:24> 'unsigned long' 16
|       `-RecordType 0x55ea34d82e90 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55ea34d82db0 'char_array'
|-TypedefDecl 0x55ea34d86ca8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55ea34d86c70 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55ea34d86c50 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55ea34d86bf0 'type'
|     `-ElaboratedType 0x55ea34d86ba0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55ea34d83020 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55ea34d82f20 'type'
|         `-TemplateSpecializationType 0x55ea34d82eb0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55ea34d82d90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55ea34d82d70 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55ea34d82d50 <col:24> 'unsigned long' 16
|           `-RecordType 0x55ea34d82e90 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55ea34d82db0 'char_array'
|-CXXMethodDecl 0x55ea34d86e28 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55ea34d86d38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55ea34d86f18 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ea34d86ff8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ea34d86ff8
|-CXXMethodDecl 0x55ea34d872c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55ea34d871d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55ea34d87508 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55ea34d87380 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34d873f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ea34d876d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55ea34d875c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34d87640 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ea34d87838 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55ea34d87908 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55ea34d87b58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55ea34d879c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55ea34d87a40 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ea34d87db8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55ea34d87c28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55ea34d87ca0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ea34d87f78 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55ea34d87e88 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ea34d88138 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55ea34d88040 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ea34d881f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34d882a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34d884d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55ea34d88350 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34d883c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ea34d88778 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55ea34d88680 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55ea34d88840 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55ea34d88890 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ea34d888e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34d81438 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55ea34d81648 prev 0x55ea34d81438 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ea34d82850 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55ea34d82800 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55ea34d827e0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55ea34d82690 'type'
|     `-SubstTemplateTypeParmType 0x55ea34d824b0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55ea349c5860 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea349c5808 'T'
|       `-RecordType 0x55ea34d82000 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55ea34d81f18 'sized_array_memory'
|-FieldDecl 0x55ea34d88930 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55ea34d88980 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ea34d889b8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55ea34d816e0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ea34a766b0 'T'
|   `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|     `-CXXRecord 0x55ea34d805b0 'heap_element'
|-TypedefDecl 0x55ea34d88a78 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55ea34d88a40 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55ea34d816e0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|       `-CXXRecord 0x55ea34d805b0 'heap_element'
|-TypedefDecl 0x55ea34d88b08 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55ea34d88ad0 'const TimerSet::heap_element &'
|   `-QualType 0x55ea34d816e1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55ea34d816e0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|         `-CXXRecord 0x55ea34d805b0 'heap_element'
|-TypedefDecl 0x55ea34d88b98 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55ea34d88b60 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55ea34d816e0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|       `-CXXRecord 0x55ea34d805b0 'heap_element'
|-TypedefDecl 0x55ea34d88c58 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55ea34d88c20 'const TimerSet::heap_element *'
|   `-QualType 0x55ea34d816e1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55ea34d816e0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|         `-CXXRecord 0x55ea34d805b0 'heap_element'
|-TypedefDecl 0x55ea34d898b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55ea34d89860 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55ea34d89840 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55ea34d89778 'type'
|     `-LValueReferenceType 0x55ea34d89740 'const TimerSet::heap_element &'
|       `-QualType 0x55ea34d894e1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55ea34d894e0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55ea349cf250 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ea349cf1f8 'T'
|           `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|             `-CXXRecord 0x55ea34d805b0 'heap_element'
|-TypedefDecl 0x55ea34d89918 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55ea34d88ad0 'const TimerSet::heap_element &'
|   `-QualType 0x55ea34d816e1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55ea34d816e0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|         `-CXXRecord 0x55ea34d805b0 'heap_element'
|-TypedefDecl 0x55ea34d89970 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34d899d8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55ea34d88b60 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55ea34d816e0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|       `-CXXRecord 0x55ea34d805b0 'heap_element'
|-TypedefDecl 0x55ea34d89a40 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55ea34d88c20 'const TimerSet::heap_element *'
|   `-QualType 0x55ea34d816e1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55ea34d816e0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34d80640 'TimerSet::heap_element'
|         `-CXXRecord 0x55ea34d805b0 'heap_element'
|-EnumDecl 0x55ea34d89a98 <line:134:5> col:5
| `-EnumConstantDecl 0x55ea34d89b90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ea34d89b70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ea34a778c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ea34a778a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ea34a77880 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ea34d89c18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ea34d89ea8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34d89cd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34d89d70 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55ea34d8a168 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55ea34d8a050 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55ea34d8a428 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55ea34d8a310 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55ea34d8a770 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55ea34d8a650 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55ea34d8aa80 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55ea34d8a960 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55ea34d8ad70 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34d8abb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34d8ac30 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55ea34d8aec8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55ea34d8afa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d8b000 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d8b048 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55ea34d8b0f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d8b150 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d8b218 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55ea34d8b2c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d8b320 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d8b368 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55ea34d8b418 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d8b470 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d8b4b8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55ea34d8b568 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d8b5c0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d8b608 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55ea34d8b6b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d8b710 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d8b738 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34d8b7e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34d8b898 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55ea34d8ba58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34d8b948 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34d8b9c0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55ea34d8bba8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34d8bb18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d8bd58 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55ea34d8bc60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34d8be10 <col:20>
| `-OptimizeNoneAttr 0x55ea34d8be68 <col:30>
|-CXXMethodDecl 0x55ea34d8bf88 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55ea34d8be90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34d8c040 <col:20>
| `-OptimizeNoneAttr 0x55ea34d8c098 <col:30>
|-CXXMethodDecl 0x55ea34d8c150 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34d8c0c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d8c298 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34d8c208 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d8c3c8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55ea34d8c4f8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55ea34d8c5c8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55ea34d8c698 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55ea34d8c7d8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34d8c748 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d8c920 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34d8c890 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d8ca68 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ea34d8c9d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34d8cb20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ea34d8cc20 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ea34d8cb90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34d8ccd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ea34d8cd98 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55ea34d8ce98 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55ea34d8d048 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34d8cf58 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55ea34d8d808 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ea34d8d100 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55ea34d8d768 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55ea34d8d668 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55ea34d8d8e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34d8da38 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34d8d9a8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55ea34d8df40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ea34d8e188 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34d8e000 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55ea34d8e078 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55ea34d8e348 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55ea34d8e258 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55ea34d8e598 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55ea34d8e410 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55ea34d8e488 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55ea34d8e658 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34d8e8b8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55ea34d8e7c0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55ea34d8e988 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ea34d8e988

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34d8feb0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55ea34d90088 prev 0x55ea34d8feb0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ea34d90118 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ea34d90140 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34d91d10 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55ea34d91cc0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55ea34d905f0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55ea34d904f0 'type'
|     `-TemplateSpecializationType 0x55ea34d90480 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55ea34d90360 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55ea34d90340 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55ea34d90320 <col:24> 'unsigned long' 8
|       `-RecordType 0x55ea34d90460 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55ea34d90380 'char_array'
|-TypedefDecl 0x55ea34d91dc8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55ea34d91d90 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55ea34d91d70 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55ea34d91d10 'type'
|     `-ElaboratedType 0x55ea34d91cc0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55ea34d905f0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55ea34d904f0 'type'
|         `-TemplateSpecializationType 0x55ea34d90480 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55ea34d90360 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55ea34d90340 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55ea34d90320 <col:24> 'unsigned long' 8
|           `-RecordType 0x55ea34d90460 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55ea34d90380 'char_array'
|-CXXMethodDecl 0x55ea34d91f48 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55ea34d91e58 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55ea34d92038 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ea34d92118 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ea34d92118
|-CXXMethodDecl 0x55ea34d923e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55ea34d922f0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55ea34d92628 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55ea34d924a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34d92518 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ea34d927f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55ea34d926e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34d92760 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ea34d92958 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55ea34d92a28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55ea34d92c78 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55ea34d92ae8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55ea34d92b60 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ea34d92ed8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55ea34d92d48 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55ea34d92dc0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ea34d93098 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55ea34d92fa8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ea34d93258 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55ea34d93160 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ea34d93310 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34d933c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34d935f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55ea34d93470 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34d934e8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ea34d93898 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55ea34d937a0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55ea34d93960 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55ea34d939b0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ea34d93a00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.6 = type { %struct.char_array.7*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.6 = type { %struct.char_array.7*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34d8ead0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55ea34d8ecd8 prev 0x55ea34d8ead0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ea34d8fe20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55ea34d8fdd0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55ea34d8fdb0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55ea34d8fc60 'type'
|     `-SubstTemplateTypeParmType 0x55ea34d8fa80 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55ea349c5860 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea349c5808 'T'
|       `-RecordType 0x55ea34d8f5d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55ea34d8f4e8 'sized_array_memory'
|-FieldDecl 0x55ea34d93a50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55ea34d93aa0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ea34d93ad8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55ea34d8ed70 'Timer *' sugar
|   |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ea34a766b0 'T'
|   `-PointerType 0x55ea34d486b0 'Timer *'
|     `-RecordType 0x55ea34d47820 'Timer'
|       `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-TypedefDecl 0x55ea34d93b98 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55ea34d93b60 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55ea34d8ed70 'Timer *' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-PointerType 0x55ea34d486b0 'Timer *'
|       `-RecordType 0x55ea34d47820 'Timer'
|         `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-TypedefDecl 0x55ea34d93c58 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55ea34d93c20 'Timer *const &'
|   `-QualType 0x55ea34d8ed71 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55ea34d8ed70 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-PointerType 0x55ea34d486b0 'Timer *'
|         `-RecordType 0x55ea34d47820 'Timer'
|           `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-TypedefDecl 0x55ea34d93d18 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55ea34d93ce0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55ea34d8ed70 'Timer *' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-PointerType 0x55ea34d486b0 'Timer *'
|       `-RecordType 0x55ea34d47820 'Timer'
|         `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-TypedefDecl 0x55ea34d93dd8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55ea34d93da0 'Timer *const *'
|   `-QualType 0x55ea34d8ed71 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55ea34d8ed70 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-PointerType 0x55ea34d486b0 'Timer *'
|         `-RecordType 0x55ea34d47820 'Timer'
|           `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-TypedefDecl 0x55ea34d949b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55ea34d94960 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55ea34d94940 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55ea34d948d0 'type'
|     `-SubstTemplateTypeParmType 0x55ea34d94690 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ea349cf980 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea349cf930 'T'
|       `-PointerType 0x55ea34d486b0 'Timer *'
|         `-RecordType 0x55ea34d47820 'Timer'
|           `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-TypedefDecl 0x55ea34d94a18 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55ea34d93c20 'Timer *const &'
|   `-QualType 0x55ea34d8ed71 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55ea34d8ed70 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-PointerType 0x55ea34d486b0 'Timer *'
|         `-RecordType 0x55ea34d47820 'Timer'
|           `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-TypedefDecl 0x55ea34d94a70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34d94ad8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55ea34d93ce0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55ea34d8ed70 'Timer *' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-PointerType 0x55ea34d486b0 'Timer *'
|       `-RecordType 0x55ea34d47820 'Timer'
|         `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-TypedefDecl 0x55ea34d94b40 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55ea34d93da0 'Timer *const *'
|   `-QualType 0x55ea34d8ed71 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55ea34d8ed70 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-PointerType 0x55ea34d486b0 'Timer *'
|         `-RecordType 0x55ea34d47820 'Timer'
|           `-CXXRecord 0x55ea34d6c6d8 'Timer'
|-EnumDecl 0x55ea34d94b98 <line:134:5> col:5
| `-EnumConstantDecl 0x55ea34d94c90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ea34d94c70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ea34a778c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ea34a778a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ea34a77880 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ea34d94d18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ea34d94fa8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34d94dd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34d94e70 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55ea34d95268 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55ea34d95150 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55ea34d95528 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55ea34d95410 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55ea34d95870 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55ea34d95750 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55ea34d95b80 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55ea34d95a60 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55ea34d95e70 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34d95cb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34d95d30 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55ea34d97848 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55ea34d97928 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d97980 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d979c8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55ea34d97a78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d97ad0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d97b98 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55ea34d97c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d97ca0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d97ce8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55ea34d97d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d97df0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d97e38 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55ea34d97ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d97f40 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d97f88 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55ea34d98038 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34d98090 <col:30> Inherited
|-CXXMethodDecl 0x55ea34d980b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34d98168 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34d98218 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ea34d983d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34d982c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34d98340 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55ea34d98528 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34d98498 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d986d8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55ea34d985e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34d98790 <col:20>
| `-OptimizeNoneAttr 0x55ea34d987e8 <col:30>
|-CXXMethodDecl 0x55ea34d98908 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55ea34d98810 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34d989c0 <col:20>
| `-OptimizeNoneAttr 0x55ea34d98a18 <col:30>
|-CXXMethodDecl 0x55ea34d98ad0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34d98a40 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d98c18 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34d98b88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d98d48 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55ea34d98e78 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55ea34d98f48 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55ea34d99018 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55ea34d99158 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34d990c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d992a0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34d99210 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34d993e8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55ea34d99358 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34d994a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ea34d995a0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ea34d99510 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34d99658 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ea34d99718 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55ea34d99818 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55ea34d99998 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34d998d8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55ea34d9a158 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ea34d99a50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55ea34d9a0b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55ea34d99fb8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55ea34d9a238 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34d9a388 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34d9a2f8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55ea34d9a440 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ea34d9a688 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34d9a500 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55ea34d9a578 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55ea34d9a848 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55ea34d9a758 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55ea34d9aa98 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55ea34d9a910 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55ea34d9a988 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55ea34d9ab58 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34d9adb8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55ea34d9acc0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55ea34d9ae88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ea34d9ae88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.6 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.6 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d62a40 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea34d62b58 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55ea34d62be8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55ea34d62c70 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55ea34d62d60 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55ea34d62e60 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55ea34d62f20 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55ea34d62fe0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55ea34d63108 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55ea34d63108
| `-ParmVarDecl 0x55ea34d63218 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55ea34d9bc38 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55ea34d9bc38
  `-ParmVarDecl 0x55ea34d9bd48 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d7f730 prev 0x55ea34d7b8b8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55ea34d7f828 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55ea34d7f8b8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55ea34d7f940 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55ea34d7fa38 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55ea34d9c0b0 <col:43, col:67>
|   `-ReturnStmt 0x55ea34d9c0a0 <col:45, col:52>
|     `-CXXConstructExpr 0x55ea34d9c070 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55ea34d9c040 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55ea34d81220
|         `-CXXThisExpr 0x55ea34d9c030 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55ea34d7faf8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55ea34d7fd00 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55ea34d7fba8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55ea34d7fc20 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55ea34d7fdf8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55ea34d7fec0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55ea34d9c130 <col:39, col:67>
|   `-ReturnStmt 0x55ea34d9c120 <col:41, col:48>
|     `-ImplicitCastExpr 0x55ea34d9c108 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ea34d9c0d8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55ea34d81308
|         `-CXXThisExpr 0x55ea34d9c0c8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55ea34d7ff88 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55ea34d9c1b0 <col:35, col:59>
|   `-ReturnStmt 0x55ea34d9c1a0 <col:37, col:44>
|     `-ImplicitCastExpr 0x55ea34d9c188 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ea34d9c158 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55ea34d81370
|         `-CXXThisExpr 0x55ea34d9c148 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55ea34d800d0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55ea34d80040 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55ea34d80218 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55ea34d80188 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55ea34d80418 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55ea34d802d0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55ea34d80348 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55ea34d804e8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55ea34d80588 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55ea34d805b0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ea34d806c8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55ea34d80768 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55ea34d807c8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55ea34d808f8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55ea34d80828 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55ea34d80768 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55ea34d9c288 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55ea34d9c230 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55ea34d9c200 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55ea34d6dd18
|   |       `-ImplicitCastExpr 0x55ea34d9c250 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55ea34d9c1e8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55ea34d9c1c8 <col:17> 'Timer *' lvalue ParmVar 0x55ea34d80828 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55ea34d807c8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55ea34d9c320 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ea34d9c2e0 <col:41> 'Timer *' lvalue ParmVar 0x55ea34d80828 't_' 'Timer *'
|   `-CompoundStmt 0x55ea34d9c370 <col:45, line:44:2>
|-CXXRecordDecl 0x55ea34d809c0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ea34d80ad8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55ea34d80d28 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55ea34d80ba8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55ea34d80c20 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55ea34d9c4a0 <col:71, line:49:2>
|     `-ReturnStmt 0x55ea34d9c490 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55ea34d9c458 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55ea34d9c440 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55ea34d9c420 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55ea34c71ce8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55ea34d9c3a0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55ea34d80768
|         | `-DeclRefExpr 0x55ea34d9c380 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55ea34d80ba8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55ea34d9c3f0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55ea34d80768
|           `-DeclRefExpr 0x55ea34d9c3d0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55ea34d80c20 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55ea34d80df0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ea34d80f08 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55ea34d81128 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55ea34d80fa8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55ea34d81020 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55ea34d9c6a8 <col:63, line:54:2>
|     `-BinaryOperator 0x55ea34d9c688 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55ea34d9c538 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55ea34d6fd28
|       | `-ImplicitCastExpr 0x55ea34d9c520 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55ea34d9c4f0 <col:6, col:9> 'Timer *' lvalue ->t 0x55ea34d807c8
|       |     `-ImplicitCastExpr 0x55ea34d9c4d8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55ea34d9c4b8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55ea34d81020 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55ea34d9c670 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55ea34d9c650 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55ea34d9c5f8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55ea34d9c5d8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55ea34d9c5a8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55ea34d9c568 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55ea34d81020 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55ea34d9c5c0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55ea34d9c588 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55ea34d80fa8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55ea34d9c638 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55ea34d9c618 <col:39> 'int' 1
|-FieldDecl 0x55ea34d81220 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55ea34d81290 <col:44, col:53> aligned
|   `-ConstantExpr 0x55ea34d81270 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55ea34d811f0 <col:52> 'int' 8
|-FieldDecl 0x55ea34d81308 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55ea34d81370 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55ea34d813d8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55ea34d8ea70 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55ea34d9af70 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55ea34d9afd0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55ea34d9b030 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55ea34d9b090 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34d9b180 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55ea34d9b0f0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55ea34d9b248 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55ea34d9cb00 <col:29, line:81:5>
|   `-IfStmt 0x55ea34d9cad8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55ea34d9c790 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55ea34d9c730 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55ea34d9c700 <col:6, col:18> '<bound member function type>' .size 0x55ea34d8b738
|     |     `-ImplicitCastExpr 0x55ea34d9c778 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55ea34d9c6d0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55ea34d8ea70
|     |         `-CXXThisExpr 0x55ea34d9c6c0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55ea34d9c980 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55ea34d9c968 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55ea34d9c948 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55ea34d226a0 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55ea34d9c7b8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55ea34d81220
|     | | `-CXXThisExpr 0x55ea34d9c7a8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55ea34d9c930 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55ea34d9c900 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55ea34d80768
|     |     `-CXXMemberCallExpr 0x55ea34d9c8d8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55ea34d9c8a8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55ea34d8c7d8
|     |       | `-MemberExpr 0x55ea34d9c7f8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55ea34d8ea70
|     |       |   `-CXXThisExpr 0x55ea34d9c7e8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55ea34d9c888 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55ea34d9cac0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55ea34d9ca88 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55ea34d9ca70 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55ea34d9ca50 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55ea34d22b48 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55ea34d9c9c8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55ea34d81220
|         | `-CXXThisExpr 0x55ea34d9c9b8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55ea34d9ca38 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ea34d9ca08 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55ea34d9b388 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55ea34d9b2f8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55ea34d9b450 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55ea34d9b510 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55ea34d9b5d0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55ea34d9b6c0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55ea34d9b728 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55ea34d9b728
| `-ParmVarDecl 0x55ea34d9b838 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55ea34d9b8d8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55ea34d9b8d8
| `-ParmVarDecl 0x55ea34d9b9e8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55ea34d9ba88 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55ea34d9ba88
| `-ParmVarDecl 0x55ea34d9bb98 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55ea34d9bdb8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55ea34d9bdb8
| `-ParmVarDecl 0x55ea34d9bec8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55ea34d9bf50 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55ea34d9bf50

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.2, %class.Vector.5, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.2, %class.Vector.5, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34dc67f8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55ea34dc6a08 prev 0x55ea34dc67f8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ea34dc7ae0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55ea34dc7a90 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55ea34dc7a70 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55ea34dc7920 'type'
|     `-SubstTemplateTypeParmType 0x55ea34d8fa80 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55ea349c5860 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea349c5808 'T'
|       `-RecordType 0x55ea34d8f5d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55ea34d8f4e8 'sized_array_memory'
|-FieldDecl 0x55ea34dc7be0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55ea34dc7c30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ea34dc7c68 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55ea34dc6aa0 'pollfd' sugar
|   |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ea34a766b0 'T'
|   `-RecordType 0x55ea34db9020 'pollfd'
|     `-CXXRecord 0x55ea34db8f90 'pollfd'
|-TypedefDecl 0x55ea34dc7d28 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55ea34dc7cf0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55ea34dc6aa0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34db9020 'pollfd'
|       `-CXXRecord 0x55ea34db8f90 'pollfd'
|-TypedefDecl 0x55ea34dc7de8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55ea34dc7db0 'const pollfd &'
|   `-QualType 0x55ea34dc6aa1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55ea34dc6aa0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34db9020 'pollfd'
|         `-CXXRecord 0x55ea34db8f90 'pollfd'
|-TypedefDecl 0x55ea34dc7e78 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55ea34dc7e40 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55ea34dc6aa0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34db9020 'pollfd'
|       `-CXXRecord 0x55ea34db8f90 'pollfd'
|-TypedefDecl 0x55ea34dc7f38 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55ea34dc7f00 'const pollfd *'
|   `-QualType 0x55ea34dc6aa1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55ea34dc6aa0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34db9020 'pollfd'
|         `-CXXRecord 0x55ea34db8f90 'pollfd'
|-TypedefDecl 0x55ea34dc8b10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55ea34dc8ac0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55ea34dc8aa0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55ea34dc8a30 'type'
|     `-SubstTemplateTypeParmType 0x55ea34dc87f0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ea349cf980 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea349cf930 'T'
|       `-RecordType 0x55ea34db9020 'pollfd'
|         `-CXXRecord 0x55ea34db8f90 'pollfd'
|-TypedefDecl 0x55ea34dc8b78 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55ea34dc7db0 'const pollfd &'
|   `-QualType 0x55ea34dc6aa1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55ea34dc6aa0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34db9020 'pollfd'
|         `-CXXRecord 0x55ea34db8f90 'pollfd'
|-TypedefDecl 0x55ea34dc8bd0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34dc8c38 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55ea34dc7e40 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55ea34dc6aa0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34db9020 'pollfd'
|       `-CXXRecord 0x55ea34db8f90 'pollfd'
|-TypedefDecl 0x55ea34dc8ca0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55ea34dc7f00 'const pollfd *'
|   `-QualType 0x55ea34dc6aa1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55ea34dc6aa0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34db9020 'pollfd'
|         `-CXXRecord 0x55ea34db8f90 'pollfd'
|-EnumDecl 0x55ea34dc8cf8 <line:134:5> col:5
| `-EnumConstantDecl 0x55ea34dc8df0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ea34dc8dd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ea34a778c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ea34a778a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ea34a77880 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ea34dc8e78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ea34dc9108 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34dc8f30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34dc8fd0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55ea34dc93c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55ea34dc92b0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55ea34dc9688 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55ea34dc9570 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55ea34dc99d0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55ea34dc98b0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55ea34dc9ce0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55ea34dc9bc0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55ea34dc9fd0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34dc9e18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34dc9e90 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55ea34dca128 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55ea34dca208 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dca260 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dca2a8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55ea34dca358 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dca3b0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dca478 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55ea34dca528 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dca580 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dca5c8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55ea34dca678 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dca6d0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dca718 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55ea34dca7c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dca820 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dca868 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55ea34dca918 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dca970 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dca998 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34dcaa48 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34dcaaf8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ea34dcacb8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34dcaba8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34dcac20 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55ea34dcae08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34dcad78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dcafb8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55ea34dcaec0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34dcb070 <col:20>
| `-OptimizeNoneAttr 0x55ea34dcb0c8 <col:30>
|-CXXMethodDecl 0x55ea34dcb1e8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55ea34dcb0f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34dcb2a0 <col:20>
| `-OptimizeNoneAttr 0x55ea34dcb2f8 <col:30>
|-CXXMethodDecl 0x55ea34dcb3b0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34dcb320 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dcb4f8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34dcb468 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dcb628 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55ea34dcb758 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55ea34dcb828 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55ea34dcb8f8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55ea34dcba38 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34dcb9a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dcbb80 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34dcbaf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dcbcc8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ea34dcbc38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34dcbd80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ea34dcbe80 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ea34dcbdf0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34dcbf38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ea34dcbff8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55ea34dcc0f8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55ea34dcc2a8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34dcc1b8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55ea34dcca68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ea34dcc360 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55ea34dcc9c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55ea34dcc8c8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55ea34dccb48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34dccc98 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34dccc08 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55ea34dccd50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ea34dccf98 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34dcce10 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55ea34dcce88 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55ea34dcd158 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55ea34dcd068 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55ea34dcd3d8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55ea34dcd250 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55ea34dcd2c8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55ea34dcd498 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34dcd6f8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55ea34dcd600 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55ea34dcd7c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ea34dcd7c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.6 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.6 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34dcecb0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55ea34dcee88 prev 0x55ea34dcecb0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ea34dcef18 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ea34dcef40 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34dd0b10 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55ea34dd0ac0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55ea34dcf3f0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55ea34dcf2f0 'type'
|     `-TemplateSpecializationType 0x55ea34dcf280 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55ea34dcf160 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55ea34dcf140 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55ea34dcf120 <col:24> 'unsigned long' 24
|       `-RecordType 0x55ea34dcf260 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55ea34dcf180 'char_array'
|-TypedefDecl 0x55ea34dd0bc8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55ea34dd0b90 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55ea34dd0b70 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55ea34dd0b10 'type'
|     `-ElaboratedType 0x55ea34dd0ac0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55ea34dcf3f0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55ea34dcf2f0 'type'
|         `-TemplateSpecializationType 0x55ea34dcf280 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55ea34dcf160 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55ea34dcf140 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55ea34dcf120 <col:24> 'unsigned long' 24
|           `-RecordType 0x55ea34dcf260 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55ea34dcf180 'char_array'
|-CXXMethodDecl 0x55ea34dd0d48 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55ea34dd0c58 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55ea34dd0e38 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ea34dd0f18 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ea34dd0f18
|-CXXMethodDecl 0x55ea34dd11e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55ea34dd10f0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55ea34dd1428 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55ea34dd12a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34dd1318 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ea34dd15f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55ea34dd14e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34dd1560 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ea34dd1758 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55ea34dd1828 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55ea34dd1a78 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55ea34dd18e8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55ea34dd1960 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ea34dd1cd8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55ea34dd1b48 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55ea34dd1bc0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ea34dd1e98 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55ea34dd1da8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ea34dd2058 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55ea34dd1f60 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ea34dd2110 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34dd21c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34dd23f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55ea34dd2270 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ea34dd22e8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ea34dd2698 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55ea34dd25a0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55ea34dd2760 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55ea34dd27b0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ea34dd2800 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.10 = type { %struct.char_array.11*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.10 = type { %struct.char_array.11*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34dcd910 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55ea34dcdb18 prev 0x55ea34dcd910 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ea34dcec20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55ea34dcebd0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55ea34dcebb0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55ea34dcea60 'type'
|     `-SubstTemplateTypeParmType 0x55ea34dce880 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55ea349c5860 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea349c5808 'T'
|       `-RecordType 0x55ea34ab6f40 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55ea34ab6e58 'sized_array_memory'
|-FieldDecl 0x55ea34dd2850 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55ea34dd28a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ea34dd28d8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55ea34dcdbb0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ea34a766b0 'T'
|   `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-TypedefDecl 0x55ea34dd2998 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55ea34dd2960 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55ea34dcdbb0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-TypedefDecl 0x55ea34dd2a58 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55ea34dd2a20 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55ea34dcdbb1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55ea34dcdbb0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-TypedefDecl 0x55ea34dd2ae8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55ea34dd2ab0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55ea34dcdbb0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-TypedefDecl 0x55ea34dd2ba8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55ea34dd2b70 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55ea34dcdbb1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55ea34dcdbb0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-TypedefDecl 0x55ea34dd3800 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55ea34dd37b0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55ea34dd3790 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55ea34dd36c8 'type'
|     `-LValueReferenceType 0x55ea34dd3690 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55ea34dd3431 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55ea34dd3430 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55ea349cf250 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ea349cf1f8 'T'
|           `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-TypedefDecl 0x55ea34dd3868 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55ea34dd2a20 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55ea34dcdbb1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55ea34dcdbb0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-TypedefDecl 0x55ea34dd38c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-TypedefDecl 0x55ea34dd3928 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55ea34dd2ab0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55ea34dcdbb0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ea34a766b0 'T'
|     `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-TypedefDecl 0x55ea34dd3990 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55ea34dd2b70 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55ea34dcdbb1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55ea34dcdbb0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55ea34a76700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ea34a766b0 'T'
|       `-RecordType 0x55ea34dc6360 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55ea34dc62d0 'SelectorInfo'
|-EnumDecl 0x55ea34dd39e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55ea34dd3ae0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ea34dd3ac0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ea34a778c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ea34a778a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ea34a77880 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ea34dd3b68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ea34dd3df8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34dd3c20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34dd3cc0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55ea34dd40b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55ea34dd3fa0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55ea34dd4378 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55ea34dd4260 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55ea34dd46c0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55ea34dd45a0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55ea34dd49d0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55ea34dd48b0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55ea34dd4cc0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34dd4b08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34dd4b80 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55ea34dd4e18 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55ea34dd4ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dd4f50 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dd4f98 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55ea34dd5048 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dd50a0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dd5168 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55ea34dd5218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dd5290 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dd52d8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55ea34dd5388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dd53e0 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dd5428 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55ea34dd54d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dd5530 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dd5578 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55ea34dd5628 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ea34dd5680 <col:30> Inherited
|-CXXMethodDecl 0x55ea34dd56a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34dd5758 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ea34dd5808 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ea34dd59c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34dd58b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ea34dd5930 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55ea34dd5b18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34dd5a88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dd5cc8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55ea34dd5bd0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34dd5d80 <col:20>
| `-OptimizeNoneAttr 0x55ea34dd5dd8 <col:30>
|-CXXMethodDecl 0x55ea34dd5ef8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55ea34dd5e00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ea34dd5fb0 <col:20>
| `-OptimizeNoneAttr 0x55ea34dd6008 <col:30>
|-CXXMethodDecl 0x55ea34dd60c0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34dd6030 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dd6208 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34dd6178 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dd6338 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55ea34dd6468 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55ea34dd6538 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55ea34dd6608 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55ea34dd6748 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ea34dd66b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dd6890 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ea34dd6800 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ea34dd69d8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ea34dd6948 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34dd6a90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ea34dd6b90 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ea34dd6b00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ea34dd6c48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ea34dd6d08 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55ea34dd6e08 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55ea34dd6fb8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34dd6ec8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55ea34dd7778 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ea34dd7070 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55ea34dd76d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55ea34dd75d8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55ea34dd7858 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ea34dd79a8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55ea34dd7918 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55ea34dd7a60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ea34dd7ca8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55ea34dd7b20 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55ea34dd7b98 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55ea34dd7e68 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55ea34dd7d78 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55ea34dd80b8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55ea34dd7f30 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55ea34dd7fa8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55ea34dd8178 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ea34dd83d8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55ea34dd82e0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55ea34dd84a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ea34dd84a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.9 = type { %class.vector_memory.10 }
  NonVirtualBaseLLVMType:%class.Vector.9 = type { %class.vector_memory.10 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34dc54b0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea34dc55c8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55ea34dc5658 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55ea34dc56e0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55ea34dc57d0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55ea34dc57d0
|-CXXMethodDecl 0x55ea34dc58d0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55ea34dc5b70 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55ea34dc5988 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55ea34dc5a00 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55ea34dc5a80 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55ea34dc5de0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55ea34dc5c40 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55ea34dc5cb8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55ea34dc5d38 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55ea34dc5f38 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55ea34dc5ea8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55ea34dc6000 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55ea34dd9b58 <col:34, line:50:5>
|   |-BinaryOperator 0x55ea34dd9528 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55ea34dd94e8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55ea34dc6788
|   | | `-CXXThisExpr 0x55ea34dd94d8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55ea34dd9518 <col:23> 'bool' true
|   `-CallExpr 0x55ea34dd9b30 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55ea34dd9b18 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55ea34dd9a98 <col:2> 'void (long)' lvalue Function 0x55ea34dd9998 'ignore_result' 'void (long)' (FunctionTemplate 0x55ea3493a9f8 'ignore_result')
|     `-CallExpr 0x55ea34dd9740 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55ea34dd9728 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ea34dd96a8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55ea34da3198 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55ea34dd9778 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55ea34dd9650 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55ea34dd9638 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55ea34dd95e8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55ea34dc6728
|       |   |   `-CXXThisExpr 0x55ea34dd95d8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55ea34dd9618 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55ea34dd97a8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55ea34dd9790 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55ea34dd9670 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55ea34dd97c0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55ea34dd9688 <col:41> 'int' 1
|-CXXMethodDecl 0x55ea34dc6140 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55ea34dc60b0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55ea34dc6208 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55ea34dc62a8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55ea34dc62d0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ea34dc63e8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55ea34dc6488 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55ea34dc64e8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55ea34dc6550 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55ea34dc6600 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55ea34dc6488 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55ea34dd9bb8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55ea34dd9b78 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55ea34dc64e8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55ea34dd9c38 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55ea34dd9bf8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55ea34dc6550 'pollfd' 'int'
|   | `-UnaryOperator 0x55ea34dd9c98 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55ea34dd9c78 <col:35> 'int' 1
|   `-CompoundStmt 0x55ea34dd9d10 <line:64:2, line:65:2>
|-FieldDecl 0x55ea34dc6728 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55ea34dc6788 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55ea34dcd8b0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55ea34dd8590 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55ea34dd87c8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55ea34dd85f8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55ea34dd8670 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55ea34dd86e8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55ea34dd89b0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55ea34dd8898 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55ea34dd8918 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55ea34dd8bf8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55ea34dd8a78 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55ea34dd8af8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55ea34dd8e08 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55ea34dd8cb8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55ea34dd8d30 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55ea34dd8f58 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55ea34dd8ec8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55ea34dd9020 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55ea34dd90e0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55ea34dd91a8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55ea34dd91a8
| `-ParmVarDecl 0x55ea34dd92b8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55ea34dd9358 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55ea34dd9358
  `-ParmVarDecl 0x55ea34dd9468 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.8, %class.Vector.9 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.8, %class.Vector.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d619a8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea34d61ac8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55ea34d61b58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55ea34d61be0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55ea34d61cd0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55ea34d61dd0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55ea34d61e90 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55ea34d61f50 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55ea34d62038 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55ea34d62158 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55ea34d62158
| `-ParmVarDecl 0x55ea34d62268 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55ea34de2158 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55ea34de2158
  `-ParmVarDecl 0x55ea34de2268 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d6a448 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34d6a568 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55ea34d6a608 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55ea34d6a668 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55ea34de1758 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55ea34de1758
| `-ParmVarDecl 0x55ea34de1868 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55ea34de1908 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55ea34de1908
| `-ParmVarDecl 0x55ea34de1a18 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55ea34de1a88 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55ea34de1a88
|-CXXMethodDecl 0x55ea34de2308 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55ea34de2308
| `-ParmVarDecl 0x55ea34de2418 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55ea34de2488 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55ea34de2488
| `-ParmVarDecl 0x55ea34de2598 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55ea34de9ca8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55ea34de9d80 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d638a0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34d639b8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55ea34d63a48 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55ea34d63ad0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55ea34d63b90 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55ea3471d580 'int'
|-CXXMethodDecl 0x55ea34d63c58 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55ea34d63cf8 <col:45> always_inline
|-CXXMethodDecl 0x55ea34d63e28 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55ea34d63d60 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55ea34d63ed0 <col:49> always_inline
|-CXXConstructorDecl 0x55ea34d63fc8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55ea34d63fc8
| `-ParmVarDecl 0x55ea34d640d8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55ea34d64178 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55ea34d64178
| `-ParmVarDecl 0x55ea34d64288 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55ea34de1b70 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55ea34de1b70
|-CXXMethodDecl 0x55ea34de2638 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55ea34de2638
| `-ParmVarDecl 0x55ea34de2748 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55ea34de27b8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55ea34de27b8
  `-ParmVarDecl 0x55ea34de28c8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34dda180 prev 0x55ea34dc5420 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55ea34dda278 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55ea34dda308 <col:22, col:28> col:22 public
|-EnumDecl 0x55ea34dda330 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55ea34dda448 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55ea34dda428 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55ea34dda410 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ea34dda3f0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55ea34dda4f0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55ea34dda4d0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55ea34dda4b8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55ea34dda498 <col:53> 'int' 1000
|-CXXMethodDecl 0x55ea34dda590 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55ea34dda650 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55ea34dda738 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55ea34de2988 <col:34, col:52>
|   `-ReturnStmt 0x55ea34de2978 <col:36, col:43>
|     `-MemberExpr 0x55ea34de2948 <col:43> 'TimerSet' lvalue ->_timers 0x55ea34ddc408
|       `-CXXThisExpr 0x55ea34de2938 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55ea34dda828 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55ea34de29f0 <col:46, col:64>
|   `-ReturnStmt 0x55ea34de29e0 <col:48, col:55>
|     `-MemberExpr 0x55ea34de29b0 <col:55> 'const TimerSet' lvalue ->_timers 0x55ea34ddc408
|       `-CXXThisExpr 0x55ea34de29a0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55ea34dda918 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55ea34de2a58 <col:36, col:55>
|   `-ReturnStmt 0x55ea34de2a48 <col:38, col:45>
|     `-MemberExpr 0x55ea34de2a18 <col:45> 'SelectSet' lvalue ->_selects 0x55ea34ddc468
|       `-CXXThisExpr 0x55ea34de2a08 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55ea34ddaa08 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55ea34de2ac0 <col:48, col:67>
|   `-ReturnStmt 0x55ea34de2ab0 <col:50, col:57>
|     `-MemberExpr 0x55ea34de2a80 <col:57> 'const SelectSet' lvalue ->_selects 0x55ea34ddc468
|       `-CXXThisExpr 0x55ea34de2a70 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55ea34ddaac8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55ea34ddabb8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55ea34ddad28 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55ea34ddac68 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55ea34ddadf0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55ea34ddb238 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55ea34ddaea0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55ea34ddb120 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55ea34ddb308 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55ea34ddb3c8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55ea34ddb488 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55ea34ddb5c8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55ea34ddb538 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55ea34ddb690 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55ea34ddb750 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55ea34ddb810 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55ea34ddb8d0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55ea34ddba10 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55ea34ddb980 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55ea34ddbad8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55ea34ddbb98 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55ea34ddbc38 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55ea34ddbd00 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbd50 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbda0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbdf0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbe40 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbe90 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbee0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbf30 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbf80 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ea34ddbfd0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55ea34ddc020 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55ea34ddc118 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55ea34ddc088 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55ea34ddc268 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55ea34ddc1d8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55ea34ddc310 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55ea34ddc348 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55ea34ddc3a8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55ea34ddc408 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55ea34ddc468 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55ea34ddc4e8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55ea34ddc558 <col:40, col:50> aligned
|   `-ConstantExpr 0x55ea34ddc538 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55ea34ddc4b8 <col:48> 'int' 64
|-FieldDecl 0x55ea34ddc5c8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55ea34ddc628 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55ea34ddc720 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55ea34ddc830 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55ea34ddc890 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55ea34ddc910 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55ea34ddc980 <col:36, col:46> aligned
|   `-ConstantExpr 0x55ea34ddc960 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55ea34ddc8e0 <col:44> 'int' 64
|-FieldDecl 0x55ea34ddc9f8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55ea34ddca58 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55ea34ddcaa8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55ea34ddcae8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55ea34ddcb50 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55ea34ddcba0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55ea34ddcd48 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55ea34ddcbd8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55ea34ddcc58 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55ea34ddce48 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55ea34ddce48
|-CXXMethodDecl 0x55ea34ddcf50 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55ea34ddd018 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55ea34de2bb8 <col:34, line:217:5>
|   `-ReturnStmt 0x55ea34de2ba8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55ea34de2b90 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ea34de2b60 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55ea34d66400
|         `-ImplicitCastExpr 0x55ea34de2b48 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55ea34de2b18 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55ea34d66398
|             `-MemberExpr 0x55ea34de2ae8 <col:16> 'const TaskLink' lvalue ->_task_link 0x55ea34ddc348
|               `-CXXThisExpr 0x55ea34de2ad8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55ea34ddd0d8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55ea34ddd198 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55ea34de32e0 <col:39, line:226:5>
|   |-DeclStmt 0x55ea34de2e08 <line:223:9, col:68>
|   | `-VarDecl 0x55ea34de2be0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55ea34de2dc0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55ea34de2d90 <col:24, col:38> '<bound member function type>' .compare_swap 0x55ea349481e0
|   |     | `-MemberExpr 0x55ea34de2c58 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55ea34ddc5c8
|   |     |   `-CXXThisExpr 0x55ea34de2c48 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55ea34de2d48 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55ea34de2d30 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55ea34de2d08 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55ea34de2ce8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55ea34de2df0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55ea34de2d70 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55ea34de2e50 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55ea34de2e20 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55ea34de2be0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55ea34de32c0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55ea34de3290 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55ea34de2f68 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55ea34de2f38 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55ea34de2f20 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55ea34de2e78 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55ea34de2be0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55ea34de2ef8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55ea34de2ee0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55ea34de2eb8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55ea34de2e98 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55ea34de2fc8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55ea34de2fa8 <col:60> 'int' 0
|       `-CallExpr 0x55ea34de31f0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55ea34de31d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55ea34de31b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ea347bc960 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55ea34de3230 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55ea34de30b8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55ea34de3248 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55ea34de30e8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55ea34de3260 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55ea34de3128 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55ea34de3278 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55ea34de31a0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55ea34de3188 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55ea34de3148 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55ea34de0b30 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55ea34de0aa0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55ea34de0bf8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55ea34de0cb8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55ea34de0d78 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55ea34de0e38 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55ea34de0ef8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55ea34de0ff0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55ea34de1050 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55ea34de10e0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55ea34de14a8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55ea34de14a8
| `-ParmVarDecl 0x55ea34de15b8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55ea34de1c78 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55ea34de1c78
  `-ParmVarDecl 0x55ea34de1d88 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d66710 prev 0x55ea34d476e0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55ea34d66848 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55ea34d668d8 <col:33, col:39> col:33 public
|-EnumDecl 0x55ea34d66900 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55ea34d66a40 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55ea34d66a20 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55ea34d66a00 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55ea34d669c0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55ea34d669e0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55ea34d66b10 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55ea34d66af0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55ea34d66ad0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55ea34d66a90 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55ea34d66ab0 <col:47> 'int' 31
|-EnumDecl 0x55ea34d66b60 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55ea34d66ca0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55ea34d66dc0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34d66c80 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55ea34d66c60 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55ea34d66c20 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55ea34d66c40 <col:29> 'int' 15
| `-EnumConstantDecl 0x55ea34d66d70 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55ea34d66dd8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34d66d50 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55ea34d66d30 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55ea34d66cf0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55ea34d66d10 <col:54> 'int' 10
|-CXXConstructorDecl 0x55ea34d66fa8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55ea34d66e00 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55ea34d66e80 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55ea34d67138 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55ea34d67070 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55ea34d67230 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55ea34d67230
|-CXXMethodDecl 0x55ea34d673b8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55ea34d6b5a8 <col:42, line:100:5>
|   `-ReturnStmt 0x55ea34d6b598 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55ea34d6b580 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55ea34d6b550 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55ea34d6a2d0
|         `-CXXThisExpr 0x55ea34d6b540 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ea34d67480 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55ea34d6b628 <col:36, line:105:5>
|   `-ReturnStmt 0x55ea34d6b618 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55ea34d6b600 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55ea34d6b5d0 <col:16> 'void *const' lvalue ->_thunk 0x55ea34d6a338
|         `-CXXThisExpr 0x55ea34d6b5c0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ea34d67540 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55ea34d6b6a8 <col:37, line:110:5>
|   `-ReturnStmt 0x55ea34d6b698 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55ea34d6b680 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55ea34d6b650 <col:16> 'Element *const' lvalue ->_owner 0x55ea34d6a3f8
|         `-CXXThisExpr 0x55ea34d6b640 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ea34d686b0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55ea34d68778 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55ea34d68838 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55ea34d688f8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55ea34d6b790 <col:35, line:137:5>
|   `-ReturnStmt 0x55ea34d6b780 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55ea34d6b748 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55ea34d6b718 <col:16, col:24> '<bound member function type>' ->router 0x55ea34d58ba0
|         `-ImplicitCastExpr 0x55ea34d6b768 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55ea34d6b700 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55ea34d6b6d0 <col:16> 'Element *const' lvalue ->_owner 0x55ea34d6a3f8
|               `-CXXThisExpr 0x55ea34d6b6c0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ea34d689b8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55ea34d68bb8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55ea34d68a68 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55ea34d68ae0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55ea34d68dc8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55ea34d68c78 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55ea34d68cf0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55ea34d68e98 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55ea34d6b8a0 <col:35, line:181:5>
|   `-ReturnStmt 0x55ea34d6b890 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55ea34d6b878 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55ea34d6b860 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55ea34d6b830 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55ea34d69f08
|           `-MemberExpr 0x55ea34d6b7e8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ea34d6a028
|             `-MemberExpr 0x55ea34d6b7b8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55ea34d6a258
|               `-CXXThisExpr 0x55ea34d6b7a8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ea34d68f58 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55ea34d6b9b8 <col:30, line:192:5>
|   `-BinaryOperator 0x55ea34d6b998 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55ea34d6b940 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55ea34d69f08
|     | `-MemberExpr 0x55ea34d6b8f8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ea34d6a028
|     |   `-MemberExpr 0x55ea34d6b8c8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ea34d6a258
|     |     `-CXXThisExpr 0x55ea34d6b8b8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55ea34d6b980 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55ea34d6b970 <col:32> 'bool' false
|-CXXMethodDecl 0x55ea34d69018 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55ea34d6bd08 <col:30, line:206:5>
|   |-BinaryOperator 0x55ea34d6bab0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55ea34d6ba58 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55ea34d69f08
|   | | `-MemberExpr 0x55ea34d6ba10 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ea34d6a028
|   | |   `-MemberExpr 0x55ea34d6b9e0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ea34d6a258
|   | |     `-CXXThisExpr 0x55ea34d6b9d0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d6ba98 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55ea34d6ba88 <col:32> 'bool' true
|   |-CallExpr 0x55ea34d6bb50 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55ea34d6bb38 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ea34d6bb18 <col:9> 'void ()' lvalue Function 0x55ea34d61560 'click_fence' 'void ()'
|   `-IfStmt 0x55ea34d6bcf0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55ea34d6bc30 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55ea34d6bc00 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55ea34d6bbb0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55ea34d6a668
|     | |   `-MemberExpr 0x55ea34d6bb80 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55ea34d6a6e0
|     | |     `-CXXThisExpr 0x55ea34d6bb70 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55ea34d6bc18 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55ea34d6bbe0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55ea34d6bcb0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55ea34d6bc60 <col:13> '<bound member function type>' ->complete_schedule 0x55ea34d6b0e0
|       | `-CXXThisExpr 0x55ea34d6bc50 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55ea34d6bcd8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55ea34d6bc90 <col:31> 'int' 0
|-CXXMethodDecl 0x55ea34d690d8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55ea34d6be30 <col:35, line:240:5>
|   `-BinaryOperator 0x55ea34d6be10 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55ea34d6bdb8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55ea34d69f08
|     | `-MemberExpr 0x55ea34d6bd70 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ea34d6a028
|     |   `-MemberExpr 0x55ea34d6bd40 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ea34d6a258
|     |     `-CXXThisExpr 0x55ea34d6bd30 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55ea34d6bdf8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55ea34d6bde8 <col:32> 'bool' true
|-CXXMethodDecl 0x55ea34d69198 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55ea34d6c048 <col:37, line:253:5>
|   |-BinaryOperator 0x55ea34d6bf28 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55ea34d6bed0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55ea34d69f08
|   | | `-MemberExpr 0x55ea34d6be88 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ea34d6a028
|   | |   `-MemberExpr 0x55ea34d6be58 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ea34d6a258
|   | |     `-CXXThisExpr 0x55ea34d6be48 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d6bf10 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55ea34d6bf00 <col:32> 'bool' false
|   `-BinaryOperator 0x55ea34d6c028 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55ea34d6bfd0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55ea34d69f68
|     | `-MemberExpr 0x55ea34d6bf88 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ea34d6a028
|     |   `-MemberExpr 0x55ea34d6bf58 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ea34d6a258
|     |     `-CXXThisExpr 0x55ea34d6bf48 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55ea34d6c010 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55ea34d6c000 <col:41> 'bool' true
|-CXXMethodDecl 0x55ea34d69258 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55ea34d6c1c8 <col:37, line:264:5>
|   |-BinaryOperator 0x55ea34d6c148 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55ea34d6c0f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55ea34d69f68
|   | | `-MemberExpr 0x55ea34d6c0a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ea34d6a028
|   | |   `-MemberExpr 0x55ea34d6c078 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ea34d6a258
|   | |     `-CXXThisExpr 0x55ea34d6c068 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d6c130 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55ea34d6c120 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55ea34d6c1a8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55ea34d6c178 <col:9> '<bound member function type>' ->reschedule 0x55ea34d69018
|       `-CXXThisExpr 0x55ea34d6c168 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55ea34d693a0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55ea34d69310 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55ea34d69470 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55ea34d695b8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55ea34d69528 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55ea34d69708 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55ea34d69678 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55ea34d697d0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55ea34d69890 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55ea34d69930 <col:53> "" ""
|-CXXMethodDecl 0x55ea34d699c8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55ea34d69a68 <col:47> "" ""
|-AccessSpecDecl 0x55ea34d69ad8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55ea34d69b18 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55ea34d69b80 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55ea34d69bd0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ea34d69ce8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55ea34d69d78 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55ea34d69ea8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55ea34d69f08 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55ea34d69f68 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55ea34de8338 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55ea34de8410 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ea34de8410
| | |-CXXConstructorDecl 0x55ea34de86c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55ea34de86c8
| | | `-ParmVarDecl 0x55ea34de87d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55ea34de8878 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55ea34de8878
| |   `-ParmVarDecl 0x55ea34de8988 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55ea34d6a028 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55ea34d6a088 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55ea34d6a028 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55ea34d69ea8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55ea34d6a0e0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55ea34d6a028 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55ea34d69f08 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55ea34d6a138 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55ea34d6a028 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55ea34d69f68 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55ea34d6a190 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55ea34de8248 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ea34de9c48 <col:11>
| |-CXXConstructorDecl 0x55ea34de8518 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55ea34de8518
| | `-ParmVarDecl 0x55ea34de8628 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55ea34de9ac0 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55ea34de9ac0
|   `-ParmVarDecl 0x55ea34de9bd8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55ea34d6a258 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55ea34d6a2d0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55ea34d6a338 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55ea34d6a398 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55ea34d6a3f8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55ea34d6a448 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ea34d6a568 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55ea34d6a608 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55ea34d6a668 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55ea34de1758 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55ea34de1758
| | `-ParmVarDecl 0x55ea34de1868 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55ea34de1908 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55ea34de1908
| | `-ParmVarDecl 0x55ea34de1a18 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55ea34de1a88 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55ea34de1a88
| |-CXXMethodDecl 0x55ea34de2308 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55ea34de2308
| | `-ParmVarDecl 0x55ea34de2418 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55ea34de2488 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55ea34de2488
| | `-ParmVarDecl 0x55ea34de2598 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55ea34de9ca8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55ea34de9d80 <col:11>
|-FieldDecl 0x55ea34d6a6e0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55ea34d6a828 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55ea34d6a768 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55ea34d6a9d8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55ea34d6a8e8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55ea34d6aaa0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55ea34d6ab60 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55ea34d6ac20 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55ea34d6c2d8 <col:41, line:355:5>
|   `-ReturnStmt 0x55ea34d6c2c8 <line:354:9, col:38>
|     `-BinaryOperator 0x55ea34d6c2a8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55ea34d6c278 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55ea34d6c228 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55ea34d6a668
|       |   `-MemberExpr 0x55ea34d6c1f8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55ea34d6a6e0
|       |     `-CXXThisExpr 0x55ea34d6c1e8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55ea34d6c290 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55ea34d6c258 <col:38> 'int' 0
|-CXXMethodDecl 0x55ea34d6ace0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55ea34d6ae20 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55ea34d6ad90 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55ea34d6af98 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55ea34d6aed8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55ea34d6b0e0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55ea34d6b050 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55ea34d6b1a8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55ea34d6b370 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55ea34d6b258 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55ea34d6b2d8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55ea34d6b470 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55ea34d6b500 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d6fdd8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55ea34d6ff08 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55ea34d7ba28 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34d6c6d8 prev 0x55ea34d47790 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ea34d6c7d0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55ea34d6c860 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55ea34d6c8c0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55ea34d6c968 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55ea34d6ca88 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55ea34d6cc28 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55ea34d6cb68 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55ea34d6ce78 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55ea34d6cce8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55ea34d6cd68 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55ea34d6cfd0 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55ea34d6cf40 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55ea34d6d158 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55ea34d6d090 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55ea34d6d308 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55ea34d6d248 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55ea34d6d400 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55ea34d7bc00 <col:21, line:58:5>
|   `-IfStmt 0x55ea34d7bbe8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55ea34d7bb50 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55ea34d7bb20 <col:6> '<bound member function type>' ->scheduled 0x55ea34d6dc58
|     |   `-ImplicitCastExpr 0x55ea34d7bb70 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55ea34d7bb10 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55ea34d7bbc8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55ea34d7bb98 <col:6> '<bound member function type>' ->unschedule 0x55ea34d6f280
|         `-CXXThisExpr 0x55ea34d7bb88 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55ea34d6d500 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55ea34d7bda0 <col:26, line:65:5>
|   |-BinaryOperator 0x55ea34d7bcc0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55ea34d7bc58 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55ea34d6ff08
|   | | `-MemberExpr 0x55ea34d7bc28 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55ea34d6ffc8
|   | |   `-CXXThisExpr 0x55ea34d7bc18 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d7bca8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ea34d7bc88 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55ea34d70428 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55ea34d7bd80 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55ea34d7bcf0 <col:2> 'void *' lvalue ->_thunk 0x55ea34d70048
|     | `-CXXThisExpr 0x55ea34d7bce0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55ea34d7bd58 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55ea34d7bd20 <col:20> 'int' 1
|-CXXMethodDecl 0x55ea34d6d640 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55ea34d6d5b0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55ea34d7bf00 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55ea34d7bdf0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55ea34d7bdc0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55ea34d6d5b0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55ea34d7bee0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55ea34d7beb0 <col:2> '<bound member function type>' ->assign 0x55ea34d6d500
|       `-CXXThisExpr 0x55ea34d7bea0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55ea34d6d810 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55ea34d6d6f8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55ea34d6d778 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55ea34d7c080 <col:58, line:79:5>
|   |-BinaryOperator 0x55ea34d7bfc8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55ea34d7bf60 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55ea34d6ff08
|   | | `-MemberExpr 0x55ea34d7bf30 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55ea34d6ffc8
|   | |   `-CXXThisExpr 0x55ea34d7bf20 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d7bfb0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ea34d7bf90 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55ea34d6d6f8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55ea34d7c060 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55ea34d7bff8 <col:2> 'void *' lvalue ->_thunk 0x55ea34d70048
|     | `-CXXThisExpr 0x55ea34d7bfe8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55ea34d7c048 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55ea34d7c028 <col:11> 'void *' lvalue ParmVar 0x55ea34d6d778 'user_data' 'void *'
|-CXXMethodDecl 0x55ea34d6d960 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55ea34d6d8d0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55ea34d7c218 <col:35, line:87:5>
|   |-BinaryOperator 0x55ea34d7c148 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55ea34d7c0e0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55ea34d6ff08
|   | | `-MemberExpr 0x55ea34d7c0b0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55ea34d6ffc8
|   | |   `-CXXThisExpr 0x55ea34d7c0a0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d7c130 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ea34d7c110 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55ea34d70600 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55ea34d7c1f8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55ea34d7c178 <col:2> 'void *' lvalue ->_thunk 0x55ea34d70048
|     | `-CXXThisExpr 0x55ea34d7c168 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55ea34d7c1e0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55ea34d7c1c8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55ea34d7c1a8 <col:11> 'Element *' lvalue ParmVar 0x55ea34d6d8d0 'element' 'Element *'
|-CXXMethodDecl 0x55ea34d6daa8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55ea34d6da18 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55ea34d7c3b0 <col:29, line:94:5>
|   |-BinaryOperator 0x55ea34d7c2e0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55ea34d7c278 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55ea34d6ff08
|   | | `-MemberExpr 0x55ea34d7c248 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55ea34d6ffc8
|   | |   `-CXXThisExpr 0x55ea34d7c238 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55ea34d7c2c8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ea34d7c2a8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55ea34d7b808 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55ea34d7c390 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55ea34d7c310 <col:2> 'void *' lvalue ->_thunk 0x55ea34d70048
|     | `-CXXThisExpr 0x55ea34d7c300 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55ea34d7c378 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55ea34d7c360 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55ea34d7c340 <col:11> 'Task *' lvalue ParmVar 0x55ea34d6da18 'task' 'Task *'
|-CXXMethodDecl 0x55ea34d6db98 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55ea34d7c490 <col:37, line:100:5>
|   `-ReturnStmt 0x55ea34d7c480 <line:99:2, col:19>
|     `-BinaryOperator 0x55ea34d7c460 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55ea34d7c430 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55ea34d7c3e0 <col:9> 'Element *const' lvalue ->_owner 0x55ea34d700a8
|       |   `-CXXThisExpr 0x55ea34d7c3d0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55ea34d7c448 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55ea34d7c410 <col:19> 'int' 0
|-CXXMethodDecl 0x55ea34d6dc58 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55ea34d7c550 <col:35, line:105:5>
|   `-ReturnStmt 0x55ea34d7c540 <line:104:2, col:23>
|     `-BinaryOperator 0x55ea34d7c520 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55ea34d7c508 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55ea34d7c4b8 <col:9> 'const int' lvalue ->_schedpos1 0x55ea34d6fd28
|       |   `-CXXThisExpr 0x55ea34d7c4a8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55ea34d7c4e8 <col:23> 'int' 0
|-CXXMethodDecl 0x55ea34d6dd18 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55ea34d7c5b8 <col:51, line:118:5>
|   `-ReturnStmt 0x55ea34d7c5a8 <line:117:2, col:9>
|     `-MemberExpr 0x55ea34d7c578 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|       `-CXXThisExpr 0x55ea34d7c568 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ea34d6ddd8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55ea34d7cb10 <col:37, line:136:5>
|   `-IfStmt 0x55ea34d7cae8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55ea34d7c678 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55ea34d7c660 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55ea34d7c640 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55ea34d7c610 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55ea34b38478
|     |       `-MemberExpr 0x55ea34d7c5e0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|     |         `-CXXThisExpr 0x55ea34d7c5d0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55ea34d7ca58 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55ea34d7ca40 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55ea34d7ca10 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55ea34d7c9f8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55ea34d7c9c0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55ea34d7c9a8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55ea34d7c988 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ea34c74270 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55ea34d7c928 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55ea34d7c910 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55ea34d7c838 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55ea34d7c820 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55ea34d7c800 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ea34c73f28 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55ea34d7c7a0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55ea34d7c6a0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|     |         |     |   `-CXXThisExpr 0x55ea34d7c690 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55ea34d7c7e8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55ea34d7c7d0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55ea34d7c780 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55ea34d7c768 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55ea34d7c708 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55ea34ac7fe0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55ea34d7c970 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55ea34d7c958 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55ea34d7c8f0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55ea34d7c8d8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55ea34d7c8a8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55ea34ac8cb0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55ea34d7cad8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55ea34d7caa8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55ea34d7ca78 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|           `-CXXThisExpr 0x55ea34d7ca68 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ea34d6de98 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55ea34d7cbf8 <col:35, line:141:5>
|   `-ReturnStmt 0x55ea34d7cbe8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55ea34d7cbb0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55ea34d7cb80 <col:9, col:17> '<bound member function type>' ->router 0x55ea34d58ba0
|         `-ImplicitCastExpr 0x55ea34d7cbd0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55ea34d7cb68 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55ea34d7cb38 <col:9> 'Element *const' lvalue ->_owner 0x55ea34d700a8
|               `-CXXThisExpr 0x55ea34d7cb28 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ea34d6df58 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55ea34d7cc78 <col:37, line:146:5>
|   `-ReturnStmt 0x55ea34d7cc68 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55ea34d7cc50 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55ea34d7cc20 <col:9> 'Element *const' lvalue ->_owner 0x55ea34d700a8
|         `-CXXThisExpr 0x55ea34d7cc10 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ea34d6e018 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55ea34d7ccf8 <col:41, line:151:5>
|   `-ReturnStmt 0x55ea34d7cce8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55ea34d7ccd0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55ea34d7cca0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55ea34d70108
|         `-CXXThisExpr 0x55ea34d7cc90 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ea34d6e0e0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55ea34d6e2a0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55ea34d6e190 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55ea34d6e208 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ea34d7ba18 <col:50> 'bool' false
|-CXXMethodDecl 0x55ea34d6e428 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55ea34d6e360 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55ea34d6e570 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55ea34d6e4e0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55ea34d6e6b8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55ea34d6e628 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55ea34d6e800 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55ea34d6e770 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55ea34d6e948 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55ea34d6e8b8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55ea34d6ea10 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55ea34d7ce60 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55ea34d7ce48 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55ea34d7cdf0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55ea34d7cd20 <col:2> '<bound member function type>' ->schedule_at_steady 0x55ea34d6e570
|       | `-CXXThisExpr 0x55ea34d7cd10 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ea34d7ce30 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ea34d7ce18 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55ea34d7cdd0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55ea34d7cdb8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55ea34d7cd88 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55ea34ac8cb0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55ea34d6eb50 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55ea34d6eac0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55ea34d6ec98 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ea34d6ec08 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34d7cfe8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55ea34d7cfd0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55ea34d7cf78 <col:2, col:40> 'void'
|       |-MemberExpr 0x55ea34d7ce88 <col:2> '<bound member function type>' ->schedule_after 0x55ea34d6eb50
|       | `-CXXThisExpr 0x55ea34d7ce78 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ea34d7cfb8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ea34d7cfa0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55ea34d7cf38 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55ea34d7cf08 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ea34d7cec8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34d6ec08 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55ea34d7cf20 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55ea34d7cee8 <col:38> 'int' 0
|-CXXMethodDecl 0x55ea34d6ede0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ea34d6ed50 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34d7d258 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55ea34d7d240 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55ea34d7d1e8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55ea34d7d010 <col:2> '<bound member function type>' ->schedule_after 0x55ea34d6eb50
|       | `-CXXThisExpr 0x55ea34d7d000 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ea34d7d228 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ea34d7d210 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55ea34d7d190 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55ea34d7d178 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55ea34d7d0e8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55ea34b3a268 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55ea34d7d1d0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55ea34d7d1b8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55ea34d7d0c8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34d6ed50 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34d6ef28 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55ea34d6ee98 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55ea34d7d438 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55ea34d7d420 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55ea34d7d3c8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55ea34d7d280 <col:2> '<bound member function type>' ->schedule_at_steady 0x55ea34d6e570
|       | `-CXXThisExpr 0x55ea34d7d270 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ea34d7d408 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ea34d7d3f0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55ea34d7d390 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55ea34d7d378 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55ea34d7d358 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ea34c73f28 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55ea34d7d328 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55ea34d7d310 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55ea34d7d2c0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|             |     `-CXXThisExpr 0x55ea34d7d2b0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55ea34d7d2f0 <col:33> 'const Timestamp' lvalue ParmVar 0x55ea34d6ee98 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55ea34d6f070 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ea34d6efe0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34d7d710 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55ea34d7d6f8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55ea34d7d6a0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55ea34d7d460 <col:2> '<bound member function type>' ->schedule_at_steady 0x55ea34d6e570
|       | `-CXXThisExpr 0x55ea34d7d450 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ea34d7d6e0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ea34d7d6c8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55ea34d7d660 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55ea34d7d598 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55ea34d7d580 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55ea34d7d510 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55ea34d7d4e0 <col:31, col:41> '<bound member function type>' .sec 0x55ea34aca7a8
|             | |     `-ImplicitCastExpr 0x55ea34d7d530 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55ea34d7d4b0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|             | |         `-CXXThisExpr 0x55ea34d7d4a0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55ea34d7d568 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55ea34d7d548 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34d6efe0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55ea34d7d628 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55ea34d7d5f8 <col:60, col:70> '<bound member function type>' .subsec 0x55ea34acaea0
|                 `-ImplicitCastExpr 0x55ea34d7d648 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55ea34d7d5c8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|                     `-CXXThisExpr 0x55ea34d7d5b8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55ea34d6f1b8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ea34d6f128 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ea34d7da48 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55ea34d7da30 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55ea34d7d9d8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55ea34d7d738 <col:2> '<bound member function type>' ->schedule_at_steady 0x55ea34d6e570
|       | `-CXXThisExpr 0x55ea34d7d728 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ea34d7da18 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ea34d7da00 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55ea34d7d9a0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55ea34d7d988 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55ea34d7d968 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ea34c73f28 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55ea34d7d908 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55ea34d7d8f0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55ea34d7d778 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|             |     `-CXXThisExpr 0x55ea34d7d768 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55ea34d7d950 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55ea34d7d938 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55ea34d7d898 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55ea34d7d880 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55ea34d7d850 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55ea34b3a268 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55ea34d7d8d8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55ea34d7d8c0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55ea34d7d830 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ea34d6f128 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ea34d6f280 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55ea34d6f340 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55ea34d7df10 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55ea34d7daa0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55ea34d7da70 <col:2> '<bound member function type>' ->unschedule 0x55ea34d6f280
|   |   `-CXXThisExpr 0x55ea34d7da60 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55ea34d7def8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55ea34d7dec0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55ea34d7dea8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ea34d7db58 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55ea34d22b48 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55ea34d7dad0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55ea34d6fd88
|       | `-CXXThisExpr 0x55ea34d7dac0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ea34d7db40 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55ea34d7db10 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55ea34d6f400 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55ea34d7e268 <col:42, line:310:5>
|   |-IfStmt 0x55ea34d7e0b0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55ea34d7dfe0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55ea34d7dfc8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55ea34d7df68 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55ea34c65a50 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55ea34d7e0a0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55ea34d7e088 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55ea34d7e058 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55ea34d7e040 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55ea34d7e010 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55ea34d7e258 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55ea34d7e240 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55ea34d7e210 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ea34d7e1f8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55ea34d7e1b8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55ea34d7e1a0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55ea34d7e170 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55ea34b3a580 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55ea34d7e1e0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55ea34d7e150 <col:30> 'int' 500
|-CXXMethodDecl 0x55ea34d6f540 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ea34d6f4b0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34d6f5e8 <col:69> "" ""
|-CXXMethodDecl 0x55ea34d6f6f8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ea34d6f668 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34d6f7a0 <col:70> "" ""
|-CXXMethodDecl 0x55ea34d6f8b0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ea34d6f820 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34d6f958 <col:71> "" ""
|-CXXMethodDecl 0x55ea34d6fa68 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ea34d6f9d8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ea34d6fb10 <col:72> "" ""
|-EnumDecl 0x55ea34d6fb80 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55ea34d6fc80 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55ea34d6fcd0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ea34d6fc60 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55ea34d6fc40 <col:25> 'int' 1
|-AccessSpecDecl 0x55ea34d6fce8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55ea34d6fd28 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55ea34d6fd88 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55ea34d6fdd8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55ea34d6ff08 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55ea34d7ba28 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55ea34d6ffc8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55ea34d70048 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55ea34d700a8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55ea34d70108 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55ea34d70258 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55ea34d70168 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55ea34d70428 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55ea34d70310 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55ea34d70390 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55ea34d70600 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55ea34d704e8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55ea34d70568 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55ea34d7b808 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55ea34d7b6f0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55ea34d7b770 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55ea34d7b9d8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34d82db0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55ea34e71b08 <line:167:18>
|-CXXRecordDecl 0x55ea34e71bc8 prev 0x55ea34d82db0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55ea34e71cd8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.4 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.4 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34ccf030 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ea34ccf148 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55ea34ccf1d8 <col:16, col:22> col:16 public
|-EnumDecl 0x55ea34ccf200 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55ea34ccf300 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55ea34ccf550 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34ccf2e0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55ea34ccf2c0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55ea34ccf390 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55ea34ccf568 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34ccf370 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55ea34ccf350 <col:24> 'int' 22
| |-EnumConstantDecl 0x55ea34ccf420 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55ea34ccf580 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34ccf400 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55ea34ccf3e0 <col:24> 'int' 34
| |-EnumConstantDecl 0x55ea34ccf4b0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55ea34ccf598 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ea34ccf490 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55ea34ccf470 <col:25> 'int' 95
| `-EnumConstantDecl 0x55ea34ccf500 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55ea34cd0f10 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ea34cd1348 <col:7>
|-CXXConstructorDecl 0x55ea34cd1018 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55ea34cd1018
| `-ParmVarDecl 0x55ea34cd1128 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55ea34cd11c8 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34cd12d8 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x55ea34e785d0 <col:7>
`-CXXDestructorDecl 0x55ea34cd3438 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ea34ccf5c8 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55ea34ccf728 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55ea34ccf7b8 <col:32, col:38> col:32 public
|-TypedefDecl 0x55ea34ccf7f0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55ea34875ee0 'uint32_t' sugar
|   |-Typedef 0x55ea347864c8 'uint32_t'
|   `-TypedefType 0x55ea3475f5a0 '__uint32_t' sugar
|     |-Typedef 0x55ea3475f198 '__uint32_t'
|     `-BuiltinType 0x55ea3471d620 'unsigned int'
|-CXXConstructorDecl 0x55ea34ccf938 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55ea34ccf860 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55ea34cd0e18 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55ea34cd1358 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55ea34cd06d0 'base' 'int'
| | `-ImplicitCastExpr 0x55ea34cd0eb8 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55ea34cd0e78 <col:16> 'int' lvalue ParmVar 0x55ea34ccf860 'b' 'int'
| `-CompoundStmt 0x55ea34cd13c8 <col:19, line:1046:5>
|-CXXMethodDecl 0x55ea34ccfe30 <line:1048:5, line:1050:50> line:1048:17 used parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55ea34ccfa00 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55ea34ccfa80 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55ea34ccfaf8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55ea34ccfb78 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55ea34ccfc38 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55ea34ccfcb8 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55ea34cd0288 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55ea34ccff00 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55ea34cd01e8 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55ea34ccffa8 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x55ea34cd0048 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x55ea34cd00c0 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55ea34cd0e38 <col:82> 'const ArgContext' lvalue Var 0x55ea34cc5148 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55ea34cd22e8 <col:94, line:1067:5>
| |   |-DeclStmt 0x55ea34cd1558 <line:1054:9, col:64>
| |   | `-VarDecl 0x55ea34cd13e8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x55ea34cd1510 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x55ea34cd1778 <line:1055:9, col:91>
| |   | `-VarDecl 0x55ea34cd1588 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x55ea34cd1750 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x55ea34cd1730 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x55ea34cd16e0 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x55ea34cd16c0 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x55ea34cd1668 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x55ea34cd1618 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x55ea34cd1648 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x55ea34cd16a8 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x55ea34cd1688 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x55ea34cd1710 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x55ea34cd18d8 <line:1056:9, col:27>
| |   | `-VarDecl 0x55ea34cd1870 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x55ea34cd1d10 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x55ea34cd1c40 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x55ea34cd1bd0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55ea34c719d8 0x55ea34a5e880 0x55ea34989130 0x55ea34988de0 0x55ea349886d0 0x55ea34949660
| |   | | |-CallExpr 0x55ea34cd1b10 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x55ea34cd1900 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x55ea34cd19b0 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55ea34cd1980 <col:19, col:23> '<bound member function type>' .begin 0x55ea349792f8
| |   | | | |   `-DeclRefExpr 0x55ea34cd1960 <col:19> 'const String' lvalue ParmVar 0x55ea34ccffa8 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x55ea34cd1a20 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55ea34cd19f0 <col:32, col:36> '<bound member function type>' .end 0x55ea34979510
| |   | | | |   `-DeclRefExpr 0x55ea34cd19d0 <col:32> 'const String' lvalue ParmVar 0x55ea34ccffa8 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x55ea34cd1a40 <col:43> 'const bool' lvalue Var 0x55ea34cd13e8 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x55ea34cd1aa8 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x55ea34cd1a88 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x55ea34cd1ad0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55ea34cd1870 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x55ea34cd1af0 <col:73> 'const int' lvalue Var 0x55ea34cd1588 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x55ea34cd1bb0 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x55ea34cd1b80 <col:16, col:20> '<bound member function type>' .end 0x55ea34979510
| |   | |     `-DeclRefExpr 0x55ea34cd1b60 <col:16> 'const String' lvalue ParmVar 0x55ea34ccffa8 'str' 'const String &'
| |   | `-BinaryOperator 0x55ea34cd1cf0 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x55ea34cd1c88 <col:13> 'int' lvalue ->status 0x55ea34cd0738
| |   |   | `-CXXThisExpr 0x55ea34cd1c78 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x55ea34cd1cd8 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x55ea34cd1cb8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55ea34ccf390 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x55ea34cd1f60 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x55ea34cd1e48 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x55ea34cd1e30 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x55ea34cd1e18 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x55ea34cd1d38 <col:13> 'int' lvalue ->status 0x55ea34cd0738
| |   | | |     `-CXXThisExpr 0x55ea34cd1d28 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x55ea34cd1df8 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x55ea34cd1dc8 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x55ea34cd1d78 <col:23> 'int' lvalue ->status 0x55ea34cd0738
| |   | |   |   `-CXXThisExpr 0x55ea34cd1d68 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x55ea34cd1de0 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x55ea34cd1da8 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55ea34ccf420 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x55ea34cd1f40 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x55ea34cd1ee0 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x55ea34cd1e88 <col:13, col:18> '<bound member function type>' .error 0x55ea34c7b270
| |   |   | | `-DeclRefExpr 0x55ea34cd1e68 <col:13> 'const ArgContext' lvalue ParmVar 0x55ea34cd00c0 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x55ea34cd1f08 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x55ea34cd1eb8 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x55ea34cd1f30 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x55ea34cd1f20 <col:20> 'bool' false
| |   |-DeclStmt 0x55ea34cd2138 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x55ea34cd20e0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x55ea34cd2070 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x55ea34cd2298 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x55ea34cd2150 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55ea349e7cc8
| |   | |-DeclRefExpr 0x55ea34cd2198 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55ea34cd1870 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x55ea34cd2268 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x55ea34cd21e0 <col:64> 'V' lvalue ParmVar 0x55ea34cd0048 'result' 'V &'
| |   `-ReturnStmt 0x55ea34cd22d8 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x55ea34cd22c8 <col:16> 'bool' true
| `-CXXMethodDecl 0x55ea34e7bc78 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55ea34e7ba50 <col:27, col:41> col:41 used str 'const String &'
|   |-ParmVarDecl 0x55ea34e7bb28 <col:46, col:49> col:49 used result 'int &'
|   |-ParmVarDecl 0x55ea34e7bb90 <col:57, col:82> col:75 used args 'const ArgContext &'
|   `-CompoundStmt 0x55ea34e82bf0 <col:94, line:1067:5>
|     |-DeclStmt 0x55ea34e7c488 <line:1054:9, col:64>
|     | `-VarDecl 0x55ea34e7c2a8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-ImplicitCastExpr 0x55ea34e7c418 <col:36, col:55> 'bool' <LValueToRValue>
|     |     `-DeclRefExpr 0x55ea34e7c3e8 <col:36, col:55> 'const bool' lvalue Var 0x55ea349da470 'is_signed' 'const bool' non_odr_use_constant
|     |-DeclStmt 0x55ea34e7c668 <line:1055:9, col:91>
|     | `-VarDecl 0x55ea34e7c4a0 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55ea34e7c5e8 <col:31, col:90> 'int' functional cast to int <NoOp>
|     |     `-ImplicitCastExpr 0x55ea34e7c5d0 <col:35, col:89> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-BinaryOperator 0x55ea34e7c5b0 <col:35, col:89> 'unsigned long' '/'
|     |         |-ParenExpr 0x55ea34e7c590 <col:35, col:69> 'unsigned long'
|     |         | `-BinaryOperator 0x55ea34e7c570 <col:36, col:68> 'unsigned long' '-'
|     |         |   |-BinaryOperator 0x55ea34e7c538 <col:36, col:64> 'unsigned long' '+'
|     |         |   | |-UnaryExprOrTypeTraitExpr 0x55ea34e7c518 <col:36, col:44> 'unsigned long' sizeof 'int':'int'
|     |         |   | `-UnaryExprOrTypeTraitExpr 0x55ea34cd1648 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |         |   `-ImplicitCastExpr 0x55ea34e7c558 <col:68> 'unsigned long' <IntegralCast>
|     |         |     `-IntegerLiteral 0x55ea34cd1688 <col:68> 'int' 1
|     |         `-UnaryExprOrTypeTraitExpr 0x55ea34cd1710 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55ea34e7c800 <line:1056:9, col:27>
|     | `-VarDecl 0x55ea34e7c798 <col:9, col:26> col:19 used x 'IntArg::limb_type [1]'
|     |-IfStmt 0x55ea34e7cc78 <line:1057:9, line:1059:22>
|     | |-BinaryOperator 0x55ea34e7cc20 <line:1057:13, line:1058:24> 'bool' '!='
|     | | |-CXXMemberCallExpr 0x55ea34e7cad8 <line:1057:13, col:78> 'const char *'
|     | | | |-MemberExpr 0x55ea34e7caa8 <col:13> '<bound member function type>' ->parse 0x55ea34ccfe30
|     | | | | `-CXXThisExpr 0x55ea34e7ca98 <col:13> 'IntArg *' implicit this
|     | | | |-CXXMemberCallExpr 0x55ea34e7c938 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55ea34e7c908 <col:19, col:23> '<bound member function type>' .begin 0x55ea349792f8
|     | | | |   `-DeclRefExpr 0x55ea34e7c8e8 <col:19> 'const String' lvalue ParmVar 0x55ea34e7ba50 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55ea34e7c9a8 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55ea34e7c978 <col:32, col:36> '<bound member function type>' .end 0x55ea34979510
|     | | | |   `-DeclRefExpr 0x55ea34e7c958 <col:32> 'const String' lvalue ParmVar 0x55ea34e7ba50 'str' 'const String &'
|     | | | |-ImplicitCastExpr 0x55ea34e7cb48 <col:43> 'bool' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x55ea34e7cb28 <col:43> 'const bool' lvalue Var 0x55ea34e7c2a8 'is_signed' 'const bool' non_odr_use_constant
|     | | | |-CXXFunctionalCastExpr 0x55ea34e7ca30 <col:54, col:67> 'int' functional cast to int <NoOp>
|     | | | | `-ImplicitCastExpr 0x55ea34e7ca18 <col:58, col:66> 'int' <IntegralCast> part_of_explicit_cast
|     | | | |   `-UnaryExprOrTypeTraitExpr 0x55ea34e7c9f8 <col:58, col:66> 'unsigned long' sizeof 'int':'int'
|     | | | |-ImplicitCastExpr 0x55ea34e7cb60 <col:70> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | | | | `-DeclRefExpr 0x55ea34e7ca58 <col:70> 'IntArg::limb_type [1]' lvalue Var 0x55ea34e7c798 'x' 'IntArg::limb_type [1]'
|     | | | `-ImplicitCastExpr 0x55ea34e7cb98 <col:73> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x55ea34e7cb78 <col:73> 'const int' lvalue Var 0x55ea34e7c4a0 'nlimb' 'const int' non_odr_use_constant
|     | | `-CXXMemberCallExpr 0x55ea34e7cc00 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55ea34e7cbd0 <col:16, col:20> '<bound member function type>' .end 0x55ea34979510
|     | |     `-DeclRefExpr 0x55ea34e7cbb0 <col:16> 'const String' lvalue ParmVar 0x55ea34e7ba50 'str' 'const String &'
|     | `-BinaryOperator 0x55ea34e7cc58 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55ea34cd1c88 <col:13> 'int' lvalue ->status 0x55ea34cd0738
|     |   | `-CXXThisExpr 0x55ea34cd1c78 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55ea34e7cc40 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55ea34cd1cb8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55ea34ccf390 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55ea34e7cdf0 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55ea34e7cd10 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55ea34e7ccf8 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55ea34e7cce0 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55ea34cd1d38 <col:13> 'int' lvalue ->status 0x55ea34cd0738
|     | | |     `-CXXThisExpr 0x55ea34cd1d28 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55ea34e7ccc0 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55ea34e7cc90 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55ea34cd1d78 <col:23> 'int' lvalue ->status 0x55ea34cd0738
|     | |   |   `-CXXThisExpr 0x55ea34cd1d68 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55ea34e7cca8 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55ea34cd1da8 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55ea34ccf420 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55ea34e7cdd0 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55ea34e7cd80 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55ea34e7cd50 <col:13, col:18> '<bound member function type>' .error 0x55ea34c7b270
|     |   | | `-DeclRefExpr 0x55ea34e7cd30 <col:13> 'const ArgContext' lvalue ParmVar 0x55ea34e7bb90 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55ea34e7cda8 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55ea34cd1eb8 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55ea34e7cdc0 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55ea34cd1f20 <col:20> 'bool' false
|     |-DeclStmt 0x55ea34e82528 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55ea34e824d0 <col:9, col:49> col:49 unsigned_v_type 'typename make_unsigned<int>::type':'unsigned int'
|     |   `-ElaboratedType 0x55ea34e82480 'typename make_unsigned<int>::type' sugar
|     |     `-TypedefType 0x55ea34e82460 'make_unsigned<int>::type' sugar
|     |       |-Typedef 0x55ea34e823f0 'type'
|     |       `-ElaboratedType 0x55ea34e823a0 'typename integer_traits<int>::unsigned_type' sugar
|     |         `-TypedefType 0x55ea34e82380 'integer_traits<int>::unsigned_type' sugar
|     |           |-Typedef 0x55ea349da5c8 'unsigned_type'
|     |           `-BuiltinType 0x55ea3471d620 'unsigned int'
|     |-CallExpr 0x55ea34e82b80 <line:1065:9, col:71> 'void'
|     | |-ImplicitCastExpr 0x55ea34e82b68 <col:9> 'void (*)(const unsigned int *, unsigned int &)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55ea34e82ae8 <col:9> 'void (const unsigned int *, unsigned int &)' lvalue Function 0x55ea34e829c8 'extract_integer' 'void (const unsigned int *, unsigned int &)' (FunctionTemplate 0x55ea349e7cc8 'extract_integer')
|     | |-ImplicitCastExpr 0x55ea34e82bc8 <col:25> 'const unsigned int *' <NoOp>
|     | | `-ImplicitCastExpr 0x55ea34e82bb0 <col:25> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | |   `-DeclRefExpr 0x55ea34e82588 <col:25> 'IntArg::limb_type [1]' lvalue Var 0x55ea34e7c798 'x' 'IntArg::limb_type [1]'
|     | `-CXXReinterpretCastExpr 0x55ea34e82658 <col:28, col:70> 'unsigned_v_type':'unsigned int' lvalue reinterpret_cast<unsigned_v_type &> <LValueBitCast>
|     |   `-DeclRefExpr 0x55ea34e82608 <col:64> 'int':'int' lvalue ParmVar 0x55ea34e7bb28 'result' 'int &'
|     `-ReturnStmt 0x55ea34e82be0 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55ea34cd22c8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55ea34cd0648 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55ea34cd02f8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55ea34cd05a8 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55ea34cd03a8 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55ea34cd0448 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55ea34cd04c0 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55ea34cd0e58 <col:71> 'const ArgContext' lvalue Var 0x55ea34cc5148 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55ea34cd2a58 <col:83, line:1083:5>
| |   |-DeclStmt 0x55ea34cd23b0 <line:1071:9, col:12>
| |   | `-VarDecl 0x55ea34cd2348 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55ea34cd2a30 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55ea34cd2640 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55ea34cd24c8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55ea34cd2490 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55ea34cd23d8 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55ea34cd2430 <col:31> 'const String' lvalue ParmVar 0x55ea34cd03a8 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55ea34cd2450 <col:36> 'V' lvalue Var 0x55ea34cd2348 'x' 'V'
| |     | |   `-DeclRefExpr 0x55ea34cd2470 <col:39> 'const ArgContext' lvalue ParmVar 0x55ea34cd04c0 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55ea34cd2620 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55ea34cd2600 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55ea34cd25e8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55ea34cd25d0 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55ea34cd24f0 <col:17> 'int' lvalue ->status 0x55ea34cd0738
| |     |     |     `-CXXThisExpr 0x55ea34cd24e0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55ea34cd25b0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55ea34cd2580 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55ea34cd2530 <col:27> 'int' lvalue ->status 0x55ea34cd0738
| |     |       |   `-CXXThisExpr 0x55ea34cd2520 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55ea34cd2598 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55ea34cd2560 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55ea34ccf420 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55ea34cd2670 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55ea34cd2660 <col:20> 'bool' false
| |     `-IfStmt 0x55ea34cd2a08 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55ea34cd2710 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55ea34cd26e0 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55ea34cd2690 <col:18> 'int' lvalue ->status 0x55ea34cd0738
| |       | |   `-CXXThisExpr 0x55ea34cd2680 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55ea34cd26f8 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55ea34cd26c0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55ea34ccf420 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55ea34cd2948 <col:42, line:1079:9>
| |       | |-CallExpr 0x55ea34cd28f0 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55ea34cd2740 <line:1076:13> '<bound member function type>' ->range_error 0x55ea34cd0d48
| |       | | | `-CXXThisExpr 0x55ea34cd2730 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55ea34cd2770 <col:25> 'const ArgContext' lvalue ParmVar 0x55ea34cd04c0 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55ea34cd2850 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55ea34cd28c8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55ea34cd28a8 <col:43> 'V' lvalue Var 0x55ea34cd2348 'x' 'V'
| |       | `-ReturnStmt 0x55ea34cd2938 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55ea34cd2928 <col:20> 'bool' false
| |       `-CompoundStmt 0x55ea34cd29e8 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55ea34cd29a8 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55ea34cd2968 <col:13> 'V' lvalue ParmVar 0x55ea34cd0448 'result' 'V &'
| |         | `-DeclRefExpr 0x55ea34cd2988 <col:22> 'V' lvalue Var 0x55ea34cd2348 'x' 'V'
| |         `-ReturnStmt 0x55ea34cd29d8 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55ea34cd29c8 <col:20> 'bool' true
| `-CXXMethodDecl 0x55ea34e7b638 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55ea34e7b410 <col:16, col:30> col:30 used str 'const String &'
|   |-ParmVarDecl 0x55ea34e7b4e8 <col:35, col:38> col:38 used result 'int &'
|   |-ParmVarDecl 0x55ea34e7b550 <col:46, col:71> col:64 used args 'const ArgContext &'
|   `-CompoundStmt 0x55ea34e7c288 <col:83, line:1083:5>
|     |-DeclStmt 0x55ea34e7b8c0 <line:1071:9, col:12>
|     | `-VarDecl 0x55ea34e7b858 <col:9, col:11> col:11 used x 'int':'int'
|     `-IfStmt 0x55ea34e7c260 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x55ea34e7bef0 <line:1072:13, line:1073:49> 'bool' '||'
|       | |-UnaryOperator 0x55ea34e7be18 <line:1072:13, col:43> 'bool' prefix '!' cannot overflow
|       | | `-CXXMemberCallExpr 0x55ea34e7bde0 <col:14, col:43> 'bool'
|       | |   |-MemberExpr 0x55ea34e7bd98 <col:14> '<bound member function type>' ->parse_saturating 0x55ea34e7bc78
|       | |   | `-CXXThisExpr 0x55ea34e7bd88 <col:14> 'IntArg *' implicit this
|       | |   |-DeclRefExpr 0x55ea34e7b930 <col:31> 'const String' lvalue ParmVar 0x55ea34e7b410 'str' 'const String &'
|       | |   |-DeclRefExpr 0x55ea34e7b950 <col:36> 'int':'int' lvalue Var 0x55ea34e7b858 'x' 'int':'int'
|       | |   `-DeclRefExpr 0x55ea34e7b970 <col:39> 'const ArgContext' lvalue ParmVar 0x55ea34e7b550 'args' 'const ArgContext &'
|       | `-ParenExpr 0x55ea34e7bed0 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x55ea34e7beb0 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x55ea34e7be98 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x55ea34e7be80 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x55ea34cd24f0 <col:17> 'int' lvalue ->status 0x55ea34cd0738
|       |     |     `-CXXThisExpr 0x55ea34cd24e0 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x55ea34e7be60 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x55ea34e7be30 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x55ea34cd2530 <col:27> 'int' lvalue ->status 0x55ea34cd0738
|       |       |   `-CXXThisExpr 0x55ea34cd2520 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x55ea34e7be48 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x55ea34cd2560 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55ea34ccf420 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x55ea34e7bf10 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x55ea34cd2660 <col:20> 'bool' false
|       `-IfStmt 0x55ea34e7c238 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x55ea34e7bf50 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x55ea34e7bf20 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x55ea34cd2690 <col:18> 'int' lvalue ->status 0x55ea34cd0738
|         | |   `-CXXThisExpr 0x55ea34cd2680 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x55ea34e7bf38 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55ea34cd26c0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55ea34ccf420 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x55ea34e7c170 <col:42, line:1079:9>
|         | |-CXXMemberCallExpr 0x55ea34e7c0e0 <line:1076:13, line:1077:45> 'void'
|         | | |-MemberExpr 0x55ea34cd2740 <line:1076:13> '<bound member function type>' ->range_error 0x55ea34cd0d48
|         | | | `-CXXThisExpr 0x55ea34cd2730 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x55ea34e7bf70 <col:25> 'const ArgContext' lvalue ParmVar 0x55ea34e7b550 'args' 'const ArgContext &'
|         | | |-ImplicitCastExpr 0x55ea34e7c148 <col:31, col:50> 'bool' <LValueToRValue>
|         | | | `-DeclRefExpr 0x55ea34e7c118 <col:31, col:50> 'const bool' lvalue Var 0x55ea349da470 'is_signed' 'const bool' non_odr_use_constant
|         | | `-CXXFunctionalCastExpr 0x55ea34e7c0b8 <line:1077:25, col:44> 'click_int_large_t':'long long' functional cast to click_int_large_t <NoOp>
|         | |   `-ImplicitCastExpr 0x55ea34e7c0a0 <col:43> 'click_int_large_t':'long long' <IntegralCast> part_of_explicit_cast
|         | |     `-ImplicitCastExpr 0x55ea34e7c088 <col:43> 'int':'int' <LValueToRValue> part_of_explicit_cast
|         | |       `-DeclRefExpr 0x55ea34e7c068 <col:43> 'int':'int' lvalue Var 0x55ea34e7b858 'x' 'int':'int'
|         | `-ReturnStmt 0x55ea34e7c160 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x55ea34cd2928 <col:20> 'bool' false
|         `-CompoundStmt 0x55ea34e7c218 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x55ea34e7c1e8 <line:1080:13, col:22> 'int':'int' lvalue '='
|           | |-DeclRefExpr 0x55ea34e7c190 <col:13> 'int':'int' lvalue ParmVar 0x55ea34e7b4e8 'result' 'int &'
|           | `-ImplicitCastExpr 0x55ea34e7c1d0 <col:22> 'int':'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x55ea34e7c1b0 <col:22> 'int':'int' lvalue Var 0x55ea34e7b858 'x' 'int':'int'
|           `-ReturnStmt 0x55ea34e7c208 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x55ea34cd29c8 <col:20> 'bool' true
|-FieldDecl 0x55ea34cd06d0 <line:1085:5, col:9> col:9 referenced base 'int'
|-FieldDecl 0x55ea34cd0738 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55ea34cd0788 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55ea34cd0a40 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55ea34cd07c8 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55ea34cd0848 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55ea34cd08c0 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55ea34cd0940 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55ea34cd0d48 <line:1092:5, line:1093:45> line:1092:10 used range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55ea34cd0b10 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55ea34cd0b88 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55ea34cd0c20 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55ea34cd32b8 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55ea34cd32b8
| `-ParmVarDecl 0x55ea34cd33c8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55ea34cd3548 <col:7> col:7 implicit used constexpr IntArg 'void (IntArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34cd3658 <col:7> col:7 used 'IntArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55ea34e785e0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55ea34e785b0 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55ea34e78580 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55ea34e78550 <col:7> 'IntArg' lvalue ParmVar 0x55ea34cd3658 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x55ea34cd06d0 'base' 'int'
| | `-ImplicitCastExpr 0x55ea34e786d8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55ea34e786a8 <col:7> 'int' xvalue .base 0x55ea34cd06d0
| |     `-CXXStaticCastExpr 0x55ea34e78678 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55ea34e78648 <col:7> 'IntArg' lvalue ParmVar 0x55ea34cd3658 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x55ea34cd0738 'status' 'int'
| | `-ImplicitCastExpr 0x55ea34e787a8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55ea34e78778 <col:7> 'int' xvalue .status 0x55ea34cd0738
| |     `-CXXStaticCastExpr 0x55ea34e78748 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55ea34e78718 <col:7> 'IntArg' lvalue ParmVar 0x55ea34cd3658 '' 'IntArg &&'
| `-CompoundStmt 0x55ea34e78800 <col:7>
`-CXXDestructorDecl 0x55ea34e77740 <col:7> col:7 implicit ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ea34cd7bd0 <../dummy_inc/click/args.hh:1183:1, col:52> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55ea34cd7e28 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55ea34e77668 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55ea34e77be0 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55ea34e77bc0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55ea34e77c50 <col:19>
|-CXXConstructorDecl 0x55ea34e77848 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<int> &)' inline default trivial noexcept-unevaluated 0x55ea34e77848
| `-ParmVarDecl 0x55ea34e77958 <col:19> col:19 'const DefaultArg<int> &'
|-CXXConstructorDecl 0x55ea34e779f8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ea34e77b08 <col:19> col:19 used 'DefaultArg<int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55ea34e78810 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55ea34e78530 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x55ea34e78500 <col:19> 'DefaultArg<int>' xvalue static_cast<struct DefaultArg<int> &&> <NoOp>
| |       `-DeclRefExpr 0x55ea34e784d0 <col:19> 'DefaultArg<int>' lvalue ParmVar 0x55ea34e77b08 '' 'DefaultArg<int> &&'
| `-CompoundStmt 0x55ea34e78880 <col:19>
`-CXXDestructorDecl 0x55ea34e77c90 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>
