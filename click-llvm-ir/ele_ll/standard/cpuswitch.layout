
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e2af1de8 prev 0x5592e2ae9588 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592e2af1ee0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5592e2af1f70 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5592e2af1fe8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5592e2af20a8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5592e2af2170 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5592e2af22e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5592e2af2220 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5592e2af2390 <col:24>
| `-OptimizeNoneAttr 0x5592e2af23e8 <col:34>
|-CXXMethodDecl 0x5592e2af2430 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5592e2af26e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5592e2af24e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5592e2af2558 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5592e2af25d8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5592e2af27a0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5592e2af27d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5592e2af2840 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5592e2af28c8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5592e2af2be8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5592e2af2980 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5592e2af29f8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5592e2af2a70 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5592e2af2af0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5592e2af2d00 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5592e2afa678 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5592e2afa678
| `-ParmVarDecl 0x5592e2afa788 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5592e2afa828 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5592e2afa828
| `-ParmVarDecl 0x5592e2afa938 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5592e2a66e70 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e2ae4e00 prev 0x5592e2ae4b80 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592e2ae4ef8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5592e2ae4f88 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5592e2ae4fe8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5592e2ae50d8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5592e2ae51d8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5592e2ae53a8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5592e2ae5258 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5592e2ae52d0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5592e2ae5538 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5592e2ae5470 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5592e2ae55e0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5592e2ae5718 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5592e2ae5650 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5592e2ae58b8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5592e2ae57f8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5592e2ae5a58 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5592e2ae5998 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5592e2ae5b00 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5592e2ae5c00 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5592e2ae5ce0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ae5be0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5592e2ae5bc0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5592e2ae5c90 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5592e2ae5cf8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2ae5c70 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5592e2ae5c50 <col:44> 'int' 2
|-CXXMethodDecl 0x5592e2ae5e40 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5592e2ae5d28 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5592e2ae5da8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5592e2ae5f98 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5592e2ae5f08 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5592e2ae61d8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5592e2ae6058 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5592e2ae60d0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5592e2ae6288 <col:20>
| `-OptimizeNoneAttr 0x5592e2ae62e0 <col:30>
|-CXXMethodDecl 0x5592e2ae63e8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5592e2ae6320 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5592e2ae6490 <col:20>
| `-OptimizeNoneAttr 0x5592e2ae64e8 <col:30>
|-CXXMethodDecl 0x5592e2ae6538 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5592e2ae6600 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5592e2ae6718 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5592e2ae67a0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5592e2ae6828 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5592e2ae68b0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5592e2ae6938 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5592e2ae69c8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5592e2ae6a88 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5592e2ae6b10 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x5592e2ae6b98 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5592e2ae6c20 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5592e2ae6ca8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5592e2ae6d30 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5592e2ae6dc0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5592e2ae6e80 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5592e2ae6f10 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5592e2ae7060 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5592e2ae6fc8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5592e2ae71f0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5592e2ae7120 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5592e2ae74a0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5592e2ae72a8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5592e2ae7328 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5592e2ae73a8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5592e2ae7558 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5592e2ae7660 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5592e2ae78f0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ae7640 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5592e2ae7620 <col:33> 'int' 0
| |-EnumConstantDecl 0x5592e2ae76f0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5592e2ae7908 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ae76d0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5592e2ae76b0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5592e2ae7780 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5592e2ae7920 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ae7760 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5592e2ae7740 <col:38> 'int' 90
| |-EnumConstantDecl 0x5592e2ae7810 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5592e2ae7938 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ae77f0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5592e2ae77d0 <col:35> 'int' 100
| `-EnumConstantDecl 0x5592e2ae78a0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5592e2ae7950 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2ae7880 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5592e2ae7860 <col:32> 'int' 2000
|-CXXMethodDecl 0x5592e2ae7990 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5592e2ae7dd0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5592e2ae7c40 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5592e2ae7cb8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2ae7ea0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5592e2ae8020 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5592e2ae7f50 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2ae8228 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5592e2ae80d8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5592e2ae8150 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2ae8328 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5592e2ae83c8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5592e2ae8490 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592e2ae8520 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5592e2ae8750 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ae8500 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5592e2ae84e0 <col:36> 'int' EnumConstant 0x5592e2ae8490 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592e2ae8570 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592e2ae85c0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592e2ae8610 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592e2ae8660 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592e2ae86b0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5592e2ae8700 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5592e2ae8838 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5592e2ae8778 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5592e2ae8900 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5592e2ae89c0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5592e2ae8a80 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5592e2ae8b40 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5592e2ae8c58 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5592e2ae8d20 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5592e2ae8ea0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5592e2ae8dd0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5592e2ae8fc8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5592e2ae91c8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5592e2ae9078 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5592e2ae90f8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5592e2af6b18 <col:54, line:127:5>
|   |-ParenExpr 0x5592e2af69c8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5592e2af6998 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2af6688 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5592e2af6660 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5592e2af6648 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5592e2af6630 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5592e2af6600 <col:31> 'Router *' lvalue ->_router 0x5592e2af44e0
|   |   |         `-CXXThisExpr 0x5592e2af65f0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5592e2af66e8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2af66c8 <col:48> 'int' 0
|   |   `-CallExpr 0x5592e2af68f8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5592e2af68e0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2af68c0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2af6938 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2af6758 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5592e2af6950 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2af6778 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5592e2af6968 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2af67b0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5592e2af6980 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2af68a8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2af6890 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2af6848 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5592e2af6a60 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5592e2af69f8 <col:9> 'Router *' lvalue ->_router 0x5592e2af44e0
|   | | `-CXXThisExpr 0x5592e2af69e8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5592e2af6a48 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592e2af6a28 <col:19> 'Router *' lvalue ParmVar 0x5592e2ae9078 'r' 'Router *'
|   `-BinaryOperator 0x5592e2af6af8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5592e2af6a90 <col:9> 'int' lvalue ->_eindex 0x5592e2af4548
|     | `-CXXThisExpr 0x5592e2af6a80 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5592e2af6ae0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2af6ac0 <col:19> 'int' lvalue ParmVar 0x5592e2ae90f8 'eindex' 'int'
|-CXXMethodDecl 0x5592e2ae9350 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5592e2ae9288 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5592e2ae9420 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5592e2ae94e8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5592e2ae9588 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5592e2ae97d8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5592e2ae9650 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5592e2ae96d0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5592e2ae9888 <col:20>
| `-OptimizeNoneAttr 0x5592e2ae98e0 <col:30>
|-CXXMethodDecl 0x5592e2ae99e8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5592e2ae9920 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5592e2ae9a90 <col:20>
| `-OptimizeNoneAttr 0x5592e2ae9ae8 <col:30>
|-CXXMethodDecl 0x5592e2ae9bb8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5592e2ae9b28 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5592e2ae9c60 <col:20>
| `-OptimizeNoneAttr 0x5592e2ae9cb8 <col:30>
|-CXXMethodDecl 0x5592e2ae9e48 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5592e2ae9cf0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5592e2ae9d70 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5592e2ae9fd8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5592e2ae9f10 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5592e2aea128 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5592e2aea098 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5592e2aea278 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5592e2aea1e8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5592e2aea3c8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5592e2aea338 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5592e2aea688 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5592e2aea480 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5592e2aea500 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5592e2aea5a8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5592e2aea760 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5592e2aea820 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5592e2aeaaf0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5592e2aea9a0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5592e2aeaa18 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2aeac18 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5592e2aeadf0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5592e2aeacd0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5592e2aead50 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5592e2aeafd8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5592e2aeaeb8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5592e2aeaf38 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5592e2aeb348 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5592e2aeb098 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5592e2aeb110 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5592e2aeb190 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5592e2af6100 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5592e2af60e0 <col:106> 'int' 0
| `-ParmVarDecl 0x5592e2aeb208 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592e2af6138 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592e2af6118 <col:126> 'int' 0
|-CXXMethodDecl 0x5592e2aeb6e8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5592e2aeb418 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5592e2aeb4b0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5592e2aeb530 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5592e2aeb5a8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592e2af6170 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592e2af6150 <col:114> 'int' 0
|-CXXMethodDecl 0x5592e2aeba78 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5592e2aeb7c0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5592e2aeb838 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5592e2aeb8b8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5592e2af6188 <col:96> 'int' 0
| `-ParmVarDecl 0x5592e2aeb930 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592e2af61c8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592e2af61a8 <col:116> 'int' 0
|-CXXMethodDecl 0x5592e2aebdf8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5592e2aebb48 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5592e2aebbc0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5592e2aebc40 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5592e2af6200 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5592e2af61e0 <col:109> 'int' 0
| `-ParmVarDecl 0x5592e2aebcb8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592e2af6238 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592e2af6218 <col:129> 'int' 0
|-CXXMethodDecl 0x5592e2aec178 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5592e2aebec8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5592e2aebf40 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5592e2aebfc0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5592e2aec038 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592e2af6270 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592e2af6250 <col:117> 'int' 0
|-CXXMethodDecl 0x5592e2aec508 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5592e2aec250 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aec2c8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5592e2aec348 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5592e2af6288 <col:99> 'int' 0
| `-ParmVarDecl 0x5592e2aec3c0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592e2af62c8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592e2af62a8 <col:119> 'int' 0
|-CXXMethodDecl 0x5592e2aec928 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5592e2aec5d8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5592e2aec658 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5592e2aec6d0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5592e2aec750 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5592e2af6300 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5592e2af62e0 <col:108> 'int' 0
| `-ParmVarDecl 0x5592e2aec7d0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5592e2af6338 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5592e2af6318 <col:141> 'int' 0
|-CXXMethodDecl 0x5592e2aecd48 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5592e2aeca00 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5592e2aeca80 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5592e2aecaf8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5592e2aecb78 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5592e2aecbf8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5592e2af6350 <col:121> 'int' 0
|-CXXMethodDecl 0x5592e2aed178 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5592e2aece28 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5592e2aecea8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5592e2aecf20 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5592e2aecfa0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5592e2af6370 <col:98> 'int' 0
| `-ParmVarDecl 0x5592e2aed020 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5592e2af6390 <col:123> 'int' 0
|-CXXMethodDecl 0x5592e2aed440 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5592e2aed250 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5592e2aed2d0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5592e2aed350 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5592e2af63b0 <col:80> 'int' 0
|-EnumDecl 0x5592e2aed4f8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5592e2aed600 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5592e2aed890 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2aed5e0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5592e2aed5c0 <col:42> 'int' 1
| |-EnumConstantDecl 0x5592e2aed690 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5592e2aed8a8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2aed670 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5592e2aed650 <col:40> 'int' 2
| |-EnumConstantDecl 0x5592e2aed720 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5592e2aed8c0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2aed700 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5592e2aed6e0 <col:44> 'int' 4
| |-EnumConstantDecl 0x5592e2aed7b0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5592e2aed8d8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2aed790 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5592e2aed770 <col:36> 'int' 7
| `-EnumConstantDecl 0x5592e2aed840 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5592e2aed8f0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2aed820 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5592e2aed800 <col:34> 'int' 6
|-CXXMethodDecl 0x5592e2aedba8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5592e2aed918 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5592e2aed9b8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5592e2aeda38 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5592e2aedab0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5592e2af6468 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5592e2af6450 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5592e2af6438 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5592e2af6418 <col:98, col:105> 'String' (CXXTemporary 0x5592e2af6418)
|           `-CXXTemporaryObjectExpr 0x5592e2af63e0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5592e2aede48 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5592e2aedc78 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5592e2aedcf0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5592e2aedd68 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5592e2af6518 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5592e2af6500 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5592e2af64e8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5592e2af64c8 <col:94, col:101> 'String' (CXXTemporary 0x5592e2af64c8)
| |         `-CXXTemporaryObjectExpr 0x5592e2af6490 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5592e2af6d00 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5592e2af6c78 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5592e2af6c48 <col:9> '<bound member function type>' ->add_task_handlers 0x5592e2aedba8
|     | `-CXXThisExpr 0x5592e2af6c38 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5592e2af6cb8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5592e2af6bb8 <col:27> 'Task *' lvalue ParmVar 0x5592e2aedc78 'task' 'Task *'
|     |-ImplicitCastExpr 0x5592e2af6cd0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5592e2af6bd8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5592e2aedcf0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5592e2af6ce8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5592e2af6bf8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5592e2aed840 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5592e2af6c18 <col:62> 'const String' lvalue ParmVar 0x5592e2aedd68 'prefix' 'const String &'
|-CXXMethodDecl 0x5592e2aee058 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5592e2aedf10 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5592e2aedf88 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5592e2af65c8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5592e2af65b0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5592e2af6598 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5592e2af6578 <col:70, col:77> 'String' (CXXTemporary 0x5592e2af6578)
| |         `-CXXTemporaryObjectExpr 0x5592e2af6540 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5592e2af6ed8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5592e2af6e50 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5592e2af6e20 <col:9> '<bound member function type>' ->add_task_handlers 0x5592e2aedba8
|     | `-CXXThisExpr 0x5592e2af6e10 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5592e2af6e90 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5592e2af6d90 <col:27> 'Task *' lvalue ParmVar 0x5592e2aedf10 'task' 'Task *'
|     |-ImplicitCastExpr 0x5592e2af6ea8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5592e2af6db0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5592e2af6ec0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5592e2af6dd0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5592e2aed840 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5592e2af6df0 <col:57> 'const String' lvalue ParmVar 0x5592e2aedf88 'prefix' 'const String &'
|-CXXMethodDecl 0x5592e2aee338 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5592e2aee120 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aee1a0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aee218 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5592e2aee5e8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5592e2aee408 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aee488 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aee508 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5592e2aee8d8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5592e2aee6b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aee738 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aee7b0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5592e2aeeb88 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5592e2aee9a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aeea28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aeeaa8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5592e2aeee38 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5592e2aeec58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aeecd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aeed58 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5592e2aef0e8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5592e2aeef08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aeef88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aef000 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5592e2aef398 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5592e2aef1b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aef238 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aef2b8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5592e2aef6a8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5592e2aef4c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aef540 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aef5c0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5592e2aef988 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5592e2aef778 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aef7f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aef8a0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5592e2aefc68 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5592e2aefa58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2aefad8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2aefb80 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5592e2aefed0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5592e2aefd38 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5592e2aefdb8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5592e2aefe30 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5592e2af0178 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5592e2aeffa0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5592e2af0020 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5592e2af0098 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5592e2af0428 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5592e2af0248 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2af02c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2af0348 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5592e2af06d8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5592e2af04f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2af0578 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2af05f0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5592e2af0988 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5592e2af07a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2af0828 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2af08a0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5592e2af0c58 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5592e2af0a58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2af0ad8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592e2af0b78 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5592e2af0f88 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5592e2af0d28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592e2af0da8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5592e2af0e20 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5592e2af0e98 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592e2af65e0 <col:93> 'bool' false
|-CXXMethodDecl 0x5592e2af1170 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5592e2af1058 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5592e2af10d8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5592e2af1348 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5592e2af1230 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5592e2af12b0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5592e2af1628 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592e2af1408 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5592e2af1480 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5592e2af1500 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5592e2af1578 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2af1918 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592e2af16f8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5592e2af1770 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5592e2af17f0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5592e2af1868 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2af1b50 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5592e2af19f0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5592e2af1a70 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5592e2af1d38 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5592e2af1c18 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5592e2af1c98 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5592e2af1de8 prev 0x5592e2ae9588 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592e2af1ee0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5592e2af1f70 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5592e2af1fe8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5592e2af20a8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5592e2af2170 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5592e2af22e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5592e2af2220 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5592e2af2390 <col:24>
| | `-OptimizeNoneAttr 0x5592e2af23e8 <col:34>
| |-CXXMethodDecl 0x5592e2af2430 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5592e2af26e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5592e2af24e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5592e2af2558 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5592e2af25d8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5592e2af27a0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5592e2af27d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5592e2af2840 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5592e2af28c8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5592e2af2be8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5592e2af2980 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5592e2af29f8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5592e2af2a70 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5592e2af2af0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5592e2af2d00 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5592e2afa678 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5592e2afa678
| | `-ParmVarDecl 0x5592e2afa788 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5592e2afa828 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5592e2afa828
| | `-ParmVarDecl 0x5592e2afa938 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5592e2a66e70 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5592e2af2d78 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5592e2af2e18 <col:38> "" ""
|-CXXMethodDecl 0x5592e2af2ea8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5592e2af2f48 <col:44> "" ""
|-AccessSpecDecl 0x5592e2af2fb8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5592e2af2fe0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5592e2af30e0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5592e2af3130 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2af30c0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5592e2af30a0 <col:27> 'int' 4
|-FieldDecl 0x5592e2af31e8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5592e2af3398 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5592e2af3450 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5592e2af44e0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5592e2af4548 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5592e2af4698 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5592e2af45d8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5592e2af4848 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5592e2af4758 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5592e2af4a28 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5592e2af4908 <col:20> col:23 'int'
| `-ParmVarDecl 0x5592e2af4988 <col:25> col:28 'int'
|-CXXMethodDecl 0x5592e2af4cd0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5592e2af4af0 <col:23> col:26 'int'
| |-ParmVarDecl 0x5592e2af4b70 <col:28> col:31 'int'
| `-ParmVarDecl 0x5592e2af4be8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5592e2af4d88 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5592e2af4e50 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5592e2af4ea0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5592e2af4ef0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5592e2af50d0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5592e2af4f80 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5592e2af4ff8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2af5378 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5592e2af5198 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5592e2af5218 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5592e2af5290 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2af5598 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5592e2af5448 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5592e2af54c8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5592e2af58d0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5592e2af5658 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5592e2af56d8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5592e2af5750 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5592e2af57d0 <col:57> col:60 'int'
|-CXXMethodDecl 0x5592e2af5ab8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5592e2af59a0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5592e2af5a20 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5592e2af5c08 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5592e2af5b78 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5592e2af5f88 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5592e2af5cc8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5592e2af5d48 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5592e2af5dc0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5592e2af5e40 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5592e2af60a0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class CPUSwitch
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e2afd7e8 <../elements/standard/cpuswitch.hh:18:1, line:31:1> line:18:7 class CPUSwitch definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5592e2afd948 <col:1, col:7> col:7 implicit referenced class CPUSwitch
|-AccessSpecDecl 0x5592e2afd9d8 <line:20:2, col:8> col:2 public
|-CXXConstructorDecl 0x5592e2afda60 <line:22:3, col:13> col:3 CPUSwitch 'void ()'
|-CXXDestructorDecl 0x5592e2afdb50 <line:23:3, col:14> col:3 ~CPUSwitch 'void ()' noexcept-unevaluated 0x5592e2afdb50
| `-Overrides: [ 0x5592e2ae50d8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x5592e2afdc80 <line:25:3, col:56> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x5592e2ae6538 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5592e2afe438 <col:34, col:56>
|   `-ReturnStmt 0x5592e2afe428 <col:36, col:43>
|     `-ImplicitCastExpr 0x5592e2afe410 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5592e2afe3e8 <col:43> 'const char [10]' lvalue "CPUSwitch"
|-CXXMethodDecl 0x5592e2afdd48 <line:26:3, col:51> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x5592e2ae6600 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5592e2afe510 <col:34, col:51>
|   `-ReturnStmt 0x5592e2afe500 <col:36, col:43>
|     `-ImplicitCastExpr 0x5592e2afe4e8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5592e2afe4c8 <col:43> 'const char [5]' lvalue "1/1-"
|-CXXMethodDecl 0x5592e2afde10 <line:27:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x5592e2ae69c8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5592e2afe570 <col:34, col:49>
|   `-ReturnStmt 0x5592e2afe560 <col:36, col:43>
|     `-ImplicitCastExpr 0x5592e2afe548 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5592e2afe528 <col:43> 'const char []' lvalue Var 0x5592e2ae6b10 'PUSH' 'const char []'
|-CXXMethodDecl 0x5592e2afdfd8 <line:29:3, col:31> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x5592e2ae53a8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5592e2afdec8 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x5592e2afdf40 <col:23, col:30> col:31 'Packet *'
|-CXXConstructorDecl 0x5592e2afe0b8 <line:18:7> col:7 implicit CPUSwitch 'void (const CPUSwitch &)' inline default_delete noexcept-unevaluated 0x5592e2afe0b8
| `-ParmVarDecl 0x5592e2afe1c8 <col:7> col:7 'const CPUSwitch &'
`-CXXMethodDecl 0x5592e2afe268 <col:7> col:7 implicit operator= 'CPUSwitch &(const CPUSwitch &)' inline default_delete noexcept-unevaluated 0x5592e2afe268
  `-ParmVarDecl 0x5592e2afe378 <col:7> col:7 'const CPUSwitch &'

Layout: <CGRecordLayout
  LLVMType:%class.CPUSwitch = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.CPUSwitch.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e28a38b0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592e28a39c8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5592e28a3a58 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5592e28a3b28 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5592e28a3c10 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5592e28a3e28 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5592e28a3cd0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a3fd8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5592e28a3ee0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5592e28a4120 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5592e28a4090 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5592e28a4268 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5592e28a41d8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a43b0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5592e28a4320 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a4478 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5592e28a45c0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5592e28a4530 <col:28> col:31 'int'
|-CXXMethodDecl 0x5592e28a4688 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5592e28a47d0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5592e28a4740 <col:28> col:31 'int'
|-CXXMethodDecl 0x5592e28a4948 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5592e28a4888 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a4a90 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5592e28a4a00 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a4b58 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5592e28a4d18 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5592e28a4c08 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592e28a4c80 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a4f68 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5592e28a4dd8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592e28a4e50 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592e28a5018 <col:86> "" ""
|-CXXMethodDecl 0x5592e28a5288 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5592e28a50f8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5592e28a5170 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a5438 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5592e28a5348 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5592e28a55e8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5592e28a54f0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5592e28a58b8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5592e28a56a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5592e28a5718 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592e28a5790 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a5b98 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5592e28a5980 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5592e28a59f8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592e28a5a70 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592e28a5c50 <col:115> "" ""
|-AccessSpecDecl 0x5592e28a5cc0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5592e28a5cf8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e28a7210 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5592e28a7210
| `-ParmVarDecl 0x5592e28a7318 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5592e28a73b8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5592e28a73b8
| `-ParmVarDecl 0x5592e28a74c8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5592e28dcaf8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5592e2ace8f0 <col:7>
|-CXXConstructorDecl 0x5592e28dcbd0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5592e28dcbd0
| `-ParmVarDecl 0x5592e28dcce8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5592e28dcd58 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5592e28dcd58
| `-ParmVarDecl 0x5592e28dce68 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5592e2ad12f0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e2abd498 prev 0x5592e2ab26a0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592e2abd590 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5592e2abd680 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5592e2abd7a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5592e2abd928 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5592e2abdaa8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5592e2abdc28 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5592e2acea58 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5592e2acf2c8 <col:11>
|-CXXDestructorDecl 0x5592e2aceb30 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5592e2acec68 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5592e2acec68
| `-ParmVarDecl 0x5592e2aced78 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5592e2acee18 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5592e2acee18
| `-ParmVarDecl 0x5592e2acef28 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5592e2ad1ce8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592e2ad1df8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5592e2ad2078 <col:11>
|   `-ReturnStmt 0x5592e2ad2068 <col:11>
|     `-UnaryOperator 0x5592e2ad2050 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5592e2ad2040 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5592e2ad1e68 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5592e2ad1e68
  `-ParmVarDecl 0x5592e2ad1f78 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e2abdc90 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592e2abdda8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5592e2abde48 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5592e2abdeb0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5592e2abdf18 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5592e2abdf80 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5592e2abdfe0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5592e2abe0a0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5592e2abe100 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5592e2abe160 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5592e2ace968 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5592e2abde48 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5592e2acf2d8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5592e2acf330 <col:12>
|-CXXConstructorDecl 0x5592e2acef98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5592e2acef98
| `-ParmVarDecl 0x5592e2acf0a8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5592e2acf148 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5592e2acf148
| `-ParmVarDecl 0x5592e2acf258 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5592e2ad13d0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e2aabdb0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592e2aabec8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5592e2aabf58 <col:16, col:22> col:16 public
|-EnumDecl 0x5592e2aabf80 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5592e2aac080 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5592e2aac160 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2aac060 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5592e2aac040 <col:21> 'int' 28
| `-EnumConstantDecl 0x5592e2aac110 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5592e2aac178 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2aac0f0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5592e2aac0d0 <col:22> 'int' 64
|-CXXMethodDecl 0x5592e2aac4b8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5592e2aac1a0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592e2aac220 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5592e2aac298 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592e2aac310 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592e2aac578 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aac778 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5592e2aac5f0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5592e2aac668 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592e2aac828 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aac988 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5592e2aac898 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592e2aaca30 <col:72> warn_unused_result ""
|-TypedefDecl 0x5592e2aacd90 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5592e2aacd20 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5592e2aaccc0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5592e2aacc80 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5592e25852d0 'void'
|       |-PointerType 0x5592e282c150 'unsigned char *'
|       | `-BuiltinType 0x5592e25853d0 'unsigned char'
|       |-TypedefType 0x5592e26286c0 'size_t' sugar
|       | |-Typedef 0x5592e25f5b20 'size_t'
|       | `-BuiltinType 0x5592e2585430 'unsigned long'
|       `-PointerType 0x5592e2585ad0 'void *'
|         `-BuiltinType 0x5592e25852d0 'void'
|-CXXMethodDecl 0x5592e2aad208 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5592e2aace00 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5592e2aace78 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592e2aacf10 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5592e2aacf90 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5592e2ac7900 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5592e2ac78e8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5592e2ac78b0 <col:58> 'int' 0
| |-ParmVarDecl 0x5592e2aad010 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5592e2ac7928 <col:76> 'int' 0
| |-ParmVarDecl 0x5592e2aad090 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5592e2ac7948 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5592e2aad2d8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aad358 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5592e2aad418 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5592e2aad4b8 <col:20>
| `-OptimizeNoneAttr 0x5592e2aad510 <col:30>
|-CXXMethodDecl 0x5592e2aad588 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5592e2aad628 <col:20>
| `-OptimizeNoneAttr 0x5592e2aad680 <col:30>
|-CXXMethodDecl 0x5592e2aad6f8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5592e2aad798 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aad848 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5592e2aad8e8 <col:20>
| |-OptimizeNoneAttr 0x5592e2aad940 <col:30>
| `-WarnUnusedResultAttr 0x5592e2aad968 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aad9c0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5592e2aada60 <col:20>
| `-OptimizeNoneAttr 0x5592e2aadab8 <col:30>
|-CXXMethodDecl 0x5592e2aadb08 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5592e2aadba8 <col:20>
| `-OptimizeNoneAttr 0x5592e2aadc00 <col:30>
|-CXXMethodDecl 0x5592e2aadc48 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5592e2aadce8 <col:20>
| `-OptimizeNoneAttr 0x5592e2aadd40 <col:30>
|-CXXMethodDecl 0x5592e2aadd88 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5592e2aade48 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5592e2aadf10 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5592e2aadfd8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5592e2aae098 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5592e2aae1b8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5592e2ac7a10 <col:54, line:99:5>
|   `-ReturnStmt 0x5592e2ac7a00 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5592e2ac79e8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5592e2ac79b8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5592e2abe498
|         `-CXXThisExpr 0x5592e2ac79a8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5592e2aae358 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5592e2aae268 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5592e2ac7ac0 <col:67, line:103:5>
|   `-BinaryOperator 0x5592e2ac7aa0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5592e2ac7a38 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5592e2abe498
|     | `-CXXThisExpr 0x5592e2ac7a28 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5592e2ac7a88 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2ac7a68 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5592e2aae268 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5592e2aae450 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5592e2ac7b40 <col:33, line:107:5>
|   `-ReturnStmt 0x5592e2ac7b30 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5592e2ac7b18 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5592e2ac7ae8 <col:16> 'void *' lvalue ->_destructor_argument 0x5592e2abe500
|         `-CXXThisExpr 0x5592e2ac7ad8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5592e2aae510 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5592e2ac8170 <col:25, line:113:5>
|   |-ParenExpr 0x5592e2ac7eb8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5592e2ac7e88 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2ac7bf8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5592e2ac7bd0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5592e2ac7b98 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5592e2ac7b68 <col:24> '<bound member function type>' ->shared 0x5592e2aad588
|   |   |       `-ImplicitCastExpr 0x5592e2ac7bb8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5592e2ac7b58 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5592e2ac7c58 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2ac7c38 <col:42> 'int' 0
|   |   `-CallExpr 0x5592e2ac7de8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5592e2ac7dd0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2ac7db0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2ac7e28 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ac7cc8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5592e2ac7e40 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ac7cf0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2ac7e58 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2ac7d28 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5592e2ac7e70 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2ac7d98 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2ac7d80 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2ac7d48 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5592e2ac80b8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5592e2ac7ee8 <col:2> 'unsigned char *' lvalue ->_head 0x5592e2abe2a0
|   | | `-CXXThisExpr 0x5592e2ac7ed8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5592e2ac80a0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5592e2ac8080 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5592e2ac7f28 <col:10> 'unsigned char *' lvalue ->_data 0x5592e2abe308
|   |     | `-CXXThisExpr 0x5592e2ac7f18 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5592e2ac8068 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5592e2ac8048 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5592e2ac7f68 <col:18> 'unsigned char *' lvalue ->_tail 0x5592e2abe370
|   |         | `-CXXThisExpr 0x5592e2ac7f58 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5592e2ac8030 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5592e2ac8010 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5592e2ac7fa8 <col:26> 'unsigned char *' lvalue ->_end 0x5592e2abe3d8
|   |             | `-CXXThisExpr 0x5592e2ac7f98 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5592e2ac7ff8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5592e2ac7fd8 <col:33> 'int' 0
|   `-BinaryOperator 0x5592e2ac8150 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5592e2ac80e8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5592e2abe498
|     | `-CXXThisExpr 0x5592e2ac80d8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5592e2ac8138 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5592e2ac8118 <col:16> 'int' 0
|-CXXMethodDecl 0x5592e2aae650 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5592e2aae5c0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592e2aae6f8 <col:20>
| |-OptimizeNoneAttr 0x5592e2aae750 <col:30>
| `-WarnUnusedResultAttr 0x5592e2aae778 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aae848 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5592e2aae7b8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592e2aae8f0 <col:20>
| |-OptimizeNoneAttr 0x5592e2aae948 <col:30>
| `-WarnUnusedResultAttr 0x5592e2aae970 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aaeaa8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5592e2aae9b0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592e2aaeb50 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aaec50 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5592e2aaebc0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592e2aaecf8 <col:20>
| `-OptimizeNoneAttr 0x5592e2aaed50 <col:30>
|-CXXMethodDecl 0x5592e2aaee18 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5592e2aaed88 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592e2aaeec0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aaefc0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5592e2aaef30 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592e2aaf068 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aaf168 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5592e2aaf0d8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592e2aaf210 <col:20>
| `-OptimizeNoneAttr 0x5592e2aaf268 <col:30>
|-CXXMethodDecl 0x5592e2aaf3f8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5592e2aaf2a8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5592e2aaf320 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5592e2ac7968 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5592e2aaf4a8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5592e2aaf6a8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5592e2aaf520 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5592e2aaf598 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e2aaf8b8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5592e2aaf768 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592e2aaf7e0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e2aafac8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5592e2aaf978 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5592e2aaf9f8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5592e2ac7978 <col:39> 'int' 0
|-CXXMethodDecl 0x5592e2aafb98 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5592e2aafc60 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5592e2aafd28 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5592e2aafde8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5592e2aafeb0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5592e2aafff8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5592e2aaff68 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5592e2ab01c8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5592e2ab00b8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5592e2ab0130 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e2ab0298 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5592e2ab0358 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5592e2ab03f8 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab0450 <col:30>
|-CXXMethodDecl 0x5592e2ab04a0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5592e2ab0540 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab0598 <col:30>
|-CXXMethodDecl 0x5592e2ab05e8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5592e2ab06a8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5592e2ab0770 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5592e2ab0810 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab0868 <col:30>
|-CXXMethodDecl 0x5592e2ab09b8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5592e2ab08a8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5592e2ab0920 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e2ab0b08 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5592e2ab0a78 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e2ab0be0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5592e2ab0ca0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5592e2ab0d40 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab0d98 <col:30>
|-CXXMethodDecl 0x5592e2ab0de8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5592e2ab0e88 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab0ee0 <col:30>
|-CXXMethodDecl 0x5592e2ab0f30 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5592e2ab0ff8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5592e2ab1098 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab10f0 <col:30>
|-CXXMethodDecl 0x5592e2ab1138 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5592e2ab1258 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5592e2ab13c8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5592e2ab1308 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5592e2ab14b8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5592e2ab1558 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab15b0 <col:30>
|-CXXMethodDecl 0x5592e2ab1600 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5592e2ab16c0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5592e2ab18f8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5592e2ab1770 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5592e2ab17e8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592e2ab19a8 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab1a00 <col:30>
|-CXXMethodDecl 0x5592e2ab1aa8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5592e2ab1b48 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab1ba0 <col:30>
|-CXXMethodDecl 0x5592e2ab1bf0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5592e2ab1c90 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab1ce8 <col:30>
|-CXXMethodDecl 0x5592e2ab1d30 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5592e2ab1dd0 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab1e28 <col:30>
|-CXXMethodDecl 0x5592e2ab1f28 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5592e2ab1e60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5592e2ab1fd0 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab2028 <col:30>
|-CXXMethodDecl 0x5592e2ab21e8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5592e2ab2060 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5592e2ab20d8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592e2ab2298 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab22f0 <col:30>
|-CXXMethodDecl 0x5592e2ab2398 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5592e2ab24b8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5592e2ab25d8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5592e2ab2678 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5592e2ab26a0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5592e2ab27c8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5592e2ab2868 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab28c0 <col:30>
|-CXXMethodDecl 0x5592e2ab2968 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5592e2ab2a08 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab2a60 <col:30>
|-AccessSpecDecl 0x5592e2ab2a88 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5592e2ab2ab0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5592e2ab2bb0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5592e2ab2c00 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2ab2b90 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5592e2ab2b70 <col:14> 'int' 48
|-CXXMethodDecl 0x5592e2ab2c68 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5592e2ab2d08 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab2d60 <col:30>
|-CXXMethodDecl 0x5592e2ab2dd8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5592e2ab2e78 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab2ed0 <col:30>
|-CXXMethodDecl 0x5592e2ab2f98 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5592e2ab2f08 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5592e2ab3138 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5592e2ab32d8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5592e2ab31e8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5592e2ab3380 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5592e2ab3480 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592e2ab3830 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab3460 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5592e2ab3440 <col:9> 'int' 0
| |-EnumConstantDecl 0x5592e2ab3510 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592e2ab3848 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab34f0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5592e2ab34d0 <col:14> 'int' 1
| |-EnumConstantDecl 0x5592e2ab35a0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592e2ab3860 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab3580 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5592e2ab3560 <col:14> 'int' 2
| |-EnumConstantDecl 0x5592e2ab3630 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592e2ab3878 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab3610 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5592e2ab35f0 <col:14> 'int' 3
| |-EnumConstantDecl 0x5592e2ab36c0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592e2ab3890 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab36a0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5592e2ab3680 <col:13> 'int' 4
| |-EnumConstantDecl 0x5592e2ab3750 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592e2ab38a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab3730 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5592e2ab3710 <col:13> 'int' 5
| `-EnumConstantDecl 0x5592e2ab37e0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5592e2ab38c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2ab37c0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5592e2ab37a0 <col:14> 'int' 6
|-CXXMethodDecl 0x5592e2ab3928 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5592e2ab39c8 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab3a20 <col:30>
|-CXXMethodDecl 0x5592e2ab3b18 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5592e2ab3a58 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5592e2ab3bc0 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab3c18 <col:30>
|-CXXMethodDecl 0x5592e2ab3c88 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5592e2ab3db0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5592e2ab3f28 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5592e2ab3e60 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5592e2ab3ff0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5592e2ab40b8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5592e2ab41f8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5592e2ab4168 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5592e2ab42a0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5592e2ab43a0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5592e2ab45a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab4380 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5592e2ab4360 <col:23> 'int' 0
| |-EnumConstantDecl 0x5592e2ab4430 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5592e2ab45b8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab4410 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5592e2ab43f0 <col:45> 'int' 4
| |-EnumConstantDecl 0x5592e2ab44c0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5592e2ab45d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab44a0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5592e2ab4480 <col:24> 'int' 0
| `-EnumConstantDecl 0x5592e2ab4550 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5592e2ab45e8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2ab4530 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5592e2ab4510 <col:47> 'int' 16
|-CXXMethodDecl 0x5592e2ab4648 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5592e2ab47b8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5592e2ab46f8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5592e2ab4860 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab48b8 <col:30>
|-CXXMethodDecl 0x5592e2ab4908 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5592e2ac8290 <col:18, col:36>
|   `-ReturnStmt 0x5592e2ac8280 <col:20, col:33>
|     `-ImplicitCastExpr 0x5592e2ac8268 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5592e2ac8248 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5592e2ac8218 <col:27> '<bound member function type>' ->xanno 0x5592e2ab2968
|           `-CXXThisExpr 0x5592e2ac8208 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5592e2ab4a00 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5592e2ac83a0 <col:30, col:48>
|   `-ReturnStmt 0x5592e2ac8390 <col:32, col:45>
|     `-ImplicitCastExpr 0x5592e2ac8378 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5592e2ac8358 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5592e2ac8328 <col:39> '<bound member function type>' ->xanno 0x5592e2ab27c8
|           `-CXXThisExpr 0x5592e2ac8318 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5592e2ab4ae8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5592e2ac8538 <col:24, col:50>
|   `-ReturnStmt 0x5592e2ac8528 <col:26, col:47>
|     `-UnaryOperator 0x5592e2ac8510 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5592e2ac84f0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5592e2ac84d8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592e2ac8488 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5592e2abd7a8
|         |   `-CXXMemberCallExpr 0x5592e2ac8468 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5592e2ac8438 <col:34> '<bound member function type>' ->xanno 0x5592e2ab2968
|         |       `-CXXThisExpr 0x5592e2ac8428 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5592e2ac84b8 <col:46> 'int' 0
|-CXXMethodDecl 0x5592e2ab4bf0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5592e2ac8708 <col:36, col:62>
|   `-ReturnStmt 0x5592e2ac86f8 <col:38, col:59>
|     `-UnaryOperator 0x5592e2ac86e0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5592e2ac86c0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5592e2ac86a8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592e2ac8620 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5592e2abd7a8
|         |   `-CXXMemberCallExpr 0x5592e2ac8600 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5592e2ac85d0 <col:46> '<bound member function type>' ->xanno 0x5592e2ab27c8
|         |       `-CXXThisExpr 0x5592e2ac85c0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5592e2ac8650 <col:58> 'int' 0
|-CXXMethodDecl 0x5592e2ab4d08 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5592e2ac88a0 <col:26, col:53>
|   `-ReturnStmt 0x5592e2ac8890 <col:28, col:50>
|     `-UnaryOperator 0x5592e2ac8878 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5592e2ac8858 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5592e2ac8840 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592e2ac87f0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5592e2abdaa8
|         |   `-CXXMemberCallExpr 0x5592e2ac87d0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5592e2ac87a0 <col:36> '<bound member function type>' ->xanno 0x5592e2ab2968
|         |       `-CXXThisExpr 0x5592e2ac8790 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5592e2ac8820 <col:49> 'int' 0
|-CXXMethodDecl 0x5592e2ab4e28 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5592e2ac8a78 <col:38, col:65>
|   `-ReturnStmt 0x5592e2ac8a68 <col:40, col:62>
|     `-UnaryOperator 0x5592e2ac8a50 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5592e2ac8a30 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5592e2ac8a18 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592e2ac8988 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5592e2abdaa8
|         |   `-CXXMemberCallExpr 0x5592e2ac8968 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5592e2ac8938 <col:48> '<bound member function type>' ->xanno 0x5592e2ab27c8
|         |       `-CXXThisExpr 0x5592e2ac8928 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5592e2ac89b8 <col:61> 'int' 0
|-CXXMethodDecl 0x5592e2ab4fd8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5592e2ab4ee0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5592e2ac9148 <col:34, line:463:5>
|   |-ParenExpr 0x5592e2ac8f90 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5592e2ac8f60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2ac8bc8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2ac8b98 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2ac8ae8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2ac8ad0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2ac8a90 <col:23> 'int' lvalue ParmVar 0x5592e2ab4ee0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2ac8ab0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2ac8b78 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2ac8b48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2ac8b08 <col:33> 'int' lvalue ParmVar 0x5592e2ab4ee0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5592e2ac8b60 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5592e2ac8b28 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5592e2ac8c28 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2ac8c08 <col:56> 'int' 0
|   |   `-CallExpr 0x5592e2ac8ec0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5592e2ac8ea8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2ac8e88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2ac8f00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ac8d18 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5592e2ac8f18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ac8d48 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2ac8f30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2ac8d80 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5592e2ac8f48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2ac8e70 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2ac8e58 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2ac8e18 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5592e2ac9138 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5592e2ac9120 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5592e2ac9100 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5592e2ac90d0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592e2ac9080 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5592e2abd7a8
|         |   `-CXXMemberCallExpr 0x5592e2ac9060 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5592e2ac9030 <col:9> '<bound member function type>' ->xanno 0x5592e2ab27c8
|         |       `-CXXThisExpr 0x5592e2ac9020 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5592e2ac90e8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5592e2ac90b0 <col:21> 'int' lvalue ParmVar 0x5592e2ab4ee0 'i' 'int'
|-CXXMethodDecl 0x5592e2ab5228 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5592e2ab5098 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5592e2ab5110 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5592e2ac97d8 <col:40, line:472:5>
|   |-ParenExpr 0x5592e2ac95f0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5592e2ac95c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2ac92a0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2ac9270 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2ac91c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2ac91a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2ac9168 <col:23> 'int' lvalue ParmVar 0x5592e2ab5098 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2ac9188 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2ac9250 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2ac9220 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2ac91e0 <col:33> 'int' lvalue ParmVar 0x5592e2ab5098 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5592e2ac9238 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5592e2ac9200 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5592e2ac9300 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2ac92e0 <col:56> 'int' 0
|   |   `-CallExpr 0x5592e2ac9520 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5592e2ac9508 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2ac94e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2ac9560 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ac9370 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5592e2ac9578 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ac93a0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2ac9590 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2ac93d8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5592e2ac95a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2ac94d0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2ac94b8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2ac9478 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5592e2ac97b8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5592e2ac9760 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5592e2ac9730 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5592e2ac96e0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5592e2abd7a8
|     | |   `-CXXMemberCallExpr 0x5592e2ac96c0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5592e2ac9690 <col:2> '<bound member function type>' ->xanno 0x5592e2ab2968
|     | |       `-CXXThisExpr 0x5592e2ac9680 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5592e2ac9748 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5592e2ac9710 <col:14> 'int' lvalue ParmVar 0x5592e2ab5098 'i' 'int'
|     `-ImplicitCastExpr 0x5592e2ac97a0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2ac9780 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5592e2ab5110 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5592e2ab53e8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5592e2ab52f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5592e2ac9f58 <col:36, line:485:5>
|   |-ParenExpr 0x5592e2ac9cc0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2ac9c90 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2ac9970 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2ac9940 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2ac9850 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2ac9838 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2ac97f8 <col:23> 'int' lvalue ParmVar 0x5592e2ab52f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2ac9818 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2ac9920 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2ac9908 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2ac9870 <col:33> 'int' lvalue ParmVar 0x5592e2ab52f0 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2ac98e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2ac98d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2ac9890 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2ac98b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5592e2ac99d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2ac99b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2ac9bf0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2ac9bd8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2ac9bb8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2ac9c30 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ac9a40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5592e2ac9c48 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ac9a78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2ac9c60 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2ac9ab0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5592e2ac9c78 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2ac9ba0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2ac9b88 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2ac9b48 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5592e2ac9f48 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5592e2ac9f30 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5592e2ac9f18 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592e2ac9ee8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5592e2ac9e88 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592e2ac9e58 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592e2ac9dd0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5592e2abd680
|             |   `-CXXMemberCallExpr 0x5592e2ac9db0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592e2ac9d80 <col:61> '<bound member function type>' ->xanno 0x5592e2ab27c8
|             |       `-CXXThisExpr 0x5592e2ac9d70 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592e2ac9e70 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592e2ac9e00 <col:74> 'int' lvalue ParmVar 0x5592e2ab52f0 'i' 'int'
|-CXXMethodDecl 0x5592e2ab5638 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5592e2ab54a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592e2ab5520 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5592e2aca6a8 <col:42, line:500:5>
|   |-ParenExpr 0x5592e2aca440 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2aca410 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2aca0f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2aca0c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2ac9fd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2ac9fb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2ac9f78 <col:23> 'int' lvalue ParmVar 0x5592e2ab54a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2ac9f98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2aca0a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2aca088 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2ac9ff0 <col:33> 'int' lvalue ParmVar 0x5592e2ab54a8 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2aca068 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2aca050 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2aca010 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2aca030 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5592e2aca150 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2aca130 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2aca370 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2aca358 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2aca338 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2aca3b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2aca1c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5592e2aca3c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2aca1f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2aca3e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2aca230 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5592e2aca3f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2aca320 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2aca308 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2aca2c8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5592e2aca688 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5592e2aca638 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592e2aca608 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5592e2aca5b0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592e2aca580 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592e2aca530 <col:48, col:57> 'char [48]' lvalue ->c 0x5592e2abd680
|     |     |   `-CXXMemberCallExpr 0x5592e2aca510 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592e2aca4e0 <col:48> '<bound member function type>' ->xanno 0x5592e2ab2968
|     |     |       `-CXXThisExpr 0x5592e2aca4d0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592e2aca598 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592e2aca560 <col:61> 'int' lvalue ParmVar 0x5592e2ab54a8 'i' 'int'
|     `-ImplicitCastExpr 0x5592e2aca670 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2aca650 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5592e2ab5520 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5592e2ab57f8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5592e2ab5700 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5592e2acae08 <col:35, line:513:5>
|   |-ParenExpr 0x5592e2acab18 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2acaae8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2aca840 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2aca810 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2aca720 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2aca708 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2aca6c8 <col:23> 'int' lvalue ParmVar 0x5592e2ab5700 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2aca6e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2aca7f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2aca7d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2aca740 <col:33> 'int' lvalue ParmVar 0x5592e2ab5700 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2aca7b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2aca7a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2aca760 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2aca780 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5592e2aca8a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2aca880 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2acaa48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2acaa30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2acaa10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2acaa88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2aca910 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5592e2acaaa0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2aca948 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2acaab8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2aca980 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5592e2acaad0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2aca9f8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2aca9e0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2aca9a0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5592e2acadf8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5592e2acade0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5592e2acadc8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592e2acad98 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5592e2acad10 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592e2acace0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592e2acac90 <col:60, col:69> 'char const[48]' lvalue ->c 0x5592e2abd680
|             |   `-CXXMemberCallExpr 0x5592e2acac70 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592e2acac40 <col:60> '<bound member function type>' ->xanno 0x5592e2ab27c8
|             |       `-CXXThisExpr 0x5592e2acac30 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592e2acacf8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592e2acacc0 <col:73> 'int' lvalue ParmVar 0x5592e2ab5700 'i' 'int'
|-CXXMethodDecl 0x5592e2ab5a48 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5592e2ab58b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592e2ab5930 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5592e2acb528 <col:41, line:528:5>
|   |-ParenExpr 0x5592e2acb2b0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2acb280 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2acafa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2acaf70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2acae80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2acae68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2acae28 <col:23> 'int' lvalue ParmVar 0x5592e2ab58b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2acae48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2acaf50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2acaf38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2acaea0 <col:33> 'int' lvalue ParmVar 0x5592e2ab58b8 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2acaf18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2acaf00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2acaec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2acaee0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5592e2acb000 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2acafe0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2acb1e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2acb1c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2acb1a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2acb220 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acb070 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5592e2acb238 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acb0a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2acb250 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2acb0e0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5592e2acb268 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2acb190 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2acb178 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2acb138 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5592e2acb508 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5592e2acb4b8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592e2acb488 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5592e2acb430 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592e2acb3f0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592e2acb3a0 <col:47, col:56> 'char [48]' lvalue ->c 0x5592e2abd680
|     |     |   `-CXXMemberCallExpr 0x5592e2acb380 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592e2acb350 <col:47> '<bound member function type>' ->xanno 0x5592e2ab2968
|     |     |       `-CXXThisExpr 0x5592e2acb340 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592e2acb408 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592e2acb3d0 <col:60> 'int' lvalue ParmVar 0x5592e2ab58b8 'i' 'int'
|     `-ImplicitCastExpr 0x5592e2acb4f0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2acb4d0 <col:65> 'int16_t':'short' lvalue ParmVar 0x5592e2ab5930 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5592e2ab5c08 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5592e2ab5b10 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5592e2acbbf8 <col:36, line:541:5>
|   |-ParenExpr 0x5592e2acb998 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2acb968 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2acb6c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2acb690 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2acb5a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2acb588 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2acb548 <col:23> 'int' lvalue ParmVar 0x5592e2ab5b10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2acb568 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2acb670 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2acb658 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2acb5c0 <col:33> 'int' lvalue ParmVar 0x5592e2ab5b10 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2acb638 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2acb620 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2acb5e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2acb600 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5592e2acb720 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2acb700 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2acb8c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2acb8b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2acb890 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2acb908 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acb790 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5592e2acb920 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acb7c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2acb938 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2acb800 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5592e2acb950 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2acb878 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2acb860 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2acb820 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5592e2acbbe8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5592e2acbbd0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5592e2acbbb8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592e2acbb88 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5592e2acbb30 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592e2acbb00 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592e2acbab0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5592e2abd680
|             |   `-CXXMemberCallExpr 0x5592e2acba90 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592e2acba60 <col:61> '<bound member function type>' ->xanno 0x5592e2ab27c8
|             |       `-CXXThisExpr 0x5592e2acba50 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592e2acbb18 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592e2acbae0 <col:74> 'int' lvalue ParmVar 0x5592e2ab5b10 'i' 'int'
|-CXXMethodDecl 0x5592e2ab5dd8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5592e2ab5cc8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5592e2ab5d40 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592e2ab5e88 <col:20>
| `-OptimizeNoneAttr 0x5592e2ab5ee0 <col:30>
|-CXXMethodDecl 0x5592e2ab6018 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5592e2ab5f20 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5592e2acc2c8 <col:35, line:562:5>
|   |-ParenExpr 0x5592e2acc068 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2acc038 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2acbd90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2acbd60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2acbc70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2acbc58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2acbc18 <col:23> 'int' lvalue ParmVar 0x5592e2ab5f20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2acbc38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2acbd40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2acbd28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2acbc90 <col:33> 'int' lvalue ParmVar 0x5592e2ab5f20 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2acbd08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2acbcf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2acbcb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2acbcd0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5592e2acbdf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2acbdd0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2acbf98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2acbf80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2acbf60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2acbfd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acbe60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5592e2acbff0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acbe98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2acc008 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2acbed0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5592e2acc020 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2acbf48 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2acbf30 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2acbef0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5592e2acc2b8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5592e2acc2a0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5592e2acc288 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592e2acc258 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5592e2acc200 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592e2acc1d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592e2acc180 <col:60, col:69> 'char const[48]' lvalue ->c 0x5592e2abd680
|             |   `-CXXMemberCallExpr 0x5592e2acc160 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592e2acc130 <col:60> '<bound member function type>' ->xanno 0x5592e2ab27c8
|             |       `-CXXThisExpr 0x5592e2acc120 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592e2acc1e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592e2acc1b0 <col:73> 'int' lvalue ParmVar 0x5592e2ab5f20 'i' 'int'
|-CXXMethodDecl 0x5592e2ab6228 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5592e2ab60d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592e2ab6150 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5592e2acc9a8 <col:41, line:577:5>
|   |-ParenExpr 0x5592e2acc738 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2acc708 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2acc460 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2acc430 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2acc340 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2acc328 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2acc2e8 <col:23> 'int' lvalue ParmVar 0x5592e2ab60d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2acc308 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2acc410 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2acc3f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2acc360 <col:33> 'int' lvalue ParmVar 0x5592e2ab60d8 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2acc3d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2acc3c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2acc380 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2acc3a0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5592e2acc4c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2acc4a0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2acc668 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2acc650 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2acc630 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2acc6a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acc530 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5592e2acc6c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acc568 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2acc6d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2acc5a0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5592e2acc6f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2acc618 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2acc600 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2acc5c0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5592e2acc988 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5592e2acc938 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592e2acc908 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5592e2acc8a8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592e2acc878 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592e2acc828 <col:47, col:56> 'char [48]' lvalue ->c 0x5592e2abd680
|     |     |   `-CXXMemberCallExpr 0x5592e2acc808 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592e2acc7d8 <col:47> '<bound member function type>' ->xanno 0x5592e2ab2968
|     |     |       `-CXXThisExpr 0x5592e2acc7c8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592e2acc890 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592e2acc858 <col:60> 'int' lvalue ParmVar 0x5592e2ab60d8 'i' 'int'
|     `-ImplicitCastExpr 0x5592e2acc970 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2acc950 <col:65> 'int32_t':'int' lvalue ParmVar 0x5592e2ab6150 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5592e2ab63e8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5592e2ab62f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5592e2acd0d8 <col:36, line:591:5>
|   |-ParenExpr 0x5592e2acce18 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2accde8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2accb40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2accb10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2acca20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2acca08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2acc9c8 <col:23> 'int' lvalue ParmVar 0x5592e2ab62f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2acc9e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2accaf0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2accad8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2acca40 <col:33> 'int' lvalue ParmVar 0x5592e2ab62f0 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2accab8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2accaa0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2acca60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2acca80 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5592e2accba0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2accb80 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2accd48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2accd30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2accd10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2accd88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2accc10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5592e2accda0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2accc48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2accdb8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2accc80 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5592e2accdd0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2acccf8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2accce0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2accca0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5592e2acd0c8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5592e2acd0b0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5592e2acd098 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592e2acd068 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5592e2accfe0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592e2accfb0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592e2accf60 <col:61, col:70> 'char const[48]' lvalue ->c 0x5592e2abd680
|             |   `-CXXMemberCallExpr 0x5592e2accf40 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592e2accf10 <col:61> '<bound member function type>' ->xanno 0x5592e2ab27c8
|             |       `-CXXThisExpr 0x5592e2accf00 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592e2accfc8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592e2accf90 <col:74> 'int' lvalue ParmVar 0x5592e2ab62f0 'i' 'int'
|-CXXMethodDecl 0x5592e2ab6638 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5592e2ab64a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592e2ab6520 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5592e2acd7b8 <col:42, line:606:5>
|   |-ParenExpr 0x5592e2acd548 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592e2acd518 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2acd270 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2acd240 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2acd150 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2acd138 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2acd0f8 <col:23> 'int' lvalue ParmVar 0x5592e2ab64a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2acd118 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2acd220 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592e2acd208 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2acd170 <col:33> 'int' lvalue ParmVar 0x5592e2ab64a8 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2acd1e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2acd1d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2acd190 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592e2acd1b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5592e2acd2d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2acd2b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592e2acd478 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592e2acd460 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2acd440 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2acd4b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acd340 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5592e2acd4d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acd378 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2acd4e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2acd3b0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5592e2acd500 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2acd428 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2acd410 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2acd3d0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5592e2acd798 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5592e2acd748 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592e2acd718 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5592e2acd6b8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592e2acd688 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592e2acd638 <col:48, col:57> 'char [48]' lvalue ->c 0x5592e2abd680
|     |     |   `-CXXMemberCallExpr 0x5592e2acd618 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592e2acd5e8 <col:48> '<bound member function type>' ->xanno 0x5592e2ab2968
|     |     |       `-CXXThisExpr 0x5592e2acd5d8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592e2acd6a0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592e2acd668 <col:61> 'int' lvalue ParmVar 0x5592e2ab64a8 'i' 'int'
|     `-ImplicitCastExpr 0x5592e2acd780 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2acd760 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5592e2ab6520 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5592e2ab67d0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5592e2ab6700 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5592e2ace028 <col:33, line:620:5>
|   |-ParenExpr 0x5592e2acdda0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5592e2acdd70 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2acd9c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2acd990 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2acd830 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2acd818 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2acd7d8 <col:23> 'int' lvalue ParmVar 0x5592e2ab6700 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2acd7f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2acd970 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5592e2acd958 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2acd850 <col:33> 'int' lvalue ParmVar 0x5592e2ab6700 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2acd938 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2acd920 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2acd870 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5592e2acd8f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5592e2acd8e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5592e2acd8a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5592e2acda20 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2acda00 <col:79> 'int' 0
|   |   `-CallExpr 0x5592e2acdcd0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5592e2acdcb8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2acdc98 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2acdd10 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acdb08 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5592e2acdd28 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2acdb50 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2acdd40 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2acdb88 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5592e2acdd58 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2acdc80 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2acdc68 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2acdc28 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5592e2ace018 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5592e2ace000 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5592e2acdfe8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592e2acdfb8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5592e2acdf30 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592e2acdf00 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592e2acdeb0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5592e2abd680
|             |   `-CXXMemberCallExpr 0x5592e2acde90 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592e2acde60 <col:67> '<bound member function type>' ->xanno 0x5592e2ab27c8
|             |       `-CXXThisExpr 0x5592e2acde50 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592e2acdf18 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592e2acdee0 <col:80> 'int' lvalue ParmVar 0x5592e2ab6700 'i' 'int'
|-CXXMethodDecl 0x5592e2ab69e8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5592e2ab6890 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592e2ab6910 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5592e2ace850 <col:45, line:635:5>
|   |-ParenExpr 0x5592e2ace598 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5592e2ace568 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5592e2ace230 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592e2ace200 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592e2ace0a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592e2ace088 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592e2ace048 <col:23> 'int' lvalue ParmVar 0x5592e2ab6890 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592e2ace068 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592e2ace1e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5592e2ace1c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592e2ace0c0 <col:33> 'int' lvalue ParmVar 0x5592e2ab6890 'i' 'int'
|   |   |     `-BinaryOperator 0x5592e2ace1a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592e2ace190 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592e2ace0e0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592e2ab2bb0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5592e2ace168 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5592e2ace150 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5592e2ace118 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5592e2ace290 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592e2ace270 <col:79> 'int' 0
|   |   `-CallExpr 0x5592e2ace4c8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5592e2ace4b0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592e2ace490 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592e2ace508 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ace300 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5592e2ace520 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592e2ace348 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592e2ace538 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592e2ace380 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5592e2ace550 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592e2ace478 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592e2ace460 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592e2ace418 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5592e2ace830 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5592e2ace798 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592e2ace768 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5592e2ace708 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592e2ace6d8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592e2ace688 <col:54, col:63> 'char [48]' lvalue ->c 0x5592e2abd680
|     |     |   `-CXXMemberCallExpr 0x5592e2ace668 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592e2ace638 <col:54> '<bound member function type>' ->xanno 0x5592e2ab2968
|     |     |       `-CXXThisExpr 0x5592e2ace628 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592e2ace6f0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592e2ace6b8 <col:67> 'int' lvalue ParmVar 0x5592e2ab6890 'i' 'int'
|     `-CXXConstCastExpr 0x5592e2ace800 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5592e2ace7e8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5592e2ace7b0 <col:91> 'const void *' lvalue ParmVar 0x5592e2ab6910 'x' 'const void *'
|-CXXMethodDecl 0x5592e2ab6ab8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5592e2ace8d8 <col:34, line:640:5>
|   `-ReturnStmt 0x5592e2ace8c8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5592e2ace8b0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5592e2ace880 <col:16> 'Packet *' lvalue ->_data_packet 0x5592e2abe238
|         `-CXXThisExpr 0x5592e2ace870 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5592e2ab6bf8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5592e2ab6b68 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592e2ac7998 <col:46> 'bool' true
|-CXXMethodDecl 0x5592e2ab6d78 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5592e2ab6cb0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5592e2ab6e20 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5592e2ab75d0 <line:660:22> "" ""
| |-EnumConstantDecl 0x5592e2ab6f20 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab7640 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab6f00 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5592e2ab6ee0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5592e2aac080 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5592e2ab6fb0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab7658 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab6f90 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5592e2ab6f70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5592e2aac110 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5592e2ab7040 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab7670 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab7020 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5592e2ab7000 <col:21> 'int' 0
| |-EnumConstantDecl 0x5592e2ab70d0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab7688 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab70b0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5592e2ab7090 <col:19> 'int' 16
| |-EnumConstantDecl 0x5592e2ab7160 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab76a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab7140 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5592e2ab7120 <col:21> 'int' 16
| |-EnumConstantDecl 0x5592e2ab71f0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab76b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab71d0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5592e2ab71b0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5592e2ab7280 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab76d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab7260 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5592e2ab7240 <col:19> 'int' EnumConstant 0x5592e2ab70d0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5592e2ab7310 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab76e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab72f0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5592e2ab72d0 <col:19> 'int' EnumConstant 0x5592e2ab71f0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5592e2ab73e0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab7700 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab73c0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5592e2ab73a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5592e2ab7360 <col:23> 'int' EnumConstant 0x5592e2ab7310 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5592e2ab7380 <col:40> 'int' 2
| |-EnumConstantDecl 0x5592e2ab74b0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592e2ab7718 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2ab7490 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5592e2ab7470 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5592e2ab7430 <col:23> 'int' EnumConstant 0x5592e2ab7310 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5592e2ab7450 <col:40> 'int' 4
| `-EnumConstantDecl 0x5592e2ab7580 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5592e2ab7730 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2ab7560 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5592e2ab7540 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5592e2ab7500 <col:23> 'int' EnumConstant 0x5592e2ab7310 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5592e2ab7520 <col:40> 'int' 8
|-CXXMethodDecl 0x5592e2ab7770 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5592e2ab7810 <col:68> "" ""
|-CXXMethodDecl 0x5592e2ab78a8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5592e2ab7948 <col:45> "" ""
|-CXXMethodDecl 0x5592e2ab79e0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5592e2ab7a80 <col:57> "" ""
|-CXXMethodDecl 0x5592e2ab7b18 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5592e2ab7bb8 <col:45> "" ""
|-CXXMethodDecl 0x5592e2ab7c50 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5592e2ab7cf0 <col:57> "" ""
|-CXXMethodDecl 0x5592e2ab7d80 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5592e2ab7e20 <col:51> "" ""
|-CXXMethodDecl 0x5592e2ab7eb0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5592e2ab7f50 <col:63> "" ""
|-CXXMethodDecl 0x5592e2ab7fe0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5592e2ab8080 <col:53> "" ""
|-CXXMethodDecl 0x5592e2ab8110 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5592e2ab81b0 <col:65> "" ""
|-CXXMethodDecl 0x5592e2ab82c8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5592e2ab8238 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5592e2ab8370 <col:61> "" ""
|-CXXMethodDecl 0x5592e2ab8508 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5592e2ab83f8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5592e2ab8470 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5592e2ab85b8 <col:67> "" ""
|-CXXMethodDecl 0x5592e2ab86d0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5592e2ab8640 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5592e2ab8778 <col:63> "" ""
|-CXXMethodDecl 0x5592e2ab8910 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5592e2ab8800 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5592e2ab8878 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5592e2ab89c0 <col:69> "" ""
|-CXXMethodDecl 0x5592e2ab8ad8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5592e2ab8a48 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5592e2ab8b80 <col:63> "" ""
|-CXXMethodDecl 0x5592e2abb258 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5592e2abb148 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5592e2abb1c0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592e2abb308 <col:69> "" ""
|-CXXMethodDecl 0x5592e2abb420 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5592e2abb390 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5592e2abb4c8 <col:62> "" ""
|-CXXMethodDecl 0x5592e2abb660 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5592e2abb550 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5592e2abb5c8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5592e2abb710 <col:68> "" ""
|-CXXMethodDecl 0x5592e2abb828 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5592e2abb798 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5592e2abb8d0 <col:63> "" ""
|-CXXMethodDecl 0x5592e2abba68 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5592e2abb958 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5592e2abb9d0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5592e2abbb18 <col:69> "" ""
|-CXXMethodDecl 0x5592e2abbba8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5592e2abbc48 <col:64> "" ""
|-CXXMethodDecl 0x5592e2abbcd8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5592e2abbd78 <col:52> "" ""
|-CXXMethodDecl 0x5592e2abbe08 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5592e2abbea8 <col:67> "" ""
|-CXXMethodDecl 0x5592e2abbf38 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5592e2abbfd8 <col:55> "" ""
|-CXXMethodDecl 0x5592e2abc0f0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5592e2abc060 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5592e2abc198 <col:58> "" ""
|-CXXMethodDecl 0x5592e2abc330 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5592e2abc220 <col:33> col:36 'int'
| |-ParmVarDecl 0x5592e2abc298 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5592e2abc3e0 <col:62> "" ""
|-CXXMethodDecl 0x5592e2abc4f8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5592e2abc468 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5592e2abc5a0 <col:58> "" ""
|-CXXMethodDecl 0x5592e2abc738 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5592e2abc628 <col:33> col:36 'int'
| |-ParmVarDecl 0x5592e2abc6a0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5592e2abc7e8 <col:62> "" ""
|-CXXMethodDecl 0x5592e2abc900 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5592e2abc870 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5592e2abc9a8 <col:60> "" ""
|-CXXMethodDecl 0x5592e2abcb40 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5592e2abca30 <col:34> col:37 'int'
| |-ParmVarDecl 0x5592e2abcaa8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5592e2abcbf0 <col:64> "" ""
|-CXXMethodDecl 0x5592e2abcd08 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5592e2abcc78 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5592e2abcdb0 <col:58> "" ""
|-CXXMethodDecl 0x5592e2abcf48 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5592e2abce38 <col:33> col:36 'int'
| |-ParmVarDecl 0x5592e2abceb0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5592e2abcff8 <col:62> "" ""
|-CXXMethodDecl 0x5592e2abd110 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5592e2abd080 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5592e2abd1b8 <col:59> "" ""
|-CXXMethodDecl 0x5592e2abd350 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5592e2abd240 <col:33> col:36 'int'
| |-ParmVarDecl 0x5592e2abd2b8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592e2abd400 <col:63> "" ""
|-AccessSpecDecl 0x5592e2abd470 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5592e2abd498 prev 0x5592e2ab26a0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592e2abd590 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5592e2abd680 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5592e2abd7a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5592e2abd928 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5592e2abdaa8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5592e2abdc28 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5592e2acea58 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5592e2acf2c8 <col:11>
| |-CXXDestructorDecl 0x5592e2aceb30 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5592e2acec68 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5592e2acec68
| | `-ParmVarDecl 0x5592e2aced78 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5592e2acee18 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5592e2acee18
| | `-ParmVarDecl 0x5592e2acef28 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5592e2ad1ce8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592e2ad1df8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5592e2ad2078 <col:11>
| |   `-ReturnStmt 0x5592e2ad2068 <col:11>
| |     `-UnaryOperator 0x5592e2ad2050 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5592e2ad2040 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5592e2ad1e68 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5592e2ad1e68
|   `-ParmVarDecl 0x5592e2ad1f78 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5592e2abdc90 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592e2abdda8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5592e2abde48 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5592e2abdeb0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5592e2abdf18 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5592e2abdf80 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5592e2abdfe0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5592e2abe0a0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5592e2abe100 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5592e2abe160 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5592e2ace968 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5592e2abde48 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5592e2acf2d8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5592e2acf330 <col:12>
| |-CXXConstructorDecl 0x5592e2acef98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5592e2acef98
| | `-ParmVarDecl 0x5592e2acf0a8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5592e2acf148 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5592e2acf148
| | `-ParmVarDecl 0x5592e2acf258 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5592e2ad13d0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5592e2abe1d8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5592e2abe238 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5592e2abe2a0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5592e2abe308 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5592e2abe370 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5592e2abe3d8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5592e2abe438 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5592e2abe498 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5592e2abe500 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5592e2abe588 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5592e2abe1d8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5592e2ace900 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5592e2abe438 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5592e2acf340 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5592e2acf3a0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5592e2abe728 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5592e2abe668 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5592e2abe820 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5592e2abea08 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5592e2abe910 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5592e2abecd8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5592e2abeac0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592e2abeb38 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592e2abebb0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e2abeef8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5592e2abeda8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5592e2abee20 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5592e2ac74d8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5592e2abefb8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5592e2abf030 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5592e2abf0a8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5592e2ac7630 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5592e2ac75a0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592e2ac7778 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5592e2ac76e8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5592e2ac7870 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e2afe588 prev 0x5592e2ae4c10 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592e2afe680 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5592e2afe710 <col:22, col:28> col:22 public
|-EnumDecl 0x5592e2afe738 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5592e2afe858 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afe838 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5592e2afe820 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5592e2afe800 <col:14> 'int' 999
| |-EnumConstantDecl 0x5592e2afe900 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afe8e0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5592e2afe8c8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5592e2afe8a8 <col:14> 'int' 1
| |-EnumConstantDecl 0x5592e2afe990 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afe970 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5592e2afe950 <col:17> 'int' 0
| |-EnumConstantDecl 0x5592e2afea20 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afea00 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5592e2afe9e0 <col:13> 'int' 1
| |-EnumConstantDecl 0x5592e2afeab0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afea90 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5592e2afea70 <col:16> 'int' 2
| |-EnumConstantDecl 0x5592e2afeb40 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afeb20 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5592e2afeb00 <col:13> 'int' 3
| |-EnumConstantDecl 0x5592e2afebd0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afebb0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5592e2afeb90 <col:15> 'int' 4
| |-EnumConstantDecl 0x5592e2afec60 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afec40 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5592e2afec20 <col:14> 'int' 5
| |-EnumConstantDecl 0x5592e2afecf0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592e2afecd0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5592e2afecb0 <col:12> 'int' 6
| `-EnumConstantDecl 0x5592e2afed80 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5592e2afed60 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5592e2afed40 <col:13> 'int' 7
|-VarDecl 0x5592e2afedf0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5592e2afee78 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5592e2afef00 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5592e2afef88 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5592e2aff010 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5592e2aff098 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5592e2aff120 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5592e2aff1a8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5592e2aff230 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5592e2aff2b8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5592e2aff340 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5592e2aff440 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5592e2b064c8 '_nerrors' 'int'
| | `-IntegerLiteral 0x5592e2b06c58 <line:128:13> 'int' 0
| `-CompoundStmt 0x5592e2b06cc8 <col:16, line:129:5>
|-CXXDestructorDecl 0x5592e2aff530 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5592e2b06cd8 <col:29, line:132:5>
|-CXXMethodDecl 0x5592e2aff6e8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5592e2aff620 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2aff7b0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5592e2aff898 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5592e2b06d30 <col:44, line:161:5>
|   `-ReturnStmt 0x5592e2b06d20 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5592e2b06d08 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2b06ce8 <col:9> 'ErrorHandler *' lvalue Var 0x5592e2b06528 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2affa08 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5592e2aff948 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592e2affad0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5592e2b06d90 <col:43, line:173:5>
|   `-ReturnStmt 0x5592e2b06d80 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5592e2b06d68 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2b06d48 <col:9> 'ErrorHandler *' lvalue Var 0x5592e2b065a0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5592e2affb88 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5592e2affc08 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5592e2affd18 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5592e2affc88 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5592e2affe68 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5592e2affdd8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5592e2afffc0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5592e2afff28 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b00118 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x5592e2b00080 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b00270 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5592e2b001d8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b00480 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592e2b00328 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5592e2b003a8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b00658 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592e2b00540 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5592e2b005c0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b00878 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592e2b00718 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5592e2b00798 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b00a58 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592e2b00938 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5592e2b009b8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b00c38 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592e2b00b18 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5592e2b00b98 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b00dc0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5592e2b00cf8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5592e2b00f90 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5592e2b00e78 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5592e2b00ef0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5592e2b06fe8 <col:57, line:234:5>
|   `-ReturnStmt 0x5592e2b06fd8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5592e2b06fc0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5592e2b06f68 <col:9, col:41> 'int'
|         |-MemberExpr 0x5592e2b06f38 <col:9> '<bound member function type>' ->xmessage 0x5592e2b00dc0
|         | `-CXXThisExpr 0x5592e2b06f28 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5592e2b06fa8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5592e2b06f90 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5592e2b06f08 <col:18, col:40> 'String' (CXXTemporary 0x5592e2b06f08)
|               `-CallExpr 0x5592e2b06ed0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5592e2b06eb8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5592e2b06e30 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5592e2b03018 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5592e2b06e50 <col:31> 'const String' lvalue ParmVar 0x5592e2b00ef0 'str' 'const String &'
|                 `-DeclRefExpr 0x5592e2b06e70 <col:36> 'const String' lvalue ParmVar 0x5592e2b00e78 'anno' 'const String &'
|-CXXMethodDecl 0x5592e2b012d0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5592e2b01050 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5592e2b010d0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5592e2b011a0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5592e2b07278 <col:68, line:243:5>
|   `-ReturnStmt 0x5592e2b07268 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5592e2b07250 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5592e2b071f0 <col:9, col:41> 'int'
|         |-MemberExpr 0x5592e2b071c0 <col:9> '<bound member function type>' ->xmessage 0x5592e2b00f90
|         | `-CXXThisExpr 0x5592e2b071b0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5592e2b07088 <col:18> 'const String' lvalue ParmVar 0x5592e2b01050 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5592e2b07238 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5592e2b07220 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5592e2b07190 <col:24, col:40> 'String' (CXXTemporary 0x5592e2b07190)
|               `-CXXMemberCallExpr 0x5592e2b07128 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5592e2b070b8 <col:24> '<bound member function type>' ->vformat 0x5592e2b024b0
|                 | `-CXXThisExpr 0x5592e2b070a8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5592e2b07158 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5592e2b070e8 <col:32> 'const char *' lvalue ParmVar 0x5592e2b010d0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5592e2b07170 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5592e2b07108 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5592e2b011a0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592e2b01570 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5592e2b01398 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5592e2b01410 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5592e2b01488 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5592e2b075b8 <col:23, line:254:5>
|   `-ReturnStmt 0x5592e2b075a8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5592e2b07590 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5592e2b07530 <col:9, col:71> 'int'
|         |-MemberExpr 0x5592e2b07500 <col:9> '<bound member function type>' ->xmessage 0x5592e2b00f90
|         | `-CXXThisExpr 0x5592e2b074f0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5592e2b07578 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5592e2b07560 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5592e2b074b0 <col:18, col:65> 'String' (CXXTemporary 0x5592e2b074b0)
|         |     `-CallExpr 0x5592e2b07448 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5592e2b07430 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5592e2b07318 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5592e2b03018 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5592e2b07338 <col:31> 'const String' lvalue ParmVar 0x5592e2b01410 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5592e2b07490 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5592e2b07478 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5592e2b07410 <col:37, col:64> 'String' (CXXTemporary 0x5592e2b07410)
|         |             `-CallExpr 0x5592e2b073e0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5592e2b073c8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5592e2b07358 <col:37> 'String (const String &)' lvalue CXXMethod 0x5592e2b03668 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5592e2b07378 <col:56> 'const String' lvalue ParmVar 0x5592e2b01398 'landmark' 'const String &'
|         `-DeclRefExpr 0x5592e2b074d0 <col:68> 'const String' lvalue ParmVar 0x5592e2b01488 'str' 'const String &'
|-CXXMethodDecl 0x5592e2b018f0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5592e2b01638 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5592e2b016b0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5592e2b01730 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5592e2b017a8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5592e2b07870 <col:34, line:267:5>
|   `-ReturnStmt 0x5592e2b07860 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5592e2b07848 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5592e2b077e0 <col:9, col:51> 'int'
|         |-MemberExpr 0x5592e2b077b0 <col:9> '<bound member function type>' ->xmessage 0x5592e2b01570
|         | `-CXXThisExpr 0x5592e2b077a0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5592e2b07658 <col:18> 'const String' lvalue ParmVar 0x5592e2b01638 'landmark' 'const String &'
|         |-DeclRefExpr 0x5592e2b07678 <col:28> 'const String' lvalue ParmVar 0x5592e2b016b0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5592e2b07830 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5592e2b07818 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5592e2b07780 <col:34, col:50> 'String' (CXXTemporary 0x5592e2b07780)
|               `-CXXMemberCallExpr 0x5592e2b07718 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5592e2b076a8 <col:34> '<bound member function type>' ->vformat 0x5592e2b024b0
|                 | `-CXXThisExpr 0x5592e2b07698 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5592e2b07748 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5592e2b076d8 <col:42> 'const char *' lvalue ParmVar 0x5592e2b01730 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5592e2b07760 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5592e2b076f8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5592e2b017a8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592e2b01a00 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x5592e2b078f0 <col:25, line:288:5>
|   `-ReturnStmt 0x5592e2b078e0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5592e2b078c8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5592e2b07898 <col:9> 'const int' lvalue ->_nerrors 0x5592e2b064c8
|         `-CXXThisExpr 0x5592e2b07888 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5592e2b01c10 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5592e2b01ab8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5592e2b01b38 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b01ef8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5592e2b01cd8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5592e2b01d58 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5592e2b01dd0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592e2b02090 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5592e2b01fc8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b022d8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5592e2b02150 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5592e2b021c8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5592e2b07b50 <col:58, line:357:5>
|   `-ReturnStmt 0x5592e2b07b40 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5592e2b07b28 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5592e2b07af8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5592e2b07ae0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5592e2b07ac0 <col:9, col:29> 'String' (CXXTemporary 0x5592e2b07ac0)
|             `-CallExpr 0x5592e2b07a50 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5592e2b07a38 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5592e2b079b8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5592e2b01ef8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5592e2b07958 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5592e2b07a88 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5592e2b07978 <col:21> 'const char *' lvalue ParmVar 0x5592e2b02150 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5592e2b07aa0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5592e2b07998 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5592e2b021c8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592e2b024b0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5592e2b023a0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5592e2b02418 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592e2b02608 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5592e2b02578 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5592e2b02788 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5592e2b026c0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5592e2b02a20 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5592e2b02840 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5592e2b028c0 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5592e2b02938 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5592e2b02b80 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x5592e2b02af0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5592e2b07c68 <col:37, line:441:5>
|   `-IfStmt 0x5592e2b07c50 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5592e2b07bd8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5592e2b07ba8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5592e2b07b68 <col:6> 'int' lvalue ParmVar 0x5592e2b02af0 'level' 'int'
|     | `-ImplicitCastExpr 0x5592e2b07bc0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5592e2b07b88 <col:15> 'ErrorHandler::Level' EnumConstant 0x5592e2afeb40 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5592e2b07c38 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5592e2b07c08 <col:8> 'int' lvalue ->_nerrors 0x5592e2b064c8
|         `-CXXThisExpr 0x5592e2b07bf8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5592e2b02c48 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x5592e2b07d00 <col:26, line:448:5>
|   `-BinaryOperator 0x5592e2b07ce0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5592e2b07c90 <col:2> 'int' lvalue ->_nerrors 0x5592e2b064c8
|     | `-CXXThisExpr 0x5592e2b07c80 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5592e2b07cc0 <col:13> 'int' 0
|-CXXMethodDecl 0x5592e2b02e10 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5592e2b02d00 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5592e2b02d78 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5592e2b03018 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5592e2b02ed0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5592e2b02f48 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5592e2b032c8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5592e2b030d8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5592e2b03158 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5592e2b031d8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5592e2b03380 <col:59> 0 0
|-CXXMethodDecl 0x5592e2b03518 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5592e2b033f8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5592e2b03478 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5592e2b08370 <col:70, line:534:5>
|   |-DeclStmt 0x5592e2b07e70 <line:528:2, col:20>
|   | |-VarDecl 0x5592e2b07d28 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5592e2b07d90 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5592e2b07dc8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5592e2b07e30 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5592e2b07f40 <line:529:2, col:23>
|   | `-VarDecl 0x5592e2b07ea0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5592e2b07f28 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5592e2b07f08 <col:18> 'const char *' lvalue ParmVar 0x5592e2b033f8 'begin' 'const char *'
|   |-DoStmt 0x5592e2b08308 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5592e2b08238 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5592e2b08220 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5592e2b08200 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5592e2b07f58 <col:6> 'const char *' lvalue Var 0x5592e2b07ea0 'x' 'const char *'
|   | |     `-CallExpr 0x5592e2b08150 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5592e2b08138 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5592e2b080f0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5592e2b069a0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5592e2b081b8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5592e2b081a0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5592e2b08010 <col:20, col:27> 'String' (CXXTemporary 0x5592e2b08010)
|   | |       |     `-CXXTemporaryObjectExpr 0x5592e2b07fd8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5592e2b081d0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5592e2b08030 <col:30> 'const char *' lvalue Var 0x5592e2b07ea0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5592e2b081e8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5592e2b08050 <col:33> 'const char *' lvalue ParmVar 0x5592e2b03478 'end' 'const char *'
|   | |       |-UnaryOperator 0x5592e2b08090 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5592e2b08070 <col:39> 'String' lvalue Var 0x5592e2b07d28 'name' 'String'
|   | |       |-UnaryOperator 0x5592e2b080c8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5592e2b080a8 <col:46> 'String' lvalue Var 0x5592e2b07dc8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5592e2b080e0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5592e2b082f0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5592e2b082d8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5592e2b082b8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5592e2b08288 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5592e28b3a08
|   |         `-ImplicitCastExpr 0x5592e2b08270 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5592e2b08250 <col:11> 'String' lvalue Var 0x5592e2b07d28 'name' 'String'
|   `-ReturnStmt 0x5592e2b08360 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5592e2b08348 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5592e2b08328 <col:9> 'const char *' lvalue Var 0x5592e2b07ea0 'x' 'const char *'
|-CXXMethodDecl 0x5592e2b03668 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5592e2b035d8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5592e2b08978 <col:55, line:550:5>
|   `-IfStmt 0x5592e2b08950 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5592e2b085b0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5592e2b08598 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5592e2b08580 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5592e2b08560 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5592e2b08530 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5592e28b3a08
|     | |       `-DeclRefExpr 0x5592e2b083d0 <col:6> 'const String' lvalue ParmVar 0x5592e2b035d8 'x' 'const String &'
|     | `-BinaryOperator 0x5592e2b08510 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5592e2b084e0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5592e2b08490 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5592e2b08478 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5592e2b08430 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5592e28cd240 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5592e2b083f0 <col:11> 'const String' lvalue ParmVar 0x5592e2b035d8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5592e2b08410 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5592e2b084f8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5592e2b084c8 <col:19> 'char' 123
|     |-ReturnStmt 0x5592e2b08620 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5592e2b085f0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5592e2b085d0 <col:13> 'const String' lvalue ParmVar 0x5592e2b035d8 'x' 'const String &'
|     `-IfStmt 0x5592e2b08928 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5592e2b086b8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5592e2b086a0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5592e2b08680 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5592e2b08650 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5592e28b3a08
|       |       `-DeclRefExpr 0x5592e2b08630 <col:11> 'const String' lvalue ParmVar 0x5592e2b035d8 'x' 'const String &'
|       |-ReturnStmt 0x5592e2b08840 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5592e2b08828 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5592e2b087f8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5592e2b087e0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5592e2b087c0 <col:13, col:29> 'String' (CXXTemporary 0x5592e2b087c0)
|       |         `-CallExpr 0x5592e2b08770 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5592e2b08758 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5592e2b086d0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5592e2b02e10 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5592e2b087a0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5592e2b086f0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5592e2b08710 <col:28> 'const String' lvalue ParmVar 0x5592e2b035d8 'x' 'const String &'
|       `-ReturnStmt 0x5592e2b08918 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5592e2b08900 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5592e2b088d0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5592e2b088b8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5592e2b08898 <col:13, col:20> 'String' (CXXTemporary 0x5592e2b08898)
|                 `-CXXTemporaryObjectExpr 0x5592e2b08860 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5592e2b03868 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5592e2b03720 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5592e2b03798 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592e2b06c48 <col:71> 'bool' false
|-CXXRecordDecl 0x5592e2b03918 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5592e2b03c18 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5592e2b03bb0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5592e2b03b50 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5592e2b03b10 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5592e28b02a0 'String'
|       | `-CXXRecord 0x5592e28b0210 'String'
|       |-BuiltinType 0x5592e2585370 'int'
|       `-DecayedType 0x5592e2b01170 '__va_list_tag *' sugar
|         |-TypedefType 0x5592e2b01140 'va_list' sugar
|         | |-Typedef 0x5592e27a1350 'va_list'
|         | `-TypedefType 0x5592e27a1300 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5592e26d8f28 '__gnuc_va_list'
|         |   `-TypedefType 0x5592e26d8e90 '__builtin_va_list' sugar
|         |     |-Typedef 0x5592e25c6bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x5592e25c6b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5592e25860c0 '__va_list_tag'
|         |         `-CXXRecord 0x5592e2586028 '__va_list_tag'
|         `-PointerType 0x5592e27a6bf0 '__va_list_tag *'
|           `-RecordType 0x5592e25860c0 '__va_list_tag'
|             `-CXXRecord 0x5592e2586028 '__va_list_tag'
|-EnumDecl 0x5592e2b03c70 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5592e2b03d70 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b042d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b03d50 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5592e2b03d30 <col:16> 'int' 1
| |-EnumConstantDecl 0x5592e2b03e00 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b042e8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b03de0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5592e2b03dc0 <col:21> 'int' 2
| |-EnumConstantDecl 0x5592e2b03e90 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b04300 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b03e70 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5592e2b03e50 <col:22> 'int' 4
| |-EnumConstantDecl 0x5592e2b03f20 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b04318 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b03f00 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5592e2b03ee0 <col:17> 'int' 8
| |-EnumConstantDecl 0x5592e2b03fb0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b04330 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b03f90 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5592e2b03f70 <col:22> 'int' 16
| |-EnumConstantDecl 0x5592e2b04040 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b04348 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b04020 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5592e2b04000 <col:19> 'int' 32
| |-EnumConstantDecl 0x5592e2b040d0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b04360 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b040b0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5592e2b04090 <col:17> 'int' 64
| |-EnumConstantDecl 0x5592e2b04160 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b04378 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b04140 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5592e2b04120 <col:14> 'int' 128
| |-EnumConstantDecl 0x5592e2b041f0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592e2b04390 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592e2b041d0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5592e2b041b0 <col:16> 'int' 256
| `-EnumConstantDecl 0x5592e2b04280 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5592e2b043a8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e2b04260 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5592e2b04240 <col:12> 'int' 1024
|-CXXMethodDecl 0x5592e2b06258 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5592e2b043d0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5592e2b04470 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5592e2b063e0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5592e2b06318 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5592e2b06488 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5592e2b064c8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5592e2b06528 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5592e2b065a0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5592e2b069a0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5592e2b06618 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5592e2b06698 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5592e2b06718 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5592e2b06790 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5592e2b06808 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5592e2b06880 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5592e2b06ac8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5592e2b06ac8
| `-ParmVarDecl 0x5592e2b06bd8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5592e2b08cd8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5592e2b08cd8
  `-ParmVarDecl 0x5592e2b08de8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e28b8ca0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5592e28b8db8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5592e28b8e58 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5592e28b8eb8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5592e28b8f18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5592e28b8fc8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e28b92d0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592e28b93e8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5592e28b9490 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5592e28b94f8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5592e28b9588 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5592e28bf620 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5592e28bfa58 <col:12>
|-CXXConstructorDecl 0x5592e28bf728 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592e28bf838 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5592e28b9490 'data' 'const char *'
| | `-ImplicitCastExpr 0x5592e28c1fe0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5592e28c1fb0 <col:12> 'const char *const' lvalue .data 0x5592e28b9490
| |     `-DeclRefExpr 0x5592e28c1f90 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28bf838 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5592e28b94f8 'length' 'int'
| | `-ImplicitCastExpr 0x5592e28c2070 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5592e28c2040 <col:12> 'const int' lvalue .length 0x5592e28b94f8
| |     `-DeclRefExpr 0x5592e28c2020 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28bf838 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5592e28b9588 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5592e28c2100 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5592e28c20d0 <col:12> 'String::memo_t *const' lvalue .memo 0x5592e28b9588
| |     `-DeclRefExpr 0x5592e28c20b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28bf838 '' 'const String::rep_t &'
| `-CompoundStmt 0x5592e28c2158 <col:12>
|-CXXConstructorDecl 0x5592e28bf8d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5592e28bf8d8
| `-ParmVarDecl 0x5592e28bf9e8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5592e28c4f40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5592e28d0958 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592e28d0a68 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5592e28d0f80 <col:12>
|   |-BinaryOperator 0x5592e28d0d98 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5592e28d0d50 <col:12> 'const char *' lvalue ->data 0x5592e28b9490
|   | | `-CXXThisExpr 0x5592e28d0d40 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5592e28d0d80 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5592e28d0d10 <col:12> 'const char *const' lvalue .data 0x5592e28b9490
|   |     `-DeclRefExpr 0x5592e28d0cf0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28d0a68 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5592e28d0e60 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5592e28d0e18 <col:12> 'int' lvalue ->length 0x5592e28b94f8
|   | | `-CXXThisExpr 0x5592e28d0e08 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5592e28d0e48 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5592e28d0dd8 <col:12> 'const int' lvalue .length 0x5592e28b94f8
|   |     `-DeclRefExpr 0x5592e28d0db8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28d0a68 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5592e28d0f28 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5592e28d0ee0 <col:12> 'String::memo_t *' lvalue ->memo 0x5592e28b9588
|   | | `-CXXThisExpr 0x5592e28d0ed0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5592e28d0f10 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5592e28d0ea0 <col:12> 'String::memo_t *const' lvalue .memo 0x5592e28b9588
|   |     `-DeclRefExpr 0x5592e28d0e80 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28d0a68 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5592e28d0f70 <col:12>
|     `-UnaryOperator 0x5592e28d0f58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5592e28d0f48 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5592e28d0ad8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5592e28d0ad8
  `-ParmVarDecl 0x5592e28d0be8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592e28b0210 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592e28b0328 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5592e28b03b8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5592e28b03f8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5592e2585dc0 'const char *'
|   `-QualType 0x5592e2585311 'const char' const
|     `-BuiltinType 0x5592e2585310 'char'
|-TypedefDecl 0x5592e28b0480 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5592e28b0450 'String::const_iterator' sugar
|   |-Typedef 0x5592e28b03f8 'const_iterator'
|   `-PointerType 0x5592e2585dc0 'const char *'
|     `-QualType 0x5592e2585311 'const char' const
|       `-BuiltinType 0x5592e2585310 'char'
|-TypedefDecl 0x5592e28b05f0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5592e28b0560 'int (String::*)() const'
|   |-RecordType 0x5592e28b02a0 'String'
|   | `-CXXRecord 0x5592e28b0210 'String'
|   `-ParenType 0x5592e28b0500 'int () const' sugar
|     `-FunctionProtoType 0x5592e2884090 'int () const' const cdecl
|       `-BuiltinType 0x5592e2585370 'int'
|-TypedefDecl 0x5592e28b0658 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5592e26d8c70 'int64_t' sugar
|   |-Typedef 0x5592e25ee2d0 'int64_t'
|   `-TypedefType 0x5592e25c74d0 '__int64_t' sugar
|     |-Typedef 0x5592e25c70a8 '__int64_t'
|     `-BuiltinType 0x5592e2585390 'long'
|-TypedefDecl 0x5592e28b06c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5592e26d8b90 'uint64_t' sugar
|   |-Typedef 0x5592e25ee470 'uint64_t'
|   `-TypedefType 0x5592e25c7560 '__uint64_t' sugar
|     |-Typedef 0x5592e25c7118 '__uint64_t'
|     `-BuiltinType 0x5592e2585430 'unsigned long'
|-TypedefDecl 0x5592e28b0750 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5592e28b0720 'String::intmax_t' sugar
|   |-Typedef 0x5592e28b0658 'intmax_t'
|   `-TypedefType 0x5592e26d8c70 'int64_t' sugar
|     |-Typedef 0x5592e25ee2d0 'int64_t'
|     `-TypedefType 0x5592e25c74d0 '__int64_t' sugar
|       |-Typedef 0x5592e25c70a8 '__int64_t'
|       `-BuiltinType 0x5592e2585390 'long'
|-TypedefDecl 0x5592e28b07e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5592e28b07b0 'String::uintmax_t' sugar
|   |-Typedef 0x5592e28b06c0 'uintmax_t'
|   `-TypedefType 0x5592e26d8b90 'uint64_t' sugar
|     |-Typedef 0x5592e25ee470 'uint64_t'
|     `-TypedefType 0x5592e25c7560 '__uint64_t' sugar
|       |-Typedef 0x5592e25c7118 '__uint64_t'
|       `-BuiltinType 0x5592e2585430 'unsigned long'
|-CXXConstructorDecl 0x5592e28b08a0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5592e28b0a48 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5592e28b0988 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5592e28b0bf8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5592e28b0b38 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5592e28b0d50 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5592e28b0cc0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5592e28b0f68 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5592e28b0e18 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5592e28b0e98 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5592e28b1188 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5592e28b1038 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5592e28b10b8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5592e28b13a8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5592e28b1258 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5592e28b12d8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5592e28b15c8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5592e28b1478 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5592e28b14f8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5592e28b1758 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5592e28b1690 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5592e28b18d8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5592e28b1818 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5592e28b1a68 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5592e28b19a0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5592e28b1bc0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5592e28b1b30 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5592e28b1d18 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5592e28b1c88 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5592e28b1e70 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5592e28b1de0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5592e28b1ff8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5592e28b1f38 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5592e28b2188 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5592e28b20c0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5592e28b2318 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5592e28b2250 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5592e28b24a8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5592e28b23e0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5592e28b25a0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5592e28b26c8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5592e28b2848 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5592e28b2780 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5592e28b2998 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5592e28b2908 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5592e28b2a50 <col:63> "" ""
|-CXXMethodDecl 0x5592e28b2b98 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5592e28b2ad8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5592e28b2da8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5592e28b2c58 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5592e28b2cd8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5592e28b2fc8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5592e28b2e70 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5592e28b2ef0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5592e28b32a8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5592e28b3088 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5592e28b3108 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5592e28bf0f0 <col:55> 'int' 10
| `-ParmVarDecl 0x5592e28b3180 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592e28bf110 <col:76> 'bool' true
|-CXXMethodDecl 0x5592e28b3588 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5592e28b3370 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5592e28b33f0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5592e28bf120 <col:56> 'int' 10
| `-ParmVarDecl 0x5592e28b3468 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592e28bf140 <col:77> 'bool' true
|-CXXMethodDecl 0x5592e28b3690 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5592e28b3758 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5592e28b3820 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5592e28b38c0 <col:20>
| `-OptimizeNoneAttr 0x5592e28b3918 <col:30>
|-CXXConversionDecl 0x5592e28b3a08 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5592e28b3ad8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5592e28b3b98 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5592e28b3c88 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5592e28b3d48 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5592e28b3ec8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5592e28b3e00 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5592e28b4018 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5592e28b3f88 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5592e28b4108 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5592e28b41c8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5592e28b4418 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5592e28b4280 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5592e28b4300 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5592e28b4678 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5592e28b44e0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5592e28b4560 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5592e28b4748 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5592e28b4958 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5592e28b4800 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5592e28b4880 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5592e28b4b78 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5592e28b4a20 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5592e28b4aa0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5592e28b4d08 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5592e28b4c40 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5592e28b4df8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5592e28b4f68 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5592e28b4ea8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5592e28b5178 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5592e28b5028 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5592e28b50a8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5592e28b5390 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5592e28b5238 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5592e28b52b0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5592e28b5520 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5592e28b5450 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5592e28b5740 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5592e28b55e0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5592e28b5660 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5592e28b5890 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5592e28b5800 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5592e28b5a68 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5592e28b5950 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5592e28b59d0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5592e28b5bb8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5592e28b5b28 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5592e28b5dd0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5592e28b5c70 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5592e28b5cf0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5592e28bf150 <col:39> 'int' 0
|-CXXMethodDecl 0x5592e28b5ff0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5592e28b5e90 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5592e28b5f10 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5592e28bf170 <col:48> 'int' 0
|-CXXMethodDecl 0x5592e28b61d0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5592e28b60b0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5592e28b6130 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5592e28bf190 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5592e28b62a0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5592e28b6360 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5592e28b6420 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5592e28b64e0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5592e28b65a0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5592e28b6748 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5592e28b6650 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5592e28b68c8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5592e28b6800 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5592e28b6aa0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5592e28b6988 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5592e28b6c18 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5592e28b6b58 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5592e28b6d60 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5592e28b6cd0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5592e28b6eb0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5592e28b6e20 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5592e28b7088 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5592e28b6f70 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5592e28b6ff0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5592e28b7268 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5592e28b7150 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5592e28b71d0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5592e28b73b8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5592e28b7328 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5592e28b75c8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5592e28b7478 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5592e28b74f8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5592e28b7728 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5592e28b7690 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5592e28b7880 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5592e28b77e8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5592e28b7928 <col:57> "" ""
|-CXXMethodDecl 0x5592e28b7a38 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5592e28b79a8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5592e28b7b88 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5592e28b7af8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5592e28b7d08 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5592e28b7c40 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5592e28b7dd0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5592e28b7e90 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5592e28b7f50 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5592e28b7ff0 <col:49> "" ""
|-CXXMethodDecl 0x5592e28b8080 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5592e28b8140 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5592e28b8230 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5592e28b82f8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5592e28b83b8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5592e28b8478 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5592e28b8570 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5592e28b8638 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5592e28b8700 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5592e28b88d8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5592e28b87b8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5592e28b8838 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5592e28b8b00 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5592e28b89a0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5592e28b8a20 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5592e28b8c10 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5592e28b8c78 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5592e28b8ca0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5592e28b8db8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5592e28b8e58 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5592e28b8eb8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5592e28b8f18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5592e28b8fc8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5592e28b9030 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5592e28b9268 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5592e28b92b8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e28b9248 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5592e28b9158 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5592e28b9100 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5592e28b9140 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5592e28b9120 <col:32> 'int' 8
|-CXXRecordDecl 0x5592e28b92d0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592e28b93e8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5592e28b9490 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5592e28b94f8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5592e28b9588 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5592e28bf620 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5592e28bfa58 <col:12>
| |-CXXConstructorDecl 0x5592e28bf728 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592e28bf838 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5592e28b9490 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5592e28c1fe0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5592e28c1fb0 <col:12> 'const char *const' lvalue .data 0x5592e28b9490
| | |     `-DeclRefExpr 0x5592e28c1f90 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28bf838 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5592e28b94f8 'length' 'int'
| | | `-ImplicitCastExpr 0x5592e28c2070 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5592e28c2040 <col:12> 'const int' lvalue .length 0x5592e28b94f8
| | |     `-DeclRefExpr 0x5592e28c2020 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28bf838 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5592e28b9588 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5592e28c2100 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5592e28c20d0 <col:12> 'String::memo_t *const' lvalue .memo 0x5592e28b9588
| | |     `-DeclRefExpr 0x5592e28c20b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28bf838 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5592e28c2158 <col:12>
| |-CXXConstructorDecl 0x5592e28bf8d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5592e28bf8d8
| | `-ParmVarDecl 0x5592e28bf9e8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5592e28c4f40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5592e28d0958 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592e28d0a68 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5592e28d0f80 <col:12>
| |   |-BinaryOperator 0x5592e28d0d98 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5592e28d0d50 <col:12> 'const char *' lvalue ->data 0x5592e28b9490
| |   | | `-CXXThisExpr 0x5592e28d0d40 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5592e28d0d80 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5592e28d0d10 <col:12> 'const char *const' lvalue .data 0x5592e28b9490
| |   |     `-DeclRefExpr 0x5592e28d0cf0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28d0a68 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5592e28d0e60 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5592e28d0e18 <col:12> 'int' lvalue ->length 0x5592e28b94f8
| |   | | `-CXXThisExpr 0x5592e28d0e08 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5592e28d0e48 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5592e28d0dd8 <col:12> 'const int' lvalue .length 0x5592e28b94f8
| |   |     `-DeclRefExpr 0x5592e28d0db8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28d0a68 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5592e28d0f28 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5592e28d0ee0 <col:12> 'String::memo_t *' lvalue ->memo 0x5592e28b9588
| |   | | `-CXXThisExpr 0x5592e28d0ed0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5592e28d0f10 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5592e28d0ea0 <col:12> 'String::memo_t *const' lvalue .memo 0x5592e28b9588
| |   |     `-DeclRefExpr 0x5592e28d0e80 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592e28d0a68 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5592e28d0f70 <col:12>
| |     `-UnaryOperator 0x5592e28d0f58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5592e28d0f48 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5592e28d0ad8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5592e28d0ad8
|   `-ParmVarDecl 0x5592e28d0be8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5592e28b9600 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5592e28b9848 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5592e28b9668 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5592e28b96e8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5592e28b9760 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5592e28bf5e0 <col:79, line:261:5>
|   |-BinaryOperator 0x5592e28bf258 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5592e28bf1f0 <col:2, col:5> 'const char *' lvalue .data 0x5592e28b9490
|   | | `-MemberExpr 0x5592e28bf1c0 <col:2> 'String::rep_t' lvalue ->_r 0x5592e28b9600
|   | |   `-CXXThisExpr 0x5592e28bf1b0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5592e28bf240 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592e28bf220 <col:12> 'const char *' lvalue ParmVar 0x5592e28b9668 'data' 'const char *'
|   |-BinaryOperator 0x5592e28bf320 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5592e28bf2b8 <col:2, col:5> 'int' lvalue .length 0x5592e28b94f8
|   | | `-MemberExpr 0x5592e28bf288 <col:2> 'String::rep_t' lvalue ->_r 0x5592e28b9600
|   | |   `-CXXThisExpr 0x5592e28bf278 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5592e28bf308 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592e28bf2e8 <col:14> 'int' lvalue ParmVar 0x5592e28b96e8 'length' 'int'
|   `-IfStmt 0x5592e28bf5c8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5592e28bf440 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5592e28bf428 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5592e28bf408 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5592e28bf3e8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5592e28bf380 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5592e28b9588
|     |       | `-MemberExpr 0x5592e28bf350 <col:7> 'String::rep_t' lvalue ->_r 0x5592e28b9600
|     |       |   `-CXXThisExpr 0x5592e28bf340 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5592e28bf3d0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5592e28bf3b0 <col:17> 'String::memo_t *' lvalue ParmVar 0x5592e28b9760 'memo' 'String::memo_t *'
|     `-CallExpr 0x5592e28bf5a0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5592e28bf588 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592e28bf490 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5592e28a8278 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5592e28bf4f8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5592e28b8e58
|         `-ImplicitCastExpr 0x5592e28bf4e0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5592e28bf4c0 <col:27> 'String::memo_t *' lvalue ParmVar 0x5592e28b9760 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5592e28b9af8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5592e28b9918 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5592e28b9998 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5592e28b9a10 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5592e28b9600 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5592e28bfa68 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5592e28bfbf8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5592e28bfb60 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5592e28bfad0 <col:2> '<bound member function type>' ->assign_memo 0x5592e28b9848
|     | `-ImplicitCastExpr 0x5592e28bfb98 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5592e28bfac0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5592e28bfbb0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5592e28bfb00 <col:14> 'const char *' lvalue ParmVar 0x5592e28b9918 'data' 'const char *'
|     |-ImplicitCastExpr 0x5592e28bfbc8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5592e28bfb20 <col:20> 'int' lvalue ParmVar 0x5592e28b9998 'length' 'int'
|     `-ImplicitCastExpr 0x5592e28bfbe0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5592e28bfb40 <col:28> 'String::memo_t *' lvalue ParmVar 0x5592e28b9a10 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5592e28b9c88 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5592e28b9bc8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5592e28bfe50 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5592e28bfdd0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5592e28bfc20 <col:2> '<bound member function type>' ->assign_memo 0x5592e28b9848
|     | `-CXXThisExpr 0x5592e28bfc10 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5592e28bfe08 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5592e28bfca0 <col:14, col:19> 'const char *' lvalue .data 0x5592e28b9490
|     |   `-MemberExpr 0x5592e28bfc70 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5592e28b9600
|     |     `-DeclRefExpr 0x5592e28bfc50 <col:14> 'const String' lvalue ParmVar 0x5592e28b9bc8 'x' 'const String &'
|     |-ImplicitCastExpr 0x5592e28bfe20 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5592e28bfd20 <col:25, col:30> 'int' lvalue .length 0x5592e28b94f8
|     |   `-MemberExpr 0x5592e28bfcf0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5592e28b9600
|     |     `-DeclRefExpr 0x5592e28bfcd0 <col:25> 'const String' lvalue ParmVar 0x5592e28b9bc8 'x' 'const String &'
|     `-ImplicitCastExpr 0x5592e28bfe38 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5592e28bfda0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5592e28b9588
|         `-MemberExpr 0x5592e28bfd70 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5592e28b9600
|           `-DeclRefExpr 0x5592e28bfd50 <col:38> 'const String' lvalue ParmVar 0x5592e28b9bc8 'x' 'const String &'
|-CXXMethodDecl 0x5592e28b9d50 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5592e28c0810 <col:31, line:278:5>
|   `-IfStmt 0x5592e28c07f8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5592e28bfef0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5592e28bfed8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5592e28bfea8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5592e28b9588
|     |     `-MemberExpr 0x5592e28bfe78 <col:6> 'String::rep_t' lvalue ->_r 0x5592e28b9600
|     |       `-CXXThisExpr 0x5592e28bfe68 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5592e28c07d0 <col:15, line:277:2>
|       |-ParenExpr 0x5592e28c03a0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5592e28c0370 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5592e28c0000 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5592e28bffe8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5592e28bffd0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5592e28bff90 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5592e28b8e58
|       |   |       `-ImplicitCastExpr 0x5592e28bff78 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5592e28bff48 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5592e28b9588
|       |   |           `-MemberExpr 0x5592e28bff18 <col:27> 'String::rep_t' lvalue ->_r 0x5592e28b9600
|       |   |             `-CXXThisExpr 0x5592e28bff08 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5592e28c0060 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5592e28c0040 <col:54> 'int' 0
|       |   `-CallExpr 0x5592e28c02d0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5592e28c02b8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5592e28c0238 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592e261f4d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5592e28c0310 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5592e28c0148 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5592e28c0328 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5592e28c0178 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5592e28c0340 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5592e28c01b0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5592e28c0358 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5592e28c0220 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5592e28c0208 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5592e28c01d0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5592e28c06f0 <line:274:6, line:275:22>
|       | |-CallExpr 0x5592e28c05b0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5592e28c0598 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5592e28c0510 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5592e28a96c0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5592e28c04e0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5592e28b8e58
|       | |   `-ImplicitCastExpr 0x5592e28c04c8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5592e28c0498 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5592e28b9588
|       | |       `-MemberExpr 0x5592e28c0468 <col:40> 'String::rep_t' lvalue ->_r 0x5592e28b9600
|       | |         `-CXXThisExpr 0x5592e28c0458 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5592e28c06b0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5592e28c0698 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5592e28c05d8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5592e28be530 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5592e28c06d8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5592e28c0638 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5592e28b9588
|       |       `-MemberExpr 0x5592e28c0608 <col:15> 'String::rep_t' lvalue ->_r 0x5592e28b9600
|       |         `-CXXThisExpr 0x5592e28c05f8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5592e28c07b0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5592e28c0748 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5592e28b9588
|         | `-MemberExpr 0x5592e28c0718 <col:6> 'String::rep_t' lvalue ->_r 0x5592e28b9600
|         |   `-CXXThisExpr 0x5592e28c0708 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5592e28c0798 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5592e28c0778 <col:16> 'int' 0
|-CXXMethodDecl 0x5592e28b9fe8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5592e28b9e08 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5592e28b9e88 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5592e28b9f00 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5592e28ba0c0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5592e28ba310 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5592e28ba178 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5592e28ba1f8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5592e28ba270 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5592e28ba4f8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5592e28ba3e0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5592e28ba460 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5592e28ba5f8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5592e28c08e8 <col:41, line:286:5>
|   `-ReturnStmt 0x5592e28c08d8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5592e28c08a8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5592e28c0870 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5592e28c0858 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5592e28c0838 <col:46> 'int' 1
|-CXXMethodDecl 0x5592e28ba898 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5592e28ba6b0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5592e28ba730 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5592e28ba7b0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5592e28be530 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5592e28ba960 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5592e28be600 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5592e28be7d0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5592e28be6b8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5592e28be738 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5592e28be890 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5592e28be958 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5592e28bea58 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5592e28bead0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5592e28beb48 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5592e28bebb0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5592e28becb0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5592e28bed00 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592e28bec90 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5592e28bec70 <col:22> 'int' 14
|-CXXMethodDecl 0x5592e28bef18 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5592e28bed30 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5592e28bedb0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5592e28bee30 <col:43> col:46 'int'
|-FriendDecl 0x5592e28bf020 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5592e28bf0b0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
