
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1ce8148 prev 0x556fa1cdf8e8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1ce8240 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x556fa1ce82d0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x556fa1ce8348 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x556fa1ce8408 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x556fa1ce84d0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x556fa1ce8648 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x556fa1ce8580 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x556fa1ce86f0 <col:24>
| `-OptimizeNoneAttr 0x556fa1ce8748 <col:34>
|-CXXMethodDecl 0x556fa1ce8790 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x556fa1ce8a48 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x556fa1ce8840 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x556fa1ce88b8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x556fa1ce8938 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x556fa1ce8b00 <line:229:7, col:14> col:7 private
|-FieldDecl 0x556fa1ce8b38 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x556fa1ce8ba0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x556fa1ce8c28 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x556fa1ce8f48 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x556fa1ce8ce0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x556fa1ce8d58 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x556fa1ce8dd0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x556fa1ce8e50 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x556fa1ce9060 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x556fa1cf09d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x556fa1cf09d8
| `-ParmVarDecl 0x556fa1cf0ae8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x556fa1cf0b88 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x556fa1cf0b88
| `-ParmVarDecl 0x556fa1cf0c98 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x556fa1e07680 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1cdb160 prev 0x556fa1cdaee0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1cdb258 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x556fa1cdb2e8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x556fa1cdb348 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x556fa1cdb438 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x556fa1cdb538 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x556fa1cdb708 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x556fa1cdb5b8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x556fa1cdb630 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x556fa1cdb898 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x556fa1cdb7d0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x556fa1cdb940 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x556fa1cdba78 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x556fa1cdb9b0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x556fa1cdbc18 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x556fa1cdbb58 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x556fa1cdbdb8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x556fa1cdbcf8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x556fa1cdbe60 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x556fa1cdbf60 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x556fa1cdc040 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cdbf40 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x556fa1cdbf20 <col:26> 'int' 1
| `-EnumConstantDecl 0x556fa1cdbff0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x556fa1cdc058 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1cdbfd0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x556fa1cdbfb0 <col:44> 'int' 2
|-CXXMethodDecl 0x556fa1cdc1a0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x556fa1cdc088 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x556fa1cdc108 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x556fa1cdc2f8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x556fa1cdc268 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x556fa1cdc538 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x556fa1cdc3b8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x556fa1cdc430 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x556fa1cdc5e8 <col:20>
| `-OptimizeNoneAttr 0x556fa1cdc640 <col:30>
|-CXXMethodDecl 0x556fa1cdc748 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x556fa1cdc680 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x556fa1cdc7f0 <col:20>
| `-OptimizeNoneAttr 0x556fa1cdc848 <col:30>
|-CXXMethodDecl 0x556fa1cdc898 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x556fa1cdc960 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x556fa1cdca78 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x556fa1cdcb00 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x556fa1cdcb88 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x556fa1cdcc10 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x556fa1cdcc98 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x556fa1cdcd28 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x556fa1cdcde8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x556fa1cdce70 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x556fa1cdcef8 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x556fa1cdcf80 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x556fa1cdd008 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x556fa1cdd090 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x556fa1cdd120 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x556fa1cdd1e0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x556fa1cdd270 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x556fa1cdd3c0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x556fa1cdd328 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x556fa1cdd550 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x556fa1cdd480 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x556fa1cdd800 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x556fa1cdd608 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x556fa1cdd688 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x556fa1cdd708 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x556fa1cdd8b8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x556fa1cdd9c0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x556fa1cddc50 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cdd9a0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x556fa1cdd980 <col:33> 'int' 0
| |-EnumConstantDecl 0x556fa1cdda50 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x556fa1cddc68 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cdda30 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x556fa1cdda10 <col:32> 'int' 20
| |-EnumConstantDecl 0x556fa1cddae0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x556fa1cddc80 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cddac0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x556fa1cddaa0 <col:38> 'int' 90
| |-EnumConstantDecl 0x556fa1cddb70 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x556fa1cddc98 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cddb50 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x556fa1cddb30 <col:35> 'int' 100
| `-EnumConstantDecl 0x556fa1cddc00 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x556fa1cddcb0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1cddbe0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x556fa1cddbc0 <col:32> 'int' 2000
|-CXXMethodDecl 0x556fa1cddcf0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x556fa1cde130 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x556fa1cddfa0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x556fa1cde018 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1cde200 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x556fa1cde380 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x556fa1cde2b0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1cde588 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x556fa1cde438 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x556fa1cde4b0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1cde688 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x556fa1cde728 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x556fa1cde7f0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x556fa1cde880 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x556fa1cdeab0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cde860 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x556fa1cde840 <col:36> 'int' EnumConstant 0x556fa1cde7f0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x556fa1cde8d0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556fa1cde920 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556fa1cde970 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556fa1cde9c0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556fa1cdea10 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x556fa1cdea60 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x556fa1cdeb98 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x556fa1cdead8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x556fa1cdec60 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x556fa1cded20 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x556fa1cdede0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x556fa1cdeea0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x556fa1cdefb8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x556fa1cdf080 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x556fa1cdf200 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x556fa1cdf130 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x556fa1cdf328 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x556fa1cdf528 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x556fa1cdf3d8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x556fa1cdf458 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x556fa1cece78 <col:54, line:127:5>
|   |-ParenExpr 0x556fa1cecd28 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x556fa1ceccf8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cec9e8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x556fa1cec9c0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x556fa1cec9a8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x556fa1cec990 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x556fa1cec960 <col:31> 'Router *' lvalue ->_router 0x556fa1cea840
|   |   |         `-CXXThisExpr 0x556fa1cec950 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x556fa1ceca48 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1ceca28 <col:48> 'int' 0
|   |   `-CallExpr 0x556fa1cecc58 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cecc40 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cecc20 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cecc98 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cecab8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x556fa1ceccb0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cecad8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x556fa1ceccc8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cecb10 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x556fa1cecce0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cecc08 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cecbf0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cecba8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x556fa1cecdc0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x556fa1cecd58 <col:9> 'Router *' lvalue ->_router 0x556fa1cea840
|   | | `-CXXThisExpr 0x556fa1cecd48 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x556fa1cecda8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x556fa1cecd88 <col:19> 'Router *' lvalue ParmVar 0x556fa1cdf3d8 'r' 'Router *'
|   `-BinaryOperator 0x556fa1cece58 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x556fa1cecdf0 <col:9> 'int' lvalue ->_eindex 0x556fa1cea8a8
|     | `-CXXThisExpr 0x556fa1cecde0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x556fa1cece40 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1cece20 <col:19> 'int' lvalue ParmVar 0x556fa1cdf458 'eindex' 'int'
|-CXXMethodDecl 0x556fa1cdf6b0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x556fa1cdf5e8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x556fa1cdf780 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x556fa1cdf848 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x556fa1cdf8e8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x556fa1cdfb38 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x556fa1cdf9b0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x556fa1cdfa30 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x556fa1cdfbe8 <col:20>
| `-OptimizeNoneAttr 0x556fa1cdfc40 <col:30>
|-CXXMethodDecl 0x556fa1cdfd48 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x556fa1cdfc80 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x556fa1cdfdf0 <col:20>
| `-OptimizeNoneAttr 0x556fa1cdfe48 <col:30>
|-CXXMethodDecl 0x556fa1cdff18 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x556fa1cdfe88 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x556fa1cdffc0 <col:20>
| `-OptimizeNoneAttr 0x556fa1ce0018 <col:30>
|-CXXMethodDecl 0x556fa1ce01a8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x556fa1ce0050 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x556fa1ce00d0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x556fa1ce0338 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x556fa1ce0270 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x556fa1ce0488 <line:141:5, col:41> col:17 used input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x556fa1ce03f8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x556fa1ce05d8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x556fa1ce0548 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x556fa1ce0728 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x556fa1ce0698 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x556fa1ce09e8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x556fa1ce07e0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x556fa1ce0860 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x556fa1ce0908 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x556fa1ce0ac0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x556fa1ce0b80 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x556fa1ce0e50 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x556fa1ce0d00 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x556fa1ce0d78 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1ce0f78 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x556fa1ce1150 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x556fa1ce1030 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x556fa1ce10b0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x556fa1ce1338 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x556fa1ce1218 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x556fa1ce1298 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x556fa1ce16a8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x556fa1ce13f8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556fa1ce1470 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x556fa1ce14f0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x556fa1cec460 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x556fa1cec440 <col:106> 'int' 0
| `-ParmVarDecl 0x556fa1ce1568 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556fa1cec498 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556fa1cec478 <col:126> 'int' 0
|-CXXMethodDecl 0x556fa1ce1a48 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556fa1ce1778 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556fa1ce1810 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x556fa1ce1890 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x556fa1ce1908 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556fa1cec4d0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556fa1cec4b0 <col:114> 'int' 0
|-CXXMethodDecl 0x556fa1ce1dd8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556fa1ce1b20 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x556fa1ce1b98 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x556fa1ce1c18 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x556fa1cec4e8 <col:96> 'int' 0
| `-ParmVarDecl 0x556fa1ce1c90 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556fa1cec528 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556fa1cec508 <col:116> 'int' 0
|-CXXMethodDecl 0x556fa1ce2158 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x556fa1ce1ea8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x556fa1ce1f20 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x556fa1ce1fa0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x556fa1cec560 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x556fa1cec540 <col:109> 'int' 0
| `-ParmVarDecl 0x556fa1ce2018 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556fa1cec598 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556fa1cec578 <col:129> 'int' 0
|-CXXMethodDecl 0x556fa1ce24d8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556fa1ce2228 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x556fa1ce22a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x556fa1ce2320 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x556fa1ce2398 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556fa1cec5d0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556fa1cec5b0 <col:117> 'int' 0
|-CXXMethodDecl 0x556fa1ce2868 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556fa1ce25b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce2628 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x556fa1ce26a8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x556fa1cec5e8 <col:99> 'int' 0
| `-ParmVarDecl 0x556fa1ce2720 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556fa1cec628 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556fa1cec608 <col:119> 'int' 0
|-CXXMethodDecl 0x556fa1ce2c88 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x556fa1ce2938 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x556fa1ce29b8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x556fa1ce2a30 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x556fa1ce2ab0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x556fa1cec660 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x556fa1cec640 <col:108> 'int' 0
| `-ParmVarDecl 0x556fa1ce2b30 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x556fa1cec698 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x556fa1cec678 <col:141> 'int' 0
|-CXXMethodDecl 0x556fa1ce30a8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x556fa1ce2d60 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x556fa1ce2de0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x556fa1ce2e58 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x556fa1ce2ed8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x556fa1ce2f58 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x556fa1cec6b0 <col:121> 'int' 0
|-CXXMethodDecl 0x556fa1ce34d8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x556fa1ce3188 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x556fa1ce3208 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x556fa1ce3280 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x556fa1ce3300 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x556fa1cec6d0 <col:98> 'int' 0
| `-ParmVarDecl 0x556fa1ce3380 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x556fa1cec6f0 <col:123> 'int' 0
|-CXXMethodDecl 0x556fa1ce37a0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x556fa1ce35b0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556fa1ce3630 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x556fa1ce36b0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x556fa1cec710 <col:80> 'int' 0
|-EnumDecl 0x556fa1ce3858 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x556fa1ce3960 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556fa1ce3bf0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ce3940 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x556fa1ce3920 <col:42> 'int' 1
| |-EnumConstantDecl 0x556fa1ce39f0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556fa1ce3c08 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ce39d0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x556fa1ce39b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x556fa1ce3a80 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556fa1ce3c20 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ce3a60 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x556fa1ce3a40 <col:44> 'int' 4
| |-EnumConstantDecl 0x556fa1ce3b10 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556fa1ce3c38 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ce3af0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x556fa1ce3ad0 <col:36> 'int' 7
| `-EnumConstantDecl 0x556fa1ce3ba0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x556fa1ce3c50 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1ce3b80 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x556fa1ce3b60 <col:34> 'int' 6
|-CXXMethodDecl 0x556fa1ce3f08 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x556fa1ce3c78 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x556fa1ce3d18 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x556fa1ce3d98 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x556fa1ce3e10 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x556fa1cec7c8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x556fa1cec7b0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x556fa1cec798 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x556fa1cec778 <col:98, col:105> 'String' (CXXTemporary 0x556fa1cec778)
|           `-CXXTemporaryObjectExpr 0x556fa1cec740 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x556fa1ce41a8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x556fa1ce3fd8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x556fa1ce4050 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x556fa1ce40c8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x556fa1cec878 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x556fa1cec860 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x556fa1cec848 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x556fa1cec828 <col:94, col:101> 'String' (CXXTemporary 0x556fa1cec828)
| |         `-CXXTemporaryObjectExpr 0x556fa1cec7f0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x556fa1ced060 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x556fa1cecfd8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x556fa1cecfa8 <col:9> '<bound member function type>' ->add_task_handlers 0x556fa1ce3f08
|     | `-CXXThisExpr 0x556fa1cecf98 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x556fa1ced018 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x556fa1cecf18 <col:27> 'Task *' lvalue ParmVar 0x556fa1ce3fd8 'task' 'Task *'
|     |-ImplicitCastExpr 0x556fa1ced030 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x556fa1cecf38 <col:33> 'NotifierSignal *' lvalue ParmVar 0x556fa1ce4050 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x556fa1ced048 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x556fa1cecf58 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x556fa1ce3ba0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x556fa1cecf78 <col:62> 'const String' lvalue ParmVar 0x556fa1ce40c8 'prefix' 'const String &'
|-CXXMethodDecl 0x556fa1ce43b8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x556fa1ce4270 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x556fa1ce42e8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x556fa1cec928 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x556fa1cec910 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x556fa1cec8f8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x556fa1cec8d8 <col:70, col:77> 'String' (CXXTemporary 0x556fa1cec8d8)
| |         `-CXXTemporaryObjectExpr 0x556fa1cec8a0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x556fa1ced238 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x556fa1ced1b0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x556fa1ced180 <col:9> '<bound member function type>' ->add_task_handlers 0x556fa1ce3f08
|     | `-CXXThisExpr 0x556fa1ced170 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x556fa1ced1f0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x556fa1ced0f0 <col:27> 'Task *' lvalue ParmVar 0x556fa1ce4270 'task' 'Task *'
|     |-ImplicitCastExpr 0x556fa1ced208 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x556fa1ced110 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x556fa1ced220 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x556fa1ced130 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x556fa1ce3ba0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x556fa1ced150 <col:57> 'const String' lvalue ParmVar 0x556fa1ce42e8 'prefix' 'const String &'
|-CXXMethodDecl 0x556fa1ce4698 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x556fa1ce4480 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce4500 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce4578 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x556fa1ce4948 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x556fa1ce4768 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce47e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce4868 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x556fa1ce4c38 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x556fa1ce4a18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce4a98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce4b10 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x556fa1ce4ee8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x556fa1ce4d08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce4d88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce4e08 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x556fa1ce5198 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x556fa1ce4fb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce5038 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce50b8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x556fa1ce5448 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x556fa1ce5268 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce52e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce5360 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x556fa1ce56f8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x556fa1ce5518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce5598 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce5618 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x556fa1ce5a08 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x556fa1ce5820 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce58a0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce5920 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x556fa1ce5ce8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x556fa1ce5ad8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce5b58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce5c00 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x556fa1ce5fc8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x556fa1ce5db8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce5e38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce5ee0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x556fa1ce6230 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x556fa1ce6098 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x556fa1ce6118 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x556fa1ce6190 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x556fa1ce64d8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x556fa1ce6300 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x556fa1ce6380 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x556fa1ce63f8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x556fa1ce6788 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x556fa1ce65a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce6628 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce66a8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x556fa1ce6a38 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x556fa1ce6858 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce68d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce6950 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x556fa1ce6ce8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x556fa1ce6b08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce6b88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce6c00 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x556fa1ce6fb8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x556fa1ce6db8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce6e38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556fa1ce6ed8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x556fa1ce72e8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x556fa1ce7088 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556fa1ce7108 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x556fa1ce7180 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x556fa1ce71f8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556fa1cec940 <col:93> 'bool' false
|-CXXMethodDecl 0x556fa1ce74d0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556fa1ce73b8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x556fa1ce7438 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x556fa1ce76a8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556fa1ce7590 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x556fa1ce7610 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x556fa1ce7988 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x556fa1ce7768 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x556fa1ce77e0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x556fa1ce7860 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x556fa1ce78d8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1ce7c78 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x556fa1ce7a58 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x556fa1ce7ad0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x556fa1ce7b50 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x556fa1ce7bc8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1ce7eb0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x556fa1ce7d50 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x556fa1ce7dd0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x556fa1ce8098 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x556fa1ce7f78 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x556fa1ce7ff8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x556fa1ce8148 prev 0x556fa1cdf8e8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556fa1ce8240 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x556fa1ce82d0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x556fa1ce8348 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x556fa1ce8408 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x556fa1ce84d0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x556fa1ce8648 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x556fa1ce8580 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x556fa1ce86f0 <col:24>
| | `-OptimizeNoneAttr 0x556fa1ce8748 <col:34>
| |-CXXMethodDecl 0x556fa1ce8790 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x556fa1ce8a48 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x556fa1ce8840 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x556fa1ce88b8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x556fa1ce8938 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x556fa1ce8b00 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x556fa1ce8b38 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x556fa1ce8ba0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x556fa1ce8c28 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x556fa1ce8f48 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x556fa1ce8ce0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x556fa1ce8d58 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x556fa1ce8dd0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x556fa1ce8e50 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x556fa1ce9060 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x556fa1cf09d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x556fa1cf09d8
| | `-ParmVarDecl 0x556fa1cf0ae8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x556fa1cf0b88 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x556fa1cf0b88
| | `-ParmVarDecl 0x556fa1cf0c98 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x556fa1e07680 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556fa1ce90d8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x556fa1ce9178 <col:38> "" ""
|-CXXMethodDecl 0x556fa1ce9208 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x556fa1ce92a8 <col:44> "" ""
|-AccessSpecDecl 0x556fa1ce9318 <line:260:3, col:10> col:3 private
|-EnumDecl 0x556fa1ce9340 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x556fa1ce9440 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x556fa1ce9490 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1ce9420 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x556fa1ce9400 <col:27> 'int' 4
|-FieldDecl 0x556fa1ce9548 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x556fa1ce96f8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x556fa1ce97b0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x556fa1cea840 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x556fa1cea8a8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x556fa1cea9f8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x556fa1cea938 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x556fa1ceaba8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x556fa1ceaab8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x556fa1cead88 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x556fa1ceac68 <col:20> col:23 'int'
| `-ParmVarDecl 0x556fa1ceace8 <col:25> col:28 'int'
|-CXXMethodDecl 0x556fa1ceb030 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x556fa1ceae50 <col:23> col:26 'int'
| |-ParmVarDecl 0x556fa1ceaed0 <col:28> col:31 'int'
| `-ParmVarDecl 0x556fa1ceaf48 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x556fa1ceb0e8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x556fa1ceb1b0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x556fa1ceb200 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x556fa1ceb250 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x556fa1ceb430 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x556fa1ceb2e0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x556fa1ceb358 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1ceb6d8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x556fa1ceb4f8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x556fa1ceb578 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x556fa1ceb5f0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1ceb8f8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x556fa1ceb7a8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x556fa1ceb828 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x556fa1cebc30 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x556fa1ceb9b8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x556fa1ceba38 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x556fa1cebab0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x556fa1cebb30 <col:57> col:60 'int'
|-CXXMethodDecl 0x556fa1cebe18 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556fa1cebd00 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x556fa1cebd80 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x556fa1cebf68 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x556fa1cebed8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x556fa1cec2e8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x556fa1cec028 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x556fa1cec0a8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x556fa1cec120 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x556fa1cec1a0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x556fa1cec400 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StrideSched
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   struct StrideSched::Client * _all
       120 |   struct StrideSched::Client * _list
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StrideSched::Client
         0 |   struct StrideSched::Client ** _pprev
         8 |   struct StrideSched::Client * _next
        16 |   unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        32 |   class NotifierSignal _signal
        32 |     union NotifierSignal::vmvalue _v
        32 |       class atomic_uint32_t * v1
        32 |       struct NotifierSignal::vmpair * vm
        40 |     uint32_t _mask
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1a999f0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1a99b08 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x556fa1a99b98 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x556fa1a99c68 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x556fa1a99d50 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1a99f68 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556fa1a99e10 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9a118 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x556fa1a9a020 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x556fa1a9a260 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x556fa1a9a1d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x556fa1a9a3a8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556fa1a9a318 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9a4f0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556fa1a9a460 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9a5b8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x556fa1a9a700 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x556fa1a9a670 <col:28> col:31 'int'
|-CXXMethodDecl 0x556fa1a9a7c8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x556fa1a9a910 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x556fa1a9a880 <col:28> col:31 'int'
|-CXXMethodDecl 0x556fa1a9aa88 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x556fa1a9a9c8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9abd0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x556fa1a9ab40 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9ac98 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x556fa1a9ae58 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556fa1a9ad48 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556fa1a9adc0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9b0a8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556fa1a9af18 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556fa1a9af90 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1a9b158 <col:86> "" ""
|-CXXMethodDecl 0x556fa1a9b3c8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1a9b238 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x556fa1a9b2b0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9b578 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x556fa1a9b488 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x556fa1a9b728 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x556fa1a9b630 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x556fa1a9b9f8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1a9b7e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x556fa1a9b858 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556fa1a9b8d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9bcd8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1a9bac0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x556fa1a9bb38 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556fa1a9bbb0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1a9bd90 <col:115> "" ""
|-AccessSpecDecl 0x556fa1a9be00 <line:84:3, col:10> col:3 private
|-FieldDecl 0x556fa1a9be38 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1a9d350 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x556fa1a9d350
| `-ParmVarDecl 0x556fa1a9d458 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x556fa1a9d4f8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x556fa1a9d4f8
| `-ParmVarDecl 0x556fa1a9d608 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x556fa1ad2c38 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556fa1cc4c50 <col:7>
|-CXXConstructorDecl 0x556fa1ad2d10 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x556fa1ad2d10
| `-ParmVarDecl 0x556fa1ad2e28 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x556fa1ad2e98 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x556fa1ad2e98
| `-ParmVarDecl 0x556fa1ad2fa8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x556fa1cc7650 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1d94858 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1d94978 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x556fa1d94a18 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x556fa1d94a78 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x556fa1d9dec8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d9dec8

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1d94ae0 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1d94bf8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x556fa1d94c98 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x556fa1d94d28 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x556fa1d9ca60 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556fa1d9ce98 <col:11>
|-CXXConstructorDecl 0x556fa1d9cb68 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x556fa1d9cb68
| `-ParmVarDecl 0x556fa1d9cc78 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x556fa1d9cd18 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x556fa1d9cd18
| `-ParmVarDecl 0x556fa1d9ce28 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x556fa1d9db90 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1d92790 prev 0x556fa1cdae30 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1d92888 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x556fa1d92918 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x556fa1d92a48 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x556fa1d929c0 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x556fa1cdaec0 'NotifierSignal'
|   | `-CXXRecord 0x556fa1d92790 'NotifierSignal'
|   `-ParenType 0x556fa1d92960 'bool () const' sugar
|     `-FunctionProtoType 0x556fa1821540 'bool () const' const cdecl
|       `-BuiltinType 0x556fa17772f0 'bool'
|-CXXConstructorDecl 0x556fa1d92ad8 <line:16:5, col:27> col:12 used NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x556fa1d92d18 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x556fa1d92b90 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x556fa1d92c08 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556fa1d92ec8 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x556fa1d92e08 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x556fa1d92fc0 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x556fa1d930e8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x556fa1d931a8 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x556fa1d93268 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x556fa1d93328 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x556fa1d93418 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x556fa1d93588 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556fa1d93708 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x556fa1d93648 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x556fa1d937d0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x556fa1d93890 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x556fa1d93950 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x556fa1d93a10 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x556fa1d93cc8 <line:36:5, col:76> col:17
| `-FunctionDecl 0x556fa1d93c08 parent 0x556fa1777278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x556fa1d93ac0 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x556fa1d93b38 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x556fa1d93ee8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x556fa1d93e28 parent 0x556fa1777278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x556fa1d93d18 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x556fa1d93d90 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x556fa1d94028 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x556fa1d93f38 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x556fa1d94170 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x556fa1d940e0 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x556fa1d94438 <line:41:5, col:78> col:27
| `-FunctionDecl 0x556fa1d94378 parent 0x556fa1777278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x556fa1d94228 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x556fa1d942a0 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x556fa1d94548 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x556fa1d94488 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x556fa1d946c8 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x556fa1d94600 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x556fa1d94790 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x556fa1d94830 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x556fa1d94858 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556fa1d94978 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x556fa1d94a18 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x556fa1d94a78 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x556fa1d9dec8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d9dec8
|-CXXRecordDecl 0x556fa1d94ae0 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556fa1d94bf8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x556fa1d94c98 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x556fa1d94d28 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x556fa1d9ca60 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556fa1d9ce98 <col:11>
| |-CXXConstructorDecl 0x556fa1d9cb68 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x556fa1d9cb68
| | `-ParmVarDecl 0x556fa1d9cc78 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x556fa1d9cd18 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x556fa1d9cd18
| | `-ParmVarDecl 0x556fa1d9ce28 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x556fa1d9db90 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x556fa1d94da0 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x556fa1d94e00 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x556fa1d94e50 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x556fa1d94f50 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x556fa1d95150 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1d94f30 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x556fa1d94f10 <col:14> 'int' 1
| |-EnumConstantDecl 0x556fa1d94fe0 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x556fa1d95168 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1d94fc0 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x556fa1d94fa0 <col:30> 'int' 2
| |-EnumConstantDecl 0x556fa1d95070 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x556fa1d95180 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1d95050 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x556fa1d95030 <col:52> 'int' 4
| `-EnumConstantDecl 0x556fa1d95100 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x556fa1d95198 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1d950e0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x556fa1d950c0 <col:23> 'int' 8
|-VarDecl 0x556fa1d951c0 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x556fa1d952c8 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x556fa1d95238 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x556fa1d95490 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x556fa1d95380 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x556fa1d953f8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x556fa1d956c8 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x556fa1d95578 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x556fa1d955f0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1db2720 <../elements/standard/stridesched.hh:58:5, line:90:5> line:58:12 referenced struct Client definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x556fa1db2838 <col:5, col:12> col:12 implicit referenced struct Client
|-FieldDecl 0x556fa1db2940 <line:59:2, col:11> col:11 referenced _pprev 'StrideSched::Client **'
|-FieldDecl 0x556fa1db29a0 <line:60:2, col:10> col:10 referenced _next 'StrideSched::Client *'
|-FieldDecl 0x556fa1db2a08 <line:61:2, col:11> col:11 referenced _pass 'unsigned int'
|-FieldDecl 0x556fa1db2a70 <line:62:2, col:11> col:11 referenced _stride 'unsigned int'
|-FieldDecl 0x556fa1db2ad8 <line:63:2, col:6> col:6 referenced _tickets 'int'
|-FieldDecl 0x556fa1db2b38 <line:64:2, col:17> col:17 _signal 'NotifierSignal'
|-CXXConstructorDecl 0x556fa1db2bc0 <line:66:2, line:68:2> line:66:2 Client 'void ()'
| |-CXXCtorInitializer Field 0x556fa1db2940 '_pprev' 'StrideSched::Client **'
| | `-ImplicitCastExpr 0x556fa1db4420 <line:67:15> 'StrideSched::Client **' <NullToPointer>
| |   `-IntegerLiteral 0x556fa1db43e0 <col:15> 'int' 0
| |-CXXCtorInitializer Field 0x556fa1db29a0 '_next' 'StrideSched::Client *'
| | `-ImplicitCastExpr 0x556fa1db44a0 <col:25> 'StrideSched::Client *' <NullToPointer>
| |   `-IntegerLiteral 0x556fa1db4460 <col:25> 'int' 0
| |-CXXCtorInitializer Field 0x556fa1db2a08 '_pass' 'unsigned int'
| | `-ImplicitCastExpr 0x556fa1db4520 <col:35> 'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556fa1db44e0 <col:35> 'int' 0
| |-CXXCtorInitializer Field 0x556fa1db2a70 '_stride' 'unsigned int'
| | `-ImplicitCastExpr 0x556fa1db45a0 <col:47> 'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556fa1db4560 <col:47> 'int' 0
| |-CXXCtorInitializer Field 0x556fa1db2ad8 '_tickets' 'int'
| | `-UnaryOperator 0x556fa1db4600 <col:60, col:61> 'int' prefix '-'
| |   `-IntegerLiteral 0x556fa1db45e0 <col:61> 'int' 1
| |-CXXCtorInitializer Field 0x556fa1db2b38 '_signal' 'NotifierSignal'
| | `-CXXConstructExpr 0x556fa1db4660 <line:66:2> 'NotifierSignal' 'void ()'
| `-CompoundStmt 0x556fa1db46e0 <line:67:64, line:68:2>
|-CXXMethodDecl 0x556fa1db2d10 <line:70:2, line:73:2> line:70:7 set_tickets 'void (int)'
| |-ParmVarDecl 0x556fa1db2c80 <col:19, col:23> col:23 used t 'int'
| `-CompoundStmt 0x556fa1db4930 <col:26, line:73:2>
|   |-BinaryOperator 0x556fa1db4768 <line:71:6, col:17> 'int' lvalue '='
|   | |-MemberExpr 0x556fa1db4700 <col:6> 'int' lvalue ->_tickets 0x556fa1db2ad8
|   | | `-CXXThisExpr 0x556fa1db46f0 <col:6> 'StrideSched::Client *' implicit this
|   | `-ImplicitCastExpr 0x556fa1db4750 <col:17> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556fa1db4730 <col:17> 'int' lvalue ParmVar 0x556fa1db2c80 't' 'int'
|   `-BinaryOperator 0x556fa1db4910 <line:72:6, col:34> 'unsigned int' lvalue '='
|     |-MemberExpr 0x556fa1db4798 <col:6> 'unsigned int' lvalue ->_stride 0x556fa1db2a70
|     | `-CXXThisExpr 0x556fa1db4788 <col:6> 'StrideSched::Client *' implicit this
|     `-ImplicitCastExpr 0x556fa1db48f8 <col:16, col:34> 'unsigned int' <IntegralCast>
|       `-ConditionalOperator 0x556fa1db48c8 <col:16, col:34> 'int'
|         |-ImplicitCastExpr 0x556fa1db48b0 <col:16> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x556fa1db4898 <col:16> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x556fa1db47c8 <col:16> 'int' lvalue ParmVar 0x556fa1db2c80 't' 'int'
|         |-BinaryOperator 0x556fa1db4858 <col:20, col:30> 'int' '/'
|         | |-ImplicitCastExpr 0x556fa1db4828 <col:20> 'int' <IntegralCast>
|         | | `-DeclRefExpr 0x556fa1db47e8 <col:20> 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)' EnumConstant 0x556fa1db20c0 'STRIDE1' 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)'
|         | `-ImplicitCastExpr 0x556fa1db4840 <col:30> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x556fa1db4808 <col:30> 'int' lvalue ParmVar 0x556fa1db2c80 't' 'int'
|         `-IntegerLiteral 0x556fa1db4878 <col:34> 'int' 0
|-CXXMethodDecl 0x556fa1db2dd8 <line:74:2, line:76:2> line:74:7 stride 'void ()'
| `-CompoundStmt 0x556fa1db4a18 <col:16, line:76:2>
|   `-CompoundAssignOperator 0x556fa1db49e8 <line:75:6, col:15> 'unsigned int' lvalue '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     |-MemberExpr 0x556fa1db4960 <col:6> 'unsigned int' lvalue ->_pass 0x556fa1db2a08
|     | `-CXXThisExpr 0x556fa1db4950 <col:6> 'StrideSched::Client *' implicit this
|     `-ImplicitCastExpr 0x556fa1db49d0 <col:15> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x556fa1db49a0 <col:15> 'unsigned int' lvalue ->_stride 0x556fa1db2a70
|         `-CXXThisExpr 0x556fa1db4990 <col:15> 'StrideSched::Client *' implicit this
|-CXXMethodDecl 0x556fa1db2f58 <line:78:2, line:85:2> line:78:7 insert 'void (StrideSched::Client **)'
| |-ParmVarDecl 0x556fa1db2e90 <col:14, col:23> col:23 used list 'StrideSched::Client **'
| `-CompoundStmt 0x556fa1db5170 <col:29, line:85:2>
|   |-BinaryOperator 0x556fa1db4aa8 <line:79:6, col:15> 'StrideSched::Client **' lvalue '='
|   | |-MemberExpr 0x556fa1db4a40 <col:6> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
|   | | `-CXXThisExpr 0x556fa1db4a30 <col:6> 'StrideSched::Client *' implicit this
|   | `-ImplicitCastExpr 0x556fa1db4a90 <col:15> 'StrideSched::Client **' <LValueToRValue>
|   |   `-DeclRefExpr 0x556fa1db4a70 <col:15> 'StrideSched::Client **' lvalue ParmVar 0x556fa1db2e90 'list' 'StrideSched::Client **'
|   |-WhileStmt 0x556fa1db4f30 <line:80:6, line:81:20>
|   | |-BinaryOperator 0x556fa1db4e10 <line:80:13, col:66> 'bool' '&&'
|   | | |-ImplicitCastExpr 0x556fa1db4df8 <col:13, col:29> 'bool' <PointerToBoolean>
|   | | | `-ImplicitCastExpr 0x556fa1db4de0 <col:13, col:29> 'StrideSched::Client *' <LValueToRValue>
|   | | |   `-ParenExpr 0x556fa1db4bb0 <col:13, col:29> 'StrideSched::Client *' lvalue
|   | | |     `-BinaryOperator 0x556fa1db4b90 <col:14, col:23> 'StrideSched::Client *' lvalue '='
|   | | |       |-MemberExpr 0x556fa1db4ad8 <col:14> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|   | | |       | `-CXXThisExpr 0x556fa1db4ac8 <col:14> 'StrideSched::Client *' implicit this
|   | | |       `-ImplicitCastExpr 0x556fa1db4b78 <col:22, col:23> 'StrideSched::Client *' <LValueToRValue>
|   | | |         `-UnaryOperator 0x556fa1db4b60 <col:22, col:23> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
|   | | |           `-ImplicitCastExpr 0x556fa1db4b48 <col:23> 'StrideSched::Client **' <LValueToRValue>
|   | | |             `-MemberExpr 0x556fa1db4b18 <col:23> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
|   | | |               `-CXXThisExpr 0x556fa1db4b08 <col:23> 'StrideSched::Client *' implicit this
|   | | `-ParenExpr 0x556fa1db4dc0 <col:34, col:66> 'bool'
|   | |   `-BinaryOperator 0x556fa1db4da0 <col:35, col:65> 'bool' '>'
|   | |     |-CStyleCastExpr 0x556fa1db4d58 <col:35, col:61> 'int' <NoOp>
|   | |     | `-ImplicitCastExpr 0x556fa1db4d40 <col:40, col:61> 'int' <IntegralCast> part_of_explicit_cast
|   | |     |   `-ParenExpr 0x556fa1db4d20 <col:40, col:61> 'unsigned int'
|   | |     |     `-BinaryOperator 0x556fa1db4cc8 <col:41, col:56> 'unsigned int' '-'
|   | |     |       |-ImplicitCastExpr 0x556fa1db4c98 <col:41> 'unsigned int' <LValueToRValue>
|   | |     |       | `-MemberExpr 0x556fa1db4be0 <col:41> 'unsigned int' lvalue ->_pass 0x556fa1db2a08
|   | |     |       |   `-CXXThisExpr 0x556fa1db4bd0 <col:41> 'StrideSched::Client *' implicit this
|   | |     |       `-ImplicitCastExpr 0x556fa1db4cb0 <col:49, col:56> 'unsigned int' <LValueToRValue>
|   | |     |         `-MemberExpr 0x556fa1db4c68 <col:49, col:56> 'unsigned int' lvalue ->_pass 0x556fa1db2a08
|   | |     |           `-ImplicitCastExpr 0x556fa1db4c50 <col:49> 'StrideSched::Client *' <LValueToRValue>
|   | |     |             `-MemberExpr 0x556fa1db4c20 <col:49> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|   | |     |               `-CXXThisExpr 0x556fa1db4c10 <col:49> 'StrideSched::Client *' implicit this
|   | |     `-IntegerLiteral 0x556fa1db4d80 <col:65> 'int' 0
|   | `-BinaryOperator 0x556fa1db4f10 <line:81:3, col:20> 'StrideSched::Client **' lvalue '='
|   |   |-MemberExpr 0x556fa1db4e40 <col:3> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
|   |   | `-CXXThisExpr 0x556fa1db4e30 <col:3> 'StrideSched::Client *' implicit this
|   |   `-UnaryOperator 0x556fa1db4ef8 <col:12, col:20> 'StrideSched::Client **' prefix '&' cannot overflow
|   |     `-MemberExpr 0x556fa1db4ec8 <col:13, col:20> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|   |       `-ImplicitCastExpr 0x556fa1db4eb0 <col:13> 'StrideSched::Client *' <LValueToRValue>
|   |         `-MemberExpr 0x556fa1db4e80 <col:13> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|   |           `-CXXThisExpr 0x556fa1db4e70 <col:13> 'StrideSched::Client *' implicit this
|   |-BinaryOperator 0x556fa1db4fc8 <line:82:6, col:16> 'StrideSched::Client *' lvalue '='
|   | |-UnaryOperator 0x556fa1db4fa0 <col:6, col:7> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x556fa1db4f88 <col:7> 'StrideSched::Client **' <LValueToRValue>
|   | |   `-MemberExpr 0x556fa1db4f58 <col:7> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
|   | |     `-CXXThisExpr 0x556fa1db4f48 <col:7> 'StrideSched::Client *' implicit this
|   | `-CXXThisExpr 0x556fa1db4fb8 <col:16> 'StrideSched::Client *' this
|   `-IfStmt 0x556fa1db5158 <line:83:6, line:84:20>
|     |-ImplicitCastExpr 0x556fa1db5040 <line:83:10> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556fa1db5028 <col:10> 'StrideSched::Client *' <LValueToRValue>
|     |   `-MemberExpr 0x556fa1db4ff8 <col:10> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|     |     `-CXXThisExpr 0x556fa1db4fe8 <col:10> 'StrideSched::Client *' implicit this
|     `-BinaryOperator 0x556fa1db5138 <line:84:3, col:20> 'StrideSched::Client **' lvalue '='
|       |-MemberExpr 0x556fa1db50b0 <col:3, col:10> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
|       | `-ImplicitCastExpr 0x556fa1db5098 <col:3> 'StrideSched::Client *' <LValueToRValue>
|       |   `-MemberExpr 0x556fa1db5068 <col:3> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|       |     `-CXXThisExpr 0x556fa1db5058 <col:3> 'StrideSched::Client *' implicit this
|       `-UnaryOperator 0x556fa1db5120 <col:19, col:20> 'StrideSched::Client **' prefix '&' cannot overflow
|         `-MemberExpr 0x556fa1db50f0 <col:20> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|           `-CXXThisExpr 0x556fa1db50e0 <col:20> 'StrideSched::Client *' implicit this
|-CXXMethodDecl 0x556fa1db3020 <line:86:2, line:89:2> line:86:7 remove 'void ()'
| `-CompoundStmt 0x556fa1dbe5d0 <col:16, line:89:2>
|   `-IfStmt 0x556fa1dbe5b8 <line:87:6, line:88:19>
|     |-ImplicitCastExpr 0x556fa1db52c0 <line:87:10, col:26> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556fa1db52a8 <col:10, col:26> 'StrideSched::Client *' <LValueToRValue>
|     |   `-ParenExpr 0x556fa1db5288 <col:10, col:26> 'StrideSched::Client *' lvalue
|     |     `-BinaryOperator 0x556fa1db5268 <col:11, col:21> 'StrideSched::Client *' lvalue '='
|     |       |-UnaryOperator 0x556fa1db51f8 <col:11, col:12> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
|     |       | `-ImplicitCastExpr 0x556fa1db51e0 <col:12> 'StrideSched::Client **' <LValueToRValue>
|     |       |   `-MemberExpr 0x556fa1db51b0 <col:12> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
|     |       |     `-CXXThisExpr 0x556fa1db51a0 <col:12> 'StrideSched::Client *' implicit this
|     |       `-ImplicitCastExpr 0x556fa1db5250 <col:21> 'StrideSched::Client *' <LValueToRValue>
|     |         `-MemberExpr 0x556fa1db5220 <col:21> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|     |           `-CXXThisExpr 0x556fa1db5210 <col:21> 'StrideSched::Client *' implicit this
|     `-BinaryOperator 0x556fa1dbe598 <line:88:3, col:19> 'StrideSched::Client **' lvalue '='
|       |-MemberExpr 0x556fa1dbe510 <col:3, col:10> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
|       | `-ImplicitCastExpr 0x556fa1db5318 <col:3> 'StrideSched::Client *' <LValueToRValue>
|       |   `-MemberExpr 0x556fa1db52e8 <col:3> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
|       |     `-CXXThisExpr 0x556fa1db52d8 <col:3> 'StrideSched::Client *' implicit this
|       `-ImplicitCastExpr 0x556fa1dbe580 <col:19> 'StrideSched::Client **' <LValueToRValue>
|         `-MemberExpr 0x556fa1dbe550 <col:19> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
|           `-CXXThisExpr 0x556fa1dbe540 <col:19> 'StrideSched::Client *' implicit this
|-CXXConstructorDecl 0x556fa1db30e8 <line:58:12> col:12 implicit Client 'void (const StrideSched::Client &)' inline default noexcept-unevaluated 0x556fa1db30e8
| `-ParmVarDecl 0x556fa1db31f8 <col:12> col:12 'const StrideSched::Client &'
|-CXXConstructorDecl 0x556fa1db3298 <col:12> col:12 implicit Client 'void (StrideSched::Client &&)' inline default noexcept-unevaluated 0x556fa1db3298
| `-ParmVarDecl 0x556fa1db33a8 <col:12> col:12 'StrideSched::Client &&'
|-CXXMethodDecl 0x556fa1db3448 <col:12> col:12 implicit operator= 'StrideSched::Client &(StrideSched::Client &&)' inline default noexcept-unevaluated 0x556fa1db3448
| `-ParmVarDecl 0x556fa1db3558 <col:12> col:12 'StrideSched::Client &&'
`-CXXDestructorDecl 0x556fa1db35e0 <col:12> col:12 implicit ~Client 'void ()' inline default noexcept-unevaluated 0x556fa1db35e0

Layout: <CGRecordLayout
  LLVMType:%"struct.StrideSched::Client" = type { %"struct.StrideSched::Client"**, %"struct.StrideSched::Client"*, i32, i32, i32, [4 x i8], %class.NotifierSignal }
  NonVirtualBaseLLVMType:%"struct.StrideSched::Client" = type { %"struct.StrideSched::Client"**, %"struct.StrideSched::Client"*, i32, i32, i32, [4 x i8], %class.NotifierSignal }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1db1208 <../elements/standard/stridesched.hh:35:1, line:100:1> line:35:7 referenced class StrideSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x556fa1db1368 <col:1, col:7> col:7 implicit referenced class StrideSched
|-AccessSpecDecl 0x556fa1db13f8 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x556fa1db1480 <line:37:5, col:17> col:5 used StrideSched 'void ()'
|-CXXMethodDecl 0x556fa1db1580 <line:39:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x556fa1cdc898 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x556fa1db41f0 <col:36, col:60>
|   `-ReturnStmt 0x556fa1db41e0 <col:38, col:45>
|     `-ImplicitCastExpr 0x556fa1db41c8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556fa1db41a0 <col:45> 'const char [12]' lvalue "StrideSched"
|-CXXMethodDecl 0x556fa1db1648 <line:40:5, col:53> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x556fa1cdc960 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x556fa1db42d0 <col:36, col:53>
|   `-ReturnStmt 0x556fa1db42c0 <col:38, col:45>
|     `-ImplicitCastExpr 0x556fa1db42a8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556fa1db4288 <col:45> 'const char [5]' lvalue "1-/1"
|-CXXMethodDecl 0x556fa1db1710 <line:41:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x556fa1cdcd28 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x556fa1db4330 <col:36, col:51>
|   `-ReturnStmt 0x556fa1db4320 <col:38, col:45>
|     `-ImplicitCastExpr 0x556fa1db4308 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x556fa1db42e8 <col:45> 'const char []' lvalue Var 0x556fa1cdcef8 'PULL' 'const char []'
|-CXXMethodDecl 0x556fa1db17d8 <line:42:5, col:46> col:17 flags 'const char *() const'
| |-Overrides: [ 0x556fa1cdd270 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x556fa1db4390 <col:31, col:46>
|   `-ReturnStmt 0x556fa1db4380 <col:33, col:40>
|     `-ImplicitCastExpr 0x556fa1db4368 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556fa1db4348 <col:40> 'const char [3]' lvalue "S0"
|-CXXMethodDecl 0x556fa1db1ab0 <line:44:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x556fa1cde130 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x556fa1db1960 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x556fa1db19d8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1db1b80 <line:45:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x556fa1ce0b80 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x556fa1db43c8 <col:39, col:54>
|   `-ReturnStmt 0x556fa1db43b8 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x556fa1db43a8 <col:48> 'bool' true
|-CXXMethodDecl 0x556fa1db1cc8 <line:46:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x556fa1cde380 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x556fa1db1c30 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1db1e10 <line:47:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x556fa1cdeb98 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x556fa1db1d80 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x556fa1db1ed8 <line:48:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x556fa1cde200 Element::add_handlers 'void ()' ]
|-EnumDecl 0x556fa1db1f78 <line:50:5, col:51> col:5
| |-EnumConstantDecl 0x556fa1db20c0 <col:12, col:26> col:12 referenced STRIDE1 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)'
| | `-ConstantExpr 0x556fa1db20a0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x556fa1db2080 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x556fa1db2040 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x556fa1db2060 <col:26> 'int' 16
| `-EnumConstantDecl 0x556fa1db2190 <col:30, col:48> col:30 MAX_TICKETS 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)'
|   `-ConstantExpr 0x556fa1db2170 <col:44, col:48> 'unsigned int' Int: 32768
|     `-BinaryOperator 0x556fa1db2150 <col:44, col:48> 'unsigned int' '<<'
|       |-IntegerLiteral 0x556fa1db2110 <col:44> 'unsigned int' 1
|       `-IntegerLiteral 0x556fa1db2130 <col:48> 'int' 15
|-CXXMethodDecl 0x556fa1db2290 <line:51:5, col:22> col:9 tickets 'int (int) const'
| `-ParmVarDecl 0x556fa1db21f8 <col:17> col:20 'int'
|-CXXMethodDecl 0x556fa1db24f0 <line:52:5, col:45> col:9 set_tickets 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x556fa1db2350 <col:21> col:24 'int'
| |-ParmVarDecl 0x556fa1db23d0 <col:26> col:29 'int'
| `-ParmVarDecl 0x556fa1db2448 <col:31, col:44> col:45 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1db2650 <line:54:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x556fa1cdb898 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x556fa1db25c0 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x556fa1db26f8 <line:56:3, col:12> col:3 protected
|-CXXRecordDecl 0x556fa1db2720 <line:58:5, line:90:5> line:58:12 referenced struct Client definition
| |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x556fa1db2838 <col:5, col:12> col:12 implicit referenced struct Client
| |-FieldDecl 0x556fa1db2940 <line:59:2, col:11> col:11 referenced _pprev 'StrideSched::Client **'
| |-FieldDecl 0x556fa1db29a0 <line:60:2, col:10> col:10 referenced _next 'StrideSched::Client *'
| |-FieldDecl 0x556fa1db2a08 <line:61:2, col:11> col:11 referenced _pass 'unsigned int'
| |-FieldDecl 0x556fa1db2a70 <line:62:2, col:11> col:11 referenced _stride 'unsigned int'
| |-FieldDecl 0x556fa1db2ad8 <line:63:2, col:6> col:6 referenced _tickets 'int'
| |-FieldDecl 0x556fa1db2b38 <line:64:2, col:17> col:17 _signal 'NotifierSignal'
| |-CXXConstructorDecl 0x556fa1db2bc0 <line:66:2, line:68:2> line:66:2 Client 'void ()'
| | |-CXXCtorInitializer Field 0x556fa1db2940 '_pprev' 'StrideSched::Client **'
| | | `-ImplicitCastExpr 0x556fa1db4420 <line:67:15> 'StrideSched::Client **' <NullToPointer>
| | |   `-IntegerLiteral 0x556fa1db43e0 <col:15> 'int' 0
| | |-CXXCtorInitializer Field 0x556fa1db29a0 '_next' 'StrideSched::Client *'
| | | `-ImplicitCastExpr 0x556fa1db44a0 <col:25> 'StrideSched::Client *' <NullToPointer>
| | |   `-IntegerLiteral 0x556fa1db4460 <col:25> 'int' 0
| | |-CXXCtorInitializer Field 0x556fa1db2a08 '_pass' 'unsigned int'
| | | `-ImplicitCastExpr 0x556fa1db4520 <col:35> 'unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x556fa1db44e0 <col:35> 'int' 0
| | |-CXXCtorInitializer Field 0x556fa1db2a70 '_stride' 'unsigned int'
| | | `-ImplicitCastExpr 0x556fa1db45a0 <col:47> 'unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x556fa1db4560 <col:47> 'int' 0
| | |-CXXCtorInitializer Field 0x556fa1db2ad8 '_tickets' 'int'
| | | `-UnaryOperator 0x556fa1db4600 <col:60, col:61> 'int' prefix '-'
| | |   `-IntegerLiteral 0x556fa1db45e0 <col:61> 'int' 1
| | |-CXXCtorInitializer Field 0x556fa1db2b38 '_signal' 'NotifierSignal'
| | | `-CXXConstructExpr 0x556fa1db4660 <line:66:2> 'NotifierSignal' 'void ()'
| | `-CompoundStmt 0x556fa1db46e0 <line:67:64, line:68:2>
| |-CXXMethodDecl 0x556fa1db2d10 <line:70:2, line:73:2> line:70:7 set_tickets 'void (int)'
| | |-ParmVarDecl 0x556fa1db2c80 <col:19, col:23> col:23 used t 'int'
| | `-CompoundStmt 0x556fa1db4930 <col:26, line:73:2>
| |   |-BinaryOperator 0x556fa1db4768 <line:71:6, col:17> 'int' lvalue '='
| |   | |-MemberExpr 0x556fa1db4700 <col:6> 'int' lvalue ->_tickets 0x556fa1db2ad8
| |   | | `-CXXThisExpr 0x556fa1db46f0 <col:6> 'StrideSched::Client *' implicit this
| |   | `-ImplicitCastExpr 0x556fa1db4750 <col:17> 'int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x556fa1db4730 <col:17> 'int' lvalue ParmVar 0x556fa1db2c80 't' 'int'
| |   `-BinaryOperator 0x556fa1db4910 <line:72:6, col:34> 'unsigned int' lvalue '='
| |     |-MemberExpr 0x556fa1db4798 <col:6> 'unsigned int' lvalue ->_stride 0x556fa1db2a70
| |     | `-CXXThisExpr 0x556fa1db4788 <col:6> 'StrideSched::Client *' implicit this
| |     `-ImplicitCastExpr 0x556fa1db48f8 <col:16, col:34> 'unsigned int' <IntegralCast>
| |       `-ConditionalOperator 0x556fa1db48c8 <col:16, col:34> 'int'
| |         |-ImplicitCastExpr 0x556fa1db48b0 <col:16> 'bool' <IntegralToBoolean>
| |         | `-ImplicitCastExpr 0x556fa1db4898 <col:16> 'int' <LValueToRValue>
| |         |   `-DeclRefExpr 0x556fa1db47c8 <col:16> 'int' lvalue ParmVar 0x556fa1db2c80 't' 'int'
| |         |-BinaryOperator 0x556fa1db4858 <col:20, col:30> 'int' '/'
| |         | |-ImplicitCastExpr 0x556fa1db4828 <col:20> 'int' <IntegralCast>
| |         | | `-DeclRefExpr 0x556fa1db47e8 <col:20> 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)' EnumConstant 0x556fa1db20c0 'STRIDE1' 'StrideSched::(anonymous enum at ../elements/standard/stridesched.hh:50:5)'
| |         | `-ImplicitCastExpr 0x556fa1db4840 <col:30> 'int' <LValueToRValue>
| |         |   `-DeclRefExpr 0x556fa1db4808 <col:30> 'int' lvalue ParmVar 0x556fa1db2c80 't' 'int'
| |         `-IntegerLiteral 0x556fa1db4878 <col:34> 'int' 0
| |-CXXMethodDecl 0x556fa1db2dd8 <line:74:2, line:76:2> line:74:7 stride 'void ()'
| | `-CompoundStmt 0x556fa1db4a18 <col:16, line:76:2>
| |   `-CompoundAssignOperator 0x556fa1db49e8 <line:75:6, col:15> 'unsigned int' lvalue '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
| |     |-MemberExpr 0x556fa1db4960 <col:6> 'unsigned int' lvalue ->_pass 0x556fa1db2a08
| |     | `-CXXThisExpr 0x556fa1db4950 <col:6> 'StrideSched::Client *' implicit this
| |     `-ImplicitCastExpr 0x556fa1db49d0 <col:15> 'unsigned int' <LValueToRValue>
| |       `-MemberExpr 0x556fa1db49a0 <col:15> 'unsigned int' lvalue ->_stride 0x556fa1db2a70
| |         `-CXXThisExpr 0x556fa1db4990 <col:15> 'StrideSched::Client *' implicit this
| |-CXXMethodDecl 0x556fa1db2f58 <line:78:2, line:85:2> line:78:7 insert 'void (StrideSched::Client **)'
| | |-ParmVarDecl 0x556fa1db2e90 <col:14, col:23> col:23 used list 'StrideSched::Client **'
| | `-CompoundStmt 0x556fa1db5170 <col:29, line:85:2>
| |   |-BinaryOperator 0x556fa1db4aa8 <line:79:6, col:15> 'StrideSched::Client **' lvalue '='
| |   | |-MemberExpr 0x556fa1db4a40 <col:6> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
| |   | | `-CXXThisExpr 0x556fa1db4a30 <col:6> 'StrideSched::Client *' implicit this
| |   | `-ImplicitCastExpr 0x556fa1db4a90 <col:15> 'StrideSched::Client **' <LValueToRValue>
| |   |   `-DeclRefExpr 0x556fa1db4a70 <col:15> 'StrideSched::Client **' lvalue ParmVar 0x556fa1db2e90 'list' 'StrideSched::Client **'
| |   |-WhileStmt 0x556fa1db4f30 <line:80:6, line:81:20>
| |   | |-BinaryOperator 0x556fa1db4e10 <line:80:13, col:66> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x556fa1db4df8 <col:13, col:29> 'bool' <PointerToBoolean>
| |   | | | `-ImplicitCastExpr 0x556fa1db4de0 <col:13, col:29> 'StrideSched::Client *' <LValueToRValue>
| |   | | |   `-ParenExpr 0x556fa1db4bb0 <col:13, col:29> 'StrideSched::Client *' lvalue
| |   | | |     `-BinaryOperator 0x556fa1db4b90 <col:14, col:23> 'StrideSched::Client *' lvalue '='
| |   | | |       |-MemberExpr 0x556fa1db4ad8 <col:14> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |   | | |       | `-CXXThisExpr 0x556fa1db4ac8 <col:14> 'StrideSched::Client *' implicit this
| |   | | |       `-ImplicitCastExpr 0x556fa1db4b78 <col:22, col:23> 'StrideSched::Client *' <LValueToRValue>
| |   | | |         `-UnaryOperator 0x556fa1db4b60 <col:22, col:23> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
| |   | | |           `-ImplicitCastExpr 0x556fa1db4b48 <col:23> 'StrideSched::Client **' <LValueToRValue>
| |   | | |             `-MemberExpr 0x556fa1db4b18 <col:23> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
| |   | | |               `-CXXThisExpr 0x556fa1db4b08 <col:23> 'StrideSched::Client *' implicit this
| |   | | `-ParenExpr 0x556fa1db4dc0 <col:34, col:66> 'bool'
| |   | |   `-BinaryOperator 0x556fa1db4da0 <col:35, col:65> 'bool' '>'
| |   | |     |-CStyleCastExpr 0x556fa1db4d58 <col:35, col:61> 'int' <NoOp>
| |   | |     | `-ImplicitCastExpr 0x556fa1db4d40 <col:40, col:61> 'int' <IntegralCast> part_of_explicit_cast
| |   | |     |   `-ParenExpr 0x556fa1db4d20 <col:40, col:61> 'unsigned int'
| |   | |     |     `-BinaryOperator 0x556fa1db4cc8 <col:41, col:56> 'unsigned int' '-'
| |   | |     |       |-ImplicitCastExpr 0x556fa1db4c98 <col:41> 'unsigned int' <LValueToRValue>
| |   | |     |       | `-MemberExpr 0x556fa1db4be0 <col:41> 'unsigned int' lvalue ->_pass 0x556fa1db2a08
| |   | |     |       |   `-CXXThisExpr 0x556fa1db4bd0 <col:41> 'StrideSched::Client *' implicit this
| |   | |     |       `-ImplicitCastExpr 0x556fa1db4cb0 <col:49, col:56> 'unsigned int' <LValueToRValue>
| |   | |     |         `-MemberExpr 0x556fa1db4c68 <col:49, col:56> 'unsigned int' lvalue ->_pass 0x556fa1db2a08
| |   | |     |           `-ImplicitCastExpr 0x556fa1db4c50 <col:49> 'StrideSched::Client *' <LValueToRValue>
| |   | |     |             `-MemberExpr 0x556fa1db4c20 <col:49> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |   | |     |               `-CXXThisExpr 0x556fa1db4c10 <col:49> 'StrideSched::Client *' implicit this
| |   | |     `-IntegerLiteral 0x556fa1db4d80 <col:65> 'int' 0
| |   | `-BinaryOperator 0x556fa1db4f10 <line:81:3, col:20> 'StrideSched::Client **' lvalue '='
| |   |   |-MemberExpr 0x556fa1db4e40 <col:3> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
| |   |   | `-CXXThisExpr 0x556fa1db4e30 <col:3> 'StrideSched::Client *' implicit this
| |   |   `-UnaryOperator 0x556fa1db4ef8 <col:12, col:20> 'StrideSched::Client **' prefix '&' cannot overflow
| |   |     `-MemberExpr 0x556fa1db4ec8 <col:13, col:20> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |   |       `-ImplicitCastExpr 0x556fa1db4eb0 <col:13> 'StrideSched::Client *' <LValueToRValue>
| |   |         `-MemberExpr 0x556fa1db4e80 <col:13> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |   |           `-CXXThisExpr 0x556fa1db4e70 <col:13> 'StrideSched::Client *' implicit this
| |   |-BinaryOperator 0x556fa1db4fc8 <line:82:6, col:16> 'StrideSched::Client *' lvalue '='
| |   | |-UnaryOperator 0x556fa1db4fa0 <col:6, col:7> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
| |   | | `-ImplicitCastExpr 0x556fa1db4f88 <col:7> 'StrideSched::Client **' <LValueToRValue>
| |   | |   `-MemberExpr 0x556fa1db4f58 <col:7> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
| |   | |     `-CXXThisExpr 0x556fa1db4f48 <col:7> 'StrideSched::Client *' implicit this
| |   | `-CXXThisExpr 0x556fa1db4fb8 <col:16> 'StrideSched::Client *' this
| |   `-IfStmt 0x556fa1db5158 <line:83:6, line:84:20>
| |     |-ImplicitCastExpr 0x556fa1db5040 <line:83:10> 'bool' <PointerToBoolean>
| |     | `-ImplicitCastExpr 0x556fa1db5028 <col:10> 'StrideSched::Client *' <LValueToRValue>
| |     |   `-MemberExpr 0x556fa1db4ff8 <col:10> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |     |     `-CXXThisExpr 0x556fa1db4fe8 <col:10> 'StrideSched::Client *' implicit this
| |     `-BinaryOperator 0x556fa1db5138 <line:84:3, col:20> 'StrideSched::Client **' lvalue '='
| |       |-MemberExpr 0x556fa1db50b0 <col:3, col:10> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
| |       | `-ImplicitCastExpr 0x556fa1db5098 <col:3> 'StrideSched::Client *' <LValueToRValue>
| |       |   `-MemberExpr 0x556fa1db5068 <col:3> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |       |     `-CXXThisExpr 0x556fa1db5058 <col:3> 'StrideSched::Client *' implicit this
| |       `-UnaryOperator 0x556fa1db5120 <col:19, col:20> 'StrideSched::Client **' prefix '&' cannot overflow
| |         `-MemberExpr 0x556fa1db50f0 <col:20> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |           `-CXXThisExpr 0x556fa1db50e0 <col:20> 'StrideSched::Client *' implicit this
| |-CXXMethodDecl 0x556fa1db3020 <line:86:2, line:89:2> line:86:7 remove 'void ()'
| | `-CompoundStmt 0x556fa1dbe5d0 <col:16, line:89:2>
| |   `-IfStmt 0x556fa1dbe5b8 <line:87:6, line:88:19>
| |     |-ImplicitCastExpr 0x556fa1db52c0 <line:87:10, col:26> 'bool' <PointerToBoolean>
| |     | `-ImplicitCastExpr 0x556fa1db52a8 <col:10, col:26> 'StrideSched::Client *' <LValueToRValue>
| |     |   `-ParenExpr 0x556fa1db5288 <col:10, col:26> 'StrideSched::Client *' lvalue
| |     |     `-BinaryOperator 0x556fa1db5268 <col:11, col:21> 'StrideSched::Client *' lvalue '='
| |     |       |-UnaryOperator 0x556fa1db51f8 <col:11, col:12> 'StrideSched::Client *' lvalue prefix '*' cannot overflow
| |     |       | `-ImplicitCastExpr 0x556fa1db51e0 <col:12> 'StrideSched::Client **' <LValueToRValue>
| |     |       |   `-MemberExpr 0x556fa1db51b0 <col:12> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
| |     |       |     `-CXXThisExpr 0x556fa1db51a0 <col:12> 'StrideSched::Client *' implicit this
| |     |       `-ImplicitCastExpr 0x556fa1db5250 <col:21> 'StrideSched::Client *' <LValueToRValue>
| |     |         `-MemberExpr 0x556fa1db5220 <col:21> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |     |           `-CXXThisExpr 0x556fa1db5210 <col:21> 'StrideSched::Client *' implicit this
| |     `-BinaryOperator 0x556fa1dbe598 <line:88:3, col:19> 'StrideSched::Client **' lvalue '='
| |       |-MemberExpr 0x556fa1dbe510 <col:3, col:10> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
| |       | `-ImplicitCastExpr 0x556fa1db5318 <col:3> 'StrideSched::Client *' <LValueToRValue>
| |       |   `-MemberExpr 0x556fa1db52e8 <col:3> 'StrideSched::Client *' lvalue ->_next 0x556fa1db29a0
| |       |     `-CXXThisExpr 0x556fa1db52d8 <col:3> 'StrideSched::Client *' implicit this
| |       `-ImplicitCastExpr 0x556fa1dbe580 <col:19> 'StrideSched::Client **' <LValueToRValue>
| |         `-MemberExpr 0x556fa1dbe550 <col:19> 'StrideSched::Client **' lvalue ->_pprev 0x556fa1db2940
| |           `-CXXThisExpr 0x556fa1dbe540 <col:19> 'StrideSched::Client *' implicit this
| |-CXXConstructorDecl 0x556fa1db30e8 <line:58:12> col:12 implicit Client 'void (const StrideSched::Client &)' inline default noexcept-unevaluated 0x556fa1db30e8
| | `-ParmVarDecl 0x556fa1db31f8 <col:12> col:12 'const StrideSched::Client &'
| |-CXXConstructorDecl 0x556fa1db3298 <col:12> col:12 implicit Client 'void (StrideSched::Client &&)' inline default noexcept-unevaluated 0x556fa1db3298
| | `-ParmVarDecl 0x556fa1db33a8 <col:12> col:12 'StrideSched::Client &&'
| |-CXXMethodDecl 0x556fa1db3448 <col:12> col:12 implicit operator= 'StrideSched::Client &(StrideSched::Client &&)' inline default noexcept-unevaluated 0x556fa1db3448
| | `-ParmVarDecl 0x556fa1db3558 <col:12> col:12 'StrideSched::Client &&'
| `-CXXDestructorDecl 0x556fa1db35e0 <col:12> col:12 implicit ~Client 'void ()' inline default noexcept-unevaluated 0x556fa1db35e0
|-FieldDecl 0x556fa1db36d0 <line:92:5, col:13> col:13 _all 'StrideSched::Client *'
|-FieldDecl 0x556fa1db3730 <line:93:5, col:13> col:13 _list 'StrideSched::Client *'
|-CXXMethodDecl 0x556fa1db37a8 <line:95:5, line:97:5> line:95:9 nclients 'int () const'
| `-CompoundStmt 0x556fa1dbe7d0 <col:26, line:97:5>
|   `-ReturnStmt 0x556fa1dbe7c0 <line:96:2, col:49>
|     `-ConditionalOperator 0x556fa1dbe790 <col:9, col:49> 'int'
|       |-CXXMemberCallExpr 0x556fa1dbe648 <col:9, col:24> 'bool'
|       | |-MemberExpr 0x556fa1dbe5f8 <col:9> '<bound member function type>' ->input_is_pull 0x556fa1cf02a0
|       | | `-ImplicitCastExpr 0x556fa1dbe670 <col:9> 'const Element *' <UncheckedDerivedToBase (Element)>
|       | |   `-CXXThisExpr 0x556fa1dbe5e8 <col:9> 'const StrideSched *' implicit this
|       | `-IntegerLiteral 0x556fa1dbe628 <col:23> 'int' 0
|       |-CXXMemberCallExpr 0x556fa1dbe6d0 <col:28, col:36> 'int'
|       | `-MemberExpr 0x556fa1dbe6a0 <col:28> '<bound member function type>' ->ninputs 0x556fa1cede58
|       |   `-ImplicitCastExpr 0x556fa1dbe6f0 <col:28> 'const Element *' <UncheckedDerivedToBase (Element)>
|       |     `-CXXThisExpr 0x556fa1dbe690 <col:28> 'const StrideSched *' implicit this
|       `-CXXMemberCallExpr 0x556fa1dbe750 <col:40, col:49> 'int'
|         `-MemberExpr 0x556fa1dbe720 <col:40> '<bound member function type>' ->noutputs 0x556fa1cee050
|           `-ImplicitCastExpr 0x556fa1dbe770 <col:40> 'const Element *' <UncheckedDerivedToBase (Element)>
|             `-CXXThisExpr 0x556fa1dbe710 <col:40> 'const StrideSched *' implicit this
|-CXXMethodDecl 0x556fa1db3970 <line:98:5, col:49> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556fa1db3858 <col:32, col:40> col:41 'Element *'
| `-ParmVarDecl 0x556fa1db38d8 <col:43, col:48> col:49 'void *'
|-CXXConstructorDecl 0x556fa1db3a48 <line:35:7> col:7 implicit StrideSched 'void (const StrideSched &)' inline default_delete noexcept-unevaluated 0x556fa1db3a48
| `-ParmVarDecl 0x556fa1db3b58 <col:7> col:7 'const StrideSched &'
|-CXXConstructorDecl 0x556fa1db3bf8 <col:7> col:7 implicit StrideSched 'void (StrideSched &&)' inline default_delete noexcept-unevaluated 0x556fa1db3bf8
| `-ParmVarDecl 0x556fa1db3d08 <col:7> col:7 'StrideSched &&'
|-CXXMethodDecl 0x556fa1db3da8 <col:7> col:7 implicit operator= 'StrideSched &(const StrideSched &)' inline default_delete noexcept-unevaluated 0x556fa1db3da8
| `-ParmVarDecl 0x556fa1db3eb8 <col:7> col:7 'const StrideSched &'
|-CXXMethodDecl 0x556fa1db3f28 <col:7> col:7 implicit operator= 'StrideSched &(StrideSched &&)' inline default_delete noexcept-unevaluated 0x556fa1db3f28
| `-ParmVarDecl 0x556fa1db4038 <col:7> col:7 'StrideSched &&'
`-CXXDestructorDecl 0x556fa1db40c0 <col:7> col:7 implicit used ~StrideSched 'void () noexcept' inline default
  |-Overrides: [ 0x556fa1cdb438 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x556fa1e07760 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.StrideSched = type { %class.Element.base, %"struct.StrideSched::Client"*, %"struct.StrideSched::Client"* }
  NonVirtualBaseLLVMType:%class.StrideSched = type { %class.Element.base, %"struct.StrideSched::Client"*, %"struct.StrideSched::Client"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StrideSwitch
         0 |   class StrideSched (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     struct StrideSched::Client * _all
       120 |     struct StrideSched::Client * _list
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1dbe7e8 <../elements/standard/strideswitch.hh:24:1, line:34:1> line:24:7 class StrideSwitch definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'StrideSched'
|-CXXRecordDecl 0x556fa1dbe948 <col:1, col:7> col:7 implicit referenced class StrideSwitch
|-AccessSpecDecl 0x556fa1dbe9d8 <col:43, col:49> col:43 public
|-CXXConstructorDecl 0x556fa1dbea60 <line:26:3, col:16> col:3 StrideSwitch 'void ()'
|-CXXMethodDecl 0x556fa1dbeb60 <line:28:3, col:59> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x556fa1db1580 StrideSched::class_name 'const char *() const' ]
| `-CompoundStmt 0x556fa1dbf740 <col:34, col:59>
|   `-ReturnStmt 0x556fa1dbf730 <col:36, col:43>
|     `-ImplicitCastExpr 0x556fa1dbf718 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556fa1dbf6f0 <col:43> 'const char [13]' lvalue "StrideSwitch"
|-CXXMethodDecl 0x556fa1dbec28 <line:29:3, col:51> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x556fa1db1648 StrideSched::port_count 'const char *() const' ]
| `-CompoundStmt 0x556fa1dbf7a0 <col:34, col:51>
|   `-ReturnStmt 0x556fa1dbf790 <col:36, col:43>
|     `-ImplicitCastExpr 0x556fa1dbf778 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556fa1dbf758 <col:43> 'const char [5]' lvalue "1/1-"
|-CXXMethodDecl 0x556fa1dbecf0 <line:30:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x556fa1db1710 StrideSched::processing 'const char *() const' ]
| `-CompoundStmt 0x556fa1dbf800 <col:34, col:49>
|   `-ReturnStmt 0x556fa1dbf7f0 <col:36, col:43>
|     `-ImplicitCastExpr 0x556fa1dbf7d8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x556fa1dbf7b8 <col:43> 'const char []' lvalue Var 0x556fa1cdce70 'PUSH' 'const char []'
|-CXXMethodDecl 0x556fa1dbeeb8 <line:32:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x556fa1cdb708 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x556fa1dbeda8 <col:13> col:16 'int'
| `-ParmVarDecl 0x556fa1dbee20 <col:18, col:25> col:26 'Packet *'
|-CXXConstructorDecl 0x556fa1dbef98 <line:24:7> col:7 implicit StrideSwitch 'void (const StrideSwitch &)' inline default_delete noexcept-unevaluated 0x556fa1dbef98
| `-ParmVarDecl 0x556fa1dbf0a8 <col:7> col:7 'const StrideSwitch &'
|-CXXConstructorDecl 0x556fa1dbf148 <col:7> col:7 implicit StrideSwitch 'void (StrideSwitch &&)' inline default_delete noexcept-unevaluated 0x556fa1dbf148
| `-ParmVarDecl 0x556fa1dbf258 <col:7> col:7 'StrideSwitch &&'
|-CXXMethodDecl 0x556fa1dbf2f8 <col:7> col:7 implicit operator= 'StrideSwitch &(const StrideSwitch &)' inline default_delete noexcept-unevaluated 0x556fa1dbf2f8
| `-ParmVarDecl 0x556fa1dbf408 <col:7> col:7 'const StrideSwitch &'
|-CXXMethodDecl 0x556fa1dbf478 <col:7> col:7 implicit operator= 'StrideSwitch &(StrideSwitch &&)' inline default_delete noexcept-unevaluated 0x556fa1dbf478
| `-ParmVarDecl 0x556fa1dbf588 <col:7> col:7 'StrideSwitch &&'
`-CXXDestructorDecl 0x556fa1dbf610 <col:7> col:7 implicit ~StrideSwitch 'void ()' inline default noexcept-unevaluated 0x556fa1dbf610
  `-Overrides: [ 0x556fa1db40c0 StrideSched::~StrideSched 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.StrideSwitch = type { %class.StrideSched }
  NonVirtualBaseLLVMType:%class.StrideSwitch = type { %class.StrideSched }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1cb37f8 prev 0x556fa1ca8a00 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1cb38f0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x556fa1cb39e0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x556fa1cb3b08 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x556fa1cb3c88 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x556fa1cb3e08 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x556fa1cb3f88 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x556fa1cc4db8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556fa1cc5628 <col:11>
|-CXXDestructorDecl 0x556fa1cc4e90 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x556fa1cc4fc8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x556fa1cc4fc8
| `-ParmVarDecl 0x556fa1cc50d8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x556fa1cc5178 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556fa1cc5178
| `-ParmVarDecl 0x556fa1cc5288 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x556fa1cc8048 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1cc8158 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x556fa1cc83d8 <col:11>
|   `-ReturnStmt 0x556fa1cc83c8 <col:11>
|     `-UnaryOperator 0x556fa1cc83b0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556fa1cc83a0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x556fa1cc81c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556fa1cc81c8
  `-ParmVarDecl 0x556fa1cc82d8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1cb3ff0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1cb4108 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x556fa1cb41a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x556fa1cb4210 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x556fa1cb4278 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x556fa1cb42e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x556fa1cb4340 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x556fa1cb4400 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x556fa1cb4460 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x556fa1cb44c0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x556fa1cc4cc8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x556fa1cb41a8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x556fa1cc5638 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x556fa1cc5690 <col:12>
|-CXXConstructorDecl 0x556fa1cc52f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x556fa1cc52f8
| `-ParmVarDecl 0x556fa1cc5408 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x556fa1cc54a8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x556fa1cc54a8
| `-ParmVarDecl 0x556fa1cc55b8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x556fa1cc7730 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1ca2110 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1ca2228 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x556fa1ca22b8 <col:16, col:22> col:16 public
|-EnumDecl 0x556fa1ca22e0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x556fa1ca23e0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x556fa1ca24c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ca23c0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x556fa1ca23a0 <col:21> 'int' 28
| `-EnumConstantDecl 0x556fa1ca2470 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x556fa1ca24d8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1ca2450 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x556fa1ca2430 <col:22> 'int' 64
|-CXXMethodDecl 0x556fa1ca2818 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x556fa1ca2500 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556fa1ca2580 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x556fa1ca25f8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556fa1ca2670 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556fa1ca28d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca2ad8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1ca2950 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x556fa1ca29c8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556fa1ca2b88 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca2ce8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x556fa1ca2bf8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556fa1ca2d90 <col:72> warn_unused_result ""
|-TypedefDecl 0x556fa1ca30f0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x556fa1ca3080 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x556fa1ca3020 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x556fa1ca2fe0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x556fa17772d0 'void'
|       |-PointerType 0x556fa1a22290 'unsigned char *'
|       | `-BuiltinType 0x556fa17773d0 'unsigned char'
|       |-TypedefType 0x556fa181e800 'size_t' sugar
|       | |-Typedef 0x556fa17e7b20 'size_t'
|       | `-BuiltinType 0x556fa1777430 'unsigned long'
|       `-PointerType 0x556fa1777ad0 'void *'
|         `-BuiltinType 0x556fa17772d0 'void'
|-CXXMethodDecl 0x556fa1ca3568 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x556fa1ca3160 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x556fa1ca31d8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556fa1ca3270 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x556fa1ca32f0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x556fa1cbdc60 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x556fa1cbdc48 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x556fa1cbdc10 <col:58> 'int' 0
| |-ParmVarDecl 0x556fa1ca3370 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x556fa1cbdc88 <col:76> 'int' 0
| |-ParmVarDecl 0x556fa1ca33f0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x556fa1cbdca8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x556fa1ca3638 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca36b8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x556fa1ca3778 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x556fa1ca3818 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca3870 <col:30>
|-CXXMethodDecl 0x556fa1ca38e8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x556fa1ca3988 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca39e0 <col:30>
|-CXXMethodDecl 0x556fa1ca3a58 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x556fa1ca3af8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca3ba8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x556fa1ca3c48 <col:20>
| |-OptimizeNoneAttr 0x556fa1ca3ca0 <col:30>
| `-WarnUnusedResultAttr 0x556fa1ca3cc8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca3d20 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x556fa1ca3dc0 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca3e18 <col:30>
|-CXXMethodDecl 0x556fa1ca3e68 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x556fa1ca3f08 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca3f60 <col:30>
|-CXXMethodDecl 0x556fa1ca3fa8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x556fa1ca4048 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca40a0 <col:30>
|-CXXMethodDecl 0x556fa1ca40e8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1ca41a8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1ca4270 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x556fa1ca4338 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x556fa1ca43f8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1ca4518 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x556fa1cbdd70 <col:54, line:99:5>
|   `-ReturnStmt 0x556fa1cbdd60 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x556fa1cbdd48 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x556fa1cbdd18 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x556fa1cb47f8
|         `-CXXThisExpr 0x556fa1cbdd08 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x556fa1ca46b8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x556fa1ca45c8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x556fa1cbde20 <col:67, line:103:5>
|   `-BinaryOperator 0x556fa1cbde00 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x556fa1cbdd98 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x556fa1cb47f8
|     | `-CXXThisExpr 0x556fa1cbdd88 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x556fa1cbdde8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1cbddc8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x556fa1ca45c8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x556fa1ca47b0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x556fa1cbdea0 <col:33, line:107:5>
|   `-ReturnStmt 0x556fa1cbde90 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x556fa1cbde78 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x556fa1cbde48 <col:16> 'void *' lvalue ->_destructor_argument 0x556fa1cb4860
|         `-CXXThisExpr 0x556fa1cbde38 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x556fa1ca4870 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x556fa1cbe4d0 <col:25, line:113:5>
|   |-ParenExpr 0x556fa1cbe218 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x556fa1cbe1e8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cbdf58 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x556fa1cbdf30 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x556fa1cbdef8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x556fa1cbdec8 <col:24> '<bound member function type>' ->shared 0x556fa1ca38e8
|   |   |       `-ImplicitCastExpr 0x556fa1cbdf18 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x556fa1cbdeb8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x556fa1cbdfb8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cbdf98 <col:42> 'int' 0
|   |   `-CallExpr 0x556fa1cbe148 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cbe130 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cbe110 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cbe188 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cbe028 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x556fa1cbe1a0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cbe050 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cbe1b8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cbe088 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x556fa1cbe1d0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cbe0f8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cbe0e0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cbe0a8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x556fa1cbe418 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x556fa1cbe248 <col:2> 'unsigned char *' lvalue ->_head 0x556fa1cb4600
|   | | `-CXXThisExpr 0x556fa1cbe238 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x556fa1cbe400 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x556fa1cbe3e0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x556fa1cbe288 <col:10> 'unsigned char *' lvalue ->_data 0x556fa1cb4668
|   |     | `-CXXThisExpr 0x556fa1cbe278 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x556fa1cbe3c8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x556fa1cbe3a8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x556fa1cbe2c8 <col:18> 'unsigned char *' lvalue ->_tail 0x556fa1cb46d0
|   |         | `-CXXThisExpr 0x556fa1cbe2b8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x556fa1cbe390 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x556fa1cbe370 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x556fa1cbe308 <col:26> 'unsigned char *' lvalue ->_end 0x556fa1cb4738
|   |             | `-CXXThisExpr 0x556fa1cbe2f8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x556fa1cbe358 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x556fa1cbe338 <col:33> 'int' 0
|   `-BinaryOperator 0x556fa1cbe4b0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x556fa1cbe448 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x556fa1cb47f8
|     | `-CXXThisExpr 0x556fa1cbe438 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x556fa1cbe498 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x556fa1cbe478 <col:16> 'int' 0
|-CXXMethodDecl 0x556fa1ca49b0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x556fa1ca4920 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556fa1ca4a58 <col:20>
| |-OptimizeNoneAttr 0x556fa1ca4ab0 <col:30>
| `-WarnUnusedResultAttr 0x556fa1ca4ad8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca4ba8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x556fa1ca4b18 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556fa1ca4c50 <col:20>
| |-OptimizeNoneAttr 0x556fa1ca4ca8 <col:30>
| `-WarnUnusedResultAttr 0x556fa1ca4cd0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca4e08 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x556fa1ca4d10 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556fa1ca4eb0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca4fb0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x556fa1ca4f20 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556fa1ca5058 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca50b0 <col:30>
|-CXXMethodDecl 0x556fa1ca5178 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x556fa1ca50e8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556fa1ca5220 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca5320 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x556fa1ca5290 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556fa1ca53c8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca54c8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x556fa1ca5438 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556fa1ca5570 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca55c8 <col:30>
|-CXXMethodDecl 0x556fa1ca5758 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x556fa1ca5608 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x556fa1ca5680 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x556fa1cbdcc8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x556fa1ca5808 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x556fa1ca5a08 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x556fa1ca5880 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x556fa1ca58f8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1ca5c18 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556fa1ca5ac8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556fa1ca5b40 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1ca5e28 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x556fa1ca5cd8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x556fa1ca5d58 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x556fa1cbdcd8 <col:39> 'int' 0
|-CXXMethodDecl 0x556fa1ca5ef8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x556fa1ca5fc0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x556fa1ca6088 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x556fa1ca6148 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1ca6210 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x556fa1ca6358 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x556fa1ca62c8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x556fa1ca6528 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x556fa1ca6418 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x556fa1ca6490 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1ca65f8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x556fa1ca66b8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x556fa1ca6758 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca67b0 <col:30>
|-CXXMethodDecl 0x556fa1ca6800 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x556fa1ca68a0 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca68f8 <col:30>
|-CXXMethodDecl 0x556fa1ca6948 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x556fa1ca6a08 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1ca6ad0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x556fa1ca6b70 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca6bc8 <col:30>
|-CXXMethodDecl 0x556fa1ca6d18 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x556fa1ca6c08 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x556fa1ca6c80 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1ca6e68 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x556fa1ca6dd8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1ca6f40 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x556fa1ca7000 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x556fa1ca70a0 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca70f8 <col:30>
|-CXXMethodDecl 0x556fa1ca7148 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x556fa1ca71e8 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca7240 <col:30>
|-CXXMethodDecl 0x556fa1ca7290 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x556fa1ca7358 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x556fa1ca73f8 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca7450 <col:30>
|-CXXMethodDecl 0x556fa1ca7498 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x556fa1ca75b8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x556fa1ca7728 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x556fa1ca7668 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x556fa1ca7818 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x556fa1ca78b8 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca7910 <col:30>
|-CXXMethodDecl 0x556fa1ca7960 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x556fa1ca7a20 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1ca7c58 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x556fa1ca7ad0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x556fa1ca7b48 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556fa1ca7d08 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca7d60 <col:30>
|-CXXMethodDecl 0x556fa1ca7e08 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x556fa1ca7ea8 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca7f00 <col:30>
|-CXXMethodDecl 0x556fa1ca7f50 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x556fa1ca7ff0 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca8048 <col:30>
|-CXXMethodDecl 0x556fa1ca8090 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x556fa1ca8130 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca8188 <col:30>
|-CXXMethodDecl 0x556fa1ca8288 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x556fa1ca81c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x556fa1ca8330 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca8388 <col:30>
|-CXXMethodDecl 0x556fa1ca8548 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x556fa1ca83c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x556fa1ca8438 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556fa1ca85f8 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca8650 <col:30>
|-CXXMethodDecl 0x556fa1ca86f8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x556fa1ca8818 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x556fa1ca8938 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x556fa1ca89d8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x556fa1ca8a00 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x556fa1ca8b28 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x556fa1ca8bc8 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca8c20 <col:30>
|-CXXMethodDecl 0x556fa1ca8cc8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x556fa1ca8d68 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca8dc0 <col:30>
|-AccessSpecDecl 0x556fa1ca8de8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x556fa1ca8e10 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x556fa1ca8f10 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x556fa1ca8f60 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1ca8ef0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x556fa1ca8ed0 <col:14> 'int' 48
|-CXXMethodDecl 0x556fa1ca8fc8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x556fa1ca9068 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca90c0 <col:30>
|-CXXMethodDecl 0x556fa1ca9138 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x556fa1ca91d8 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca9230 <col:30>
|-CXXMethodDecl 0x556fa1ca92f8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x556fa1ca9268 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x556fa1ca9498 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x556fa1ca9638 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x556fa1ca9548 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x556fa1ca96e0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x556fa1ca97e0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556fa1ca9b90 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ca97c0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x556fa1ca97a0 <col:9> 'int' 0
| |-EnumConstantDecl 0x556fa1ca9870 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556fa1ca9ba8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ca9850 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x556fa1ca9830 <col:14> 'int' 1
| |-EnumConstantDecl 0x556fa1ca9900 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556fa1ca9bc0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ca98e0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x556fa1ca98c0 <col:14> 'int' 2
| |-EnumConstantDecl 0x556fa1ca9990 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556fa1ca9bd8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ca9970 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x556fa1ca9950 <col:14> 'int' 3
| |-EnumConstantDecl 0x556fa1ca9a20 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556fa1ca9bf0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ca9a00 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x556fa1ca99e0 <col:13> 'int' 4
| |-EnumConstantDecl 0x556fa1ca9ab0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556fa1ca9c08 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1ca9a90 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x556fa1ca9a70 <col:13> 'int' 5
| `-EnumConstantDecl 0x556fa1ca9b40 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x556fa1ca9c20 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1ca9b20 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x556fa1ca9b00 <col:14> 'int' 6
|-CXXMethodDecl 0x556fa1ca9c88 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x556fa1ca9d28 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca9d80 <col:30>
|-CXXMethodDecl 0x556fa1ca9e78 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x556fa1ca9db8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x556fa1ca9f20 <col:20>
| `-OptimizeNoneAttr 0x556fa1ca9f78 <col:30>
|-CXXMethodDecl 0x556fa1ca9fe8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x556fa1caa110 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x556fa1caa288 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x556fa1caa1c0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x556fa1caa350 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x556fa1caa418 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x556fa1caa558 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x556fa1caa4c8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x556fa1caa600 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x556fa1caa700 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x556fa1caa900 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1caa6e0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x556fa1caa6c0 <col:23> 'int' 0
| |-EnumConstantDecl 0x556fa1caa790 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x556fa1caa918 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1caa770 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x556fa1caa750 <col:45> 'int' 4
| |-EnumConstantDecl 0x556fa1caa820 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x556fa1caa930 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1caa800 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x556fa1caa7e0 <col:24> 'int' 0
| `-EnumConstantDecl 0x556fa1caa8b0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x556fa1caa948 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1caa890 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x556fa1caa870 <col:47> 'int' 16
|-CXXMethodDecl 0x556fa1caa9a8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x556fa1caab18 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x556fa1caaa58 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x556fa1caabc0 <col:20>
| `-OptimizeNoneAttr 0x556fa1caac18 <col:30>
|-CXXMethodDecl 0x556fa1caac68 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x556fa1cbe5f0 <col:18, col:36>
|   `-ReturnStmt 0x556fa1cbe5e0 <col:20, col:33>
|     `-ImplicitCastExpr 0x556fa1cbe5c8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x556fa1cbe5a8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x556fa1cbe578 <col:27> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|           `-CXXThisExpr 0x556fa1cbe568 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x556fa1caad60 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x556fa1cbe700 <col:30, col:48>
|   `-ReturnStmt 0x556fa1cbe6f0 <col:32, col:45>
|     `-ImplicitCastExpr 0x556fa1cbe6d8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x556fa1cbe6b8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x556fa1cbe688 <col:39> '<bound member function type>' ->xanno 0x556fa1ca8b28
|           `-CXXThisExpr 0x556fa1cbe678 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x556fa1caae48 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x556fa1cbe898 <col:24, col:50>
|   `-ReturnStmt 0x556fa1cbe888 <col:26, col:47>
|     `-UnaryOperator 0x556fa1cbe870 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556fa1cbe850 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x556fa1cbe838 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556fa1cbe7e8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x556fa1cb3b08
|         |   `-CXXMemberCallExpr 0x556fa1cbe7c8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x556fa1cbe798 <col:34> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|         |       `-CXXThisExpr 0x556fa1cbe788 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x556fa1cbe818 <col:46> 'int' 0
|-CXXMethodDecl 0x556fa1caaf50 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x556fa1cbea68 <col:36, col:62>
|   `-ReturnStmt 0x556fa1cbea58 <col:38, col:59>
|     `-UnaryOperator 0x556fa1cbea40 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556fa1cbea20 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x556fa1cbea08 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556fa1cbe980 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x556fa1cb3b08
|         |   `-CXXMemberCallExpr 0x556fa1cbe960 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x556fa1cbe930 <col:46> '<bound member function type>' ->xanno 0x556fa1ca8b28
|         |       `-CXXThisExpr 0x556fa1cbe920 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x556fa1cbe9b0 <col:58> 'int' 0
|-CXXMethodDecl 0x556fa1cab068 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x556fa1cbec00 <col:26, col:53>
|   `-ReturnStmt 0x556fa1cbebf0 <col:28, col:50>
|     `-UnaryOperator 0x556fa1cbebd8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556fa1cbebb8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x556fa1cbeba0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556fa1cbeb50 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x556fa1cb3e08
|         |   `-CXXMemberCallExpr 0x556fa1cbeb30 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x556fa1cbeb00 <col:36> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|         |       `-CXXThisExpr 0x556fa1cbeaf0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x556fa1cbeb80 <col:49> 'int' 0
|-CXXMethodDecl 0x556fa1cab188 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x556fa1cbedd8 <col:38, col:65>
|   `-ReturnStmt 0x556fa1cbedc8 <col:40, col:62>
|     `-UnaryOperator 0x556fa1cbedb0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556fa1cbed90 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x556fa1cbed78 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556fa1cbece8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x556fa1cb3e08
|         |   `-CXXMemberCallExpr 0x556fa1cbecc8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x556fa1cbec98 <col:48> '<bound member function type>' ->xanno 0x556fa1ca8b28
|         |       `-CXXThisExpr 0x556fa1cbec88 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x556fa1cbed18 <col:61> 'int' 0
|-CXXMethodDecl 0x556fa1cab338 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x556fa1cab240 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x556fa1cbf4a8 <col:34, line:463:5>
|   |-ParenExpr 0x556fa1cbf2f0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x556fa1cbf2c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cbef28 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cbeef8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cbee48 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cbee30 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cbedf0 <col:23> 'int' lvalue ParmVar 0x556fa1cab240 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cbee10 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cbeed8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cbeea8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cbee68 <col:33> 'int' lvalue ParmVar 0x556fa1cab240 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x556fa1cbeec0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x556fa1cbee88 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x556fa1cbef88 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cbef68 <col:56> 'int' 0
|   |   `-CallExpr 0x556fa1cbf220 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cbf208 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cbf1e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cbf260 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cbf078 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x556fa1cbf278 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cbf0a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cbf290 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cbf0e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x556fa1cbf2a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cbf1d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cbf1b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cbf178 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x556fa1cbf498 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x556fa1cbf480 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x556fa1cbf460 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x556fa1cbf430 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556fa1cbf3e0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x556fa1cb3b08
|         |   `-CXXMemberCallExpr 0x556fa1cbf3c0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x556fa1cbf390 <col:9> '<bound member function type>' ->xanno 0x556fa1ca8b28
|         |       `-CXXThisExpr 0x556fa1cbf380 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x556fa1cbf448 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x556fa1cbf410 <col:21> 'int' lvalue ParmVar 0x556fa1cab240 'i' 'int'
|-CXXMethodDecl 0x556fa1cab588 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x556fa1cab3f8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x556fa1cab470 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x556fa1cbfb38 <col:40, line:472:5>
|   |-ParenExpr 0x556fa1cbf950 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x556fa1cbf920 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cbf600 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cbf5d0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cbf520 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cbf508 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cbf4c8 <col:23> 'int' lvalue ParmVar 0x556fa1cab3f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cbf4e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cbf5b0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cbf580 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cbf540 <col:33> 'int' lvalue ParmVar 0x556fa1cab3f8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x556fa1cbf598 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x556fa1cbf560 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x556fa1cbf660 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cbf640 <col:56> 'int' 0
|   |   `-CallExpr 0x556fa1cbf880 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cbf868 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cbf848 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cbf8c0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cbf6d0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x556fa1cbf8d8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cbf700 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cbf8f0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cbf738 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x556fa1cbf908 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cbf830 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cbf818 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cbf7d8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x556fa1cbfb18 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x556fa1cbfac0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x556fa1cbfa90 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x556fa1cbfa40 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x556fa1cb3b08
|     | |   `-CXXMemberCallExpr 0x556fa1cbfa20 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x556fa1cbf9f0 <col:2> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|     | |       `-CXXThisExpr 0x556fa1cbf9e0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x556fa1cbfaa8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x556fa1cbfa70 <col:14> 'int' lvalue ParmVar 0x556fa1cab3f8 'i' 'int'
|     `-ImplicitCastExpr 0x556fa1cbfb00 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1cbfae0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x556fa1cab470 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x556fa1cab748 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x556fa1cab650 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556fa1cc02b8 <col:36, line:485:5>
|   |-ParenExpr 0x556fa1cc0020 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cbfff0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cbfcd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cbfca0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cbfbb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cbfb98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cbfb58 <col:23> 'int' lvalue ParmVar 0x556fa1cab650 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cbfb78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cbfc80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cbfc68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cbfbd0 <col:33> 'int' lvalue ParmVar 0x556fa1cab650 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cbfc48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cbfc30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cbfbf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cbfc10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556fa1cbfd30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cbfd10 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cbff50 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cbff38 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cbff18 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cbff90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cbfda0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556fa1cbffa8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cbfdd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cbffc0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cbfe10 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x556fa1cbffd8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cbff00 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cbfee8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cbfea8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x556fa1cc02a8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x556fa1cc0290 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x556fa1cc0278 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556fa1cc0248 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x556fa1cc01e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556fa1cc01b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556fa1cc0130 <col:61, col:70> 'char const[48]' lvalue ->c 0x556fa1cb39e0
|             |   `-CXXMemberCallExpr 0x556fa1cc0110 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556fa1cc00e0 <col:61> '<bound member function type>' ->xanno 0x556fa1ca8b28
|             |       `-CXXThisExpr 0x556fa1cc00d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556fa1cc01d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556fa1cc0160 <col:74> 'int' lvalue ParmVar 0x556fa1cab650 'i' 'int'
|-CXXMethodDecl 0x556fa1cab998 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x556fa1cab808 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556fa1cab880 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x556fa1cc0a08 <col:42, line:500:5>
|   |-ParenExpr 0x556fa1cc07a0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cc0770 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc0450 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc0420 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc0330 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc0318 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc02d8 <col:23> 'int' lvalue ParmVar 0x556fa1cab808 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc02f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc0400 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cc03e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc0350 <col:33> 'int' lvalue ParmVar 0x556fa1cab808 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc03c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc03b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc0370 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cc0390 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556fa1cc04b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc0490 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cc06d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc06b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc0698 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc0710 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc0520 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556fa1cc0728 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc0558 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc0740 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc0590 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x556fa1cc0758 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc0680 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc0668 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc0628 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x556fa1cc09e8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x556fa1cc0998 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556fa1cc0968 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x556fa1cc0910 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556fa1cc08e0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556fa1cc0890 <col:48, col:57> 'char [48]' lvalue ->c 0x556fa1cb39e0
|     |     |   `-CXXMemberCallExpr 0x556fa1cc0870 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556fa1cc0840 <col:48> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|     |     |       `-CXXThisExpr 0x556fa1cc0830 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556fa1cc08f8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556fa1cc08c0 <col:61> 'int' lvalue ParmVar 0x556fa1cab808 'i' 'int'
|     `-ImplicitCastExpr 0x556fa1cc09d0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1cc09b0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x556fa1cab880 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x556fa1cabb58 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x556fa1caba60 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x556fa1cc1168 <col:35, line:513:5>
|   |-ParenExpr 0x556fa1cc0e78 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cc0e48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc0ba0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc0b70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc0a80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc0a68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc0a28 <col:23> 'int' lvalue ParmVar 0x556fa1caba60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc0a48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc0b50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cc0b38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc0aa0 <col:33> 'int' lvalue ParmVar 0x556fa1caba60 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc0b18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc0b00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc0ac0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cc0ae0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556fa1cc0c00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc0be0 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cc0da8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc0d90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc0d70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc0de8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc0c70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556fa1cc0e00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc0ca8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc0e18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc0ce0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x556fa1cc0e30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc0d58 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc0d40 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc0d00 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x556fa1cc1158 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x556fa1cc1140 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x556fa1cc1128 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556fa1cc10f8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x556fa1cc1070 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x556fa1cc1040 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556fa1cc0ff0 <col:60, col:69> 'char const[48]' lvalue ->c 0x556fa1cb39e0
|             |   `-CXXMemberCallExpr 0x556fa1cc0fd0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556fa1cc0fa0 <col:60> '<bound member function type>' ->xanno 0x556fa1ca8b28
|             |       `-CXXThisExpr 0x556fa1cc0f90 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556fa1cc1058 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556fa1cc1020 <col:73> 'int' lvalue ParmVar 0x556fa1caba60 'i' 'int'
|-CXXMethodDecl 0x556fa1cabda8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x556fa1cabc18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556fa1cabc90 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x556fa1cc1888 <col:41, line:528:5>
|   |-ParenExpr 0x556fa1cc1610 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cc15e0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc1300 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc12d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc11e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc11c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc1188 <col:23> 'int' lvalue ParmVar 0x556fa1cabc18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc11a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc12b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cc1298 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc1200 <col:33> 'int' lvalue ParmVar 0x556fa1cabc18 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc1278 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc1260 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc1220 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cc1240 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556fa1cc1360 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc1340 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cc1540 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc1528 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc1508 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc1580 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc13d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556fa1cc1598 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc1408 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc15b0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc1440 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x556fa1cc15c8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc14f0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc14d8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc1498 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x556fa1cc1868 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x556fa1cc1818 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556fa1cc17e8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x556fa1cc1790 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556fa1cc1750 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556fa1cc1700 <col:47, col:56> 'char [48]' lvalue ->c 0x556fa1cb39e0
|     |     |   `-CXXMemberCallExpr 0x556fa1cc16e0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556fa1cc16b0 <col:47> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|     |     |       `-CXXThisExpr 0x556fa1cc16a0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556fa1cc1768 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556fa1cc1730 <col:60> 'int' lvalue ParmVar 0x556fa1cabc18 'i' 'int'
|     `-ImplicitCastExpr 0x556fa1cc1850 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1cc1830 <col:65> 'int16_t':'short' lvalue ParmVar 0x556fa1cabc90 'x' 'int16_t':'short'
|-CXXMethodDecl 0x556fa1cabf68 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x556fa1cabe70 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556fa1cc1f58 <col:36, line:541:5>
|   |-ParenExpr 0x556fa1cc1cf8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cc1cc8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc1a20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc19f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc1900 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc18e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc18a8 <col:23> 'int' lvalue ParmVar 0x556fa1cabe70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc18c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc19d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cc19b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc1920 <col:33> 'int' lvalue ParmVar 0x556fa1cabe70 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc1998 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc1980 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc1940 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cc1960 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x556fa1cc1a80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc1a60 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cc1c28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc1c10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc1bf0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc1c68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc1af0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x556fa1cc1c80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc1b28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc1c98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc1b60 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x556fa1cc1cb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc1bd8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc1bc0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc1b80 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x556fa1cc1f48 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x556fa1cc1f30 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x556fa1cc1f18 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556fa1cc1ee8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x556fa1cc1e90 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556fa1cc1e60 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556fa1cc1e10 <col:61, col:70> 'char const[48]' lvalue ->c 0x556fa1cb39e0
|             |   `-CXXMemberCallExpr 0x556fa1cc1df0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556fa1cc1dc0 <col:61> '<bound member function type>' ->xanno 0x556fa1ca8b28
|             |       `-CXXThisExpr 0x556fa1cc1db0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556fa1cc1e78 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556fa1cc1e40 <col:74> 'int' lvalue ParmVar 0x556fa1cabe70 'i' 'int'
|-CXXMethodDecl 0x556fa1cac138 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x556fa1cac028 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x556fa1cac0a0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556fa1cac1e8 <col:20>
| `-OptimizeNoneAttr 0x556fa1cac240 <col:30>
|-CXXMethodDecl 0x556fa1cac378 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x556fa1cac280 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x556fa1cc2628 <col:35, line:562:5>
|   |-ParenExpr 0x556fa1cc23c8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cc2398 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc20f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc20c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc1fd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc1fb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc1f78 <col:23> 'int' lvalue ParmVar 0x556fa1cac280 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc1f98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc20a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cc2088 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc1ff0 <col:33> 'int' lvalue ParmVar 0x556fa1cac280 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc2068 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc2050 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc2010 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cc2030 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x556fa1cc2150 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc2130 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cc22f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc22e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc22c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc2338 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc21c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x556fa1cc2350 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc21f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc2368 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc2230 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x556fa1cc2380 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc22a8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc2290 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc2250 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x556fa1cc2618 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x556fa1cc2600 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x556fa1cc25e8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556fa1cc25b8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x556fa1cc2560 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x556fa1cc2530 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556fa1cc24e0 <col:60, col:69> 'char const[48]' lvalue ->c 0x556fa1cb39e0
|             |   `-CXXMemberCallExpr 0x556fa1cc24c0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556fa1cc2490 <col:60> '<bound member function type>' ->xanno 0x556fa1ca8b28
|             |       `-CXXThisExpr 0x556fa1cc2480 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556fa1cc2548 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556fa1cc2510 <col:73> 'int' lvalue ParmVar 0x556fa1cac280 'i' 'int'
|-CXXMethodDecl 0x556fa1cac588 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x556fa1cac438 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556fa1cac4b0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x556fa1cc2d08 <col:41, line:577:5>
|   |-ParenExpr 0x556fa1cc2a98 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cc2a68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc27c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc2790 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc26a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc2688 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc2648 <col:23> 'int' lvalue ParmVar 0x556fa1cac438 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc2668 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc2770 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cc2758 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc26c0 <col:33> 'int' lvalue ParmVar 0x556fa1cac438 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc2738 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc2720 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc26e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cc2700 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x556fa1cc2820 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc2800 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cc29c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc29b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc2990 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc2a08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc2890 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x556fa1cc2a20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc28c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc2a38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc2900 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x556fa1cc2a50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc2978 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc2960 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc2920 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x556fa1cc2ce8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x556fa1cc2c98 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556fa1cc2c68 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x556fa1cc2c08 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556fa1cc2bd8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556fa1cc2b88 <col:47, col:56> 'char [48]' lvalue ->c 0x556fa1cb39e0
|     |     |   `-CXXMemberCallExpr 0x556fa1cc2b68 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556fa1cc2b38 <col:47> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|     |     |       `-CXXThisExpr 0x556fa1cc2b28 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556fa1cc2bf0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556fa1cc2bb8 <col:60> 'int' lvalue ParmVar 0x556fa1cac438 'i' 'int'
|     `-ImplicitCastExpr 0x556fa1cc2cd0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1cc2cb0 <col:65> 'int32_t':'int' lvalue ParmVar 0x556fa1cac4b0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x556fa1cac748 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x556fa1cac650 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556fa1cc3438 <col:36, line:591:5>
|   |-ParenExpr 0x556fa1cc3178 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cc3148 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc2ea0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc2e70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc2d80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc2d68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc2d28 <col:23> 'int' lvalue ParmVar 0x556fa1cac650 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc2d48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc2e50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cc2e38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc2da0 <col:33> 'int' lvalue ParmVar 0x556fa1cac650 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc2e18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc2e00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc2dc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cc2de0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x556fa1cc2f00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc2ee0 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cc30a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc3090 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc3070 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc30e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc2f70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x556fa1cc3100 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc2fa8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc3118 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc2fe0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x556fa1cc3130 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc3058 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc3040 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc3000 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x556fa1cc3428 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x556fa1cc3410 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x556fa1cc33f8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556fa1cc33c8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x556fa1cc3340 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556fa1cc3310 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556fa1cc32c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x556fa1cb39e0
|             |   `-CXXMemberCallExpr 0x556fa1cc32a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556fa1cc3270 <col:61> '<bound member function type>' ->xanno 0x556fa1ca8b28
|             |       `-CXXThisExpr 0x556fa1cc3260 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556fa1cc3328 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556fa1cc32f0 <col:74> 'int' lvalue ParmVar 0x556fa1cac650 'i' 'int'
|-CXXMethodDecl 0x556fa1cac998 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x556fa1cac808 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556fa1cac880 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x556fa1cc3b18 <col:42, line:606:5>
|   |-ParenExpr 0x556fa1cc38a8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x556fa1cc3878 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc35d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc35a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc34b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc3498 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc3458 <col:23> 'int' lvalue ParmVar 0x556fa1cac808 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc3478 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc3580 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556fa1cc3568 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc34d0 <col:33> 'int' lvalue ParmVar 0x556fa1cac808 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc3548 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc3530 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc34f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556fa1cc3510 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x556fa1cc3630 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc3610 <col:60> 'int' 0
|   |   `-CallExpr 0x556fa1cc37d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc37c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc37a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc3818 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc36a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x556fa1cc3830 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc36d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc3848 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc3710 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x556fa1cc3860 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc3788 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc3770 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc3730 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x556fa1cc3af8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x556fa1cc3aa8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556fa1cc3a78 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x556fa1cc3a18 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556fa1cc39e8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556fa1cc3998 <col:48, col:57> 'char [48]' lvalue ->c 0x556fa1cb39e0
|     |     |   `-CXXMemberCallExpr 0x556fa1cc3978 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556fa1cc3948 <col:48> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|     |     |       `-CXXThisExpr 0x556fa1cc3938 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556fa1cc3a00 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556fa1cc39c8 <col:61> 'int' lvalue ParmVar 0x556fa1cac808 'i' 'int'
|     `-ImplicitCastExpr 0x556fa1cc3ae0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1cc3ac0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x556fa1cac880 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x556fa1cacb30 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x556fa1caca60 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x556fa1cc4388 <col:33, line:620:5>
|   |-ParenExpr 0x556fa1cc4100 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x556fa1cc40d0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc3d20 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc3cf0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc3b90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc3b78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc3b38 <col:23> 'int' lvalue ParmVar 0x556fa1caca60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc3b58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc3cd0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x556fa1cc3cb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc3bb0 <col:33> 'int' lvalue ParmVar 0x556fa1caca60 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc3c98 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc3c80 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc3bd0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x556fa1cc3c58 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x556fa1cc3c40 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x556fa1cc3c08 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x556fa1cc3d80 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc3d60 <col:79> 'int' 0
|   |   `-CallExpr 0x556fa1cc4030 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc4018 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc3ff8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc4070 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc3e68 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x556fa1cc4088 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc3eb0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc40a0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc3ee8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x556fa1cc40b8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc3fe0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc3fc8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc3f88 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x556fa1cc4378 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x556fa1cc4360 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x556fa1cc4348 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556fa1cc4318 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x556fa1cc4290 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x556fa1cc4260 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556fa1cc4210 <col:67, col:76> 'char const[48]' lvalue ->c 0x556fa1cb39e0
|             |   `-CXXMemberCallExpr 0x556fa1cc41f0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556fa1cc41c0 <col:67> '<bound member function type>' ->xanno 0x556fa1ca8b28
|             |       `-CXXThisExpr 0x556fa1cc41b0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556fa1cc4278 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556fa1cc4240 <col:80> 'int' lvalue ParmVar 0x556fa1caca60 'i' 'int'
|-CXXMethodDecl 0x556fa1cacd48 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x556fa1cacbf0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556fa1cacc70 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x556fa1cc4bb0 <col:45, line:635:5>
|   |-ParenExpr 0x556fa1cc48f8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x556fa1cc48c8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x556fa1cc4590 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556fa1cc4560 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556fa1cc4400 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556fa1cc43e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556fa1cc43a8 <col:23> 'int' lvalue ParmVar 0x556fa1cacbf0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556fa1cc43c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556fa1cc4540 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x556fa1cc4528 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556fa1cc4420 <col:33> 'int' lvalue ParmVar 0x556fa1cacbf0 'i' 'int'
|   |   |     `-BinaryOperator 0x556fa1cc4508 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556fa1cc44f0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556fa1cc4440 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556fa1ca8f10 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x556fa1cc44c8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x556fa1cc44b0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x556fa1cc4478 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x556fa1cc45f0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556fa1cc45d0 <col:79> 'int' 0
|   |   `-CallExpr 0x556fa1cc4828 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x556fa1cc4810 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1cc47f0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556fa1cc4868 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc4660 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x556fa1cc4880 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556fa1cc46a8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556fa1cc4898 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556fa1cc46e0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x556fa1cc48b0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556fa1cc47d8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556fa1cc47c0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556fa1cc4778 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x556fa1cc4b90 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x556fa1cc4af8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556fa1cc4ac8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x556fa1cc4a68 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556fa1cc4a38 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556fa1cc49e8 <col:54, col:63> 'char [48]' lvalue ->c 0x556fa1cb39e0
|     |     |   `-CXXMemberCallExpr 0x556fa1cc49c8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556fa1cc4998 <col:54> '<bound member function type>' ->xanno 0x556fa1ca8cc8
|     |     |       `-CXXThisExpr 0x556fa1cc4988 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556fa1cc4a50 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556fa1cc4a18 <col:67> 'int' lvalue ParmVar 0x556fa1cacbf0 'i' 'int'
|     `-CXXConstCastExpr 0x556fa1cc4b60 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x556fa1cc4b48 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x556fa1cc4b10 <col:91> 'const void *' lvalue ParmVar 0x556fa1cacc70 'x' 'const void *'
|-CXXMethodDecl 0x556fa1cace18 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x556fa1cc4c38 <col:34, line:640:5>
|   `-ReturnStmt 0x556fa1cc4c28 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x556fa1cc4c10 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x556fa1cc4be0 <col:16> 'Packet *' lvalue ->_data_packet 0x556fa1cb4598
|         `-CXXThisExpr 0x556fa1cc4bd0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x556fa1cacf58 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x556fa1cacec8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556fa1cbdcf8 <col:46> 'bool' true
|-CXXMethodDecl 0x556fa1cad0d8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x556fa1cad010 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x556fa1cad180 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x556fa1cad930 <line:660:22> "" ""
| |-EnumConstantDecl 0x556fa1cad280 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cad9a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad260 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x556fa1cad240 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x556fa1ca23e0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x556fa1cad310 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cad9b8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad2f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x556fa1cad2d0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x556fa1ca2470 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x556fa1cad3a0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cad9d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad380 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x556fa1cad360 <col:21> 'int' 0
| |-EnumConstantDecl 0x556fa1cad430 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cad9e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad410 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x556fa1cad3f0 <col:19> 'int' 16
| |-EnumConstantDecl 0x556fa1cad4c0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cada00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad4a0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x556fa1cad480 <col:21> 'int' 16
| |-EnumConstantDecl 0x556fa1cad550 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cada18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad530 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x556fa1cad510 <col:19> 'int' 32
| |-EnumConstantDecl 0x556fa1cad5e0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cada30 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad5c0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x556fa1cad5a0 <col:19> 'int' EnumConstant 0x556fa1cad430 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x556fa1cad670 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cada48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad650 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x556fa1cad630 <col:19> 'int' EnumConstant 0x556fa1cad550 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x556fa1cad740 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cada60 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad720 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x556fa1cad700 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x556fa1cad6c0 <col:23> 'int' EnumConstant 0x556fa1cad670 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x556fa1cad6e0 <col:40> 'int' 2
| |-EnumConstantDecl 0x556fa1cad810 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556fa1cada78 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cad7f0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x556fa1cad7d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x556fa1cad790 <col:23> 'int' EnumConstant 0x556fa1cad670 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x556fa1cad7b0 <col:40> 'int' 4
| `-EnumConstantDecl 0x556fa1cad8e0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x556fa1cada90 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1cad8c0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x556fa1cad8a0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x556fa1cad860 <col:23> 'int' EnumConstant 0x556fa1cad670 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x556fa1cad880 <col:40> 'int' 8
|-CXXMethodDecl 0x556fa1cadad0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x556fa1cadb70 <col:68> "" ""
|-CXXMethodDecl 0x556fa1cadc08 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x556fa1cadca8 <col:45> "" ""
|-CXXMethodDecl 0x556fa1cadd40 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x556fa1cadde0 <col:57> "" ""
|-CXXMethodDecl 0x556fa1cade78 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x556fa1cadf18 <col:45> "" ""
|-CXXMethodDecl 0x556fa1cadfb0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x556fa1cae050 <col:57> "" ""
|-CXXMethodDecl 0x556fa1cae0e0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x556fa1cae180 <col:51> "" ""
|-CXXMethodDecl 0x556fa1cae210 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x556fa1cae2b0 <col:63> "" ""
|-CXXMethodDecl 0x556fa1cae340 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x556fa1cae3e0 <col:53> "" ""
|-CXXMethodDecl 0x556fa1cae470 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x556fa1cae510 <col:65> "" ""
|-CXXMethodDecl 0x556fa1cae628 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x556fa1cae598 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x556fa1cae6d0 <col:61> "" ""
|-CXXMethodDecl 0x556fa1cae868 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x556fa1cae758 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x556fa1cae7d0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x556fa1cae918 <col:67> "" ""
|-CXXMethodDecl 0x556fa1caea30 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x556fa1cae9a0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x556fa1caead8 <col:63> "" ""
|-CXXMethodDecl 0x556fa1caec70 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x556fa1caeb60 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x556fa1caebd8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x556fa1caed20 <col:69> "" ""
|-CXXMethodDecl 0x556fa1caee38 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x556fa1caeda8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x556fa1caeee0 <col:63> "" ""
|-CXXMethodDecl 0x556fa1cb15b8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x556fa1cb14a8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x556fa1cb1520 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1cb1668 <col:69> "" ""
|-CXXMethodDecl 0x556fa1cb1780 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x556fa1cb16f0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x556fa1cb1828 <col:62> "" ""
|-CXXMethodDecl 0x556fa1cb19c0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x556fa1cb18b0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x556fa1cb1928 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x556fa1cb1a70 <col:68> "" ""
|-CXXMethodDecl 0x556fa1cb1b88 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x556fa1cb1af8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x556fa1cb1c30 <col:63> "" ""
|-CXXMethodDecl 0x556fa1cb1dc8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x556fa1cb1cb8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x556fa1cb1d30 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x556fa1cb1e78 <col:69> "" ""
|-CXXMethodDecl 0x556fa1cb1f08 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x556fa1cb1fa8 <col:64> "" ""
|-CXXMethodDecl 0x556fa1cb2038 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x556fa1cb20d8 <col:52> "" ""
|-CXXMethodDecl 0x556fa1cb2168 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x556fa1cb2208 <col:67> "" ""
|-CXXMethodDecl 0x556fa1cb2298 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x556fa1cb2338 <col:55> "" ""
|-CXXMethodDecl 0x556fa1cb2450 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x556fa1cb23c0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x556fa1cb24f8 <col:58> "" ""
|-CXXMethodDecl 0x556fa1cb2690 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x556fa1cb2580 <col:33> col:36 'int'
| |-ParmVarDecl 0x556fa1cb25f8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x556fa1cb2740 <col:62> "" ""
|-CXXMethodDecl 0x556fa1cb2858 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x556fa1cb27c8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x556fa1cb2900 <col:58> "" ""
|-CXXMethodDecl 0x556fa1cb2a98 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x556fa1cb2988 <col:33> col:36 'int'
| |-ParmVarDecl 0x556fa1cb2a00 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x556fa1cb2b48 <col:62> "" ""
|-CXXMethodDecl 0x556fa1cb2c60 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x556fa1cb2bd0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x556fa1cb2d08 <col:60> "" ""
|-CXXMethodDecl 0x556fa1cb2ea0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x556fa1cb2d90 <col:34> col:37 'int'
| |-ParmVarDecl 0x556fa1cb2e08 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x556fa1cb2f50 <col:64> "" ""
|-CXXMethodDecl 0x556fa1cb3068 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x556fa1cb2fd8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x556fa1cb3110 <col:58> "" ""
|-CXXMethodDecl 0x556fa1cb32a8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x556fa1cb3198 <col:33> col:36 'int'
| |-ParmVarDecl 0x556fa1cb3210 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x556fa1cb3358 <col:62> "" ""
|-CXXMethodDecl 0x556fa1cb3470 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x556fa1cb33e0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x556fa1cb3518 <col:59> "" ""
|-CXXMethodDecl 0x556fa1cb36b0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x556fa1cb35a0 <col:33> col:36 'int'
| |-ParmVarDecl 0x556fa1cb3618 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1cb3760 <col:63> "" ""
|-AccessSpecDecl 0x556fa1cb37d0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x556fa1cb37f8 prev 0x556fa1ca8a00 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556fa1cb38f0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x556fa1cb39e0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x556fa1cb3b08 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x556fa1cb3c88 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x556fa1cb3e08 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x556fa1cb3f88 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x556fa1cc4db8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556fa1cc5628 <col:11>
| |-CXXDestructorDecl 0x556fa1cc4e90 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x556fa1cc4fc8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x556fa1cc4fc8
| | `-ParmVarDecl 0x556fa1cc50d8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x556fa1cc5178 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556fa1cc5178
| | `-ParmVarDecl 0x556fa1cc5288 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x556fa1cc8048 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556fa1cc8158 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x556fa1cc83d8 <col:11>
| |   `-ReturnStmt 0x556fa1cc83c8 <col:11>
| |     `-UnaryOperator 0x556fa1cc83b0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556fa1cc83a0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x556fa1cc81c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556fa1cc81c8
|   `-ParmVarDecl 0x556fa1cc82d8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x556fa1cb3ff0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556fa1cb4108 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x556fa1cb41a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x556fa1cb4210 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x556fa1cb4278 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x556fa1cb42e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x556fa1cb4340 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x556fa1cb4400 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x556fa1cb4460 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x556fa1cb44c0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x556fa1cc4cc8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x556fa1cb41a8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x556fa1cc5638 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x556fa1cc5690 <col:12>
| |-CXXConstructorDecl 0x556fa1cc52f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x556fa1cc52f8
| | `-ParmVarDecl 0x556fa1cc5408 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x556fa1cc54a8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x556fa1cc54a8
| | `-ParmVarDecl 0x556fa1cc55b8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x556fa1cc7730 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x556fa1cb4538 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x556fa1cb4598 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x556fa1cb4600 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x556fa1cb4668 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x556fa1cb46d0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x556fa1cb4738 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x556fa1cb4798 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x556fa1cb47f8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x556fa1cb4860 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x556fa1cb48e8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x556fa1cb4538 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x556fa1cc4c60 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x556fa1cb4798 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x556fa1cc56a0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x556fa1cc5700 <col:21, line:755:5>
|-CXXConstructorDecl 0x556fa1cb4a88 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x556fa1cb49c8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x556fa1cb4b80 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x556fa1cb4d68 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x556fa1cb4c70 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x556fa1cb5038 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x556fa1cb4e20 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556fa1cb4e98 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556fa1cb4f10 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1cb5258 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x556fa1cb5108 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x556fa1cb5180 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x556fa1cbd838 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x556fa1cb5318 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x556fa1cb5390 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x556fa1cb5408 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x556fa1cbd990 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x556fa1cbd900 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1cbdad8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x556fa1cbda48 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x556fa1cbdbd0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1cf8a80 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1cf8b98 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x556fa1cf8c68 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x556fa1cf8cc8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x556fa1cf8d30 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x556fa1cf8db8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x556fa1cf9020 <col:16, line:46:5>
|   |-BinaryOperator 0x556fa1cf8f68 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x556fa1cf8e88 <col:9> 'TaskLink *' lvalue ->_prev 0x556fa1cf8c68
|   | | `-CXXThisExpr 0x556fa1cf8e78 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x556fa1cf8f50 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x556fa1cf8f30 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x556fa1cf8ec8 <col:17> 'TaskLink *' lvalue ->_next 0x556fa1cf8cc8
|   |     | `-CXXThisExpr 0x556fa1cf8eb8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x556fa1cf8f18 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x556fa1cf8ef8 <col:25> 'int' 0
|   `-BinaryOperator 0x556fa1cf9000 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x556fa1cf8f98 <col:9> 'unsigned int' lvalue ->_pass 0x556fa1cf8d30
|     | `-CXXThisExpr 0x556fa1cf8f88 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x556fa1cf8fe8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x556fa1cf8fc8 <col:17> 'int' 0
|-CXXConstructorDecl 0x556fa1d85558 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x556fa1d85558
| `-ParmVarDecl 0x556fa1d85668 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x556fa1d85708 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x556fa1d85708
| `-ParmVarDecl 0x556fa1d85818 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x556fa1d85a08 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d85a08
|-CXXMethodDecl 0x556fa1d86208 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x556fa1d86208
| `-ParmVarDecl 0x556fa1d86318 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x556fa1d86388 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x556fa1d86388
  `-ParmVarDecl 0x556fa1d86498 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1c5c148 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x556fa1c5c278 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x556fa1c5c2d8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x556fa1c5c338 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x556fa1d8c718 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x556fa1d8c7f0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d8c7f0
|-CXXConstructorDecl 0x556fa1d8caa8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x556fa1d8caa8
| `-ParmVarDecl 0x556fa1d8cbb8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x556fa1d8cc58 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x556fa1d8cc58
  `-ParmVarDecl 0x556fa1d8cd68 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1c5bf98 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x556fa1c5c0b8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x556fa1c5c148 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x556fa1c5c278 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x556fa1c5c2d8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x556fa1c5c338 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x556fa1d8c718 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x556fa1d8c7f0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d8c7f0
| |-CXXConstructorDecl 0x556fa1d8caa8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x556fa1d8caa8
| | `-ParmVarDecl 0x556fa1d8cbb8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x556fa1d8cc58 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x556fa1d8cc58
|   `-ParmVarDecl 0x556fa1d8cd68 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x556fa1c5c3f8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x556fa1c5c458 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x556fa1c5c3f8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x556fa1c5c278 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x556fa1c5c4b0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x556fa1c5c3f8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x556fa1c5c2d8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x556fa1c5c508 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x556fa1c5c3f8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x556fa1c5c338 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x556fa1c5c560 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556fa1d8c628 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556fa1d8cf88 <col:11>
|-CXXConstructorDecl 0x556fa1d8c8f8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x556fa1d8c8f8
| `-ParmVarDecl 0x556fa1d8ca08 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x556fa1d8ce08 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x556fa1d8ce08
  `-ParmVarDecl 0x556fa1d8cf18 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1c73a90 prev 0x556fa1c6a8d0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1c73b88 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x556fa1c73c28 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x556fa1c7a9f0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556fa1c7add8 <col:11>
|-CXXConstructorDecl 0x556fa1c7aad0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1c7abb8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x556fa1c7b520 <col:11>
|-CXXConstructorDecl 0x556fa1c7ac58 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1c7ad68 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x556fa1c7cd78 <col:11>
|-CXXDestructorDecl 0x556fa1c7c088 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556fa1982a18 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1982b28 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x556fa19833f0 <col:11>
|   `-ReturnStmt 0x556fa19833e0 <col:11>
|     `-UnaryOperator 0x556fa19833c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556fa19833b8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x556fa1982b98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x556fa1982ca8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x556fa1d154b0 <col:11>
    `-ReturnStmt 0x556fa1d154a0 <col:11>
      `-UnaryOperator 0x556fa1d15488 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x556fa1d15478 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1c69a88 prev 0x556fa1c69798 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1c69b80 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x556fa1c69c10 <col:19, col:25> col:19 public
|-TypedefDecl 0x556fa1c69c48 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x556fa18cebf0 'int32_t' sugar
|   |-Typedef 0x556fa17e0268 'int32_t'
|   `-TypedefType 0x556fa17b93b0 '__int32_t' sugar
|     |-Typedef 0x556fa17b8fc8 '__int32_t'
|     `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1c69cb0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x556fa18cedb0 'int64_t' sugar
|   |-Typedef 0x556fa17e02d0 'int64_t'
|   `-TypedefType 0x556fa17b94d0 '__int64_t' sugar
|     |-Typedef 0x556fa17b90a8 '__int64_t'
|     `-BuiltinType 0x556fa1777390 'long'
|-EnumDecl 0x556fa1c69d08 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x556fa1c69e80 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x556fa1c69e60 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x556fa1c69e38 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x556fa1c69e20 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x556fa1c69df0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x556fa1c69f78 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x556fa1c69f58 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x556fa1c69f30 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x556fa1c69f18 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x556fa1c69ef0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x556fa1c69ed0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x556fa1c69fc8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x556fa1c6a0d0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556fa1c6a620 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c6a0b0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x556fa1c6a090 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x556fa1c6a160 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556fa1c6a638 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c6a140 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x556fa1c6a120 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x556fa1c6a1f0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556fa1c6a650 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c6a1d0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x556fa1c6a1b0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x556fa1c6a280 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556fa1c6a668 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c6a260 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x556fa1c6a240 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x556fa1c6a310 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556fa1c6a680 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c6a2f0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x556fa1c6a2d0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x556fa1c6a3a0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556fa1c6a698 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c6a380 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x556fa1c6a360 <col:24> 'int' 1000
| |-EnumConstantDecl 0x556fa1c6a430 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556fa1c6a6b0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c6a410 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x556fa1c6a3f0 <col:26> 'int' EnumConstant 0x556fa1c6a0d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x556fa1c6a500 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556fa1c6a6c8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c6a4e0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x556fa1c6a4c0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x556fa1c6a480 <col:27> 'int' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x556fa1c6a4a0 <col:44> 'int' EnumConstant 0x556fa1c6a3a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x556fa1c6a5d0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x556fa1c6a6e0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1c6a5b0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x556fa1c6a590 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x556fa1c6a550 <col:27> 'int' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x556fa1c6a570 <col:44> 'int' EnumConstant 0x556fa1c6a280 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x556fa1c6a6f8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x556fa1c6a800 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x556fa1c6a850 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1c6a7e0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x556fa1c6a7c0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x556fa1c6a878 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x556fa18ce820 'uninitialized_type'
|   `-CXXRecord 0x556fa18ce788 'uninitialized_type'
|-CXXRecordDecl 0x556fa1c6a8d0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x556fa1c6a9e0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7ade8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556fa1c7af08 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x556fa1c7aec0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x556fa1c7ae50 <col:9> '<bound member function type>' ->assign 0x556fa1c6f628
|     | `-CXXThisExpr 0x556fa1c7ae40 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x556fa1c7ae80 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x556fa1c7aef0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x556fa1c7aea0 <col:19> 'int' 0
|-CXXConstructorDecl 0x556fa1c6ac28 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6aaa0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x556fa1c6ab18 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556fa1c76720 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556fa1c76700 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7af20 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556fa1c7b070 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x556fa1c7aff8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x556fa1c7af88 <col:9> '<bound member function type>' ->assign 0x556fa1c6f628
|     | `-CXXThisExpr 0x556fa1c7af78 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556fa1c7b040 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x556fa1c7b028 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x556fa1c7afb8 <col:16> 'long' lvalue ParmVar 0x556fa1c6aaa0 'sec' 'long'
|     `-ImplicitCastExpr 0x556fa1c7b058 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1c7afd8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6ab18 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556fa1c6ae88 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6acf8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x556fa1c6ad70 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556fa1c76758 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556fa1c76738 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7b088 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556fa1c7b1c0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x556fa1c7b160 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x556fa1c7b0f0 <col:9> '<bound member function type>' ->assign 0x556fa1c6f628
|     | `-CXXThisExpr 0x556fa1c7b0e0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556fa1c7b190 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556fa1c7b120 <col:16> 'int' lvalue ParmVar 0x556fa1c6acf8 'sec' 'int'
|     `-ImplicitCastExpr 0x556fa1c7b1a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1c7b140 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6ad70 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556fa1c6b0e8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6af58 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x556fa1c6afd0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556fa1c76790 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556fa1c76770 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7b1d8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556fa1c7b328 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x556fa1c7b2b0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x556fa1c7b240 <col:9> '<bound member function type>' ->assign 0x556fa1c6f628
|     | `-CXXThisExpr 0x556fa1c7b230 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556fa1c7b2f8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x556fa1c7b2e0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x556fa1c7b270 <col:16> 'unsigned long' lvalue ParmVar 0x556fa1c6af58 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x556fa1c7b310 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1c7b290 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6afd0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556fa1c6c280 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6b1b8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x556fa1c6b230 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556fa1c767c8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556fa1c767a8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7b340 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556fa1c7b490 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x556fa1c7b418 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x556fa1c7b3a8 <col:9> '<bound member function type>' ->assign 0x556fa1c6f628
|     | `-CXXThisExpr 0x556fa1c7b398 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556fa1c7b460 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x556fa1c7b448 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x556fa1c7b3d8 <col:16> 'unsigned int' lvalue ParmVar 0x556fa1c6b1b8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x556fa1c7b478 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1c7b3f8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6b230 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556fa1c6c3e0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x556fa1c6c350 <col:31> col:37 'double'
|-CXXConstructorDecl 0x556fa1c6c578 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x556fa1c6c4b8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x556fa1c6c7a8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x556fa1c6c6b0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x556fa1c6c958 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x556fa1c6c898 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7b530 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x556fa1c7b4a8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x556fa1c6c898 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x556fa1c7b590 <col:19, line:214:5>
|-CXXConstructorDecl 0x556fa1c6cb28 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x556fa1c6ca68 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7b5a0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556fa1c7b650 <col:53, line:219:5>
|   `-CStyleCastExpr 0x556fa1c7b628 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x556fa1c7b5f8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x556fa1c6ca68 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x556fa1c6cd18 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x556fa1c6cc90 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x556fa1c69830 'Timestamp'
|   | `-CXXRecord 0x556fa1c69a88 'Timestamp'
|   `-ParenType 0x556fa1c6cc30 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x556fa1c6cc00 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x556fa1c69dd0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x556fa1c69c48 'seconds_type'
|         `-TypedefType 0x556fa18cebf0 'int32_t' sugar
|           |-Typedef 0x556fa17e0268 'int32_t'
|           `-TypedefType 0x556fa17b93b0 '__int32_t' sugar
|             |-Typedef 0x556fa17b8fc8 '__int32_t'
|             `-BuiltinType 0x556fa1777370 'int'
|-CXXConversionDecl 0x556fa1c6ce58 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556fa1c6cf28 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x556fa1c7b758 <col:37, line:231:5>
|   `-ReturnStmt 0x556fa1c7b748 <line:227:9, col:23>
|     `-BinaryOperator 0x556fa1c7b728 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x556fa1c7b6f8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x556fa1c7b6a8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x556fa1c73c28
|       |   `-MemberExpr 0x556fa1c7b678 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x556fa1c74bd8
|       |     `-CXXThisExpr 0x556fa1c7b668 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x556fa1c7b710 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x556fa1c7b6d8 <col:23> 'int' 0
|-CXXMethodDecl 0x556fa1c6cfe8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x556fa1c6d0a8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1c6d168 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1c6d228 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1c6d2e8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1c6d458 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x556fa1c6d398 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x556fa1c6d5a0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x556fa1c6d510 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c6d668 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x556fa1c6d708 <col:54> "" ""
|-CXXMethodDecl 0x556fa1c6d798 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x556fa1c6d838 <col:54> "" ""
|-CXXMethodDecl 0x556fa1c6d8c8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x556fa1c6d968 <col:54> "" ""
|-CXXMethodDecl 0x556fa1c6da68 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x556fa1c6db38 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x556fa1c6dc68 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x556fa1c6dd60 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x556fa1c6de98 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x556fa1c7b970 <col:39, line:271:5>
|   `-ReturnStmt 0x556fa1c7b960 <line:267:9, col:61>
|     `-CallExpr 0x556fa1c7b900 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x556fa1c7b8e8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556fa1c7b770 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x556fa1c74f08 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x556fa1c7b930 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x556fa1c7b7d0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x556fa1c73c28
|       |   `-MemberExpr 0x556fa1c7b7a0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x556fa1c74bd8
|       |     `-CXXThisExpr 0x556fa1c7b790 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x556fa1c7b948 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x556fa1c7b870 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x556fa1c7b840 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x556fa1c7b800 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x556fa1c7b858 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x556fa1c7b820 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a3a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556fa1c6df58 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x556fa1c7bb30 <col:39, line:279:5>
|   `-ReturnStmt 0x556fa1c7bb20 <line:275:9, col:61>
|     `-CallExpr 0x556fa1c7bac0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x556fa1c7baa8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556fa1c7b988 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x556fa1c74f08 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x556fa1c7baf0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x556fa1c7b9e8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x556fa1c73c28
|       |   `-MemberExpr 0x556fa1c7b9b8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x556fa1c74bd8
|       |     `-CXXThisExpr 0x556fa1c7b9a8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x556fa1c7bb08 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x556fa1c7ba88 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x556fa1c7ba58 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x556fa1c7ba18 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x556fa1c7ba70 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x556fa1c7ba38 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a280 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556fa1c6e018 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x556fa1c7bcc8 <col:39, line:287:5>
|   `-ReturnStmt 0x556fa1c7bcb8 <line:283:9, col:53>
|     `-BinaryOperator 0x556fa1c7bc98 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x556fa1c7bc68 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x556fa1c7bb88 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x556fa1c73c28
|       |   `-MemberExpr 0x556fa1c7bb58 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x556fa1c74bd8
|       |     `-CXXThisExpr 0x556fa1c7bb48 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x556fa1c7bc80 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x556fa1c7bc48 <col:23, col:53> 'int'
|           `-BinaryOperator 0x556fa1c7bc28 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x556fa1c7bbf8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556fa1c7bbb8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a0d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556fa1c7bc10 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556fa1c7bbd8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556fa1c6e108 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x556fa1c7cf60 <col:40, line:293:5>
|   |-DeclStmt 0x556fa1c7be10 <line:291:9, col:48>
|   | `-VarDecl 0x556fa1c7bcf0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x556fa1c7bdf0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x556fa1c7bd98 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x556fa1c7bd68 <col:22> '<bound member function type>' ->subsec 0x556fa1c6d0a8
|   |     |   `-CXXThisExpr 0x556fa1c7bd58 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x556fa1c7bdd8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x556fa1c7bdb8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a500 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x556fa1c7cf50 <line:292:9, col:70>
|     `-ExprWithCleanups 0x556fa1c7cf38 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x556fa1c7cf08 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556fa1c7cef0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x556fa1c7ced0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x556fa1c7cea0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x556fa1c7cc38 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x556fa1c7cc20 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x556fa1c7be28 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x556fa1c7bcf0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x556fa1c7ce40 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x556fa1c7ce28 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x556fa1c7cdf8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x556fa1c7cc50 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x556fa1c7cbc0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x556fa1c7cba8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x556fa1c7cb58 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x556fa1c699d8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x556fa1c7caf8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x556fa1c7be58 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x556fa1c7be48 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x556fa1c7cb40 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x556fa1c7cb28 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x556fa1c7c318 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x556fa1c7be80 <col:39> 'int' 0
|               |               `-BinaryOperator 0x556fa1c7bf10 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x556fa1c7bee0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x556fa1c7bea0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a500 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x556fa1c7bef8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x556fa1c7bec0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x556fa1c7bcf0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x556fa1c7ce70 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x556fa1c7cc08 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x556fa1c7cbf8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x556fa1c6e1c8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x556fa1c7d4b8 <col:40, line:302:5>
|   |-DeclStmt 0x556fa1c7d0b0 <line:297:9, col:48>
|   | `-VarDecl 0x556fa1c7cf90 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x556fa1c7d090 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x556fa1c7d038 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x556fa1c7d008 <col:22> '<bound member function type>' ->subsec 0x556fa1c6d0a8
|   |     |   `-CXXThisExpr 0x556fa1c7cff8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x556fa1c7d078 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x556fa1c7d058 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a5d0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x556fa1c7d4a8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x556fa1c7d490 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x556fa1c7d460 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556fa1c7d448 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x556fa1c7d428 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x556fa1c7d3f8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x556fa1c7d320 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x556fa1c7d308 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x556fa1c7d0c8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x556fa1c7cf90 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x556fa1c7d398 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x556fa1c7d380 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x556fa1c7d350 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x556fa1c7d338 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x556fa1c7d2a8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x556fa1c7d290 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x556fa1c7d270 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x556fa1c699d8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x556fa1c7d210 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x556fa1c7d0f8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x556fa1c7d0e8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x556fa1c7d258 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x556fa1c7d240 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x556fa1c7d1d0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x556fa1c7d120 <col:39> 'int' 0
|               |               `-BinaryOperator 0x556fa1c7d1b0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x556fa1c7d180 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x556fa1c7d140 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a5d0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x556fa1c7d198 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x556fa1c7d160 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x556fa1c7cf90 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x556fa1c7d3c8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x556fa1c7d2f0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x556fa1c7d2e0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x556fa1c6e288 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x556fa1c7d540 <col:40, line:306:5>
|   `-ReturnStmt 0x556fa1c7d530 <line:305:9, col:17>
|     `-CXXConstructExpr 0x556fa1c7d500 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x556fa1c7d4e8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x556fa1c7d4d8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x556fa1c6e428 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x556fa1c6e338 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c6e5f8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x556fa1c6e500 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x556fa1c6e6e8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x556fa1c6e858 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x556fa1c6e798 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x556fa1c7d688 <col:56, line:320:5>
|   `-ReturnStmt 0x556fa1c7d678 <line:319:9, col:32>
|     `-ExprWithCleanups 0x556fa1c7d660 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x556fa1c7d630 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556fa1c7d618 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x556fa1c7d5d8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x556fa1c7d5a8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x556fa1c7d568 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x556fa1c6e798 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x556fa1c7d5c0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x556fa1c7d588 <col:31> 'int' 0
|-CXXMethodDecl 0x556fa1c6ea98 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c6e910 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6e988 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c7d858 <col:72, line:326:5>
|   `-ReturnStmt 0x556fa1c7d848 <line:325:9, col:51>
|     `-ExprWithCleanups 0x556fa1c7d830 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x556fa1c7d800 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556fa1c7d7e8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x556fa1c7d7a8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x556fa1c7d790 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x556fa1c7d6b0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x556fa1c6e910 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x556fa1c7d750 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x556fa1c7d738 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x556fa1c7d6d0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x556fa1c73380 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x556fa1c7d778 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x556fa1c7d6f0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6e988 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c6ec48 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x556fa1c6eb58 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x556fa1c7df20 <col:56, line:337:5>
|   |-DeclStmt 0x556fa1c7db58 <line:329:9, col:51>
|   | `-VarDecl 0x556fa1c7d880 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x556fa1c7db40 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x556fa1c7db10 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x556fa1c7daf8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x556fa1c7dae0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x556fa1c7dab0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x556fa1c7da98 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x556fa1c7da80 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x556fa1c7d970 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x556fa1c7dd10 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x556fa1c7dbc0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x556fa1c73c28
|   | | `-MemberExpr 0x556fa1c7db90 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x556fa1c74bd8
|   | |   `-DeclRefExpr 0x556fa1c7db70 <col:9> 'Timestamp' lvalue Var 0x556fa1c7d880 't' 'Timestamp'
|   | `-BinaryOperator 0x556fa1c7dcf0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x556fa1c7dcc0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556fa1c7dbf0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x556fa1c6eb58 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x556fa1c7dcd8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x556fa1c7dca0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x556fa1c7dc80 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x556fa1c7dc50 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x556fa1c7dc10 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x556fa1c7dc68 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x556fa1c7dc30 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a3a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x556fa1c7df08 <line:336:9, col:16>
|     `-CXXConstructExpr 0x556fa1c7ded8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x556fa1c7dec0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x556fa1c7dea0 <col:16> 'Timestamp' lvalue Var 0x556fa1c7d880 't' 'Timestamp'
|-CXXMethodDecl 0x556fa1c6ee10 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c6ed00 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6ed78 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c7e0d8 <col:72, line:343:5>
|   `-ReturnStmt 0x556fa1c7e0c8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x556fa1c7e0b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x556fa1c7e080 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556fa1c7e068 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x556fa1c7e028 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x556fa1c7e010 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x556fa1c7df58 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x556fa1c6ed00 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x556fa1c7dfd0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x556fa1c7dfb8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x556fa1c7df78 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x556fa1c734c8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x556fa1c7dff8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x556fa1c7df98 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6ed78 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c6ef60 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x556fa1c6eed0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x556fa1c7e520 <col:56, line:354:5>
|   |-DeclStmt 0x556fa1c7e2c8 <line:346:9, col:51>
|   | `-VarDecl 0x556fa1c7e100 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x556fa1c7e2b0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x556fa1c7e280 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x556fa1c7e268 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x556fa1c7e250 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x556fa1c7e220 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x556fa1c7e208 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x556fa1c7e1f0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x556fa1c7e1c0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x556fa1c7e480 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x556fa1c7e330 <col:9, col:14> 'int64_t':'long' lvalue .x 0x556fa1c73c28
|   | | `-MemberExpr 0x556fa1c7e300 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x556fa1c74bd8
|   | |   `-DeclRefExpr 0x556fa1c7e2e0 <col:9> 'Timestamp' lvalue Var 0x556fa1c7e100 't' 'Timestamp'
|   | `-BinaryOperator 0x556fa1c7e460 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x556fa1c7e430 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556fa1c7e360 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x556fa1c6eed0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x556fa1c7e448 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x556fa1c7e410 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x556fa1c7e3f0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x556fa1c7e3c0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x556fa1c7e380 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x556fa1c7e3d8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x556fa1c7e3a0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a280 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x556fa1c7e508 <line:353:9, col:16>
|     `-CXXConstructExpr 0x556fa1c7e4d8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x556fa1c7e4c0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x556fa1c7e4a0 <col:16> 'Timestamp' lvalue Var 0x556fa1c7e100 't' 'Timestamp'
|-CXXMethodDecl 0x556fa1c6f128 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c6f018 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6f090 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c7e6d8 <col:72, line:360:5>
|   `-ReturnStmt 0x556fa1c7e6c8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x556fa1c7e6b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x556fa1c7e680 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556fa1c7e668 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x556fa1c7e628 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x556fa1c7e610 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x556fa1c7e558 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x556fa1c6f018 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x556fa1c7e5d0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x556fa1c7e5b8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x556fa1c7e578 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x556fa1c73610 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x556fa1c7e5f8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x556fa1c7e598 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6f090 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c6f278 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x556fa1c6f1e8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x556fa1c8b048 <col:56, line:371:5>
|   |-DeclStmt 0x556fa1c7e8c8 <line:363:9, col:51>
|   | `-VarDecl 0x556fa1c7e700 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x556fa1c7e8b0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x556fa1c7e880 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x556fa1c7e868 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x556fa1c7e850 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x556fa1c7e820 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x556fa1c7e808 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x556fa1c7e7f0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x556fa1c7e7c0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x556fa1c8afa8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x556fa1c7e930 <col:9, col:14> 'int64_t':'long' lvalue .x 0x556fa1c73c28
|   | | `-MemberExpr 0x556fa1c7e900 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x556fa1c74bd8
|   | |   `-DeclRefExpr 0x556fa1c7e8e0 <col:9> 'Timestamp' lvalue Var 0x556fa1c7e700 't' 'Timestamp'
|   | `-CallExpr 0x556fa1c8af48 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x556fa1c8af30 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x556fa1c7e960 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x556fa1c74f08 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x556fa1c8af78 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556fa1c7e980 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x556fa1c6f1e8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x556fa1c8af90 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x556fa1c8af10 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x556fa1c8aee0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x556fa1c7e9a0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a0d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x556fa1c8aef8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x556fa1c7e9c0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x556fa1c8b030 <line:370:9, col:16>
|     `-CXXConstructExpr 0x556fa1c8b000 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x556fa1c8afe8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x556fa1c8afc8 <col:16> 'Timestamp' lvalue Var 0x556fa1c7e700 't' 'Timestamp'
|-CXXMethodDecl 0x556fa1c6f368 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x556fa1c8b188 <col:39, line:377:5>
|   `-ReturnStmt 0x556fa1c8b178 <line:376:9, col:30>
|     `-ExprWithCleanups 0x556fa1c8b160 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x556fa1c8b130 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556fa1c8b118 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x556fa1c8b0d8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x556fa1c8b080 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x556fa1c8b0c0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x556fa1c8b0a0 <col:29> 'int' 1
|-CXXMethodDecl 0x556fa1c6f428 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x556fa1c8b268 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x556fa1c8b220 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x556fa1c8b1b0 <col:9> '<bound member function type>' ->assign 0x556fa1c6f628
|     | `-CXXThisExpr 0x556fa1c8b1a0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x556fa1c8b1e0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x556fa1c8b250 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x556fa1c8b200 <col:19> 'int' 0
|-CXXMethodDecl 0x556fa1c6f628 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6f4d8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6f550 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556fa1c76800 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556fa1c767e0 <col:60> 'int' 0
| `-CompoundStmt 0x556fa1c8b460 <col:63, line:395:5>
|   `-BinaryOperator 0x556fa1c8b440 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x556fa1c8b2c0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x556fa1c73c28
|     | `-MemberExpr 0x556fa1c8b290 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x556fa1c74bd8
|     |   `-CXXThisExpr 0x556fa1c8b280 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x556fa1c8b420 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x556fa1c8b3b0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x556fa1c8b350 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x556fa1c8b338 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x556fa1c8b320 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x556fa1c8b2f0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x556fa1c6f4d8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x556fa1c8b398 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x556fa1c8b378 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x556fa1c8b408 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x556fa1c8b3f0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x556fa1c8b3d0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6f550 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c6f7f8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6f6e8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6f760 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8b5b8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x556fa1c8b570 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x556fa1c8b488 <col:9> '<bound member function type>' ->assign 0x556fa1c6f628
|     | `-CXXThisExpr 0x556fa1c8b478 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556fa1c8b5a0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556fa1c8b4b8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x556fa1c6f6e8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x556fa1c8b530 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x556fa1c8b518 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556fa1c8b4d8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x556fa1c734c8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x556fa1c8b558 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556fa1c8b4f8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6f760 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c6f9c8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6f8b8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6f930 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8b710 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x556fa1c8b6c8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x556fa1c8b5e0 <col:9> '<bound member function type>' ->assign 0x556fa1c6f628
|     | `-CXXThisExpr 0x556fa1c8b5d0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556fa1c8b6f8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556fa1c8b610 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x556fa1c6f8b8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x556fa1c8b688 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x556fa1c8b670 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556fa1c8b630 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x556fa1c73610 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x556fa1c8b6b0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556fa1c8b650 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c6f930 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c6fb98 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6fa88 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6fb00 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556fa1c76838 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556fa1c76818 <col:57> 'int' 0
| `-DeprecatedAttr 0x556fa1c6fc48 <col:75> "" ""
|-CXXMethodDecl 0x556fa1c6fdd8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6fcc8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6fd40 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1c6fe88 <col:74> "" ""
|-CXXMethodDecl 0x556fa1c70018 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x556fa1c6ff08 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x556fa1c6ff80 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1c700c8 <col:74> "" ""
|-CXXMethodDecl 0x556fa1c70158 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x556fa1c701f8 <col:42> "" ""
|-CXXMethodDecl 0x556fa1c72a30 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x556fa1c72910 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x556fa1c72990 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x556fa1c72b00 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x556fa1c72bc0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x556fa1c72c60 <col:20>
| `-OptimizeNoneAttr 0x556fa1c72cb8 <col:30>
|-CXXMethodDecl 0x556fa1c72d00 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x556fa1c72dc0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x556fa1c72e80 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x556fa1c72f40 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x556fa1c73000 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x556fa1c730c0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x556fa1c73180 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x556fa1c73240 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x556fa1c73380 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c732f0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8b858 <col:58, line:512:5>
|   `-ReturnStmt 0x556fa1c8b848 <line:511:9, col:53>
|     `-BinaryOperator 0x556fa1c8b828 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x556fa1c8b7f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556fa1c8b728 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c732f0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556fa1c8b810 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556fa1c8b7d8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x556fa1c8b7b8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x556fa1c8b788 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556fa1c8b748 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556fa1c8b7a0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556fa1c8b768 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a3a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556fa1c734c8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c73438 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8b9a0 <col:58, line:516:5>
|   `-ReturnStmt 0x556fa1c8b990 <line:515:9, col:53>
|     `-BinaryOperator 0x556fa1c8b970 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x556fa1c8b940 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556fa1c8b870 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c73438 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556fa1c8b958 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556fa1c8b920 <col:23, col:53> 'int'
|           `-BinaryOperator 0x556fa1c8b900 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x556fa1c8b8d0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556fa1c8b890 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556fa1c8b8e8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556fa1c8b8b0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a280 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556fa1c73610 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c73580 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8bae8 <col:58, line:520:5>
|   `-ReturnStmt 0x556fa1c8bad8 <line:519:9, col:53>
|     `-BinaryOperator 0x556fa1c8bab8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x556fa1c8ba88 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556fa1c8b9b8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c73580 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556fa1c8baa0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556fa1c8ba68 <col:23, col:53> 'int'
|           `-BinaryOperator 0x556fa1c8ba48 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x556fa1c8ba18 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556fa1c8b9d8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a0d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556fa1c8ba30 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556fa1c8b9f8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556fa1c73758 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c736c8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8bc30 <col:60, line:524:5>
|   `-ReturnStmt 0x556fa1c8bc20 <line:523:9, col:55>
|     `-BinaryOperator 0x556fa1c8bc00 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x556fa1c8bbd0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556fa1c8bb00 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c736c8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556fa1c8bbe8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556fa1c8bbb0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x556fa1c8bb90 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x556fa1c8bb60 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556fa1c8bb20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556fa1c8bb78 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556fa1c8bb40 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a3a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556fa1c738a0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c73810 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8bd78 <col:60, line:528:5>
|   `-ReturnStmt 0x556fa1c8bd68 <line:527:9, col:55>
|     `-BinaryOperator 0x556fa1c8bd48 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x556fa1c8bd18 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556fa1c8bc48 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c73810 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556fa1c8bd30 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556fa1c8bcf8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x556fa1c8bcd8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x556fa1c8bca8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556fa1c8bc68 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556fa1c8bcc0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556fa1c8bc88 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a280 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556fa1c739e8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c73958 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8bec0 <col:60, line:532:5>
|   `-ReturnStmt 0x556fa1c8beb0 <line:531:9, col:55>
|     `-BinaryOperator 0x556fa1c8be90 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x556fa1c8be60 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556fa1c8bd90 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c73958 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556fa1c8be78 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556fa1c8be40 <col:25, col:55> 'int'
|           `-BinaryOperator 0x556fa1c8be20 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x556fa1c8bdf0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556fa1c8bdb0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a0d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556fa1c8be08 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556fa1c8bdd0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556fa1c6a430 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x556fa1c73a90 prev 0x556fa1c6a8d0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556fa1c73b88 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x556fa1c73c28 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x556fa1c7a9f0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556fa1c7add8 <col:11>
| |-CXXConstructorDecl 0x556fa1c7aad0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556fa1c7abb8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x556fa1c7b520 <col:11>
| |-CXXConstructorDecl 0x556fa1c7ac58 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x556fa1c7ad68 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x556fa1c7cd78 <col:11>
| |-CXXDestructorDecl 0x556fa1c7c088 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x556fa1982a18 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556fa1982b28 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x556fa19833f0 <col:11>
| |   `-ReturnStmt 0x556fa19833e0 <col:11>
| |     `-UnaryOperator 0x556fa19833c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556fa19833b8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x556fa1982b98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x556fa1982ca8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x556fa1d154b0 <col:11>
|     `-ReturnStmt 0x556fa1d154a0 <col:11>
|       `-UnaryOperator 0x556fa1d15488 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x556fa1d15478 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x556fa1c73c90 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x556fa1c73d90 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x556fa1c73f90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c73d70 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x556fa1c73d50 <col:21> 'int' 0
| |-EnumConstantDecl 0x556fa1c73e20 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x556fa1c73fa8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c73e00 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x556fa1c73de0 <col:23> 'int' 1
| |-EnumConstantDecl 0x556fa1c73eb0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x556fa1c73fc0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1c73e90 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x556fa1c73e70 <col:23> 'int' 2
| `-EnumConstantDecl 0x556fa1c73f40 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x556fa1c73fd8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1c73f20 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x556fa1c73f00 <col:27> 'int' 3
|-CXXMethodDecl 0x556fa1c74018 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x556fa1c740e0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x556fa1c742e8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x556fa1c74190 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x556fa1c74210 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x556fa1c76850 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x556fa1c744f8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x556fa1c743a8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x556fa1c74420 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c745c8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x556fa1c74688 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x556fa1c747f8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x556fa1c74738 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c748c0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x556fa1c74980 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x556fa1c74a40 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x556fa1c74b00 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x556fa1c74ba0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x556fa1c74bd8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x556fa1c74c48 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x556fa1c8bed8 <col:27, line:684:5>
|-CXXMethodDecl 0x556fa1c74d08 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x556fa1c8bee8 <col:27, line:696:5>
|-CXXMethodDecl 0x556fa1c74f08 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c74db8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x556fa1c74e30 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8c070 <col:66, line:700:5>
|   `-ReturnStmt 0x556fa1c8c060 <line:699:9, col:31>
|     `-CallExpr 0x556fa1c8c000 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x556fa1c8bfe8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556fa1c8bf98 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x556fa1af7098 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x556fa1c8c030 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x556fa1c8bf58 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x556fa1c74db8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x556fa1c8c048 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556fa1c8bf78 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c74e30 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c75278 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x556fa1c74fc8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x556fa1c75040 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x556fa1c750b8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x556fa1c75130 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1c8c3c0 <col:64, line:707:5>
|   |-DeclStmt 0x556fa1c8c100 <line:704:9, col:24>
|   | `-VarDecl 0x556fa1c8c098 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x556fa1c8c310 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x556fa1c8c118 <col:9> 'int32_t':'int' lvalue ParmVar 0x556fa1c75040 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x556fa1c8c2f8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x556fa1c8c290 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x556fa1c8c278 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556fa1c8c1f8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x556fa1afc368 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x556fa1c8c2c8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x556fa1c8c198 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x556fa1c750b8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x556fa1c8c2e0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x556fa1c8c1b8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c75130 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x556fa1c8c1d8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x556fa1c8c098 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x556fa1c8c3a0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x556fa1c8c330 <col:9> 'int32_t':'int' lvalue ParmVar 0x556fa1c74fc8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x556fa1c8c388 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x556fa1c8c370 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x556fa1c8c350 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x556fa1c8c098 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x556fa1c75518 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x556fa1c75348 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x556fa1c753c0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x556fa1c75438 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x556fa1c757b8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x556fa1c755e0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x556fa1c75658 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x556fa1c756d0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c75948 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x556fa1c75880 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x556fa1c75b48 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x556fa1c75a00 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x556fa1c75a78 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x556fa1c75e18 <line:717:5, col:73> col:24
| `-FunctionDecl 0x556fa1c75d58 parent 0x556fa1777278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x556fa1c75c08 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x556fa1c75c80 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x556fa1c76038 <line:718:5, col:72> col:24
| `-FunctionDecl 0x556fa1c75f78 parent 0x556fa1777278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x556fa1c75e68 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x556fa1c75ee0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x556fa1c76200 <line:719:5, col:57> col:29
| `-FunctionDecl 0x556fa1c76148 parent 0x556fa1777278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x556fa1c76088 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x556fa1c76488 <line:720:5, col:73> col:30
| `-FunctionDecl 0x556fa1c763c8 parent 0x556fa1777278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x556fa1c76278 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x556fa1c762f0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x556fa1c766a8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x556fa1c765e8 parent 0x556fa1777278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x556fa1c764d8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x556fa1c76550 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x556fa1c7bf30 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1c7c018 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7ca88 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x556fa1c7ca40 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x556fa1c74bd8
| |     `-DeclRefExpr 0x556fa1c7ca20 <col:7> 'const Timestamp' lvalue ParmVar 0x556fa1c7c018 '' 'const Timestamp &'
| `-CompoundStmt 0x556fa1c7cae8 <col:7>
|-CXXConstructorDecl 0x556fa1c7c198 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1c7c2a8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x556fa1c74bd8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556fa1c7cd88 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x556fa1c7cd30 <col:7> 'Timestamp::rep_t' xvalue ._t 0x556fa1c74bd8
| |     `-CXXStaticCastExpr 0x556fa1c7cd00 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x556fa1c7ccd0 <col:7> 'Timestamp' lvalue ParmVar 0x556fa1c7c2a8 '' 'Timestamp &&'
| `-CompoundStmt 0x556fa1c7cde8 <col:7>
|-CXXDestructorDecl 0x556fa1c7c358 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556fa1982868 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1982978 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x556fa1983468 <col:7>
|   |-CXXMemberCallExpr 0x556fa1983408 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x556fa1983348 <col:7> '<bound member function type>' .operator= 0x556fa1982a18
|   | | `-MemberExpr 0x556fa1983258 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x556fa1c74bd8
|   | |   `-CXXThisExpr 0x556fa1983248 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x556fa1983318 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x556fa1c74bd8
|   |   `-DeclRefExpr 0x556fa19832f8 <col:7> 'const Timestamp' lvalue ParmVar 0x556fa1982978 '' 'const Timestamp &'
|   `-ReturnStmt 0x556fa1983458 <col:7>
|     `-UnaryOperator 0x556fa1983440 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556fa1983430 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x556fa1982d18 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x556fa1982e28 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x556fa1d15528 <col:7>
    |-CXXMemberCallExpr 0x556fa1d154c8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x556fa1d15430 <col:7> '<bound member function type>' .operator= 0x556fa1982b98
    | | `-MemberExpr 0x556fa1d15300 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x556fa1c74bd8
    | |   `-CXXThisExpr 0x556fa1d152f0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x556fa1d15400 <col:7> 'Timestamp::rep_t' xvalue ._t 0x556fa1c74bd8
    |   `-CXXStaticCastExpr 0x556fa1d153d0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x556fa1d153a0 <col:7> 'Timestamp' lvalue ParmVar 0x556fa1982e28 '' 'Timestamp &&'
    `-ReturnStmt 0x556fa1d15518 <col:7>
      `-UnaryOperator 0x556fa1d15500 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x556fa1d154f0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1d1a220 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x556fa1d1a3f8 prev 0x556fa1d1a220 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x556fa1d1a488 <col:46, col:52> col:46 public
|-TypedefDecl 0x556fa1d1a4b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1d1feb0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x556fa1d1fe60 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x556fa1d1a960 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x556fa1d1a860 'type'
|     `-TemplateSpecializationType 0x556fa1d1a7f0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x556fa1d1a6d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x556fa1d1a6b0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x556fa1d1a690 <col:24> 'unsigned long' 16
|       `-RecordType 0x556fa1d1a7d0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x556fa1d1a6f0 'char_array'
|-TypedefDecl 0x556fa1d1ff68 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x556fa1d1ff30 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x556fa1d1ff10 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x556fa1d1feb0 'type'
|     `-ElaboratedType 0x556fa1d1fe60 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x556fa1d1a960 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x556fa1d1a860 'type'
|         `-TemplateSpecializationType 0x556fa1d1a7f0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x556fa1d1a6d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x556fa1d1a6b0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x556fa1d1a690 <col:24> 'unsigned long' 16
|           `-RecordType 0x556fa1d1a7d0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x556fa1d1a6f0 'char_array'
|-CXXMethodDecl 0x556fa1d200e8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x556fa1d1fff8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x556fa1d201d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x556fa1d202b8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x556fa1d202b8
|-CXXMethodDecl 0x556fa1d20588 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x556fa1d20490 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x556fa1d207c8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x556fa1d20640 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d206b8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556fa1d20998 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x556fa1d20888 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d20900 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556fa1d20af8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x556fa1d20bc8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x556fa1d20e18 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x556fa1d20c88 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x556fa1d20d00 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556fa1d21078 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x556fa1d20ee8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x556fa1d20f60 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556fa1d21238 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x556fa1d21148 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556fa1d213f8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x556fa1d21300 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556fa1d214b0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1d21560 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1d21798 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x556fa1d21610 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d21688 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x556fa1d21a38 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x556fa1d21940 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x556fa1d21b00 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x556fa1d21b50 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x556fa1d21ba0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1d18b38 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x556fa1d18d48 prev 0x556fa1d18b38 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x556fa1d1a190 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x556fa1d1a140 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x556fa1d1a120 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x556fa1d19fd0 'type'
|     `-SubstTemplateTypeParmType 0x556fa1d19df0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x556fa1a3f220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a3f1c8 'T'
|       `-RecordType 0x556fa1d19940 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x556fa1d19858 'sized_array_memory'
|-FieldDecl 0x556fa1d21bf0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x556fa1d21c40 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x556fa1d21c78 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x556fa1d18de0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|   `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|     `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-TypedefDecl 0x556fa1d21d38 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x556fa1d21d00 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x556fa1d18de0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|       `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-TypedefDecl 0x556fa1d21dc8 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x556fa1d21d90 'const TimerSet::heap_element &'
|   `-QualType 0x556fa1d18de1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x556fa1d18de0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|         `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-TypedefDecl 0x556fa1d21e58 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x556fa1d21e20 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x556fa1d18de0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|       `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-TypedefDecl 0x556fa1d21f18 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x556fa1d21ee0 'const TimerSet::heap_element *'
|   `-QualType 0x556fa1d18de1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x556fa1d18de0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|         `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-TypedefDecl 0x556fa1d22d80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x556fa1d22d30 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x556fa1d22d10 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x556fa1d22c48 'type'
|     `-LValueReferenceType 0x556fa1d22c10 'const TimerSet::heap_element &'
|       `-QualType 0x556fa1d229b1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x556fa1d229b0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x556fa1a498f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556fa1a49898 'T'
|           `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|             `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-TypedefDecl 0x556fa1d22de8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x556fa1d21d90 'const TimerSet::heap_element &'
|   `-QualType 0x556fa1d18de1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x556fa1d18de0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|         `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-TypedefDecl 0x556fa1d22e40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1d22ea8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x556fa1d21e20 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x556fa1d18de0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|       `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-TypedefDecl 0x556fa1d22f10 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x556fa1d21ee0 'const TimerSet::heap_element *'
|   `-QualType 0x556fa1d18de1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x556fa1d18de0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d17d40 'TimerSet::heap_element'
|         `-CXXRecord 0x556fa1d17cb0 'heap_element'
|-EnumDecl 0x556fa1d22f68 <line:134:5> col:5
| `-EnumConstantDecl 0x556fa1d23060 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x556fa1d23040 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556fa1a78598 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556fa1a78570 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556fa1a78550 <col:40> 'int' 1
|-CXXConstructorDecl 0x556fa1d230e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x556fa1d23378 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d231a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d23240 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x556fa1d23638 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x556fa1d23520 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x556fa1d238f8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x556fa1d237e0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x556fa1d23c40 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x556fa1d23b20 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x556fa1d23f50 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x556fa1d23e30 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x556fa1d24240 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d24088 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d24100 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x556fa1d24398 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x556fa1d24478 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d244d0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d24518 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x556fa1d245c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d24620 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d246e8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d24798 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d247f0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d24838 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d248e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d24940 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d24988 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d24a38 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d24a90 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d24ad8 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d24b88 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d24be0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d24c08 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1d24cb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1d24d68 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x556fa1d24f28 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d24e18 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d24e90 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x556fa1d25078 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d24fe8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d25228 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x556fa1d25130 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1d252e0 <col:20>
| `-OptimizeNoneAttr 0x556fa1d25338 <col:30>
|-CXXMethodDecl 0x556fa1d25458 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x556fa1d25360 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1d25510 <col:20>
| `-OptimizeNoneAttr 0x556fa1d25568 <col:30>
|-CXXMethodDecl 0x556fa1d25620 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d25590 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d25768 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1d256d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d25898 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x556fa1d259c8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x556fa1d25a98 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x556fa1d25b68 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x556fa1d25ca8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d25c18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d25df0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1d25d60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d25f38 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x556fa1d25ea8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1d25ff0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x556fa1d260f0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x556fa1d26060 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1d261a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x556fa1d26268 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x556fa1d26368 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x556fa1d26518 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1d26428 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x556fa1d26d08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x556fa1d265d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x556fa1d26c68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x556fa1d26b68 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x556fa1d26de8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1d26f38 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1d26ea8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x556fa1d26ff0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x556fa1d27238 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d270b0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x556fa1d27128 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x556fa1d27490 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x556fa1d27308 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x556fa1d276e8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x556fa1d27558 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x556fa1d275d0 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x556fa1d277a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1d27a08 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x556fa1d27910 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x556fa1d27ad8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x556fa1d27ad8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1d29000 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x556fa1d291d8 prev 0x556fa1d29000 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x556fa1d29268 <col:46, col:52> col:46 public
|-TypedefDecl 0x556fa1d29290 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1d2ae60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x556fa1d2ae10 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x556fa1d29740 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x556fa1d29640 'type'
|     `-TemplateSpecializationType 0x556fa1d295d0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x556fa1d294b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x556fa1d29490 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x556fa1d29470 <col:24> 'unsigned long' 8
|       `-RecordType 0x556fa1d295b0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x556fa1d294d0 'char_array'
|-TypedefDecl 0x556fa1d2af18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x556fa1d2aee0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x556fa1d2aec0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x556fa1d2ae60 'type'
|     `-ElaboratedType 0x556fa1d2ae10 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x556fa1d29740 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x556fa1d29640 'type'
|         `-TemplateSpecializationType 0x556fa1d295d0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x556fa1d294b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x556fa1d29490 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x556fa1d29470 <col:24> 'unsigned long' 8
|           `-RecordType 0x556fa1d295b0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x556fa1d294d0 'char_array'
|-CXXMethodDecl 0x556fa1d2b098 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x556fa1d2afa8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x556fa1d2b188 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x556fa1d2b268 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x556fa1d2b268
|-CXXMethodDecl 0x556fa1d2b538 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x556fa1d2b440 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x556fa1d2b778 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x556fa1d2b5f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d2b668 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x556fa1d2b948 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x556fa1d2b838 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d2b8b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x556fa1d2baa8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x556fa1d2bb78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x556fa1d2bdc8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x556fa1d2bc38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x556fa1d2bcb0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x556fa1d2c028 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x556fa1d2be98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x556fa1d2bf10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x556fa1d2c1e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x556fa1d2c0f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x556fa1d2c3a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x556fa1d2c2b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x556fa1d2c460 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1d2c510 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1d2c748 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x556fa1d2c5c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d2c638 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x556fa1d2c9e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x556fa1d2c8f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x556fa1d2cab0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x556fa1d2cb00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x556fa1d2cb50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1d27c20 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x556fa1d27e28 prev 0x556fa1d27c20 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x556fa1d28f70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x556fa1d28f20 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x556fa1d28f00 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x556fa1d28db0 'type'
|     `-SubstTemplateTypeParmType 0x556fa1d28bd0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x556fa1a3f220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a3f1c8 'T'
|       `-RecordType 0x556fa1d28720 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x556fa1d28638 'sized_array_memory'
|-FieldDecl 0x556fa1d2cba0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x556fa1d2cbf0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x556fa1d2cc28 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x556fa1d27ec0 'Timer *' sugar
|   |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|   `-PointerType 0x556fa1cdbcc0 'Timer *'
|     `-RecordType 0x556fa1cdae10 'Timer'
|       `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-TypedefDecl 0x556fa1d2cce8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x556fa1d2ccb0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x556fa1d27ec0 'Timer *' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-PointerType 0x556fa1cdbcc0 'Timer *'
|       `-RecordType 0x556fa1cdae10 'Timer'
|         `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-TypedefDecl 0x556fa1d2cda8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x556fa1d2cd70 'Timer *const &'
|   `-QualType 0x556fa1d27ec1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x556fa1d27ec0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-PointerType 0x556fa1cdbcc0 'Timer *'
|         `-RecordType 0x556fa1cdae10 'Timer'
|           `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-TypedefDecl 0x556fa1d2ce68 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x556fa1d2ce30 'Timer **'
|   `-SubstTemplateTypeParmType 0x556fa1d27ec0 'Timer *' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-PointerType 0x556fa1cdbcc0 'Timer *'
|       `-RecordType 0x556fa1cdae10 'Timer'
|         `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-TypedefDecl 0x556fa1d2cf28 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x556fa1d2cef0 'Timer *const *'
|   `-QualType 0x556fa1d27ec1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x556fa1d27ec0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-PointerType 0x556fa1cdbcc0 'Timer *'
|         `-RecordType 0x556fa1cdae10 'Timer'
|           `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-TypedefDecl 0x556fa1d2db00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x556fa1d2dab0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x556fa1d2da90 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x556fa1d2da20 'type'
|     `-SubstTemplateTypeParmType 0x556fa1d2d7e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556fa1a4a020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a49fd0 'T'
|       `-PointerType 0x556fa1cdbcc0 'Timer *'
|         `-RecordType 0x556fa1cdae10 'Timer'
|           `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-TypedefDecl 0x556fa1d2db68 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x556fa1d2cd70 'Timer *const &'
|   `-QualType 0x556fa1d27ec1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x556fa1d27ec0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-PointerType 0x556fa1cdbcc0 'Timer *'
|         `-RecordType 0x556fa1cdae10 'Timer'
|           `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-TypedefDecl 0x556fa1d2dbc0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1d2dc28 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x556fa1d2ce30 'Timer **'
|   `-SubstTemplateTypeParmType 0x556fa1d27ec0 'Timer *' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-PointerType 0x556fa1cdbcc0 'Timer *'
|       `-RecordType 0x556fa1cdae10 'Timer'
|         `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-TypedefDecl 0x556fa1d2dc90 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x556fa1d2cef0 'Timer *const *'
|   `-QualType 0x556fa1d27ec1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x556fa1d27ec0 'Timer *' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-PointerType 0x556fa1cdbcc0 'Timer *'
|         `-RecordType 0x556fa1cdae10 'Timer'
|           `-CXXRecord 0x556fa1c5eaa8 'Timer'
|-EnumDecl 0x556fa1d2dce8 <line:134:5> col:5
| `-EnumConstantDecl 0x556fa1d2dde0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x556fa1d2ddc0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556fa1a78598 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556fa1a78570 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556fa1a78550 <col:40> 'int' 1
|-CXXConstructorDecl 0x556fa1d2de68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x556fa1d2e0f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d2df20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d2dfc0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x556fa1d2e3b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x556fa1d2e2a0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x556fa1d2e678 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x556fa1d2e560 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x556fa1d2e9c0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x556fa1d2e8a0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x556fa1d2ecd0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x556fa1d2ebb0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x556fa1d2efc0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d2ee08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d2ee80 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x556fa1d2f118 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x556fa1d2f1f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d2f250 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d2f298 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x556fa1d2f348 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d2f3a0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d334b0 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d33560 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d335b8 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d33600 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d336b0 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d33708 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d33750 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d33800 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d33858 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d338a0 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d33950 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d339a8 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d339d0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1d33a80 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1d33b30 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x556fa1d33cf0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d33be0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d33c58 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x556fa1d33e40 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d33db0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d33fe8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x556fa1d33ef8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1d340a0 <col:20>
| `-OptimizeNoneAttr 0x556fa1d340f8 <col:30>
|-CXXMethodDecl 0x556fa1d34218 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x556fa1d34120 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1d342d0 <col:20>
| `-OptimizeNoneAttr 0x556fa1d34328 <col:30>
|-CXXMethodDecl 0x556fa1d343e0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d34350 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d34528 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1d34498 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d34658 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x556fa1d34788 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x556fa1d34858 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x556fa1d34928 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x556fa1d34a68 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d349d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d34bb0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1d34b20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d34cf8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x556fa1d34c68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1d34db0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x556fa1d34eb0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x556fa1d34e20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1d34f68 <col:60> Inherited "" ""
|-CXXMethodDecl 0x556fa1d35028 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x556fa1d35128 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x556fa1d352a8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1d351e8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x556fa1d35a68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x556fa1d35360 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x556fa1d359c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x556fa1d358c8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x556fa1d35b48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1d35c98 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1d35c08 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x556fa1d35d50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x556fa1d35f98 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d35e10 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x556fa1d35e88 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x556fa1d36158 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x556fa1d36068 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x556fa1d363a8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x556fa1d36220 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x556fa1d36298 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x556fa1d36468 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1d366c8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x556fa1d365d0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x556fa1d36798 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x556fa1d36798

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1cf5370 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1cf5488 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x556fa1cf5518 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x556fa1cf55a0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x556fa1cf5690 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x556fa1cf5790 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x556fa1cf5850 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x556fa1cf5910 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x556fa1cf5a38 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x556fa1cf5a38
| `-ParmVarDecl 0x556fa1cf5b48 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x556fa1d37548 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x556fa1d37548
  `-ParmVarDecl 0x556fa1d37658 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1d16e30 prev 0x556fa1c62c58 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x556fa1d16f28 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x556fa1d16fb8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x556fa1d17040 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x556fa1d17138 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x556fa1d379c0 <col:43, col:67>
|   `-ReturnStmt 0x556fa1d379b0 <col:45, col:52>
|     `-CXXConstructExpr 0x556fa1d37980 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x556fa1d37950 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x556fa1d18920
|         `-CXXThisExpr 0x556fa1d37940 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x556fa1d171f8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x556fa1d17400 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x556fa1d172a8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x556fa1d17320 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x556fa1d174f8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x556fa1d175c0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x556fa1d37a40 <col:39, col:67>
|   `-ReturnStmt 0x556fa1d37a30 <col:41, col:48>
|     `-ImplicitCastExpr 0x556fa1d37a18 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x556fa1d379e8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x556fa1d18a08
|         `-CXXThisExpr 0x556fa1d379d8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x556fa1d17688 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x556fa1d37ac0 <col:35, col:59>
|   `-ReturnStmt 0x556fa1d37ab0 <col:37, col:44>
|     `-ImplicitCastExpr 0x556fa1d37a98 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x556fa1d37a68 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x556fa1d18a70
|         `-CXXThisExpr 0x556fa1d37a58 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x556fa1d177d0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x556fa1d17740 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x556fa1d17918 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x556fa1d17888 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x556fa1d17b18 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x556fa1d179d0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x556fa1d17a48 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x556fa1d17be8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x556fa1d17c88 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x556fa1d17cb0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556fa1d17dc8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x556fa1d17e68 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x556fa1d17ec8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x556fa1d17ff8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x556fa1d17f28 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x556fa1d17e68 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x556fa1d37b98 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x556fa1d37b40 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x556fa1d37b10 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x556fa1c600e8
|   |       `-ImplicitCastExpr 0x556fa1d37b60 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x556fa1d37af8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x556fa1d37ad8 <col:17> 'Timer *' lvalue ParmVar 0x556fa1d17f28 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x556fa1d17ec8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x556fa1d37c30 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x556fa1d37bf0 <col:41> 'Timer *' lvalue ParmVar 0x556fa1d17f28 't_' 'Timer *'
|   `-CompoundStmt 0x556fa1d37c80 <col:45, line:44:2>
|-CXXRecordDecl 0x556fa1d180c0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556fa1d181d8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x556fa1d18428 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x556fa1d182a8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x556fa1d18320 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x556fa1d37db0 <col:71, line:49:2>
|     `-ReturnStmt 0x556fa1d37da0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x556fa1d37d68 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x556fa1d37d50 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x556fa1d37d30 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x556fa1c99028 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x556fa1d37cb0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x556fa1d17e68
|         | `-DeclRefExpr 0x556fa1d37c90 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x556fa1d182a8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x556fa1d37d00 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x556fa1d17e68
|           `-DeclRefExpr 0x556fa1d37ce0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x556fa1d18320 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x556fa1d184f0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556fa1d18608 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x556fa1d18828 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x556fa1d186a8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x556fa1d18720 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x556fa1d37fb8 <col:63, line:54:2>
|     `-BinaryOperator 0x556fa1d37f98 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x556fa1d37e48 <col:6, col:12> 'int' lvalue ->_schedpos1 0x556fa1c620f8
|       | `-ImplicitCastExpr 0x556fa1d37e30 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x556fa1d37e00 <col:6, col:9> 'Timer *' lvalue ->t 0x556fa1d17ec8
|       |     `-ImplicitCastExpr 0x556fa1d37de8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x556fa1d37dc8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x556fa1d18720 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x556fa1d37f80 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x556fa1d37f60 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x556fa1d37f08 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x556fa1d37ee8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x556fa1d37eb8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x556fa1d37e78 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x556fa1d18720 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x556fa1d37ed0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x556fa1d37e98 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x556fa1d186a8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x556fa1d37f48 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x556fa1d37f28 <col:39> 'int' 1
|-FieldDecl 0x556fa1d18920 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x556fa1d18990 <col:44, col:53> aligned
|   `-ConstantExpr 0x556fa1d18970 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x556fa1d188f0 <col:52> 'int' 8
|-FieldDecl 0x556fa1d18a08 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x556fa1d18a70 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x556fa1d18ad8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x556fa1d27bc0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x556fa1d36880 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x556fa1d368e0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x556fa1d36940 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x556fa1d369a0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1d36a90 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x556fa1d36a00 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x556fa1d36b58 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x556fa1d38410 <col:29, line:81:5>
|   `-IfStmt 0x556fa1d383e8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x556fa1d380a0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x556fa1d38040 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x556fa1d38010 <col:6, col:18> '<bound member function type>' .size 0x556fa1d24c08
|     |     `-ImplicitCastExpr 0x556fa1d38088 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x556fa1d37fe0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x556fa1d27bc0
|     |         `-CXXThisExpr 0x556fa1d37fd0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x556fa1d38290 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x556fa1d38278 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x556fa1d38258 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x556fa1982868 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x556fa1d380c8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x556fa1d18920
|     | | `-CXXThisExpr 0x556fa1d380b8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x556fa1d38240 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x556fa1d38210 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x556fa1d17e68
|     |     `-CXXMemberCallExpr 0x556fa1d381e8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x556fa1d381b8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x556fa1d25ca8
|     |       | `-MemberExpr 0x556fa1d38108 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x556fa1d27bc0
|     |       |   `-CXXThisExpr 0x556fa1d380f8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x556fa1d38198 <col:47> 'int' 0
|     `-ExprWithCleanups 0x556fa1d383d0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x556fa1d38398 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x556fa1d38380 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x556fa1d38360 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x556fa1982d18 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x556fa1d382d8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x556fa1d18920
|         | `-CXXThisExpr 0x556fa1d382c8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x556fa1d38348 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x556fa1d38318 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x556fa1d36c98 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x556fa1d36c08 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x556fa1d36d60 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x556fa1d36e20 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x556fa1d36ee0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x556fa1d36fd0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x556fa1d37038 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x556fa1d37038
| `-ParmVarDecl 0x556fa1d37148 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x556fa1d371e8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x556fa1d371e8
| `-ParmVarDecl 0x556fa1d372f8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x556fa1d37398 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x556fa1d37398
| `-ParmVarDecl 0x556fa1d374a8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x556fa1d376c8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x556fa1d376c8
| `-ParmVarDecl 0x556fa1d377d8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x556fa1d37860 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x556fa1d37860

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1d6e2a8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x556fa1d6e4b8 prev 0x556fa1d6e2a8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x556fa1d6f590 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x556fa1d6f540 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x556fa1d6f520 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x556fa1d6f3d0 'type'
|     `-SubstTemplateTypeParmType 0x556fa1d28bd0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x556fa1a3f220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a3f1c8 'T'
|       `-RecordType 0x556fa1d28720 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x556fa1d28638 'sized_array_memory'
|-FieldDecl 0x556fa1d6f690 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x556fa1d6f6e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x556fa1d6f718 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x556fa1d6e550 'pollfd' sugar
|   |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|   `-RecordType 0x556fa1d62320 'pollfd'
|     `-CXXRecord 0x556fa1d62290 'pollfd'
|-TypedefDecl 0x556fa1d6f7d8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x556fa1d6f7a0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x556fa1d6e550 'pollfd' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d62320 'pollfd'
|       `-CXXRecord 0x556fa1d62290 'pollfd'
|-TypedefDecl 0x556fa1d6f898 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x556fa1d6f860 'const pollfd &'
|   `-QualType 0x556fa1d6e551 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x556fa1d6e550 'pollfd' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d62320 'pollfd'
|         `-CXXRecord 0x556fa1d62290 'pollfd'
|-TypedefDecl 0x556fa1d6f928 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x556fa1d6f8f0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x556fa1d6e550 'pollfd' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d62320 'pollfd'
|       `-CXXRecord 0x556fa1d62290 'pollfd'
|-TypedefDecl 0x556fa1d6f9e8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x556fa1d6f9b0 'const pollfd *'
|   `-QualType 0x556fa1d6e551 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x556fa1d6e550 'pollfd' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d62320 'pollfd'
|         `-CXXRecord 0x556fa1d62290 'pollfd'
|-TypedefDecl 0x556fa1d705c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x556fa1d70570 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x556fa1d70550 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x556fa1d704e0 'type'
|     `-SubstTemplateTypeParmType 0x556fa1d702a0 'pollfd' sugar
|       |-TemplateTypeParmType 0x556fa1a4a020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a49fd0 'T'
|       `-RecordType 0x556fa1d62320 'pollfd'
|         `-CXXRecord 0x556fa1d62290 'pollfd'
|-TypedefDecl 0x556fa1d70628 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x556fa1d6f860 'const pollfd &'
|   `-QualType 0x556fa1d6e551 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x556fa1d6e550 'pollfd' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d62320 'pollfd'
|         `-CXXRecord 0x556fa1d62290 'pollfd'
|-TypedefDecl 0x556fa1d70680 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1d706e8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x556fa1d6f8f0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x556fa1d6e550 'pollfd' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d62320 'pollfd'
|       `-CXXRecord 0x556fa1d62290 'pollfd'
|-TypedefDecl 0x556fa1d70750 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x556fa1d6f9b0 'const pollfd *'
|   `-QualType 0x556fa1d6e551 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x556fa1d6e550 'pollfd' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d62320 'pollfd'
|         `-CXXRecord 0x556fa1d62290 'pollfd'
|-EnumDecl 0x556fa1d707a8 <line:134:5> col:5
| `-EnumConstantDecl 0x556fa1d708a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x556fa1d70880 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556fa1a78598 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556fa1a78570 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556fa1a78550 <col:40> 'int' 1
|-CXXConstructorDecl 0x556fa1d70928 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x556fa1d70bb8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d709e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d70a80 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x556fa1d70e78 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x556fa1d70d60 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x556fa1d71138 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x556fa1d71020 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x556fa1d71480 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x556fa1d71360 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x556fa1d71790 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x556fa1d71670 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x556fa1d71a80 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d718c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d71940 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x556fa1d71bd8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x556fa1d71cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d71d10 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d71d58 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x556fa1d71e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d71e60 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d71f28 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d71fd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d72030 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d72078 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d72128 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d72180 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d721c8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d72278 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d722d0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d72318 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d723c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d72420 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d72448 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1d724f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1d725a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x556fa1d72768 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d72658 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d726d0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x556fa1d728b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d72828 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d72a68 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x556fa1d72970 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1d72b20 <col:20>
| `-OptimizeNoneAttr 0x556fa1d72b78 <col:30>
|-CXXMethodDecl 0x556fa1d72c98 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x556fa1d72ba0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1d72d50 <col:20>
| `-OptimizeNoneAttr 0x556fa1d72da8 <col:30>
|-CXXMethodDecl 0x556fa1d72e60 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d72dd0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d72fa8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1d72f18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d730d8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x556fa1d73208 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x556fa1d732d8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x556fa1d733a8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x556fa1d734e8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d73458 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d73630 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1d735a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d73778 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x556fa1d736e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1d73830 <col:48> Inherited "" ""
|-CXXMethodDecl 0x556fa1d73930 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x556fa1d738a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1d739e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x556fa1d73aa8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x556fa1d73ba8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x556fa1d73d58 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1d73c68 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x556fa1d74518 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x556fa1d73e10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x556fa1d74478 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x556fa1d74378 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x556fa1d745f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1d74748 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1d746b8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x556fa1d74800 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x556fa1d74a48 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d748c0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x556fa1d74938 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x556fa1d74c08 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x556fa1d74b18 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x556fa1d74e58 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x556fa1d74cd0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x556fa1d74d48 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x556fa1d74f18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1d75198 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x556fa1d75080 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x556fa1d75268 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x556fa1d75268

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1d76850 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x556fa1d76a28 prev 0x556fa1d76850 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x556fa1d76ab8 <col:46, col:52> col:46 public
|-TypedefDecl 0x556fa1d76ae0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1d786b0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x556fa1d78660 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x556fa1d76f90 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x556fa1d76e90 'type'
|     `-TemplateSpecializationType 0x556fa1d76e20 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x556fa1d76d00 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x556fa1d76ce0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x556fa1d76cc0 <col:24> 'unsigned long' 24
|       `-RecordType 0x556fa1d76e00 'char_array<24>'
|         `-ClassTemplateSpecialization 0x556fa1d76d20 'char_array'
|-TypedefDecl 0x556fa1d78768 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x556fa1d78730 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x556fa1d78710 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x556fa1d786b0 'type'
|     `-ElaboratedType 0x556fa1d78660 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x556fa1d76f90 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x556fa1d76e90 'type'
|         `-TemplateSpecializationType 0x556fa1d76e20 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x556fa1d76d00 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x556fa1d76ce0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x556fa1d76cc0 <col:24> 'unsigned long' 24
|           `-RecordType 0x556fa1d76e00 'char_array<24>'
|             `-ClassTemplateSpecialization 0x556fa1d76d20 'char_array'
|-CXXMethodDecl 0x556fa1d788e8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x556fa1d787f8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x556fa1d789d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x556fa1d78ab8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x556fa1d78ab8
|-CXXMethodDecl 0x556fa1d78d88 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x556fa1d78c90 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x556fa1d78fc8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x556fa1d78e40 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d78eb8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x556fa1d79198 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x556fa1d79088 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d79100 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x556fa1d792f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x556fa1d793c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x556fa1d79618 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x556fa1d79488 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x556fa1d79500 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x556fa1d79878 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x556fa1d796e8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x556fa1d79760 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x556fa1d79a38 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x556fa1d79948 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x556fa1d79bf8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x556fa1d79b00 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x556fa1d79cb0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1d79d60 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1d79f98 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x556fa1d79e10 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1d79e88 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x556fa1d7a238 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x556fa1d7a140 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x556fa1d7a300 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x556fa1d7a350 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x556fa1d7a3a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1d753b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x556fa1d755b8 prev 0x556fa1d753b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x556fa1d767c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x556fa1d76770 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x556fa1d76750 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x556fa1d76600 'type'
|     `-SubstTemplateTypeParmType 0x556fa1d76420 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x556fa1a3f220 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a3f1c8 'T'
|       `-RecordType 0x556fa1d75f70 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x556fa1d75e90 'sized_array_memory'
|-FieldDecl 0x556fa1d7a3f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x556fa1d7a440 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x556fa1d7a478 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x556fa1d75650 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|   `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-TypedefDecl 0x556fa1d7a538 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x556fa1d7a500 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x556fa1d75650 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-TypedefDecl 0x556fa1d7a5f8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x556fa1d7a5c0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x556fa1d75651 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x556fa1d75650 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-TypedefDecl 0x556fa1d7a688 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x556fa1d7a650 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x556fa1d75650 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-TypedefDecl 0x556fa1d7a748 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x556fa1d7a710 'const SelectSet::SelectorInfo *'
|   `-QualType 0x556fa1d75651 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x556fa1d75650 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-TypedefDecl 0x556fa1d7b3a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x556fa1d7b350 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x556fa1d7b330 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x556fa1d7b268 'type'
|     `-LValueReferenceType 0x556fa1d7b230 'const SelectSet::SelectorInfo &'
|       `-QualType 0x556fa1d7afd1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x556fa1d7afd0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x556fa1a498f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556fa1a49898 'T'
|           `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-TypedefDecl 0x556fa1d7b408 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x556fa1d7a5c0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x556fa1d75651 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x556fa1d75650 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-TypedefDecl 0x556fa1d7b460 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1d7b4c8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x556fa1d7a650 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x556fa1d75650 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-TypedefDecl 0x556fa1d7b530 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x556fa1d7a710 'const SelectSet::SelectorInfo *'
|   `-QualType 0x556fa1d75651 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x556fa1d75650 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1d6de10 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x556fa1d6dd80 'SelectorInfo'
|-EnumDecl 0x556fa1d7b588 <line:134:5> col:5
| `-EnumConstantDecl 0x556fa1d7b680 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x556fa1d7b660 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556fa1a78598 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556fa1a78570 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556fa1a78550 <col:40> 'int' 1
|-CXXConstructorDecl 0x556fa1d7b708 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x556fa1d7b998 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d7b7c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d7b860 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x556fa1d7bc58 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x556fa1d7bb40 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x556fa1d7bf18 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x556fa1d7be00 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x556fa1d7c260 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x556fa1d7c140 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x556fa1d7c570 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x556fa1d7c450 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x556fa1d7c860 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d7c6a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d7c720 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x556fa1d7c9b8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x556fa1d7ca98 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d7caf0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d7cb38 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x556fa1d7cbe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d7cc40 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d7cd08 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d7cdb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d7ce10 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d7ce58 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d7cf08 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d7cf60 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d7cfa8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d7d058 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d7d0b0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d7d150 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x556fa1d7d200 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1d7d258 <col:30> Inherited
|-CXXMethodDecl 0x556fa1d7d280 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1d7d330 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1d7d3e0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x556fa1d7d5a0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d7d490 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1d7d508 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x556fa1d7d6f0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d7d660 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d7d898 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x556fa1d7d7a8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1d7d950 <col:20>
| `-OptimizeNoneAttr 0x556fa1d7d9a8 <col:30>
|-CXXMethodDecl 0x556fa1d7dac8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x556fa1d7d9d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1d7db80 <col:20>
| `-OptimizeNoneAttr 0x556fa1d7dbd8 <col:30>
|-CXXMethodDecl 0x556fa1d7dc90 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d7dc00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d7ddd8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1d7dd48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d7df08 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x556fa1d7e038 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x556fa1d7e108 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x556fa1d7e1d8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x556fa1d7e318 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1d7e288 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d7e460 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1d7e3d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1d7e5a8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x556fa1d7e518 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1d7e660 <col:48> Inherited "" ""
|-CXXMethodDecl 0x556fa1d7e760 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x556fa1d7e6d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1d7e818 <col:60> Inherited "" ""
|-CXXMethodDecl 0x556fa1d7e8d8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x556fa1d7e9d8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x556fa1d7eb88 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1d7ea98 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x556fa1d7f348 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x556fa1d7ec40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x556fa1d7f2a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x556fa1d7f1a8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x556fa1d7f428 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1d7f578 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1d7f4e8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x556fa1d7f630 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x556fa1d7f878 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1d7f6f0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x556fa1d7f768 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x556fa1d7fa38 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x556fa1d7f948 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x556fa1d7fc88 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x556fa1d7fb00 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x556fa1d7fb78 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x556fa1d7fd48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1d7ffa8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x556fa1d7feb0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x556fa1d80078 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x556fa1d80078

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1d62f20 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1d63038 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x556fa1d630c8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x556fa1d6d190 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x556fa1d6d280 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x556fa1d6d280
|-CXXMethodDecl 0x556fa1d6d380 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x556fa1d6d620 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x556fa1d6d438 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x556fa1d6d4b0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x556fa1d6d530 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x556fa1d6d890 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x556fa1d6d6f0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x556fa1d6d768 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x556fa1d6d7e8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x556fa1d6d9e8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x556fa1d6d958 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x556fa1d6dab0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x556fa1d81728 <col:34, line:50:5>
|   |-BinaryOperator 0x556fa1d810f8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x556fa1d810b8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x556fa1d6e238
|   | | `-CXXThisExpr 0x556fa1d810a8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x556fa1d810e8 <col:23> 'bool' true
|   `-CallExpr 0x556fa1d81700 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x556fa1d816e8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x556fa1d81668 <col:2> 'void (long)' lvalue Function 0x556fa1d81568 'ignore_result' 'void (long)' (FunctionTemplate 0x556fa1a3a1c8 'ignore_result')
|     `-CallExpr 0x556fa1d81310 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x556fa1d812f8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556fa1d81278 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x556fa1d3b4c0 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x556fa1d81348 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x556fa1d81220 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x556fa1d81208 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x556fa1d811b8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x556fa1d6e1d8
|       |   |   `-CXXThisExpr 0x556fa1d811a8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x556fa1d811e8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x556fa1d81378 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x556fa1d81360 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x556fa1d81240 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x556fa1d81390 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x556fa1d81258 <col:41> 'int' 1
|-CXXMethodDecl 0x556fa1d6dbf0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x556fa1d6db60 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x556fa1d6dcb8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x556fa1d6dd58 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x556fa1d6dd80 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556fa1d6de98 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x556fa1d6df38 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x556fa1d6df98 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x556fa1d6e000 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x556fa1d6e0b0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x556fa1d6df38 'read' 'Element *'
|   | `-ImplicitCastExpr 0x556fa1d81788 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x556fa1d81748 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x556fa1d6df98 'write' 'Element *'
|   | `-ImplicitCastExpr 0x556fa1d81808 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x556fa1d817c8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x556fa1d6e000 'pollfd' 'int'
|   | `-UnaryOperator 0x556fa1d81868 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x556fa1d81848 <col:35> 'int' 1
|   `-CompoundStmt 0x556fa1d818e0 <line:64:2, line:65:2>
|-FieldDecl 0x556fa1d6e1d8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x556fa1d6e238 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x556fa1d75350 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x556fa1d80160 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x556fa1d80398 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x556fa1d801c8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x556fa1d80240 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x556fa1d802b8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x556fa1d80580 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x556fa1d80468 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x556fa1d804e8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x556fa1d807c8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x556fa1d80648 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x556fa1d806c8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x556fa1d809d8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x556fa1d80888 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x556fa1d80900 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x556fa1d80b28 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x556fa1d80a98 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x556fa1d80bf0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x556fa1d80cb0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x556fa1d80d78 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x556fa1d80d78
| `-ParmVarDecl 0x556fa1d80e88 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x556fa1d80f28 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x556fa1d80f28
  `-ParmVarDecl 0x556fa1d81038 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1cf42d8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1cf43f8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x556fa1cf4488 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x556fa1cf4510 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x556fa1cf4600 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x556fa1cf4700 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x556fa1cf47c0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x556fa1cf4880 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x556fa1cf4968 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x556fa1cf4a88 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x556fa1cf4a88
| `-ParmVarDecl 0x556fa1cf4b98 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x556fa1d86538 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x556fa1d86538
  `-ParmVarDecl 0x556fa1d86648 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1c5c818 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1c5c938 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x556fa1c5c9d8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x556fa1c5ca38 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x556fa1d85b38 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x556fa1d85b38
| `-ParmVarDecl 0x556fa1d85c48 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x556fa1d85ce8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x556fa1d85ce8
| `-ParmVarDecl 0x556fa1d85df8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x556fa1d85e68 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d85e68
|-CXXMethodDecl 0x556fa1d866e8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x556fa1d866e8
| `-ParmVarDecl 0x556fa1d867f8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x556fa1d86868 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x556fa1d86868
| `-ParmVarDecl 0x556fa1d86978 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x556fa1d8cfe8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x556fa1d8d0c0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1cf61d0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1cf62e8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x556fa1cf6378 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x556fa1cf6400 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x556fa1cf64c0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-CXXMethodDecl 0x556fa1cf6588 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x556fa1cf6628 <col:45> always_inline
|-CXXMethodDecl 0x556fa1cf6758 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x556fa1cf6690 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x556fa1cf6800 <col:49> always_inline
|-CXXConstructorDecl 0x556fa1cf68f8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x556fa1cf68f8
| `-ParmVarDecl 0x556fa1cf6a08 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x556fa1cf6aa8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x556fa1cf6aa8
| `-ParmVarDecl 0x556fa1cf6bb8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x556fa1d85f50 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d85f50
|-CXXMethodDecl 0x556fa1d86a18 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x556fa1d86a18
| `-ParmVarDecl 0x556fa1d86b28 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x556fa1d86b98 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x556fa1d86b98
  `-ParmVarDecl 0x556fa1d86ca8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1d81d50 prev 0x556fa1d62e90 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x556fa1d81e48 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x556fa1d81ed8 <col:22, col:28> col:22 public
|-EnumDecl 0x556fa1d81f00 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x556fa1d82018 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x556fa1d81ff8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x556fa1d81fe0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x556fa1d81fc0 <col:32> 'int' 1
| `-EnumConstantDecl 0x556fa1d820c0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x556fa1d820a0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x556fa1d82088 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x556fa1d82068 <col:53> 'int' 1000
|-CXXMethodDecl 0x556fa1d82160 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x556fa1d82220 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x556fa1d82308 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x556fa1d86d68 <col:34, col:52>
|   `-ReturnStmt 0x556fa1d86d58 <col:36, col:43>
|     `-MemberExpr 0x556fa1d86d28 <col:43> 'TimerSet' lvalue ->_timers 0x556fa1d83fd8
|       `-CXXThisExpr 0x556fa1d86d18 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x556fa1d823f8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x556fa1d86dd0 <col:46, col:64>
|   `-ReturnStmt 0x556fa1d86dc0 <col:48, col:55>
|     `-MemberExpr 0x556fa1d86d90 <col:55> 'const TimerSet' lvalue ->_timers 0x556fa1d83fd8
|       `-CXXThisExpr 0x556fa1d86d80 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x556fa1d824e8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x556fa1d86e38 <col:36, col:55>
|   `-ReturnStmt 0x556fa1d86e28 <col:38, col:45>
|     `-MemberExpr 0x556fa1d86df8 <col:45> 'SelectSet' lvalue ->_selects 0x556fa1d84038
|       `-CXXThisExpr 0x556fa1d86de8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x556fa1d825d8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x556fa1d86ea0 <col:48, col:67>
|   `-ReturnStmt 0x556fa1d86e90 <col:50, col:57>
|     `-MemberExpr 0x556fa1d86e60 <col:57> 'const SelectSet' lvalue ->_selects 0x556fa1d84038
|       `-CXXThisExpr 0x556fa1d86e50 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x556fa1d82698 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x556fa1d82788 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x556fa1d828f8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x556fa1d82838 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x556fa1d829c0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x556fa1d82e08 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x556fa1d82a70 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x556fa1d82cf0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x556fa1d82ed8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x556fa1d82f98 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x556fa1d83058 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x556fa1d83198 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x556fa1d83108 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x556fa1d83260 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x556fa1d83320 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x556fa1d833e0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x556fa1d834a0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x556fa1d835e0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x556fa1d83550 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x556fa1d836a8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x556fa1d83768 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x556fa1d83808 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x556fa1d838d0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d83920 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d83970 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d839c0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d83a10 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d83a60 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d83ab0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d83b00 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d83b50 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x556fa1d83ba0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x556fa1d83bf0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x556fa1d83ce8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x556fa1d83c58 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x556fa1d83e38 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x556fa1d83da8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x556fa1d83ee0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x556fa1d83f18 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x556fa1d83f78 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x556fa1d83fd8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x556fa1d84038 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x556fa1d840b8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x556fa1d84128 <col:40, col:50> aligned
|   `-ConstantExpr 0x556fa1d84108 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x556fa1d84088 <col:48> 'int' 64
|-FieldDecl 0x556fa1d84198 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x556fa1d841f8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x556fa1d842f0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x556fa1d84400 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x556fa1d84460 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x556fa1d844e0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x556fa1d84550 <col:36, col:46> aligned
|   `-ConstantExpr 0x556fa1d84530 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x556fa1d844b0 <col:44> 'int' 64
|-FieldDecl 0x556fa1d845c8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x556fa1d84628 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x556fa1d84678 <line:170:3, col:9> col:3 public
|-FieldDecl 0x556fa1d846b8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x556fa1d84720 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x556fa1d84770 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x556fa1d84918 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x556fa1d847a8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x556fa1d84828 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x556fa1d84a18 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x556fa1d84a18
|-CXXMethodDecl 0x556fa1d84b20 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x556fa1d84be8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x556fa1d86f98 <col:34, line:217:5>
|   `-ReturnStmt 0x556fa1d86f88 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x556fa1d86f70 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x556fa1d86f40 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x556fa1cf8d30
|         `-ImplicitCastExpr 0x556fa1d86f28 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x556fa1d86ef8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x556fa1cf8cc8
|             `-MemberExpr 0x556fa1d86ec8 <col:16> 'const TaskLink' lvalue ->_task_link 0x556fa1d83f18
|               `-CXXThisExpr 0x556fa1d86eb8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x556fa1d84ca8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x556fa1d84d68 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x556fa1d876c0 <col:39, line:226:5>
|   |-DeclStmt 0x556fa1d871e8 <line:223:9, col:68>
|   | `-VarDecl 0x556fa1d86fc0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x556fa1d871a0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x556fa1d87170 <col:24, col:38> '<bound member function type>' .compare_swap 0x556fa1aa0810
|   |     | `-MemberExpr 0x556fa1d87038 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x556fa1d84198
|   |     |   `-CXXThisExpr 0x556fa1d87028 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x556fa1d87128 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x556fa1d87110 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x556fa1d870e8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x556fa1d870c8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x556fa1d871d0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x556fa1d87150 <col:66> 'int' 0
|   |-CStyleCastExpr 0x556fa1d87230 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x556fa1d87200 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x556fa1d86fc0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x556fa1d876a0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x556fa1d87670 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x556fa1d87348 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x556fa1d87318 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x556fa1d87300 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x556fa1d87258 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x556fa1d86fc0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x556fa1d872d8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x556fa1d872c0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x556fa1d87298 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x556fa1d87278 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x556fa1d873a8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x556fa1d87388 <col:60> 'int' 0
|       `-CallExpr 0x556fa1d875d0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x556fa1d875b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x556fa1d87598 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x556fa1d87610 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x556fa1d87498 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x556fa1d87628 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x556fa1d874c8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x556fa1d87640 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x556fa1d87508 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x556fa1d87658 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x556fa1d87580 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x556fa1d87568 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x556fa1d87528 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x556fa1d84eb0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x556fa1d84e20 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x556fa1d84f78 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x556fa1d85038 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x556fa1d85160 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x556fa1d85220 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x556fa1d852e0 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x556fa1d853d0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x556fa1d85430 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x556fa1d854c0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x556fa1d85888 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x556fa1d85888
| `-ParmVarDecl 0x556fa1d85998 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x556fa1d86058 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x556fa1d86058
  `-ParmVarDecl 0x556fa1d86168 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1cf9040 prev 0x556fa1cdacd0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x556fa1cf9178 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x556fa1cf9208 <col:33, col:39> col:33 public
|-EnumDecl 0x556fa1cf9230 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x556fa1cf9370 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x556fa1cf9350 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x556fa1cf9330 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x556fa1cf92f0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x556fa1cf9310 <col:26> 'int' 16
| `-EnumConstantDecl 0x556fa1cf9440 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x556fa1cf9420 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x556fa1cf9400 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x556fa1cf93c0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x556fa1cf93e0 <col:47> 'int' 31
|-EnumDecl 0x556fa1cf9490 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x556fa1cf95d0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x556fa1cf96f0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1cf95b0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x556fa1cf9590 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x556fa1cf9550 <col:26> 'int' 1
| |       `-IntegerLiteral 0x556fa1cf9570 <col:29> 'int' 15
| `-EnumConstantDecl 0x556fa1cf96a0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x556fa1cf9708 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1cf9680 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x556fa1cf9660 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x556fa1cf9620 <col:51> 'int' 1
|         `-IntegerLiteral 0x556fa1cf9640 <col:54> 'int' 10
|-CXXConstructorDecl 0x556fa1cf98d8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x556fa1cf9730 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x556fa1cf97b0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x556fa1cf9a68 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x556fa1cf99a0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x556fa1cf9b60 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x556fa1cf9b60
|-CXXMethodDecl 0x556fa1cf9ce8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x556fa1c5d978 <col:42, line:100:5>
|   `-ReturnStmt 0x556fa1c5d968 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x556fa1c5d950 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x556fa1c5d920 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x556fa1c5c6a0
|         `-CXXThisExpr 0x556fa1c5d910 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x556fa1cf9db0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x556fa1c5d9f8 <col:36, line:105:5>
|   `-ReturnStmt 0x556fa1c5d9e8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x556fa1c5d9d0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x556fa1c5d9a0 <col:16> 'void *const' lvalue ->_thunk 0x556fa1c5c708
|         `-CXXThisExpr 0x556fa1c5d990 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x556fa1cf9e70 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x556fa1c5da78 <col:37, line:110:5>
|   `-ReturnStmt 0x556fa1c5da68 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x556fa1c5da50 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x556fa1c5da20 <col:16> 'Element *const' lvalue ->_owner 0x556fa1c5c7c8
|         `-CXXThisExpr 0x556fa1c5da10 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x556fa1cf9f30 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x556fa1cf9ff8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x556fa1cfa0b8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x556fa1cfa178 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x556fa1c5db60 <col:35, line:137:5>
|   `-ReturnStmt 0x556fa1c5db50 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x556fa1c5db18 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x556fa1c5dae8 <col:16, col:24> '<bound member function type>' ->router 0x556fa1ced4e0
|         `-ImplicitCastExpr 0x556fa1c5db38 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x556fa1c5dad0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x556fa1c5daa0 <col:16> 'Element *const' lvalue ->_owner 0x556fa1c5c7c8
|               `-CXXThisExpr 0x556fa1c5da90 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x556fa1cfa238 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x556fa1cfa438 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x556fa1cfa2e8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x556fa1cfa360 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x556fa1cfa648 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x556fa1cfa4f8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x556fa1cfa570 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x556fa1cfa718 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x556fa1c5dc70 <col:35, line:181:5>
|   `-ReturnStmt 0x556fa1c5dc60 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x556fa1c5dc48 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x556fa1c5dc30 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x556fa1c5dc00 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x556fa1c5c2d8
|           `-MemberExpr 0x556fa1c5dbb8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x556fa1c5c3f8
|             `-MemberExpr 0x556fa1c5db88 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x556fa1c5c628
|               `-CXXThisExpr 0x556fa1c5db78 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x556fa1c5b320 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x556fa1c5dd88 <col:30, line:192:5>
|   `-BinaryOperator 0x556fa1c5dd68 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x556fa1c5dd10 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x556fa1c5c2d8
|     | `-MemberExpr 0x556fa1c5dcc8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x556fa1c5c3f8
|     |   `-MemberExpr 0x556fa1c5dc98 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x556fa1c5c628
|     |     `-CXXThisExpr 0x556fa1c5dc88 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x556fa1c5dd50 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x556fa1c5dd40 <col:32> 'bool' false
|-CXXMethodDecl 0x556fa1c5b3e0 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x556fa1c5e0d8 <col:30, line:206:5>
|   |-BinaryOperator 0x556fa1c5de80 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x556fa1c5de28 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x556fa1c5c2d8
|   | | `-MemberExpr 0x556fa1c5dde0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x556fa1c5c3f8
|   | |   `-MemberExpr 0x556fa1c5ddb0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x556fa1c5c628
|   | |     `-CXXThisExpr 0x556fa1c5dda0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x556fa1c5de68 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x556fa1c5de58 <col:32> 'bool' true
|   |-CallExpr 0x556fa1c5df20 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x556fa1c5df08 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556fa1c5dee8 <col:9> 'void ()' lvalue Function 0x556fa1cf3e90 'click_fence' 'void ()'
|   `-IfStmt 0x556fa1c5e0c0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x556fa1c5e000 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x556fa1c5dfd0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x556fa1c5df80 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x556fa1c5ca38
|     | |   `-MemberExpr 0x556fa1c5df50 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x556fa1c5cab0
|     | |     `-CXXThisExpr 0x556fa1c5df40 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x556fa1c5dfe8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x556fa1c5dfb0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x556fa1c5e080 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x556fa1c5e030 <col:13> '<bound member function type>' ->complete_schedule 0x556fa1c5d4b0
|       | `-CXXThisExpr 0x556fa1c5e020 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x556fa1c5e0a8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x556fa1c5e060 <col:31> 'int' 0
|-CXXMethodDecl 0x556fa1c5b4a0 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x556fa1c5e200 <col:35, line:240:5>
|   `-BinaryOperator 0x556fa1c5e1e0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x556fa1c5e188 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x556fa1c5c2d8
|     | `-MemberExpr 0x556fa1c5e140 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x556fa1c5c3f8
|     |   `-MemberExpr 0x556fa1c5e110 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x556fa1c5c628
|     |     `-CXXThisExpr 0x556fa1c5e100 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x556fa1c5e1c8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x556fa1c5e1b8 <col:32> 'bool' true
|-CXXMethodDecl 0x556fa1c5b560 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x556fa1c5e418 <col:37, line:253:5>
|   |-BinaryOperator 0x556fa1c5e2f8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x556fa1c5e2a0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x556fa1c5c2d8
|   | | `-MemberExpr 0x556fa1c5e258 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x556fa1c5c3f8
|   | |   `-MemberExpr 0x556fa1c5e228 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x556fa1c5c628
|   | |     `-CXXThisExpr 0x556fa1c5e218 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x556fa1c5e2e0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x556fa1c5e2d0 <col:32> 'bool' false
|   `-BinaryOperator 0x556fa1c5e3f8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x556fa1c5e3a0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x556fa1c5c338
|     | `-MemberExpr 0x556fa1c5e358 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x556fa1c5c3f8
|     |   `-MemberExpr 0x556fa1c5e328 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x556fa1c5c628
|     |     `-CXXThisExpr 0x556fa1c5e318 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x556fa1c5e3e0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x556fa1c5e3d0 <col:41> 'bool' true
|-CXXMethodDecl 0x556fa1c5b620 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x556fa1c5e598 <col:37, line:264:5>
|   |-BinaryOperator 0x556fa1c5e518 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x556fa1c5e4c0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x556fa1c5c338
|   | | `-MemberExpr 0x556fa1c5e478 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x556fa1c5c3f8
|   | |   `-MemberExpr 0x556fa1c5e448 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x556fa1c5c628
|   | |     `-CXXThisExpr 0x556fa1c5e438 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x556fa1c5e500 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x556fa1c5e4f0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x556fa1c5e578 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x556fa1c5e548 <col:9> '<bound member function type>' ->reschedule 0x556fa1c5b3e0
|       `-CXXThisExpr 0x556fa1c5e538 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x556fa1c5b768 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x556fa1c5b6d8 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x556fa1c5b838 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x556fa1c5b980 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x556fa1c5b8f0 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x556fa1c5bad0 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x556fa1c5ba40 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x556fa1c5bb98 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x556fa1c5bc58 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x556fa1c5bcf8 <col:53> "" ""
|-CXXMethodDecl 0x556fa1c5bd90 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x556fa1c5be30 <col:47> "" ""
|-AccessSpecDecl 0x556fa1c5bea0 <line:303:3, col:10> col:3 private
|-FieldDecl 0x556fa1c5bee0 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x556fa1c5bf48 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x556fa1c5bf98 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556fa1c5c0b8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x556fa1c5c148 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x556fa1c5c278 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x556fa1c5c2d8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x556fa1c5c338 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x556fa1d8c718 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x556fa1d8c7f0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d8c7f0
| | |-CXXConstructorDecl 0x556fa1d8caa8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x556fa1d8caa8
| | | `-ParmVarDecl 0x556fa1d8cbb8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x556fa1d8cc58 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x556fa1d8cc58
| |   `-ParmVarDecl 0x556fa1d8cd68 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x556fa1c5c3f8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x556fa1c5c458 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x556fa1c5c3f8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x556fa1c5c278 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x556fa1c5c4b0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x556fa1c5c3f8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x556fa1c5c2d8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x556fa1c5c508 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x556fa1c5c3f8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x556fa1c5c338 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x556fa1c5c560 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x556fa1d8c628 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556fa1d8cf88 <col:11>
| |-CXXConstructorDecl 0x556fa1d8c8f8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x556fa1d8c8f8
| | `-ParmVarDecl 0x556fa1d8ca08 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x556fa1d8ce08 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x556fa1d8ce08
|   `-ParmVarDecl 0x556fa1d8cf18 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x556fa1c5c628 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x556fa1c5c6a0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x556fa1c5c708 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x556fa1c5c768 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x556fa1c5c7c8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x556fa1c5c818 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556fa1c5c938 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x556fa1c5c9d8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x556fa1c5ca38 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x556fa1d85b38 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x556fa1d85b38
| | `-ParmVarDecl 0x556fa1d85c48 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x556fa1d85ce8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x556fa1d85ce8
| | `-ParmVarDecl 0x556fa1d85df8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x556fa1d85e68 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x556fa1d85e68
| |-CXXMethodDecl 0x556fa1d866e8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x556fa1d866e8
| | `-ParmVarDecl 0x556fa1d867f8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x556fa1d86868 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x556fa1d86868
| | `-ParmVarDecl 0x556fa1d86978 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x556fa1d8cfe8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x556fa1d8d0c0 <col:11>
|-FieldDecl 0x556fa1c5cab0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x556fa1c5cbf8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x556fa1c5cb38 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x556fa1c5cda8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x556fa1c5ccb8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x556fa1c5ce70 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x556fa1c5cf30 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x556fa1c5cff0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x556fa1c5e6a8 <col:41, line:355:5>
|   `-ReturnStmt 0x556fa1c5e698 <line:354:9, col:38>
|     `-BinaryOperator 0x556fa1c5e678 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x556fa1c5e648 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x556fa1c5e5f8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x556fa1c5ca38
|       |   `-MemberExpr 0x556fa1c5e5c8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x556fa1c5cab0
|       |     `-CXXThisExpr 0x556fa1c5e5b8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x556fa1c5e660 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x556fa1c5e628 <col:38> 'int' 0
|-CXXMethodDecl 0x556fa1c5d0b0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x556fa1c5d1f0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x556fa1c5d160 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x556fa1c5d368 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x556fa1c5d2a8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x556fa1c5d4b0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x556fa1c5d420 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x556fa1c5d578 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x556fa1c5d740 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x556fa1c5d628 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x556fa1c5d6a8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x556fa1c5d840 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x556fa1c5d8d0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1c621a8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x556fa1c622d8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x556fa1c62dc8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1c5eaa8 prev 0x556fa1cdad80 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1c5eba0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x556fa1c5ec30 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x556fa1c5ec90 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x556fa1c5ed38 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x556fa1c5ee58 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x556fa1c5eff8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x556fa1c5ef38 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x556fa1c5f248 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x556fa1c5f0b8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x556fa1c5f138 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x556fa1c5f3a0 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x556fa1c5f310 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x556fa1c5f528 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x556fa1c5f460 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x556fa1c5f6d8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x556fa1c5f618 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x556fa1c5f7d0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x556fa1c62fa0 <col:21, line:58:5>
|   `-IfStmt 0x556fa1c62f88 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x556fa1c62ef0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x556fa1c62ec0 <col:6> '<bound member function type>' ->scheduled 0x556fa1c60028
|     |   `-ImplicitCastExpr 0x556fa1c62f10 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x556fa1c62eb0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x556fa1c62f68 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x556fa1c62f38 <col:6> '<bound member function type>' ->unschedule 0x556fa1c61650
|         `-CXXThisExpr 0x556fa1c62f28 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x556fa1c5f8d0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x556fa1c63140 <col:26, line:65:5>
|   |-BinaryOperator 0x556fa1c63060 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x556fa1c62ff8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x556fa1c622d8
|   | | `-MemberExpr 0x556fa1c62fc8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x556fa1c62398
|   | |   `-CXXThisExpr 0x556fa1c62fb8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x556fa1c63048 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556fa1c63028 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x556fa1c627f8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x556fa1c63120 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x556fa1c63090 <col:2> 'void *' lvalue ->_thunk 0x556fa1c62418
|     | `-CXXThisExpr 0x556fa1c63080 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x556fa1c630f8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x556fa1c630c0 <col:20> 'int' 1
|-CXXMethodDecl 0x556fa1c5fa10 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x556fa1c5f980 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x556fa1c632a0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x556fa1c63190 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x556fa1c63160 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x556fa1c5f980 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x556fa1c63280 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x556fa1c63250 <col:2> '<bound member function type>' ->assign 0x556fa1c5f8d0
|       `-CXXThisExpr 0x556fa1c63240 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x556fa1c5fbe0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x556fa1c5fac8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x556fa1c5fb48 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x556fa1d13780 <col:58, line:79:5>
|   |-BinaryOperator 0x556fa1d136c8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x556fa1d13660 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x556fa1c622d8
|   | | `-MemberExpr 0x556fa1c632d0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x556fa1c62398
|   | |   `-CXXThisExpr 0x556fa1c632c0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x556fa1d136b0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x556fa1d13690 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x556fa1c5fac8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x556fa1d13760 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x556fa1d136f8 <col:2> 'void *' lvalue ->_thunk 0x556fa1c62418
|     | `-CXXThisExpr 0x556fa1d136e8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x556fa1d13748 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1d13728 <col:11> 'void *' lvalue ParmVar 0x556fa1c5fb48 'user_data' 'void *'
|-CXXMethodDecl 0x556fa1c5fd30 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x556fa1c5fca0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x556fa1d13918 <col:35, line:87:5>
|   |-BinaryOperator 0x556fa1d13848 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x556fa1d137e0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x556fa1c622d8
|   | | `-MemberExpr 0x556fa1d137b0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x556fa1c62398
|   | |   `-CXXThisExpr 0x556fa1d137a0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x556fa1d13830 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556fa1d13810 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x556fa1c629d0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x556fa1d138f8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x556fa1d13878 <col:2> 'void *' lvalue ->_thunk 0x556fa1c62418
|     | `-CXXThisExpr 0x556fa1d13868 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x556fa1d138e0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x556fa1d138c8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x556fa1d138a8 <col:11> 'Element *' lvalue ParmVar 0x556fa1c5fca0 'element' 'Element *'
|-CXXMethodDecl 0x556fa1c5fe78 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x556fa1c5fde8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x556fa1d13ab0 <col:29, line:94:5>
|   |-BinaryOperator 0x556fa1d139e0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x556fa1d13978 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x556fa1c622d8
|   | | `-MemberExpr 0x556fa1d13948 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x556fa1c62398
|   | |   `-CXXThisExpr 0x556fa1d13938 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x556fa1d139c8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556fa1d139a8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x556fa1c62ba8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x556fa1d13a90 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x556fa1d13a10 <col:2> 'void *' lvalue ->_thunk 0x556fa1c62418
|     | `-CXXThisExpr 0x556fa1d13a00 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x556fa1d13a78 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x556fa1d13a60 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x556fa1d13a40 <col:11> 'Task *' lvalue ParmVar 0x556fa1c5fde8 'task' 'Task *'
|-CXXMethodDecl 0x556fa1c5ff68 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x556fa1d13b90 <col:37, line:100:5>
|   `-ReturnStmt 0x556fa1d13b80 <line:99:2, col:19>
|     `-BinaryOperator 0x556fa1d13b60 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x556fa1d13b30 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x556fa1d13ae0 <col:9> 'Element *const' lvalue ->_owner 0x556fa1c62478
|       |   `-CXXThisExpr 0x556fa1d13ad0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x556fa1d13b48 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x556fa1d13b10 <col:19> 'int' 0
|-CXXMethodDecl 0x556fa1c60028 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x556fa1d13c50 <col:35, line:105:5>
|   `-ReturnStmt 0x556fa1d13c40 <line:104:2, col:23>
|     `-BinaryOperator 0x556fa1d13c20 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x556fa1d13c08 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x556fa1d13bb8 <col:9> 'const int' lvalue ->_schedpos1 0x556fa1c620f8
|       |   `-CXXThisExpr 0x556fa1d13ba8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x556fa1d13be8 <col:23> 'int' 0
|-CXXMethodDecl 0x556fa1c600e8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x556fa1d13cb8 <col:51, line:118:5>
|   `-ReturnStmt 0x556fa1d13ca8 <line:117:2, col:9>
|     `-MemberExpr 0x556fa1d13c78 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|       `-CXXThisExpr 0x556fa1d13c68 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x556fa1c601a8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x556fa1d14210 <col:37, line:136:5>
|   `-IfStmt 0x556fa1d141e8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x556fa1d13d78 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x556fa1d13d60 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x556fa1d13d40 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x556fa1d13d10 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x556fa1c6ce58
|     |       `-MemberExpr 0x556fa1d13ce0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|     |         `-CXXThisExpr 0x556fa1d13cd0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x556fa1d14158 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x556fa1d14140 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x556fa1d14110 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x556fa1d140f8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x556fa1d140c0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x556fa1d140a8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x556fa1d14088 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x556fa1c9b630 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x556fa1d14028 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x556fa1d14010 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x556fa1d13f38 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x556fa1d13f20 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x556fa1d13f00 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x556fa1c9b2f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x556fa1d13ea0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x556fa1d13da0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|     |         |     |   `-CXXThisExpr 0x556fa1d13d90 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x556fa1d13ee8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x556fa1d13ed0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x556fa1d13e80 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x556fa1d13e68 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x556fa1d13e08 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x556fa1c8e950 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x556fa1d14070 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x556fa1d14058 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x556fa1d13ff0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x556fa1d13fd8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x556fa1d13fa8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x556fa1ae9c80 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x556fa1d141d8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x556fa1d141a8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x556fa1d14178 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|           `-CXXThisExpr 0x556fa1d14168 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x556fa1c60268 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x556fa1d142f8 <col:35, line:141:5>
|   `-ReturnStmt 0x556fa1d142e8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x556fa1d142b0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x556fa1d14280 <col:9, col:17> '<bound member function type>' ->router 0x556fa1ced4e0
|         `-ImplicitCastExpr 0x556fa1d142d0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x556fa1d14268 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x556fa1d14238 <col:9> 'Element *const' lvalue ->_owner 0x556fa1c62478
|               `-CXXThisExpr 0x556fa1d14228 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x556fa1c60328 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x556fa1d14378 <col:37, line:146:5>
|   `-ReturnStmt 0x556fa1d14368 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x556fa1d14350 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x556fa1d14320 <col:9> 'Element *const' lvalue ->_owner 0x556fa1c62478
|         `-CXXThisExpr 0x556fa1d14310 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x556fa1c603e8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x556fa1d143f8 <col:41, line:151:5>
|   `-ReturnStmt 0x556fa1d143e8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x556fa1d143d0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x556fa1d143a0 <col:9> 'RouterThread *const' lvalue ->_thread 0x556fa1c624d8
|         `-CXXThisExpr 0x556fa1d14390 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x556fa1c604b0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x556fa1c60670 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x556fa1c60560 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x556fa1c605d8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556fa1c62db8 <col:50> 'bool' false
|-CXXMethodDecl 0x556fa1c607f8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x556fa1c60730 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x556fa1c60940 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x556fa1c608b0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c60a88 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x556fa1c609f8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c60bd0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x556fa1c60b40 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c60d18 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x556fa1c60c88 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c60de0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x556fa1d14560 <col:32, line:223:5>
|   `-ExprWithCleanups 0x556fa1d14548 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x556fa1d144f0 <col:2, col:47> 'void'
|       |-MemberExpr 0x556fa1d14420 <col:2> '<bound member function type>' ->schedule_at_steady 0x556fa1c60940
|       | `-CXXThisExpr 0x556fa1d14410 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556fa1d14530 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556fa1d14518 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x556fa1d144d0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x556fa1d144b8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x556fa1d14488 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x556fa1ae9c80 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x556fa1c60f20 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x556fa1c60e90 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c61068 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x556fa1c60fd8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1d146e8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x556fa1d146d0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x556fa1d14678 <col:2, col:40> 'void'
|       |-MemberExpr 0x556fa1d14588 <col:2> '<bound member function type>' ->schedule_after 0x556fa1c60f20
|       | `-CXXThisExpr 0x556fa1d14578 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556fa1d146b8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556fa1d146a0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x556fa1d14638 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x556fa1d14608 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x556fa1d145c8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c60fd8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x556fa1d14620 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x556fa1d145e8 <col:38> 'int' 0
|-CXXMethodDecl 0x556fa1c611b0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x556fa1c61120 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1d14958 <col:58, line:249:5>
|   `-ExprWithCleanups 0x556fa1d14940 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x556fa1d148e8 <col:2, col:49> 'void'
|       |-MemberExpr 0x556fa1d14710 <col:2> '<bound member function type>' ->schedule_after 0x556fa1c60f20
|       | `-CXXThisExpr 0x556fa1d14700 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556fa1d14928 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556fa1d14910 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x556fa1d14890 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x556fa1d14878 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x556fa1d147e8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x556fa1c6ec48 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x556fa1d148d0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x556fa1d148b8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x556fa1d147c8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c61120 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c612f8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x556fa1c61268 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x556fa1d14b38 <col:58, line:261:5>
|   `-ExprWithCleanups 0x556fa1d14b20 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x556fa1d14ac8 <col:2, col:38> 'void'
|       |-MemberExpr 0x556fa1d14980 <col:2> '<bound member function type>' ->schedule_at_steady 0x556fa1c60940
|       | `-CXXThisExpr 0x556fa1d14970 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556fa1d14b08 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556fa1d14af0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x556fa1d14a90 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x556fa1d14a78 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x556fa1d14a58 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x556fa1c9b2f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x556fa1d14a28 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x556fa1d14a10 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x556fa1d149c0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|             |     `-CXXThisExpr 0x556fa1d149b0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x556fa1d149f0 <col:33> 'const Timestamp' lvalue ParmVar 0x556fa1c61268 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x556fa1c61440 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x556fa1c613b0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1d14e10 <col:58, line:270:5>
|   `-ExprWithCleanups 0x556fa1d14df8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x556fa1d14da0 <col:2, col:79> 'void'
|       |-MemberExpr 0x556fa1d14b60 <col:2> '<bound member function type>' ->schedule_at_steady 0x556fa1c60940
|       | `-CXXThisExpr 0x556fa1d14b50 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556fa1d14de0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556fa1d14dc8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x556fa1d14d60 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x556fa1d14c98 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x556fa1d14c80 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x556fa1d14c10 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x556fa1d14be0 <col:31, col:41> '<bound member function type>' .sec 0x556fa1aeb778
|             | |     `-ImplicitCastExpr 0x556fa1d14c30 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x556fa1d14bb0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|             | |         `-CXXThisExpr 0x556fa1d14ba0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x556fa1d14c68 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x556fa1d14c48 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c613b0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x556fa1d14d28 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x556fa1d14cf8 <col:60, col:70> '<bound member function type>' .subsec 0x556fa1aebe70
|                 `-ImplicitCastExpr 0x556fa1d14d48 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x556fa1d14cc8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|                     `-CXXThisExpr 0x556fa1d14cb8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x556fa1c61588 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x556fa1c614f8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556fa1d15148 <col:60, line:279:5>
|   `-ExprWithCleanups 0x556fa1d15130 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x556fa1d150d8 <col:2, col:65> 'void'
|       |-MemberExpr 0x556fa1d14e38 <col:2> '<bound member function type>' ->schedule_at_steady 0x556fa1c60940
|       | `-CXXThisExpr 0x556fa1d14e28 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556fa1d15118 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x556fa1d15100 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x556fa1d150a0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x556fa1d15088 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x556fa1d15068 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x556fa1c9b2f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x556fa1d15008 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x556fa1d14ff0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x556fa1d14e78 <col:21> 'Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|             |     `-CXXThisExpr 0x556fa1d14e68 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x556fa1d15050 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x556fa1d15038 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x556fa1d14f98 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x556fa1d14f80 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x556fa1d14f50 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x556fa1c6ec48 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x556fa1d14fd8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x556fa1d14fc0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x556fa1d14f30 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x556fa1c614f8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556fa1c61650 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x556fa1c61710 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x556fa1d15610 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x556fa1d151a0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x556fa1d15170 <col:2> '<bound member function type>' ->unschedule 0x556fa1c61650
|   |   `-CXXThisExpr 0x556fa1d15160 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x556fa1d155f8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x556fa1d155c0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x556fa1d155a8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556fa1d15258 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x556fa1982d18 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x556fa1d151d0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x556fa1c62158
|       | `-CXXThisExpr 0x556fa1d151c0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x556fa1d15240 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x556fa1d15210 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x556fa1c617d0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x556fa1d15968 <col:42, line:310:5>
|   |-IfStmt 0x556fa1d157b0 <line:306:2, line:307:23>
|   | |-CallExpr 0x556fa1d156e0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x556fa1d156c8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x556fa1d15668 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x556fa1c8cdc0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x556fa1d157a0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x556fa1d15788 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x556fa1d15758 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x556fa1d15740 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x556fa1d15710 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x556fa1d15958 <line:309:2, col:33>
|     `-ExprWithCleanups 0x556fa1d15940 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x556fa1d15910 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556fa1d158f8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x556fa1d158b8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x556fa1d158a0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x556fa1d15870 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x556fa1c6ef60 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x556fa1d158e0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x556fa1d15850 <col:30> 'int' 500
|-CXXMethodDecl 0x556fa1c61910 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x556fa1c61880 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1c619b8 <col:69> "" ""
|-CXXMethodDecl 0x556fa1c61ac8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x556fa1c61a38 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1c61b70 <col:70> "" ""
|-CXXMethodDecl 0x556fa1c61c80 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x556fa1c61bf0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1c61d28 <col:71> "" ""
|-CXXMethodDecl 0x556fa1c61e38 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x556fa1c61da8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556fa1c61ee0 <col:72> "" ""
|-EnumDecl 0x556fa1c61f50 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x556fa1c62050 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x556fa1c620a0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1c62030 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x556fa1c62010 <col:25> 'int' 1
|-AccessSpecDecl 0x556fa1c620b8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x556fa1c620f8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x556fa1c62158 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x556fa1c621a8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x556fa1c622d8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x556fa1c62dc8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x556fa1c62398 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x556fa1c62418 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x556fa1c62478 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x556fa1c624d8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x556fa1c62628 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x556fa1c62538 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x556fa1c627f8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x556fa1c626e0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x556fa1c62760 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x556fa1c629d0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x556fa1c628b8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x556fa1c62938 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x556fa1c62ba8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x556fa1c62a90 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x556fa1c62b10 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x556fa1c62d78 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1aaede0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x556fa1aaeef8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x556fa1aaef98 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x556fa1aaeff8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x556fa1aaf058 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x556fa1aaf108 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1aaf410 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556fa1aaf528 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x556fa1aaf5d0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x556fa1aaf638 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x556fa1aaf6c8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x556fa1ab5760 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556fa1ab5b98 <col:12>
|-CXXConstructorDecl 0x556fa1ab5868 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1ab5978 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556fa1aaf5d0 'data' 'const char *'
| | `-ImplicitCastExpr 0x556fa1ab8120 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x556fa1ab80f0 <col:12> 'const char *const' lvalue .data 0x556fa1aaf5d0
| |     `-DeclRefExpr 0x556fa1ab80d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ab5978 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556fa1aaf638 'length' 'int'
| | `-ImplicitCastExpr 0x556fa1ab81b0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x556fa1ab8180 <col:12> 'const int' lvalue .length 0x556fa1aaf638
| |     `-DeclRefExpr 0x556fa1ab8160 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ab5978 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556fa1aaf6c8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x556fa1ab8240 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x556fa1ab8210 <col:12> 'String::memo_t *const' lvalue .memo 0x556fa1aaf6c8
| |     `-DeclRefExpr 0x556fa1ab81f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ab5978 '' 'const String::rep_t &'
| `-CompoundStmt 0x556fa1ab8298 <col:12>
|-CXXConstructorDecl 0x556fa1ab5a18 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556fa1ab5a18
| `-ParmVarDecl 0x556fa1ab5b28 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x556fa1abb080 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556fa1ac6a98 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556fa1ac6ba8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x556fa1ac70c0 <col:12>
|   |-BinaryOperator 0x556fa1ac6ed8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x556fa1ac6e90 <col:12> 'const char *' lvalue ->data 0x556fa1aaf5d0
|   | | `-CXXThisExpr 0x556fa1ac6e80 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556fa1ac6ec0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x556fa1ac6e50 <col:12> 'const char *const' lvalue .data 0x556fa1aaf5d0
|   |     `-DeclRefExpr 0x556fa1ac6e30 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ac6ba8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x556fa1ac6fa0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x556fa1ac6f58 <col:12> 'int' lvalue ->length 0x556fa1aaf638
|   | | `-CXXThisExpr 0x556fa1ac6f48 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556fa1ac6f88 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x556fa1ac6f18 <col:12> 'const int' lvalue .length 0x556fa1aaf638
|   |     `-DeclRefExpr 0x556fa1ac6ef8 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ac6ba8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x556fa1ac7068 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x556fa1ac7020 <col:12> 'String::memo_t *' lvalue ->memo 0x556fa1aaf6c8
|   | | `-CXXThisExpr 0x556fa1ac7010 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556fa1ac7050 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x556fa1ac6fe0 <col:12> 'String::memo_t *const' lvalue .memo 0x556fa1aaf6c8
|   |     `-DeclRefExpr 0x556fa1ac6fc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ac6ba8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x556fa1ac70b0 <col:12>
|     `-UnaryOperator 0x556fa1ac7098 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556fa1ac7088 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x556fa1ac6c18 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556fa1ac6c18
  `-ParmVarDecl 0x556fa1ac6d28 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1aa6350 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1aa6468 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x556fa1aa64f8 <col:16, col:22> col:16 public
|-TypedefDecl 0x556fa1aa6538 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x556fa1777dc0 'const char *'
|   `-QualType 0x556fa1777311 'const char' const
|     `-BuiltinType 0x556fa1777310 'char'
|-TypedefDecl 0x556fa1aa65c0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x556fa1aa6590 'String::const_iterator' sugar
|   |-Typedef 0x556fa1aa6538 'const_iterator'
|   `-PointerType 0x556fa1777dc0 'const char *'
|     `-QualType 0x556fa1777311 'const char' const
|       `-BuiltinType 0x556fa1777310 'char'
|-TypedefDecl 0x556fa1aa6730 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x556fa1aa66a0 'int (String::*)() const'
|   |-RecordType 0x556fa1aa63e0 'String'
|   | `-CXXRecord 0x556fa1aa6350 'String'
|   `-ParenType 0x556fa1aa6640 'int () const' sugar
|     `-FunctionProtoType 0x556fa1a7a1d0 'int () const' const cdecl
|       `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1aa6798 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x556fa18cedb0 'int64_t' sugar
|   |-Typedef 0x556fa17e02d0 'int64_t'
|   `-TypedefType 0x556fa17b94d0 '__int64_t' sugar
|     |-Typedef 0x556fa17b90a8 '__int64_t'
|     `-BuiltinType 0x556fa1777390 'long'
|-TypedefDecl 0x556fa1aa6800 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x556fa18cecd0 'uint64_t' sugar
|   |-Typedef 0x556fa17e0470 'uint64_t'
|   `-TypedefType 0x556fa17b9560 '__uint64_t' sugar
|     |-Typedef 0x556fa17b9118 '__uint64_t'
|     `-BuiltinType 0x556fa1777430 'unsigned long'
|-TypedefDecl 0x556fa1aa6890 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x556fa1aa6860 'String::intmax_t' sugar
|   |-Typedef 0x556fa1aa6798 'intmax_t'
|   `-TypedefType 0x556fa18cedb0 'int64_t' sugar
|     |-Typedef 0x556fa17e02d0 'int64_t'
|     `-TypedefType 0x556fa17b94d0 '__int64_t' sugar
|       |-Typedef 0x556fa17b90a8 '__int64_t'
|       `-BuiltinType 0x556fa1777390 'long'
|-TypedefDecl 0x556fa1aa6920 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x556fa1aa68f0 'String::uintmax_t' sugar
|   |-Typedef 0x556fa1aa6800 'uintmax_t'
|   `-TypedefType 0x556fa18cecd0 'uint64_t' sugar
|     |-Typedef 0x556fa17e0470 'uint64_t'
|     `-TypedefType 0x556fa17b9560 '__uint64_t' sugar
|       |-Typedef 0x556fa17b9118 '__uint64_t'
|       `-BuiltinType 0x556fa1777430 'unsigned long'
|-CXXConstructorDecl 0x556fa1aa69e0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x556fa1aa6b88 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x556fa1aa6ac8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x556fa1aa6d38 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x556fa1aa6c78 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x556fa1aa6e90 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x556fa1aa6e00 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x556fa1aa70a8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x556fa1aa6f58 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x556fa1aa6fd8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x556fa1aa72c8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x556fa1aa7178 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x556fa1aa71f8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x556fa1aa74e8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x556fa1aa7398 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x556fa1aa7418 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x556fa1aa7708 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x556fa1aa75b8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x556fa1aa7638 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x556fa1aa7898 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x556fa1aa77d0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x556fa1aa7a18 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x556fa1aa7958 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x556fa1aa7ba8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x556fa1aa7ae0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x556fa1aa7d00 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x556fa1aa7c70 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x556fa1aa7e58 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x556fa1aa7dc8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x556fa1aa7fb0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x556fa1aa7f20 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x556fa1aa8138 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x556fa1aa8078 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x556fa1aa82c8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x556fa1aa8200 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x556fa1aa8458 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x556fa1aa8390 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x556fa1aa85e8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x556fa1aa8520 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x556fa1aa86e0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x556fa1aa8808 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x556fa1aa8988 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x556fa1aa88c0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x556fa1aa8ad8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x556fa1aa8a48 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x556fa1aa8b90 <col:63> "" ""
|-CXXMethodDecl 0x556fa1aa8cd8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x556fa1aa8c18 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x556fa1aa8ee8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x556fa1aa8d98 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x556fa1aa8e18 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x556fa1aa9108 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x556fa1aa8fb0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x556fa1aa9030 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x556fa1aa93e8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x556fa1aa91c8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x556fa1aa9248 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x556fa1ab5230 <col:55> 'int' 10
| `-ParmVarDecl 0x556fa1aa92c0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556fa1ab5250 <col:76> 'bool' true
|-CXXMethodDecl 0x556fa1aa96c8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x556fa1aa94b0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x556fa1aa9530 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x556fa1ab5260 <col:56> 'int' 10
| `-ParmVarDecl 0x556fa1aa95a8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556fa1ab5280 <col:77> 'bool' true
|-CXXMethodDecl 0x556fa1aa97d0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x556fa1aa9898 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x556fa1aa9960 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x556fa1aa9a00 <col:20>
| `-OptimizeNoneAttr 0x556fa1aa9a58 <col:30>
|-CXXConversionDecl 0x556fa1aa9b48 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556fa1aa9c18 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x556fa1aa9cd8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x556fa1aa9dc8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x556fa1aa9e88 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x556fa1aaa008 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x556fa1aa9f40 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x556fa1aaa158 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x556fa1aaa0c8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x556fa1aaa248 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x556fa1aaa308 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x556fa1aaa558 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x556fa1aaa3c0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x556fa1aaa440 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x556fa1aaa7b8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x556fa1aaa620 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x556fa1aaa6a0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x556fa1aaa888 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x556fa1aaaa98 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x556fa1aaa940 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x556fa1aaa9c0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x556fa1aaacb8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x556fa1aaab60 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x556fa1aaabe0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x556fa1aaae48 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x556fa1aaad80 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x556fa1aaaf38 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x556fa1aab0a8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x556fa1aaafe8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556fa1aab2b8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x556fa1aab168 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x556fa1aab1e8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x556fa1aab4d0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x556fa1aab378 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x556fa1aab3f0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x556fa1aab660 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x556fa1aab590 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556fa1aab880 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x556fa1aab720 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x556fa1aab7a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x556fa1aab9d0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x556fa1aab940 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x556fa1aabba8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x556fa1aaba90 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x556fa1aabb10 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x556fa1aabcf8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x556fa1aabc68 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x556fa1aabf10 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x556fa1aabdb0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x556fa1aabe30 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x556fa1ab5290 <col:39> 'int' 0
|-CXXMethodDecl 0x556fa1aac130 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x556fa1aabfd0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x556fa1aac050 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x556fa1ab52b0 <col:48> 'int' 0
|-CXXMethodDecl 0x556fa1aac310 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x556fa1aac1f0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x556fa1aac270 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x556fa1ab52d0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x556fa1aac3e0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x556fa1aac4a0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x556fa1aac560 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x556fa1aac620 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x556fa1aac6e0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x556fa1aac888 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x556fa1aac790 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x556fa1aaca08 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x556fa1aac940 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x556fa1aacbe0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x556fa1aacac8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x556fa1aacd58 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x556fa1aacc98 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x556fa1aacea0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x556fa1aace10 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556fa1aacff0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x556fa1aacf60 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x556fa1aad1c8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x556fa1aad0b0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x556fa1aad130 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x556fa1aad3a8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x556fa1aad290 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x556fa1aad310 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x556fa1aad4f8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x556fa1aad468 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x556fa1aad708 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x556fa1aad5b8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x556fa1aad638 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x556fa1aad868 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x556fa1aad7d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x556fa1aad9c0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x556fa1aad928 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x556fa1aada68 <col:57> "" ""
|-CXXMethodDecl 0x556fa1aadb78 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x556fa1aadae8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x556fa1aadcc8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x556fa1aadc38 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x556fa1aade48 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x556fa1aadd80 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x556fa1aadf10 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x556fa1aadfd0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x556fa1aae090 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x556fa1aae130 <col:49> "" ""
|-CXXMethodDecl 0x556fa1aae1c0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x556fa1aae280 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x556fa1aae370 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x556fa1aae438 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x556fa1aae4f8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x556fa1aae5b8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x556fa1aae6b0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x556fa1aae778 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x556fa1aae840 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x556fa1aaea18 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x556fa1aae8f8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x556fa1aae978 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x556fa1aaec40 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x556fa1aaeae0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x556fa1aaeb60 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x556fa1aaed50 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x556fa1aaedb8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x556fa1aaede0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556fa1aaeef8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x556fa1aaef98 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x556fa1aaeff8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x556fa1aaf058 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x556fa1aaf108 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x556fa1aaf170 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x556fa1aaf3a8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x556fa1aaf3f8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1aaf388 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x556fa1aaf298 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x556fa1aaf240 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x556fa1aaf280 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x556fa1aaf260 <col:32> 'int' 8
|-CXXRecordDecl 0x556fa1aaf410 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556fa1aaf528 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x556fa1aaf5d0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x556fa1aaf638 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x556fa1aaf6c8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x556fa1ab5760 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556fa1ab5b98 <col:12>
| |-CXXConstructorDecl 0x556fa1ab5868 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556fa1ab5978 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556fa1aaf5d0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x556fa1ab8120 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x556fa1ab80f0 <col:12> 'const char *const' lvalue .data 0x556fa1aaf5d0
| | |     `-DeclRefExpr 0x556fa1ab80d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ab5978 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556fa1aaf638 'length' 'int'
| | | `-ImplicitCastExpr 0x556fa1ab81b0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x556fa1ab8180 <col:12> 'const int' lvalue .length 0x556fa1aaf638
| | |     `-DeclRefExpr 0x556fa1ab8160 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ab5978 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556fa1aaf6c8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x556fa1ab8240 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x556fa1ab8210 <col:12> 'String::memo_t *const' lvalue .memo 0x556fa1aaf6c8
| | |     `-DeclRefExpr 0x556fa1ab81f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ab5978 '' 'const String::rep_t &'
| | `-CompoundStmt 0x556fa1ab8298 <col:12>
| |-CXXConstructorDecl 0x556fa1ab5a18 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556fa1ab5a18
| | `-ParmVarDecl 0x556fa1ab5b28 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x556fa1abb080 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x556fa1ac6a98 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556fa1ac6ba8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x556fa1ac70c0 <col:12>
| |   |-BinaryOperator 0x556fa1ac6ed8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x556fa1ac6e90 <col:12> 'const char *' lvalue ->data 0x556fa1aaf5d0
| |   | | `-CXXThisExpr 0x556fa1ac6e80 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556fa1ac6ec0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x556fa1ac6e50 <col:12> 'const char *const' lvalue .data 0x556fa1aaf5d0
| |   |     `-DeclRefExpr 0x556fa1ac6e30 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ac6ba8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x556fa1ac6fa0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x556fa1ac6f58 <col:12> 'int' lvalue ->length 0x556fa1aaf638
| |   | | `-CXXThisExpr 0x556fa1ac6f48 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556fa1ac6f88 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x556fa1ac6f18 <col:12> 'const int' lvalue .length 0x556fa1aaf638
| |   |     `-DeclRefExpr 0x556fa1ac6ef8 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ac6ba8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x556fa1ac7068 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x556fa1ac7020 <col:12> 'String::memo_t *' lvalue ->memo 0x556fa1aaf6c8
| |   | | `-CXXThisExpr 0x556fa1ac7010 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556fa1ac7050 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x556fa1ac6fe0 <col:12> 'String::memo_t *const' lvalue .memo 0x556fa1aaf6c8
| |   |     `-DeclRefExpr 0x556fa1ac6fc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556fa1ac6ba8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x556fa1ac70b0 <col:12>
| |     `-UnaryOperator 0x556fa1ac7098 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556fa1ac7088 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x556fa1ac6c18 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556fa1ac6c18
|   `-ParmVarDecl 0x556fa1ac6d28 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x556fa1aaf740 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x556fa1aaf988 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x556fa1aaf7a8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x556fa1aaf828 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x556fa1aaf8a0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x556fa1ab5720 <col:79, line:261:5>
|   |-BinaryOperator 0x556fa1ab5398 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x556fa1ab5330 <col:2, col:5> 'const char *' lvalue .data 0x556fa1aaf5d0
|   | | `-MemberExpr 0x556fa1ab5300 <col:2> 'String::rep_t' lvalue ->_r 0x556fa1aaf740
|   | |   `-CXXThisExpr 0x556fa1ab52f0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x556fa1ab5380 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x556fa1ab5360 <col:12> 'const char *' lvalue ParmVar 0x556fa1aaf7a8 'data' 'const char *'
|   |-BinaryOperator 0x556fa1ab5460 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x556fa1ab53f8 <col:2, col:5> 'int' lvalue .length 0x556fa1aaf638
|   | | `-MemberExpr 0x556fa1ab53c8 <col:2> 'String::rep_t' lvalue ->_r 0x556fa1aaf740
|   | |   `-CXXThisExpr 0x556fa1ab53b8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x556fa1ab5448 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556fa1ab5428 <col:14> 'int' lvalue ParmVar 0x556fa1aaf828 'length' 'int'
|   `-IfStmt 0x556fa1ab5708 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x556fa1ab5580 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556fa1ab5568 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x556fa1ab5548 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x556fa1ab5528 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x556fa1ab54c0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x556fa1aaf6c8
|     |       | `-MemberExpr 0x556fa1ab5490 <col:7> 'String::rep_t' lvalue ->_r 0x556fa1aaf740
|     |       |   `-CXXThisExpr 0x556fa1ab5480 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x556fa1ab5510 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x556fa1ab54f0 <col:17> 'String::memo_t *' lvalue ParmVar 0x556fa1aaf8a0 'memo' 'String::memo_t *'
|     `-CallExpr 0x556fa1ab56e0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x556fa1ab56c8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556fa1ab55d0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x556fa1a9e3b8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x556fa1ab5638 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556fa1aaef98
|         `-ImplicitCastExpr 0x556fa1ab5620 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x556fa1ab5600 <col:27> 'String::memo_t *' lvalue ParmVar 0x556fa1aaf8a0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x556fa1aafc38 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x556fa1aafa58 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x556fa1aafad8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x556fa1aafb50 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x556fa1aaf740 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x556fa1ab5ba8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556fa1ab5d38 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x556fa1ab5ca0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x556fa1ab5c10 <col:2> '<bound member function type>' ->assign_memo 0x556fa1aaf988
|     | `-ImplicitCastExpr 0x556fa1ab5cd8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x556fa1ab5c00 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x556fa1ab5cf0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x556fa1ab5c40 <col:14> 'const char *' lvalue ParmVar 0x556fa1aafa58 'data' 'const char *'
|     |-ImplicitCastExpr 0x556fa1ab5d08 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556fa1ab5c60 <col:20> 'int' lvalue ParmVar 0x556fa1aafad8 'length' 'int'
|     `-ImplicitCastExpr 0x556fa1ab5d20 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1ab5c80 <col:28> 'String::memo_t *' lvalue ParmVar 0x556fa1aafb50 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x556fa1aafdc8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x556fa1aafd08 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x556fa1ab5f90 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x556fa1ab5f10 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x556fa1ab5d60 <col:2> '<bound member function type>' ->assign_memo 0x556fa1aaf988
|     | `-CXXThisExpr 0x556fa1ab5d50 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x556fa1ab5f48 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x556fa1ab5de0 <col:14, col:19> 'const char *' lvalue .data 0x556fa1aaf5d0
|     |   `-MemberExpr 0x556fa1ab5db0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x556fa1aaf740
|     |     `-DeclRefExpr 0x556fa1ab5d90 <col:14> 'const String' lvalue ParmVar 0x556fa1aafd08 'x' 'const String &'
|     |-ImplicitCastExpr 0x556fa1ab5f60 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x556fa1ab5e60 <col:25, col:30> 'int' lvalue .length 0x556fa1aaf638
|     |   `-MemberExpr 0x556fa1ab5e30 <col:25, col:27> 'String::rep_t' lvalue ._r 0x556fa1aaf740
|     |     `-DeclRefExpr 0x556fa1ab5e10 <col:25> 'const String' lvalue ParmVar 0x556fa1aafd08 'x' 'const String &'
|     `-ImplicitCastExpr 0x556fa1ab5f78 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x556fa1ab5ee0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x556fa1aaf6c8
|         `-MemberExpr 0x556fa1ab5eb0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x556fa1aaf740
|           `-DeclRefExpr 0x556fa1ab5e90 <col:38> 'const String' lvalue ParmVar 0x556fa1aafd08 'x' 'const String &'
|-CXXMethodDecl 0x556fa1aafe90 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x556fa1ab6950 <col:31, line:278:5>
|   `-IfStmt 0x556fa1ab6938 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x556fa1ab6030 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556fa1ab6018 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x556fa1ab5fe8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x556fa1aaf6c8
|     |     `-MemberExpr 0x556fa1ab5fb8 <col:6> 'String::rep_t' lvalue ->_r 0x556fa1aaf740
|     |       `-CXXThisExpr 0x556fa1ab5fa8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x556fa1ab6910 <col:15, line:277:2>
|       |-ParenExpr 0x556fa1ab64e0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x556fa1ab64b0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x556fa1ab6140 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x556fa1ab6128 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x556fa1ab6110 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x556fa1ab60d0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556fa1aaef98
|       |   |       `-ImplicitCastExpr 0x556fa1ab60b8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x556fa1ab6088 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x556fa1aaf6c8
|       |   |           `-MemberExpr 0x556fa1ab6058 <col:27> 'String::rep_t' lvalue ->_r 0x556fa1aaf740
|       |   |             `-CXXThisExpr 0x556fa1ab6048 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x556fa1ab61a0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x556fa1ab6180 <col:54> 'int' 0
|       |   `-CallExpr 0x556fa1ab6410 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x556fa1ab63f8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x556fa1ab6378 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556fa1815610 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x556fa1ab6450 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x556fa1ab6288 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x556fa1ab6468 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x556fa1ab62b8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x556fa1ab6480 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x556fa1ab62f0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x556fa1ab6498 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x556fa1ab6360 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x556fa1ab6348 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x556fa1ab6310 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x556fa1ab6830 <line:274:6, line:275:22>
|       | |-CallExpr 0x556fa1ab66f0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x556fa1ab66d8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x556fa1ab6650 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x556fa1a9f800 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x556fa1ab6620 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556fa1aaef98
|       | |   `-ImplicitCastExpr 0x556fa1ab6608 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x556fa1ab65d8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x556fa1aaf6c8
|       | |       `-MemberExpr 0x556fa1ab65a8 <col:40> 'String::rep_t' lvalue ->_r 0x556fa1aaf740
|       | |         `-CXXThisExpr 0x556fa1ab6598 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x556fa1ab67f0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x556fa1ab67d8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x556fa1ab6718 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x556fa1ab4670 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x556fa1ab6818 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x556fa1ab6778 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x556fa1aaf6c8
|       |       `-MemberExpr 0x556fa1ab6748 <col:15> 'String::rep_t' lvalue ->_r 0x556fa1aaf740
|       |         `-CXXThisExpr 0x556fa1ab6738 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x556fa1ab68f0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x556fa1ab6888 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x556fa1aaf6c8
|         | `-MemberExpr 0x556fa1ab6858 <col:6> 'String::rep_t' lvalue ->_r 0x556fa1aaf740
|         |   `-CXXThisExpr 0x556fa1ab6848 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x556fa1ab68d8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x556fa1ab68b8 <col:16> 'int' 0
|-CXXMethodDecl 0x556fa1ab0128 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x556fa1aaff48 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x556fa1aaffc8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x556fa1ab0040 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x556fa1ab0200 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x556fa1ab0450 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x556fa1ab02b8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x556fa1ab0338 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x556fa1ab03b0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x556fa1ab0638 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x556fa1ab0520 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x556fa1ab05a0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x556fa1ab0738 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x556fa1ab6a28 <col:41, line:286:5>
|   `-ReturnStmt 0x556fa1ab6a18 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x556fa1ab69e8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x556fa1ab69b0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x556fa1ab6998 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x556fa1ab6978 <col:46> 'int' 1
|-CXXMethodDecl 0x556fa1ab09d8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x556fa1ab07f0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x556fa1ab0870 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x556fa1ab08f0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x556fa1ab4670 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x556fa1ab0aa0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x556fa1ab4740 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x556fa1ab4910 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x556fa1ab47f8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x556fa1ab4878 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x556fa1ab49d0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x556fa1ab4a98 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x556fa1ab4b98 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x556fa1ab4c10 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x556fa1ab4c88 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x556fa1ab4cf0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x556fa1ab4df0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x556fa1ab4e40 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1ab4dd0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x556fa1ab4db0 <col:22> 'int' 14
|-CXXMethodDecl 0x556fa1ab5058 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x556fa1ab4e70 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x556fa1ab4ef0 <col:38> col:41 'int'
| `-ParmVarDecl 0x556fa1ab4f70 <col:43> col:46 'int'
|-FriendDecl 0x556fa1ab5160 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x556fa1ab51f0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1dda610 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x556fa1dda7e8 prev 0x556fa1dda610 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x556fa1dda878 <col:46, col:52> col:46 public
|-TypedefDecl 0x556fa1dda8a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1ddc200 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x556fa1ddc1b0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x556fa1ddc190 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x556fa1ddaab8 'type'
|     `-SubstTemplateTypeParmType 0x556fa1ddaa80 'String' sugar
|       |-TemplateTypeParmType 0x556fa1a69bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a69ba0 'T'
|       `-RecordType 0x556fa1aa63e0 'String'
|         `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1ddc2b8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x556fa1ddc280 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x556fa1ddc260 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x556fa1ddc200 'type'
|     `-ElaboratedType 0x556fa1ddc1b0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x556fa1ddc190 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x556fa1ddaab8 'type'
|         `-SubstTemplateTypeParmType 0x556fa1ddaa80 'String' sugar
|           |-TemplateTypeParmType 0x556fa1a69bf0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556fa1a69ba0 'T'
|           `-RecordType 0x556fa1aa63e0 'String'
|             `-CXXRecord 0x556fa1aa6350 'String'
|-CXXMethodDecl 0x556fa1ddc438 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x556fa1ddc348 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x556fa1ddc528 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x556fa1ddc608 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x556fa1ddc608
|-CXXMethodDecl 0x556fa1ddc8d8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x556fa1ddc7e0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x556fa1ddcb18 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x556fa1ddc990 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1ddca08 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x556fa1ddcce8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x556fa1ddcbd8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1ddcc50 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x556fa1ddce48 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x556fa1ddcf18 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x556fa1ddd168 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x556fa1ddcfd8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x556fa1ddd050 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x556fa1ddd3c8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x556fa1ddd238 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x556fa1ddd2b0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x556fa1ddd588 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x556fa1ddd498 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x556fa1ddd748 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x556fa1ddd650 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x556fa1ddd800 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1ddd8b0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1dddae8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x556fa1ddd960 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x556fa1ddd9d8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x556fa1dddd88 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x556fa1dddc90 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x556fa1ddde50 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x556fa1dddea0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x556fa1dddef0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1cddda0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x556fa1dd93b8 prev 0x556fa1cddda0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x556fa1dda580 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x556fa1dda530 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x556fa1dda510 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x556fa1dda3c0 'type'
|     `-SubstTemplateTypeParmType 0x556fa1dda250 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x556fa1a3f9a0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x556fa1a3f948 'F'
|       `-RecordType 0x556fa1dd9eb0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x556fa1dd9dd0 'typed_array_memory'
|-FieldDecl 0x556fa1dddf40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x556fa1dddf90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x556fa1dddfc8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x556fa1dd9450 'String' sugar
|   |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|   `-RecordType 0x556fa1aa63e0 'String'
|     `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1dde058 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x556fa1dde020 'String &'
|   `-SubstTemplateTypeParmType 0x556fa1dd9450 'String' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1aa63e0 'String'
|       `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1dde0e8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x556fa1dde0b0 'const String &'
|   `-QualType 0x556fa1dd9451 'const String' const
|     `-SubstTemplateTypeParmType 0x556fa1dd9450 'String' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1aa63e0 'String'
|         `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1dde178 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x556fa1dde140 'String *'
|   `-SubstTemplateTypeParmType 0x556fa1dd9450 'String' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1aa63e0 'String'
|       `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1dde208 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x556fa1dde1d0 'const String *'
|   `-QualType 0x556fa1dd9451 'const String' const
|     `-SubstTemplateTypeParmType 0x556fa1dd9450 'String' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1aa63e0 'String'
|         `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1ddfaa0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x556fa1ddfa50 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x556fa1ddfa30 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x556fa1ddf968 'type'
|     `-LValueReferenceType 0x556fa1ddf930 'const String &'
|       `-QualType 0x556fa1ddf6d1 'const String' const
|         `-SubstTemplateTypeParmType 0x556fa1ddf6d0 'String' sugar
|           |-TemplateTypeParmType 0x556fa1a498f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556fa1a49898 'T'
|           `-RecordType 0x556fa1aa63e0 'String'
|             `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1ddfb08 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x556fa1dde0b0 'const String &'
|   `-QualType 0x556fa1dd9451 'const String' const
|     `-SubstTemplateTypeParmType 0x556fa1dd9450 'String' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1aa63e0 'String'
|         `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1ddfb60 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x556fa1777370 'int'
|-TypedefDecl 0x556fa1ddfbc8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x556fa1dde140 'String *'
|   `-SubstTemplateTypeParmType 0x556fa1dd9450 'String' sugar
|     |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|     `-RecordType 0x556fa1aa63e0 'String'
|       `-CXXRecord 0x556fa1aa6350 'String'
|-TypedefDecl 0x556fa1ddfc30 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x556fa1dde1d0 'const String *'
|   `-QualType 0x556fa1dd9451 'const String' const
|     `-SubstTemplateTypeParmType 0x556fa1dd9450 'String' sugar
|       |-TemplateTypeParmType 0x556fa1a76f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x556fa1a76eb8 'T'
|       `-RecordType 0x556fa1aa63e0 'String'
|         `-CXXRecord 0x556fa1aa6350 'String'
|-EnumDecl 0x556fa1ddfc88 <line:134:5> col:5
| `-EnumConstantDecl 0x556fa1ddfd80 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x556fa1ddfd60 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x556fa1a78598 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x556fa1a78570 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x556fa1a78550 <col:40> 'int' 1
|-CXXConstructorDecl 0x556fa1ddfe08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x556fa1de0098 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1ddfec0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1ddff60 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x556fa1de0328 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x556fa1de0210 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x556fa1de05e8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x556fa1de04d0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x556fa1de0900 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x556fa1de07e0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x556fa1de0c10 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x556fa1de0af0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x556fa1de0f00 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1de0d48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1de0dc0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x556fa1de1028 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x556fa1de10d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1de1130 <col:30> Inherited
|-CXXMethodDecl 0x556fa1de1178 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x556fa1de1228 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1de1280 <col:30> Inherited
|-CXXMethodDecl 0x556fa1de1348 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x556fa1de13f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1de1450 <col:30> Inherited
|-CXXMethodDecl 0x556fa1de1498 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x556fa1de1548 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1de15a0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1de15e8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x556fa1de1698 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1de16f0 <col:30> Inherited
|-CXXMethodDecl 0x556fa1de1738 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x556fa1de17e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556fa1de1840 <col:30> Inherited
|-CXXMethodDecl 0x556fa1de1868 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1de1918 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x556fa1de19c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x556fa1de1b88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1de1a78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x556fa1de1af0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x556fa1de1cd8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1de1c48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1de1e88 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x556fa1de1d90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1de1f40 <col:20>
| `-OptimizeNoneAttr 0x556fa1de1f98 <col:30>
|-CXXMethodDecl 0x556fa1de20b8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x556fa1de1fc0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x556fa1de2170 <col:20>
| `-OptimizeNoneAttr 0x556fa1de21c8 <col:30>
|-CXXMethodDecl 0x556fa1de2280 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1de21f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1de23c8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1de2338 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1de24f8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x556fa1de25f8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x556fa1de26c8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x556fa1de2798 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x556fa1de28d8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x556fa1de2848 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1de2a20 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x556fa1de2990 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x556fa1de2b68 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x556fa1de2ad8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1de2c20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x556fa1de2d20 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x556fa1de2c90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x556fa1de2dd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x556fa1de2e98 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x556fa1de2f98 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x556fa1de3118 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1de3058 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x556fa1de38a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x556fa1de31d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x556fa1de3808 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x556fa1de3708 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x556fa1de3988 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x556fa1de3ad8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x556fa1de3a48 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x556fa1de3b90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x556fa1de3dd8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x556fa1de3c50 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x556fa1de3cc8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x556fa1de3f68 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x556fa1de3ea8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x556fa1de4178 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x556fa1de4030 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x556fa1de40a8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x556fa1de4238 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x556fa1de4498 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x556fa1de43a0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x556fa1de4568 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x556fa1de4568

Layout: <CGRecordLayout
  LLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  NonVirtualBaseLLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556fa1defed8 prev 0x556fa1dbf938 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556fa1df0700 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x556fa1df0790 <col:22, col:28> col:22 public
|-EnumDecl 0x556fa1df07b8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x556fa1df08d8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df08b8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x556fa1df08a0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x556fa1df0880 <col:14> 'int' 999
| |-EnumConstantDecl 0x556fa1df0980 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df0960 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x556fa1df0948 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x556fa1df0928 <col:14> 'int' 1
| |-EnumConstantDecl 0x556fa1df0a10 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df09f0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x556fa1df09d0 <col:17> 'int' 0
| |-EnumConstantDecl 0x556fa1df0aa0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df0a80 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x556fa1df0a60 <col:13> 'int' 1
| |-EnumConstantDecl 0x556fa1df0b30 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df0b10 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x556fa1df0af0 <col:16> 'int' 2
| |-EnumConstantDecl 0x556fa1df0bc0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df0ba0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x556fa1df0b80 <col:13> 'int' 3
| |-EnumConstantDecl 0x556fa1df0c50 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df0c30 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x556fa1df0c10 <col:15> 'int' 4
| |-EnumConstantDecl 0x556fa1df0ce0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df0cc0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x556fa1df0ca0 <col:14> 'int' 5
| |-EnumConstantDecl 0x556fa1df0d70 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x556fa1df0d50 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x556fa1df0d30 <col:12> 'int' 6
| `-EnumConstantDecl 0x556fa1df0e00 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x556fa1df0de0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x556fa1df0dc0 <col:13> 'int' 7
|-VarDecl 0x556fa1df0e70 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x556fa1df0ef8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x556fa1df0f80 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x556fa1df1008 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x556fa1df1090 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x556fa1df1118 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x556fa1df11a0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x556fa1df1228 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x556fa1df12b0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x556fa1df1338 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x556fa1df13c0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x556fa1df14c0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x556fa1df6838 '_nerrors' 'int'
| | `-IntegerLiteral 0x556fa1df6fc8 <line:128:13> 'int' 0
| `-CompoundStmt 0x556fa1df7038 <col:16, line:129:5>
|-CXXDestructorDecl 0x556fa1df15b0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x556fa1df7048 <col:29, line:132:5>
|-CXXMethodDecl 0x556fa1df1768 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x556fa1df16a0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1df1830 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x556fa1df1918 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x556fa1df70a0 <col:44, line:161:5>
|   `-ReturnStmt 0x556fa1df7090 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x556fa1df7078 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1df7058 <col:9> 'ErrorHandler *' lvalue Var 0x556fa1df6898 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1df1a88 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x556fa1df19c8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556fa1df1b50 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x556fa1df7100 <col:43, line:173:5>
|   `-ReturnStmt 0x556fa1df70f0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x556fa1df70d8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1df70b8 <col:9> 'ErrorHandler *' lvalue Var 0x556fa1df6910 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x556fa1df1c08 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x556fa1df1c88 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x556fa1df1d98 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x556fa1df1d08 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df1ee8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x556fa1df1e58 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df2040 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x556fa1df1fa8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df2198 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x556fa1df2100 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df22f0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x556fa1df2258 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df2500 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x556fa1df23a8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x556fa1df2428 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df26d8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x556fa1df25c0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x556fa1df2640 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df28f8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x556fa1df2798 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x556fa1df2818 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df2ad8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x556fa1df29b8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x556fa1df2a38 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df2cb8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x556fa1df2b98 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x556fa1df2c18 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df2e40 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x556fa1df2d78 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x556fa1df3010 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x556fa1df2ef8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x556fa1df2f70 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x556fa1df7358 <col:57, line:234:5>
|   `-ReturnStmt 0x556fa1df7348 <line:233:2, col:41>
|     `-ExprWithCleanups 0x556fa1df7330 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x556fa1df72d8 <col:9, col:41> 'int'
|         |-MemberExpr 0x556fa1df72a8 <col:9> '<bound member function type>' ->xmessage 0x556fa1df2e40
|         | `-CXXThisExpr 0x556fa1df7298 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x556fa1df7318 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x556fa1df7300 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x556fa1df7278 <col:18, col:40> 'String' (CXXTemporary 0x556fa1df7278)
|               `-CallExpr 0x556fa1df7240 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x556fa1df7228 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x556fa1df71a0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x556fa1df5068 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x556fa1df71c0 <col:31> 'const String' lvalue ParmVar 0x556fa1df2f70 'str' 'const String &'
|                 `-DeclRefExpr 0x556fa1df71e0 <col:36> 'const String' lvalue ParmVar 0x556fa1df2ef8 'anno' 'const String &'
|-CXXMethodDecl 0x556fa1df3350 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x556fa1df30d0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x556fa1df3150 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x556fa1df3220 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x556fa1df75e8 <col:68, line:243:5>
|   `-ReturnStmt 0x556fa1df75d8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x556fa1df75c0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x556fa1df7560 <col:9, col:41> 'int'
|         |-MemberExpr 0x556fa1df7530 <col:9> '<bound member function type>' ->xmessage 0x556fa1df3010
|         | `-CXXThisExpr 0x556fa1df7520 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x556fa1df73f8 <col:18> 'const String' lvalue ParmVar 0x556fa1df30d0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x556fa1df75a8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x556fa1df7590 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x556fa1df7500 <col:24, col:40> 'String' (CXXTemporary 0x556fa1df7500)
|               `-CXXMemberCallExpr 0x556fa1df7498 <col:24, col:40> 'String'
|                 |-MemberExpr 0x556fa1df7428 <col:24> '<bound member function type>' ->vformat 0x556fa1df4530
|                 | `-CXXThisExpr 0x556fa1df7418 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x556fa1df74c8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x556fa1df7458 <col:32> 'const char *' lvalue ParmVar 0x556fa1df3150 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x556fa1df74e0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x556fa1df7478 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x556fa1df3220 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x556fa1df35f0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x556fa1df3418 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x556fa1df3490 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x556fa1df3508 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x556fa1df7928 <col:23, line:254:5>
|   `-ReturnStmt 0x556fa1df7918 <line:253:2, col:71>
|     `-ExprWithCleanups 0x556fa1df7900 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x556fa1df78a0 <col:9, col:71> 'int'
|         |-MemberExpr 0x556fa1df7870 <col:9> '<bound member function type>' ->xmessage 0x556fa1df3010
|         | `-CXXThisExpr 0x556fa1df7860 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x556fa1df78e8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x556fa1df78d0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x556fa1df7820 <col:18, col:65> 'String' (CXXTemporary 0x556fa1df7820)
|         |     `-CallExpr 0x556fa1df77b8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x556fa1df77a0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x556fa1df7688 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x556fa1df5068 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x556fa1df76a8 <col:31> 'const String' lvalue ParmVar 0x556fa1df3490 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x556fa1df7800 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x556fa1df77e8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x556fa1df7780 <col:37, col:64> 'String' (CXXTemporary 0x556fa1df7780)
|         |             `-CallExpr 0x556fa1df7750 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x556fa1df7738 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x556fa1df76c8 <col:37> 'String (const String &)' lvalue CXXMethod 0x556fa1df56b8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x556fa1df76e8 <col:56> 'const String' lvalue ParmVar 0x556fa1df3418 'landmark' 'const String &'
|         `-DeclRefExpr 0x556fa1df7840 <col:68> 'const String' lvalue ParmVar 0x556fa1df3508 'str' 'const String &'
|-CXXMethodDecl 0x556fa1df3970 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x556fa1df36b8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x556fa1df3730 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x556fa1df37b0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x556fa1df3828 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x556fa1df7be0 <col:34, line:267:5>
|   `-ReturnStmt 0x556fa1df7bd0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x556fa1df7bb8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x556fa1df7b50 <col:9, col:51> 'int'
|         |-MemberExpr 0x556fa1df7b20 <col:9> '<bound member function type>' ->xmessage 0x556fa1df35f0
|         | `-CXXThisExpr 0x556fa1df7b10 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x556fa1df79c8 <col:18> 'const String' lvalue ParmVar 0x556fa1df36b8 'landmark' 'const String &'
|         |-DeclRefExpr 0x556fa1df79e8 <col:28> 'const String' lvalue ParmVar 0x556fa1df3730 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x556fa1df7ba0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x556fa1df7b88 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x556fa1df7af0 <col:34, col:50> 'String' (CXXTemporary 0x556fa1df7af0)
|               `-CXXMemberCallExpr 0x556fa1df7a88 <col:34, col:50> 'String'
|                 |-MemberExpr 0x556fa1df7a18 <col:34> '<bound member function type>' ->vformat 0x556fa1df4530
|                 | `-CXXThisExpr 0x556fa1df7a08 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x556fa1df7ab8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x556fa1df7a48 <col:42> 'const char *' lvalue ParmVar 0x556fa1df37b0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x556fa1df7ad0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x556fa1df7a68 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x556fa1df3828 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x556fa1df3a80 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x556fa1df7c60 <col:25, line:288:5>
|   `-ReturnStmt 0x556fa1df7c50 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x556fa1df7c38 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x556fa1df7c08 <col:9> 'const int' lvalue ->_nerrors 0x556fa1df6838
|         `-CXXThisExpr 0x556fa1df7bf8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x556fa1df3c90 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x556fa1df3b38 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x556fa1df3bb8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df3f78 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x556fa1df3d58 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x556fa1df3dd8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x556fa1df3e50 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x556fa1df4110 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x556fa1df4048 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df4358 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x556fa1df41d0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x556fa1df4248 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x556fa1df7ec0 <col:58, line:357:5>
|   `-ReturnStmt 0x556fa1df7eb0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x556fa1df7e98 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x556fa1df7e68 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x556fa1df7e50 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x556fa1df7e30 <col:9, col:29> 'String' (CXXTemporary 0x556fa1df7e30)
|             `-CallExpr 0x556fa1df7dc0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x556fa1df7da8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x556fa1df7d28 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x556fa1df3f78 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x556fa1df7cc8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x556fa1df7df8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x556fa1df7ce8 <col:21> 'const char *' lvalue ParmVar 0x556fa1df41d0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x556fa1df7e10 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x556fa1df7d08 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x556fa1df4248 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x556fa1df4530 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x556fa1df4420 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x556fa1df4498 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x556fa1df4688 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x556fa1df45f8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x556fa1df47d0 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x556fa1df4740 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x556fa1df4a70 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x556fa1df4888 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x556fa1df4908 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x556fa1df4980 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x556fa1df4bd0 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x556fa1df4b40 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x556fa1df7fd8 <col:37, line:441:5>
|   `-IfStmt 0x556fa1df7fc0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x556fa1df7f48 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x556fa1df7f18 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x556fa1df7ed8 <col:6> 'int' lvalue ParmVar 0x556fa1df4b40 'level' 'int'
|     | `-ImplicitCastExpr 0x556fa1df7f30 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x556fa1df7ef8 <col:15> 'ErrorHandler::Level' EnumConstant 0x556fa1df0bc0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x556fa1df7fa8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x556fa1df7f78 <col:8> 'int' lvalue ->_nerrors 0x556fa1df6838
|         `-CXXThisExpr 0x556fa1df7f68 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x556fa1df4c98 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x556fa1df8070 <col:26, line:448:5>
|   `-BinaryOperator 0x556fa1df8050 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x556fa1df8000 <col:2> 'int' lvalue ->_nerrors 0x556fa1df6838
|     | `-CXXThisExpr 0x556fa1df7ff0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x556fa1df8030 <col:13> 'int' 0
|-CXXMethodDecl 0x556fa1df4e60 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x556fa1df4d50 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x556fa1df4dc8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x556fa1df5068 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x556fa1df4f20 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x556fa1df4f98 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x556fa1df5318 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x556fa1df5128 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x556fa1df51a8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x556fa1df5228 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x556fa1df53d0 <col:59> 0 0
|-CXXMethodDecl 0x556fa1df5568 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x556fa1df5448 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x556fa1df54c8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x556fa1dfe9c0 <col:70, line:534:5>
|   |-DeclStmt 0x556fa1df81e0 <line:528:2, col:20>
|   | |-VarDecl 0x556fa1df8098 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x556fa1df8100 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x556fa1df8138 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x556fa1df81a0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x556fa1df82b0 <line:529:2, col:23>
|   | `-VarDecl 0x556fa1df8210 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x556fa1df8298 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x556fa1df8278 <col:18> 'const char *' lvalue ParmVar 0x556fa1df5448 'begin' 'const char *'
|   |-DoStmt 0x556fa1df8678 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x556fa1df85a8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x556fa1df8590 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x556fa1df8570 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x556fa1df82c8 <col:6> 'const char *' lvalue Var 0x556fa1df8210 'x' 'const char *'
|   | |     `-CallExpr 0x556fa1df84c0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x556fa1df84a8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x556fa1df8460 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x556fa1df6d10 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x556fa1df8528 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x556fa1df8510 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x556fa1df8380 <col:20, col:27> 'String' (CXXTemporary 0x556fa1df8380)
|   | |       |     `-CXXTemporaryObjectExpr 0x556fa1df8348 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x556fa1df8540 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x556fa1df83a0 <col:30> 'const char *' lvalue Var 0x556fa1df8210 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x556fa1df8558 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x556fa1df83c0 <col:33> 'const char *' lvalue ParmVar 0x556fa1df54c8 'end' 'const char *'
|   | |       |-UnaryOperator 0x556fa1df8400 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x556fa1df83e0 <col:39> 'String' lvalue Var 0x556fa1df8098 'name' 'String'
|   | |       |-UnaryOperator 0x556fa1df8438 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x556fa1df8418 <col:46> 'String' lvalue Var 0x556fa1df8138 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x556fa1df8450 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x556fa1df8660 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x556fa1df8648 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x556fa1df8628 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x556fa1df85f8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x556fa1aa9b48
|   |         `-ImplicitCastExpr 0x556fa1df85e0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x556fa1df85c0 <col:11> 'String' lvalue Var 0x556fa1df8098 'name' 'String'
|   `-ReturnStmt 0x556fa1df86d0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x556fa1df86b8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x556fa1df8698 <col:9> 'const char *' lvalue Var 0x556fa1df8210 'x' 'const char *'
|-CXXMethodDecl 0x556fa1df56b8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x556fa1df5628 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x556fa1dfefc8 <col:55, line:550:5>
|   `-IfStmt 0x556fa1dfefa0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x556fa1dfec00 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x556fa1dfebe8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x556fa1dfebd0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x556fa1dfebb0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x556fa1dfeb80 <col:6> '<bound member function type>' .operator int (String::*)() const 0x556fa1aa9b48
|     | |       `-DeclRefExpr 0x556fa1dfea20 <col:6> 'const String' lvalue ParmVar 0x556fa1df5628 'x' 'const String &'
|     | `-BinaryOperator 0x556fa1dfeb60 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x556fa1dfeb30 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x556fa1dfeae0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x556fa1dfeac8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x556fa1dfea80 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x556fa1ac3380 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x556fa1dfea40 <col:11> 'const String' lvalue ParmVar 0x556fa1df5628 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x556fa1dfea60 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x556fa1dfeb48 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x556fa1dfeb18 <col:19> 'char' 123
|     |-ReturnStmt 0x556fa1dfec70 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x556fa1dfec40 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x556fa1dfec20 <col:13> 'const String' lvalue ParmVar 0x556fa1df5628 'x' 'const String &'
|     `-IfStmt 0x556fa1dfef78 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x556fa1dfed08 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x556fa1dfecf0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x556fa1dfecd0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x556fa1dfeca0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x556fa1aa9b48
|       |       `-DeclRefExpr 0x556fa1dfec80 <col:11> 'const String' lvalue ParmVar 0x556fa1df5628 'x' 'const String &'
|       |-ReturnStmt 0x556fa1dfee90 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x556fa1dfee78 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x556fa1dfee48 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x556fa1dfee30 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x556fa1dfee10 <col:13, col:29> 'String' (CXXTemporary 0x556fa1dfee10)
|       |         `-CallExpr 0x556fa1dfedc0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x556fa1dfeda8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x556fa1dfed20 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x556fa1df4e60 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x556fa1dfedf0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x556fa1dfed40 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x556fa1dfed60 <col:28> 'const String' lvalue ParmVar 0x556fa1df5628 'x' 'const String &'
|       `-ReturnStmt 0x556fa1dfef68 <line:549:6, col:20>
|         `-ExprWithCleanups 0x556fa1dfef50 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x556fa1dfef20 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x556fa1dfef08 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x556fa1dfeee8 <col:13, col:20> 'String' (CXXTemporary 0x556fa1dfeee8)
|                 `-CXXTemporaryObjectExpr 0x556fa1dfeeb0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x556fa1df5880 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x556fa1df5770 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x556fa1df57e8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556fa1df6fb8 <col:71> 'bool' false
|-CXXRecordDecl 0x556fa1df5930 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x556fa1df5c28 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x556fa1df5bc0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x556fa1df5b60 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x556fa1df5b20 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x556fa1aa63e0 'String'
|       | `-CXXRecord 0x556fa1aa6350 'String'
|       |-BuiltinType 0x556fa1777370 'int'
|       `-DecayedType 0x556fa1df31f0 '__va_list_tag *' sugar
|         |-TypedefType 0x556fa1df31c0 'va_list' sugar
|         | |-Typedef 0x556fa1997490 'va_list'
|         | `-TypedefType 0x556fa1997440 '__gnuc_va_list' sugar
|         |   |-Typedef 0x556fa18cf068 '__gnuc_va_list'
|         |   `-TypedefType 0x556fa18cefd0 '__builtin_va_list' sugar
|         |     |-Typedef 0x556fa17b8bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x556fa17b8b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x556fa17780c0 '__va_list_tag'
|         |         `-CXXRecord 0x556fa1778028 '__va_list_tag'
|         `-PointerType 0x556fa199cd30 '__va_list_tag *'
|           `-RecordType 0x556fa17780c0 '__va_list_tag'
|             `-CXXRecord 0x556fa1778028 '__va_list_tag'
|-EnumDecl 0x556fa1df5c80 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x556fa1df5d80 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df62e0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df5d60 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x556fa1df5d40 <col:16> 'int' 1
| |-EnumConstantDecl 0x556fa1df5e10 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df62f8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df5df0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x556fa1df5dd0 <col:21> 'int' 2
| |-EnumConstantDecl 0x556fa1df5ea0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df6310 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df5e80 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x556fa1df5e60 <col:22> 'int' 4
| |-EnumConstantDecl 0x556fa1df5f30 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df6328 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df5f10 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x556fa1df5ef0 <col:17> 'int' 8
| |-EnumConstantDecl 0x556fa1df5fc0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df6340 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df5fa0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x556fa1df5f80 <col:22> 'int' 16
| |-EnumConstantDecl 0x556fa1df6050 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df6358 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df6030 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x556fa1df6010 <col:19> 'int' 32
| |-EnumConstantDecl 0x556fa1df60e0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df6370 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df60c0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x556fa1df60a0 <col:17> 'int' 64
| |-EnumConstantDecl 0x556fa1df6170 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df6388 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df6150 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x556fa1df6130 <col:14> 'int' 128
| |-EnumConstantDecl 0x556fa1df6200 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x556fa1df63a0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556fa1df61e0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x556fa1df61c0 <col:16> 'int' 256
| `-EnumConstantDecl 0x556fa1df6290 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x556fa1df63b8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556fa1df6270 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x556fa1df6250 <col:12> 'int' 1024
|-CXXMethodDecl 0x556fa1df65c8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x556fa1df63e0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x556fa1df6480 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x556fa1df6750 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x556fa1df6688 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x556fa1df67f8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x556fa1df6838 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x556fa1df6898 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x556fa1df6910 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x556fa1df6d10 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x556fa1df6988 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x556fa1df6a08 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x556fa1df6a88 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x556fa1df6b00 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x556fa1df6b78 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x556fa1df6bf0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x556fa1df6e38 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x556fa1df6e38
| `-ParmVarDecl 0x556fa1df6f48 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x556fa1dff328 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x556fa1dff328
  `-ParmVarDecl 0x556fa1dff438 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556fa1d1a6f0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x556fa1e0a5a8 <line:167:18>
|-CXXRecordDecl 0x556fa1e0a668 prev 0x556fa1d1a6f0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x556fa1e0a778 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
