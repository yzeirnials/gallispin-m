
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbac2eb58 prev 0x557dbac262f8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dbac2ec50 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x557dbac2ece0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x557dbac2ed58 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x557dbac2ee18 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x557dbac2eee0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x557dbac2f058 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x557dbac2ef90 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x557dbac2f100 <col:24>
| `-OptimizeNoneAttr 0x557dbac2f158 <col:34>
|-CXXMethodDecl 0x557dbac2f1a0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x557dbac2f458 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x557dbac2f250 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x557dbac2f2c8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x557dbac2f348 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x557dbac2f510 <line:229:7, col:14> col:7 private
|-FieldDecl 0x557dbac2f548 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x557dbac2f5b0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x557dbac2f638 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x557dbac2f958 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x557dbac2f6f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x557dbac2f768 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x557dbac2f7e0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x557dbac2f860 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x557dbac2fa70 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x557dbac373e8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x557dbac373e8
| `-ParmVarDecl 0x557dbac374f8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x557dbac37598 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x557dbac37598
| `-ParmVarDecl 0x557dbac376a8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x557dbac541a0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbac21b70 prev 0x557dbac218f0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557dbac21c68 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x557dbac21cf8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x557dbac21d58 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x557dbac21e48 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x557dbac21f48 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x557dbac22118 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x557dbac21fc8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x557dbac22040 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x557dbac222a8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x557dbac221e0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x557dbac22350 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x557dbac22488 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x557dbac223c0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x557dbac22628 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x557dbac22568 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x557dbac227c8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x557dbac22708 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x557dbac22870 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x557dbac22970 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x557dbac22a50 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac22950 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x557dbac22930 <col:26> 'int' 1
| `-EnumConstantDecl 0x557dbac22a00 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x557dbac22a68 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbac229e0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x557dbac229c0 <col:44> 'int' 2
|-CXXMethodDecl 0x557dbac22bb0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x557dbac22a98 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x557dbac22b18 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x557dbac22d08 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x557dbac22c78 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x557dbac22f48 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x557dbac22dc8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x557dbac22e40 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x557dbac22ff8 <col:20>
| `-OptimizeNoneAttr 0x557dbac23050 <col:30>
|-CXXMethodDecl 0x557dbac23158 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x557dbac23090 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x557dbac23200 <col:20>
| `-OptimizeNoneAttr 0x557dbac23258 <col:30>
|-CXXMethodDecl 0x557dbac232a8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x557dbac23370 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x557dbac23488 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x557dbac23510 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x557dbac23598 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x557dbac23620 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x557dbac236a8 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x557dbac23738 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x557dbac237f8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x557dbac23880 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x557dbac23908 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x557dbac23990 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x557dbac23a18 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x557dbac23aa0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x557dbac23b30 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x557dbac23bf0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x557dbac23c80 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x557dbac23dd0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x557dbac23d38 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x557dbac23f60 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x557dbac23e90 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x557dbac24210 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x557dbac24018 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x557dbac24098 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x557dbac24118 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x557dbac242c8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x557dbac243d0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557dbac24660 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac243b0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x557dbac24390 <col:33> 'int' 0
| |-EnumConstantDecl 0x557dbac24460 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557dbac24678 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac24440 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x557dbac24420 <col:32> 'int' 20
| |-EnumConstantDecl 0x557dbac244f0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557dbac24690 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac244d0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x557dbac244b0 <col:38> 'int' 90
| |-EnumConstantDecl 0x557dbac24580 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557dbac246a8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac24560 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x557dbac24540 <col:35> 'int' 100
| `-EnumConstantDecl 0x557dbac24610 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x557dbac246c0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbac245f0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x557dbac245d0 <col:32> 'int' 2000
|-CXXMethodDecl 0x557dbac24700 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x557dbac24b40 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x557dbac249b0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x557dbac24a28 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac24c10 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x557dbac24d90 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x557dbac24cc0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac24f98 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x557dbac24e48 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x557dbac24ec0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac25098 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x557dbac25138 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x557dbac25200 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x557dbac25290 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x557dbac254c0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac25270 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x557dbac25250 <col:36> 'int' EnumConstant 0x557dbac25200 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x557dbac252e0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557dbac25330 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557dbac25380 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557dbac253d0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557dbac25420 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x557dbac25470 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x557dbac255a8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x557dbac254e8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x557dbac25670 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x557dbac25730 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x557dbac257f0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x557dbac258b0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x557dbac259c8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x557dbac25a90 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x557dbac25c10 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x557dbac25b40 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x557dbac25d38 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x557dbac25f38 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x557dbac25de8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x557dbac25e68 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x557dbac33888 <col:54, line:127:5>
|   |-ParenExpr 0x557dbac33738 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x557dbac33708 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac333f8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x557dbac333d0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x557dbac333b8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x557dbac333a0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x557dbac33370 <col:31> 'Router *' lvalue ->_router 0x557dbac31250
|   |   |         `-CXXThisExpr 0x557dbac33360 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x557dbac33458 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac33438 <col:48> 'int' 0
|   |   `-CallExpr 0x557dbac33668 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x557dbac33650 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac33630 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac336a8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac334c8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x557dbac336c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac334e8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x557dbac336d8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac33520 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x557dbac336f0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac33618 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac33600 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac335b8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x557dbac337d0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x557dbac33768 <col:9> 'Router *' lvalue ->_router 0x557dbac31250
|   | | `-CXXThisExpr 0x557dbac33758 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x557dbac337b8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x557dbac33798 <col:19> 'Router *' lvalue ParmVar 0x557dbac25de8 'r' 'Router *'
|   `-BinaryOperator 0x557dbac33868 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x557dbac33800 <col:9> 'int' lvalue ->_eindex 0x557dbac312b8
|     | `-CXXThisExpr 0x557dbac337f0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x557dbac33850 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x557dbac33830 <col:19> 'int' lvalue ParmVar 0x557dbac25e68 'eindex' 'int'
|-CXXMethodDecl 0x557dbac260c0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x557dbac25ff8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x557dbac26190 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x557dbac26258 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x557dbac262f8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x557dbac26548 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x557dbac263c0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x557dbac26440 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x557dbac265f8 <col:20>
| `-OptimizeNoneAttr 0x557dbac26650 <col:30>
|-CXXMethodDecl 0x557dbac26758 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x557dbac26690 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x557dbac26800 <col:20>
| `-OptimizeNoneAttr 0x557dbac26858 <col:30>
|-CXXMethodDecl 0x557dbac26928 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x557dbac26898 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x557dbac269d0 <col:20>
| `-OptimizeNoneAttr 0x557dbac26a28 <col:30>
|-CXXMethodDecl 0x557dbac26bb8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x557dbac26a60 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x557dbac26ae0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x557dbac26d48 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x557dbac26c80 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x557dbac26e98 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x557dbac26e08 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x557dbac26fe8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x557dbac26f58 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x557dbac27138 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x557dbac270a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x557dbac273f8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x557dbac271f0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x557dbac27270 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x557dbac27318 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x557dbac274d0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x557dbac27590 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x557dbac27860 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x557dbac27710 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x557dbac27788 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac27988 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x557dbac27b60 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x557dbac27a40 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x557dbac27ac0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x557dbac27d48 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x557dbac27c28 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x557dbac27ca8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x557dbac280b8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x557dbac27e08 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x557dbac27e80 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x557dbac27f00 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557dbac32e70 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557dbac32e50 <col:106> 'int' 0
| `-ParmVarDecl 0x557dbac27f78 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557dbac32ea8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557dbac32e88 <col:126> 'int' 0
|-CXXMethodDecl 0x557dbac28458 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x557dbac28188 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x557dbac28220 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x557dbac282a0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x557dbac28318 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557dbac32ee0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557dbac32ec0 <col:114> 'int' 0
|-CXXMethodDecl 0x557dbac287e8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x557dbac28530 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x557dbac285a8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x557dbac28628 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x557dbac32ef8 <col:96> 'int' 0
| `-ParmVarDecl 0x557dbac286a0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557dbac32f38 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557dbac32f18 <col:116> 'int' 0
|-CXXMethodDecl 0x557dbac28b68 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x557dbac288b8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x557dbac28930 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x557dbac289b0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557dbac32f70 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557dbac32f50 <col:109> 'int' 0
| `-ParmVarDecl 0x557dbac28a28 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557dbac32fa8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557dbac32f88 <col:129> 'int' 0
|-CXXMethodDecl 0x557dbac28ee8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x557dbac28c38 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x557dbac28cb0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x557dbac28d30 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x557dbac28da8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557dbac32fe0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557dbac32fc0 <col:117> 'int' 0
|-CXXMethodDecl 0x557dbac29278 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x557dbac28fc0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac29038 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x557dbac290b8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x557dbac32ff8 <col:99> 'int' 0
| `-ParmVarDecl 0x557dbac29130 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557dbac33038 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557dbac33018 <col:119> 'int' 0
|-CXXMethodDecl 0x557dbac29698 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x557dbac29348 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x557dbac293c8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x557dbac29440 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x557dbac294c0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557dbac33070 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557dbac33050 <col:108> 'int' 0
| `-ParmVarDecl 0x557dbac29540 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x557dbac330a8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x557dbac33088 <col:141> 'int' 0
|-CXXMethodDecl 0x557dbac29ab8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x557dbac29770 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x557dbac297f0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x557dbac29868 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x557dbac298e8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x557dbac29968 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x557dbac330c0 <col:121> 'int' 0
|-CXXMethodDecl 0x557dbac29ee8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x557dbac29b98 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x557dbac29c18 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x557dbac29c90 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x557dbac29d10 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x557dbac330e0 <col:98> 'int' 0
| `-ParmVarDecl 0x557dbac29d90 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x557dbac33100 <col:123> 'int' 0
|-CXXMethodDecl 0x557dbac2a1b0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x557dbac29fc0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x557dbac2a040 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x557dbac2a0c0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x557dbac33120 <col:80> 'int' 0
|-EnumDecl 0x557dbac2a268 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x557dbac2a370 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x557dbac2a600 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac2a350 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x557dbac2a330 <col:42> 'int' 1
| |-EnumConstantDecl 0x557dbac2a400 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x557dbac2a618 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac2a3e0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x557dbac2a3c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x557dbac2a490 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x557dbac2a630 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac2a470 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x557dbac2a450 <col:44> 'int' 4
| |-EnumConstantDecl 0x557dbac2a520 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x557dbac2a648 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbac2a500 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x557dbac2a4e0 <col:36> 'int' 7
| `-EnumConstantDecl 0x557dbac2a5b0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x557dbac2a660 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbac2a590 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x557dbac2a570 <col:34> 'int' 6
|-CXXMethodDecl 0x557dbac2a918 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x557dbac2a688 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x557dbac2a728 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x557dbac2a7a8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x557dbac2a820 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x557dbac331d8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x557dbac331c0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x557dbac331a8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x557dbac33188 <col:98, col:105> 'String' (CXXTemporary 0x557dbac33188)
|           `-CXXTemporaryObjectExpr 0x557dbac33150 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x557dbac2abb8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x557dbac2a9e8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x557dbac2aa60 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x557dbac2aad8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x557dbac33288 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x557dbac33270 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x557dbac33258 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x557dbac33238 <col:94, col:101> 'String' (CXXTemporary 0x557dbac33238)
| |         `-CXXTemporaryObjectExpr 0x557dbac33200 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x557dbac33a70 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x557dbac339e8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x557dbac339b8 <col:9> '<bound member function type>' ->add_task_handlers 0x557dbac2a918
|     | `-CXXThisExpr 0x557dbac339a8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x557dbac33a28 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x557dbac33928 <col:27> 'Task *' lvalue ParmVar 0x557dbac2a9e8 'task' 'Task *'
|     |-ImplicitCastExpr 0x557dbac33a40 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x557dbac33948 <col:33> 'NotifierSignal *' lvalue ParmVar 0x557dbac2aa60 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x557dbac33a58 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x557dbac33968 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x557dbac2a5b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x557dbac33988 <col:62> 'const String' lvalue ParmVar 0x557dbac2aad8 'prefix' 'const String &'
|-CXXMethodDecl 0x557dbac2adc8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x557dbac2ac80 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x557dbac2acf8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x557dbac33338 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x557dbac33320 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x557dbac33308 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x557dbac332e8 <col:70, col:77> 'String' (CXXTemporary 0x557dbac332e8)
| |         `-CXXTemporaryObjectExpr 0x557dbac332b0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x557dbac33c48 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x557dbac33bc0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x557dbac33b90 <col:9> '<bound member function type>' ->add_task_handlers 0x557dbac2a918
|     | `-CXXThisExpr 0x557dbac33b80 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x557dbac33c00 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x557dbac33b00 <col:27> 'Task *' lvalue ParmVar 0x557dbac2ac80 'task' 'Task *'
|     |-ImplicitCastExpr 0x557dbac33c18 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x557dbac33b20 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x557dbac33c30 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x557dbac33b40 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x557dbac2a5b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x557dbac33b60 <col:57> 'const String' lvalue ParmVar 0x557dbac2acf8 'prefix' 'const String &'
|-CXXMethodDecl 0x557dbac2b0a8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x557dbac2ae90 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2af10 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2af88 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x557dbac2b358 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x557dbac2b178 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2b1f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2b278 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x557dbac2b648 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x557dbac2b428 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2b4a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2b520 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x557dbac2b8f8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x557dbac2b718 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2b798 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2b818 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x557dbac2bba8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x557dbac2b9c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2ba48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2bac8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x557dbac2be58 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x557dbac2bc78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2bcf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2bd70 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x557dbac2c108 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x557dbac2bf28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2bfa8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2c028 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x557dbac2c418 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x557dbac2c230 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2c2b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2c330 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x557dbac2c6f8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x557dbac2c4e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2c568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2c610 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x557dbac2c9d8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x557dbac2c7c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2c848 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2c8f0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x557dbac2cc40 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x557dbac2caa8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x557dbac2cb28 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x557dbac2cba0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x557dbac2cee8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x557dbac2cd10 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x557dbac2cd90 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x557dbac2ce08 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x557dbac2d198 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x557dbac2cfb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2d038 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2d0b8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x557dbac2d448 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x557dbac2d268 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2d2e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2d360 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x557dbac2d6f8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x557dbac2d518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2d598 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2d610 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x557dbac2d9c8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x557dbac2d7c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2d848 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557dbac2d8e8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x557dbac2dcf8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x557dbac2da98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557dbac2db18 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x557dbac2db90 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x557dbac2dc08 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557dbac33350 <col:93> 'bool' false
|-CXXMethodDecl 0x557dbac2dee0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557dbac2ddc8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x557dbac2de48 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x557dbac2e0b8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557dbac2dfa0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x557dbac2e020 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x557dbac2e398 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x557dbac2e178 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x557dbac2e1f0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x557dbac2e270 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x557dbac2e2e8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac2e688 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x557dbac2e468 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x557dbac2e4e0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x557dbac2e560 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x557dbac2e5d8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac2e8c0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x557dbac2e760 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x557dbac2e7e0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x557dbac2eaa8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x557dbac2e988 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x557dbac2ea08 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x557dbac2eb58 prev 0x557dbac262f8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557dbac2ec50 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x557dbac2ece0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x557dbac2ed58 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x557dbac2ee18 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x557dbac2eee0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x557dbac2f058 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x557dbac2ef90 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x557dbac2f100 <col:24>
| | `-OptimizeNoneAttr 0x557dbac2f158 <col:34>
| |-CXXMethodDecl 0x557dbac2f1a0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x557dbac2f458 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x557dbac2f250 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x557dbac2f2c8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x557dbac2f348 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x557dbac2f510 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x557dbac2f548 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x557dbac2f5b0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x557dbac2f638 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x557dbac2f958 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x557dbac2f6f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x557dbac2f768 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x557dbac2f7e0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x557dbac2f860 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x557dbac2fa70 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x557dbac373e8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x557dbac373e8
| | `-ParmVarDecl 0x557dbac374f8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x557dbac37598 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x557dbac37598
| | `-ParmVarDecl 0x557dbac376a8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x557dbac541a0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x557dbac2fae8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x557dbac2fb88 <col:38> "" ""
|-CXXMethodDecl 0x557dbac2fc18 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x557dbac2fcb8 <col:44> "" ""
|-AccessSpecDecl 0x557dbac2fd28 <line:260:3, col:10> col:3 private
|-EnumDecl 0x557dbac2fd50 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x557dbac2fe50 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x557dbac2fea0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbac2fe30 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x557dbac2fe10 <col:27> 'int' 4
|-FieldDecl 0x557dbac2ff58 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x557dbac30108 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x557dbac301c0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x557dbac31250 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x557dbac312b8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x557dbac31408 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x557dbac31348 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x557dbac315b8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x557dbac314c8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x557dbac31798 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x557dbac31678 <col:20> col:23 'int'
| `-ParmVarDecl 0x557dbac316f8 <col:25> col:28 'int'
|-CXXMethodDecl 0x557dbac31a40 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x557dbac31860 <col:23> col:26 'int'
| |-ParmVarDecl 0x557dbac318e0 <col:28> col:31 'int'
| `-ParmVarDecl 0x557dbac31958 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x557dbac31af8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x557dbac31bc0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x557dbac31c10 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x557dbac31c60 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x557dbac31e40 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x557dbac31cf0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x557dbac31d68 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac320e8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x557dbac31f08 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x557dbac31f88 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x557dbac32000 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac32308 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x557dbac321b8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x557dbac32238 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x557dbac32640 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x557dbac323c8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x557dbac32448 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x557dbac324c0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x557dbac32540 <col:57> col:60 'int'
|-CXXMethodDecl 0x557dbac32828 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557dbac32710 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x557dbac32790 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x557dbac32978 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x557dbac328e8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x557dbac32cf8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x557dbac32a38 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x557dbac32ab8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x557dbac32b30 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x557dbac32bb0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x557dbac32e10 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class GapRate
         0 |   unsigned int _ugap
         4 |   int _sec_count
         8 |   class Timestamp::seconds_type _tv_sec
        12 |   unsigned int _rate
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class Shaper
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class GapRate _rate
       108 |     unsigned int _ugap
       112 |     int _sec_count
       116 |     class Timestamp::seconds_type _tv_sec
       120 |     unsigned int _rate
           | [sizeof=128, dsize=124, align=8,
           |  nvsize=124, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbac3a5e8 <../dummy_inc/click/gaprate.hh:45:1, line:124:1> line:45:7 referenced class GapRate definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dbac3a708 <col:1, col:7> col:7 implicit referenced class GapRate
|-AccessSpecDecl 0x557dbac3a798 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x557dbac3a820 <line:48:5, col:20> col:12 GapRate 'void ()' inline
|-CXXConstructorDecl 0x557dbac3a970 <line:52:5, col:30> col:12 GapRate 'void (unsigned int)' inline
| `-ParmVarDecl 0x557dbac3a8e0 <col:20, col:29> col:29 r 'unsigned int'
|-CXXMethodDecl 0x557dbac3aa70 <line:55:5, col:28> col:21 rate 'unsigned int () const' inline
|-CXXMethodDecl 0x557dbac3abb8 <line:62:5, col:36> col:17 set_rate 'void (unsigned int)' inline
| `-ParmVarDecl 0x557dbac3ab28 <col:26, col:35> col:35 r 'unsigned int'
|-CXXMethodDecl 0x557dbac3adc8 <line:70:5, col:49> col:10 set_rate 'void (unsigned int, ErrorHandler *)'
| |-ParmVarDecl 0x557dbac3ac78 <col:19, col:28> col:28 r 'unsigned int'
| `-ParmVarDecl 0x557dbac3acf0 <col:31, col:45> col:45 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac3af48 <line:78:5, col:48> col:17 need_update 'bool (const Timestamp &)' inline
| `-ParmVarDecl 0x557dbac3ae88 <col:29, col:46> col:46 ts 'const Timestamp &'
|-CXXMethodDecl 0x557dbac3b010 <line:88:5, col:31> col:22 expiry 'Timestamp () const' inline
|-CXXMethodDecl 0x557dbac3b0d0 <line:93:5, col:24> col:17 update 'void ()' inline
|-CXXMethodDecl 0x557dbac3b218 <line:100:5, col:38> col:17 update_with 'void (int)' inline
| `-ParmVarDecl 0x557dbac3b188 <col:29, col:33> col:33 delta 'int'
|-CXXMethodDecl 0x557dbac3b2e0 <line:106:5, col:23> col:17 used reset 'void ()' inline
|-EnumDecl 0x557dbac3b380 <line:109:5, col:28> col:5
| `-EnumConstantDecl 0x557dbac3b480 <col:12, col:25> col:12 referenced UGAP_SHIFT 'GapRate::(anonymous enum at ../dummy_inc/click/gaprate.hh:109:5)'
|   `-ImplicitCastExpr 0x557dbac3b4d0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbac3b460 <col:25> 'int' Int: 12
|       `-IntegerLiteral 0x557dbac3b440 <col:25> 'int' 12
|-EnumDecl 0x557dbac3b4e8 <line:110:5, col:46> col:5
| `-EnumConstantDecl 0x557dbac3b648 <col:12, col:35> col:12 referenced MAX_RATE 'GapRate::(anonymous enum at ../dummy_inc/click/gaprate.hh:110:5)'
|   `-ConstantExpr 0x557dbac3b628 <col:23, col:35> 'unsigned int' Int: 4096000000
|     `-BinaryOperator 0x557dbac3b608 <col:23, col:35> 'unsigned int' '<<'
|       |-IntegerLiteral 0x557dbac3b5b0 <col:23> 'unsigned int' 1000000
|       `-ImplicitCastExpr 0x557dbac3b5f0 <col:35> 'int' <IntegralCast>
|         `-DeclRefExpr 0x557dbac3b5d0 <col:35> 'GapRate::(anonymous enum at ../dummy_inc/click/gaprate.hh:109:5)' EnumConstant 0x557dbac3b480 'UGAP_SHIFT' 'GapRate::(anonymous enum at ../dummy_inc/click/gaprate.hh:109:5)'
|-AccessSpecDecl 0x557dbac3b698 <line:112:3, col:10> col:3 private
|-FieldDecl 0x557dbac3b6d8 <line:114:5, col:14> col:14 referenced _ugap 'unsigned int'
|-FieldDecl 0x557dbac3b740 <line:115:5, col:9> col:9 referenced _sec_count 'int'
|-FieldDecl 0x557dbac3b7f0 <line:116:5, col:29> col:29 referenced _tv_sec 'Timestamp::seconds_type':'int'
|-FieldDecl 0x557dbac3b858 <line:117:5, col:14> col:14 referenced _rate 'unsigned int'
|-CXXMethodDecl 0x557dbac3b950 <line:122:5, col:46> col:17 used initialize_rate 'void (unsigned int)' inline
| `-ParmVarDecl 0x557dbac3b8c0 <col:33, col:42> col:42 rate 'unsigned int'
|-CXXConstructorDecl 0x557dbac3cab8 <line:45:7> col:7 implicit constexpr GapRate 'void (const GapRate &)' inline default trivial noexcept-unevaluated 0x557dbac3cab8
| `-ParmVarDecl 0x557dbac3cbc8 <col:7> col:7 'const GapRate &'
|-CXXConstructorDecl 0x557dbac3cc68 <col:7> col:7 implicit constexpr GapRate 'void (GapRate &&)' inline default trivial noexcept-unevaluated 0x557dbac3cc68
| `-ParmVarDecl 0x557dbac3cd78 <col:7> col:7 'GapRate &&'
`-CXXDestructorDecl 0x557dbac40ee0 <col:7> col:7 implicit ~GapRate 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.GapRate = type { i32, i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.GapRate = type { i32, i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbac3f600 <../elements/standard/shaper.hh:57:1, line:79:1> line:57:7 referenced class Shaper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x557dbac3f758 <col:1, col:7> col:7 implicit referenced class Shaper
|-AccessSpecDecl 0x557dbac3f7e8 <col:33, col:39> col:33 public
|-CXXConstructorDecl 0x557dbac3f870 <line:59:5, col:12> col:5 used Shaper 'void ()'
|-CXXMethodDecl 0x557dbac3f970 <line:61:5, col:55> col:17 used class_name 'const char *() const'
| |-Overrides: [ 0x557dbac232a8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x557dbac41008 <col:36, col:55>
|   `-ReturnStmt 0x557dbac40ff8 <col:38, col:45>
|     `-ImplicitCastExpr 0x557dbac40fe0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x557dbac40fc0 <col:45> 'const char [7]' lvalue "Shaper"
|-CXXMethodDecl 0x557dbac3fa38 <line:62:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x557dbac23370 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x557dbac41068 <col:36, col:58>
|   `-ReturnStmt 0x557dbac41058 <col:38, col:45>
|     `-ImplicitCastExpr 0x557dbac41040 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x557dbac41020 <col:45> 'const char []' lvalue Var 0x557dbac236a8 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x557dbac3fb00 <line:63:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x557dbac23738 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x557dbac410c8 <col:36, col:51>
|   `-ReturnStmt 0x557dbac410b8 <col:38, col:45>
|     `-ImplicitCastExpr 0x557dbac410a0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x557dbac41080 <col:45> 'const char []' lvalue Var 0x557dbac23908 'PULL' 'const char []'
|-CXXMethodDecl 0x557dbac3fbc0 <line:64:5, col:64> col:10 is_bandwidth 'bool () const'
| `-CompoundStmt 0x557dbac41210 <col:31, col:64>
|   `-ReturnStmt 0x557dbac41200 <col:33, col:59>
|     `-BinaryOperator 0x557dbac411e0 <col:40, col:59> 'bool' '=='
|       |-ImplicitCastExpr 0x557dbac411b0 <col:40, col:54> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x557dbac41198 <col:40, col:54> 'char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x557dbac41160 <col:40, col:54> 'const char' lvalue
|       |     |-CXXMemberCallExpr 0x557dbac41120 <col:40, col:51> 'const char *'
|       |     | `-MemberExpr 0x557dbac410f0 <col:40> '<bound member function type>' ->class_name 0x557dbac3f970
|       |     |   `-CXXThisExpr 0x557dbac410e0 <col:40> 'const Shaper *' implicit this
|       |     `-IntegerLiteral 0x557dbac41140 <col:53> 'int' 0
|       `-ImplicitCastExpr 0x557dbac411c8 <col:59> 'int' <IntegralCast>
|         `-CharacterLiteral 0x557dbac41180 <col:59> 'char' 66
|-CXXMethodDecl 0x557dbac3fe90 <line:66:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557dbac24b40 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x557dbac3fd40 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x557dbac3fdb8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x557dbac3ff60 <line:67:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x557dbac27590 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x557dbac41248 <col:39, col:54>
|   `-ReturnStmt 0x557dbac41238 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x557dbac41228 <col:48> 'bool' true
|-CXXMethodDecl 0x557dbac40020 <line:68:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x557dbac24c10 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x557dbac40168 <line:70:5, col:21> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x557dbac222a8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x557dbac400d8 <col:18> col:21 'int'
|-AccessSpecDecl 0x557dbac40210 <line:72:3, col:12> col:3 protected
|-FieldDecl 0x557dbac40248 <line:74:5, col:13> col:13 _rate 'GapRate'
|-CXXMethodDecl 0x557dbac403c0 <line:76:5, col:49> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557dbac402a8 <col:32, col:40> col:41 'Element *'
| `-ParmVarDecl 0x557dbac40328 <col:43, col:48> col:49 'void *'
|-CXXMethodDecl 0x557dbac406a0 <line:77:5, col:80> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x557dbac40480 <col:30, col:43> col:44 'const String &'
| |-ParmVarDecl 0x557dbac404f8 <col:46, col:55> col:55 e 'Element *'
| |-ParmVarDecl 0x557dbac40578 <col:58, col:63> col:64 'void *'
| `-ParmVarDecl 0x557dbac405f0 <col:66, col:79> col:80 'ErrorHandler *'
|-CXXConstructorDecl 0x557dbac40788 <line:57:7> col:7 implicit Shaper 'void (const Shaper &)' inline default_delete noexcept-unevaluated 0x557dbac40788
| `-ParmVarDecl 0x557dbac40898 <col:7> col:7 'const Shaper &'
|-CXXConstructorDecl 0x557dbac40938 <col:7> col:7 implicit Shaper 'void (Shaper &&)' inline default_delete noexcept-unevaluated 0x557dbac40938
| `-ParmVarDecl 0x557dbac40a48 <col:7> col:7 'Shaper &&'
|-CXXMethodDecl 0x557dbac40ae8 <col:7> col:7 implicit operator= 'Shaper &(const Shaper &)' inline default_delete noexcept-unevaluated 0x557dbac40ae8
| `-ParmVarDecl 0x557dbac40bf8 <col:7> col:7 'const Shaper &'
|-CXXMethodDecl 0x557dbac40c68 <col:7> col:7 implicit operator= 'Shaper &(Shaper &&)' inline default_delete noexcept-unevaluated 0x557dbac40c68
| `-ParmVarDecl 0x557dbac40d78 <col:7> col:7 'Shaper &&'
`-CXXDestructorDecl 0x557dbac40e00 <col:7> col:7 implicit used ~Shaper 'void () noexcept' inline default
  |-Overrides: [ 0x557dbac21e48 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x557dbac54280 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.Shaper = type { %class.Element.base, %class.GapRate, [4 x i8] }
  NonVirtualBaseLLVMType:%class.Shaper.base = type { %class.Element.base, %class.GapRate }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BandwidthShaper
         0 |   class Shaper (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class GapRate _rate
       108 |       unsigned int _ugap
       112 |       int _sec_count
       116 |       class Timestamp::seconds_type _tv_sec
       120 |       unsigned int _rate
           | [sizeof=128, dsize=124, align=8,
           |  nvsize=124, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbac532b0 <../elements/standard/bandwidthshaper.hh:28:1, line:36:1> line:28:7 class BandwidthShaper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'Shaper'
|-CXXRecordDecl 0x557dbac53408 <col:1, col:7> col:7 implicit referenced class BandwidthShaper
|-AccessSpecDecl 0x557dbac53498 <col:41, col:47> col:41 public
|-CXXConstructorDecl 0x557dbac53520 <line:30:5, col:21> col:5 BandwidthShaper 'void ()'
|-CXXMethodDecl 0x557dbac53620 <line:32:5, col:64> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x557dbac3f970 Shaper::class_name 'const char *() const' ]
| `-CompoundStmt 0x557dbac53fe0 <col:36, col:64>
|   `-ReturnStmt 0x557dbac53fd0 <col:38, col:45>
|     `-ImplicitCastExpr 0x557dbac53fb8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x557dbac53f90 <col:45> 'const char [16]' lvalue "BandwidthShaper"
|-CXXMethodDecl 0x557dbac53768 <line:34:5, col:21> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x557dbac40168 Shaper::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x557dbac536d8 <col:18> col:21 'int'
|-CXXConstructorDecl 0x557dbac53838 <line:28:7> col:7 implicit BandwidthShaper 'void (const BandwidthShaper &)' inline default_delete noexcept-unevaluated 0x557dbac53838
| `-ParmVarDecl 0x557dbac53948 <col:7> col:7 'const BandwidthShaper &'
|-CXXConstructorDecl 0x557dbac539e8 <col:7> col:7 implicit BandwidthShaper 'void (BandwidthShaper &&)' inline default_delete noexcept-unevaluated 0x557dbac539e8
| `-ParmVarDecl 0x557dbac53af8 <col:7> col:7 'BandwidthShaper &&'
|-CXXMethodDecl 0x557dbac53b98 <col:7> col:7 implicit operator= 'BandwidthShaper &(const BandwidthShaper &)' inline default_delete noexcept-unevaluated 0x557dbac53b98
| `-ParmVarDecl 0x557dbac53ca8 <col:7> col:7 'const BandwidthShaper &'
|-CXXMethodDecl 0x557dbac53d18 <col:7> col:7 implicit operator= 'BandwidthShaper &(BandwidthShaper &&)' inline default_delete noexcept-unevaluated 0x557dbac53d18
| `-ParmVarDecl 0x557dbac53e28 <col:7> col:7 'BandwidthShaper &&'
`-CXXDestructorDecl 0x557dbac53eb0 <col:7> col:7 implicit ~BandwidthShaper 'void ()' inline default noexcept-unevaluated 0x557dbac53eb0
  `-Overrides: [ 0x557dbac40e00 Shaper::~Shaper 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.BandwidthShaper = type { %class.Shaper.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.BandwidthShaper.base = type { %class.Shaper.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dba9e0620 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dba9e0738 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x557dba9e07c8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x557dba9e0898 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x557dba9e0980 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x557dba9e0b98 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x557dba9e0a40 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e0d48 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x557dba9e0c50 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x557dba9e0e90 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x557dba9e0e00 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x557dba9e0fd8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x557dba9e0f48 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e1120 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x557dba9e1090 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e11e8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x557dba9e1330 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x557dba9e12a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x557dba9e13f8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x557dba9e1540 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x557dba9e14b0 <col:28> col:31 'int'
|-CXXMethodDecl 0x557dba9e16b8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x557dba9e15f8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e1800 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x557dba9e1770 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e18c8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x557dba9e1a88 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x557dba9e1978 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x557dba9e19f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e1cd8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x557dba9e1b48 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557dba9e1bc0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557dba9e1d88 <col:86> "" ""
|-CXXMethodDecl 0x557dba9e1ff8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x557dba9e1e68 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x557dba9e1ee0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e21a8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x557dba9e20b8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x557dba9e2358 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x557dba9e2260 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x557dba9e2628 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x557dba9e2410 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x557dba9e2488 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x557dba9e2500 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e2908 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x557dba9e26f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x557dba9e2768 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557dba9e27e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557dba9e29c0 <col:115> "" ""
|-AccessSpecDecl 0x557dba9e2a30 <line:84:3, col:10> col:3 private
|-FieldDecl 0x557dba9e2a68 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dba9e3f80 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x557dba9e3f80
| `-ParmVarDecl 0x557dba9e4088 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x557dba9e4128 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x557dba9e4128
| `-ParmVarDecl 0x557dba9e4238 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x557dbaa19868 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557dbac0b660 <col:7>
|-CXXConstructorDecl 0x557dbaa19940 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x557dbaa19940
| `-ParmVarDecl 0x557dbaa19a58 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x557dbaa19ac8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x557dbaa19ac8
| `-ParmVarDecl 0x557dbaa19bd8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x557dbac0e060 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbabfa208 prev 0x557dbabef410 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dbabfa300 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x557dbabfa3f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x557dbabfa518 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x557dbabfa698 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x557dbabfa818 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x557dbabfa998 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x557dbac0b7c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557dbac0c038 <col:11>
|-CXXDestructorDecl 0x557dbac0b8a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x557dbac0b9d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x557dbac0b9d8
| `-ParmVarDecl 0x557dbac0bae8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x557dbac0bb88 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x557dbac0bb88
| `-ParmVarDecl 0x557dbac0bc98 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x557dbac0ea58 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x557dbac0eb68 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x557dbac0ede8 <col:11>
|   `-ReturnStmt 0x557dbac0edd8 <col:11>
|     `-UnaryOperator 0x557dbac0edc0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x557dbac0edb0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x557dbac0ebd8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x557dbac0ebd8
  `-ParmVarDecl 0x557dbac0ece8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbabfaa00 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dbabfab18 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x557dbabfabb8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x557dbabfac20 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x557dbabfac88 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x557dbabfacf0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x557dbabfad50 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x557dbabfae10 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x557dbabfae70 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x557dbabfaed0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x557dbac0b6d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x557dbabfabb8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x557dbac0c048 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x557dbac0c0a0 <col:12>
|-CXXConstructorDecl 0x557dbac0bd08 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x557dbac0bd08
| `-ParmVarDecl 0x557dbac0be18 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x557dbac0beb8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x557dbac0beb8
| `-ParmVarDecl 0x557dbac0bfc8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x557dbac0e140 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbabe8b20 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557dbabe8c38 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x557dbabe8cc8 <col:16, col:22> col:16 public
|-EnumDecl 0x557dbabe8cf0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x557dbabe8df0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x557dbabe8ed0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabe8dd0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x557dbabe8db0 <col:21> 'int' 28
| `-EnumConstantDecl 0x557dbabe8e80 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x557dbabe8ee8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbabe8e60 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x557dbabe8e40 <col:22> 'int' 64
|-CXXMethodDecl 0x557dbabe9228 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x557dbabe8f10 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557dbabe8f90 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x557dbabe9008 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557dbabe9080 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557dbabe92e8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x557dbabe94e8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x557dbabe9360 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x557dbabe93d8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557dbabe9598 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x557dbabe96f8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x557dbabe9608 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557dbabe97a0 <col:72> warn_unused_result ""
|-TypedefDecl 0x557dbabe9b00 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x557dbabe9a90 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x557dbabe9a30 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x557dbabe99f0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x557dba6c2310 'void'
|       |-PointerType 0x557dba968ec0 'unsigned char *'
|       | `-BuiltinType 0x557dba6c2410 'unsigned char'
|       |-TypedefType 0x557dba765490 'size_t' sugar
|       | |-Typedef 0x557dba732af0 'size_t'
|       | `-BuiltinType 0x557dba6c2470 'unsigned long'
|       `-PointerType 0x557dba6c2b10 'void *'
|         `-BuiltinType 0x557dba6c2310 'void'
|-CXXMethodDecl 0x557dbabe9f78 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x557dbabe9b70 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x557dbabe9be8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557dbabe9c80 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x557dbabe9d00 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x557dbac04670 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x557dbac04658 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x557dbac04620 <col:58> 'int' 0
| |-ParmVarDecl 0x557dbabe9d80 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x557dbac04698 <col:76> 'int' 0
| |-ParmVarDecl 0x557dbabe9e00 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x557dbac046b8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x557dbabea048 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x557dbabea0c8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x557dbabea188 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x557dbabea228 <col:20>
| `-OptimizeNoneAttr 0x557dbabea280 <col:30>
|-CXXMethodDecl 0x557dbabea2f8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x557dbabea398 <col:20>
| `-OptimizeNoneAttr 0x557dbabea3f0 <col:30>
|-CXXMethodDecl 0x557dbabea468 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x557dbabea508 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x557dbabea5b8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x557dbabea658 <col:20>
| |-OptimizeNoneAttr 0x557dbabea6b0 <col:30>
| `-WarnUnusedResultAttr 0x557dbabea6d8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x557dbabea730 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x557dbabea7d0 <col:20>
| `-OptimizeNoneAttr 0x557dbabea828 <col:30>
|-CXXMethodDecl 0x557dbabea878 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x557dbabea918 <col:20>
| `-OptimizeNoneAttr 0x557dbabea970 <col:30>
|-CXXMethodDecl 0x557dbabea9b8 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x557dbabeaa58 <col:20>
| `-OptimizeNoneAttr 0x557dbabeaab0 <col:30>
|-CXXMethodDecl 0x557dbabeaaf8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabeabb8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabeac80 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x557dbabead48 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x557dbabeae08 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabeaf28 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x557dbac04780 <col:54, line:99:5>
|   `-ReturnStmt 0x557dbac04770 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x557dbac04758 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x557dbac04728 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x557dbabfb208
|         `-CXXThisExpr 0x557dbac04718 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x557dbabeb0c8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x557dbabeafd8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x557dbac04830 <col:67, line:103:5>
|   `-BinaryOperator 0x557dbac04810 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x557dbac047a8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x557dbabfb208
|     | `-CXXThisExpr 0x557dbac04798 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x557dbac047f8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x557dbac047d8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x557dbabeafd8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x557dbabeb1c0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x557dbac048b0 <col:33, line:107:5>
|   `-ReturnStmt 0x557dbac048a0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x557dbac04888 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x557dbac04858 <col:16> 'void *' lvalue ->_destructor_argument 0x557dbabfb270
|         `-CXXThisExpr 0x557dbac04848 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x557dbabeb280 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x557dbac04ee0 <col:25, line:113:5>
|   |-ParenExpr 0x557dbac04c28 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x557dbac04bf8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac04968 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x557dbac04940 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x557dbac04908 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x557dbac048d8 <col:24> '<bound member function type>' ->shared 0x557dbabea2f8
|   |   |       `-ImplicitCastExpr 0x557dbac04928 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x557dbac048c8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x557dbac049c8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac049a8 <col:42> 'int' 0
|   |   `-CallExpr 0x557dbac04b58 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x557dbac04b40 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac04b20 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac04b98 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac04a38 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x557dbac04bb0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac04a60 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac04bc8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac04a98 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x557dbac04be0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac04b08 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac04af0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac04ab8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x557dbac04e28 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x557dbac04c58 <col:2> 'unsigned char *' lvalue ->_head 0x557dbabfb010
|   | | `-CXXThisExpr 0x557dbac04c48 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x557dbac04e10 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x557dbac04df0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x557dbac04c98 <col:10> 'unsigned char *' lvalue ->_data 0x557dbabfb078
|   |     | `-CXXThisExpr 0x557dbac04c88 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x557dbac04dd8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x557dbac04db8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x557dbac04cd8 <col:18> 'unsigned char *' lvalue ->_tail 0x557dbabfb0e0
|   |         | `-CXXThisExpr 0x557dbac04cc8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x557dbac04da0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x557dbac04d80 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x557dbac04d18 <col:26> 'unsigned char *' lvalue ->_end 0x557dbabfb148
|   |             | `-CXXThisExpr 0x557dbac04d08 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x557dbac04d68 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x557dbac04d48 <col:33> 'int' 0
|   `-BinaryOperator 0x557dbac04ec0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x557dbac04e58 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x557dbabfb208
|     | `-CXXThisExpr 0x557dbac04e48 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x557dbac04ea8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x557dbac04e88 <col:16> 'int' 0
|-CXXMethodDecl 0x557dbabeb3c0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x557dbabeb330 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557dbabeb468 <col:20>
| |-OptimizeNoneAttr 0x557dbabeb4c0 <col:30>
| `-WarnUnusedResultAttr 0x557dbabeb4e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x557dbabeb5b8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x557dbabeb528 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557dbabeb660 <col:20>
| |-OptimizeNoneAttr 0x557dbabeb6b8 <col:30>
| `-WarnUnusedResultAttr 0x557dbabeb6e0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x557dbabeb818 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x557dbabeb720 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557dbabeb8c0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x557dbabeb9c0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x557dbabeb930 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557dbabeba68 <col:20>
| `-OptimizeNoneAttr 0x557dbabebac0 <col:30>
|-CXXMethodDecl 0x557dbabebb88 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x557dbabebaf8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557dbabebc30 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x557dbabebd30 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x557dbabebca0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557dbabebdd8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x557dbabebed8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x557dbabebe48 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557dbabebf80 <col:20>
| `-OptimizeNoneAttr 0x557dbabebfd8 <col:30>
|-CXXMethodDecl 0x557dbabec168 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x557dbabec018 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x557dbabec090 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x557dbac046d8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x557dbabec218 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x557dbabec418 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x557dbabec290 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x557dbabec308 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabec628 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x557dbabec4d8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x557dbabec550 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabec838 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x557dbabec6e8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x557dbabec768 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x557dbac046e8 <col:39> 'int' 0
|-CXXMethodDecl 0x557dbabec908 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x557dbabec9d0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x557dbabeca98 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x557dbabecb58 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabecc20 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x557dbabecd68 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x557dbabeccd8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x557dbabecf38 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x557dbabece28 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x557dbabecea0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabed008 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x557dbabed0c8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x557dbabed168 <col:20>
| `-OptimizeNoneAttr 0x557dbabed1c0 <col:30>
|-CXXMethodDecl 0x557dbabed210 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x557dbabed2b0 <col:20>
| `-OptimizeNoneAttr 0x557dbabed308 <col:30>
|-CXXMethodDecl 0x557dbabed358 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x557dbabed418 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabed4e0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x557dbabed580 <col:20>
| `-OptimizeNoneAttr 0x557dbabed5d8 <col:30>
|-CXXMethodDecl 0x557dbabed728 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x557dbabed618 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x557dbabed690 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabed878 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x557dbabed7e8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabed950 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x557dbabeda10 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x557dbabedab0 <col:20>
| `-OptimizeNoneAttr 0x557dbabedb08 <col:30>
|-CXXMethodDecl 0x557dbabedb58 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x557dbabedbf8 <col:20>
| `-OptimizeNoneAttr 0x557dbabedc50 <col:30>
|-CXXMethodDecl 0x557dbabedca0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x557dbabedd68 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x557dbabede08 <col:20>
| `-OptimizeNoneAttr 0x557dbabede60 <col:30>
|-CXXMethodDecl 0x557dbabedea8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x557dbabedfc8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x557dbabee138 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x557dbabee078 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x557dbabee228 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x557dbabee2c8 <col:20>
| `-OptimizeNoneAttr 0x557dbabee320 <col:30>
|-CXXMethodDecl 0x557dbabee370 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x557dbabee430 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabee668 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x557dbabee4e0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x557dbabee558 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557dbabee718 <col:20>
| `-OptimizeNoneAttr 0x557dbabee770 <col:30>
|-CXXMethodDecl 0x557dbabee818 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x557dbabee8b8 <col:20>
| `-OptimizeNoneAttr 0x557dbabee910 <col:30>
|-CXXMethodDecl 0x557dbabee960 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x557dbabeea00 <col:20>
| `-OptimizeNoneAttr 0x557dbabeea58 <col:30>
|-CXXMethodDecl 0x557dbabeeaa0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x557dbabeeb40 <col:20>
| `-OptimizeNoneAttr 0x557dbabeeb98 <col:30>
|-CXXMethodDecl 0x557dbabeec98 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x557dbabeebd0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x557dbabeed40 <col:20>
| `-OptimizeNoneAttr 0x557dbabeed98 <col:30>
|-CXXMethodDecl 0x557dbabeef58 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x557dbabeedd0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x557dbabeee48 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557dbabef008 <col:20>
| `-OptimizeNoneAttr 0x557dbabef060 <col:30>
|-CXXMethodDecl 0x557dbabef108 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x557dbabef228 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x557dbabef348 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x557dbabef3e8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x557dbabef410 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x557dbabef538 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x557dbabef5d8 <col:20>
| `-OptimizeNoneAttr 0x557dbabef630 <col:30>
|-CXXMethodDecl 0x557dbabef6d8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x557dbabef778 <col:20>
| `-OptimizeNoneAttr 0x557dbabef7d0 <col:30>
|-AccessSpecDecl 0x557dbabef7f8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x557dbabef820 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x557dbabef920 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x557dbabef970 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbabef900 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x557dbabef8e0 <col:14> 'int' 48
|-CXXMethodDecl 0x557dbabef9d8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x557dbabefa78 <col:20>
| `-OptimizeNoneAttr 0x557dbabefad0 <col:30>
|-CXXMethodDecl 0x557dbabefb48 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x557dbabefbe8 <col:20>
| `-OptimizeNoneAttr 0x557dbabefc40 <col:30>
|-CXXMethodDecl 0x557dbabefd08 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x557dbabefc78 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x557dbabefea8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x557dbabf0048 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x557dbabeff58 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x557dbabf00f0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x557dbabf01f0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557dbabf05a0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf01d0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x557dbabf01b0 <col:9> 'int' 0
| |-EnumConstantDecl 0x557dbabf0280 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557dbabf05b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf0260 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x557dbabf0240 <col:14> 'int' 1
| |-EnumConstantDecl 0x557dbabf0310 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557dbabf05d0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf02f0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x557dbabf02d0 <col:14> 'int' 2
| |-EnumConstantDecl 0x557dbabf03a0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557dbabf05e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf0380 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x557dbabf0360 <col:14> 'int' 3
| |-EnumConstantDecl 0x557dbabf0430 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557dbabf0600 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf0410 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x557dbabf03f0 <col:13> 'int' 4
| |-EnumConstantDecl 0x557dbabf04c0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557dbabf0618 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf04a0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x557dbabf0480 <col:13> 'int' 5
| `-EnumConstantDecl 0x557dbabf0550 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x557dbabf0630 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbabf0530 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x557dbabf0510 <col:14> 'int' 6
|-CXXMethodDecl 0x557dbabf0698 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x557dbabf0738 <col:20>
| `-OptimizeNoneAttr 0x557dbabf0790 <col:30>
|-CXXMethodDecl 0x557dbabf0888 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x557dbabf07c8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x557dbabf0930 <col:20>
| `-OptimizeNoneAttr 0x557dbabf0988 <col:30>
|-CXXMethodDecl 0x557dbabf09f8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x557dbabf0b20 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x557dbabf0c98 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x557dbabf0bd0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x557dbabf0d60 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x557dbabf0e28 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x557dbabf0f68 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x557dbabf0ed8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x557dbabf1010 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x557dbabf1110 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x557dbabf1310 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf10f0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x557dbabf10d0 <col:23> 'int' 0
| |-EnumConstantDecl 0x557dbabf11a0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x557dbabf1328 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf1180 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x557dbabf1160 <col:45> 'int' 4
| |-EnumConstantDecl 0x557dbabf1230 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x557dbabf1340 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf1210 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x557dbabf11f0 <col:24> 'int' 0
| `-EnumConstantDecl 0x557dbabf12c0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x557dbabf1358 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbabf12a0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x557dbabf1280 <col:47> 'int' 16
|-CXXMethodDecl 0x557dbabf13b8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x557dbabf1528 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x557dbabf1468 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x557dbabf15d0 <col:20>
| `-OptimizeNoneAttr 0x557dbabf1628 <col:30>
|-CXXMethodDecl 0x557dbabf1678 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x557dbac05000 <col:18, col:36>
|   `-ReturnStmt 0x557dbac04ff0 <col:20, col:33>
|     `-ImplicitCastExpr 0x557dbac04fd8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x557dbac04fb8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x557dbac04f88 <col:27> '<bound member function type>' ->xanno 0x557dbabef6d8
|           `-CXXThisExpr 0x557dbac04f78 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x557dbabf1770 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x557dbac05110 <col:30, col:48>
|   `-ReturnStmt 0x557dbac05100 <col:32, col:45>
|     `-ImplicitCastExpr 0x557dbac050e8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x557dbac050c8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x557dbac05098 <col:39> '<bound member function type>' ->xanno 0x557dbabef538
|           `-CXXThisExpr 0x557dbac05088 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x557dbabf1858 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x557dbac052a8 <col:24, col:50>
|   `-ReturnStmt 0x557dbac05298 <col:26, col:47>
|     `-UnaryOperator 0x557dbac05280 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x557dbac05260 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x557dbac05248 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557dbac051f8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x557dbabfa518
|         |   `-CXXMemberCallExpr 0x557dbac051d8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x557dbac051a8 <col:34> '<bound member function type>' ->xanno 0x557dbabef6d8
|         |       `-CXXThisExpr 0x557dbac05198 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x557dbac05228 <col:46> 'int' 0
|-CXXMethodDecl 0x557dbabf1960 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x557dbac05478 <col:36, col:62>
|   `-ReturnStmt 0x557dbac05468 <col:38, col:59>
|     `-UnaryOperator 0x557dbac05450 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x557dbac05430 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x557dbac05418 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557dbac05390 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x557dbabfa518
|         |   `-CXXMemberCallExpr 0x557dbac05370 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x557dbac05340 <col:46> '<bound member function type>' ->xanno 0x557dbabef538
|         |       `-CXXThisExpr 0x557dbac05330 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x557dbac053c0 <col:58> 'int' 0
|-CXXMethodDecl 0x557dbabf1a78 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x557dbac05610 <col:26, col:53>
|   `-ReturnStmt 0x557dbac05600 <col:28, col:50>
|     `-UnaryOperator 0x557dbac055e8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x557dbac055c8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x557dbac055b0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557dbac05560 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x557dbabfa818
|         |   `-CXXMemberCallExpr 0x557dbac05540 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x557dbac05510 <col:36> '<bound member function type>' ->xanno 0x557dbabef6d8
|         |       `-CXXThisExpr 0x557dbac05500 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x557dbac05590 <col:49> 'int' 0
|-CXXMethodDecl 0x557dbabf1b98 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x557dbac057e8 <col:38, col:65>
|   `-ReturnStmt 0x557dbac057d8 <col:40, col:62>
|     `-UnaryOperator 0x557dbac057c0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x557dbac057a0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x557dbac05788 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557dbac056f8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x557dbabfa818
|         |   `-CXXMemberCallExpr 0x557dbac056d8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x557dbac056a8 <col:48> '<bound member function type>' ->xanno 0x557dbabef538
|         |       `-CXXThisExpr 0x557dbac05698 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x557dbac05728 <col:61> 'int' 0
|-CXXMethodDecl 0x557dbabf1d48 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x557dbabf1c50 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x557dbac05eb8 <col:34, line:463:5>
|   |-ParenExpr 0x557dbac05d00 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x557dbac05cd0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac05938 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac05908 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac05858 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac05840 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac05800 <col:23> 'int' lvalue ParmVar 0x557dbabf1c50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac05820 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac058e8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac058b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac05878 <col:33> 'int' lvalue ParmVar 0x557dbabf1c50 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x557dbac058d0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x557dbac05898 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x557dbac05998 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac05978 <col:56> 'int' 0
|   |   `-CallExpr 0x557dbac05c30 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x557dbac05c18 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac05bf8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac05c70 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac05a88 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x557dbac05c88 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac05ab8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac05ca0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac05af0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x557dbac05cb8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac05be0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac05bc8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac05b88 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x557dbac05ea8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x557dbac05e90 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x557dbac05e70 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x557dbac05e40 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557dbac05df0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x557dbabfa518
|         |   `-CXXMemberCallExpr 0x557dbac05dd0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x557dbac05da0 <col:9> '<bound member function type>' ->xanno 0x557dbabef538
|         |       `-CXXThisExpr 0x557dbac05d90 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x557dbac05e58 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x557dbac05e20 <col:21> 'int' lvalue ParmVar 0x557dbabf1c50 'i' 'int'
|-CXXMethodDecl 0x557dbabf1f98 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x557dbabf1e08 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x557dbabf1e80 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x557dbac06548 <col:40, line:472:5>
|   |-ParenExpr 0x557dbac06360 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x557dbac06330 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac06010 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac05fe0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac05f30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac05f18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac05ed8 <col:23> 'int' lvalue ParmVar 0x557dbabf1e08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac05ef8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac05fc0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac05f90 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac05f50 <col:33> 'int' lvalue ParmVar 0x557dbabf1e08 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x557dbac05fa8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x557dbac05f70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x557dbac06070 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac06050 <col:56> 'int' 0
|   |   `-CallExpr 0x557dbac06290 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x557dbac06278 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac06258 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac062d0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac060e0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x557dbac062e8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac06110 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac06300 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac06148 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x557dbac06318 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac06240 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac06228 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac061e8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x557dbac06528 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x557dbac064d0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x557dbac064a0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x557dbac06450 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x557dbabfa518
|     | |   `-CXXMemberCallExpr 0x557dbac06430 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x557dbac06400 <col:2> '<bound member function type>' ->xanno 0x557dbabef6d8
|     | |       `-CXXThisExpr 0x557dbac063f0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x557dbac064b8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x557dbac06480 <col:14> 'int' lvalue ParmVar 0x557dbabf1e08 'i' 'int'
|     `-ImplicitCastExpr 0x557dbac06510 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x557dbac064f0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x557dbabf1e80 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x557dbabf2158 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x557dbabf2060 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x557dbac06cc8 <col:36, line:485:5>
|   |-ParenExpr 0x557dbac06a30 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac06a00 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac066e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac066b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac065c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac065a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac06568 <col:23> 'int' lvalue ParmVar 0x557dbabf2060 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac06588 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac06690 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac06678 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac065e0 <col:33> 'int' lvalue ParmVar 0x557dbabf2060 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac06658 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac06640 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac06600 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac06620 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x557dbac06740 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac06720 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac06960 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac06948 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac06928 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac069a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac067b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x557dbac069b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac067e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac069d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac06820 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x557dbac069e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac06910 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac068f8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac068b8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x557dbac06cb8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x557dbac06ca0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x557dbac06c88 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557dbac06c58 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x557dbac06bf8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x557dbac06bc8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557dbac06b40 <col:61, col:70> 'char const[48]' lvalue ->c 0x557dbabfa3f0
|             |   `-CXXMemberCallExpr 0x557dbac06b20 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557dbac06af0 <col:61> '<bound member function type>' ->xanno 0x557dbabef538
|             |       `-CXXThisExpr 0x557dbac06ae0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557dbac06be0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557dbac06b70 <col:74> 'int' lvalue ParmVar 0x557dbabf2060 'i' 'int'
|-CXXMethodDecl 0x557dbabf23a8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x557dbabf2218 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557dbabf2290 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x557dbac07418 <col:42, line:500:5>
|   |-ParenExpr 0x557dbac071b0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac07180 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac06e60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac06e30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac06d40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac06d28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac06ce8 <col:23> 'int' lvalue ParmVar 0x557dbabf2218 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac06d08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac06e10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac06df8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac06d60 <col:33> 'int' lvalue ParmVar 0x557dbabf2218 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac06dd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac06dc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac06d80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac06da0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x557dbac06ec0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac06ea0 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac070e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac070c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac070a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac07120 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac06f30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x557dbac07138 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac06f68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac07150 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac06fa0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x557dbac07168 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac07090 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac07078 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac07038 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x557dbac073f8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x557dbac073a8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557dbac07378 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x557dbac07320 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557dbac072f0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557dbac072a0 <col:48, col:57> 'char [48]' lvalue ->c 0x557dbabfa3f0
|     |     |   `-CXXMemberCallExpr 0x557dbac07280 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557dbac07250 <col:48> '<bound member function type>' ->xanno 0x557dbabef6d8
|     |     |       `-CXXThisExpr 0x557dbac07240 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557dbac07308 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557dbac072d0 <col:61> 'int' lvalue ParmVar 0x557dbabf2218 'i' 'int'
|     `-ImplicitCastExpr 0x557dbac073e0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x557dbac073c0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x557dbabf2290 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x557dbabf2568 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x557dbabf2470 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x557dbac07b78 <col:35, line:513:5>
|   |-ParenExpr 0x557dbac07888 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac07858 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac075b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac07580 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac07490 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac07478 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac07438 <col:23> 'int' lvalue ParmVar 0x557dbabf2470 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac07458 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac07560 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac07548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac074b0 <col:33> 'int' lvalue ParmVar 0x557dbabf2470 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac07528 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac07510 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac074d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac074f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x557dbac07610 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac075f0 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac077b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac077a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac07780 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac077f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac07680 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x557dbac07810 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac076b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac07828 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac076f0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x557dbac07840 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac07768 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac07750 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac07710 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x557dbac07b68 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x557dbac07b50 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x557dbac07b38 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557dbac07b08 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x557dbac07a80 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x557dbac07a50 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557dbac07a00 <col:60, col:69> 'char const[48]' lvalue ->c 0x557dbabfa3f0
|             |   `-CXXMemberCallExpr 0x557dbac079e0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557dbac079b0 <col:60> '<bound member function type>' ->xanno 0x557dbabef538
|             |       `-CXXThisExpr 0x557dbac079a0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557dbac07a68 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557dbac07a30 <col:73> 'int' lvalue ParmVar 0x557dbabf2470 'i' 'int'
|-CXXMethodDecl 0x557dbabf27b8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x557dbabf2628 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557dbabf26a0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x557dbac08298 <col:41, line:528:5>
|   |-ParenExpr 0x557dbac08020 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac07ff0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac07d10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac07ce0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac07bf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac07bd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac07b98 <col:23> 'int' lvalue ParmVar 0x557dbabf2628 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac07bb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac07cc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac07ca8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac07c10 <col:33> 'int' lvalue ParmVar 0x557dbabf2628 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac07c88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac07c70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac07c30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac07c50 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x557dbac07d70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac07d50 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac07f50 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac07f38 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac07f18 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac07f90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac07de0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x557dbac07fa8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac07e18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac07fc0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac07e50 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x557dbac07fd8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac07f00 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac07ee8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac07ea8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x557dbac08278 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x557dbac08228 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557dbac081f8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x557dbac081a0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557dbac08160 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557dbac08110 <col:47, col:56> 'char [48]' lvalue ->c 0x557dbabfa3f0
|     |     |   `-CXXMemberCallExpr 0x557dbac080f0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557dbac080c0 <col:47> '<bound member function type>' ->xanno 0x557dbabef6d8
|     |     |       `-CXXThisExpr 0x557dbac080b0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557dbac08178 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557dbac08140 <col:60> 'int' lvalue ParmVar 0x557dbabf2628 'i' 'int'
|     `-ImplicitCastExpr 0x557dbac08260 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x557dbac08240 <col:65> 'int16_t':'short' lvalue ParmVar 0x557dbabf26a0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x557dbabf2978 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x557dbabf2880 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x557dbac08968 <col:36, line:541:5>
|   |-ParenExpr 0x557dbac08708 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac086d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac08430 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac08400 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac08310 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac082f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac082b8 <col:23> 'int' lvalue ParmVar 0x557dbabf2880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac082d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac083e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac083c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac08330 <col:33> 'int' lvalue ParmVar 0x557dbabf2880 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac083a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac08390 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac08350 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac08370 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x557dbac08490 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac08470 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac08638 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac08620 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac08600 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac08678 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac08500 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x557dbac08690 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac08538 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac086a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac08570 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x557dbac086c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac085e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac085d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac08590 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x557dbac08958 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x557dbac08940 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x557dbac08928 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557dbac088f8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x557dbac088a0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x557dbac08870 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557dbac08820 <col:61, col:70> 'char const[48]' lvalue ->c 0x557dbabfa3f0
|             |   `-CXXMemberCallExpr 0x557dbac08800 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557dbac087d0 <col:61> '<bound member function type>' ->xanno 0x557dbabef538
|             |       `-CXXThisExpr 0x557dbac087c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557dbac08888 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557dbac08850 <col:74> 'int' lvalue ParmVar 0x557dbabf2880 'i' 'int'
|-CXXMethodDecl 0x557dbabf2b48 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x557dbabf2a38 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x557dbabf2ab0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557dbabf2bf8 <col:20>
| `-OptimizeNoneAttr 0x557dbabf2c50 <col:30>
|-CXXMethodDecl 0x557dbabf2d88 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x557dbabf2c90 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x557dbac09038 <col:35, line:562:5>
|   |-ParenExpr 0x557dbac08dd8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac08da8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac08b00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac08ad0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac089e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac089c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac08988 <col:23> 'int' lvalue ParmVar 0x557dbabf2c90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac089a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac08ab0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac08a98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac08a00 <col:33> 'int' lvalue ParmVar 0x557dbabf2c90 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac08a78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac08a60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac08a20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac08a40 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x557dbac08b60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac08b40 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac08d08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac08cf0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac08cd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac08d48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac08bd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x557dbac08d60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac08c08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac08d78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac08c40 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x557dbac08d90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac08cb8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac08ca0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac08c60 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x557dbac09028 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x557dbac09010 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x557dbac08ff8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557dbac08fc8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x557dbac08f70 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x557dbac08f40 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557dbac08ef0 <col:60, col:69> 'char const[48]' lvalue ->c 0x557dbabfa3f0
|             |   `-CXXMemberCallExpr 0x557dbac08ed0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557dbac08ea0 <col:60> '<bound member function type>' ->xanno 0x557dbabef538
|             |       `-CXXThisExpr 0x557dbac08e90 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557dbac08f58 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557dbac08f20 <col:73> 'int' lvalue ParmVar 0x557dbabf2c90 'i' 'int'
|-CXXMethodDecl 0x557dbabf2f98 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x557dbabf2e48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557dbabf2ec0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x557dbac09718 <col:41, line:577:5>
|   |-ParenExpr 0x557dbac094a8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac09478 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac091d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac091a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac090b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac09098 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac09058 <col:23> 'int' lvalue ParmVar 0x557dbabf2e48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac09078 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac09180 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac09168 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac090d0 <col:33> 'int' lvalue ParmVar 0x557dbabf2e48 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac09148 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac09130 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac090f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac09110 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x557dbac09230 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac09210 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac093d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac093c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac093a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac09418 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac092a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x557dbac09430 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac092d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac09448 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac09310 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x557dbac09460 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac09388 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac09370 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac09330 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x557dbac096f8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x557dbac096a8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557dbac09678 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x557dbac09618 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557dbac095e8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557dbac09598 <col:47, col:56> 'char [48]' lvalue ->c 0x557dbabfa3f0
|     |     |   `-CXXMemberCallExpr 0x557dbac09578 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557dbac09548 <col:47> '<bound member function type>' ->xanno 0x557dbabef6d8
|     |     |       `-CXXThisExpr 0x557dbac09538 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557dbac09600 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557dbac095c8 <col:60> 'int' lvalue ParmVar 0x557dbabf2e48 'i' 'int'
|     `-ImplicitCastExpr 0x557dbac096e0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x557dbac096c0 <col:65> 'int32_t':'int' lvalue ParmVar 0x557dbabf2ec0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x557dbabf3158 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x557dbabf3060 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x557dbac09e48 <col:36, line:591:5>
|   |-ParenExpr 0x557dbac09b88 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac09b58 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac098b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac09880 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac09790 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac09778 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac09738 <col:23> 'int' lvalue ParmVar 0x557dbabf3060 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac09758 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac09860 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac09848 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac097b0 <col:33> 'int' lvalue ParmVar 0x557dbabf3060 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac09828 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac09810 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac097d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac097f0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x557dbac09910 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac098f0 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac09ab8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac09aa0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac09a80 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac09af8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac09980 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x557dbac09b10 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac099b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac09b28 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac099f0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x557dbac09b40 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac09a68 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac09a50 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac09a10 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x557dbac09e38 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x557dbac09e20 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x557dbac09e08 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557dbac09dd8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x557dbac09d50 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x557dbac09d20 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557dbac09cd0 <col:61, col:70> 'char const[48]' lvalue ->c 0x557dbabfa3f0
|             |   `-CXXMemberCallExpr 0x557dbac09cb0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557dbac09c80 <col:61> '<bound member function type>' ->xanno 0x557dbabef538
|             |       `-CXXThisExpr 0x557dbac09c70 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557dbac09d38 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557dbac09d00 <col:74> 'int' lvalue ParmVar 0x557dbabf3060 'i' 'int'
|-CXXMethodDecl 0x557dbabf33a8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x557dbabf3218 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557dbabf3290 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x557dbac0a528 <col:42, line:606:5>
|   |-ParenExpr 0x557dbac0a2b8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x557dbac0a288 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac09fe0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac09fb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac09ec0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac09ea8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac09e68 <col:23> 'int' lvalue ParmVar 0x557dbabf3218 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac09e88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac09f90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557dbac09f78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac09ee0 <col:33> 'int' lvalue ParmVar 0x557dbabf3218 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac09f58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac09f40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac09f00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557dbac09f20 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x557dbac0a040 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac0a020 <col:60> 'int' 0
|   |   `-CallExpr 0x557dbac0a1e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557dbac0a1d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac0a1b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac0a228 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac0a0b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x557dbac0a240 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac0a0e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac0a258 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac0a120 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x557dbac0a270 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac0a198 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac0a180 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac0a140 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x557dbac0a508 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x557dbac0a4b8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557dbac0a488 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x557dbac0a428 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557dbac0a3f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557dbac0a3a8 <col:48, col:57> 'char [48]' lvalue ->c 0x557dbabfa3f0
|     |     |   `-CXXMemberCallExpr 0x557dbac0a388 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557dbac0a358 <col:48> '<bound member function type>' ->xanno 0x557dbabef6d8
|     |     |       `-CXXThisExpr 0x557dbac0a348 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557dbac0a410 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557dbac0a3d8 <col:61> 'int' lvalue ParmVar 0x557dbabf3218 'i' 'int'
|     `-ImplicitCastExpr 0x557dbac0a4f0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x557dbac0a4d0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x557dbabf3290 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x557dbabf3540 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x557dbabf3470 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x557dbac0ad98 <col:33, line:620:5>
|   |-ParenExpr 0x557dbac0ab10 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x557dbac0aae0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac0a730 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac0a700 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac0a5a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac0a588 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac0a548 <col:23> 'int' lvalue ParmVar 0x557dbabf3470 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac0a568 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac0a6e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x557dbac0a6c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac0a5c0 <col:33> 'int' lvalue ParmVar 0x557dbabf3470 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac0a6a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac0a690 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac0a5e0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x557dbac0a668 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x557dbac0a650 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x557dbac0a618 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x557dbac0a790 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac0a770 <col:79> 'int' 0
|   |   `-CallExpr 0x557dbac0aa40 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x557dbac0aa28 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac0aa08 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac0aa80 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac0a878 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x557dbac0aa98 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac0a8c0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac0aab0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac0a8f8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x557dbac0aac8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac0a9f0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac0a9d8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac0a998 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x557dbac0ad88 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x557dbac0ad70 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x557dbac0ad58 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557dbac0ad28 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x557dbac0aca0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x557dbac0ac70 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557dbac0ac20 <col:67, col:76> 'char const[48]' lvalue ->c 0x557dbabfa3f0
|             |   `-CXXMemberCallExpr 0x557dbac0ac00 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557dbac0abd0 <col:67> '<bound member function type>' ->xanno 0x557dbabef538
|             |       `-CXXThisExpr 0x557dbac0abc0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557dbac0ac88 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557dbac0ac50 <col:80> 'int' lvalue ParmVar 0x557dbabf3470 'i' 'int'
|-CXXMethodDecl 0x557dbabf3758 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x557dbabf3600 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557dbabf3680 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x557dbac0b5c0 <col:45, line:635:5>
|   |-ParenExpr 0x557dbac0b308 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x557dbac0b2d8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x557dbac0afa0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557dbac0af70 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557dbac0ae10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557dbac0adf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557dbac0adb8 <col:23> 'int' lvalue ParmVar 0x557dbabf3600 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557dbac0add8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557dbac0af50 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x557dbac0af38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557dbac0ae30 <col:33> 'int' lvalue ParmVar 0x557dbabf3600 'i' 'int'
|   |   |     `-BinaryOperator 0x557dbac0af18 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557dbac0af00 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557dbac0ae50 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557dbabef920 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x557dbac0aed8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x557dbac0aec0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x557dbac0ae88 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x557dbac0b000 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557dbac0afe0 <col:79> 'int' 0
|   |   `-CallExpr 0x557dbac0b238 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x557dbac0b220 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbac0b200 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557dbac0b278 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac0b070 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x557dbac0b290 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557dbac0b0b8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557dbac0b2a8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557dbac0b0f0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x557dbac0b2c0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557dbac0b1e8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557dbac0b1d0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557dbac0b188 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x557dbac0b5a0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x557dbac0b508 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557dbac0b4d8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x557dbac0b478 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557dbac0b448 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557dbac0b3f8 <col:54, col:63> 'char [48]' lvalue ->c 0x557dbabfa3f0
|     |     |   `-CXXMemberCallExpr 0x557dbac0b3d8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557dbac0b3a8 <col:54> '<bound member function type>' ->xanno 0x557dbabef6d8
|     |     |       `-CXXThisExpr 0x557dbac0b398 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557dbac0b460 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557dbac0b428 <col:67> 'int' lvalue ParmVar 0x557dbabf3600 'i' 'int'
|     `-CXXConstCastExpr 0x557dbac0b570 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x557dbac0b558 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x557dbac0b520 <col:91> 'const void *' lvalue ParmVar 0x557dbabf3680 'x' 'const void *'
|-CXXMethodDecl 0x557dbabf3828 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x557dbac0b648 <col:34, line:640:5>
|   `-ReturnStmt 0x557dbac0b638 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x557dbac0b620 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x557dbac0b5f0 <col:16> 'Packet *' lvalue ->_data_packet 0x557dbabfafa8
|         `-CXXThisExpr 0x557dbac0b5e0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x557dbabf3968 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x557dbabf38d8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557dbac04708 <col:46> 'bool' true
|-CXXMethodDecl 0x557dbabf3ae8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x557dbabf3a20 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x557dbabf3b90 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x557dbabf4340 <line:660:22> "" ""
| |-EnumConstantDecl 0x557dbabf3c90 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf43b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf3c70 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x557dbabf3c50 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x557dbabe8df0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x557dbabf3d20 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf43c8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf3d00 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x557dbabf3ce0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x557dbabe8e80 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x557dbabf3db0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf43e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf3d90 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x557dbabf3d70 <col:21> 'int' 0
| |-EnumConstantDecl 0x557dbabf3e40 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf43f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf3e20 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x557dbabf3e00 <col:19> 'int' 16
| |-EnumConstantDecl 0x557dbabf3ed0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf4410 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf3eb0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x557dbabf3e90 <col:21> 'int' 16
| |-EnumConstantDecl 0x557dbabf3f60 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf4428 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf3f40 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x557dbabf3f20 <col:19> 'int' 32
| |-EnumConstantDecl 0x557dbabf3ff0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf4440 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf3fd0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x557dbabf3fb0 <col:19> 'int' EnumConstant 0x557dbabf3e40 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x557dbabf4080 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf4458 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf4060 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x557dbabf4040 <col:19> 'int' EnumConstant 0x557dbabf3f60 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x557dbabf4150 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf4470 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf4130 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x557dbabf4110 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x557dbabf40d0 <col:23> 'int' EnumConstant 0x557dbabf4080 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x557dbabf40f0 <col:40> 'int' 2
| |-EnumConstantDecl 0x557dbabf4220 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557dbabf4488 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabf4200 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x557dbabf41e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x557dbabf41a0 <col:23> 'int' EnumConstant 0x557dbabf4080 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x557dbabf41c0 <col:40> 'int' 4
| `-EnumConstantDecl 0x557dbabf42f0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x557dbabf44a0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbabf42d0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x557dbabf42b0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x557dbabf4270 <col:23> 'int' EnumConstant 0x557dbabf4080 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x557dbabf4290 <col:40> 'int' 8
|-CXXMethodDecl 0x557dbabf44e0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x557dbabf4580 <col:68> "" ""
|-CXXMethodDecl 0x557dbabf4618 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x557dbabf46b8 <col:45> "" ""
|-CXXMethodDecl 0x557dbabf4750 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x557dbabf47f0 <col:57> "" ""
|-CXXMethodDecl 0x557dbabf4888 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x557dbabf4928 <col:45> "" ""
|-CXXMethodDecl 0x557dbabf49c0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x557dbabf4a60 <col:57> "" ""
|-CXXMethodDecl 0x557dbabf4af0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x557dbabf4b90 <col:51> "" ""
|-CXXMethodDecl 0x557dbabf4c20 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x557dbabf4cc0 <col:63> "" ""
|-CXXMethodDecl 0x557dbabf4d50 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x557dbabf4df0 <col:53> "" ""
|-CXXMethodDecl 0x557dbabf4e80 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x557dbabf4f20 <col:65> "" ""
|-CXXMethodDecl 0x557dbabf5038 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x557dbabf4fa8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x557dbabf50e0 <col:61> "" ""
|-CXXMethodDecl 0x557dbabf5278 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x557dbabf5168 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x557dbabf51e0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x557dbabf5328 <col:67> "" ""
|-CXXMethodDecl 0x557dbabf5440 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x557dbabf53b0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x557dbabf54e8 <col:63> "" ""
|-CXXMethodDecl 0x557dbabf5680 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x557dbabf5570 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x557dbabf55e8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x557dbabf5730 <col:69> "" ""
|-CXXMethodDecl 0x557dbabf5848 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x557dbabf57b8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x557dbabf58f0 <col:63> "" ""
|-CXXMethodDecl 0x557dbabf7fc8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x557dbabf7eb8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x557dbabf7f30 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557dbabf8078 <col:69> "" ""
|-CXXMethodDecl 0x557dbabf8190 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x557dbabf8100 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x557dbabf8238 <col:62> "" ""
|-CXXMethodDecl 0x557dbabf83d0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x557dbabf82c0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x557dbabf8338 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x557dbabf8480 <col:68> "" ""
|-CXXMethodDecl 0x557dbabf8598 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x557dbabf8508 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x557dbabf8640 <col:63> "" ""
|-CXXMethodDecl 0x557dbabf87d8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x557dbabf86c8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x557dbabf8740 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x557dbabf8888 <col:69> "" ""
|-CXXMethodDecl 0x557dbabf8918 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x557dbabf89b8 <col:64> "" ""
|-CXXMethodDecl 0x557dbabf8a48 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x557dbabf8ae8 <col:52> "" ""
|-CXXMethodDecl 0x557dbabf8b78 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x557dbabf8c18 <col:67> "" ""
|-CXXMethodDecl 0x557dbabf8ca8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x557dbabf8d48 <col:55> "" ""
|-CXXMethodDecl 0x557dbabf8e60 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x557dbabf8dd0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x557dbabf8f08 <col:58> "" ""
|-CXXMethodDecl 0x557dbabf90a0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x557dbabf8f90 <col:33> col:36 'int'
| |-ParmVarDecl 0x557dbabf9008 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x557dbabf9150 <col:62> "" ""
|-CXXMethodDecl 0x557dbabf9268 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x557dbabf91d8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x557dbabf9310 <col:58> "" ""
|-CXXMethodDecl 0x557dbabf94a8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x557dbabf9398 <col:33> col:36 'int'
| |-ParmVarDecl 0x557dbabf9410 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x557dbabf9558 <col:62> "" ""
|-CXXMethodDecl 0x557dbabf9670 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x557dbabf95e0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x557dbabf9718 <col:60> "" ""
|-CXXMethodDecl 0x557dbabf98b0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x557dbabf97a0 <col:34> col:37 'int'
| |-ParmVarDecl 0x557dbabf9818 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x557dbabf9960 <col:64> "" ""
|-CXXMethodDecl 0x557dbabf9a78 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x557dbabf99e8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x557dbabf9b20 <col:58> "" ""
|-CXXMethodDecl 0x557dbabf9cb8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x557dbabf9ba8 <col:33> col:36 'int'
| |-ParmVarDecl 0x557dbabf9c20 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x557dbabf9d68 <col:62> "" ""
|-CXXMethodDecl 0x557dbabf9e80 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x557dbabf9df0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x557dbabf9f28 <col:59> "" ""
|-CXXMethodDecl 0x557dbabfa0c0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x557dbabf9fb0 <col:33> col:36 'int'
| |-ParmVarDecl 0x557dbabfa028 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557dbabfa170 <col:63> "" ""
|-AccessSpecDecl 0x557dbabfa1e0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x557dbabfa208 prev 0x557dbabef410 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557dbabfa300 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x557dbabfa3f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x557dbabfa518 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x557dbabfa698 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x557dbabfa818 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x557dbabfa998 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x557dbac0b7c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x557dbac0c038 <col:11>
| |-CXXDestructorDecl 0x557dbac0b8a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x557dbac0b9d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x557dbac0b9d8
| | `-ParmVarDecl 0x557dbac0bae8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x557dbac0bb88 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x557dbac0bb88
| | `-ParmVarDecl 0x557dbac0bc98 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x557dbac0ea58 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557dbac0eb68 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x557dbac0ede8 <col:11>
| |   `-ReturnStmt 0x557dbac0edd8 <col:11>
| |     `-UnaryOperator 0x557dbac0edc0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x557dbac0edb0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x557dbac0ebd8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x557dbac0ebd8
|   `-ParmVarDecl 0x557dbac0ece8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x557dbabfaa00 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557dbabfab18 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x557dbabfabb8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x557dbabfac20 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x557dbabfac88 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x557dbabfacf0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x557dbabfad50 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x557dbabfae10 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x557dbabfae70 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x557dbabfaed0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x557dbac0b6d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x557dbabfabb8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x557dbac0c048 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x557dbac0c0a0 <col:12>
| |-CXXConstructorDecl 0x557dbac0bd08 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x557dbac0bd08
| | `-ParmVarDecl 0x557dbac0be18 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x557dbac0beb8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x557dbac0beb8
| | `-ParmVarDecl 0x557dbac0bfc8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x557dbac0e140 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x557dbabfaf48 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x557dbabfafa8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x557dbabfb010 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x557dbabfb078 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x557dbabfb0e0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x557dbabfb148 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x557dbabfb1a8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x557dbabfb208 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x557dbabfb270 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x557dbabfb2f8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x557dbabfaf48 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x557dbac0b670 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x557dbabfb1a8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x557dbac0c0b0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x557dbac0c110 <col:21, line:755:5>
|-CXXConstructorDecl 0x557dbabfb498 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x557dbabfb3d8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x557dbabfb590 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x557dbabfb778 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x557dbabfb680 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x557dbabfba48 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x557dbabfb830 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557dbabfb8a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x557dbabfb920 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabfbc68 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x557dbabfbb18 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x557dbabfbb90 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x557dbac04248 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x557dbabfbd28 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x557dbabfbda0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x557dbabfbe18 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x557dbac043a0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x557dbac04310 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbac044e8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x557dbac04458 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x557dbac045e0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbabba4a0 prev 0x557dbabb12e0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dbabba598 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x557dbabba638 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x557dbabc1400 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557dbabc17e8 <col:11>
|-CXXConstructorDecl 0x557dbabc14e0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x557dbabc15c8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x557dbabc1f30 <col:11>
|-CXXConstructorDecl 0x557dbabc1668 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x557dbabc1778 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x557dbabc3788 <col:11>
|-CXXDestructorDecl 0x557dbabc2a98 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x557dba8c9648 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x557dba8c9758 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x557dba8ca020 <col:11>
|   `-ReturnStmt 0x557dba8ca010 <col:11>
|     `-UnaryOperator 0x557dba8c9ff8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x557dba8c9fe8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x557dba8c97c8 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x557dba8c97c8
  `-ParmVarDecl 0x557dba8c98d8 <col:11> col:11 'Timestamp::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dbabb0498 prev 0x557dbabb01a8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dbabb0590 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x557dbabb0620 <col:19, col:25> col:19 public
|-TypedefDecl 0x557dbabb0658 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x557dba815820 'int32_t' sugar
|   |-Typedef 0x557dba72b238 'int32_t'
|   `-TypedefType 0x557dba7043f0 '__int32_t' sugar
|     |-Typedef 0x557dba704008 '__int32_t'
|     `-BuiltinType 0x557dba6c23b0 'int'
|-TypedefDecl 0x557dbabb06c0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x557dba8159e0 'int64_t' sugar
|   |-Typedef 0x557dba72b2a0 'int64_t'
|   `-TypedefType 0x557dba704510 '__int64_t' sugar
|     |-Typedef 0x557dba7040e8 '__int64_t'
|     `-BuiltinType 0x557dba6c23d0 'long'
|-EnumDecl 0x557dbabb0718 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x557dbabb0890 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x557dbabb0870 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x557dbabb0848 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x557dbabb0830 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x557dbabb0800 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x557dbabb0988 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x557dbabb0968 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x557dbabb0940 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x557dbabb0928 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x557dbabb0900 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x557dbabb08e0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x557dbabb09d8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x557dbabb0ae0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557dbabb1030 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabb0ac0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x557dbabb0aa0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x557dbabb0b70 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557dbabb1048 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabb0b50 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x557dbabb0b30 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x557dbabb0c00 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557dbabb1060 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabb0be0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x557dbabb0bc0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x557dbabb0c90 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557dbabb1078 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabb0c70 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x557dbabb0c50 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x557dbabb0d20 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557dbabb1090 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabb0d00 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x557dbabb0ce0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x557dbabb0db0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557dbabb10a8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabb0d90 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x557dbabb0d70 <col:24> 'int' 1000
| |-EnumConstantDecl 0x557dbabb0e40 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557dbabb10c0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabb0e20 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x557dbabb0e00 <col:26> 'int' EnumConstant 0x557dbabb0ae0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x557dbabb0f10 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557dbabb10d8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabb0ef0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x557dbabb0ed0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x557dbabb0e90 <col:27> 'int' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x557dbabb0eb0 <col:44> 'int' EnumConstant 0x557dbabb0db0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x557dbabb0fe0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x557dbabb10f0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbabb0fc0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x557dbabb0fa0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x557dbabb0f60 <col:27> 'int' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x557dbabb0f80 <col:44> 'int' EnumConstant 0x557dbabb0c90 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x557dbabb1108 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x557dbabb1210 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x557dbabb1260 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbabb11f0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x557dbabb11d0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x557dbabb1288 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x557dba815450 'uninitialized_type'
|   `-CXXRecord 0x557dba8153b8 'uninitialized_type'
|-CXXRecordDecl 0x557dbabb12e0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x557dbabb13f0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc17f8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557dbabc1918 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x557dbabc18d0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x557dbabc1860 <col:9> '<bound member function type>' ->assign 0x557dbabb6038
|     | `-CXXThisExpr 0x557dbabc1850 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x557dbabc1890 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x557dbabc1900 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x557dbabc18b0 <col:19> 'int' 0
|-CXXConstructorDecl 0x557dbabb1638 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb14b0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x557dbabb1528 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557dbabbd130 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557dbabbd110 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc1930 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557dbabc1a80 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x557dbabc1a08 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x557dbabc1998 <col:9> '<bound member function type>' ->assign 0x557dbabb6038
|     | `-CXXThisExpr 0x557dbabc1988 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557dbabc1a50 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x557dbabc1a38 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x557dbabc19c8 <col:16> 'long' lvalue ParmVar 0x557dbabb14b0 'sec' 'long'
|     `-ImplicitCastExpr 0x557dbabc1a68 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557dbabc19e8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb1528 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557dbabb1898 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb1708 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x557dbabb1780 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557dbabbd168 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557dbabbd148 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc1a98 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557dbabc1bd0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x557dbabc1b70 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x557dbabc1b00 <col:9> '<bound member function type>' ->assign 0x557dbabb6038
|     | `-CXXThisExpr 0x557dbabc1af0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557dbabc1ba0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x557dbabc1b30 <col:16> 'int' lvalue ParmVar 0x557dbabb1708 'sec' 'int'
|     `-ImplicitCastExpr 0x557dbabc1bb8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557dbabc1b50 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb1780 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557dbabb1af8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb1968 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x557dbabb19e0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557dbabbd1a0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557dbabbd180 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc1be8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557dbabc1d38 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x557dbabc1cc0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x557dbabc1c50 <col:9> '<bound member function type>' ->assign 0x557dbabb6038
|     | `-CXXThisExpr 0x557dbabc1c40 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557dbabc1d08 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x557dbabc1cf0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x557dbabc1c80 <col:16> 'unsigned long' lvalue ParmVar 0x557dbabb1968 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x557dbabc1d20 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557dbabc1ca0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb19e0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557dbabb2c90 <line:199:5, line:201:5> line:199:21 Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb1bc8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x557dbabb1c40 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557dbabbd1d8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557dbabbd1b8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc1d50 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557dbabc1ea0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x557dbabc1e28 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x557dbabc1db8 <col:9> '<bound member function type>' ->assign 0x557dbabb6038
|     | `-CXXThisExpr 0x557dbabc1da8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557dbabc1e70 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x557dbabc1e58 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x557dbabc1de8 <col:16> 'unsigned int' lvalue ParmVar 0x557dbabb1bc8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x557dbabc1e88 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557dbabc1e08 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb1c40 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557dbabb2df0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x557dbabb2d60 <col:31> col:37 'double'
|-CXXConstructorDecl 0x557dbabb2f88 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x557dbabb2ec8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x557dbabb31b8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x557dbabb30c0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x557dbabb3368 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x557dbabb32a8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc1f40 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x557dbabc1eb8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x557dbabb32a8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x557dbabc1fa0 <col:19, line:214:5>
|-CXXConstructorDecl 0x557dbabb3538 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x557dbabb3478 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc1fb0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557dbabc2060 <col:53, line:219:5>
|   `-CStyleCastExpr 0x557dbabc2038 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x557dbabc2008 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x557dbabb3478 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x557dbabb3728 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x557dbabb36a0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x557dbabb0240 'Timestamp'
|   | `-CXXRecord 0x557dbabb0498 'Timestamp'
|   `-ParenType 0x557dbabb3640 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x557dbabb3610 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x557dbabb07e0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x557dbabb0658 'seconds_type'
|         `-TypedefType 0x557dba815820 'int32_t' sugar
|           |-Typedef 0x557dba72b238 'int32_t'
|           `-TypedefType 0x557dba7043f0 '__int32_t' sugar
|             |-Typedef 0x557dba704008 '__int32_t'
|             `-BuiltinType 0x557dba6c23b0 'int'
|-CXXConversionDecl 0x557dbabb3868 <line:222:5, col:45> col:12 operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x557dbabb3938 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x557dbabc2168 <col:37, line:231:5>
|   `-ReturnStmt 0x557dbabc2158 <line:227:9, col:23>
|     `-BinaryOperator 0x557dbabc2138 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x557dbabc2108 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x557dbabc20b8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x557dbabba638
|       |   `-MemberExpr 0x557dbabc2088 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x557dbabbb5e8
|       |     `-CXXThisExpr 0x557dbabc2078 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x557dbabc2120 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x557dbabc20e8 <col:23> 'int' 0
|-CXXMethodDecl 0x557dbabb39f8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x557dbabb3ab8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabb3b78 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabb3c38 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabb3cf8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x557dbabb3e68 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x557dbabb3da8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x557dbabb3fb0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x557dbabb3f20 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabb4078 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557dbabb4118 <col:54> "" ""
|-CXXMethodDecl 0x557dbabb41a8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557dbabb4248 <col:54> "" ""
|-CXXMethodDecl 0x557dbabb42d8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557dbabb4378 <col:54> "" ""
|-CXXMethodDecl 0x557dbabb4478 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x557dbabb4548 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x557dbabb4678 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x557dbabb4770 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x557dbabb48a8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x557dbabc2380 <col:39, line:271:5>
|   `-ReturnStmt 0x557dbabc2370 <line:267:9, col:61>
|     `-CallExpr 0x557dbabc2310 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x557dbabc22f8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557dbabc2180 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x557dbabbb918 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x557dbabc2340 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x557dbabc21e0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x557dbabba638
|       |   `-MemberExpr 0x557dbabc21b0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x557dbabbb5e8
|       |     `-CXXThisExpr 0x557dbabc21a0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x557dbabc2358 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x557dbabc2280 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x557dbabc2250 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x557dbabc2210 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x557dbabc2268 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x557dbabc2230 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0db0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557dbabb4968 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x557dbabc2540 <col:39, line:279:5>
|   `-ReturnStmt 0x557dbabc2530 <line:275:9, col:61>
|     `-CallExpr 0x557dbabc24d0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x557dbabc24b8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557dbabc2398 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x557dbabbb918 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x557dbabc2500 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x557dbabc23f8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x557dbabba638
|       |   `-MemberExpr 0x557dbabc23c8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x557dbabbb5e8
|       |     `-CXXThisExpr 0x557dbabc23b8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x557dbabc2518 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x557dbabc2498 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x557dbabc2468 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x557dbabc2428 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x557dbabc2480 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x557dbabc2448 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0c90 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557dbabb4a28 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x557dbabc26d8 <col:39, line:287:5>
|   `-ReturnStmt 0x557dbabc26c8 <line:283:9, col:53>
|     `-BinaryOperator 0x557dbabc26a8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x557dbabc2678 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x557dbabc2598 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x557dbabba638
|       |   `-MemberExpr 0x557dbabc2568 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x557dbabbb5e8
|       |     `-CXXThisExpr 0x557dbabc2558 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x557dbabc2690 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x557dbabc2658 <col:23, col:53> 'int'
|           `-BinaryOperator 0x557dbabc2638 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x557dbabc2608 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557dbabc25c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0ae0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557dbabc2620 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557dbabc25e8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557dbabb4b18 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x557dbabc3970 <col:40, line:293:5>
|   |-DeclStmt 0x557dbabc2820 <line:291:9, col:48>
|   | `-VarDecl 0x557dbabc2700 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x557dbabc2800 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x557dbabc27a8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x557dbabc2778 <col:22> '<bound member function type>' ->subsec 0x557dbabb3ab8
|   |     |   `-CXXThisExpr 0x557dbabc2768 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x557dbabc27e8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x557dbabc27c8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0f10 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557dbabc3960 <line:292:9, col:70>
|     `-ExprWithCleanups 0x557dbabc3948 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x557dbabc3918 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557dbabc3900 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x557dbabc38e0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x557dbabc38b0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x557dbabc3648 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x557dbabc3630 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x557dbabc2838 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x557dbabc2700 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x557dbabc3850 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x557dbabc3838 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x557dbabc3808 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x557dbabc3660 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x557dbabc35d0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x557dbabc35b8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x557dbabc3568 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557dbabb03e8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x557dbabc3508 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x557dbabc2868 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x557dbabc2858 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x557dbabc3550 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x557dbabc3538 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x557dbabc2d28 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x557dbabc2890 <col:39> 'int' 0
|               |               `-BinaryOperator 0x557dbabc2920 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x557dbabc28f0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x557dbabc28b0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0f10 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x557dbabc2908 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x557dbabc28d0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x557dbabc2700 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x557dbabc3880 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x557dbabc3618 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x557dbabc3608 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x557dbabb4bd8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x557dbabc3ec8 <col:40, line:302:5>
|   |-DeclStmt 0x557dbabc3ac0 <line:297:9, col:48>
|   | `-VarDecl 0x557dbabc39a0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x557dbabc3aa0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x557dbabc3a48 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x557dbabc3a18 <col:22> '<bound member function type>' ->subsec 0x557dbabb3ab8
|   |     |   `-CXXThisExpr 0x557dbabc3a08 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x557dbabc3a88 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x557dbabc3a68 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0fe0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557dbabc3eb8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x557dbabc3ea0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x557dbabc3e70 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557dbabc3e58 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x557dbabc3e38 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x557dbabc3e08 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x557dbabc3d30 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x557dbabc3d18 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x557dbabc3ad8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x557dbabc39a0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x557dbabc3da8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x557dbabc3d90 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x557dbabc3d60 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x557dbabc3d48 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x557dbabc3cb8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x557dbabc3ca0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x557dbabc3c80 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557dbabb03e8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x557dbabc3c20 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x557dbabc3b08 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x557dbabc3af8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x557dbabc3c68 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x557dbabc3c50 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x557dbabc3be0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x557dbabc3b30 <col:39> 'int' 0
|               |               `-BinaryOperator 0x557dbabc3bc0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x557dbabc3b90 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x557dbabc3b50 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0fe0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x557dbabc3ba8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x557dbabc3b70 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x557dbabc39a0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x557dbabc3dd8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x557dbabc3d00 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x557dbabc3cf0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x557dbabb4c98 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x557dbabc3f50 <col:40, line:306:5>
|   `-ReturnStmt 0x557dbabc3f40 <line:305:9, col:17>
|     `-CXXConstructExpr 0x557dbabc3f10 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x557dbabc3ef8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x557dbabc3ee8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x557dbabb4e38 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x557dbabb4d48 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x557dbabb5008 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x557dbabb4f10 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x557dbabb50f8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x557dbabb5268 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x557dbabb51a8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x557dbabc4098 <col:56, line:320:5>
|   `-ReturnStmt 0x557dbabc4088 <line:319:9, col:32>
|     `-ExprWithCleanups 0x557dbabc4070 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x557dbabc4040 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557dbabc4028 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557dbabc3fe8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x557dbabc3fb8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x557dbabc3f78 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557dbabb51a8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x557dbabc3fd0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x557dbabc3f98 <col:31> 'int' 0
|-CXXMethodDecl 0x557dbabb54a8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x557dbabb5320 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb5398 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabc4268 <col:72, line:326:5>
|   `-ReturnStmt 0x557dbabc4258 <line:325:9, col:51>
|     `-ExprWithCleanups 0x557dbabc4240 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x557dbabc4210 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557dbabc41f8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557dbabc41b8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x557dbabc41a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x557dbabc40c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557dbabb5320 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x557dbabc4160 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x557dbabc4148 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x557dbabc40e0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557dbabb9d90 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x557dbabc4188 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x557dbabc4100 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb5398 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabb5658 <line:328:5, line:337:5> line:328:29 make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x557dbabb5568 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x557dbabc4930 <col:56, line:337:5>
|   |-DeclStmt 0x557dbabc4568 <line:329:9, col:51>
|   | `-VarDecl 0x557dbabc4290 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x557dbabc4550 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x557dbabc4520 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x557dbabc4508 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x557dbabc44f0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x557dbabc44c0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x557dbabc44a8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x557dbabc4490 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x557dbabc4380 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x557dbabc4720 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x557dbabc45d0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x557dbabba638
|   | | `-MemberExpr 0x557dbabc45a0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x557dbabbb5e8
|   | |   `-DeclRefExpr 0x557dbabc4580 <col:9> 'Timestamp' lvalue Var 0x557dbabc4290 't' 'Timestamp'
|   | `-BinaryOperator 0x557dbabc4700 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x557dbabc46d0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557dbabc4600 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x557dbabb5568 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x557dbabc46e8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x557dbabc46b0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x557dbabc4690 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x557dbabc4660 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x557dbabc4620 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x557dbabc4678 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x557dbabc4640 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0db0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557dbabc4918 <line:336:9, col:16>
|     `-CXXConstructExpr 0x557dbabc48e8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x557dbabc48d0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x557dbabc48b0 <col:16> 'Timestamp' lvalue Var 0x557dbabc4290 't' 'Timestamp'
|-CXXMethodDecl 0x557dbabb5820 <line:341:5, line:343:5> line:341:29 used make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x557dbabb5710 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb5788 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabc4ae8 <col:72, line:343:5>
|   `-ReturnStmt 0x557dbabc4ad8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x557dbabc4ac0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x557dbabc4a90 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557dbabc4a78 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557dbabc4a38 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x557dbabc4a20 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x557dbabc4968 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557dbabb5710 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x557dbabc49e0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x557dbabc49c8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x557dbabc4988 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557dbabb9ed8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x557dbabc4a08 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x557dbabc49a8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb5788 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabb5970 <line:345:5, line:354:5> line:345:29 make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x557dbabb58e0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x557dbabc4f30 <col:56, line:354:5>
|   |-DeclStmt 0x557dbabc4cd8 <line:346:9, col:51>
|   | `-VarDecl 0x557dbabc4b10 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x557dbabc4cc0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x557dbabc4c90 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x557dbabc4c78 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x557dbabc4c60 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x557dbabc4c30 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x557dbabc4c18 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x557dbabc4c00 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x557dbabc4bd0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x557dbabc4e90 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x557dbabc4d40 <col:9, col:14> 'int64_t':'long' lvalue .x 0x557dbabba638
|   | | `-MemberExpr 0x557dbabc4d10 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x557dbabbb5e8
|   | |   `-DeclRefExpr 0x557dbabc4cf0 <col:9> 'Timestamp' lvalue Var 0x557dbabc4b10 't' 'Timestamp'
|   | `-BinaryOperator 0x557dbabc4e70 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x557dbabc4e40 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557dbabc4d70 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x557dbabb58e0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x557dbabc4e58 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x557dbabc4e20 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x557dbabc4e00 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x557dbabc4dd0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x557dbabc4d90 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x557dbabc4de8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x557dbabc4db0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0c90 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557dbabc4f18 <line:353:9, col:16>
|     `-CXXConstructExpr 0x557dbabc4ee8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x557dbabc4ed0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x557dbabc4eb0 <col:16> 'Timestamp' lvalue Var 0x557dbabc4b10 't' 'Timestamp'
|-CXXMethodDecl 0x557dbabb5b38 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x557dbabb5a28 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb5aa0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabc50e8 <col:72, line:360:5>
|   `-ReturnStmt 0x557dbabc50d8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x557dbabc50c0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x557dbabc5090 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557dbabc5078 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557dbabc5038 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x557dbabc5020 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x557dbabc4f68 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557dbabb5a28 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x557dbabc4fe0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x557dbabc4fc8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x557dbabc4f88 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557dbabba020 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x557dbabc5008 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x557dbabc4fa8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb5aa0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabb5c88 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x557dbabb5bf8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x557dbabd1a58 <col:56, line:371:5>
|   |-DeclStmt 0x557dbabc52d8 <line:363:9, col:51>
|   | `-VarDecl 0x557dbabc5110 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x557dbabc52c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x557dbabc5290 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x557dbabc5278 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x557dbabc5260 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x557dbabc5230 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x557dbabc5218 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x557dbabc5200 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x557dbabc51d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x557dbabd19b8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x557dbabc5340 <col:9, col:14> 'int64_t':'long' lvalue .x 0x557dbabba638
|   | | `-MemberExpr 0x557dbabc5310 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x557dbabbb5e8
|   | |   `-DeclRefExpr 0x557dbabc52f0 <col:9> 'Timestamp' lvalue Var 0x557dbabc5110 't' 'Timestamp'
|   | `-CallExpr 0x557dbabd1958 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x557dbabd1940 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x557dbabc5370 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x557dbabbb918 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x557dbabd1988 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557dbabc5390 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x557dbabb5bf8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x557dbabd19a0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x557dbabd1920 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x557dbabd18f0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x557dbabc53b0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0ae0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x557dbabd1908 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x557dbabc53d0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557dbabd1a40 <line:370:9, col:16>
|     `-CXXConstructExpr 0x557dbabd1a10 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x557dbabd19f8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x557dbabd19d8 <col:16> 'Timestamp' lvalue Var 0x557dbabc5110 't' 'Timestamp'
|-CXXMethodDecl 0x557dbabb5d78 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x557dbabd1b98 <col:39, line:377:5>
|   `-ReturnStmt 0x557dbabd1b88 <line:376:9, col:30>
|     `-ExprWithCleanups 0x557dbabd1b70 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x557dbabd1b40 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557dbabd1b28 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557dbabd1ae8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x557dbabd1a90 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x557dbabd1ad0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x557dbabd1ab0 <col:29> 'int' 1
|-CXXMethodDecl 0x557dbabb5e38 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x557dbabd1c78 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x557dbabd1c30 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x557dbabd1bc0 <col:9> '<bound member function type>' ->assign 0x557dbabb6038
|     | `-CXXThisExpr 0x557dbabd1bb0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x557dbabd1bf0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x557dbabd1c60 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x557dbabd1c10 <col:19> 'int' 0
|-CXXMethodDecl 0x557dbabb6038 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb5ee8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb5f60 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557dbabbd210 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557dbabbd1f0 <col:60> 'int' 0
| `-CompoundStmt 0x557dbabd1e70 <col:63, line:395:5>
|   `-BinaryOperator 0x557dbabd1e50 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x557dbabd1cd0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x557dbabba638
|     | `-MemberExpr 0x557dbabd1ca0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x557dbabbb5e8
|     |   `-CXXThisExpr 0x557dbabd1c90 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x557dbabd1e30 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x557dbabd1dc0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x557dbabd1d60 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x557dbabd1d48 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x557dbabd1d30 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x557dbabd1d00 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557dbabb5ee8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x557dbabd1da8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x557dbabd1d88 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x557dbabd1e18 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x557dbabd1e00 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x557dbabd1de0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb5f60 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabb6208 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb60f8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb6170 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd1fc8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x557dbabd1f80 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x557dbabd1e98 <col:9> '<bound member function type>' ->assign 0x557dbabb6038
|     | `-CXXThisExpr 0x557dbabd1e88 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557dbabd1fb0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x557dbabd1ec8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557dbabb60f8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x557dbabd1f40 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x557dbabd1f28 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557dbabd1ee8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557dbabb9ed8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x557dbabd1f68 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557dbabd1f08 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb6170 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabb63d8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb62c8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb6340 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd2120 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x557dbabd20d8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x557dbabd1ff0 <col:9> '<bound member function type>' ->assign 0x557dbabb6038
|     | `-CXXThisExpr 0x557dbabd1fe0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557dbabd2108 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x557dbabd2020 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557dbabb62c8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x557dbabd2098 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x557dbabd2080 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557dbabd2040 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557dbabba020 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x557dbabd20c0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557dbabd2060 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb6340 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabb65a8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb6498 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb6510 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557dbabbd248 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557dbabbd228 <col:57> 'int' 0
| `-DeprecatedAttr 0x557dbabb6658 <col:75> "" ""
|-CXXMethodDecl 0x557dbabb67e8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb66d8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb6750 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557dbabb6898 <col:74> "" ""
|-CXXMethodDecl 0x557dbabb6a28 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557dbabb6918 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557dbabb6990 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557dbabb6ad8 <col:74> "" ""
|-CXXMethodDecl 0x557dbabb6b68 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x557dbabb6c08 <col:42> "" ""
|-CXXMethodDecl 0x557dbabb9440 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x557dbabb9320 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x557dbabb93a0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x557dbabb9510 <line:432:5, col:33> col:29 used now 'Timestamp ()' static inline
|-CXXMethodDecl 0x557dbabb95d0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x557dbabb9670 <col:20>
| `-OptimizeNoneAttr 0x557dbabb96c8 <col:30>
|-CXXMethodDecl 0x557dbabb9710 <line:446:5, col:36> col:29 recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x557dbabb97d0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x557dbabb9890 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x557dbabb9950 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x557dbabb9a10 <line:481:5, col:43> col:29 recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x557dbabb9ad0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x557dbabb9b90 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x557dbabb9c50 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x557dbabb9d90 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557dbabb9d00 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd2268 <col:58, line:512:5>
|   `-ReturnStmt 0x557dbabd2258 <line:511:9, col:53>
|     `-BinaryOperator 0x557dbabd2238 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x557dbabd2208 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557dbabd2138 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb9d00 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557dbabd2220 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557dbabd21e8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x557dbabd21c8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x557dbabd2198 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557dbabd2158 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557dbabd21b0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557dbabd2178 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0db0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557dbabb9ed8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557dbabb9e48 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd23b0 <col:58, line:516:5>
|   `-ReturnStmt 0x557dbabd23a0 <line:515:9, col:53>
|     `-BinaryOperator 0x557dbabd2380 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x557dbabd2350 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557dbabd2280 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb9e48 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557dbabd2368 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557dbabd2330 <col:23, col:53> 'int'
|           `-BinaryOperator 0x557dbabd2310 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x557dbabd22e0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557dbabd22a0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557dbabd22f8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557dbabd22c0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0c90 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557dbabba020 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557dbabb9f90 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd24f8 <col:58, line:520:5>
|   `-ReturnStmt 0x557dbabd24e8 <line:519:9, col:53>
|     `-BinaryOperator 0x557dbabd24c8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x557dbabd2498 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557dbabd23c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabb9f90 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557dbabd24b0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557dbabd2478 <col:23, col:53> 'int'
|           `-BinaryOperator 0x557dbabd2458 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x557dbabd2428 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557dbabd23e8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0ae0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557dbabd2440 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557dbabd2408 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557dbabba168 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557dbabba0d8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd2640 <col:60, line:524:5>
|   `-ReturnStmt 0x557dbabd2630 <line:523:9, col:55>
|     `-BinaryOperator 0x557dbabd2610 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x557dbabd25e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557dbabd2510 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabba0d8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557dbabd25f8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557dbabd25c0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x557dbabd25a0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x557dbabd2570 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557dbabd2530 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557dbabd2588 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557dbabd2550 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0db0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557dbabba2b0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557dbabba220 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd2788 <col:60, line:528:5>
|   `-ReturnStmt 0x557dbabd2778 <line:527:9, col:55>
|     `-BinaryOperator 0x557dbabd2758 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x557dbabd2728 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557dbabd2658 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabba220 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557dbabd2740 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557dbabd2708 <col:25, col:55> 'int'
|           `-BinaryOperator 0x557dbabd26e8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x557dbabd26b8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557dbabd2678 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557dbabd26d0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557dbabd2698 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0c90 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557dbabba3f8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557dbabba368 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd28d0 <col:60, line:532:5>
|   `-ReturnStmt 0x557dbabd28c0 <line:531:9, col:55>
|     `-BinaryOperator 0x557dbabd28a0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x557dbabd2870 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557dbabd27a0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabba368 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557dbabd2888 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557dbabd2850 <col:25, col:55> 'int'
|           `-BinaryOperator 0x557dbabd2830 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x557dbabd2800 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557dbabd27c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0ae0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557dbabd2818 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557dbabd27e0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557dbabb0e40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x557dbabba4a0 prev 0x557dbabb12e0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557dbabba598 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x557dbabba638 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x557dbabc1400 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x557dbabc17e8 <col:11>
| |-CXXConstructorDecl 0x557dbabc14e0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557dbabc15c8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x557dbabc1f30 <col:11>
| |-CXXConstructorDecl 0x557dbabc1668 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x557dbabc1778 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x557dbabc3788 <col:11>
| |-CXXDestructorDecl 0x557dbabc2a98 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x557dba8c9648 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557dba8c9758 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x557dba8ca020 <col:11>
| |   `-ReturnStmt 0x557dba8ca010 <col:11>
| |     `-UnaryOperator 0x557dba8c9ff8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x557dba8c9fe8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x557dba8c97c8 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x557dba8c97c8
|   `-ParmVarDecl 0x557dba8c98d8 <col:11> col:11 'Timestamp::rep_t &&'
|-EnumDecl 0x557dbabba6a0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x557dbabba7a0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x557dbabba9a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabba780 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x557dbabba760 <col:21> 'int' 0
| |-EnumConstantDecl 0x557dbabba830 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x557dbabba9b8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabba810 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x557dbabba7f0 <col:23> 'int' 1
| |-EnumConstantDecl 0x557dbabba8c0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x557dbabba9d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557dbabba8a0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x557dbabba880 <col:23> 'int' 2
| `-EnumConstantDecl 0x557dbabba950 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x557dbabba9e8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dbabba930 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x557dbabba910 <col:27> 'int' 3
|-CXXMethodDecl 0x557dbabbaa28 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x557dbabbaaf0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x557dbabbacf8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x557dbabbaba0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x557dbabbac20 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x557dbabbd260 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x557dbabbaf08 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x557dbabbadb8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x557dbabbae30 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x557dbabbafd8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x557dbabbb098 <line:635:5, col:37> col:24 warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x557dbabbb208 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x557dbabbb148 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x557dbabbb2d0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x557dbabbb390 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x557dbabbb450 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x557dbabbb510 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x557dbabbb5b0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x557dbabbb5e8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x557dbabbb658 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x557dbabd28e8 <col:27, line:684:5>
|-CXXMethodDecl 0x557dbabbb718 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x557dbabd28f8 <col:27, line:696:5>
|-CXXMethodDecl 0x557dbabbb918 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x557dbabbb7c8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x557dbabbb840 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd2a80 <col:66, line:700:5>
|   `-ReturnStmt 0x557dbabd2a70 <line:699:9, col:31>
|     `-CallExpr 0x557dbabd2a10 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x557dbabd29f8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557dbabd29a8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x557dbaa3dcc8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x557dbabd2a40 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x557dbabd2968 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x557dbabbb7c8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x557dbabd2a58 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557dbabd2988 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabbb840 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557dbabbbc88 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x557dbabbb9d8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x557dbabbba50 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x557dbabbbac8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x557dbabbbb40 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557dbabd2dd0 <col:64, line:707:5>
|   |-DeclStmt 0x557dbabd2b10 <line:704:9, col:24>
|   | `-VarDecl 0x557dbabd2aa8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x557dbabd2d20 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x557dbabd2b28 <col:9> 'int32_t':'int' lvalue ParmVar 0x557dbabbba50 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x557dbabd2d08 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x557dbabd2ca0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x557dbabd2c88 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557dbabd2c08 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x557dbaa42f98 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x557dbabd2cd8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x557dbabd2ba8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x557dbabbbac8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x557dbabd2cf0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x557dbabd2bc8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x557dbabbbb40 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x557dbabd2be8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x557dbabd2aa8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x557dbabd2db0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x557dbabd2d40 <col:9> 'int32_t':'int' lvalue ParmVar 0x557dbabbb9d8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x557dbabd2d98 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x557dbabd2d80 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x557dbabd2d60 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x557dbabd2aa8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x557dbabbbf28 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x557dbabbbd58 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x557dbabbbdd0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x557dbabbbe48 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x557dbabbc1c8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x557dbabbbff0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x557dbabbc068 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x557dbabbc0e0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x557dbabbc358 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x557dbabbc290 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x557dbabbc558 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x557dbabbc410 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x557dbabbc488 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x557dbabbc828 <line:717:5, col:73> col:24
| `-FunctionDecl 0x557dbabbc768 parent 0x557dba6c22b8 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x557dbabbc618 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x557dbabbc690 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x557dbabbca48 <line:718:5, col:72> col:24
| `-FunctionDecl 0x557dbabbc988 parent 0x557dba6c22b8 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x557dbabbc878 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x557dbabbc8f0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x557dbabbcc10 <line:719:5, col:57> col:29
| `-FunctionDecl 0x557dbabbcb58 parent 0x557dba6c22b8 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x557dbabbca98 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x557dbabbce98 <line:720:5, col:73> col:30
| `-FunctionDecl 0x557dbabbcdd8 parent 0x557dba6c22b8 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x557dbabbcc88 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x557dbabbcd00 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x557dbabbd0b8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x557dbabbcff8 parent 0x557dba6c22b8 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x557dbabbcee8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x557dbabbcf60 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x557dbabc2940 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x557dbabc2a28 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc3498 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x557dbabc3450 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x557dbabbb5e8
| |     `-DeclRefExpr 0x557dbabc3430 <col:7> 'const Timestamp' lvalue ParmVar 0x557dbabc2a28 '' 'const Timestamp &'
| `-CompoundStmt 0x557dbabc34f8 <col:7>
|-CXXConstructorDecl 0x557dbabc2ba8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x557dbabc2cb8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x557dbabbb5e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557dbabc3798 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x557dbabc3740 <col:7> 'Timestamp::rep_t' xvalue ._t 0x557dbabbb5e8
| |     `-CXXStaticCastExpr 0x557dbabc3710 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x557dbabc36e0 <col:7> 'Timestamp' lvalue ParmVar 0x557dbabc2cb8 '' 'Timestamp &&'
| `-CompoundStmt 0x557dbabc37f8 <col:7>
|-CXXDestructorDecl 0x557dbabc2d68 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x557dba8c9498 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x557dba8c95a8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x557dba8ca098 <col:7>
|   |-CXXMemberCallExpr 0x557dba8ca038 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x557dba8c9f78 <col:7> '<bound member function type>' .operator= 0x557dba8c9648
|   | | `-MemberExpr 0x557dba8c9e88 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x557dbabbb5e8
|   | |   `-CXXThisExpr 0x557dba8c9e78 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x557dba8c9f48 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x557dbabbb5e8
|   |   `-DeclRefExpr 0x557dba8c9f28 <col:7> 'const Timestamp' lvalue ParmVar 0x557dba8c95a8 '' 'const Timestamp &'
|   `-ReturnStmt 0x557dba8ca088 <col:7>
|     `-UnaryOperator 0x557dba8ca070 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x557dba8ca060 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x557dba8c9948 <col:7> col:7 implicit operator= 'Timestamp &(Timestamp &&)' inline default trivial noexcept-unevaluated 0x557dba8c9948
  `-ParmVarDecl 0x557dba8c9a58 <col:7> col:7 'Timestamp &&'

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dba9f5a10 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x557dba9f5b28 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x557dba9f5bc8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x557dba9f5c28 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x557dba9f5c88 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x557dba9f5d38 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dba9f6040 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dba9f6158 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x557dba9f6200 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x557dba9f6268 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x557dba9f62f8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x557dba9fc390 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557dba9fc7c8 <col:12>
|-CXXConstructorDecl 0x557dba9fc498 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x557dba9fc5a8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x557dba9f6200 'data' 'const char *'
| | `-ImplicitCastExpr 0x557dba9fed50 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x557dba9fed20 <col:12> 'const char *const' lvalue .data 0x557dba9f6200
| |     `-DeclRefExpr 0x557dba9fed00 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dba9fc5a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x557dba9f6268 'length' 'int'
| | `-ImplicitCastExpr 0x557dba9fede0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x557dba9fedb0 <col:12> 'const int' lvalue .length 0x557dba9f6268
| |     `-DeclRefExpr 0x557dba9fed90 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dba9fc5a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x557dba9f62f8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x557dba9fee70 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x557dba9fee40 <col:12> 'String::memo_t *const' lvalue .memo 0x557dba9f62f8
| |     `-DeclRefExpr 0x557dba9fee20 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dba9fc5a8 '' 'const String::rep_t &'
| `-CompoundStmt 0x557dba9feec8 <col:12>
|-CXXConstructorDecl 0x557dba9fc648 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x557dba9fc648
| `-ParmVarDecl 0x557dba9fc758 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x557dbaa01cb0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x557dbaa0d6c8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x557dbaa0d7d8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x557dbaa0dcf0 <col:12>
|   |-BinaryOperator 0x557dbaa0db08 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x557dbaa0dac0 <col:12> 'const char *' lvalue ->data 0x557dba9f6200
|   | | `-CXXThisExpr 0x557dbaa0dab0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x557dbaa0daf0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x557dbaa0da80 <col:12> 'const char *const' lvalue .data 0x557dba9f6200
|   |     `-DeclRefExpr 0x557dbaa0da60 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dbaa0d7d8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x557dbaa0dbd0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x557dbaa0db88 <col:12> 'int' lvalue ->length 0x557dba9f6268
|   | | `-CXXThisExpr 0x557dbaa0db78 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x557dbaa0dbb8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x557dbaa0db48 <col:12> 'const int' lvalue .length 0x557dba9f6268
|   |     `-DeclRefExpr 0x557dbaa0db28 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dbaa0d7d8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x557dbaa0dc98 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x557dbaa0dc50 <col:12> 'String::memo_t *' lvalue ->memo 0x557dba9f62f8
|   | | `-CXXThisExpr 0x557dbaa0dc40 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x557dbaa0dc80 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x557dbaa0dc10 <col:12> 'String::memo_t *const' lvalue .memo 0x557dba9f62f8
|   |     `-DeclRefExpr 0x557dbaa0dbf0 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dbaa0d7d8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x557dbaa0dce0 <col:12>
|     `-UnaryOperator 0x557dbaa0dcc8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x557dbaa0dcb8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x557dbaa0d848 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x557dbaa0d848
  `-ParmVarDecl 0x557dbaa0d958 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dba9ecf80 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557dba9ed098 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x557dba9ed128 <col:16, col:22> col:16 public
|-TypedefDecl 0x557dba9ed168 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x557dba6c2e00 'const char *'
|   `-QualType 0x557dba6c2351 'const char' const
|     `-BuiltinType 0x557dba6c2350 'char'
|-TypedefDecl 0x557dba9ed1f0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x557dba9ed1c0 'String::const_iterator' sugar
|   |-Typedef 0x557dba9ed168 'const_iterator'
|   `-PointerType 0x557dba6c2e00 'const char *'
|     `-QualType 0x557dba6c2351 'const char' const
|       `-BuiltinType 0x557dba6c2350 'char'
|-TypedefDecl 0x557dba9ed360 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x557dba9ed2d0 'int (String::*)() const'
|   |-RecordType 0x557dba9ed010 'String'
|   | `-CXXRecord 0x557dba9ecf80 'String'
|   `-ParenType 0x557dba9ed270 'int () const' sugar
|     `-FunctionProtoType 0x557dba9c0e00 'int () const' const cdecl
|       `-BuiltinType 0x557dba6c23b0 'int'
|-TypedefDecl 0x557dba9ed3c8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x557dba8159e0 'int64_t' sugar
|   |-Typedef 0x557dba72b2a0 'int64_t'
|   `-TypedefType 0x557dba704510 '__int64_t' sugar
|     |-Typedef 0x557dba7040e8 '__int64_t'
|     `-BuiltinType 0x557dba6c23d0 'long'
|-TypedefDecl 0x557dba9ed430 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x557dba815900 'uint64_t' sugar
|   |-Typedef 0x557dba72b440 'uint64_t'
|   `-TypedefType 0x557dba7045a0 '__uint64_t' sugar
|     |-Typedef 0x557dba704158 '__uint64_t'
|     `-BuiltinType 0x557dba6c2470 'unsigned long'
|-TypedefDecl 0x557dba9ed4c0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x557dba9ed490 'String::intmax_t' sugar
|   |-Typedef 0x557dba9ed3c8 'intmax_t'
|   `-TypedefType 0x557dba8159e0 'int64_t' sugar
|     |-Typedef 0x557dba72b2a0 'int64_t'
|     `-TypedefType 0x557dba704510 '__int64_t' sugar
|       |-Typedef 0x557dba7040e8 '__int64_t'
|       `-BuiltinType 0x557dba6c23d0 'long'
|-TypedefDecl 0x557dba9ed550 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x557dba9ed520 'String::uintmax_t' sugar
|   |-Typedef 0x557dba9ed430 'uintmax_t'
|   `-TypedefType 0x557dba815900 'uint64_t' sugar
|     |-Typedef 0x557dba72b440 'uint64_t'
|     `-TypedefType 0x557dba7045a0 '__uint64_t' sugar
|       |-Typedef 0x557dba704158 '__uint64_t'
|       `-BuiltinType 0x557dba6c2470 'unsigned long'
|-CXXConstructorDecl 0x557dba9ed610 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x557dba9ed7b8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x557dba9ed6f8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x557dba9ed968 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x557dba9ed8a8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x557dba9edac0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x557dba9eda30 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x557dba9edcd8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x557dba9edb88 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x557dba9edc08 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x557dba9edef8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x557dba9edda8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x557dba9ede28 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x557dba9ee118 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x557dba9edfc8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x557dba9ee048 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x557dba9ee338 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x557dba9ee1e8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x557dba9ee268 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x557dba9ee4c8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x557dba9ee400 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x557dba9ee648 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x557dba9ee588 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x557dba9ee7d8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x557dba9ee710 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x557dba9ee930 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x557dba9ee8a0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x557dba9eea88 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x557dba9ee9f8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x557dba9eebe0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x557dba9eeb50 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x557dba9eed68 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x557dba9eeca8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x557dba9eeef8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x557dba9eee30 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x557dba9ef088 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x557dba9eefc0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x557dba9ef218 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x557dba9ef150 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x557dba9ef310 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x557dba9ef438 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x557dba9ef5b8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x557dba9ef4f0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x557dba9ef708 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x557dba9ef678 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x557dba9ef7c0 <col:63> "" ""
|-CXXMethodDecl 0x557dba9ef908 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x557dba9ef848 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x557dba9efb18 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x557dba9ef9c8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x557dba9efa48 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x557dba9efd38 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x557dba9efbe0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x557dba9efc60 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x557dba9f0018 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x557dba9efdf8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x557dba9efe78 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x557dba9fbe60 <col:55> 'int' 10
| `-ParmVarDecl 0x557dba9efef0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557dba9fbe80 <col:76> 'bool' true
|-CXXMethodDecl 0x557dba9f02f8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x557dba9f00e0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x557dba9f0160 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x557dba9fbe90 <col:56> 'int' 10
| `-ParmVarDecl 0x557dba9f01d8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557dba9fbeb0 <col:77> 'bool' true
|-CXXMethodDecl 0x557dba9f0400 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x557dba9f04c8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x557dba9f0590 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x557dba9f0630 <col:20>
| `-OptimizeNoneAttr 0x557dba9f0688 <col:30>
|-CXXConversionDecl 0x557dba9f0778 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x557dba9f0848 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x557dba9f0908 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x557dba9f09f8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x557dba9f0ab8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x557dba9f0c38 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x557dba9f0b70 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x557dba9f0d88 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x557dba9f0cf8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x557dba9f0e78 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x557dba9f0f38 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x557dba9f1188 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x557dba9f0ff0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x557dba9f1070 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x557dba9f13e8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x557dba9f1250 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x557dba9f12d0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x557dba9f14b8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x557dba9f16c8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x557dba9f1570 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x557dba9f15f0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x557dba9f18e8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x557dba9f1790 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x557dba9f1810 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x557dba9f1a78 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x557dba9f19b0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x557dba9f1b68 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x557dba9f1cd8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x557dba9f1c18 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x557dba9f1ee8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x557dba9f1d98 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x557dba9f1e18 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x557dba9f2100 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x557dba9f1fa8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x557dba9f2020 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x557dba9f2290 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x557dba9f21c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x557dba9f24b0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x557dba9f2350 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x557dba9f23d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x557dba9f2600 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x557dba9f2570 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x557dba9f27d8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x557dba9f26c0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x557dba9f2740 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x557dba9f2928 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x557dba9f2898 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x557dba9f2b40 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x557dba9f29e0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x557dba9f2a60 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x557dba9fbec0 <col:39> 'int' 0
|-CXXMethodDecl 0x557dba9f2d60 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x557dba9f2c00 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x557dba9f2c80 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x557dba9fbee0 <col:48> 'int' 0
|-CXXMethodDecl 0x557dba9f2f40 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x557dba9f2e20 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x557dba9f2ea0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x557dba9fbf00 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x557dba9f3010 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x557dba9f30d0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x557dba9f3190 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x557dba9f3250 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x557dba9f3310 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x557dba9f34b8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x557dba9f33c0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x557dba9f3638 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x557dba9f3570 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x557dba9f3810 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x557dba9f36f8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x557dba9f3988 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x557dba9f38c8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x557dba9f3ad0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x557dba9f3a40 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x557dba9f3c20 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x557dba9f3b90 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x557dba9f3df8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x557dba9f3ce0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x557dba9f3d60 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x557dba9f3fd8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x557dba9f3ec0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x557dba9f3f40 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x557dba9f4128 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x557dba9f4098 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x557dba9f4338 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x557dba9f41e8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x557dba9f4268 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x557dba9f4498 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x557dba9f4400 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x557dba9f45f0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x557dba9f4558 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x557dba9f4698 <col:57> "" ""
|-CXXMethodDecl 0x557dba9f47a8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x557dba9f4718 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x557dba9f48f8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x557dba9f4868 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x557dba9f4a78 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x557dba9f49b0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x557dba9f4b40 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x557dba9f4c00 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x557dba9f4cc0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x557dba9f4d60 <col:49> "" ""
|-CXXMethodDecl 0x557dba9f4df0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x557dba9f4eb0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x557dba9f4fa0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x557dba9f5068 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x557dba9f5128 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x557dba9f51e8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x557dba9f52e0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x557dba9f53a8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x557dba9f5470 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x557dba9f5648 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x557dba9f5528 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x557dba9f55a8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x557dba9f5870 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x557dba9f5710 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x557dba9f5790 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x557dba9f5980 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x557dba9f59e8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x557dba9f5a10 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557dba9f5b28 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x557dba9f5bc8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x557dba9f5c28 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x557dba9f5c88 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x557dba9f5d38 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x557dba9f5da0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x557dba9f5fd8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x557dba9f6028 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dba9f5fb8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x557dba9f5ec8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x557dba9f5e70 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x557dba9f5eb0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x557dba9f5e90 <col:32> 'int' 8
|-CXXRecordDecl 0x557dba9f6040 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557dba9f6158 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x557dba9f6200 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x557dba9f6268 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x557dba9f62f8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x557dba9fc390 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x557dba9fc7c8 <col:12>
| |-CXXConstructorDecl 0x557dba9fc498 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557dba9fc5a8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x557dba9f6200 'data' 'const char *'
| | | `-ImplicitCastExpr 0x557dba9fed50 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x557dba9fed20 <col:12> 'const char *const' lvalue .data 0x557dba9f6200
| | |     `-DeclRefExpr 0x557dba9fed00 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dba9fc5a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x557dba9f6268 'length' 'int'
| | | `-ImplicitCastExpr 0x557dba9fede0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x557dba9fedb0 <col:12> 'const int' lvalue .length 0x557dba9f6268
| | |     `-DeclRefExpr 0x557dba9fed90 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dba9fc5a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x557dba9f62f8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x557dba9fee70 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x557dba9fee40 <col:12> 'String::memo_t *const' lvalue .memo 0x557dba9f62f8
| | |     `-DeclRefExpr 0x557dba9fee20 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dba9fc5a8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x557dba9feec8 <col:12>
| |-CXXConstructorDecl 0x557dba9fc648 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x557dba9fc648
| | `-ParmVarDecl 0x557dba9fc758 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x557dbaa01cb0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x557dbaa0d6c8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557dbaa0d7d8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x557dbaa0dcf0 <col:12>
| |   |-BinaryOperator 0x557dbaa0db08 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x557dbaa0dac0 <col:12> 'const char *' lvalue ->data 0x557dba9f6200
| |   | | `-CXXThisExpr 0x557dbaa0dab0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x557dbaa0daf0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x557dbaa0da80 <col:12> 'const char *const' lvalue .data 0x557dba9f6200
| |   |     `-DeclRefExpr 0x557dbaa0da60 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dbaa0d7d8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x557dbaa0dbd0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x557dbaa0db88 <col:12> 'int' lvalue ->length 0x557dba9f6268
| |   | | `-CXXThisExpr 0x557dbaa0db78 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x557dbaa0dbb8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x557dbaa0db48 <col:12> 'const int' lvalue .length 0x557dba9f6268
| |   |     `-DeclRefExpr 0x557dbaa0db28 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dbaa0d7d8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x557dbaa0dc98 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x557dbaa0dc50 <col:12> 'String::memo_t *' lvalue ->memo 0x557dba9f62f8
| |   | | `-CXXThisExpr 0x557dbaa0dc40 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x557dbaa0dc80 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x557dbaa0dc10 <col:12> 'String::memo_t *const' lvalue .memo 0x557dba9f62f8
| |   |     `-DeclRefExpr 0x557dbaa0dbf0 <col:12> 'const String::rep_t' lvalue ParmVar 0x557dbaa0d7d8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x557dbaa0dce0 <col:12>
| |     `-UnaryOperator 0x557dbaa0dcc8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x557dbaa0dcb8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x557dbaa0d848 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x557dbaa0d848
|   `-ParmVarDecl 0x557dbaa0d958 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x557dba9f6370 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x557dba9f65b8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x557dba9f63d8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x557dba9f6458 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x557dba9f64d0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x557dba9fc350 <col:79, line:261:5>
|   |-BinaryOperator 0x557dba9fbfc8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x557dba9fbf60 <col:2, col:5> 'const char *' lvalue .data 0x557dba9f6200
|   | | `-MemberExpr 0x557dba9fbf30 <col:2> 'String::rep_t' lvalue ->_r 0x557dba9f6370
|   | |   `-CXXThisExpr 0x557dba9fbf20 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x557dba9fbfb0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x557dba9fbf90 <col:12> 'const char *' lvalue ParmVar 0x557dba9f63d8 'data' 'const char *'
|   |-BinaryOperator 0x557dba9fc090 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x557dba9fc028 <col:2, col:5> 'int' lvalue .length 0x557dba9f6268
|   | | `-MemberExpr 0x557dba9fbff8 <col:2> 'String::rep_t' lvalue ->_r 0x557dba9f6370
|   | |   `-CXXThisExpr 0x557dba9fbfe8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x557dba9fc078 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557dba9fc058 <col:14> 'int' lvalue ParmVar 0x557dba9f6458 'length' 'int'
|   `-IfStmt 0x557dba9fc338 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x557dba9fc1b0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x557dba9fc198 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x557dba9fc178 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x557dba9fc158 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x557dba9fc0f0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x557dba9f62f8
|     |       | `-MemberExpr 0x557dba9fc0c0 <col:7> 'String::rep_t' lvalue ->_r 0x557dba9f6370
|     |       |   `-CXXThisExpr 0x557dba9fc0b0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x557dba9fc140 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x557dba9fc120 <col:17> 'String::memo_t *' lvalue ParmVar 0x557dba9f64d0 'memo' 'String::memo_t *'
|     `-CallExpr 0x557dba9fc310 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x557dba9fc2f8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557dba9fc200 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x557dba9e4fe8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x557dba9fc268 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x557dba9f5bc8
|         `-ImplicitCastExpr 0x557dba9fc250 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x557dba9fc230 <col:27> 'String::memo_t *' lvalue ParmVar 0x557dba9f64d0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x557dba9f6868 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x557dba9f6688 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x557dba9f6708 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x557dba9f6780 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x557dba9f6370 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x557dba9fc7d8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557dba9fc968 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x557dba9fc8d0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x557dba9fc840 <col:2> '<bound member function type>' ->assign_memo 0x557dba9f65b8
|     | `-ImplicitCastExpr 0x557dba9fc908 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x557dba9fc830 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x557dba9fc920 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x557dba9fc870 <col:14> 'const char *' lvalue ParmVar 0x557dba9f6688 'data' 'const char *'
|     |-ImplicitCastExpr 0x557dba9fc938 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x557dba9fc890 <col:20> 'int' lvalue ParmVar 0x557dba9f6708 'length' 'int'
|     `-ImplicitCastExpr 0x557dba9fc950 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x557dba9fc8b0 <col:28> 'String::memo_t *' lvalue ParmVar 0x557dba9f6780 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x557dba9f69f8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x557dba9f6938 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x557dba9fcbc0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x557dba9fcb40 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x557dba9fc990 <col:2> '<bound member function type>' ->assign_memo 0x557dba9f65b8
|     | `-CXXThisExpr 0x557dba9fc980 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x557dba9fcb78 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x557dba9fca10 <col:14, col:19> 'const char *' lvalue .data 0x557dba9f6200
|     |   `-MemberExpr 0x557dba9fc9e0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x557dba9f6370
|     |     `-DeclRefExpr 0x557dba9fc9c0 <col:14> 'const String' lvalue ParmVar 0x557dba9f6938 'x' 'const String &'
|     |-ImplicitCastExpr 0x557dba9fcb90 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x557dba9fca90 <col:25, col:30> 'int' lvalue .length 0x557dba9f6268
|     |   `-MemberExpr 0x557dba9fca60 <col:25, col:27> 'String::rep_t' lvalue ._r 0x557dba9f6370
|     |     `-DeclRefExpr 0x557dba9fca40 <col:25> 'const String' lvalue ParmVar 0x557dba9f6938 'x' 'const String &'
|     `-ImplicitCastExpr 0x557dba9fcba8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x557dba9fcb10 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x557dba9f62f8
|         `-MemberExpr 0x557dba9fcae0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x557dba9f6370
|           `-DeclRefExpr 0x557dba9fcac0 <col:38> 'const String' lvalue ParmVar 0x557dba9f6938 'x' 'const String &'
|-CXXMethodDecl 0x557dba9f6ac0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x557dba9fd580 <col:31, line:278:5>
|   `-IfStmt 0x557dba9fd568 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x557dba9fcc60 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x557dba9fcc48 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x557dba9fcc18 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x557dba9f62f8
|     |     `-MemberExpr 0x557dba9fcbe8 <col:6> 'String::rep_t' lvalue ->_r 0x557dba9f6370
|     |       `-CXXThisExpr 0x557dba9fcbd8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x557dba9fd540 <col:15, line:277:2>
|       |-ParenExpr 0x557dba9fd110 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x557dba9fd0e0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x557dba9fcd70 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x557dba9fcd58 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x557dba9fcd40 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x557dba9fcd00 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x557dba9f5bc8
|       |   |       `-ImplicitCastExpr 0x557dba9fcce8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x557dba9fccb8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x557dba9f62f8
|       |   |           `-MemberExpr 0x557dba9fcc88 <col:27> 'String::rep_t' lvalue ->_r 0x557dba9f6370
|       |   |             `-CXXThisExpr 0x557dba9fcc78 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x557dba9fcdd0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x557dba9fcdb0 <col:54> 'int' 0
|       |   `-CallExpr 0x557dba9fd040 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x557dba9fd028 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x557dba9fcfa8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557dba75c250 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x557dba9fd080 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x557dba9fceb8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x557dba9fd098 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x557dba9fcee8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x557dba9fd0b0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x557dba9fcf20 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x557dba9fd0c8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x557dba9fcf90 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x557dba9fcf78 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x557dba9fcf40 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x557dba9fd460 <line:274:6, line:275:22>
|       | |-CallExpr 0x557dba9fd320 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x557dba9fd308 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x557dba9fd280 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x557dba9e6430 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x557dba9fd250 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x557dba9f5bc8
|       | |   `-ImplicitCastExpr 0x557dba9fd238 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x557dba9fd208 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x557dba9f62f8
|       | |       `-MemberExpr 0x557dba9fd1d8 <col:40> 'String::rep_t' lvalue ->_r 0x557dba9f6370
|       | |         `-CXXThisExpr 0x557dba9fd1c8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x557dba9fd420 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x557dba9fd408 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x557dba9fd348 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x557dba9fb2a0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x557dba9fd448 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x557dba9fd3a8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x557dba9f62f8
|       |       `-MemberExpr 0x557dba9fd378 <col:15> 'String::rep_t' lvalue ->_r 0x557dba9f6370
|       |         `-CXXThisExpr 0x557dba9fd368 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x557dba9fd520 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x557dba9fd4b8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x557dba9f62f8
|         | `-MemberExpr 0x557dba9fd488 <col:6> 'String::rep_t' lvalue ->_r 0x557dba9f6370
|         |   `-CXXThisExpr 0x557dba9fd478 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x557dba9fd508 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x557dba9fd4e8 <col:16> 'int' 0
|-CXXMethodDecl 0x557dba9f6d58 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x557dba9f6b78 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x557dba9f6bf8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x557dba9f6c70 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x557dba9f6e30 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x557dba9f7080 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x557dba9f6ee8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x557dba9f6f68 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x557dba9f6fe0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x557dba9f7268 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x557dba9f7150 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x557dba9f71d0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x557dba9f7368 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x557dba9fd658 <col:41, line:286:5>
|   `-ReturnStmt 0x557dba9fd648 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x557dba9fd618 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x557dba9fd5e0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x557dba9fd5c8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x557dba9fd5a8 <col:46> 'int' 1
|-CXXMethodDecl 0x557dba9f7608 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x557dba9f7420 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x557dba9f74a0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x557dba9f7520 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x557dba9fb2a0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x557dba9f76d0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x557dba9fb370 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x557dba9fb540 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x557dba9fb428 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x557dba9fb4a8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x557dba9fb600 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x557dba9fb6c8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x557dba9fb7c8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x557dba9fb840 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x557dba9fb8b8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x557dba9fb920 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x557dba9fba20 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x557dba9fba70 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557dba9fba00 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x557dba9fb9e0 <col:22> 'int' 14
|-CXXMethodDecl 0x557dba9fbc88 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x557dba9fbaa0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x557dba9fbb20 <col:38> col:41 'int'
| `-ParmVarDecl 0x557dba9fbba0 <col:43> col:46 'int'
|-FriendDecl 0x557dba9fbd90 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x557dba9fbe20 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557dba8153b8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557dba8154d8 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x557dbaa27350 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x557dbaa27430 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x557dbaa27430
| `-ParmVarDecl 0x557dbaa27518 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x557dbaa275b8 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x557dbaa275b8
| `-ParmVarDecl 0x557dbaa276c8 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x557dbabc43b0 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
