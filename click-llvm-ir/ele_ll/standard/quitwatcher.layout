
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e65388 prev 0x55dd35e5cb28 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35e65480 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55dd35e65510 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55dd35e65588 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55dd35e65648 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55dd35e65710 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55dd35e65888 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55dd35e657c0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55dd35e65930 <col:24>
| `-OptimizeNoneAttr 0x55dd35e65988 <col:34>
|-CXXMethodDecl 0x55dd35e659d0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55dd35e65c88 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55dd35e65a80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55dd35e65af8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55dd35e65b78 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55dd35e65d40 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55dd35e65d78 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55dd35e65de0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55dd35e65e68 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55dd35e66188 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55dd35e65f20 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55dd35e65f98 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55dd35e66010 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55dd35e66090 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55dd35e662a0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55dd35e6dc18 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55dd35e6dc18
| `-ParmVarDecl 0x55dd35e6dd28 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55dd35e6ddc8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55dd35e6ddc8
| `-ParmVarDecl 0x55dd35e6ded8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55dd35fd9ba0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35c16e50 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35c16f68 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55dd35c16ff8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55dd35c170c8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55dd35c171b0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35c173c8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55dd35c17270 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c17578 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55dd35c17480 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55dd35c176c0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55dd35c17630 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55dd35c17808 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55dd35c17778 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c17950 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55dd35c178c0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c17a18 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55dd35c17b60 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55dd35c17ad0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55dd35c17c28 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55dd35c17d70 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55dd35c17ce0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55dd35c17ee8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55dd35c17e28 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c18030 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55dd35c17fa0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c180f8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55dd35c182b8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55dd35c181a8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd35c18220 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c18508 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55dd35c18378 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd35c183f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35c185b8 <col:86> "" ""
|-CXXMethodDecl 0x55dd35c18828 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35c18698 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55dd35c18710 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c189d8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55dd35c188e8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55dd35c18b88 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55dd35c18a90 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55dd35c18e58 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35c18c40 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55dd35c18cb8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd35c18d30 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c19138 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35c18f20 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55dd35c18f98 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd35c19010 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35c191f0 <col:115> "" ""
|-AccessSpecDecl 0x55dd35c19260 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55dd35c19298 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35c1a7b0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55dd35c1a7b0
| `-ParmVarDecl 0x55dd35c1a8b8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55dd35c1a958 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55dd35c1a958
| `-ParmVarDecl 0x55dd35c1aa68 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55dd35c50098 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd35e41e90 <col:7>
|-CXXConstructorDecl 0x55dd35c50170 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55dd35c50170
| `-ParmVarDecl 0x55dd35c50288 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55dd35c502f8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55dd35c502f8
| `-ParmVarDecl 0x55dd35c50408 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55dd35e44890 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35e91b80 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55dd35e91d58 prev 0x55dd35e91b80 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd35e91de8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd35e91e10 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35e939e0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55dd35e93990 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55dd35e922c0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55dd35e921c0 'type'
|     `-TemplateSpecializationType 0x55dd35e92150 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55dd35e92030 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55dd35e92010 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55dd35e91ff0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55dd35e92130 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55dd35e92050 'char_array'
|-TypedefDecl 0x55dd35e93a98 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55dd35e93a60 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55dd35e93a40 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55dd35e939e0 'type'
|     `-ElaboratedType 0x55dd35e93990 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55dd35e922c0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55dd35e921c0 'type'
|         `-TemplateSpecializationType 0x55dd35e92150 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55dd35e92030 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55dd35e92010 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55dd35e91ff0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55dd35e92130 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55dd35e92050 'char_array'
|-CXXMethodDecl 0x55dd35e93c18 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55dd35e93b28 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55dd35e93d08 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd35e93de8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55dd35e940b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55dd35e93fc0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55dd35e942f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dd35e94170 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35e941e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd35e944c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dd35e943b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35e94430 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd35e94628 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55dd35e946f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55dd35e94948 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dd35e947b8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55dd35e94830 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd35e94ba8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55dd35e94a18 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55dd35e94a90 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd35e94d68 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55dd35e94c78 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd35e94f28 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55dd35e94e30 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd35e94fe0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35e95090 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35e952c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dd35e95140 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35e951b8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd35e95568 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55dd35e95470 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55dd35e95630 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55dd35e95680 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd35e956d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35e90510 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55dd35e90718 prev 0x55dd35e90510 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35e91af0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55dd35e91a50 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55dd35e91a30 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55dd35e918e0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35e91700 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35e91250 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55dd35e91168 'sized_array_memory'
|-FieldDecl 0x55dd35e95720 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55dd35e95770 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35e957a8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55dd35e907b0 'Element *' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-PointerType 0x55dd35e4e8d0 'Element *'
|     `-RecordType 0x55dd35e4e650 'Element'
|       `-CXXRecord 0x55dd35e583a0 'Element'
|-TypedefDecl 0x55dd35e95868 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55dd35e95830 'Element *&'
|   `-SubstTemplateTypeParmType 0x55dd35e907b0 'Element *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e4e8d0 'Element *'
|       `-RecordType 0x55dd35e4e650 'Element'
|         `-CXXRecord 0x55dd35e583a0 'Element'
|-TypedefDecl 0x55dd35e95928 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55dd35e958f0 'Element *const &'
|   `-QualType 0x55dd35e907b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55dd35e907b0 'Element *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e4e8d0 'Element *'
|         `-RecordType 0x55dd35e4e650 'Element'
|           `-CXXRecord 0x55dd35e583a0 'Element'
|-TypedefDecl 0x55dd35e959e8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55dd35e959b0 'Element **'
|   `-SubstTemplateTypeParmType 0x55dd35e907b0 'Element *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e4e8d0 'Element *'
|       `-RecordType 0x55dd35e4e650 'Element'
|         `-CXXRecord 0x55dd35e583a0 'Element'
|-TypedefDecl 0x55dd35e95aa8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55dd35e95a70 'Element *const *'
|   `-QualType 0x55dd35e907b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55dd35e907b0 'Element *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e4e8d0 'Element *'
|         `-RecordType 0x55dd35e4e650 'Element'
|           `-CXXRecord 0x55dd35e583a0 'Element'
|-TypedefDecl 0x55dd35e96890 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55dd35e96840 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55dd35e96820 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55dd35e967b0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35e96570 'Element *' sugar
|       |-TemplateTypeParmType 0x55dd35bc7480 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bc7430 'T'
|       `-PointerType 0x55dd35e4e8d0 'Element *'
|         `-RecordType 0x55dd35e4e650 'Element'
|           `-CXXRecord 0x55dd35e583a0 'Element'
|-TypedefDecl 0x55dd35e968f8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55dd35e958f0 'Element *const &'
|   `-QualType 0x55dd35e907b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55dd35e907b0 'Element *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e4e8d0 'Element *'
|         `-RecordType 0x55dd35e4e650 'Element'
|           `-CXXRecord 0x55dd35e583a0 'Element'
|-TypedefDecl 0x55dd35e96950 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35e969b8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55dd35e959b0 'Element **'
|   `-SubstTemplateTypeParmType 0x55dd35e907b0 'Element *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e4e8d0 'Element *'
|       `-RecordType 0x55dd35e4e650 'Element'
|         `-CXXRecord 0x55dd35e583a0 'Element'
|-TypedefDecl 0x55dd35e96a20 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55dd35e95a70 'Element *const *'
|   `-QualType 0x55dd35e907b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55dd35e907b0 'Element *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e4e8d0 'Element *'
|         `-RecordType 0x55dd35e4e650 'Element'
|           `-CXXRecord 0x55dd35e583a0 'Element'
|-EnumDecl 0x55dd35e96a78 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35e96b70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35e96b50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35e96bf8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35e96e88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35e96cb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35e96d50 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55dd35e97148 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55dd35e97030 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55dd35e97408 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55dd35e972f0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55dd35e97750 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55dd35e97630 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55dd35e97a60 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55dd35e97940 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55dd35e97d50 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35e97b98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35e97c10 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55dd35e97ea8 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55dd35e97f88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e97fe0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e98028 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55dd35e980d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e98130 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e981f8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35e982a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e98300 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e98348 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35e983f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e98450 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e98498 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35e98548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e985a0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e985e8 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35e98698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e986f0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e98718 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35e987c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35e98878 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35e98a38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35e98928 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35e989a0 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55dd35e98b88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35e98af8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35e98d38 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55dd35e98c40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35e98df0 <col:20>
| `-OptimizeNoneAttr 0x55dd35e98e48 <col:30>
|-CXXMethodDecl 0x55dd35e98f68 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35e98e70 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35e99020 <col:20>
| `-OptimizeNoneAttr 0x55dd35e99078 <col:30>
|-CXXMethodDecl 0x55dd35e99130 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35e990a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35e99278 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35e991e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35e993a8 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55dd35e994d8 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55dd35e995a8 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55dd35e99678 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55dd35e997b8 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35e99728 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35e99900 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35e99870 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35e99a48 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35e999b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35e99b18 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35e99c18 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35e99b88 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35e99cd0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35e99d88 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55dd35e99e88 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55dd35e9a008 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35e99f48 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55dd35e9a7f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35e9a0c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55dd35e9a758 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55dd35e9a658 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55dd35e9a8d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35e9aa28 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35e9a998 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55dd35e9aae0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35e9ad28 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35e9aba0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55dd35e9ac18 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55dd35e9aee8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55dd35e9adf8 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55dd35e9b138 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55dd35e9afb0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55dd35e9b028 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55dd35e9b1f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35e9b458 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55dd35e9b360 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55dd35e9b528 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55dd35fd9b80 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35c2c240 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dd35c2c358 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55dd35c2c3f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55dd35c2c458 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd35c2c4b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55dd35c2c568 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35c2c870 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35c2c988 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55dd35c2ca30 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55dd35c2ca98 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55dd35c2cb28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55dd35c32bc0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd35c32ff8 <col:12>
|-CXXConstructorDecl 0x55dd35c32cc8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35c32dd8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dd35c2ca30 'data' 'const char *'
| | `-ImplicitCastExpr 0x55dd35c35580 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55dd35c35550 <col:12> 'const char *const' lvalue .data 0x55dd35c2ca30
| |     `-DeclRefExpr 0x55dd35c35530 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c32dd8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dd35c2ca98 'length' 'int'
| | `-ImplicitCastExpr 0x55dd35c35610 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55dd35c355e0 <col:12> 'const int' lvalue .length 0x55dd35c2ca98
| |     `-DeclRefExpr 0x55dd35c355c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c32dd8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dd35c2cb28 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55dd35c356a0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55dd35c35670 <col:12> 'String::memo_t *const' lvalue .memo 0x55dd35c2cb28
| |     `-DeclRefExpr 0x55dd35c35650 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c32dd8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55dd35c356f8 <col:12>
|-CXXConstructorDecl 0x55dd35c32e78 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dd35c32e78
| `-ParmVarDecl 0x55dd35c32f88 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55dd35c384e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd35c43ef8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35c44008 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55dd35c44520 <col:12>
|   |-BinaryOperator 0x55dd35c44338 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55dd35c442f0 <col:12> 'const char *' lvalue ->data 0x55dd35c2ca30
|   | | `-CXXThisExpr 0x55dd35c442e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dd35c44320 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55dd35c442b0 <col:12> 'const char *const' lvalue .data 0x55dd35c2ca30
|   |     `-DeclRefExpr 0x55dd35c44290 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c44008 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55dd35c44400 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55dd35c443b8 <col:12> 'int' lvalue ->length 0x55dd35c2ca98
|   | | `-CXXThisExpr 0x55dd35c443a8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dd35c443e8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55dd35c44378 <col:12> 'const int' lvalue .length 0x55dd35c2ca98
|   |     `-DeclRefExpr 0x55dd35c44358 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c44008 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55dd35c444c8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55dd35c44480 <col:12> 'String::memo_t *' lvalue ->memo 0x55dd35c2cb28
|   | | `-CXXThisExpr 0x55dd35c44470 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dd35c444b0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55dd35c44440 <col:12> 'String::memo_t *const' lvalue .memo 0x55dd35c2cb28
|   |     `-DeclRefExpr 0x55dd35c44420 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c44008 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55dd35c44510 <col:12>
|     `-UnaryOperator 0x55dd35c444f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd35c444e8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55dd35c44078 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dd35c44078
  `-ParmVarDecl 0x55dd35c44188 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35c237b0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35c238c8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55dd35c23958 <col:16, col:22> col:16 public
|-TypedefDecl 0x55dd35c23998 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55dd358f4dc0 'const char *'
|   `-QualType 0x55dd358f4311 'const char' const
|     `-BuiltinType 0x55dd358f4310 'char'
|-TypedefDecl 0x55dd35c23a20 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55dd35c239f0 'String::const_iterator' sugar
|   |-Typedef 0x55dd35c23998 'const_iterator'
|   `-PointerType 0x55dd358f4dc0 'const char *'
|     `-QualType 0x55dd358f4311 'const char' const
|       `-BuiltinType 0x55dd358f4310 'char'
|-TypedefDecl 0x55dd35c23b90 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55dd35c23b00 'int (String::*)() const'
|   |-RecordType 0x55dd35c23840 'String'
|   | `-CXXRecord 0x55dd35c237b0 'String'
|   `-ParenType 0x55dd35c23aa0 'int () const' sugar
|     `-FunctionProtoType 0x55dd35bf7630 'int () const' const cdecl
|       `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35c23bf8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55dd35a4c210 'int64_t' sugar
|   |-Typedef 0x55dd3595d2d0 'int64_t'
|   `-TypedefType 0x55dd359364d0 '__int64_t' sugar
|     |-Typedef 0x55dd359360a8 '__int64_t'
|     `-BuiltinType 0x55dd358f4390 'long'
|-TypedefDecl 0x55dd35c23c60 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55dd35a4c130 'uint64_t' sugar
|   |-Typedef 0x55dd3595d470 'uint64_t'
|   `-TypedefType 0x55dd35936560 '__uint64_t' sugar
|     |-Typedef 0x55dd35936118 '__uint64_t'
|     `-BuiltinType 0x55dd358f4430 'unsigned long'
|-TypedefDecl 0x55dd35c23cf0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55dd35c23cc0 'String::intmax_t' sugar
|   |-Typedef 0x55dd35c23bf8 'intmax_t'
|   `-TypedefType 0x55dd35a4c210 'int64_t' sugar
|     |-Typedef 0x55dd3595d2d0 'int64_t'
|     `-TypedefType 0x55dd359364d0 '__int64_t' sugar
|       |-Typedef 0x55dd359360a8 '__int64_t'
|       `-BuiltinType 0x55dd358f4390 'long'
|-TypedefDecl 0x55dd35c23d80 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55dd35c23d50 'String::uintmax_t' sugar
|   |-Typedef 0x55dd35c23c60 'uintmax_t'
|   `-TypedefType 0x55dd35a4c130 'uint64_t' sugar
|     |-Typedef 0x55dd3595d470 'uint64_t'
|     `-TypedefType 0x55dd35936560 '__uint64_t' sugar
|       |-Typedef 0x55dd35936118 '__uint64_t'
|       `-BuiltinType 0x55dd358f4430 'unsigned long'
|-CXXConstructorDecl 0x55dd35c23e40 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55dd35c23fe8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55dd35c23f28 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55dd35c24198 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55dd35c240d8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55dd35c242f0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55dd35c24260 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55dd35c24508 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55dd35c243b8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55dd35c24438 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55dd35c24728 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55dd35c245d8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55dd35c24658 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55dd35c24948 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55dd35c247f8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55dd35c24878 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55dd35c24b68 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55dd35c24a18 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55dd35c24a98 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55dd35c24cf8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55dd35c24c30 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55dd35c24e78 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55dd35c24db8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55dd35c25008 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55dd35c24f40 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55dd35c25160 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55dd35c250d0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55dd35c252b8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55dd35c25228 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55dd35c25410 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55dd35c25380 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55dd35c25598 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55dd35c254d8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55dd35c25728 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55dd35c25660 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55dd35c258b8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55dd35c257f0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55dd35c25a48 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55dd35c25980 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55dd35c25b40 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55dd35c25c68 <line:69:5, col:44> col:33 used make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55dd35c25de8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55dd35c25d20 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55dd35c25f38 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55dd35c25ea8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55dd35c25ff0 <col:63> "" ""
|-CXXMethodDecl 0x55dd35c26138 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55dd35c26078 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55dd35c26348 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55dd35c261f8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55dd35c26278 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55dd35c26568 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55dd35c26410 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55dd35c26490 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55dd35c26848 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55dd35c26628 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55dd35c266a8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55dd35c32690 <col:55> 'int' 10
| `-ParmVarDecl 0x55dd35c26720 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd35c326b0 <col:76> 'bool' true
|-CXXMethodDecl 0x55dd35c26b28 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55dd35c26910 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55dd35c26990 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55dd35c326c0 <col:56> 'int' 10
| `-ParmVarDecl 0x55dd35c26a08 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd35c326e0 <col:77> 'bool' true
|-CXXMethodDecl 0x55dd35c26c30 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55dd35c26cf8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55dd35c26dc0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55dd35c26e60 <col:20>
| `-OptimizeNoneAttr 0x55dd35c26eb8 <col:30>
|-CXXConversionDecl 0x55dd35c26fa8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55dd35c27078 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35c27138 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55dd35c27228 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55dd35c272e8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55dd35c27468 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55dd35c273a0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55dd35c275b8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55dd35c27528 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55dd35c276a8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55dd35c27768 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55dd35c279b8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55dd35c27820 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55dd35c278a0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55dd35c27c18 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55dd35c27a80 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55dd35c27b00 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55dd35c27ce8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35c27ef8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55dd35c27da0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55dd35c27e20 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55dd35c28118 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55dd35c27fc0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55dd35c28040 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55dd35c282a8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55dd35c281e0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55dd35c28398 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55dd35c28508 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55dd35c28448 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dd35c28718 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55dd35c285c8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55dd35c28648 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55dd35c28930 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55dd35c287d8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55dd35c28850 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55dd35c28ac0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55dd35c289f0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dd35c28ce0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55dd35c28b80 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55dd35c28c00 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55dd35c28e30 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55dd35c28da0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55dd35c29008 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55dd35c28ef0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55dd35c28f70 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55dd35c29158 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55dd35c290c8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55dd35c29370 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55dd35c29210 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55dd35c29290 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55dd35c326f0 <col:39> 'int' 0
|-CXXMethodDecl 0x55dd35c29590 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55dd35c29430 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55dd35c294b0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55dd35c32710 <col:48> 'int' 0
|-CXXMethodDecl 0x55dd35c29770 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55dd35c29650 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55dd35c296d0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55dd35c32730 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55dd35c29840 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55dd35c29900 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55dd35c299c0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55dd35c29a80 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55dd35c29b40 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55dd35c29ce8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55dd35c29bf0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55dd35c29e68 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55dd35c29da0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55dd35c2a040 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55dd35c29f28 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55dd35c2a1b8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55dd35c2a0f8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55dd35c2a300 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55dd35c2a270 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dd35c2a450 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55dd35c2a3c0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55dd35c2a628 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55dd35c2a510 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55dd35c2a590 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55dd35c2a808 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55dd35c2a6f0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55dd35c2a770 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55dd35c2a958 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55dd35c2a8c8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55dd35c2ab68 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55dd35c2aa18 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55dd35c2aa98 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55dd35c2acc8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55dd35c2ac30 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55dd35c2ae20 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55dd35c2ad88 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55dd35c2aec8 <col:57> "" ""
|-CXXMethodDecl 0x55dd35c2afd8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55dd35c2af48 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55dd35c2b128 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55dd35c2b098 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55dd35c2b2a8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55dd35c2b1e0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55dd35c2b370 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55dd35c2b430 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55dd35c2b4f0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55dd35c2b590 <col:49> "" ""
|-CXXMethodDecl 0x55dd35c2b620 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55dd35c2b6e0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55dd35c2b7d0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55dd35c2b898 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55dd35c2b958 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55dd35c2ba18 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55dd35c2bb10 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55dd35c2bbd8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55dd35c2bca0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55dd35c2be78 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55dd35c2bd58 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55dd35c2bdd8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55dd35c2c0a0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55dd35c2bf40 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55dd35c2bfc0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55dd35c2c1b0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55dd35c2c218 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd35c2c240 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd35c2c358 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55dd35c2c3f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55dd35c2c458 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55dd35c2c4b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55dd35c2c568 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55dd35c2c5d0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55dd35c2c808 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55dd35c2c858 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35c2c7e8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55dd35c2c6f8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55dd35c2c6a0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55dd35c2c6e0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55dd35c2c6c0 <col:32> 'int' 8
|-CXXRecordDecl 0x55dd35c2c870 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd35c2c988 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55dd35c2ca30 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55dd35c2ca98 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55dd35c2cb28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55dd35c32bc0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dd35c32ff8 <col:12>
| |-CXXConstructorDecl 0x55dd35c32cc8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd35c32dd8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dd35c2ca30 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55dd35c35580 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55dd35c35550 <col:12> 'const char *const' lvalue .data 0x55dd35c2ca30
| | |     `-DeclRefExpr 0x55dd35c35530 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c32dd8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dd35c2ca98 'length' 'int'
| | | `-ImplicitCastExpr 0x55dd35c35610 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55dd35c355e0 <col:12> 'const int' lvalue .length 0x55dd35c2ca98
| | |     `-DeclRefExpr 0x55dd35c355c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c32dd8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dd35c2cb28 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55dd35c356a0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55dd35c35670 <col:12> 'String::memo_t *const' lvalue .memo 0x55dd35c2cb28
| | |     `-DeclRefExpr 0x55dd35c35650 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c32dd8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55dd35c356f8 <col:12>
| |-CXXConstructorDecl 0x55dd35c32e78 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dd35c32e78
| | `-ParmVarDecl 0x55dd35c32f88 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55dd35c384e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55dd35c43ef8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd35c44008 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55dd35c44520 <col:12>
| |   |-BinaryOperator 0x55dd35c44338 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55dd35c442f0 <col:12> 'const char *' lvalue ->data 0x55dd35c2ca30
| |   | | `-CXXThisExpr 0x55dd35c442e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dd35c44320 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55dd35c442b0 <col:12> 'const char *const' lvalue .data 0x55dd35c2ca30
| |   |     `-DeclRefExpr 0x55dd35c44290 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c44008 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55dd35c44400 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55dd35c443b8 <col:12> 'int' lvalue ->length 0x55dd35c2ca98
| |   | | `-CXXThisExpr 0x55dd35c443a8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dd35c443e8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55dd35c44378 <col:12> 'const int' lvalue .length 0x55dd35c2ca98
| |   |     `-DeclRefExpr 0x55dd35c44358 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c44008 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55dd35c444c8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55dd35c44480 <col:12> 'String::memo_t *' lvalue ->memo 0x55dd35c2cb28
| |   | | `-CXXThisExpr 0x55dd35c44470 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dd35c444b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55dd35c44440 <col:12> 'String::memo_t *const' lvalue .memo 0x55dd35c2cb28
| |   |     `-DeclRefExpr 0x55dd35c44420 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd35c44008 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55dd35c44510 <col:12>
| |     `-UnaryOperator 0x55dd35c444f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55dd35c444e8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55dd35c44078 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dd35c44078
|   `-ParmVarDecl 0x55dd35c44188 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55dd35c2cba0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55dd35c2cde8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55dd35c2cc08 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55dd35c2cc88 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55dd35c2cd00 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55dd35c32b80 <col:79, line:261:5>
|   |-BinaryOperator 0x55dd35c327f8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55dd35c32790 <col:2, col:5> 'const char *' lvalue .data 0x55dd35c2ca30
|   | | `-MemberExpr 0x55dd35c32760 <col:2> 'String::rep_t' lvalue ->_r 0x55dd35c2cba0
|   | |   `-CXXThisExpr 0x55dd35c32750 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55dd35c327e0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd35c327c0 <col:12> 'const char *' lvalue ParmVar 0x55dd35c2cc08 'data' 'const char *'
|   |-BinaryOperator 0x55dd35c328c0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55dd35c32858 <col:2, col:5> 'int' lvalue .length 0x55dd35c2ca98
|   | | `-MemberExpr 0x55dd35c32828 <col:2> 'String::rep_t' lvalue ->_r 0x55dd35c2cba0
|   | |   `-CXXThisExpr 0x55dd35c32818 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55dd35c328a8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd35c32888 <col:14> 'int' lvalue ParmVar 0x55dd35c2cc88 'length' 'int'
|   `-IfStmt 0x55dd35c32b68 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55dd35c329e0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55dd35c329c8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55dd35c329a8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55dd35c32988 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55dd35c32920 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55dd35c2cb28
|     |       | `-MemberExpr 0x55dd35c328f0 <col:7> 'String::rep_t' lvalue ->_r 0x55dd35c2cba0
|     |       |   `-CXXThisExpr 0x55dd35c328e0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55dd35c32970 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55dd35c32950 <col:17> 'String::memo_t *' lvalue ParmVar 0x55dd35c2cd00 'memo' 'String::memo_t *'
|     `-CallExpr 0x55dd35c32b40 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55dd35c32b28 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35c32a30 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55dd35c1b818 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55dd35c32a98 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dd35c2c3f8
|         `-ImplicitCastExpr 0x55dd35c32a80 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55dd35c32a60 <col:27> 'String::memo_t *' lvalue ParmVar 0x55dd35c2cd00 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55dd35c2d098 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55dd35c2ceb8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55dd35c2cf38 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55dd35c2cfb0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55dd35c2cba0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55dd35c33008 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd35c33198 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55dd35c33100 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55dd35c33070 <col:2> '<bound member function type>' ->assign_memo 0x55dd35c2cde8
|     | `-ImplicitCastExpr 0x55dd35c33138 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55dd35c33060 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55dd35c33150 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd35c330a0 <col:14> 'const char *' lvalue ParmVar 0x55dd35c2ceb8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55dd35c33168 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd35c330c0 <col:20> 'int' lvalue ParmVar 0x55dd35c2cf38 'length' 'int'
|     `-ImplicitCastExpr 0x55dd35c33180 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35c330e0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55dd35c2cfb0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55dd35c2d228 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55dd35c2d168 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55dd35c333f0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55dd35c33370 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55dd35c331c0 <col:2> '<bound member function type>' ->assign_memo 0x55dd35c2cde8
|     | `-CXXThisExpr 0x55dd35c331b0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55dd35c333a8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55dd35c33240 <col:14, col:19> 'const char *' lvalue .data 0x55dd35c2ca30
|     |   `-MemberExpr 0x55dd35c33210 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55dd35c2cba0
|     |     `-DeclRefExpr 0x55dd35c331f0 <col:14> 'const String' lvalue ParmVar 0x55dd35c2d168 'x' 'const String &'
|     |-ImplicitCastExpr 0x55dd35c333c0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55dd35c332c0 <col:25, col:30> 'int' lvalue .length 0x55dd35c2ca98
|     |   `-MemberExpr 0x55dd35c33290 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55dd35c2cba0
|     |     `-DeclRefExpr 0x55dd35c33270 <col:25> 'const String' lvalue ParmVar 0x55dd35c2d168 'x' 'const String &'
|     `-ImplicitCastExpr 0x55dd35c333d8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55dd35c33340 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55dd35c2cb28
|         `-MemberExpr 0x55dd35c33310 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55dd35c2cba0
|           `-DeclRefExpr 0x55dd35c332f0 <col:38> 'const String' lvalue ParmVar 0x55dd35c2d168 'x' 'const String &'
|-CXXMethodDecl 0x55dd35c2d2f0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55dd35c33db0 <col:31, line:278:5>
|   `-IfStmt 0x55dd35c33d98 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55dd35c33490 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55dd35c33478 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55dd35c33448 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55dd35c2cb28
|     |     `-MemberExpr 0x55dd35c33418 <col:6> 'String::rep_t' lvalue ->_r 0x55dd35c2cba0
|     |       `-CXXThisExpr 0x55dd35c33408 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55dd35c33d70 <col:15, line:277:2>
|       |-ParenExpr 0x55dd35c33940 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55dd35c33910 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55dd35c335a0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55dd35c33588 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55dd35c33570 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55dd35c33530 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dd35c2c3f8
|       |   |       `-ImplicitCastExpr 0x55dd35c33518 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55dd35c334e8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55dd35c2cb28
|       |   |           `-MemberExpr 0x55dd35c334b8 <col:27> 'String::rep_t' lvalue ->_r 0x55dd35c2cba0
|       |   |             `-CXXThisExpr 0x55dd35c334a8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55dd35c33600 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55dd35c335e0 <col:54> 'int' 0
|       |   `-CallExpr 0x55dd35c33870 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55dd35c33858 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55dd35c337d8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55dd35c338b0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55dd35c336e8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55dd35c338c8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55dd35c33718 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55dd35c338e0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55dd35c33750 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55dd35c338f8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55dd35c337c0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55dd35c337a8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55dd35c33770 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55dd35c33c90 <line:274:6, line:275:22>
|       | |-CallExpr 0x55dd35c33b50 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55dd35c33b38 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55dd35c33ab0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55dd35c1cc60 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55dd35c33a80 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dd35c2c3f8
|       | |   `-ImplicitCastExpr 0x55dd35c33a68 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55dd35c33a38 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55dd35c2cb28
|       | |       `-MemberExpr 0x55dd35c33a08 <col:40> 'String::rep_t' lvalue ->_r 0x55dd35c2cba0
|       | |         `-CXXThisExpr 0x55dd35c339f8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55dd35c33c50 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55dd35c33c38 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55dd35c33b78 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55dd35c31ad0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55dd35c33c78 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55dd35c33bd8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55dd35c2cb28
|       |       `-MemberExpr 0x55dd35c33ba8 <col:15> 'String::rep_t' lvalue ->_r 0x55dd35c2cba0
|       |         `-CXXThisExpr 0x55dd35c33b98 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55dd35c33d50 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55dd35c33ce8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55dd35c2cb28
|         | `-MemberExpr 0x55dd35c33cb8 <col:6> 'String::rep_t' lvalue ->_r 0x55dd35c2cba0
|         |   `-CXXThisExpr 0x55dd35c33ca8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55dd35c33d38 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55dd35c33d18 <col:16> 'int' 0
|-CXXMethodDecl 0x55dd35c2d588 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55dd35c2d3a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55dd35c2d428 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55dd35c2d4a0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55dd35c2d660 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55dd35c2d8b0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55dd35c2d718 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55dd35c2d798 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55dd35c2d810 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55dd35c2da98 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55dd35c2d980 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55dd35c2da00 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55dd35c2db98 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55dd35c33e88 <col:41, line:286:5>
|   `-ReturnStmt 0x55dd35c33e78 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55dd35c33e48 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55dd35c33e10 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55dd35c33df8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55dd35c33dd8 <col:46> 'int' 1
|-CXXMethodDecl 0x55dd35c2de38 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55dd35c2dc50 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55dd35c2dcd0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55dd35c2dd50 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55dd35c31ad0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55dd35c2df00 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55dd35c31ba0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55dd35c31d70 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55dd35c31c58 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55dd35c31cd8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55dd35c31e30 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55dd35c31ef8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55dd35c31ff8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55dd35c32070 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55dd35c320e8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55dd35c32150 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55dd35c32250 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55dd35c322a0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35c32230 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55dd35c32210 <col:22> 'int' 14
|-CXXMethodDecl 0x55dd35c324b8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55dd35c322d0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55dd35c32350 <col:38> col:41 'int'
| `-ParmVarDecl 0x55dd35c323d0 <col:43> col:46 'int'
|-FriendDecl 0x55dd35c325c0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55dd35c32650 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35ed1e70 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55dd35ed2048 prev 0x55dd35ed1e70 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd35ed20d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd35ed2100 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35ed3a60 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55dd35ed3a10 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55dd35ed39f0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55dd35ed2318 'type'
|     `-SubstTemplateTypeParmType 0x55dd35ed22e0 'String' sugar
|       |-TemplateTypeParmType 0x55dd35be7050 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35be7000 'T'
|       `-RecordType 0x55dd35c23840 'String'
|         `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed3b18 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55dd35ed3ae0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55dd35ed3ac0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55dd35ed3a60 'type'
|     `-ElaboratedType 0x55dd35ed3a10 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55dd35ed39f0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55dd35ed2318 'type'
|         `-SubstTemplateTypeParmType 0x55dd35ed22e0 'String' sugar
|           |-TemplateTypeParmType 0x55dd35be7050 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd35be7000 'T'
|           `-RecordType 0x55dd35c23840 'String'
|             `-CXXRecord 0x55dd35c237b0 'String'
|-CXXMethodDecl 0x55dd35ed3c98 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55dd35ed3ba8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55dd35ed3d88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd35ed3e68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55dd35ed3e68
|-CXXMethodDecl 0x55dd35ed4138 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55dd35ed4040 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55dd35ed4378 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dd35ed41f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35ed4268 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd35ed4548 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dd35ed4438 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35ed44b0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd35ed46a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55dd35ed4778 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55dd35ed49c8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dd35ed4838 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55dd35ed48b0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd35ed4c28 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55dd35ed4a98 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55dd35ed4b10 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd35ed4de8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55dd35ed4cf8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd35ed4fa8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55dd35ed4eb0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd35ed5060 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35ed5110 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35ed5348 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dd35ed51c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35ed5238 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd35ed55e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55dd35ed54f0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55dd35ed56b0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55dd35ed5700 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd35ed5750 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35e5afe0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55dd35ed0b18 prev 0x55dd35e5afe0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35ed1de0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55dd35ed1d90 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55dd35ed1d70 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55dd35ed1c20 'type'
|     `-SubstTemplateTypeParmType 0x55dd35ed1ab0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55dd35bbce00 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55dd35bbcda8 'F'
|       `-RecordType 0x55dd35ed1710 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55dd35ed1630 'typed_array_memory'
|-FieldDecl 0x55dd35ed57a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55dd35ed57f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35ed5828 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55dd35ed0bb0 'String' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-RecordType 0x55dd35c23840 'String'
|     `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed58b8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55dd35ed5880 'String &'
|   `-SubstTemplateTypeParmType 0x55dd35ed0bb0 'String' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35c23840 'String'
|       `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed5948 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55dd35ed5910 'const String &'
|   `-QualType 0x55dd35ed0bb1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dd35ed0bb0 'String' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35c23840 'String'
|         `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed59d8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55dd35ed59a0 'String *'
|   `-SubstTemplateTypeParmType 0x55dd35ed0bb0 'String' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35c23840 'String'
|       `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed5a68 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55dd35ed5a30 'const String *'
|   `-QualType 0x55dd35ed0bb1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dd35ed0bb0 'String' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35c23840 'String'
|         `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed6720 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55dd35ed66d0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55dd35ed66b0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55dd35ed65e8 'type'
|     `-LValueReferenceType 0x55dd35ed65b0 'const String &'
|       `-QualType 0x55dd35ed6351 'const String' const
|         `-SubstTemplateTypeParmType 0x55dd35ed6350 'String' sugar
|           |-TemplateTypeParmType 0x55dd35bc6d50 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd35bc6cf8 'T'
|           `-RecordType 0x55dd35c23840 'String'
|             `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed6788 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55dd35ed5910 'const String &'
|   `-QualType 0x55dd35ed0bb1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dd35ed0bb0 'String' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35c23840 'String'
|         `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed67e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35ed6848 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55dd35ed59a0 'String *'
|   `-SubstTemplateTypeParmType 0x55dd35ed0bb0 'String' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35c23840 'String'
|       `-CXXRecord 0x55dd35c237b0 'String'
|-TypedefDecl 0x55dd35ed68b0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55dd35ed5a30 'const String *'
|   `-QualType 0x55dd35ed0bb1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dd35ed0bb0 'String' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35c23840 'String'
|         `-CXXRecord 0x55dd35c237b0 'String'
|-EnumDecl 0x55dd35ed6908 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35ed6a00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35ed69e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35ed6a88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35ed6d18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35ed6b40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35ed6be0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55dd35ed6fa8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55dd35ed6e90 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55dd35ed7268 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55dd35ed7150 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55dd35ed7580 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55dd35ed7460 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55dd35ed7890 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55dd35ed7770 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55dd35ed7b80 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35ed79c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35ed7a40 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dd35ed7ca8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55dd35ed7d58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ed7db0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ed7df8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55dd35ed7ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ed7f00 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ed7fc8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dd35ed8078 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ed80d0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ed8118 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dd35ed81c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ed8220 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ed8268 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dd35ed8318 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ed8370 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ed83b8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dd35ed8468 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ed84c0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ed84e8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35ed8598 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35ed8648 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35ed8808 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35ed86f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35ed8770 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dd35ed8958 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35ed88c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ed8b08 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55dd35ed8a10 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35ed8bc0 <col:20>
| `-OptimizeNoneAttr 0x55dd35ed8c18 <col:30>
|-CXXMethodDecl 0x55dd35ed8d38 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35ed8c40 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35ed8df0 <col:20>
| `-OptimizeNoneAttr 0x55dd35ed8e48 <col:30>
|-CXXMethodDecl 0x55dd35ed8f00 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35ed8e70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ed9048 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35ed8fb8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ed9178 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55dd35ed9278 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55dd35ed9348 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55dd35ed9418 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55dd35ed9558 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35ed94c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ed96a0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35ed9610 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ed97e8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35ed9758 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35ed98a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35ed99a0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35ed9910 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35ed9a58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35ed9b18 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55dd35ed9c18 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55dd35ed9d98 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35ed9cd8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55dd35eda528 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35ed9e50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55dd35eda488 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55dd35eda388 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55dd35eda608 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35eda758 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35eda6c8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dd35eda810 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35edaa58 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35eda8d0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55dd35eda948 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dd35edabe8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55dd35edab28 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55dd35edadf8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55dd35edacb0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55dd35edad28 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55dd35edaeb8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35edb118 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55dd35edb020 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55dd35edb1e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35edb1e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f67ed0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55dd35f680a8 prev 0x55dd35f67ed0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd35f68138 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd35f68160 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f70360 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55dd35f70310 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55dd35f68610 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55dd35f68510 'type'
|     `-TemplateSpecializationType 0x55dd35f684a0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55dd35f68380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55dd35f68360 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55dd35f68340 <col:24> 'unsigned long' 4
|       `-RecordType 0x55dd35f68480 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55dd35f683a0 'char_array'
|-TypedefDecl 0x55dd35f70418 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55dd35f703e0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55dd35f703c0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55dd35f70360 'type'
|     `-ElaboratedType 0x55dd35f70310 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55dd35f68610 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55dd35f68510 'type'
|         `-TemplateSpecializationType 0x55dd35f684a0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55dd35f68380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55dd35f68360 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55dd35f68340 <col:24> 'unsigned long' 4
|           `-RecordType 0x55dd35f68480 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55dd35f683a0 'char_array'
|-CXXMethodDecl 0x55dd35f70598 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55dd35f704a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55dd35f70688 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd35f70768 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55dd35f70768
|-CXXMethodDecl 0x55dd35f70a38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55dd35f70940 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55dd35f70c78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55dd35f70af0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f70b68 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55dd35f70e48 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55dd35f70d38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f70db0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55dd35f70fa8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55dd35f71078 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55dd35f712c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55dd35f71138 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55dd35f711b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55dd35f71528 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55dd35f71398 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55dd35f71410 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55dd35f716e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55dd35f715f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55dd35f718a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55dd35f717b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55dd35f71960 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f71a10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f71c48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55dd35f71ac0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f71b38 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55dd35f71ee8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55dd35f71df0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55dd35f71fb0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55dd35f72000 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd35f72050 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f66af0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55dd35f66cf8 prev 0x55dd35f66af0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35f67e40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55dd35f67df0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55dd35f67dd0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55dd35f67c80 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f67aa0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35f675f0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55dd35f67508 'sized_array_memory'
|-FieldDecl 0x55dd35f720a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55dd35f720f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35f72128 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55dd35f66d90 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-BuiltinType 0x55dd358f4410 'unsigned int'
|-TypedefDecl 0x55dd35f721b8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55dd35f72180 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55dd35f66d90 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-BuiltinType 0x55dd358f4410 'unsigned int'
|-TypedefDecl 0x55dd35f72278 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55dd35f72240 'const unsigned int &'
|   `-QualType 0x55dd35f66d91 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55dd35f66d90 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-BuiltinType 0x55dd358f4410 'unsigned int'
|-TypedefDecl 0x55dd35f72308 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55dd35f722d0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55dd35f66d90 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-BuiltinType 0x55dd358f4410 'unsigned int'
|-TypedefDecl 0x55dd35f72398 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55dd35f72360 'const unsigned int *'
|   `-QualType 0x55dd35f66d91 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55dd35f66d90 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-BuiltinType 0x55dd358f4410 'unsigned int'
|-TypedefDecl 0x55dd35f72f80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55dd35f72f30 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55dd35f72f10 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55dd35f72ea0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f72c60 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55dd35bc7480 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bc7430 'T'
|       `-BuiltinType 0x55dd358f4410 'unsigned int'
|-TypedefDecl 0x55dd35f72fe8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55dd35f72240 'const unsigned int &'
|   `-QualType 0x55dd35f66d91 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55dd35f66d90 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-BuiltinType 0x55dd358f4410 'unsigned int'
|-TypedefDecl 0x55dd35f73040 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f730a8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55dd35f722d0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55dd35f66d90 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-BuiltinType 0x55dd358f4410 'unsigned int'
|-TypedefDecl 0x55dd35f73110 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55dd35f72360 'const unsigned int *'
|   `-QualType 0x55dd35f66d91 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55dd35f66d90 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-BuiltinType 0x55dd358f4410 'unsigned int'
|-EnumDecl 0x55dd35f73168 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35f73260 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35f73240 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35f732e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35f73538 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f733a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f73440 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55dd35f737f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55dd35f736e0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55dd35f73ab8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55dd35f739a0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55dd35f73e00 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55dd35f73ce0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55dd35f74110 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55dd35f73ff0 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55dd35f74400 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f74248 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f742c0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55dd35f74528 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55dd35f74608 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f74660 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f746a8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55dd35f74758 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f747b0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f74848 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f748f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f74950 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f74998 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f74a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f74aa0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f74ae8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f74b98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f74bf0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f74c38 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f74ce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f74d40 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f74d68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f74e18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f74ec8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35f75088 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f74f78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f74ff0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55dd35f751d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f75148 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f75388 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55dd35f75290 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f75440 <col:20>
| `-OptimizeNoneAttr 0x55dd35f75498 <col:30>
|-CXXMethodDecl 0x55dd35f755b8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35f754c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f75670 <col:20>
| `-OptimizeNoneAttr 0x55dd35f756c8 <col:30>
|-CXXMethodDecl 0x55dd35f75780 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f756f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f758c8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f75838 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f759f8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55dd35f75b28 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55dd35f75bf8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55dd35f75cc8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55dd35f75e08 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f75d78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f75f50 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f75ec0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f76098 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35f76008 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f76150 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35f76250 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35f761c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f76308 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35f763c8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55dd35f764c8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55dd35f76648 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f76588 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55dd35f76e08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35f76700 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55dd35f76d68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55dd35f76c68 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55dd35f76ee8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f77038 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f76fa8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55dd35f770f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35f77338 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f771b0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55dd35f77228 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55dd35f774f8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55dd35f77408 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55dd35f786d8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55dd35f775c0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55dd35f77638 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55dd35f78798 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f789f8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55dd35f78900 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55dd35f78ac8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35f78ac8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f5ed28 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55dd35f78d28 prev 0x55dd35f5ed28 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35f79d40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55dd35f79cf0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55dd35f79cd0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55dd35f79b80 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f67aa0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35f675f0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55dd35f67508 'sized_array_memory'
|-FieldDecl 0x55dd35f79e40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55dd35f79e90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35f79ec8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55dd35f78dc0 'int' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f79f58 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55dd35f79f20 'int &'
|   `-SubstTemplateTypeParmType 0x55dd35f78dc0 'int' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f7a018 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55dd35f79fe0 'const int &'
|   `-QualType 0x55dd35f78dc1 'const int' const
|     `-SubstTemplateTypeParmType 0x55dd35f78dc0 'int' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f7a0a8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55dd35f7a070 'int *'
|   `-SubstTemplateTypeParmType 0x55dd35f78dc0 'int' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f7a138 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55dd35f7a100 'const int *'
|   `-QualType 0x55dd35f78dc1 'const int' const
|     `-SubstTemplateTypeParmType 0x55dd35f78dc0 'int' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f7ad20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55dd35f7acd0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55dd35f7acb0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55dd35f7ac40 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f7aa00 'int' sugar
|       |-TemplateTypeParmType 0x55dd35bc7480 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bc7430 'T'
|       `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f7ad88 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55dd35f79fe0 'const int &'
|   `-QualType 0x55dd35f78dc1 'const int' const
|     `-SubstTemplateTypeParmType 0x55dd35f78dc0 'int' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f7ade0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f7ae48 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55dd35f7a070 'int *'
|   `-SubstTemplateTypeParmType 0x55dd35f78dc0 'int' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f7aeb0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55dd35f7a100 'const int *'
|   `-QualType 0x55dd35f78dc1 'const int' const
|     `-SubstTemplateTypeParmType 0x55dd35f78dc0 'int' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-BuiltinType 0x55dd358f4370 'int'
|-EnumDecl 0x55dd35f7af08 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35f7b000 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35f7afe0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35f7b088 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35f7b2d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f7b140 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f7b1e0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55dd35f7b598 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55dd35f7b480 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55dd35f7b858 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55dd35f7b740 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55dd35f7bb70 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55dd35f7ba50 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55dd35f7be80 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55dd35f7bd60 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55dd35f7c170 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f7bfb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f7c030 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55dd35f7c298 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55dd35f7c378 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f7c3d0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f7c418 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55dd35f7c4c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f7c520 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f7c5e8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f7c698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f7c6f0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f7c738 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f7c7e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f7c840 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f7c888 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f7c938 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f7c990 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f7c9d8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f7ca88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f7cae0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f7cb08 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f7cbb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f7cc68 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35f7ce28 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f7cd18 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f7cd90 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55dd35f7cf78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f7cee8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f7d128 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55dd35f7d030 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f7d1e0 <col:20>
| `-OptimizeNoneAttr 0x55dd35f7d238 <col:30>
|-CXXMethodDecl 0x55dd35f7d358 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35f7d260 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f7d410 <col:20>
| `-OptimizeNoneAttr 0x55dd35f7d468 <col:30>
|-CXXMethodDecl 0x55dd35f7d520 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f7d490 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f7d668 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f7d5d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f7d798 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55dd35f7d8c8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55dd35f7d998 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55dd35f7da68 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55dd35f7dba8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f7db18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f7dcf0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f7dc60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f7de38 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35f7dda8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f7def0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35f7dff0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35f7df60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f7e0a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35f7e168 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55dd35f7e268 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55dd35f7e3e8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f7e328 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55dd35f7eba8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35f7e4a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55dd35f7eb08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55dd35f7ea08 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55dd35f7ec88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f7edd8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f7ed48 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55dd35f7ee90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35f7f0d8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f7ef50 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55dd35f7efc8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55dd35f7f298 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55dd35f7f1a8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55dd35f7f4e8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55dd35f7f360 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55dd35f7f3d8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55dd35f7f5a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f7f808 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55dd35f7f710 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55dd35f7f8d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35f7f8d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35f7fa10 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55dd35f7fb28 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55dd35f7fbc8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd35f7fc28 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55dd35f7fcc0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55dd35f7fcc0
| `-ParmVarDecl 0x55dd35f7fdd8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55dd35f7fe78 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55dd35f7fe78
| `-ParmVarDecl 0x55dd35f7ff88 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55dd35f80028 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55dd35f80028
| `-ParmVarDecl 0x55dd35f80138 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55dd35f801a8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55dd35f801a8
| `-ParmVarDecl 0x55dd35f802b8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55dd35f80340 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55dd35f80340

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f85b90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55dd35f85d68 prev 0x55dd35f85b90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd35f85df8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd35f85e20 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f877e0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55dd35f87790 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55dd35f87770 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55dd35f86038 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f86000 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55dd35be7050 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35be7000 'T'
|       `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|         `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f87898 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55dd35f87860 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55dd35f87840 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55dd35f877e0 'type'
|     `-ElaboratedType 0x55dd35f87790 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55dd35f87770 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55dd35f86038 'type'
|         `-SubstTemplateTypeParmType 0x55dd35f86000 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55dd35be7050 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd35be7000 'T'
|           `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|             `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-CXXMethodDecl 0x55dd35f87a18 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55dd35f87928 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55dd35f87b08 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd35f87be8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55dd35f87be8
|-CXXMethodDecl 0x55dd35f87eb8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55dd35f87dc0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55dd35f880f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55dd35f87f70 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f87fe8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55dd35f882c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55dd35f881b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f88230 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55dd35f88428 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55dd35f884f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55dd35f88748 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55dd35f885b8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55dd35f88630 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55dd35f889a8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55dd35f88818 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55dd35f88890 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55dd35f88b68 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55dd35f88a78 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55dd35f88d28 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55dd35f88c30 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55dd35f88de0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f88e90 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f890c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55dd35f88f40 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f88fb8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55dd35f89368 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55dd35f89270 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55dd35f89430 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55dd35f89480 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd35f894d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f80430 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55dd35f84900 prev 0x55dd35f80430 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35f85b00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55dd35f85ab0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55dd35f85a90 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55dd35f85940 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f857d0 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55dd35bbce00 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55dd35bbcda8 'F'
|       `-RecordType 0x55dd35f85430 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55dd35f85350 'typed_array_memory'
|-FieldDecl 0x55dd35f89520 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55dd35f89570 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35f895a8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55dd35f84990 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|     `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f89638 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55dd35f89600 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55dd35f84990 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|       `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f896c8 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55dd35f89690 'const Router::element_landmark_t &'
|   `-QualType 0x55dd35f84991 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55dd35f84990 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|         `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f89758 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55dd35f89720 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55dd35f84990 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|       `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f897e8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55dd35f897b0 'const Router::element_landmark_t *'
|   `-QualType 0x55dd35f84991 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55dd35f84990 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|         `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f8a440 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55dd35f8a3f0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55dd35f8a3d0 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55dd35f8a308 'type'
|     `-LValueReferenceType 0x55dd35f8a2d0 'const Router::element_landmark_t &'
|       `-QualType 0x55dd35f8a071 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55dd35f8a070 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55dd35bc6d50 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd35bc6cf8 'T'
|           `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|             `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f8a4a8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55dd35f89690 'const Router::element_landmark_t &'
|   `-QualType 0x55dd35f84991 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55dd35f84990 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|         `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f8a500 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f8a568 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55dd35f89720 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55dd35f84990 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|       `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-TypedefDecl 0x55dd35f8a5d0 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55dd35f897b0 'const Router::element_landmark_t *'
|   `-QualType 0x55dd35f84991 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55dd35f84990 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f7faa0 'Router::element_landmark_t'
|         `-CXXRecord 0x55dd35f7fa10 'element_landmark_t'
|-EnumDecl 0x55dd35f8a628 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35f8a720 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35f8a700 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35f8a7a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35f8aa38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f8a860 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f8a900 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55dd35f8acf8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55dd35f8abe0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55dd35f8afb8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55dd35f8aea0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55dd35f8b300 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55dd35f8b1e0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55dd35f8b610 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55dd35f8b4f0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55dd35f8b900 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f8b748 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f8b7c0 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55dd35f8ba28 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55dd35f8bb08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f8bb60 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f8bba8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55dd35f8bc58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f8bcb0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f8bd78 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f8be28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f8be80 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f8bec8 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f8bf78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f8bfd0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f8c018 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f8c0c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f8c120 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f8c168 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f8c218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f8c270 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f8c298 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f8c348 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f8c3f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35f8c5b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f8c4a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f8c520 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55dd35f8c708 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f8c678 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f8cd20 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55dd35f8c7c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f8cdd8 <col:20>
| `-OptimizeNoneAttr 0x55dd35f8ce30 <col:30>
|-CXXMethodDecl 0x55dd35f8cf48 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35f8ce58 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f8d000 <col:20>
| `-OptimizeNoneAttr 0x55dd35f8d058 <col:30>
|-CXXMethodDecl 0x55dd35f8d110 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f8d080 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f8d258 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f8d1c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f8d388 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55dd35f8d4b8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55dd35f8d588 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55dd35f8d658 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55dd35f8d798 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f8d708 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f8d8e0 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f8d850 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f8da28 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35f8d998 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f8dae0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35f8dbe0 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35f8db50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f8dc98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35f8dd58 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55dd35f8de58 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55dd35f8dfd8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f8df18 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55dd35f8e768 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35f8e090 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55dd35f8e6c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55dd35f8e5c8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55dd35f8e848 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f8e998 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f8e908 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55dd35f8ea50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35f8ec98 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f8eb10 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55dd35f8eb88 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55dd35f8ee28 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55dd35f8ed68 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55dd35f8f038 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55dd35f8eef0 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55dd35f8ef68 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55dd35f8f0f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f8f358 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55dd35f8f260 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55dd35f8f428 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35f8f428

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35eef610 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55dd35eef7e8 prev 0x55dd35eef610 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd35eef878 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd35eef8a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35ef1470 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55dd35ef1420 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55dd35eefd50 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55dd35eefc50 'type'
|     `-TemplateSpecializationType 0x55dd35eefbe0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55dd35eefac0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55dd35eefaa0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55dd35eefa80 <col:24> 'unsigned long' 16
|       `-RecordType 0x55dd35eefbc0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55dd35eefae0 'char_array'
|-TypedefDecl 0x55dd35ef1528 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55dd35ef14f0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55dd35ef14d0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55dd35ef1470 'type'
|     `-ElaboratedType 0x55dd35ef1420 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55dd35eefd50 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55dd35eefc50 'type'
|         `-TemplateSpecializationType 0x55dd35eefbe0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55dd35eefac0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55dd35eefaa0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55dd35eefa80 <col:24> 'unsigned long' 16
|           `-RecordType 0x55dd35eefbc0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55dd35eefae0 'char_array'
|-CXXMethodDecl 0x55dd35ef16a8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55dd35ef15b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55dd35ef1798 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd35ef1878 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55dd35ef1878
|-CXXMethodDecl 0x55dd35ef1b48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55dd35ef1a50 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55dd35ef1d88 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55dd35ef1c00 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35ef1c78 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55dd35ef1f58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55dd35ef1e48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35ef1ec0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55dd35ef20b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55dd35ef2188 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55dd35ef23d8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55dd35ef2248 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55dd35ef22c0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55dd35ef2638 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55dd35ef24a8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55dd35ef2520 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55dd35ef27f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55dd35ef2708 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55dd35ef29b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55dd35ef28c0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55dd35ef2a70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35ef2b20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35ef2d58 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55dd35ef2bd0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35ef2c48 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55dd35ef2ff8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55dd35ef2f00 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55dd35ef30c0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55dd35ef3110 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd35ef3160 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f8fb40 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55dd35f8fd48 prev 0x55dd35f8fb40 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35f90e10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55dd35f90dc0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55dd35f90da0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55dd35f90c50 'type'
|     `-SubstTemplateTypeParmType 0x55dd35eef1e0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35eeed30 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55dd35eeec48 'sized_array_memory'
|-FieldDecl 0x55dd35f90f10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55dd35f90f60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35f90f98 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55dd35f8fde0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-RecordType 0x55dd35f64f90 'Router::Connection'
|     `-CXXRecord 0x55dd35f64f00 'Connection'
|-TypedefDecl 0x55dd35f91058 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55dd35f91020 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55dd35f8fde0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f64f90 'Router::Connection'
|       `-CXXRecord 0x55dd35f64f00 'Connection'
|-TypedefDecl 0x55dd35f910e8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55dd35f910b0 'const Router::Connection &'
|   `-QualType 0x55dd35f8fde1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55dd35f8fde0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f64f90 'Router::Connection'
|         `-CXXRecord 0x55dd35f64f00 'Connection'
|-TypedefDecl 0x55dd35f91178 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55dd35f91140 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55dd35f8fde0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f64f90 'Router::Connection'
|       `-CXXRecord 0x55dd35f64f00 'Connection'
|-TypedefDecl 0x55dd35f91208 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55dd35f911d0 'const Router::Connection *'
|   `-QualType 0x55dd35f8fde1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55dd35f8fde0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f64f90 'Router::Connection'
|         `-CXXRecord 0x55dd35f64f00 'Connection'
|-TypedefDecl 0x55dd35f91e60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55dd35f91e10 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55dd35f91df0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55dd35f91d28 'type'
|     `-LValueReferenceType 0x55dd35f91cf0 'const Router::Connection &'
|       `-QualType 0x55dd35f91a91 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55dd35f91a90 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55dd35bc6d50 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd35bc6cf8 'T'
|           `-RecordType 0x55dd35f64f90 'Router::Connection'
|             `-CXXRecord 0x55dd35f64f00 'Connection'
|-TypedefDecl 0x55dd35f91ec8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55dd35f910b0 'const Router::Connection &'
|   `-QualType 0x55dd35f8fde1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55dd35f8fde0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f64f90 'Router::Connection'
|         `-CXXRecord 0x55dd35f64f00 'Connection'
|-TypedefDecl 0x55dd35f91f20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f91f88 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55dd35f91140 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55dd35f8fde0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f64f90 'Router::Connection'
|       `-CXXRecord 0x55dd35f64f00 'Connection'
|-TypedefDecl 0x55dd35f91ff0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55dd35f911d0 'const Router::Connection *'
|   `-QualType 0x55dd35f8fde1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55dd35f8fde0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f64f90 'Router::Connection'
|         `-CXXRecord 0x55dd35f64f00 'Connection'
|-EnumDecl 0x55dd35f92048 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35f92140 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35f92120 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35f921c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35f92458 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f92280 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f92320 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55dd35f92718 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55dd35f92600 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55dd35f929d8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55dd35f928c0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55dd35f92d20 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55dd35f92c00 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55dd35f93030 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55dd35f92f10 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55dd35f93320 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f93168 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f931e0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55dd35f93478 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55dd35f93558 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f935b0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f935f8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55dd35f936a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f93700 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f937c8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f93878 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f938d0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f93918 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f939c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f93a20 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f93a68 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f93b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f93b70 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f93bb8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f93c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f93cc0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f93ce8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f93d98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f93e48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35f94008 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f93ef8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f93f70 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55dd35f94158 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f940c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f94308 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55dd35f94210 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f943c0 <col:20>
| `-OptimizeNoneAttr 0x55dd35f94418 <col:30>
|-CXXMethodDecl 0x55dd35f94538 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35f94440 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f945f0 <col:20>
| `-OptimizeNoneAttr 0x55dd35f94648 <col:30>
|-CXXMethodDecl 0x55dd35f94700 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f94670 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f94848 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f947b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f94978 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55dd35f94aa8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55dd35f94b78 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55dd35f94c48 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55dd35f95eb0 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f95e20 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f95ff8 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f95f68 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f96140 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35f960b0 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f961f8 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35f962f8 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35f96268 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f963b0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35f96468 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55dd35f96568 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55dd35f96718 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f96628 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55dd35f96ed8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35f967d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55dd35f96e38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55dd35f96d38 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55dd35f96fb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f97108 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f97078 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55dd35f971c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35f97408 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f97280 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55dd35f972f8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55dd35f975c8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55dd35f974d8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55dd35f97818 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55dd35f97690 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55dd35f97708 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55dd35f978d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f97b38 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55dd35f97a40 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55dd35f97c08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35f97c08

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35fb1d60 prev 0x55dd35ea30b8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35fb1e58 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55dd35fb1ee8 <col:22, col:28> col:22 public
|-EnumDecl 0x55dd35fb1f10 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55dd35fb2028 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb2008 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55dd35fb1ff0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd35fb1fd0 <col:14> 'int' 999
| |-EnumConstantDecl 0x55dd35fb20d0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb20b0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55dd35fb2098 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd35fb2078 <col:14> 'int' 1
| |-EnumConstantDecl 0x55dd35fb2160 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb2140 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55dd35fb2120 <col:17> 'int' 0
| |-EnumConstantDecl 0x55dd35fb21f0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb21d0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55dd35fb21b0 <col:13> 'int' 1
| |-EnumConstantDecl 0x55dd35fb2280 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb2260 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55dd35fb2240 <col:16> 'int' 2
| |-EnumConstantDecl 0x55dd35fb2310 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb22f0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55dd35fb22d0 <col:13> 'int' 3
| |-EnumConstantDecl 0x55dd35fb23a0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb2380 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55dd35fb2360 <col:15> 'int' 4
| |-EnumConstantDecl 0x55dd35fb2430 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb2410 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55dd35fb23f0 <col:14> 'int' 5
| |-EnumConstantDecl 0x55dd35fb24c0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd35fb24a0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55dd35fb2480 <col:12> 'int' 6
| `-EnumConstantDecl 0x55dd35fb2550 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55dd35fb2530 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55dd35fb2510 <col:13> 'int' 7
|-VarDecl 0x55dd35fb25c0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55dd35fb2648 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55dd35fb26d0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55dd35fb2758 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55dd35fb27e0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55dd35fb2868 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55dd35fb28f0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55dd35fb2978 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55dd35fb2a00 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55dd35fb2a88 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55dd35fb2b10 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55dd35fb2c10 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55dd35fb8f98 '_nerrors' 'int'
| | `-IntegerLiteral 0x55dd35fb9728 <line:128:13> 'int' 0
| `-CompoundStmt 0x55dd35fb9798 <col:16, line:129:5>
|-CXXDestructorDecl 0x55dd35fb2d00 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55dd35fb97a8 <col:29, line:132:5>
|-CXXMethodDecl 0x55dd35fb2eb8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55dd35fb2df0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fb2f80 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55dd35fb3068 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55dd35fb9800 <col:44, line:161:5>
|   `-ReturnStmt 0x55dd35fb97f0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55dd35fb97d8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35fb97b8 <col:9> 'ErrorHandler *' lvalue Var 0x55dd35fb8ff8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fb31a8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55dd35fb3118 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fb3270 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55dd35fb9860 <col:43, line:173:5>
|   `-ReturnStmt 0x55dd35fb9850 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55dd35fb9838 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35fb9818 <col:9> 'ErrorHandler *' lvalue Var 0x55dd35fb9070 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55dd35fb3328 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55dd35fb43e0 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55dd35fb44f0 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55dd35fb4460 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb4640 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55dd35fb45b0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb4798 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55dd35fb4700 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb48f0 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55dd35fb4858 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb4a48 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55dd35fb49b0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb4c60 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd35fb4b00 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55dd35fb4b80 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb4e38 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd35fb4d20 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55dd35fb4da0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb5058 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd35fb4ef8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55dd35fb4f78 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb5238 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd35fb5118 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55dd35fb5198 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb5418 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd35fb52f8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55dd35fb5378 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb55a0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55dd35fb54d8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55dd35fb5770 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55dd35fb5658 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55dd35fb56d0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55dd35fb9ab8 <col:57, line:234:5>
|   `-ReturnStmt 0x55dd35fb9aa8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55dd35fb9a90 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55dd35fb9a38 <col:9, col:41> 'int'
|         |-MemberExpr 0x55dd35fb9a08 <col:9> '<bound member function type>' ->xmessage 0x55dd35fb55a0
|         | `-CXXThisExpr 0x55dd35fb99f8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55dd35fb9a78 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55dd35fb9a60 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55dd35fb99d8 <col:18, col:40> 'String' (CXXTemporary 0x55dd35fb99d8)
|               `-CallExpr 0x55dd35fb99a0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55dd35fb9988 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55dd35fb9900 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55dd35fb77c8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55dd35fb9920 <col:31> 'const String' lvalue ParmVar 0x55dd35fb56d0 'str' 'const String &'
|                 `-DeclRefExpr 0x55dd35fb9940 <col:36> 'const String' lvalue ParmVar 0x55dd35fb5658 'anno' 'const String &'
|-CXXMethodDecl 0x55dd35fb5ab0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55dd35fb5830 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55dd35fb58b0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55dd35fb5980 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55dd35fb9d48 <col:68, line:243:5>
|   `-ReturnStmt 0x55dd35fb9d38 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55dd35fb9d20 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55dd35fb9cc0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55dd35fb9c90 <col:9> '<bound member function type>' ->xmessage 0x55dd35fb5770
|         | `-CXXThisExpr 0x55dd35fb9c80 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55dd35fb9b58 <col:18> 'const String' lvalue ParmVar 0x55dd35fb5830 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55dd35fb9d08 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55dd35fb9cf0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55dd35fb9c60 <col:24, col:40> 'String' (CXXTemporary 0x55dd35fb9c60)
|               `-CXXMemberCallExpr 0x55dd35fb9bf8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55dd35fb9b88 <col:24> '<bound member function type>' ->vformat 0x55dd35fb6c90
|                 | `-CXXThisExpr 0x55dd35fb9b78 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55dd35fb9c28 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55dd35fb9bb8 <col:32> 'const char *' lvalue ParmVar 0x55dd35fb58b0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55dd35fb9c40 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55dd35fb9bd8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55dd35fb5980 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd35fb5d50 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55dd35fb5b78 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55dd35fb5bf0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55dd35fb5c68 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55dd35fba088 <col:23, line:254:5>
|   `-ReturnStmt 0x55dd35fba078 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55dd35fba060 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55dd35fba000 <col:9, col:71> 'int'
|         |-MemberExpr 0x55dd35fb9fd0 <col:9> '<bound member function type>' ->xmessage 0x55dd35fb5770
|         | `-CXXThisExpr 0x55dd35fb9fc0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55dd35fba048 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55dd35fba030 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55dd35fb9f80 <col:18, col:65> 'String' (CXXTemporary 0x55dd35fb9f80)
|         |     `-CallExpr 0x55dd35fb9f18 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55dd35fb9f00 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55dd35fb9de8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55dd35fb77c8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55dd35fb9e08 <col:31> 'const String' lvalue ParmVar 0x55dd35fb5bf0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55dd35fb9f60 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55dd35fb9f48 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55dd35fb9ee0 <col:37, col:64> 'String' (CXXTemporary 0x55dd35fb9ee0)
|         |             `-CallExpr 0x55dd35fb9eb0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55dd35fb9e98 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55dd35fb9e28 <col:37> 'String (const String &)' lvalue CXXMethod 0x55dd35fb7e18 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55dd35fb9e48 <col:56> 'const String' lvalue ParmVar 0x55dd35fb5b78 'landmark' 'const String &'
|         `-DeclRefExpr 0x55dd35fb9fa0 <col:68> 'const String' lvalue ParmVar 0x55dd35fb5c68 'str' 'const String &'
|-CXXMethodDecl 0x55dd35fb60d0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55dd35fb5e18 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55dd35fb5e90 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55dd35fb5f10 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55dd35fb5f88 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55dd35fba340 <col:34, line:267:5>
|   `-ReturnStmt 0x55dd35fba330 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55dd35fba318 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55dd35fba2b0 <col:9, col:51> 'int'
|         |-MemberExpr 0x55dd35fba280 <col:9> '<bound member function type>' ->xmessage 0x55dd35fb5d50
|         | `-CXXThisExpr 0x55dd35fba270 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55dd35fba128 <col:18> 'const String' lvalue ParmVar 0x55dd35fb5e18 'landmark' 'const String &'
|         |-DeclRefExpr 0x55dd35fba148 <col:28> 'const String' lvalue ParmVar 0x55dd35fb5e90 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55dd35fba300 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55dd35fba2e8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55dd35fba250 <col:34, col:50> 'String' (CXXTemporary 0x55dd35fba250)
|               `-CXXMemberCallExpr 0x55dd35fba1e8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55dd35fba178 <col:34> '<bound member function type>' ->vformat 0x55dd35fb6c90
|                 | `-CXXThisExpr 0x55dd35fba168 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55dd35fba218 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55dd35fba1a8 <col:42> 'const char *' lvalue ParmVar 0x55dd35fb5f10 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55dd35fba230 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55dd35fba1c8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55dd35fb5f88 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd35fb61e0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55dd35fba3c0 <col:25, line:288:5>
|   `-ReturnStmt 0x55dd35fba3b0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55dd35fba398 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55dd35fba368 <col:9> 'const int' lvalue ->_nerrors 0x55dd35fb8f98
|         `-CXXThisExpr 0x55dd35fba358 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55dd35fb63f0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55dd35fb6298 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55dd35fb6318 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb66d8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55dd35fb64b8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55dd35fb6538 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55dd35fb65b0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd35fb6870 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55dd35fb67a8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb6ab8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55dd35fb6930 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55dd35fb69a8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55dd35fba620 <col:58, line:357:5>
|   `-ReturnStmt 0x55dd35fba610 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55dd35fba5f8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55dd35fba5c8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55dd35fba5b0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55dd35fba590 <col:9, col:29> 'String' (CXXTemporary 0x55dd35fba590)
|             `-CallExpr 0x55dd35fba520 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55dd35fba508 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd35fba488 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55dd35fb66d8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55dd35fba428 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55dd35fba558 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55dd35fba448 <col:21> 'const char *' lvalue ParmVar 0x55dd35fb6930 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55dd35fba570 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd35fba468 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55dd35fb69a8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd35fb6c90 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55dd35fb6b80 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55dd35fb6bf8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd35fb6de8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55dd35fb6d58 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55dd35fb6f30 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55dd35fb6ea0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55dd35fb71d0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55dd35fb6fe8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55dd35fb7068 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55dd35fb70e0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55dd35fb7330 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55dd35fb72a0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55dd35fba738 <col:37, line:441:5>
|   `-IfStmt 0x55dd35fba720 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55dd35fba6a8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55dd35fba678 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55dd35fba638 <col:6> 'int' lvalue ParmVar 0x55dd35fb72a0 'level' 'int'
|     | `-ImplicitCastExpr 0x55dd35fba690 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55dd35fba658 <col:15> 'ErrorHandler::Level' EnumConstant 0x55dd35fb2310 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55dd35fba708 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55dd35fba6d8 <col:8> 'int' lvalue ->_nerrors 0x55dd35fb8f98
|         `-CXXThisExpr 0x55dd35fba6c8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55dd35fb73f8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55dd35fba7d0 <col:26, line:448:5>
|   `-BinaryOperator 0x55dd35fba7b0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55dd35fba760 <col:2> 'int' lvalue ->_nerrors 0x55dd35fb8f98
|     | `-CXXThisExpr 0x55dd35fba750 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55dd35fba790 <col:13> 'int' 0
|-CXXMethodDecl 0x55dd35fb75c0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55dd35fb74b0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55dd35fb7528 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55dd35fb77c8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55dd35fb7680 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55dd35fb76f8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55dd35fb7a78 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55dd35fb7888 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55dd35fb7908 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55dd35fb7988 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55dd35fb7b30 <col:59> 0 0
|-CXXMethodDecl 0x55dd35fb7cc8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55dd35fb7ba8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55dd35fb7c28 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55dd35fbae40 <col:70, line:534:5>
|   |-DeclStmt 0x55dd35fba940 <line:528:2, col:20>
|   | |-VarDecl 0x55dd35fba7f8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55dd35fba860 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55dd35fba898 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55dd35fba900 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55dd35fbaa10 <line:529:2, col:23>
|   | `-VarDecl 0x55dd35fba970 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55dd35fba9f8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55dd35fba9d8 <col:18> 'const char *' lvalue ParmVar 0x55dd35fb7ba8 'begin' 'const char *'
|   |-DoStmt 0x55dd35fbadd8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55dd35fbad08 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55dd35fbacf0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55dd35fbacd0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55dd35fbaa28 <col:6> 'const char *' lvalue Var 0x55dd35fba970 'x' 'const char *'
|   | |     `-CallExpr 0x55dd35fbac20 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55dd35fbac08 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55dd35fbabc0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55dd35fb9470 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55dd35fbac88 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55dd35fbac70 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55dd35fbaae0 <col:20, col:27> 'String' (CXXTemporary 0x55dd35fbaae0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55dd35fbaaa8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55dd35fbaca0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55dd35fbab00 <col:30> 'const char *' lvalue Var 0x55dd35fba970 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55dd35fbacb8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55dd35fbab20 <col:33> 'const char *' lvalue ParmVar 0x55dd35fb7c28 'end' 'const char *'
|   | |       |-UnaryOperator 0x55dd35fbab60 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55dd35fbab40 <col:39> 'String' lvalue Var 0x55dd35fba7f8 'name' 'String'
|   | |       |-UnaryOperator 0x55dd35fbab98 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55dd35fbab78 <col:46> 'String' lvalue Var 0x55dd35fba898 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55dd35fbabb0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55dd35fbadc0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55dd35fbada8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55dd35fbad88 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55dd35fbad58 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55dd35c26fa8
|   |         `-ImplicitCastExpr 0x55dd35fbad40 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55dd35fbad20 <col:11> 'String' lvalue Var 0x55dd35fba7f8 'name' 'String'
|   `-ReturnStmt 0x55dd35fbae30 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55dd35fbae18 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35fbadf8 <col:9> 'const char *' lvalue Var 0x55dd35fba970 'x' 'const char *'
|-CXXMethodDecl 0x55dd35fb7e18 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55dd35fb7d88 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55dd35fbb448 <col:55, line:550:5>
|   `-IfStmt 0x55dd35fbb420 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55dd35fbb080 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55dd35fbb068 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55dd35fbb050 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55dd35fbb030 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55dd35fbb000 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55dd35c26fa8
|     | |       `-DeclRefExpr 0x55dd35fbaea0 <col:6> 'const String' lvalue ParmVar 0x55dd35fb7d88 'x' 'const String &'
|     | `-BinaryOperator 0x55dd35fbafe0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55dd35fbafb0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55dd35fbaf60 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55dd35fbaf48 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55dd35fbaf00 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55dd35c407e0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55dd35fbaec0 <col:11> 'const String' lvalue ParmVar 0x55dd35fb7d88 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55dd35fbaee0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55dd35fbafc8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55dd35fbaf98 <col:19> 'char' 123
|     |-ReturnStmt 0x55dd35fbb0f0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55dd35fbb0c0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55dd35fbb0a0 <col:13> 'const String' lvalue ParmVar 0x55dd35fb7d88 'x' 'const String &'
|     `-IfStmt 0x55dd35fbb3f8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55dd35fbb188 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55dd35fbb170 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55dd35fbb150 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55dd35fbb120 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55dd35c26fa8
|       |       `-DeclRefExpr 0x55dd35fbb100 <col:11> 'const String' lvalue ParmVar 0x55dd35fb7d88 'x' 'const String &'
|       |-ReturnStmt 0x55dd35fbb310 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55dd35fbb2f8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55dd35fbb2c8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55dd35fbb2b0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55dd35fbb290 <col:13, col:29> 'String' (CXXTemporary 0x55dd35fbb290)
|       |         `-CallExpr 0x55dd35fbb240 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55dd35fbb228 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55dd35fbb1a0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55dd35fb75c0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55dd35fbb270 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55dd35fbb1c0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55dd35fbb1e0 <col:28> 'const String' lvalue ParmVar 0x55dd35fb7d88 'x' 'const String &'
|       `-ReturnStmt 0x55dd35fbb3e8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55dd35fbb3d0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55dd35fbb3a0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55dd35fbb388 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55dd35fbb368 <col:13, col:20> 'String' (CXXTemporary 0x55dd35fbb368)
|                 `-CXXTemporaryObjectExpr 0x55dd35fbb330 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55dd35fb7fe0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55dd35fb7ed0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55dd35fb7f48 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd35fb9718 <col:71> 'bool' false
|-CXXRecordDecl 0x55dd35fb8090 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55dd35fb8388 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55dd35fb8320 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55dd35fb82c0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55dd35fb8280 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55dd35c23840 'String'
|       | `-CXXRecord 0x55dd35c237b0 'String'
|       |-BuiltinType 0x55dd358f4370 'int'
|       `-DecayedType 0x55dd35fb5950 '__va_list_tag *' sugar
|         |-TypedefType 0x55dd35fb5920 'va_list' sugar
|         | |-Typedef 0x55dd35b148f0 'va_list'
|         | `-TypedefType 0x55dd35b148a0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55dd35a4c4c8 '__gnuc_va_list'
|         |   `-TypedefType 0x55dd35a4c430 '__builtin_va_list' sugar
|         |     |-Typedef 0x55dd35935bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55dd35935b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55dd358f50c0 '__va_list_tag'
|         |         `-CXXRecord 0x55dd358f5028 '__va_list_tag'
|         `-PointerType 0x55dd35b1a190 '__va_list_tag *'
|           `-RecordType 0x55dd358f50c0 '__va_list_tag'
|             `-CXXRecord 0x55dd358f5028 '__va_list_tag'
|-EnumDecl 0x55dd35fb83e0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55dd35fb84e0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8a40 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb84c0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd35fb84a0 <col:16> 'int' 1
| |-EnumConstantDecl 0x55dd35fb8570 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8a58 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb8550 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd35fb8530 <col:21> 'int' 2
| |-EnumConstantDecl 0x55dd35fb8600 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8a70 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb85e0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd35fb85c0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55dd35fb8690 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8a88 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb8670 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55dd35fb8650 <col:17> 'int' 8
| |-EnumConstantDecl 0x55dd35fb8720 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8aa0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb8700 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55dd35fb86e0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55dd35fb87b0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8ab8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb8790 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55dd35fb8770 <col:19> 'int' 32
| |-EnumConstantDecl 0x55dd35fb8840 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8ad0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb8820 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55dd35fb8800 <col:17> 'int' 64
| |-EnumConstantDecl 0x55dd35fb88d0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8ae8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb88b0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55dd35fb8890 <col:14> 'int' 128
| |-EnumConstantDecl 0x55dd35fb8960 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd35fb8b00 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fb8940 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55dd35fb8920 <col:16> 'int' 256
| `-EnumConstantDecl 0x55dd35fb89f0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55dd35fb8b18 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35fb89d0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55dd35fb89b0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55dd35fb8d28 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55dd35fb8b40 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55dd35fb8be0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55dd35fb8eb0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55dd35fb8de8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55dd35fb8f58 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55dd35fb8f98 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55dd35fb8ff8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55dd35fb9070 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55dd35fb9470 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55dd35fb90e8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55dd35fb9168 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55dd35fb91e8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55dd35fb9260 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55dd35fb92d8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55dd35fb9350 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55dd35fb9598 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55dd35fb9598
| `-ParmVarDecl 0x55dd35fb96a8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55dd35fbb7a8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55dd35fbb7a8
  `-ParmVarDecl 0x55dd35fbb8b8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e53900 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55dd35e53a50 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55dd35e53ad0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55dd35e548c8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55dd35e548c8
| `-ParmVarDecl 0x55dd35e549d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55dd35e54a78 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55dd35e54a78
| `-ParmVarDecl 0x55dd35e54b88 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55dd35e54bf8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55dd35e54bf8
|-CXXMethodDecl 0x55dd35e554c8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55dd35e554c8
| `-ParmVarDecl 0x55dd35e555d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55dd35e55648 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55dd35e55648
| `-ParmVarDecl 0x55dd35e55758 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55dd35fb18f0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55dd35fb19d0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e53c00 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55dd35e53d28 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55dd35e53db0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55dd35e54d28 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55dd35e54d28
| `-ParmVarDecl 0x55dd35e54e38 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55dd35e54ed8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55dd35e54ed8
| `-ParmVarDecl 0x55dd35e54fe8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55dd35e55058 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55dd35e55058
|-CXXMethodDecl 0x55dd35e557f8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55dd35e557f8
| `-ParmVarDecl 0x55dd35e55908 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55dd35e55978 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55dd35e55978
| `-ParmVarDecl 0x55dd35e55a88 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55dd35fb1a30 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55dd35fb1b10 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e4f288 prev 0x55dd35e4e720 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55dd35e4f380 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55dd35e4f410 <col:17, col:23> col:17 public
|-EnumDecl 0x55dd35e4f438 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55dd35e4f540 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50290 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f520 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd35e4f500 <col:11> 'int' 1
| |-EnumConstantDecl 0x55dd35e4f5d0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e502a8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f5b0 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd35e4f590 <col:12> 'int' 2
| |-EnumConstantDecl 0x55dd35e4f660 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e502c0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f640 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd35e4f620 <col:17> 'int' 4
| |-EnumConstantDecl 0x55dd35e4f6f0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e502d8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f6d0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd35e4f6b0 <col:16> 'int' 0
| |-EnumConstantDecl 0x55dd35e4f780 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e502f0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f760 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55dd35e4f740 <col:19> 'int' 32
| |-EnumConstantDecl 0x55dd35e4f810 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50308 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f7f0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55dd35e4f7d0 <col:10> 'int' 64
| |-EnumConstantDecl 0x55dd35e4f8a0 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50320 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f880 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55dd35e4f860 <col:19> 'int' 128
| |-EnumConstantDecl 0x55dd35e4f930 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50338 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f910 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55dd35e4f8f0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55dd35e4f9c0 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50350 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4f9a0 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55dd35e4f980 <col:17> 'int' 512
| |-EnumConstantDecl 0x55dd35e4fa50 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50368 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4fa30 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55dd35e4fa10 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55dd35e4fae0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50380 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4fac0 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55dd35e4faa0 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55dd35e4fb70 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50398 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4fb50 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55dd35e4fb30 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55dd35e4fc00 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e503b0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4fbe0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55dd35e4fbc0 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55dd35e4fc90 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e503c8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4fc70 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55dd35e4fc50 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55dd35e4fd60 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55dd35e4fd40 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55dd35e4fd20 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55dd35e4fce0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55dd35e4fd00 <col:20> 'int' 26
| |-EnumConstantDecl 0x55dd35e4fe30 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55dd35e4fe10 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55dd35e4fdf0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55dd35e4fdb0 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55dd35e4fdd0 <col:27> 'int' 27
| |-EnumConstantDecl 0x55dd35e4fec0 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e503e0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e4fea0 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55dd35e4fe80 <col:17> 'int' 28
| |-EnumConstantDecl 0x55dd35e4ff90 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55dd35e4ff70 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55dd35e4ff50 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55dd35e4ff10 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55dd35e4ff30 <col:18> 'int' EnumConstant 0x55dd35e4fec0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e50020 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e503f8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e50000 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55dd35e4ffe0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55dd35e500b0 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55dd35e50410 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e50090 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55dd35e50070 <col:26> 'int' 16
| `-EnumConstantDecl 0x55dd35e50240 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55dd35e50428 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e50220 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55dd35e50200 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55dd35e501c0 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55dd35e50180 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55dd35e50140 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55dd35e50100 <col:14> 'int' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55dd35e50120 <col:23> 'int' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55dd35e50160 <col:33> 'int' EnumConstant 0x55dd35e4f660 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55dd35e501a0 <col:48> 'int' EnumConstant 0x55dd35e50020 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55dd35e501e0 <col:71> 'int' EnumConstant 0x55dd35e500b0 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e50488 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55dd35e55ea8 <col:39, line:64:5>
|   `-ReturnStmt 0x55dd35e55e98 <line:63:2, col:9>
|     `-MemberExpr 0x55dd35e55e68 <col:9> 'const String' lvalue ->_name 0x55dd35e538b0
|       `-CXXThisExpr 0x55dd35e55e58 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55dd35e50548 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55dd35e55f28 <col:35, line:71:5>
|   `-ReturnStmt 0x55dd35e55f18 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55dd35e55f00 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55dd35e55ed0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|         `-CXXThisExpr 0x55dd35e55ec0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55dd35e50698 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55dd35e50600 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55dd35e560a8 <col:42, line:77:5>
|   `-ReturnStmt 0x55dd35e56098 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55dd35e56080 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55dd35e56050 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55dd35e55fb0 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55dd35e55f80 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55dd35e55f40 <col:9> 'int' lvalue ParmVar 0x55dd35e50600 'op' 'int'
|         | `-ImplicitCastExpr 0x55dd35e55f98 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55dd35e55f60 <col:15> 'Handler::Flags' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55dd35e55fe0 <col:25> 'void *const' lvalue ->_write_user_data 0x55dd35e53f60
|         | `-CXXThisExpr 0x55dd35e55fd0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55dd35e56020 <col:44> 'void *const' lvalue ->_read_user_data 0x55dd35e53ef8
|           `-CXXThisExpr 0x55dd35e56010 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55dd35e50768 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55dd35e56128 <col:41, line:82:5>
|   `-ReturnStmt 0x55dd35e56118 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55dd35e56100 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55dd35e560d0 <col:9> 'void *const' lvalue ->_read_user_data 0x55dd35e53ef8
|         `-CXXThisExpr 0x55dd35e560c0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55dd35e50830 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55dd35e561a8 <col:42, line:87:5>
|   `-ReturnStmt 0x55dd35e56198 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55dd35e56180 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55dd35e56150 <col:9> 'void *const' lvalue ->_write_user_data 0x55dd35e53f60
|         `-CXXThisExpr 0x55dd35e56140 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55dd35e508f8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55dd35e50998 <col:52> "" ""
|-CXXMethodDecl 0x55dd35e50a30 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55dd35e50ad0 <col:52> "" ""
|-CXXMethodDecl 0x55dd35e50b60 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55dd35e56298 <col:34, line:98:5>
|   `-ReturnStmt 0x55dd35e56288 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55dd35e56270 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55dd35e56250 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55dd35e56220 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55dd35e561d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|         |   `-CXXThisExpr 0x55dd35e561c0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55dd35e56238 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55dd35e56200 <col:18> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e50c20 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55dd35e56388 <col:36, line:104:5>
|   `-ReturnStmt 0x55dd35e56378 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55dd35e56360 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55dd35e56340 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55dd35e56310 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55dd35e562c0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|         |   `-CXXThisExpr 0x55dd35e562b0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55dd35e56328 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55dd35e562f0 <col:18> 'Handler::Flags' EnumConstant 0x55dd35e4f660 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e50ce0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55dd35e56568 <col:38, line:113:5>
|   `-ReturnStmt 0x55dd35e56558 <line:112:2, col:49>
|     `-BinaryOperator 0x55dd35e56538 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55dd35e564e0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55dd35e564c0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55dd35e56490 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55dd35e563b0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|       |   |   `-CXXThisExpr 0x55dd35e563a0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55dd35e564a8 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55dd35e56470 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55dd35e56450 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55dd35e56420 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55dd35e563e0 <col:20> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55dd35e56438 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55dd35e56400 <col:29> 'Handler::Flags' EnumConstant 0x55dd35e4f8a0 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55dd35e56520 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55dd35e56500 <col:49> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e50da0 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55dd35e56658 <col:34, line:118:5>
|   `-ReturnStmt 0x55dd35e56648 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55dd35e56630 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55dd35e56610 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55dd35e565e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55dd35e56590 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|         |   `-CXXThisExpr 0x55dd35e56580 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55dd35e565f8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55dd35e565c0 <col:18> 'Handler::Flags' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e50e60 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55dd35e56838 <col:39, line:127:5>
|   `-ReturnStmt 0x55dd35e56828 <line:126:2, col:51>
|     `-BinaryOperator 0x55dd35e56808 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55dd35e567b0 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55dd35e56790 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55dd35e56760 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55dd35e56680 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|       |   |   `-CXXThisExpr 0x55dd35e56670 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55dd35e56778 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55dd35e56740 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55dd35e56720 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55dd35e566f0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55dd35e566b0 <col:20> 'Handler::Flags' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55dd35e56708 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55dd35e566d0 <col:30> 'Handler::Flags' EnumConstant 0x55dd35e4f930 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55dd35e567f0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55dd35e567d0 <col:51> 'Handler::Flags' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e50f20 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55dd35e56940 <col:33, line:132:5>
|   `-ReturnStmt 0x55dd35e56930 <line:131:2, col:41>
|     `-BinaryOperator 0x55dd35e56910 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55dd35e56890 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55dd35e56860 <col:9> '<bound member function type>' ->read_visible 0x55dd35e50ce0
|       |   `-CXXThisExpr 0x55dd35e56850 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55dd35e568f0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55dd35e568c0 <col:27> '<bound member function type>' ->write_visible 0x55dd35e50e60
|           `-CXXThisExpr 0x55dd35e568b0 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55dd35e50fe0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55dd35e56a78 <col:51, line:138:5>
|   `-ReturnStmt 0x55dd35e56a68 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55dd35e56a50 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55dd35e56a30 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55dd35e569e8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55dd35e569b8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55dd35e56968 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|           |   `-CXXThisExpr 0x55dd35e56958 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55dd35e569d0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55dd35e56998 <col:26> 'Handler::Flags' EnumConstant 0x55dd35e4f780 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e510a0 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55dd35e56b88 <col:50, line:144:5>
|   `-ReturnStmt 0x55dd35e56b78 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55dd35e56b60 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55dd35e56b40 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55dd35e56b20 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55dd35e56af0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55dd35e56aa0 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|           |   `-CXXThisExpr 0x55dd35e56a90 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55dd35e56b08 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55dd35e56ad0 <col:26> 'Handler::Flags' EnumConstant 0x55dd35e4f780 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e51160 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55dd35e56c78 <col:29, line:166:5>
|   `-ReturnStmt 0x55dd35e56c68 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55dd35e56c50 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55dd35e56c30 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55dd35e56c00 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55dd35e56bb0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|         |   `-CXXThisExpr 0x55dd35e56ba0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55dd35e56c18 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55dd35e56be0 <col:18> 'Handler::Flags' EnumConstant 0x55dd35e4f810 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e513e8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55dd35e51210 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55dd35e51288 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55dd35e51300 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e515f8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55dd35e514b0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55dd35e51528 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55dd35e55d90 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd35e55d70 <col:62> 'int' 0
| `-CompoundStmt 0x55dd35e56f18 <col:71, line:188:5>
|   `-ReturnStmt 0x55dd35e56f08 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55dd35e56ef0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55dd35e56ec0 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55dd35e56ea8 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55dd35e56e88 <col:9, col:36> 'String' (CXXTemporary 0x55dd35e56e88)
|             `-CXXMemberCallExpr 0x55dd35e56de8 <col:9, col:36> 'String'
|               |-MemberExpr 0x55dd35e56db8 <col:9> '<bound member function type>' ->call_read 0x55dd35e513e8
|               | `-CXXThisExpr 0x55dd35e56da8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55dd35e56e20 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55dd35e56d00 <col:19> 'Element *' lvalue ParmVar 0x55dd35e514b0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55dd35e56e50 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55dd35e56e38 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55dd35e56d68 <col:22, col:29> 'String' (CXXTemporary 0x55dd35e56d68)
|               |     `-CXXTemporaryObjectExpr 0x55dd35e56d30 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55dd35e56e68 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd35e56d88 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55dd35e51528 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e51890 <line:198:5, col:73> col:9 used call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55dd35e516b8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55dd35e51730 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55dd35e517a8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e51a18 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55dd35e51958 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55dd35e51c48 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55dd35e51ad0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55dd35e51b48 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55dd35e51d48 <line:223:5, line:225:5> line:223:34 used blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55dd35e56f78 <col:50, line:225:5>
|   `-ReturnStmt 0x55dd35e56f68 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55dd35e56f50 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e56f30 <col:9> 'const Handler *' lvalue Var 0x55dd35e540f0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55dd35e51de8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55dd35e51ef0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52a90 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e51ed0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55dd35e51eb0 <col:11> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e51f80 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52aa8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e51f60 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55dd35e51f40 <col:12> 'Handler::Flags' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52010 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52ac0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e51ff0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55dd35e51fd0 <col:17> 'Handler::Flags' EnumConstant 0x55dd35e4f660 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e520a0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52ad8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52080 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55dd35e52060 <col:16> 'Handler::Flags' EnumConstant 0x55dd35e4f6f0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52130 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52af0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52110 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55dd35e520f0 <col:19> 'Handler::Flags' EnumConstant 0x55dd35e4f780 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e521c0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52b08 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e521a0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55dd35e52180 <col:10> 'Handler::Flags' EnumConstant 0x55dd35e4f810 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52250 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52b20 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52230 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55dd35e52210 <col:19> 'Handler::Flags' EnumConstant 0x55dd35e4f8a0 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e522e0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52b38 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e522c0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55dd35e522a0 <col:20> 'Handler::Flags' EnumConstant 0x55dd35e4f930 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52370 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52b50 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52350 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55dd35e52330 <col:17> 'Handler::Flags' EnumConstant 0x55dd35e4f9c0 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52400 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52b68 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e523e0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55dd35e523c0 <col:15> 'Handler::Flags' EnumConstant 0x55dd35e4fa50 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52490 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52b80 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52470 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55dd35e52450 <col:11> 'Handler::Flags' EnumConstant 0x55dd35e4fae0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52520 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52b98 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52500 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55dd35e524e0 <col:16> 'Handler::Flags' EnumConstant 0x55dd35e4fb70 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e525b0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52bb0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52590 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55dd35e52570 <col:13> 'Handler::Flags' EnumConstant 0x55dd35e4fc00 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52640 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52bc8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52620 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55dd35e52600 <col:15> 'Handler::Flags' EnumConstant 0x55dd35e4fc90 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e526d0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52be0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e526b0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55dd35e52690 <col:20> 'Handler::Flags' EnumConstant 0x55dd35e4fd60 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52760 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52bf8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52740 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55dd35e52720 <col:27> 'Handler::Flags' EnumConstant 0x55dd35e4fe30 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e527f0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52c10 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e527d0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55dd35e527b0 <col:22> 'Handler::Flags' EnumConstant 0x55dd35e4fec0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52880 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52c28 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52860 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55dd35e52840 <col:18> 'Handler::Flags' EnumConstant 0x55dd35e4ff90 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52910 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52c40 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e528f0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55dd35e528d0 <col:25> 'Handler::Flags' EnumConstant 0x55dd35e50020 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e529a0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55dd35e52c58 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52980 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55dd35e52960 <col:26> 'Handler::Flags' EnumConstant 0x55dd35e500b0 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55dd35e52a40 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55dd35e52c70 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e52a20 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55dd35e529f0 <col:20> 'Handler::Flags' EnumConstant 0x55dd35e50240 'f_special' 'Handler::Flags'
|-EnumDecl 0x55dd35e52c88 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55dd35e52d90 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e532f0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52d70 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55dd35e52d50 <col:12> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52e20 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e53308 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52e00 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55dd35e52de0 <col:13> 'Handler::Flags' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52eb0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e53320 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52e90 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55dd35e52e70 <col:15> 'Handler::Flags' EnumConstant 0x55dd35e4f660 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52f40 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e53338 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52f20 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55dd35e52f00 <col:8> 'Handler::Flags' EnumConstant 0x55dd35e4f810 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e52fd0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e53350 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e52fb0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55dd35e52f90 <col:9> 'Handler::Flags' EnumConstant 0x55dd35e4fae0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e53060 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e53368 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e53040 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55dd35e53020 <col:14> 'Handler::Flags' EnumConstant 0x55dd35e4fb70 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e530f0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e53380 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e530d0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55dd35e530b0 <col:11> 'Handler::Flags' EnumConstant 0x55dd35e4fc00 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e53180 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e53398 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e53160 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55dd35e53140 <col:13> 'Handler::Flags' EnumConstant 0x55dd35e4fc90 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35e53210 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55dd35e533b0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e531f0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55dd35e531d0 <col:20> 'Handler::Flags' EnumConstant 0x55dd35e4fec0 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55dd35e532a0 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55dd35e533c8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e53280 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55dd35e53260 <col:16> 'Handler::Flags' EnumConstant 0x55dd35e4ff90 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55dd35e533e0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55dd35e534a0 <col:25> "" ""
| |-EnumConstantDecl 0x55dd35e53550 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55dd35e53630 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e53530 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55dd35e53510 <col:14> 'Handler::Flags' EnumConstant 0x55dd35e4f6f0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55dd35e535e0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55dd35e53648 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e535c0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55dd35e535a0 <col:17> 'Handler::Flags' EnumConstant 0x55dd35e4f780 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55dd35e537c8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55dd35e53670 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55dd35e536f0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55dd35e57638 <col:70, line:284:5>
|   |-ParenExpr 0x55dd35e57458 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55dd35e57428 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e57158 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e57128 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55dd35e570d0 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55dd35e570b0 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55dd35e57080 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55dd35e56fa0 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55dd35e53fc0
|   |   |   |   |   `-CXXThisExpr 0x55dd35e56f90 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55dd35e57098 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55dd35e57060 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55dd35e57040 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55dd35e57010 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55dd35e56fd0 <col:34> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55dd35e57028 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55dd35e56ff0 <col:43> 'Handler::Flags' EnumConstant 0x55dd35e50020 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55dd35e57110 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55dd35e570f0 <col:69> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55dd35e571b8 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e57198 <col:85> 'int' 0
|   |   `-CallExpr 0x55dd35e57388 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e57370 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e57350 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e573c8 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e57228 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55dd35e573e0 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e57278 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55dd35e573f8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e572b0 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55dd35e57410 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e57338 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e57320 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e572d0 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55dd35e57628 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55dd35e57610 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55dd35e575e0 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55dd35e575c8 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55dd35e575a8 <col:9, col:38> 'String' (CXXTemporary 0x55dd35e575a8)
|             `-CallExpr 0x55dd35e57540 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55dd35e57528 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55dd35e574b8 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55dd35e53ad0
|               |   `-MemberExpr 0x55dd35e57488 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55dd35e53b98
|               |     `-CXXThisExpr 0x55dd35e57478 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55dd35e57570 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55dd35e574e8 <col:22> 'Element *' lvalue ParmVar 0x55dd35e53670 'e' 'Element *'
|               `-ImplicitCastExpr 0x55dd35e57588 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd35e57508 <col:25> 'void *' lvalue ParmVar 0x55dd35e536f0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55dd35e53878 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55dd35e538b0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55dd35e53900 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55dd35e53a50 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55dd35e53ad0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55dd35e548c8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55dd35e548c8
| | `-ParmVarDecl 0x55dd35e549d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55dd35e54a78 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55dd35e54a78
| | `-ParmVarDecl 0x55dd35e54b88 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55dd35e54bf8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55dd35e54bf8
| |-CXXMethodDecl 0x55dd35e554c8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55dd35e554c8
| | `-ParmVarDecl 0x55dd35e555d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55dd35e55648 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55dd35e55648
| | `-ParmVarDecl 0x55dd35e55758 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55dd35fb18f0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55dd35fb19d0 <col:5>
|-FieldDecl 0x55dd35e53b98 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55dd35e53c00 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55dd35e53d28 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55dd35e53db0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55dd35e54d28 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55dd35e54d28
| | `-ParmVarDecl 0x55dd35e54e38 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55dd35e54ed8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55dd35e54ed8
| | `-ParmVarDecl 0x55dd35e54fe8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55dd35e55058 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55dd35e55058
| |-CXXMethodDecl 0x55dd35e557f8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55dd35e557f8
| | `-ParmVarDecl 0x55dd35e55908 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55dd35e55978 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55dd35e55978
| | `-ParmVarDecl 0x55dd35e55a88 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55dd35fb1a30 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55dd35fb1b10 <col:5>
|-FieldDecl 0x55dd35e53e78 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55dd35e53ef8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55dd35e53f60 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55dd35e53fc0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd35e54028 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55dd35e54090 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55dd35e540f0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55dd35e54210 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55dd35e54168 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55dd35e55e40 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dd35e55e28 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55dd35e55e10 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dd35e55df0 <col:30, col:37> 'String' (CXXTemporary 0x55dd35e55df0)
|           `-CXXTemporaryObjectExpr 0x55dd35e55db8 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55dd35e543b8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55dd35e542f8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55dd35e54538 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55dd35e54470 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55dd35e546f8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55dd35e54738 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55dd35e54738
| `-ParmVarDecl 0x55dd35e54818 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55dd35e55168 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55dd35e55168
| `-ParmVarDecl 0x55dd35e55278 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55dd35e55318 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55dd35e55318
| `-ParmVarDecl 0x55dd35e55428 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55dd35e55af8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55dd35e55af8
| `-ParmVarDecl 0x55dd35e55c08 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55dd35e55c90 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55dd35e55c90

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f98778 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55dd35f98988 prev 0x55dd35f98778 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35f999a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55dd35f99950 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55dd35f99930 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55dd35f997e0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35e91700 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35e91250 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55dd35e91168 'sized_array_memory'
|-FieldDecl 0x55dd35f99aa0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55dd35f99af0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35f99b28 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55dd35f98a20 'void *' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-PointerType 0x55dd358f4ad0 'void *'
|     `-BuiltinType 0x55dd358f42d0 'void'
|-TypedefDecl 0x55dd35f99bb8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55dd35f99b80 'void *&'
|   `-SubstTemplateTypeParmType 0x55dd35f98a20 'void *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd358f4ad0 'void *'
|       `-BuiltinType 0x55dd358f42d0 'void'
|-TypedefDecl 0x55dd35f99c78 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55dd35f99c40 'void *const &'
|   `-QualType 0x55dd35f98a21 'void *const' const
|     `-SubstTemplateTypeParmType 0x55dd35f98a20 'void *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd358f4ad0 'void *'
|         `-BuiltinType 0x55dd358f42d0 'void'
|-TypedefDecl 0x55dd35f99d08 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55dd35f99cd0 'void **'
|   `-SubstTemplateTypeParmType 0x55dd35f98a20 'void *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd358f4ad0 'void *'
|       `-BuiltinType 0x55dd358f42d0 'void'
|-TypedefDecl 0x55dd35f99d98 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55dd35f99d60 'void *const *'
|   `-QualType 0x55dd35f98a21 'void *const' const
|     `-SubstTemplateTypeParmType 0x55dd35f98a20 'void *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd358f4ad0 'void *'
|         `-BuiltinType 0x55dd358f42d0 'void'
|-TypedefDecl 0x55dd35f9a980 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55dd35f9a930 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55dd35f9a910 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55dd35f9a8a0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f9a660 'void *' sugar
|       |-TemplateTypeParmType 0x55dd35bc7480 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bc7430 'T'
|       `-PointerType 0x55dd358f4ad0 'void *'
|         `-BuiltinType 0x55dd358f42d0 'void'
|-TypedefDecl 0x55dd35f9a9e8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55dd35f99c40 'void *const &'
|   `-QualType 0x55dd35f98a21 'void *const' const
|     `-SubstTemplateTypeParmType 0x55dd35f98a20 'void *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd358f4ad0 'void *'
|         `-BuiltinType 0x55dd358f42d0 'void'
|-TypedefDecl 0x55dd35f9aa40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f9aaa8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55dd35f99cd0 'void **'
|   `-SubstTemplateTypeParmType 0x55dd35f98a20 'void *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd358f4ad0 'void *'
|       `-BuiltinType 0x55dd358f42d0 'void'
|-TypedefDecl 0x55dd35f9ab10 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55dd35f99d60 'void *const *'
|   `-QualType 0x55dd35f98a21 'void *const' const
|     `-SubstTemplateTypeParmType 0x55dd35f98a20 'void *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd358f4ad0 'void *'
|         `-BuiltinType 0x55dd358f42d0 'void'
|-EnumDecl 0x55dd35f9ab68 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35f9ac60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35f9ac40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35f9ace8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35f9af38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f9ada0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f9ae40 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55dd35f9b1f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55dd35f9b0e0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55dd35f9b4b8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55dd35f9b3a0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55dd35f9b800 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55dd35f9b6e0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55dd35f9bb10 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55dd35f9b9f0 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55dd35f9be00 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f9bc48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f9bcc0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55dd35f9bf58 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55dd35f9c038 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f9c090 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f9c0d8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55dd35f9c188 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f9c1e0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f9c2a8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f9c358 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f9c3b0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f9c3f8 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f9c4a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f9c500 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f9c548 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f9c5f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f9c650 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f9c698 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f9c748 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f9c7a0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f9c7c8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f9c878 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f9c928 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35f9cae8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f9c9d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f9ca50 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55dd35f9cc38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f9cba8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f9cde8 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55dd35f9ccf0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f9cea0 <col:20>
| `-OptimizeNoneAttr 0x55dd35f9cef8 <col:30>
|-CXXMethodDecl 0x55dd35f9d018 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35f9cf20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f9d0d0 <col:20>
| `-OptimizeNoneAttr 0x55dd35f9d128 <col:30>
|-CXXMethodDecl 0x55dd35f9d1e0 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f9d150 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f9d328 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f9d298 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f9d458 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55dd35f9d588 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55dd35f9d658 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55dd35f9d728 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55dd35f9d868 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f9d7d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f9d9b0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f9d920 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f9daf8 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35f9da68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f9dbb0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35f9dcb0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35f9dc20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f9dd68 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35f9fa10 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55dd35f9fb08 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55dd35f9fc88 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f9fbc8 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55dd35fa0448 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35f9fd40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55dd35fa03a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55dd35fa02a8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55dd35fa0528 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35fa0678 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35fa05e8 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55dd35fa0730 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35fa0978 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35fa07f0 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55dd35fa0868 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55dd35fa0b38 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55dd35fa0a48 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55dd35fa0d88 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55dd35fa0c00 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55dd35fa0c78 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55dd35fa0e48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35fa10a8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55dd35fa0fb0 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55dd35fa1178 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35fa1178

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35fa1370 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55dd35fa1488 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55dd35fa1518 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55dd35fa1620 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55dd35fa1670 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35fa1600 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55dd35fa15e0 <col:27> 'int' 4096
|-FieldDecl 0x55dd35fa1698 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55dd35fa1700 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55dd35fa18f8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55dd35fa1988 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55dd35fa1b48 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55dd35fa19e8 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55dd35fa1a60 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55dd35fa1698 'name' 'String'
| | `-CXXConstructExpr 0x55dd35fac8d8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55dd35fac898 <col:20> 'const String' lvalue ParmVar 0x55dd35fa19e8 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55dd35fa1700 'nsig' 'int'
| | `-IntegerLiteral 0x55dd35fac930 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55dd35fa18f8 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55dd35faca18 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55dd35fa1988 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55dd35fac9d8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55dd35fac998 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55dd35fa1a60 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55dd35facca8 <col:42, line:289:9>
|   `-CallExpr 0x55dd35facc58 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55dd35facc40 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55dd35facc20 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55dd35b56d38 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55dd35facc90 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55dd35facb68 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55dd35facb48 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55dd35facb30 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd35facae0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55dd35fa18f8
|     |     |   `-CXXThisExpr 0x55dd35facad0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55dd35facb10 <col:25> 'int' 0
|     |-IntegerLiteral 0x55dd35facb80 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55dd35facc00 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55dd35facbe0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55dd35facbb0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55dd35fa18f8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55dd35facba0 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55dd35fa1c28 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55dd35fa1c28
| `-ParmVarDecl 0x55dd35fa1d38 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55dd35fa1dd8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55dd35fa1dd8
| `-ParmVarDecl 0x55dd35fa1ee8 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55dd35fa1f88 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55dd35fa1f88
| `-ParmVarDecl 0x55dd35fa2098 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55dd35fa2108 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55dd35fa2108
| `-ParmVarDecl 0x55dd35fa2218 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55dd35fa22a0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55dd35fa22a0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35f58ee0 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35f58ff8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55dd35f59088 <col:21, col:27> col:21 public
|-EnumDecl 0x55dd35f590b0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55dd35f591c8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55dd35f591a8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55dd35f59190 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd35f59170 <col:32> 'int' 1
| `-EnumConstantDecl 0x55dd35f59270 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55dd35f59250 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55dd35f59238 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55dd35f59218 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55dd35f59320 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55dd35f59858 <col:19, col:21>
|-CXXDestructorDecl 0x55dd35f59410 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55dd35f59868 <col:28, col:30>
|-CXXMethodDecl 0x55dd35f595d0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55dd35f59500 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55dd35f596d8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55dd35f596d8
  `-ParmVarDecl 0x55dd35f597e8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35f59e10 prev 0x55dd35f33410 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55dd35f59f08 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55dd35f59f98 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55dd35f5a008 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55dd35f5a0c8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55dd35f5a188 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55dd35f5a248 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55dd35f5a308 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55dd35f5a3a8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55dd35f5a508 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55dd35f5a4e8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55dd35f5a4c8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55dd35f5a490 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55dd35f5a470 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55dd35f5a4a8 <col:42> 'int' 1
|-CXXMethodDecl 0x55dd35f5a5a8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55dd35f5a718 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55dd35f5a658 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55dd35f5a860 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55dd35f5a7d0 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55dd35f5a928 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55dd35f5ab20 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55dd35f5abe8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55dd35f5ad68 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55dd35f5aca0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55dd35f5ae30 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55dd35f5b038 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55dd35f5aee0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55dd35f5af60 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55dd35f5b190 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55dd35f5b100 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55dd35f5b2e0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55dd35f5b250 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55dd35f5b430 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55dd35f5b3a0 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55dd35f5b580 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55dd35f5b4f0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55dd35f5b750 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55dd35f5b640 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55dd35f5b6b8 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55dd35f5b958 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55dd35f5b810 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55dd35f5b888 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fa5b40 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fa5b20 <col:60> 'int' 0
|-CXXMethodDecl 0x55dd35f5bbe8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55dd35f5ba18 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55dd35f5ba90 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55dd35f5bb08 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fa5b78 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fa5b58 <col:76> 'int' 0
|-CXXMethodDecl 0x55dd35f5be88 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55dd35f5bcb0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55dd35f5bd28 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55dd35f5bda0 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fa5bb0 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fa5b90 <col:84> 'int' 0
|-CXXMethodDecl 0x55dd35f5c1e0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55dd35f5bf50 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55dd35f5bfc8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55dd35f5c048 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55dd35f5c0e8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55dd35f5c490 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55dd35f5c2b0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55dd35f5c330 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55dd35f5c3a8 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55dd35f5c6f8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55dd35f5c558 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55dd35f5c5d8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55dd35f5c650 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55dd35f5cb80 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55dd35f5c7c0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55dd35f5c840 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55dd35f5c8e8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55dd35f5ca30 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55dd35f5cc40 <col:115> "" ""
|-CXXMethodDecl 0x55dd35f5d000 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55dd35f5ccc0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55dd35f5cd40 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55dd35f5cdb8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55dd35f5cf00 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55dd35f5d0c0 <col:113> "" ""
|-CXXMethodDecl 0x55dd35f5d210 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55dd35f5d148 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55dd35f5d3e0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55dd35f5d2d0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55dd35f5d348 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55dd35f5d5e8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55dd35f5d4a0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55dd35f5d518 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55dd35f5d9e8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55dd35f5d6a8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55dd35f5d720 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55dd35f5d798 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dd35f5d818 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55dd35f5d890 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35fa5be8 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35fa5bc8 <col:137> 'int' 0
|-CXXMethodDecl 0x55dd35f5ddf8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55dd35f5dac0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55dd35f5db38 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55dd35f5dbb0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35f5dc30 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55dd35f5dca8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35fa5c20 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35fa5c00 <col:139> 'int' 0
|-CXXMethodDecl 0x55dd35f5e2a8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55dd35f5ded0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55dd35f5df48 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55dd35f5dfc0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd35f5e038 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35f5e0b8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55dd35fa5c58 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd35fa5c38 <col:133> 'int' 0
| `-ParmVarDecl 0x55dd35f5e138 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55dd35fa5c90 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fa5c70 <col:160> 'int' 0
|-CXXMethodDecl 0x55dd35f5e640 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55dd35f5e388 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55dd35f5e400 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55dd35f5e478 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd35f5e4f0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35fa5cc8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35fa5ca8 <col:116> 'int' 0
|-EnumDecl 0x55dd35f5e700 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55dd35f5e800 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55dd35f5e850 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35f5e7e0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55dd35f5e7c0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55dd35f5e9d0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55dd35f5e878 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55dd35f5e8f0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55dd35f5ebe8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55dd35f5ea90 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55dd35f5eb10 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55dd35f5f048 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55dd35f5eca8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55dd35f5ef30 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55dd35f5f1d0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55dd35f5f108 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55dd35f61130 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55dd35f5f288 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55dd35f61340 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55dd35f611e8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55dd35f61268 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55dd35f614c8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55dd35f61400 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55dd35f615e8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55dd35f616d8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55dd35f61848 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55dd35f61788 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55dd35f619d0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55dd35f61900 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55dd35f61bd8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55dd35f61a88 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55dd35f61b08 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55dd35f61d08 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55dd35f61df8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55dd35f61eb8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55dd35f620b8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55dd35f61f68 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55dd35f61fe0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55dd35fa5d78 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dd35fa5d60 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55dd35fa5d48 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dd35fa5d28 <col:58, col:65> 'String' (CXXTemporary 0x55dd35fa5d28)
|           `-CXXTemporaryObjectExpr 0x55dd35fa5cf0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55dd35f62288 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55dd35f62178 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55dd35f621f0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55dd35fa5e28 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dd35fa5e10 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55dd35fa5df8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dd35fa5dd8 <col:71, col:78> 'String' (CXXTemporary 0x55dd35fa5dd8)
|           `-CXXTemporaryObjectExpr 0x55dd35fa5da0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55dd35f62458 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55dd35f62348 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55dd35f623c0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55dd35fa5ed8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dd35fa5ec0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55dd35fa5ea8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dd35fa5e88 <col:71, col:78> 'String' (CXXTemporary 0x55dd35fa5e88)
|           `-CXXTemporaryObjectExpr 0x55dd35fa5e50 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55dd35f62628 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55dd35f62518 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55dd35f62590 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55dd35fa5f88 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dd35fa5f70 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55dd35fa5f58 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dd35fa5f38 <col:70, col:77> 'String' (CXXTemporary 0x55dd35fa5f38)
|           `-CXXTemporaryObjectExpr 0x55dd35fa5f00 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55dd35f627a8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55dd35f626e8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55dd35f629c8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55dd35f62860 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55dd35f628d8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55dd35f62ac8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55dd35f62ac8
|-CXXMethodDecl 0x55dd35f62bd0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55dd35f62c90 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55dd35f62d50 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55dd35f62e10 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55dd35f63008 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55dd35f62ec0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55dd35f62f38 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55dd35f633c0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55dd35f630c8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55dd35f63140 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55dd35f631b8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55dd35f63230 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55dd35f632b0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55dd35f63720 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55dd35f634a0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55dd35f63520 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55dd35f635a0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55dd35f63620 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55dd35f63800 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55dd35f63940 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55dd35f638b0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55dd35f63a90 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55dd35f639f8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35f63c98 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35f63b48 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55dd35f63bc0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35f63e18 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55dd35f63d58 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35f63f60 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55dd35f63ed0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55dd35f641a0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55dd35f64020 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55dd35f640c8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55dd35f64328 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55dd35f64260 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55dd35f643d0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd35f644e8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55dd35f64590 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55dd35f645f8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55dd35f646b0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55dd35fa5fb0 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55dd35f64888 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55dd35f64770 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55dd35f647f0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55dd35f64590 'idx' 'int'
| | | `-ImplicitCastExpr 0x55dd35fa6000 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55dd35fa5fc0 <col:19> 'int' lvalue ParmVar 0x55dd35f64770 'i' 'int'
| | |-CXXCtorInitializer Field 0x55dd35f645f8 'port' 'int'
| | | `-ImplicitCastExpr 0x55dd35fa6080 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55dd35fa6040 <col:28> 'int' lvalue ParmVar 0x55dd35f647f0 'p' 'int'
| | `-CompoundStmt 0x55dd35fa60d0 <col:31, line:153:9>
| |-CXXMethodDecl 0x55dd35f64a68 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55dd35f64978 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55dd35fa62d0 <col:46, line:157:9>
| |   `-ReturnStmt 0x55dd35fa62c0 <line:156:13, col:46>
| |     `-BinaryOperator 0x55dd35fa62a0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55dd35fa61a0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55dd35fa6170 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55dd35fa60f0 <col:20> 'const int' lvalue ->idx 0x55dd35f64590
| |       | |   `-CXXThisExpr 0x55dd35fa60e0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55dd35fa6188 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55dd35fa6140 <col:27, col:29> 'const int' lvalue .idx 0x55dd35f64590
| |       |     `-DeclRefExpr 0x55dd35fa6120 <col:27> 'const Router::Port' lvalue ParmVar 0x55dd35f64978 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55dd35fa6280 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55dd35fa6250 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55dd35fa61d0 <col:36> 'const int' lvalue ->port 0x55dd35f645f8
| |         |   `-CXXThisExpr 0x55dd35fa61c0 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55dd35fa6268 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55dd35fa6220 <col:44, col:46> 'const int' lvalue .port 0x55dd35f645f8
| |             `-DeclRefExpr 0x55dd35fa6200 <col:44> 'const Router::Port' lvalue ParmVar 0x55dd35f64978 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55dd35f64bb0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55dd35f64b20 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55dd35fa64d8 <col:46, line:160:9>
| |   `-ReturnStmt 0x55dd35fa64c8 <line:159:13, col:46>
| |     `-BinaryOperator 0x55dd35fa64a8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55dd35fa63a8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55dd35fa6378 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55dd35fa62f8 <col:20> 'const int' lvalue ->idx 0x55dd35f64590
| |       | |   `-CXXThisExpr 0x55dd35fa62e8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55dd35fa6390 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55dd35fa6348 <col:27, col:29> 'const int' lvalue .idx 0x55dd35f64590
| |       |     `-DeclRefExpr 0x55dd35fa6328 <col:27> 'const Router::Port' lvalue ParmVar 0x55dd35f64b20 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55dd35fa6488 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55dd35fa6458 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55dd35fa63d8 <col:36> 'const int' lvalue ->port 0x55dd35f645f8
| |         |   `-CXXThisExpr 0x55dd35fa63c8 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55dd35fa6470 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55dd35fa6428 <col:44, col:46> 'const int' lvalue .port 0x55dd35f645f8
| |             `-DeclRefExpr 0x55dd35fa6408 <col:44> 'const Router::Port' lvalue ParmVar 0x55dd35f64b20 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55dd35f64cf8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55dd35f64c68 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55dd35fa6800 <col:45, line:163:9>
| |   `-ReturnStmt 0x55dd35fa67f0 <line:162:13, col:65>
| |     `-BinaryOperator 0x55dd35fa67d0 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55dd35fa65b0 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55dd35fa6580 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55dd35fa6500 <col:20> 'const int' lvalue ->idx 0x55dd35f64590
| |       | |   `-CXXThisExpr 0x55dd35fa64f0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55dd35fa6598 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55dd35fa6550 <col:26, col:28> 'const int' lvalue .idx 0x55dd35f64590
| |       |     `-DeclRefExpr 0x55dd35fa6530 <col:26> 'const Router::Port' lvalue ParmVar 0x55dd35f64c68 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55dd35fa67b0 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55dd35fa6790 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55dd35fa6690 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55dd35fa6660 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55dd35fa65e0 <col:36> 'const int' lvalue ->idx 0x55dd35f64590
| |           | |   `-CXXThisExpr 0x55dd35fa65d0 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55dd35fa6678 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55dd35fa6630 <col:43, col:45> 'const int' lvalue .idx 0x55dd35f64590
| |           |     `-DeclRefExpr 0x55dd35fa6610 <col:43> 'const Router::Port' lvalue ParmVar 0x55dd35f64c68 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55dd35fa6770 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55dd35fa6740 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55dd35fa66c0 <col:52> 'const int' lvalue ->port 0x55dd35f645f8
| |             |   `-CXXThisExpr 0x55dd35fa66b0 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55dd35fa6758 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55dd35fa6710 <col:59, col:61> 'const int' lvalue .port 0x55dd35f645f8
| |                 `-DeclRefExpr 0x55dd35fa66f0 <col:59> 'const Router::Port' lvalue ParmVar 0x55dd35f64c68 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55dd35f64e40 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55dd35f64db0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55dd35fa6b28 <col:46, line:166:9>
| |   `-ReturnStmt 0x55dd35fa6b18 <line:165:13, col:66>
| |     `-BinaryOperator 0x55dd35fa6af8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55dd35fa68d8 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55dd35fa68a8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55dd35fa6828 <col:20> 'const int' lvalue ->idx 0x55dd35f64590
| |       | |   `-CXXThisExpr 0x55dd35fa6818 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55dd35fa68c0 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55dd35fa6878 <col:26, col:28> 'const int' lvalue .idx 0x55dd35f64590
| |       |     `-DeclRefExpr 0x55dd35fa6858 <col:26> 'const Router::Port' lvalue ParmVar 0x55dd35f64db0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55dd35fa6ad8 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55dd35fa6ab8 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55dd35fa69b8 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55dd35fa6988 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55dd35fa6908 <col:36> 'const int' lvalue ->idx 0x55dd35f64590
| |           | |   `-CXXThisExpr 0x55dd35fa68f8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55dd35fa69a0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55dd35fa6958 <col:43, col:45> 'const int' lvalue .idx 0x55dd35f64590
| |           |     `-DeclRefExpr 0x55dd35fa6938 <col:43> 'const Router::Port' lvalue ParmVar 0x55dd35f64db0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55dd35fa6a98 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55dd35fa6a68 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55dd35fa69e8 <col:52> 'const int' lvalue ->port 0x55dd35f645f8
| |             |   `-CXXThisExpr 0x55dd35fa69d8 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55dd35fa6a80 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55dd35fa6a38 <col:60, col:62> 'const int' lvalue .port 0x55dd35f645f8
| |                 `-DeclRefExpr 0x55dd35fa6a18 <col:60> 'const Router::Port' lvalue ParmVar 0x55dd35f64db0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55dd35fa6b40 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55dd35fa6b40
| | `-ParmVarDecl 0x55dd35fa6c58 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55dd35fa6cf8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55dd35fa6cf8
| | `-ParmVarDecl 0x55dd35fa6e08 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55dd35fa6ea0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55dd35fa7170 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55dd35fa7170
| | `-ParmVarDecl 0x55dd35fa7278 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55dd35fa72e8 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55dd35fa73f8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55dd35fa7718 <col:12>
|     |-BinaryOperator 0x55dd35fa75b8 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55dd35fa7570 <col:12> 'int' lvalue ->idx 0x55dd35f64590
|     | | `-CXXThisExpr 0x55dd35fa7560 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55dd35fa75a0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55dd35fa7530 <col:12> 'int' xvalue .idx 0x55dd35f64590
|     |     `-CXXStaticCastExpr 0x55dd35fa7500 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55dd35fa74d0 <col:12> 'Router::Port' lvalue ParmVar 0x55dd35fa73f8 '' 'Router::Port &&'
|     |-BinaryOperator 0x55dd35fa76c0 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55dd35fa7678 <col:12> 'int' lvalue ->port 0x55dd35f645f8
|     | | `-CXXThisExpr 0x55dd35fa7668 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55dd35fa76a8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55dd35fa7638 <col:12> 'int' xvalue .port 0x55dd35f645f8
|     |     `-CXXStaticCastExpr 0x55dd35fa7608 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55dd35fa75d8 <col:12> 'Router::Port' lvalue ParmVar 0x55dd35fa73f8 '' 'Router::Port &&'
|     `-ReturnStmt 0x55dd35fa7708 <col:12>
|       `-UnaryOperator 0x55dd35fa76f0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55dd35fa76e0 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55dd35f64f00 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd35f65018 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55dd35f65208 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55dd35f652c0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55dd35f65208 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55dd35fa6e78 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55dd35fa6fb0 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55dd35f655f8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55dd35f65380 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55dd35f65400 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55dd35f65480 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55dd35f65500 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55dd35f65208 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55dd35fa6fc0 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55dd35fab3d8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55dd35fa77e8 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55dd35fa77b0 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55dd35fa7798 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55dd35fa7480 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55dd35fa72e8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55dd35fa7090 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55dd35fa7078 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55dd35fa7028 <col:13> 'Router::Port [2]' lvalue ->p 0x55dd35f65208
| |   |   | |   `-CXXThisExpr 0x55dd35fa7018 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55dd35fa7058 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55dd35fa7468 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55dd35fa7130 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55dd35fa7100 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55dd35fa70c0 <col:25> 'int' lvalue ParmVar 0x55dd35f65480 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55dd35fa7118 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55dd35fa70e0 <col:33> 'int' lvalue ParmVar 0x55dd35f65500 'to_port' 'int'
| |   `-ExprWithCleanups 0x55dd35fab3c0 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55dd35fa79a8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55dd35fa7990 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55dd35fa7970 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55dd35fa72e8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55dd35fa7878 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55dd35fa7860 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55dd35fa7810 <col:13> 'Router::Port [2]' lvalue ->p 0x55dd35f65208
| |       | |   `-CXXThisExpr 0x55dd35fa7800 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55dd35fa7840 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55dd35fa7958 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55dd35fa7918 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55dd35fa78e8 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55dd35fa78a8 <col:25> 'int' lvalue ParmVar 0x55dd35f65380 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55dd35fa7900 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55dd35fa78c8 <col:35> 'int' lvalue ParmVar 0x55dd35f65400 'from_port' 'int'
| |-CXXMethodDecl 0x55dd35f657c8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55dd35f656d8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55dd35fab998 <col:45, line:182:9>
| |   |-ParenExpr 0x55dd35fab878 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55dd35fab848 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55dd35fab518 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55dd35fab4e8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55dd35fab450 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55dd35fab438 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55dd35fab3f8 <col:34> 'int' lvalue ParmVar 0x55dd35f656d8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55dd35fab418 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55dd35fab4c8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55dd35fab4b0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55dd35fab470 <col:44> 'int' lvalue ParmVar 0x55dd35f656d8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55dd35fab490 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55dd35fab578 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55dd35fab558 <col:59> 'int' 0
| |   |   `-CallExpr 0x55dd35fab7a8 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55dd35fab790 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55dd35fab770 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55dd35fab7e8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55dd35fab5e8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55dd35fab800 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55dd35fab610 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55dd35fab818 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55dd35fab648 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55dd35fab830 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55dd35fab758 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55dd35fab740 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55dd35fab6e8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55dd35fab988 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55dd35fab968 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55dd35fab938 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55dd35fab8a8 <col:20> 'Router::Port const[2]' lvalue ->p 0x55dd35f65208
| |       |   `-CXXThisExpr 0x55dd35fab898 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55dd35fab950 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55dd35fab8d8 <col:22> 'int' lvalue ParmVar 0x55dd35f656d8 'i' 'int'
| |-CXXMethodDecl 0x55dd35f65978 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55dd35f65888 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55dd35fabf10 <col:33, line:186:9>
| |   |-ParenExpr 0x55dd35fabe30 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55dd35fabe00 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55dd35fabad8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55dd35fabaa8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55dd35faba10 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55dd35fab9f8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55dd35fab9b8 <col:34> 'int' lvalue ParmVar 0x55dd35f65888 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55dd35fab9d8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55dd35faba88 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55dd35faba70 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55dd35faba30 <col:44> 'int' lvalue ParmVar 0x55dd35f65888 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55dd35faba50 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55dd35fabb38 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55dd35fabb18 <col:59> 'int' 0
| |   |   `-CallExpr 0x55dd35fabd60 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55dd35fabd48 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55dd35fabd28 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55dd35fabda0 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55dd35fabba8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55dd35fabdb8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55dd35fabbd0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55dd35fabdd0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55dd35fabc08 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55dd35fabde8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55dd35fabd10 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55dd35fabcf8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55dd35fabca8 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55dd35fabf00 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55dd35fabee0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55dd35fabeb0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55dd35fabe60 <col:20> 'Router::Port [2]' lvalue ->p 0x55dd35f65208
| |       |   `-CXXThisExpr 0x55dd35fabe50 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55dd35fabec8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55dd35fabe90 <col:22> 'int' lvalue ParmVar 0x55dd35f65888 'i' 'int'
| |-CXXMethodDecl 0x55dd35f65b18 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55dd35f65a58 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55dd35fac2e8 <col:52, line:190:9>
| |   `-ReturnStmt 0x55dd35fac2d8 <line:189:13, col:51>
| |     `-BinaryOperator 0x55dd35fac2b8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55dd35fac0d0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55dd35fac0b8 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55dd35fac070 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55dd35f64a68 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55dd35fabfa8 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55dd35fabf90 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55dd35fabf40 <col:20> 'Router::Port const[2]' lvalue ->p 0x55dd35f65208
| |       | | |   `-CXXThisExpr 0x55dd35fabf30 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55dd35fabf70 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55dd35fac050 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55dd35fac038 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55dd35fabfe8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55dd35f65208
| |       |   |   `-DeclRefExpr 0x55dd35fabfc8 <col:28> 'const Router::Connection' lvalue ParmVar 0x55dd35f65a58 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55dd35fac018 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55dd35fac280 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55dd35fac268 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55dd35fac248 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55dd35f64a68 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55dd35fac180 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55dd35fac168 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55dd35fac118 <col:38> 'Router::Port const[2]' lvalue ->p 0x55dd35f65208
| |         | |   `-CXXThisExpr 0x55dd35fac108 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55dd35fac148 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55dd35fac228 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55dd35fac210 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55dd35fac1c0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55dd35f65208
| |           |   `-DeclRefExpr 0x55dd35fac1a0 <col:46> 'const Router::Connection' lvalue ParmVar 0x55dd35f65a58 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55dd35fac1f0 <col:50> 'int' 1
| `-CXXMethodDecl 0x55dd35f65c60 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55dd35f65bd0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55dd35fac880 <col:51, line:193:9>
|     `-ReturnStmt 0x55dd35fac870 <line:192:13, col:69>
|       `-BinaryOperator 0x55dd35fac850 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55dd35fac478 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55dd35fac460 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55dd35fac440 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55dd35f64cf8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55dd35fac378 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55dd35fac360 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55dd35fac310 <col:20> 'Router::Port const[2]' lvalue ->p 0x55dd35f65208
|         | | |   `-CXXThisExpr 0x55dd35fac300 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55dd35fac340 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55dd35fac420 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55dd35fac408 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55dd35fac3b8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55dd35f65208
|         |   |   `-DeclRefExpr 0x55dd35fac398 <col:27> 'const Router::Connection' lvalue ParmVar 0x55dd35f65bd0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55dd35fac3e8 <col:31> 'int' 0
|         `-ParenExpr 0x55dd35fac830 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55dd35fac810 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55dd35fac628 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55dd35fac610 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55dd35fac5f0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55dd35f64a68 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55dd35fac528 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55dd35fac510 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55dd35fac4c0 <col:38> 'Router::Port const[2]' lvalue ->p 0x55dd35f65208
|             | | |   `-CXXThisExpr 0x55dd35fac4b0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55dd35fac4f0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55dd35fac5d0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55dd35fac5b8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55dd35fac568 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55dd35f65208
|             |   |   `-DeclRefExpr 0x55dd35fac548 <col:46> 'const Router::Connection' lvalue ParmVar 0x55dd35f65bd0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55dd35fac598 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55dd35fac7d8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55dd35fac7c0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd35fac7a0 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55dd35f64cf8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55dd35fac6d8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55dd35fac6c0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55dd35fac670 <col:56> 'Router::Port const[2]' lvalue ->p 0x55dd35f65208
|               | |   `-CXXThisExpr 0x55dd35fac660 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55dd35fac6a0 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55dd35fac780 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55dd35fac768 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55dd35fac718 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55dd35f65208
|                 |   `-DeclRefExpr 0x55dd35fac6f8 <col:63> 'const Router::Connection' lvalue ParmVar 0x55dd35f65bd0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55dd35fac748 <col:67> 'int' 1
|-AccessSpecDecl 0x55dd35f65d20 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd35f65d48 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55dd35f65e00 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55dd35f65ec0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55dd35f65f10 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55dd35f65f60 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55dd35f65fb0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55dd35f66000 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55dd35f66050 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55dd35f66168 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55dd35f66148 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55dd35f66130 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd35f66110 <col:25> 'int' 2
| |-EnumConstantDecl 0x55dd35f66210 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55dd35f661f0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55dd35f661d8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd35f661b8 <col:48> 'int' 1
| |-EnumConstantDecl 0x55dd35f662a0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55dd35f66280 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55dd35f66260 <col:71> 'int' 0
| |-EnumConstantDecl 0x55dd35f66330 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55dd35f66310 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55dd35f662f0 <col:30> 'int' 1
| `-EnumConstantDecl 0x55dd35f663c0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55dd35f663a0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55dd35f66380 <col:50> 'int' 2
|-FieldDecl 0x55dd35f66420 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55dd35f66480 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55dd35f664e8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55dd35f66588 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55dd35f66568 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55dd35f66538 <col:30> 'int' 1
|-FieldDecl 0x55dd35f66628 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55dd35f66608 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55dd35f665d8 <col:33> 'int' 1
|-FieldDecl 0x55dd35f666c8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55dd35f666a8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55dd35f66678 <col:32> 'int' 1
|-FieldDecl 0x55dd35f66730 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55dd35f66790 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55dd35f66890 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55dd35f66990 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55dd35f66a90 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55dd35f78bb0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55dd35f7f9c0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55dd35f7fa10 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55dd35f7fb28 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55dd35f7fbc8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55dd35f7fc28 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55dd35f7fcc0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55dd35f7fcc0
| | `-ParmVarDecl 0x55dd35f7fdd8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55dd35f7fe78 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55dd35f7fe78
| | `-ParmVarDecl 0x55dd35f7ff88 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55dd35f80028 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55dd35f80028
| | `-ParmVarDecl 0x55dd35f80138 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55dd35f801a8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55dd35f801a8
| | `-ParmVarDecl 0x55dd35f802b8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55dd35f80340 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55dd35f80340
|-FieldDecl 0x55dd35f8f510 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55dd35f8f570 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd35f8f680 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55dd35f8f9d8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55dd35f8fae0 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55dd35f97cf0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55dd35f97e00 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55dd35f97f00 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55dd35f98010 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55dd35f98120 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55dd35f98230 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55dd35f98340 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55dd35f98390 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55dd35f98490 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55dd35f984e0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35f98470 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55dd35f98450 <col:29> 'int' 256
|-FieldDecl 0x55dd35f98540 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55dd35f985a8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55dd35f98610 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55dd35f98710 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55dd35fa1260 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55dd35fa12c0 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55dd35fa1320 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55dd35fa1370 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55dd35fa1488 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55dd35fa1518 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55dd35fa1620 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55dd35fa1670 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55dd35fa1600 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55dd35fa15e0 <col:27> 'int' 4096
| |-FieldDecl 0x55dd35fa1698 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55dd35fa1700 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55dd35fa18f8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55dd35fa1988 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55dd35fa1b48 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55dd35fa19e8 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55dd35fa1a60 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55dd35fa1698 'name' 'String'
| | | `-CXXConstructExpr 0x55dd35fac8d8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55dd35fac898 <col:20> 'const String' lvalue ParmVar 0x55dd35fa19e8 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55dd35fa1700 'nsig' 'int'
| | | `-IntegerLiteral 0x55dd35fac930 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55dd35fa18f8 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55dd35faca18 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55dd35fa1988 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55dd35fac9d8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55dd35fac998 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55dd35fa1a60 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55dd35facca8 <col:42, line:289:9>
| |   `-CallExpr 0x55dd35facc58 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55dd35facc40 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55dd35facc20 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55dd35b56d38 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55dd35facc90 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55dd35facb68 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55dd35facb48 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55dd35facb30 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55dd35facae0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55dd35fa18f8
| |     |     |   `-CXXThisExpr 0x55dd35facad0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55dd35facb10 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55dd35facb80 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55dd35facc00 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55dd35facbe0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55dd35facbb0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55dd35fa18f8 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55dd35facba0 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55dd35fa1c28 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55dd35fa1c28
| | `-ParmVarDecl 0x55dd35fa1d38 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55dd35fa1dd8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55dd35fa1dd8
| | `-ParmVarDecl 0x55dd35fa1ee8 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55dd35fa1f88 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55dd35fa1f88
| | `-ParmVarDecl 0x55dd35fa2098 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55dd35fa2108 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55dd35fa2108
| | `-ParmVarDecl 0x55dd35fa2218 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55dd35fa22a0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55dd35fa22a0
|-FieldDecl 0x55dd35fa2390 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55dd35fa23f0 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55dd35fa2450 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55dd35fa24b0 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55dd35fa2510 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55dd35fa2620 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55dd35fa2720 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55dd35fa2780 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55dd35fa28c8 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55dd35fa2808 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55dd35fa2a78 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55dd35fa2988 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55dd35fa2bc0 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55dd35fa2b30 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55dd35fa2f68 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55dd35fa2c78 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55dd35fa2cf0 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55dd35fa2d70 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55dd35fa2de8 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55dd35fa2e60 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd35fa5fa0 <col:57> 'bool' false
|-CXXMethodDecl 0x55dd35fa30d8 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55dd35fa3040 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fa3228 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55dd35fa3190 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fa3378 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55dd35fa32e0 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fa34d0 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55dd35fa3438 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55dd35fa37f0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35fa3588 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55dd35fa3600 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55dd35fa3680 <col:56> col:59 'int'
| `-ParmVarDecl 0x55dd35fa36f8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fa3958 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55dd35fa38c0 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fa3a20 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55dd35fa3ae0 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55dd35fa3ce0 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55dd35fa3b90 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55dd35fa3c08 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55dd35fa3db0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55dd35fa3ef8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55dd35fa3e60 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55dd35facee0 <col:42, line:326:5>
|   `-ReturnStmt 0x55dd35faced0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55dd35faceb8 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55dd35face98 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55dd35face68 <col:16, col:45> '<bound member function type>' .back 0x55dd35f7da68
|           `-ArraySubscriptExpr 0x55dd35facde8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55dd35facdb8 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd35faccd0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55dd35f8f9d8
|             |   `-CXXThisExpr 0x55dd35faccc0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55dd35facdd0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55dd35facd00 <col:38> 'bool' lvalue ParmVar 0x55dd35fa3e60 'isout' 'bool'
|-CXXMethodDecl 0x55dd35fa40c8 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55dd35fa3fb0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55dd35fa4028 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55dd35fa4220 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55dd35fa4188 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55dd35fa44c8 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55dd35fa42d8 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55dd35fa4350 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55dd35fa43d0 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55dd35fa46a0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55dd35fa4590 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55dd35fa4608 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55dd35fa4828 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55dd35fa4768 <col:30> col:33 'int'
|-CXXMethodDecl 0x55dd35fa4ac0 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55dd35fa48e8 <col:23> col:26 'int'
| |-ParmVarDecl 0x55dd35fa4960 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55dd35fa49d8 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55dd35fa4cd8 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55dd35fa4b88 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55dd35fa4c00 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55dd35fa4ee8 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55dd35fa4da0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55dd35fa4e18 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55dd35fa5068 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55dd35fa4fa8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55dd35fa5268 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55dd35fa5120 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55dd35fa5198 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55dd35fa5440 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dd35fa5328 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55dd35fa53a8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55dd35fa5720 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fa5500 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55dd35fa5578 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55dd35fa55f8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55dd35fa5670 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55dd35fa5800 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55dd35fa5860 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55dd35fa5ae0 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55dd35fa59e0 parent 0x55dd35e583a0 prev 0x55dd35e67fc8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55dd35fa58c0 <col:36> col:39 'int'
    `-ParmVarDecl 0x55dd35fa5940 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e583a0 prev 0x55dd35e58120 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35e58498 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55dd35e58528 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55dd35e58588 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55dd35e58678 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55dd35e58778 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55dd35e58948 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55dd35e587f8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55dd35e58870 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55dd35e58ad8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55dd35e58a10 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55dd35e58b80 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e58cb8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55dd35e58bf0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55dd35e58e58 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55dd35e58d98 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55dd35e58ff8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55dd35e58f38 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55dd35e590a0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55dd35e591a0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55dd35e59280 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e59180 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd35e59160 <col:26> 'int' 1
| `-EnumConstantDecl 0x55dd35e59230 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55dd35e59298 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e59210 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55dd35e591f0 <col:44> 'int' 2
|-CXXMethodDecl 0x55dd35e593e0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55dd35e592c8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55dd35e59348 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55dd35e59538 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55dd35e594a8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55dd35e59778 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55dd35e595f8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55dd35e59670 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55dd35e59828 <col:20>
| `-OptimizeNoneAttr 0x55dd35e59880 <col:30>
|-CXXMethodDecl 0x55dd35e59988 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55dd35e598c0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55dd35e59a30 <col:20>
| `-OptimizeNoneAttr 0x55dd35e59a88 <col:30>
|-CXXMethodDecl 0x55dd35e59ad8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55dd35e59ba0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55dd35e59cb8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55dd35e59d40 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55dd35e59dc8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55dd35e59e50 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55dd35e59ed8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55dd35e59f68 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55dd35e5a028 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55dd35e5a0b0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55dd35e5a138 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55dd35e5a1c0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55dd35e5a248 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55dd35e5a2d0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55dd35e5a360 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55dd35e5a420 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55dd35e5a4b0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55dd35e5a600 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55dd35e5a568 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55dd35e5a790 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55dd35e5a6c0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55dd35e5aa40 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55dd35e5a848 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55dd35e5a8c8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55dd35e5a948 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55dd35e5aaf8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55dd35e5ac00 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd35e5ae90 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e5abe0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd35e5abc0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55dd35e5ac90 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd35e5aea8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e5ac70 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55dd35e5ac50 <col:32> 'int' 20
| |-EnumConstantDecl 0x55dd35e5ad20 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd35e5aec0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e5ad00 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55dd35e5ace0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55dd35e5adb0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd35e5aed8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e5ad90 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55dd35e5ad70 <col:35> 'int' 100
| `-EnumConstantDecl 0x55dd35e5ae40 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55dd35e5aef0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e5ae20 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55dd35e5ae00 <col:32> 'int' 2000
|-CXXMethodDecl 0x55dd35e5af30 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55dd35e5b370 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dd35e5b1e0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55dd35e5b258 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e5b440 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55dd35e5b5c0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55dd35e5b4f0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e5b7c8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dd35e5b678 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55dd35e5b6f0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e5b8c8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55dd35e5b968 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55dd35e5ba30 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd35e5bac0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55dd35e5bcf0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e5baa0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55dd35e5ba80 <col:36> 'int' EnumConstant 0x55dd35e5ba30 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd35e5bb10 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd35e5bb60 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd35e5bbb0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd35e5bc00 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd35e5bc50 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55dd35e5bca0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55dd35e5bdd8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55dd35e5bd18 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55dd35e5bea0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55dd35e5bf60 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55dd35e5c020 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55dd35e5c0e0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55dd35e5c1f8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55dd35e5c2c0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55dd35e5c440 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55dd35e5c370 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55dd35e5c568 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55dd35e5c768 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55dd35e5c618 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55dd35e5c698 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55dd35e6a0b8 <col:54, line:127:5>
|   |-ParenExpr 0x55dd35e69f68 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55dd35e69f38 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e69c28 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55dd35e69c00 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55dd35e69be8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55dd35e69bd0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55dd35e69ba0 <col:31> 'Router *' lvalue ->_router 0x55dd35e67a80
|   |   |         `-CXXThisExpr 0x55dd35e69b90 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55dd35e69c88 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e69c68 <col:48> 'int' 0
|   |   `-CallExpr 0x55dd35e69e98 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e69e80 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e69e60 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e69ed8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e69cf8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55dd35e69ef0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e69d18 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55dd35e69f08 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e69d50 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55dd35e69f20 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e69e48 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e69e30 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e69de8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55dd35e6a000 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55dd35e69f98 <col:9> 'Router *' lvalue ->_router 0x55dd35e67a80
|   | | `-CXXThisExpr 0x55dd35e69f88 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55dd35e69fe8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd35e69fc8 <col:19> 'Router *' lvalue ParmVar 0x55dd35e5c618 'r' 'Router *'
|   `-BinaryOperator 0x55dd35e6a098 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55dd35e6a030 <col:9> 'int' lvalue ->_eindex 0x55dd35e67ae8
|     | `-CXXThisExpr 0x55dd35e6a020 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55dd35e6a080 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e6a060 <col:19> 'int' lvalue ParmVar 0x55dd35e5c698 'eindex' 'int'
|-CXXMethodDecl 0x55dd35e5c8f0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55dd35e5c828 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55dd35e5c9c0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55dd35e5ca88 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55dd35e5cb28 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55dd35e5cd78 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55dd35e5cbf0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55dd35e5cc70 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55dd35e5ce28 <col:20>
| `-OptimizeNoneAttr 0x55dd35e5ce80 <col:30>
|-CXXMethodDecl 0x55dd35e5cf88 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55dd35e5cec0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55dd35e5d030 <col:20>
| `-OptimizeNoneAttr 0x55dd35e5d088 <col:30>
|-CXXMethodDecl 0x55dd35e5d158 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55dd35e5d0c8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55dd35e5d200 <col:20>
| `-OptimizeNoneAttr 0x55dd35e5d258 <col:30>
|-CXXMethodDecl 0x55dd35e5d3e8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55dd35e5d290 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55dd35e5d310 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55dd35e5d578 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55dd35e5d4b0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55dd35e5d6c8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55dd35e5d638 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55dd35e5d818 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55dd35e5d788 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55dd35e5d968 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55dd35e5d8d8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55dd35e5dc28 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55dd35e5da20 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55dd35e5daa0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55dd35e5db48 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55dd35e5dd00 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55dd35e5ddc0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55dd35e5e090 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dd35e5df40 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55dd35e5dfb8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e5e1b8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55dd35e5e390 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55dd35e5e270 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55dd35e5e2f0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55dd35e5e578 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55dd35e5e458 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55dd35e5e4d8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55dd35e5e8e8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55dd35e5e638 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dd35e5e6b0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dd35e5e730 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dd35e696a0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd35e69680 <col:106> 'int' 0
| `-ParmVarDecl 0x55dd35e5e7a8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35e696d8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35e696b8 <col:126> 'int' 0
|-CXXMethodDecl 0x55dd35e5ec88 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dd35e5e9b8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dd35e5ea50 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dd35e5ead0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55dd35e5eb48 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35e69710 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35e696f0 <col:114> 'int' 0
|-CXXMethodDecl 0x55dd35e5f018 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dd35e5ed60 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55dd35e5edd8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dd35e5ee58 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55dd35e69728 <col:96> 'int' 0
| `-ParmVarDecl 0x55dd35e5eed0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35e69768 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35e69748 <col:116> 'int' 0
|-CXXMethodDecl 0x55dd35e5f398 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55dd35e5f0e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55dd35e5f160 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35e5f1e0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dd35e697a0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd35e69780 <col:109> 'int' 0
| `-ParmVarDecl 0x55dd35e5f258 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35e697d8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35e697b8 <col:129> 'int' 0
|-CXXMethodDecl 0x55dd35e5f718 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dd35e5f468 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55dd35e5f4e0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35e5f560 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55dd35e5f5d8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35e69810 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35e697f0 <col:117> 'int' 0
|-CXXMethodDecl 0x55dd35e5faa8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dd35e5f7f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e5f868 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35e5f8e8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55dd35e69828 <col:99> 'int' 0
| `-ParmVarDecl 0x55dd35e5f960 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd35e69868 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd35e69848 <col:119> 'int' 0
|-CXXMethodDecl 0x55dd35e5fec8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55dd35e5fb78 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55dd35e5fbf8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55dd35e5fc70 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35e5fcf0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dd35e698a0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd35e69880 <col:108> 'int' 0
| `-ParmVarDecl 0x55dd35e5fd70 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55dd35e698d8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35e698b8 <col:141> 'int' 0
|-CXXMethodDecl 0x55dd35e602e8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55dd35e5ffa0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55dd35e60020 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55dd35e60098 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35e60118 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55dd35e60198 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55dd35e698f0 <col:121> 'int' 0
|-CXXMethodDecl 0x55dd35e60718 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55dd35e603c8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55dd35e60448 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55dd35e604c0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35e60540 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55dd35e69910 <col:98> 'int' 0
| `-ParmVarDecl 0x55dd35e605c0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55dd35e69930 <col:123> 'int' 0
|-CXXMethodDecl 0x55dd35e609e0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55dd35e607f0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dd35e60870 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55dd35e608f0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55dd35e69950 <col:80> 'int' 0
|-EnumDecl 0x55dd35e60a98 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55dd35e60ba0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dd35e60e30 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e60b80 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd35e60b60 <col:42> 'int' 1
| |-EnumConstantDecl 0x55dd35e60c30 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dd35e60e48 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e60c10 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd35e60bf0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55dd35e60cc0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dd35e60e60 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e60ca0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd35e60c80 <col:44> 'int' 4
| |-EnumConstantDecl 0x55dd35e60d50 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dd35e60e78 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e60d30 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55dd35e60d10 <col:36> 'int' 7
| `-EnumConstantDecl 0x55dd35e60de0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55dd35e60e90 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e60dc0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55dd35e60da0 <col:34> 'int' 6
|-CXXMethodDecl 0x55dd35e61148 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55dd35e60eb8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55dd35e60f58 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55dd35e60fd8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55dd35e61050 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55dd35e69a08 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dd35e699f0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55dd35e699d8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dd35e699b8 <col:98, col:105> 'String' (CXXTemporary 0x55dd35e699b8)
|           `-CXXTemporaryObjectExpr 0x55dd35e69980 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55dd35e613e8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55dd35e61218 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55dd35e61290 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55dd35e61308 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55dd35e69ab8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55dd35e69aa0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55dd35e69a88 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55dd35e69a68 <col:94, col:101> 'String' (CXXTemporary 0x55dd35e69a68)
| |         `-CXXTemporaryObjectExpr 0x55dd35e69a30 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55dd35e6a2a0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55dd35e6a218 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55dd35e6a1e8 <col:9> '<bound member function type>' ->add_task_handlers 0x55dd35e61148
|     | `-CXXThisExpr 0x55dd35e6a1d8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55dd35e6a258 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd35e6a158 <col:27> 'Task *' lvalue ParmVar 0x55dd35e61218 'task' 'Task *'
|     |-ImplicitCastExpr 0x55dd35e6a270 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd35e6a178 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55dd35e61290 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55dd35e6a288 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55dd35e6a198 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55dd35e60de0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55dd35e6a1b8 <col:62> 'const String' lvalue ParmVar 0x55dd35e61308 'prefix' 'const String &'
|-CXXMethodDecl 0x55dd35e615f8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55dd35e614b0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55dd35e61528 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55dd35e69b68 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55dd35e69b50 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55dd35e69b38 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55dd35e69b18 <col:70, col:77> 'String' (CXXTemporary 0x55dd35e69b18)
| |         `-CXXTemporaryObjectExpr 0x55dd35e69ae0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55dd35e6a478 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55dd35e6a3f0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55dd35e6a3c0 <col:9> '<bound member function type>' ->add_task_handlers 0x55dd35e61148
|     | `-CXXThisExpr 0x55dd35e6a3b0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55dd35e6a430 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd35e6a330 <col:27> 'Task *' lvalue ParmVar 0x55dd35e614b0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55dd35e6a448 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55dd35e6a350 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55dd35e6a460 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55dd35e6a370 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55dd35e60de0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55dd35e6a390 <col:57> 'const String' lvalue ParmVar 0x55dd35e61528 'prefix' 'const String &'
|-CXXMethodDecl 0x55dd35e618d8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55dd35e616c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e61740 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e617b8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55dd35e61b88 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55dd35e619a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e61a28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e61aa8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55dd35e61e78 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55dd35e61c58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e61cd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e61d50 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55dd35e62128 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55dd35e61f48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e61fc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e62048 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55dd35e623d8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55dd35e621f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e62278 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e622f8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55dd35e62688 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55dd35e624a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e62528 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e625a0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55dd35e62938 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55dd35e62758 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e627d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e62858 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55dd35e62c48 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55dd35e62a60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e62ae0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e62b60 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55dd35e62f28 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55dd35e62d18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e62d98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e62e40 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55dd35e63208 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55dd35e62ff8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e63078 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e63120 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55dd35e63470 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55dd35e632d8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55dd35e63358 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55dd35e633d0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55dd35e63718 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55dd35e63540 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55dd35e635c0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55dd35e63638 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55dd35e639c8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55dd35e637e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e63868 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e638e8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55dd35e63c78 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55dd35e63a98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e63b18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e63b90 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55dd35e63f28 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55dd35e63d48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e63dc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e63e40 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55dd35e641f8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55dd35e63ff8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e64078 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd35e64118 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55dd35e64528 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55dd35e642c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd35e64348 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55dd35e643c0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55dd35e64438 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd35e69b80 <col:93> 'bool' false
|-CXXMethodDecl 0x55dd35e64710 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dd35e645f8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55dd35e64678 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55dd35e648e8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dd35e647d0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55dd35e64850 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55dd35e64bc8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35e649a8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55dd35e64a20 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55dd35e64aa0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55dd35e64b18 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e64eb8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35e64c98 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55dd35e64d10 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55dd35e64d90 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55dd35e64e08 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e650f0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55dd35e64f90 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55dd35e65010 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55dd35e652d8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55dd35e651b8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55dd35e65238 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55dd35e65388 prev 0x55dd35e5cb28 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd35e65480 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55dd35e65510 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55dd35e65588 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55dd35e65648 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55dd35e65710 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55dd35e65888 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55dd35e657c0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55dd35e65930 <col:24>
| | `-OptimizeNoneAttr 0x55dd35e65988 <col:34>
| |-CXXMethodDecl 0x55dd35e659d0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55dd35e65c88 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55dd35e65a80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55dd35e65af8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55dd35e65b78 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55dd35e65d40 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55dd35e65d78 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55dd35e65de0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55dd35e65e68 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55dd35e66188 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55dd35e65f20 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55dd35e65f98 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55dd35e66010 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55dd35e66090 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55dd35e662a0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55dd35e6dc18 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55dd35e6dc18
| | `-ParmVarDecl 0x55dd35e6dd28 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55dd35e6ddc8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55dd35e6ddc8
| | `-ParmVarDecl 0x55dd35e6ded8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55dd35fd9ba0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd35e66318 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55dd35e663b8 <col:38> "" ""
|-CXXMethodDecl 0x55dd35e66448 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55dd35e664e8 <col:44> "" ""
|-AccessSpecDecl 0x55dd35e66558 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55dd35e66580 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55dd35e66680 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55dd35e666d0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e66660 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55dd35e66640 <col:27> 'int' 4
|-FieldDecl 0x55dd35e66788 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55dd35e66938 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55dd35e669f0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55dd35e67a80 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55dd35e67ae8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55dd35e67c38 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55dd35e67b78 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55dd35e67de8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55dd35e67cf8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55dd35e67fc8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55dd35e67ea8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55dd35e67f28 <col:25> col:28 'int'
|-CXXMethodDecl 0x55dd35e68270 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35e68090 <col:23> col:26 'int'
| |-ParmVarDecl 0x55dd35e68110 <col:28> col:31 'int'
| `-ParmVarDecl 0x55dd35e68188 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55dd35e68328 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55dd35e683f0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55dd35e68440 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55dd35e68490 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55dd35e68670 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35e68520 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55dd35e68598 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e68918 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55dd35e68738 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55dd35e687b8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55dd35e68830 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e68b38 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55dd35e689e8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55dd35e68a68 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55dd35e68e70 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55dd35e68bf8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55dd35e68c78 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55dd35e68cf0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55dd35e68d70 <col:57> col:60 'int'
|-CXXMethodDecl 0x55dd35e69058 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dd35e68f40 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55dd35e68fc0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55dd35e691a8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55dd35e69118 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55dd35e69528 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55dd35e69268 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55dd35e692e8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55dd35e69360 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55dd35e693e0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55dd35e69640 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<const class Handler *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class QuitWatcher
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Vector<class Element *> _e
       112 |     class vector_memory<class sized_array_memory<8> > vm_
       112 |       vector_memory<class sized_array_memory<8> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   class Vector<const class Handler *> _handlers
       128 |     class vector_memory<class sized_array_memory<8> > vm_
       128 |       vector_memory<class sized_array_memory<8> >::type * l_
       136 |       vector_memory::size_type n_
       140 |       vector_memory::size_type capacity_
       144 |   class Timer _timer
       144 |     int _schedpos1
       152 |     class Timestamp _expiry_s
       152 |       union Timestamp::rep_t _t
       152 |         int64_t x
       160 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       160 |       TimerCallback callback
       168 |     void * _thunk
       176 |     class Element * _owner
       184 |     class RouterThread * _thread
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35e9b670 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'const Handler *'
|-CXXRecordDecl 0x55dd35e9b878 prev 0x55dd35e9b670 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35e9c890 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<const Handler *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55dd35e9c840 'typename array_memory<const Handler *>::type' sugar
|   `-TypedefType 0x55dd35e9c820 'conditional<true, sized_array_memory<8>, typed_array_memory<const Handler *> >::type' sugar
|     |-Typedef 0x55dd35e9c6d0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35e91700 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35e91250 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55dd35e91168 'sized_array_memory'
|-FieldDecl 0x55dd35e9c990 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<const Handler *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55dd35e9c9e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35e9ca18 <line:118:5, col:15> col:15 value_type 'const Handler *':'const Handler *'
| `-SubstTemplateTypeParmType 0x55dd35e9b910 'const Handler *' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-PointerType 0x55dd35e4e970 'const Handler *'
|     `-QualType 0x55dd35e4e7b1 'const Handler' const
|       `-RecordType 0x55dd35e4e7b0 'Handler'
|         `-CXXRecord 0x55dd35e4f288 'Handler'
|-TypedefDecl 0x55dd35e9cad8 <line:119:5, col:16> col:16 reference 'const Handler *&'
| `-LValueReferenceType 0x55dd35e9caa0 'const Handler *&'
|   `-SubstTemplateTypeParmType 0x55dd35e9b910 'const Handler *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e4e970 'const Handler *'
|       `-QualType 0x55dd35e4e7b1 'const Handler' const
|         `-RecordType 0x55dd35e4e7b0 'Handler'
|           `-CXXRecord 0x55dd35e4f288 'Handler'
|-TypedefDecl 0x55dd35e9cb98 <line:120:5, col:22> col:22 const_reference 'const Handler *const &'
| `-LValueReferenceType 0x55dd35e9cb60 'const Handler *const &'
|   `-QualType 0x55dd35e9b911 'const Handler *const' const
|     `-SubstTemplateTypeParmType 0x55dd35e9b910 'const Handler *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e4e970 'const Handler *'
|         `-QualType 0x55dd35e4e7b1 'const Handler' const
|           `-RecordType 0x55dd35e4e7b0 'Handler'
|             `-CXXRecord 0x55dd35e4f288 'Handler'
|-TypedefDecl 0x55dd35e9cc58 <line:121:5, col:16> col:16 pointer 'const Handler **'
| `-PointerType 0x55dd35e9cc20 'const Handler **'
|   `-SubstTemplateTypeParmType 0x55dd35e9b910 'const Handler *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e4e970 'const Handler *'
|       `-QualType 0x55dd35e4e7b1 'const Handler' const
|         `-RecordType 0x55dd35e4e7b0 'Handler'
|           `-CXXRecord 0x55dd35e4f288 'Handler'
|-TypedefDecl 0x55dd35e9cd18 <line:122:5, col:22> col:22 const_pointer 'const Handler *const *'
| `-PointerType 0x55dd35e9cce0 'const Handler *const *'
|   `-QualType 0x55dd35e9b911 'const Handler *const' const
|     `-SubstTemplateTypeParmType 0x55dd35e9b910 'const Handler *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e4e970 'const Handler *'
|         `-QualType 0x55dd35e4e7b1 'const Handler' const
|           `-RecordType 0x55dd35e4e7b0 'Handler'
|             `-CXXRecord 0x55dd35e4f288 'Handler'
|-TypedefDecl 0x55dd35e9d8f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<const Handler *>::type':'const Handler *'
| `-ElaboratedType 0x55dd35e9d8a0 'typename fast_argument<const Handler *>::type' sugar
|   `-TypedefType 0x55dd35e9d880 'fast_argument<const Handler *, false>::type' sugar
|     |-Typedef 0x55dd35e9d810 'type'
|     `-SubstTemplateTypeParmType 0x55dd35e9d5d0 'const Handler *' sugar
|       |-TemplateTypeParmType 0x55dd35bc7480 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bc7430 'T'
|       `-PointerType 0x55dd35e4e970 'const Handler *'
|         `-QualType 0x55dd35e4e7b1 'const Handler' const
|           `-RecordType 0x55dd35e4e7b0 'Handler'
|             `-CXXRecord 0x55dd35e4f288 'Handler'
|-TypedefDecl 0x55dd35e9d958 <line:126:5, col:22> col:22 const_access_type 'const Handler *const &'
| `-LValueReferenceType 0x55dd35e9cb60 'const Handler *const &'
|   `-QualType 0x55dd35e9b911 'const Handler *const' const
|     `-SubstTemplateTypeParmType 0x55dd35e9b910 'const Handler *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e4e970 'const Handler *'
|         `-QualType 0x55dd35e4e7b1 'const Handler' const
|           `-RecordType 0x55dd35e4e7b0 'Handler'
|             `-CXXRecord 0x55dd35e4f288 'Handler'
|-TypedefDecl 0x55dd35e9d9b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35e9da18 <line:130:5, col:16> col:16 iterator 'const Handler **'
| `-PointerType 0x55dd35e9cc20 'const Handler **'
|   `-SubstTemplateTypeParmType 0x55dd35e9b910 'const Handler *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e4e970 'const Handler *'
|       `-QualType 0x55dd35e4e7b1 'const Handler' const
|         `-RecordType 0x55dd35e4e7b0 'Handler'
|           `-CXXRecord 0x55dd35e4f288 'Handler'
|-TypedefDecl 0x55dd35e9da80 <line:131:5, col:22> col:22 const_iterator 'const Handler *const *'
| `-PointerType 0x55dd35e9cce0 'const Handler *const *'
|   `-QualType 0x55dd35e9b911 'const Handler *const' const
|     `-SubstTemplateTypeParmType 0x55dd35e9b910 'const Handler *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e4e970 'const Handler *'
|         `-QualType 0x55dd35e4e7b1 'const Handler' const
|           `-RecordType 0x55dd35e4e7b0 'Handler'
|             `-CXXRecord 0x55dd35e4f288 'Handler'
|-EnumDecl 0x55dd35e9dad8 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35e9dbd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<const Handler *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35e9dbb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35e9dc58 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35e9dee8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<const Handler *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35e9dd10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35e9ddb0 <col:41, col:61> col:61 v 'Vector<const Handler *>::value_argument_type':'const Handler *'
|-CXXConstructorDecl 0x55dd35e9e1a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<const Handler *> &)' inline
| `-ParmVarDecl 0x55dd35e9e090 <col:19, col:36> col:36 x 'const Vector<const Handler *> &'
|-CXXConstructorDecl 0x55dd35e9e468 <line:141:5, col:32> col:12 Vector 'void (Vector<const Handler *> &&)' inline
| `-ParmVarDecl 0x55dd35e9e350 <col:19, col:31> col:31 x 'Vector<const Handler *> &&'
|-CXXMethodDecl 0x55dd35e9e7b0 <line:144:5, col:51> col:23 operator= 'Vector<const Handler *> &(const Vector<const Handler *> &)' inline
| `-ParmVarDecl 0x55dd35e9e690 <col:33, col:50> col:50 x 'const Vector<const Handler *> &'
|-CXXMethodDecl 0x55dd35e9eac0 <line:146:5, col:46> col:23 operator= 'Vector<const Handler *> &(Vector<const Handler *> &&)' inline
| `-ParmVarDecl 0x55dd35e9e9a0 <col:33, col:45> col:45 x 'Vector<const Handler *> &&'
|-CXXMethodDecl 0x55dd35e9edb0 <line:148:5, col:70> col:23 assign 'Vector<const Handler *> &(Vector::size_type, Vector<const Handler *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35e9ebf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35e9ec70 <col:43, col:69> col:63 v 'Vector<const Handler *>::value_argument_type':'const Handler *'
|-CXXMethodDecl 0x55dd35e9ef08 <line:150:5, col:55> col:49 begin 'Vector<const Handler *>::iterator ()'
| |-NoInlineAttr 0x55dd35e9efe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e9f040 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e9f088 <line:151:5, col:53> col:49 end 'Vector<const Handler *>::iterator ()'
| |-NoInlineAttr 0x55dd35e9f138 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e9f190 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e9f258 <line:152:5, col:63> col:55 begin 'Vector<const Handler *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35e9f308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e9f360 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e9f3a8 <line:153:5, col:61> col:55 end 'Vector<const Handler *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35e9f458 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e9f4b0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e9f4f8 <line:154:5, col:64> col:55 cbegin 'Vector<const Handler *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35e9f5a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e9f600 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e9f648 <line:155:5, col:62> col:55 cend 'Vector<const Handler *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35e9f6f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35e9f750 <col:30> Inherited
|-CXXMethodDecl 0x55dd35e9f778 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35e9f828 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35e9f8d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35e9fa98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<const Handler *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35e9f988 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35e9fa00 <col:37, col:63> col:57 v 'Vector<const Handler *>::value_argument_type':'const Handler *'
|-CXXMethodDecl 0x55dd35e9fbe8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35e9fb58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35e9fd98 <line:163:5, col:65> col:43 operator[] 'const Handler *&(Vector::size_type)'
| |-ParmVarDecl 0x55dd35e9fca0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35e9fe50 <col:20>
| `-OptimizeNoneAttr 0x55dd35e9fea8 <col:30>
|-CXXMethodDecl 0x55dd35e9ffc8 <line:164:5, col:73> col:49 operator[] 'const Handler *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35e9fed0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35ea0080 <col:20>
| `-OptimizeNoneAttr 0x55dd35ea00d8 <col:30>
|-CXXMethodDecl 0x55dd35ea0190 <line:165:5, col:29> col:15 at 'const Handler *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35ea0100 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ea02d8 <line:166:5, col:37> col:21 at 'const Handler *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35ea0248 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ea0408 <line:167:5, col:21> col:15 front 'const Handler *&()' inline
|-CXXMethodDecl 0x55dd35ea0538 <line:168:5, col:29> col:21 front 'const Handler *const &() const' inline
|-CXXMethodDecl 0x55dd35ea0608 <line:169:5, col:20> col:15 back 'const Handler *&()' inline
|-CXXMethodDecl 0x55dd35ea06d8 <line:170:5, col:28> col:21 back 'const Handler *const &() const' inline
|-CXXMethodDecl 0x55dd35ea0818 <line:172:5, col:39> col:15 unchecked_at 'const Handler *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35ea0788 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ea0960 <line:173:5, col:47> col:21 unchecked_at 'const Handler *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35ea08d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ea0aa8 <line:174:5, col:59> col:15 at_u 'const Handler *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35ea0a18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35ea0b60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35ea0c60 <line:175:5, col:71> col:21 at_u 'const Handler *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35ea0bd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35ea0d18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35ea0dd8 <line:177:5, col:20> col:15 data 'const Handler **()' inline
|-CXXMethodDecl 0x55dd35ea0ed8 <line:178:5, col:28> col:21 data 'const Handler *const *() const' inline
|-CXXMethodDecl 0x55dd35ea1088 <line:180:5, col:48> col:17 push_back 'void (Vector<const Handler *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35ea0f98 <col:27, col:47> col:47 v 'Vector<const Handler *>::value_argument_type':'const Handler *'
|-FunctionTemplateDecl 0x55dd35ea1848 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35ea1140 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<const Handler *>':'fast_argument<const Handler *, false>'
| `-CXXMethodDecl 0x55dd35ea17a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (const Handler *&&)' inline
|   `-ParmVarDecl 0x55dd35ea16a8 <col:58, col:62> col:62 v 'const Handler *&&'
|-CXXMethodDecl 0x55dd35ea1928 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35ea1b10 <line:186:5, col:49> col:17 push_front 'void (Vector<const Handler *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35ea19e8 <col:28, col:48> col:48 v 'Vector<const Handler *>::value_argument_type':'const Handler *'
|-CXXMethodDecl 0x55dd35ea1bc8 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35ea1e18 <line:189:5, col:62> col:21 insert 'Vector<const Handler *>::iterator (Vector<const Handler *>::iterator, Vector<const Handler *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35ea1c88 <col:28, col:37> col:37 it 'Vector<const Handler *>::iterator':'const Handler **'
| `-ParmVarDecl 0x55dd35ea1d00 <col:41, col:61> col:61 v 'Vector<const Handler *>::value_argument_type':'const Handler *'
|-CXXMethodDecl 0x55dd35ea1fd8 <line:190:5, col:38> col:21 erase 'Vector<const Handler *>::iterator (Vector<const Handler *>::iterator)' inline
| `-ParmVarDecl 0x55dd35ea1ee8 <col:27, col:36> col:36 it 'Vector<const Handler *>::iterator':'const Handler **'
|-CXXMethodDecl 0x55dd35ea2228 <line:191:5, col:49> col:21 erase 'Vector<const Handler *>::iterator (Vector<const Handler *>::iterator, Vector<const Handler *>::iterator)' inline
| |-ParmVarDecl 0x55dd35ea20a0 <col:27, col:36> col:36 a 'Vector<const Handler *>::iterator':'const Handler **'
| `-ParmVarDecl 0x55dd35ea2118 <col:39, col:48> col:48 b 'Vector<const Handler *>::iterator':'const Handler **'
|-CXXMethodDecl 0x55dd35ea22e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35ea2548 <line:195:5, col:34> col:17 swap 'void (Vector<const Handler *> &)' inline
| `-ParmVarDecl 0x55dd35ea2450 <col:22, col:33> col:33 x 'Vector<const Handler *> &'
`-CXXDestructorDecl 0x55dd35ea2618 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55dd35fd9b90 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35df0cd0 prev 0x55dd35de7b10 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35df0dc8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55dd35df0e68 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55dd35df7c30 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd35df8018 <col:11>
|-CXXConstructorDecl 0x55dd35df7d10 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35df7df8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55dd35df8760 <col:11>
|-CXXConstructorDecl 0x55dd35df7e98 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35df7fa8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55dd35df9fb8 <col:11>
|-CXXDestructorDecl 0x55dd35df92c8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd35affe78 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35afff88 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55dd35b00850 <col:11>
|   `-ReturnStmt 0x55dd35b00840 <col:11>
|     `-UnaryOperator 0x55dd35b00828 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd35b00818 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55dd35affff8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55dd35b00108 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55dd35e8e2f0 <col:11>
    `-ReturnStmt 0x55dd35e8e2e0 <col:11>
      `-UnaryOperator 0x55dd35e8e2c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55dd35e8e2b8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35de6cc8 prev 0x55dd35de69d8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35de6dc0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55dd35de6e50 <col:19, col:25> col:19 public
|-TypedefDecl 0x55dd35de6e88 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55dd35a4c050 'int32_t' sugar
|   |-Typedef 0x55dd3595d268 'int32_t'
|   `-TypedefType 0x55dd359363b0 '__int32_t' sugar
|     |-Typedef 0x55dd35935fc8 '__int32_t'
|     `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35de6ef0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55dd35a4c210 'int64_t' sugar
|   |-Typedef 0x55dd3595d2d0 'int64_t'
|   `-TypedefType 0x55dd359364d0 '__int64_t' sugar
|     |-Typedef 0x55dd359360a8 '__int64_t'
|     `-BuiltinType 0x55dd358f4390 'long'
|-EnumDecl 0x55dd35de6f48 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55dd35de70c0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55dd35de70a0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55dd35de7078 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55dd35de7060 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55dd35de7030 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55dd35de71b8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55dd35de7198 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55dd35de7170 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55dd35de7158 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55dd35de7130 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55dd35de7110 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55dd35de7208 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55dd35de7310 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd35de7860 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35de72f0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55dd35de72d0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55dd35de73a0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd35de7878 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35de7380 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55dd35de7360 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55dd35de7430 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd35de7890 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35de7410 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55dd35de73f0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55dd35de74c0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd35de78a8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35de74a0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55dd35de7480 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55dd35de7550 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd35de78c0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35de7530 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55dd35de7510 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55dd35de75e0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd35de78d8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35de75c0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55dd35de75a0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55dd35de7670 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd35de78f0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35de7650 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55dd35de7630 <col:26> 'int' EnumConstant 0x55dd35de7310 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55dd35de7740 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd35de7908 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35de7720 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55dd35de7700 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55dd35de76c0 <col:27> 'int' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55dd35de76e0 <col:44> 'int' EnumConstant 0x55dd35de75e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55dd35de7810 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55dd35de7920 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35de77f0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55dd35de77d0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55dd35de7790 <col:27> 'int' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55dd35de77b0 <col:44> 'int' EnumConstant 0x55dd35de74c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55dd35de7938 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55dd35de7a40 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55dd35de7a90 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35de7a20 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55dd35de7a00 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55dd35de7ab8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55dd35a4bc80 'uninitialized_type'
|   `-CXXRecord 0x55dd35a4bbe8 'uninitialized_type'
|-CXXRecordDecl 0x55dd35de7b10 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55dd35de7c20 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df8028 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd35df8148 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55dd35df8100 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55dd35df8090 <col:9> '<bound member function type>' ->assign 0x55dd35dec868
|     | `-CXXThisExpr 0x55dd35df8080 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55dd35df80c0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55dd35df8130 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55dd35df80e0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55dd35de7e68 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55dd35de7ce0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55dd35de7d58 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd35df3960 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd35df3940 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df8160 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd35df82b0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55dd35df8238 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55dd35df81c8 <col:9> '<bound member function type>' ->assign 0x55dd35dec868
|     | `-CXXThisExpr 0x55dd35df81b8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd35df8280 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55dd35df8268 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55dd35df81f8 <col:16> 'long' lvalue ParmVar 0x55dd35de7ce0 'sec' 'long'
|     `-ImplicitCastExpr 0x55dd35df8298 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35df8218 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35de7d58 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd35de80c8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55dd35de7f38 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55dd35de7fb0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd35df3998 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd35df3978 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df82c8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd35df8400 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55dd35df83a0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55dd35df8330 <col:9> '<bound member function type>' ->assign 0x55dd35dec868
|     | `-CXXThisExpr 0x55dd35df8320 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd35df83d0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd35df8360 <col:16> 'int' lvalue ParmVar 0x55dd35de7f38 'sec' 'int'
|     `-ImplicitCastExpr 0x55dd35df83e8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35df8380 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35de7fb0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd35de8328 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55dd35de8198 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55dd35de8210 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd35df39d0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd35df39b0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df8418 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd35df8568 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55dd35df84f0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55dd35df8480 <col:9> '<bound member function type>' ->assign 0x55dd35dec868
|     | `-CXXThisExpr 0x55dd35df8470 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd35df8538 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55dd35df8520 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55dd35df84b0 <col:16> 'unsigned long' lvalue ParmVar 0x55dd35de8198 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55dd35df8550 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35df84d0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35de8210 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd35de94c0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55dd35de83f8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55dd35de8470 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd35df3a08 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd35df39e8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df8580 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd35df86d0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55dd35df8658 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55dd35df85e8 <col:9> '<bound member function type>' ->assign 0x55dd35dec868
|     | `-CXXThisExpr 0x55dd35df85d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd35df86a0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55dd35df8688 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55dd35df8618 <col:16> 'unsigned int' lvalue ParmVar 0x55dd35de83f8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55dd35df86b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35df8638 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35de8470 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd35de9620 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55dd35de9590 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55dd35de97b8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55dd35de96f8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55dd35de99e8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55dd35de98f0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55dd35de9b98 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55dd35de9ad8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df8770 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55dd35df86e8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55dd35de9ad8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55dd35df87d0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55dd35de9d68 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55dd35de9ca8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df87e0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd35df8890 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55dd35df8868 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55dd35df8838 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55dd35de9ca8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55dd35de9f58 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55dd35de9ed0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55dd35de6a70 'Timestamp'
|   | `-CXXRecord 0x55dd35de6cc8 'Timestamp'
|   `-ParenType 0x55dd35de9e70 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55dd35de9e40 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55dd35de7010 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55dd35de6e88 'seconds_type'
|         `-TypedefType 0x55dd35a4c050 'int32_t' sugar
|           |-Typedef 0x55dd3595d268 'int32_t'
|           `-TypedefType 0x55dd359363b0 '__int32_t' sugar
|             |-Typedef 0x55dd35935fc8 '__int32_t'
|             `-BuiltinType 0x55dd358f4370 'int'
|-CXXConversionDecl 0x55dd35dea098 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55dd35dea168 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55dd35df8998 <col:37, line:231:5>
|   `-ReturnStmt 0x55dd35df8988 <line:227:9, col:23>
|     `-BinaryOperator 0x55dd35df8968 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55dd35df8938 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55dd35df88e8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55dd35df0e68
|       |   `-MemberExpr 0x55dd35df88b8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55dd35df1e18
|       |     `-CXXThisExpr 0x55dd35df88a8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55dd35df8950 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55dd35df8918 <col:23> 'int' 0
|-CXXMethodDecl 0x55dd35dea228 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55dd35dea2e8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35dea3a8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35dea468 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35dea528 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35dea698 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55dd35dea5d8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55dd35dea7e0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55dd35dea750 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35dea8a8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55dd35dea948 <col:54> "" ""
|-CXXMethodDecl 0x55dd35dea9d8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55dd35deaa78 <col:54> "" ""
|-CXXMethodDecl 0x55dd35deab08 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55dd35deaba8 <col:54> "" ""
|-CXXMethodDecl 0x55dd35deaca8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55dd35dead78 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55dd35deaea8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55dd35deafa0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55dd35deb0d8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55dd35df8bb0 <col:39, line:271:5>
|   `-ReturnStmt 0x55dd35df8ba0 <line:267:9, col:61>
|     `-CallExpr 0x55dd35df8b40 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55dd35df8b28 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35df89b0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55dd35df2148 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55dd35df8b70 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55dd35df8a10 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55dd35df0e68
|       |   `-MemberExpr 0x55dd35df89e0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55dd35df1e18
|       |     `-CXXThisExpr 0x55dd35df89d0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55dd35df8b88 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55dd35df8ab0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55dd35df8a80 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55dd35df8a40 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55dd35df8a98 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55dd35df8a60 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de75e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd35deb198 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55dd35df8d70 <col:39, line:279:5>
|   `-ReturnStmt 0x55dd35df8d60 <line:275:9, col:61>
|     `-CallExpr 0x55dd35df8d00 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55dd35df8ce8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35df8bc8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55dd35df2148 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55dd35df8d30 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55dd35df8c28 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55dd35df0e68
|       |   `-MemberExpr 0x55dd35df8bf8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55dd35df1e18
|       |     `-CXXThisExpr 0x55dd35df8be8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55dd35df8d48 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55dd35df8cc8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55dd35df8c98 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55dd35df8c58 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55dd35df8cb0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55dd35df8c78 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de74c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd35deb258 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55dd35df8f08 <col:39, line:287:5>
|   `-ReturnStmt 0x55dd35df8ef8 <line:283:9, col:53>
|     `-BinaryOperator 0x55dd35df8ed8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55dd35df8ea8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55dd35df8dc8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55dd35df0e68
|       |   `-MemberExpr 0x55dd35df8d98 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55dd35df1e18
|       |     `-CXXThisExpr 0x55dd35df8d88 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55dd35df8ec0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55dd35df8e88 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55dd35df8e68 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55dd35df8e38 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd35df8df8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7310 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd35df8e50 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd35df8e18 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd35deb348 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55dd35dfa1a0 <col:40, line:293:5>
|   |-DeclStmt 0x55dd35df9050 <line:291:9, col:48>
|   | `-VarDecl 0x55dd35df8f30 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55dd35df9030 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55dd35df8fd8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55dd35df8fa8 <col:22> '<bound member function type>' ->subsec 0x55dd35dea2e8
|   |     |   `-CXXThisExpr 0x55dd35df8f98 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55dd35df9018 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55dd35df8ff8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7740 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd35dfa190 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55dd35dfa178 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55dd35dfa148 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd35dfa130 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55dd35dfa110 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55dd35dfa0e0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55dd35df9e78 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55dd35df9e60 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55dd35df9068 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55dd35df8f30 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55dd35dfa080 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55dd35dfa068 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55dd35dfa038 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55dd35df9e90 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55dd35df9e00 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55dd35df9de8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55dd35df9d98 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd35de6c18 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55dd35df9d38 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55dd35df9098 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55dd35df9088 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55dd35df9d80 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55dd35df9d68 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55dd35df9558 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55dd35df90c0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55dd35df9150 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55dd35df9120 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55dd35df90e0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7740 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55dd35df9138 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55dd35df9100 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55dd35df8f30 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55dd35dfa0b0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55dd35df9e48 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55dd35df9e38 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55dd35deb408 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55dd35dfa6f8 <col:40, line:302:5>
|   |-DeclStmt 0x55dd35dfa2f0 <line:297:9, col:48>
|   | `-VarDecl 0x55dd35dfa1d0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55dd35dfa2d0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55dd35dfa278 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55dd35dfa248 <col:22> '<bound member function type>' ->subsec 0x55dd35dea2e8
|   |     |   `-CXXThisExpr 0x55dd35dfa238 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55dd35dfa2b8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55dd35dfa298 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7810 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd35dfa6e8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55dd35dfa6d0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55dd35dfa6a0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd35dfa688 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55dd35dfa668 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55dd35dfa638 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55dd35dfa560 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55dd35dfa548 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55dd35dfa308 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55dd35dfa1d0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55dd35dfa5d8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55dd35dfa5c0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55dd35dfa590 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55dd35dfa578 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55dd35dfa4e8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55dd35dfa4d0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55dd35dfa4b0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd35de6c18 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55dd35dfa450 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55dd35dfa338 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55dd35dfa328 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55dd35dfa498 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55dd35dfa480 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55dd35dfa410 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55dd35dfa360 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55dd35dfa3f0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55dd35dfa3c0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55dd35dfa380 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7810 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55dd35dfa3d8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55dd35dfa3a0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55dd35dfa1d0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55dd35dfa608 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55dd35dfa530 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55dd35dfa520 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55dd35deb4c8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55dd35dfa780 <col:40, line:306:5>
|   `-ReturnStmt 0x55dd35dfa770 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55dd35dfa740 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55dd35dfa728 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55dd35dfa718 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55dd35deb668 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55dd35deb578 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55dd35deb838 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55dd35deb740 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55dd35deb928 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55dd35deba98 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55dd35deb9d8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55dd35dfa8c8 <col:56, line:320:5>
|   `-ReturnStmt 0x55dd35dfa8b8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55dd35dfa8a0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55dd35dfa870 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd35dfa858 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd35dfa818 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd35dfa7e8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd35dfa7a8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd35deb9d8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55dd35dfa800 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55dd35dfa7c8 <col:31> 'int' 0
|-CXXMethodDecl 0x55dd35debcd8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35debb50 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35debbc8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35dfaa98 <col:72, line:326:5>
|   `-ReturnStmt 0x55dd35dfaa88 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55dd35dfaa70 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55dd35dfaa40 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd35dfaa28 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd35dfa9e8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd35dfa9d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd35dfa8f0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd35debb50 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55dd35dfa990 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55dd35dfa978 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd35dfa910 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd35df05c0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55dd35dfa9b8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd35dfa930 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35debbc8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35debe88 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55dd35debd98 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55dd35dfb160 <col:56, line:337:5>
|   |-DeclStmt 0x55dd35dfad98 <line:329:9, col:51>
|   | `-VarDecl 0x55dd35dfaac0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55dd35dfad80 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55dd35dfad50 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55dd35dfad38 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55dd35dfad20 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55dd35dfacf0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55dd35dfacd8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55dd35dfacc0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55dd35dfabb0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55dd35dfaf50 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55dd35dfae00 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55dd35df0e68
|   | | `-MemberExpr 0x55dd35dfadd0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55dd35df1e18
|   | |   `-DeclRefExpr 0x55dd35dfadb0 <col:9> 'Timestamp' lvalue Var 0x55dd35dfaac0 't' 'Timestamp'
|   | `-BinaryOperator 0x55dd35dfaf30 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55dd35dfaf00 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd35dfae30 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd35debd98 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55dd35dfaf18 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55dd35dfaee0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55dd35dfaec0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55dd35dfae90 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55dd35dfae50 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55dd35dfaea8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55dd35dfae70 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de75e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd35dfb148 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55dd35dfb118 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55dd35dfb100 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55dd35dfb0e0 <col:16> 'Timestamp' lvalue Var 0x55dd35dfaac0 't' 'Timestamp'
|-CXXMethodDecl 0x55dd35dec050 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35debf40 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35debfb8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35dfb318 <col:72, line:343:5>
|   `-ReturnStmt 0x55dd35dfb308 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55dd35dfb2f0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55dd35dfb2c0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd35dfb2a8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd35dfb268 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd35dfb250 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd35dfb198 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd35debf40 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55dd35dfb210 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55dd35dfb1f8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd35dfb1b8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd35df0708 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55dd35dfb238 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd35dfb1d8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35debfb8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35dec1a0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55dd35dec110 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55dd35dfb760 <col:56, line:354:5>
|   |-DeclStmt 0x55dd35dfb508 <line:346:9, col:51>
|   | `-VarDecl 0x55dd35dfb340 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55dd35dfb4f0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55dd35dfb4c0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55dd35dfb4a8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55dd35dfb490 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55dd35dfb460 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55dd35dfb448 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55dd35dfb430 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55dd35dfb400 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55dd35dfb6c0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55dd35dfb570 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55dd35df0e68
|   | | `-MemberExpr 0x55dd35dfb540 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55dd35df1e18
|   | |   `-DeclRefExpr 0x55dd35dfb520 <col:9> 'Timestamp' lvalue Var 0x55dd35dfb340 't' 'Timestamp'
|   | `-BinaryOperator 0x55dd35dfb6a0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55dd35dfb670 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd35dfb5a0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd35dec110 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55dd35dfb688 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55dd35dfb650 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55dd35dfb630 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55dd35dfb600 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55dd35dfb5c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55dd35dfb618 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55dd35dfb5e0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de74c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd35dfb748 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55dd35dfb718 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55dd35dfb700 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55dd35dfb6e0 <col:16> 'Timestamp' lvalue Var 0x55dd35dfb340 't' 'Timestamp'
|-CXXMethodDecl 0x55dd35dec368 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35dec258 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35dec2d0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35dfb918 <col:72, line:360:5>
|   `-ReturnStmt 0x55dd35dfb908 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55dd35dfb8f0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55dd35dfb8c0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd35dfb8a8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd35dfb868 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd35dfb850 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd35dfb798 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd35dec258 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55dd35dfb810 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55dd35dfb7f8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd35dfb7b8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd35df0850 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55dd35dfb838 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd35dfb7d8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35dec2d0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35dec4b8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55dd35dec428 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55dd35e08288 <col:56, line:371:5>
|   |-DeclStmt 0x55dd35dfbb08 <line:363:9, col:51>
|   | `-VarDecl 0x55dd35dfb940 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55dd35dfbaf0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55dd35dfbac0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55dd35dfbaa8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55dd35dfba90 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55dd35dfba60 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55dd35dfba48 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55dd35dfba30 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55dd35dfba00 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55dd35e081e8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55dd35dfbb70 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55dd35df0e68
|   | | `-MemberExpr 0x55dd35dfbb40 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55dd35df1e18
|   | |   `-DeclRefExpr 0x55dd35dfbb20 <col:9> 'Timestamp' lvalue Var 0x55dd35dfb940 't' 'Timestamp'
|   | `-CallExpr 0x55dd35e08188 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55dd35e08170 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55dd35dfbba0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55dd35df2148 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55dd35e081b8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd35dfbbc0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd35dec428 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55dd35e081d0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55dd35e08150 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55dd35e08120 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55dd35dfbbe0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7310 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55dd35e08138 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55dd35dfbc00 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd35e08270 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55dd35e08240 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55dd35e08228 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55dd35e08208 <col:16> 'Timestamp' lvalue Var 0x55dd35dfb940 't' 'Timestamp'
|-CXXMethodDecl 0x55dd35dec5a8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55dd35e083c8 <col:39, line:377:5>
|   `-ReturnStmt 0x55dd35e083b8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55dd35e083a0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55dd35e08370 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd35e08358 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd35e08318 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55dd35e082c0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55dd35e08300 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55dd35e082e0 <col:29> 'int' 1
|-CXXMethodDecl 0x55dd35dec668 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55dd35e084a8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55dd35e08460 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55dd35e083f0 <col:9> '<bound member function type>' ->assign 0x55dd35dec868
|     | `-CXXThisExpr 0x55dd35e083e0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55dd35e08420 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55dd35e08490 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55dd35e08440 <col:19> 'int' 0
|-CXXMethodDecl 0x55dd35dec868 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd35dec718 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35dec790 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd35df3a40 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd35df3a20 <col:60> 'int' 0
| `-CompoundStmt 0x55dd35e086a0 <col:63, line:395:5>
|   `-BinaryOperator 0x55dd35e08680 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55dd35e08500 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55dd35df0e68
|     | `-MemberExpr 0x55dd35e084d0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55dd35df1e18
|     |   `-CXXThisExpr 0x55dd35e084c0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55dd35e08660 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55dd35e085f0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55dd35e08590 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55dd35e08578 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55dd35e08560 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55dd35e08530 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd35dec718 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55dd35e085d8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55dd35e085b8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55dd35e08648 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55dd35e08630 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55dd35e08610 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35dec790 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35deca38 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd35dec928 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35dec9a0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e087f8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55dd35e087b0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55dd35e086c8 <col:9> '<bound member function type>' ->assign 0x55dd35dec868
|     | `-CXXThisExpr 0x55dd35e086b8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd35e087e0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd35e086f8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd35dec928 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55dd35e08770 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55dd35e08758 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35e08718 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd35df0708 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55dd35e08798 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55dd35e08738 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35dec9a0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35decc08 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd35decaf8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35decb70 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e08950 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55dd35e08908 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55dd35e08820 <col:9> '<bound member function type>' ->assign 0x55dd35dec868
|     | `-CXXThisExpr 0x55dd35e08810 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd35e08938 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd35e08850 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd35decaf8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55dd35e088c8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55dd35e088b0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35e08870 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd35df0850 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55dd35e088f0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55dd35e08890 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35decb70 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35decdd8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd35deccc8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35decd40 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd35df3a78 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd35df3a58 <col:57> 'int' 0
| `-DeprecatedAttr 0x55dd35dece88 <col:75> "" ""
|-CXXMethodDecl 0x55dd35ded018 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd35decf08 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35decf80 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35ded0c8 <col:74> "" ""
|-CXXMethodDecl 0x55dd35ded258 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd35ded148 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd35ded1c0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35ded308 <col:74> "" ""
|-CXXMethodDecl 0x55dd35ded398 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55dd35ded438 <col:42> "" ""
|-CXXMethodDecl 0x55dd35defc70 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55dd35defb50 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55dd35defbd0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55dd35defd40 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd35defe00 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55dd35defea0 <col:20>
| `-OptimizeNoneAttr 0x55dd35defef8 <col:30>
|-CXXMethodDecl 0x55dd35deff40 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd35df0000 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55dd35df00c0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd35df0180 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55dd35df0240 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd35df0300 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55dd35df03c0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55dd35df0480 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55dd35df05c0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd35df0530 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e08a98 <col:58, line:512:5>
|   `-ReturnStmt 0x55dd35e08a88 <line:511:9, col:53>
|     `-BinaryOperator 0x55dd35e08a68 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55dd35e08a38 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd35e08968 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35df0530 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd35e08a50 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd35e08a18 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55dd35e089f8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55dd35e089c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd35e08988 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd35e089e0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd35e089a8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de75e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd35df0708 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd35df0678 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e08be0 <col:58, line:516:5>
|   `-ReturnStmt 0x55dd35e08bd0 <line:515:9, col:53>
|     `-BinaryOperator 0x55dd35e08bb0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55dd35e08b80 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd35e08ab0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35df0678 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd35e08b98 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd35e08b60 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55dd35e08b40 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55dd35e08b10 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd35e08ad0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd35e08b28 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd35e08af0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de74c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd35df0850 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd35df07c0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e08d28 <col:58, line:520:5>
|   `-ReturnStmt 0x55dd35e08d18 <line:519:9, col:53>
|     `-BinaryOperator 0x55dd35e08cf8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55dd35e08cc8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd35e08bf8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35df07c0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd35e08ce0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd35e08ca8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55dd35e08c88 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55dd35e08c58 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd35e08c18 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7310 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd35e08c70 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd35e08c38 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd35df0998 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd35df0908 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e08e70 <col:60, line:524:5>
|   `-ReturnStmt 0x55dd35e08e60 <line:523:9, col:55>
|     `-BinaryOperator 0x55dd35e08e40 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55dd35e08e10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd35e08d40 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35df0908 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd35e08e28 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd35e08df0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55dd35e08dd0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55dd35e08da0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd35e08d60 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd35e08db8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd35e08d80 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de75e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd35df0ae0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd35df0a50 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e08fb8 <col:60, line:528:5>
|   `-ReturnStmt 0x55dd35e08fa8 <line:527:9, col:55>
|     `-BinaryOperator 0x55dd35e08f88 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55dd35e08f58 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd35e08e88 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35df0a50 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd35e08f70 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd35e08f38 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55dd35e08f18 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55dd35e08ee8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd35e08ea8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd35e08f00 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd35e08ec8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de74c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd35df0c28 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd35df0b98 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e09100 <col:60, line:532:5>
|   `-ReturnStmt 0x55dd35e090f0 <line:531:9, col:55>
|     `-BinaryOperator 0x55dd35e090d0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55dd35e090a0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd35e08fd0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35df0b98 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd35e090b8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd35e09080 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55dd35e09060 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55dd35e09030 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd35e08ff0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7310 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd35e09048 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd35e09010 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd35de7670 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55dd35df0cd0 prev 0x55dd35de7b10 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd35df0dc8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55dd35df0e68 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55dd35df7c30 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dd35df8018 <col:11>
| |-CXXConstructorDecl 0x55dd35df7d10 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd35df7df8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55dd35df8760 <col:11>
| |-CXXConstructorDecl 0x55dd35df7e98 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd35df7fa8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55dd35df9fb8 <col:11>
| |-CXXDestructorDecl 0x55dd35df92c8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55dd35affe78 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd35afff88 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55dd35b00850 <col:11>
| |   `-ReturnStmt 0x55dd35b00840 <col:11>
| |     `-UnaryOperator 0x55dd35b00828 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55dd35b00818 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55dd35affff8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55dd35b00108 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55dd35e8e2f0 <col:11>
|     `-ReturnStmt 0x55dd35e8e2e0 <col:11>
|       `-UnaryOperator 0x55dd35e8e2c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55dd35e8e2b8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55dd35df0ed0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55dd35df0fd0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55dd35df11d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35df0fb0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd35df0f90 <col:21> 'int' 0
| |-EnumConstantDecl 0x55dd35df1060 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55dd35df11e8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35df1040 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd35df1020 <col:23> 'int' 1
| |-EnumConstantDecl 0x55dd35df10f0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55dd35df1200 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35df10d0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd35df10b0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55dd35df1180 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55dd35df1218 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35df1160 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55dd35df1140 <col:27> 'int' 3
|-CXXMethodDecl 0x55dd35df1258 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55dd35df1320 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55dd35df1528 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55dd35df13d0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55dd35df1450 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55dd35df3a90 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55dd35df1738 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55dd35df15e8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55dd35df1660 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55dd35df1808 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55dd35df18c8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55dd35df1a38 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55dd35df1978 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55dd35df1b00 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd35df1bc0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55dd35df1c80 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd35df1d40 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55dd35df1de0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55dd35df1e18 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55dd35df1e88 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55dd35e09118 <col:27, line:684:5>
|-CXXMethodDecl 0x55dd35df1f48 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55dd35e09128 <col:27, line:696:5>
|-CXXMethodDecl 0x55dd35df2148 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35df1ff8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55dd35df2070 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e092b0 <col:66, line:700:5>
|   `-ReturnStmt 0x55dd35e092a0 <line:699:9, col:31>
|     `-CallExpr 0x55dd35e09240 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55dd35e09228 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35e091d8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55dd35c744f8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55dd35e09270 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd35e09198 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd35df1ff8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55dd35e09288 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55dd35e091b8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35df2070 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35df24b8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35df2208 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55dd35df2280 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55dd35df22f8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55dd35df2370 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e09600 <col:64, line:707:5>
|   |-DeclStmt 0x55dd35e09340 <line:704:9, col:24>
|   | `-VarDecl 0x55dd35e092d8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55dd35e09550 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55dd35e09358 <col:9> 'int32_t':'int' lvalue ParmVar 0x55dd35df2280 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55dd35e09538 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55dd35e094d0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55dd35e094b8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e09438 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55dd35c797c8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55dd35e09508 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55dd35e093d8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd35df22f8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55dd35e09520 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55dd35e093f8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35df2370 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55dd35e09418 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55dd35e092d8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55dd35e095e0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55dd35e09570 <col:9> 'int32_t':'int' lvalue ParmVar 0x55dd35df2208 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55dd35e095c8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55dd35e095b0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55dd35e09590 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55dd35e092d8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55dd35df2758 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55dd35df2588 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55dd35df2600 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55dd35df2678 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55dd35df29f8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55dd35df2820 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55dd35df2898 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55dd35df2910 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55dd35df2b88 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55dd35df2ac0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55dd35df2d88 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55dd35df2c40 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55dd35df2cb8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55dd35df3058 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55dd35df2f98 parent 0x55dd358f4278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55dd35df2e48 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55dd35df2ec0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55dd35df3278 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55dd35df31b8 parent 0x55dd358f4278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55dd35df30a8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55dd35df3120 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55dd35df3440 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55dd35df3388 parent 0x55dd358f4278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55dd35df32c8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55dd35df36c8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55dd35df3608 parent 0x55dd358f4278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55dd35df34b8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55dd35df3530 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55dd35df38e8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55dd35df3828 parent 0x55dd358f4278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55dd35df3718 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55dd35df3790 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55dd35df9170 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35df9258 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df9cc8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55dd35df9c80 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55dd35df1e18
| |     `-DeclRefExpr 0x55dd35df9c60 <col:7> 'const Timestamp' lvalue ParmVar 0x55dd35df9258 '' 'const Timestamp &'
| `-CompoundStmt 0x55dd35df9d28 <col:7>
|-CXXConstructorDecl 0x55dd35df93d8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35df94e8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55dd35df1e18 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd35df9fc8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55dd35df9f70 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55dd35df1e18
| |     `-CXXStaticCastExpr 0x55dd35df9f40 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55dd35df9f10 <col:7> 'Timestamp' lvalue ParmVar 0x55dd35df94e8 '' 'Timestamp &&'
| `-CompoundStmt 0x55dd35dfa028 <col:7>
|-CXXDestructorDecl 0x55dd35df9598 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd35affcc8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35affdd8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55dd35b008c8 <col:7>
|   |-CXXMemberCallExpr 0x55dd35b00868 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55dd35b007a8 <col:7> '<bound member function type>' .operator= 0x55dd35affe78
|   | | `-MemberExpr 0x55dd35b006b8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55dd35df1e18
|   | |   `-CXXThisExpr 0x55dd35b006a8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55dd35b00778 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55dd35df1e18
|   |   `-DeclRefExpr 0x55dd35b00758 <col:7> 'const Timestamp' lvalue ParmVar 0x55dd35affdd8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55dd35b008b8 <col:7>
|     `-UnaryOperator 0x55dd35b008a0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd35b00890 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55dd35b00178 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55dd35b00288 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55dd35e8e368 <col:7>
    |-CXXMemberCallExpr 0x55dd35e8e308 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55dd35e8e270 <col:7> '<bound member function type>' .operator= 0x55dd35affff8
    | | `-MemberExpr 0x55dd35e8e140 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55dd35df1e18
    | |   `-CXXThisExpr 0x55dd35e8e130 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55dd35e8e240 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55dd35df1e18
    |   `-CXXStaticCastExpr 0x55dd35e8e210 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55dd35e8e1e0 <col:7> 'Timestamp' lvalue ParmVar 0x55dd35b00288 '' 'Timestamp &&'
    `-ReturnStmt 0x55dd35e8e358 <col:7>
      `-UnaryOperator 0x55dd35e8e340 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55dd35e8e330 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e8b348 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55dd35e8b478 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55dd35e8bf68 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.14 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35ee6210 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35ee6328 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55dd35ee63f8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55dd35ee6458 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55dd35ee64c0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55dd35ee6548 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55dd35ee67b0 <col:16, line:46:5>
|   |-BinaryOperator 0x55dd35ee66f8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55dd35ee6618 <col:9> 'TaskLink *' lvalue ->_prev 0x55dd35ee63f8
|   | | `-CXXThisExpr 0x55dd35ee6608 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55dd35ee66e0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55dd35ee66c0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55dd35ee6658 <col:17> 'TaskLink *' lvalue ->_next 0x55dd35ee6458
|   |     | `-CXXThisExpr 0x55dd35ee6648 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55dd35ee66a8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55dd35ee6688 <col:25> 'int' 0
|   `-BinaryOperator 0x55dd35ee6790 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55dd35ee6728 <col:9> 'unsigned int' lvalue ->_pass 0x55dd35ee64c0
|     | `-CXXThisExpr 0x55dd35ee6718 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55dd35ee6778 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55dd35ee6758 <col:17> 'int' 0
|-CXXConstructorDecl 0x55dd35f4ba28 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55dd35f4ba28
| `-ParmVarDecl 0x55dd35f4bb38 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55dd35f4bbd8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55dd35f4bbd8
| `-ParmVarDecl 0x55dd35f4bce8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55dd35f4bed8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55dd35f4bed8
|-CXXMethodDecl 0x55dd35f4c6d8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55dd35f4c6d8
| `-ParmVarDecl 0x55dd35f4c7e8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55dd35f4c858 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55dd35f4c858
  `-ParmVarDecl 0x55dd35f4c968 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35eed148 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55dd35eed358 prev 0x55dd35eed148 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35eef580 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55dd35eef530 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55dd35eef510 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55dd35eef3c0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35eef1e0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35eeed30 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55dd35eeec48 'sized_array_memory'
|-FieldDecl 0x55dd35ef31b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55dd35ef3200 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35ef3238 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55dd35eed3f0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|     `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-TypedefDecl 0x55dd35ef32f8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55dd35ef32c0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55dd35eed3f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|       `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-TypedefDecl 0x55dd35ef3388 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55dd35ef3350 'const TimerSet::heap_element &'
|   `-QualType 0x55dd35eed3f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55dd35eed3f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|         `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-TypedefDecl 0x55dd35ef3418 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55dd35ef33e0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55dd35eed3f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|       `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-TypedefDecl 0x55dd35ef34d8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55dd35ef34a0 'const TimerSet::heap_element *'
|   `-QualType 0x55dd35eed3f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55dd35eed3f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|         `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-TypedefDecl 0x55dd35ef4130 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55dd35ef40e0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55dd35ef40c0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55dd35ef3ff8 'type'
|     `-LValueReferenceType 0x55dd35ef3fc0 'const TimerSet::heap_element &'
|       `-QualType 0x55dd35ef3d61 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55dd35ef3d60 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55dd35bc6d50 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd35bc6cf8 'T'
|           `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|             `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-TypedefDecl 0x55dd35ef4198 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55dd35ef3350 'const TimerSet::heap_element &'
|   `-QualType 0x55dd35eed3f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55dd35eed3f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|         `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-TypedefDecl 0x55dd35ef41f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35ef4258 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55dd35ef33e0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55dd35eed3f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|       `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-TypedefDecl 0x55dd35ef42c0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55dd35ef34a0 'const TimerSet::heap_element *'
|   `-QualType 0x55dd35eed3f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55dd35eed3f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35eec350 'TimerSet::heap_element'
|         `-CXXRecord 0x55dd35eec2c0 'heap_element'
|-EnumDecl 0x55dd35ef4318 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35ef4410 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35ef43f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35ef4498 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35ef4728 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35ef4550 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35ef45f0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55dd35ef49e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55dd35ef48d0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55dd35ef4ca8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55dd35ef4b90 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55dd35ef4ff0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55dd35ef4ed0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55dd35ef5300 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55dd35ef51e0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55dd35ef55f0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35ef5438 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35ef54b0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55dd35ef5748 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55dd35ef5828 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ef5880 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ef58c8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55dd35ef5978 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ef59d0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ef5a98 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55dd35ef5b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ef5ba0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ef5be8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55dd35ef5c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ef5cf0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ef5d38 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55dd35ef5de8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ef5e40 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ef5e88 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55dd35ef5f38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35ef5f90 <col:30> Inherited
|-CXXMethodDecl 0x55dd35ef5fb8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35ef6068 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35ef6118 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35ef62d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35ef61c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35ef6240 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55dd35ef6428 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35ef6398 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ef65d8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55dd35ef64e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35ef6690 <col:20>
| `-OptimizeNoneAttr 0x55dd35ef66e8 <col:30>
|-CXXMethodDecl 0x55dd35ef6808 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35ef6710 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35ef68c0 <col:20>
| `-OptimizeNoneAttr 0x55dd35ef6918 <col:30>
|-CXXMethodDecl 0x55dd35ef69d0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35ef6940 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ef7950 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35ef6a88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ef7a88 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55dd35ef7bb8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55dd35ef7c88 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55dd35ef7d58 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55dd35ef7e98 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35ef7e08 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ef7fe0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35ef7f50 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35ef8128 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35ef8098 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35ef81e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35ef82e0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35ef8250 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35ef8398 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35ef8458 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55dd35ef8558 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55dd35ef8708 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35ef8618 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55dd35ef8ec8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35ef87c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55dd35ef8e28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55dd35ef8d28 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55dd35ef8fa8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35ef90f8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35ef9068 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55dd35ef91b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35ef93f8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35ef9270 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55dd35ef92e8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55dd35ef95b8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55dd35ef94c8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55dd35ef9808 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55dd35ef9680 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55dd35ef96f8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55dd35ef98c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35ef9b28 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55dd35ef9a30 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55dd35ef9bf8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35ef9bf8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35ef9d40 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55dd35ef9f48 prev 0x55dd35ef9d40 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35efaf60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55dd35efaf10 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55dd35efaef0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55dd35efada0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35e91700 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35e91250 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55dd35e91168 'sized_array_memory'
|-FieldDecl 0x55dd35efb060 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55dd35efb0b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35efb0e8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55dd35ef9fe0 'Timer *' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-PointerType 0x55dd35e58f00 'Timer *'
|     `-RecordType 0x55dd35e58050 'Timer'
|       `-CXXRecord 0x55dd35e75b78 'Timer'
|-TypedefDecl 0x55dd35efb1a8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55dd35efb170 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55dd35ef9fe0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e58f00 'Timer *'
|       `-RecordType 0x55dd35e58050 'Timer'
|         `-CXXRecord 0x55dd35e75b78 'Timer'
|-TypedefDecl 0x55dd35efb268 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55dd35efb230 'Timer *const &'
|   `-QualType 0x55dd35ef9fe1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55dd35ef9fe0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e58f00 'Timer *'
|         `-RecordType 0x55dd35e58050 'Timer'
|           `-CXXRecord 0x55dd35e75b78 'Timer'
|-TypedefDecl 0x55dd35efb328 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55dd35efb2f0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55dd35ef9fe0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e58f00 'Timer *'
|       `-RecordType 0x55dd35e58050 'Timer'
|         `-CXXRecord 0x55dd35e75b78 'Timer'
|-TypedefDecl 0x55dd35efb3e8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55dd35efb3b0 'Timer *const *'
|   `-QualType 0x55dd35ef9fe1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55dd35ef9fe0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e58f00 'Timer *'
|         `-RecordType 0x55dd35e58050 'Timer'
|           `-CXXRecord 0x55dd35e75b78 'Timer'
|-TypedefDecl 0x55dd35efbfc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55dd35efbf70 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55dd35efbf50 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55dd35efbee0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35efbca0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55dd35bc7480 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bc7430 'T'
|       `-PointerType 0x55dd35e58f00 'Timer *'
|         `-RecordType 0x55dd35e58050 'Timer'
|           `-CXXRecord 0x55dd35e75b78 'Timer'
|-TypedefDecl 0x55dd35efc028 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55dd35efb230 'Timer *const &'
|   `-QualType 0x55dd35ef9fe1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55dd35ef9fe0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e58f00 'Timer *'
|         `-RecordType 0x55dd35e58050 'Timer'
|           `-CXXRecord 0x55dd35e75b78 'Timer'
|-TypedefDecl 0x55dd35efc080 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35efc0e8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55dd35efb2f0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55dd35ef9fe0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-PointerType 0x55dd35e58f00 'Timer *'
|       `-RecordType 0x55dd35e58050 'Timer'
|         `-CXXRecord 0x55dd35e75b78 'Timer'
|-TypedefDecl 0x55dd35efc150 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55dd35efb3b0 'Timer *const *'
|   `-QualType 0x55dd35ef9fe1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55dd35ef9fe0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-PointerType 0x55dd35e58f00 'Timer *'
|         `-RecordType 0x55dd35e58050 'Timer'
|           `-CXXRecord 0x55dd35e75b78 'Timer'
|-EnumDecl 0x55dd35efc1a8 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35efc2a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35efc280 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35efc328 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35efc5b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35efc3e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35efc480 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55dd35efc878 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55dd35efc760 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55dd35efcb38 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55dd35efca20 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55dd35efce80 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55dd35efcd60 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55dd35efd190 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55dd35efd070 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55dd35efd480 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35efd2c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35efd340 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55dd35efd5d8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55dd35efd6b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35efd710 <col:30> Inherited
|-CXXMethodDecl 0x55dd35efd758 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55dd35efd808 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35efd860 <col:30> Inherited
|-CXXMethodDecl 0x55dd35efd928 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35efd9d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35efda30 <col:30> Inherited
|-CXXMethodDecl 0x55dd35efda78 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35efdb28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35efdb80 <col:30> Inherited
|-CXXMethodDecl 0x55dd35efdbc8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35efdc78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35efdcd0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35efdd18 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55dd35efddc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35efde20 <col:30> Inherited
|-CXXMethodDecl 0x55dd35efde48 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35efdef8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35efdfa8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35efe168 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35efe058 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35efe0d0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55dd35efe2b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35efe228 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35efe468 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55dd35efe370 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35efe520 <col:20>
| `-OptimizeNoneAttr 0x55dd35efe578 <col:30>
|-CXXMethodDecl 0x55dd35efe698 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35efe5a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35efe750 <col:20>
| `-OptimizeNoneAttr 0x55dd35efe7a8 <col:30>
|-CXXMethodDecl 0x55dd35efe860 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35efe7d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35efe9a8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35efe918 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35efead8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55dd35efec08 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55dd35efecd8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55dd35efeda8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55dd35efeee8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35efee58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35eff030 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35efefa0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35eff178 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35eff0e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35eff230 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35eff330 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35eff2a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35eff3e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35eff4a8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55dd35eff5a8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55dd35eff728 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35eff668 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55dd35f01028 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35eff7e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55dd35f00f88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55dd35f00e88 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55dd35f01108 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f01258 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f011c8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55dd35f01310 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35f01558 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f013d0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55dd35f01448 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55dd35f01718 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55dd35f01628 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55dd35f01968 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55dd35f017e0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55dd35f01858 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55dd35f01a28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f01c88 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55dd35f01b90 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55dd35f01d58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35f01d58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e725b0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35e726c8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55dd35e72758 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55dd35e727e0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55dd35e728d0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55dd35e729d0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55dd35e72a90 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55dd35e72b50 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55dd35e72c78 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55dd35e72c78
| `-ParmVarDecl 0x55dd35e72d88 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55dd35f02b08 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55dd35f02b08
  `-ParmVarDecl 0x55dd35f02c18 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35eeb440 prev 0x55dd35e8bdf8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55dd35eeb538 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55dd35eeb5c8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55dd35eeb650 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55dd35eeb748 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55dd35f02f80 <col:43, col:67>
|   `-ReturnStmt 0x55dd35f02f70 <col:45, col:52>
|     `-CXXConstructExpr 0x55dd35f02f40 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55dd35f02f10 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55dd35eecf30
|         `-CXXThisExpr 0x55dd35f02f00 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55dd35eeb808 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55dd35eeba10 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55dd35eeb8b8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55dd35eeb930 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55dd35eebb08 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55dd35eebbd0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55dd35f03000 <col:39, col:67>
|   `-ReturnStmt 0x55dd35f02ff0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55dd35f02fd8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55dd35f02fa8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55dd35eed018
|         `-CXXThisExpr 0x55dd35f02f98 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55dd35eebc98 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55dd35f03080 <col:35, col:59>
|   `-ReturnStmt 0x55dd35f03070 <col:37, col:44>
|     `-ImplicitCastExpr 0x55dd35f03058 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55dd35f03028 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55dd35eed080
|         `-CXXThisExpr 0x55dd35f03018 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55dd35eebde0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55dd35eebd50 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55dd35eebf28 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55dd35eebe98 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55dd35eec128 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55dd35eebfe0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55dd35eec058 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55dd35eec1f8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55dd35eec298 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd35eec2c0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd35eec3d8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55dd35eec478 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55dd35eec4d8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55dd35eec608 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55dd35eec538 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55dd35eec478 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55dd35f03158 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55dd35f03100 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55dd35f030d0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55dd35e771e8
|   |       `-ImplicitCastExpr 0x55dd35f03120 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55dd35f030b8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55dd35f03098 <col:17> 'Timer *' lvalue ParmVar 0x55dd35eec538 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55dd35eec4d8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55dd35f031f0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd35f031b0 <col:41> 'Timer *' lvalue ParmVar 0x55dd35eec538 't_' 'Timer *'
|   `-CompoundStmt 0x55dd35f03240 <col:45, line:44:2>
|-CXXRecordDecl 0x55dd35eec6d0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd35eec7e8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55dd35eeca38 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55dd35eec8b8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55dd35eec930 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55dd35f03370 <col:71, line:49:2>
|     `-ReturnStmt 0x55dd35f03360 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55dd35f03328 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55dd35f03310 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55dd35f032f0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55dd35e16268 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55dd35f03270 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55dd35eec478
|         | `-DeclRefExpr 0x55dd35f03250 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55dd35eec8b8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55dd35f032c0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55dd35eec478
|           `-DeclRefExpr 0x55dd35f032a0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55dd35eec930 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55dd35eecb00 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd35eecc18 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55dd35eece38 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55dd35eeccb8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55dd35eecd30 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55dd35f03578 <col:63, line:54:2>
|     `-BinaryOperator 0x55dd35f03558 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55dd35f03408 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55dd35e8b298
|       | `-ImplicitCastExpr 0x55dd35f033f0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55dd35f033c0 <col:6, col:9> 'Timer *' lvalue ->t 0x55dd35eec4d8
|       |     `-ImplicitCastExpr 0x55dd35f033a8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55dd35f03388 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55dd35eecd30 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55dd35f03540 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55dd35f03520 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55dd35f034c8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55dd35f034a8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55dd35f03478 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55dd35f03438 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55dd35eecd30 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55dd35f03490 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55dd35f03458 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55dd35eeccb8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55dd35f03508 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55dd35f034e8 <col:39> 'int' 1
|-FieldDecl 0x55dd35eecf30 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55dd35eecfa0 <col:44, col:53> aligned
|   `-ConstantExpr 0x55dd35eecf80 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55dd35eecf00 <col:52> 'int' 8
|-FieldDecl 0x55dd35eed018 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55dd35eed080 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55dd35eed0e8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55dd35ef9ce0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55dd35f01e40 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55dd35f01ea0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55dd35f01f00 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55dd35f01f60 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35f02050 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55dd35f01fc0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55dd35f02118 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55dd35f039d0 <col:29, line:81:5>
|   `-IfStmt 0x55dd35f039a8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55dd35f03660 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55dd35f03600 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55dd35f035d0 <col:6, col:18> '<bound member function type>' .size 0x55dd35ef5fb8
|     |     `-ImplicitCastExpr 0x55dd35f03648 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55dd35f035a0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55dd35ef9ce0
|     |         `-CXXThisExpr 0x55dd35f03590 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55dd35f03850 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55dd35f03838 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55dd35f03818 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55dd35affcc8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55dd35f03688 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55dd35eecf30
|     | | `-CXXThisExpr 0x55dd35f03678 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55dd35f03800 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55dd35f037d0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55dd35eec478
|     |     `-CXXMemberCallExpr 0x55dd35f037a8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55dd35f03778 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55dd35ef7e98
|     |       | `-MemberExpr 0x55dd35f036c8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55dd35ef9ce0
|     |       |   `-CXXThisExpr 0x55dd35f036b8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55dd35f03758 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55dd35f03990 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55dd35f03958 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55dd35f03940 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55dd35f03920 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55dd35b00178 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55dd35f03898 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55dd35eecf30
|         | `-CXXThisExpr 0x55dd35f03888 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55dd35f03908 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd35f038d8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55dd35f02258 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55dd35f021c8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55dd35f02320 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55dd35f023e0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55dd35f024a0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55dd35f02590 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55dd35f025f8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55dd35f025f8
| `-ParmVarDecl 0x55dd35f02708 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55dd35f027a8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55dd35f027a8
| `-ParmVarDecl 0x55dd35f028b8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55dd35f02958 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55dd35f02958
| `-ParmVarDecl 0x55dd35f02a68 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55dd35f02c88 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55dd35f02c88
| `-ParmVarDecl 0x55dd35f02d98 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55dd35f02e20 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55dd35f02e20

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.15, %class.Vector.16, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.15, %class.Vector.16, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f34878 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55dd35f34a88 prev 0x55dd35f34878 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35f35bb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55dd35f35b60 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55dd35f35b40 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55dd35f359f0 'type'
|     `-SubstTemplateTypeParmType 0x55dd35e91700 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35e91250 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55dd35e91168 'sized_array_memory'
|-FieldDecl 0x55dd35f35cb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55dd35f35d00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35f35d38 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55dd35f34b20 'pollfd' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-RecordType 0x55dd35f32930 'pollfd'
|     `-CXXRecord 0x55dd35f328a0 'pollfd'
|-TypedefDecl 0x55dd35f35df8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55dd35f35dc0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55dd35f34b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f32930 'pollfd'
|       `-CXXRecord 0x55dd35f328a0 'pollfd'
|-TypedefDecl 0x55dd35f35eb8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55dd35f35e80 'const pollfd &'
|   `-QualType 0x55dd35f34b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55dd35f34b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f32930 'pollfd'
|         `-CXXRecord 0x55dd35f328a0 'pollfd'
|-TypedefDecl 0x55dd35f35f48 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55dd35f35f10 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55dd35f34b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f32930 'pollfd'
|       `-CXXRecord 0x55dd35f328a0 'pollfd'
|-TypedefDecl 0x55dd35f36008 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55dd35f35fd0 'const pollfd *'
|   `-QualType 0x55dd35f34b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55dd35f34b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f32930 'pollfd'
|         `-CXXRecord 0x55dd35f328a0 'pollfd'
|-TypedefDecl 0x55dd35f36be0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55dd35f36b90 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55dd35f36b70 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55dd35f36b00 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f368c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55dd35bc7480 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bc7430 'T'
|       `-RecordType 0x55dd35f32930 'pollfd'
|         `-CXXRecord 0x55dd35f328a0 'pollfd'
|-TypedefDecl 0x55dd35f36c48 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55dd35f35e80 'const pollfd &'
|   `-QualType 0x55dd35f34b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55dd35f34b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f32930 'pollfd'
|         `-CXXRecord 0x55dd35f328a0 'pollfd'
|-TypedefDecl 0x55dd35f36ca0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f36d08 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55dd35f35f10 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55dd35f34b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f32930 'pollfd'
|       `-CXXRecord 0x55dd35f328a0 'pollfd'
|-TypedefDecl 0x55dd35f36d70 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55dd35f35fd0 'const pollfd *'
|   `-QualType 0x55dd35f34b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55dd35f34b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f32930 'pollfd'
|         `-CXXRecord 0x55dd35f328a0 'pollfd'
|-EnumDecl 0x55dd35f36dc8 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35f36ec0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35f36ea0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35f36f48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35f371d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f37000 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f370a0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55dd35f37498 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55dd35f37380 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55dd35f37758 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55dd35f37640 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55dd35f37aa0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55dd35f37980 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55dd35f37db0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55dd35f37c90 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55dd35f380a0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f37ee8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f37f60 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55dd35f381f8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55dd35f382d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f38330 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f38378 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55dd35f38428 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f38480 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f38548 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f385f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f38650 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f38698 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f38748 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f387a0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f387e8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f38898 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f388f0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f38938 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f389e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f38a40 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f38a68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f38b18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f38bc8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35f38d88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f38c78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f38cf0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55dd35f38ed8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f38e48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f39088 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55dd35f38f90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f39140 <col:20>
| `-OptimizeNoneAttr 0x55dd35f39198 <col:30>
|-CXXMethodDecl 0x55dd35f392b8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35f391c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f39370 <col:20>
| `-OptimizeNoneAttr 0x55dd35f393c8 <col:30>
|-CXXMethodDecl 0x55dd35f39480 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f393f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f395c8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f39538 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f396f8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55dd35f39828 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55dd35f398f8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55dd35f399c8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55dd35f39b08 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f39a78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f39c50 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f39bc0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f39d98 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35f39d08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f39e50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35f39f50 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35f39ec0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f3a008 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35f3a0c8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55dd35f3a1c8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55dd35f3a378 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f3a288 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55dd35f3ab38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35f3a430 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55dd35f3aa98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55dd35f3a998 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55dd35f3ac18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f3ad68 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f3acd8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55dd35f3ae20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35f3b068 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f3aee0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55dd35f3af58 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55dd35f3b228 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55dd35f3b138 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55dd35f3b478 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55dd35f3b2f0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55dd35f3b368 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55dd35f3b538 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f3b798 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55dd35f3b6a0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55dd35f3b868 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35f3b868

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f3cd50 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55dd35f3cf28 prev 0x55dd35f3cd50 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd35f3cfb8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd35f3cfe0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f3ec00 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55dd35f3ebb0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55dd35f3d490 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55dd35f3d390 'type'
|     `-TemplateSpecializationType 0x55dd35f3d320 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55dd35f3d200 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55dd35f3d1e0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55dd35f3d1c0 <col:24> 'unsigned long' 24
|       `-RecordType 0x55dd35f3d300 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55dd35f3d220 'char_array'
|-TypedefDecl 0x55dd35f3ecb8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55dd35f3ec80 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55dd35f3ec60 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55dd35f3ec00 'type'
|     `-ElaboratedType 0x55dd35f3ebb0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55dd35f3d490 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55dd35f3d390 'type'
|         `-TemplateSpecializationType 0x55dd35f3d320 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55dd35f3d200 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55dd35f3d1e0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55dd35f3d1c0 <col:24> 'unsigned long' 24
|           `-RecordType 0x55dd35f3d300 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55dd35f3d220 'char_array'
|-CXXMethodDecl 0x55dd35f3ee38 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55dd35f3ed48 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55dd35f3ef28 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd35f3f008 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55dd35f3f008
|-CXXMethodDecl 0x55dd35f3f2d8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55dd35f3f1e0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55dd35f3f518 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55dd35f3f390 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f3f408 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55dd35f3f6e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55dd35f3f5d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f3f650 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55dd35f3f848 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55dd35f3f918 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55dd35f3fb68 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55dd35f3f9d8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55dd35f3fa50 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55dd35f3fdc8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55dd35f3fc38 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55dd35f3fcb0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55dd35f3ff88 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55dd35f3fe98 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55dd35f40148 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55dd35f40050 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55dd35f40200 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f402b0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f404e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55dd35f40360 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd35f403d8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55dd35f40788 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55dd35f40690 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55dd35f40850 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55dd35f408a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd35f408f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.19 = type { %struct.char_array.20*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.19 = type { %struct.char_array.20*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35f3b9b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55dd35f3bbb8 prev 0x55dd35f3b9b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd35f3ccc0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55dd35f3cc70 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55dd35f3cc50 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55dd35f3cb00 'type'
|     `-SubstTemplateTypeParmType 0x55dd35f3c920 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55dd35bbc680 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bbc628 'T'
|       `-RecordType 0x55dd35ed1590 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55dd35ed14a8 'sized_array_memory'
|-FieldDecl 0x55dd35f40940 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55dd35f40990 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd35f409c8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55dd35f3bc50 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd35bf4318 'T'
|   `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-TypedefDecl 0x55dd35f40a88 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55dd35f40a50 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55dd35f3bc50 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-TypedefDecl 0x55dd35f40b48 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55dd35f40b10 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55dd35f3bc51 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55dd35f3bc50 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-TypedefDecl 0x55dd35f40bd8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55dd35f40ba0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55dd35f3bc50 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-TypedefDecl 0x55dd35f40c98 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55dd35f40c60 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55dd35f3bc51 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55dd35f3bc50 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-TypedefDecl 0x55dd35f418f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55dd35f418a0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55dd35f41880 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55dd35f417b8 'type'
|     `-LValueReferenceType 0x55dd35f41780 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55dd35f41521 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55dd35f41520 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55dd35bc6d50 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd35bc6cf8 'T'
|           `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-TypedefDecl 0x55dd35f41958 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55dd35f40b10 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55dd35f3bc51 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55dd35f3bc50 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-TypedefDecl 0x55dd35f419b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-TypedefDecl 0x55dd35f41a18 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55dd35f40ba0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55dd35f3bc50 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd35bf4318 'T'
|     `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-TypedefDecl 0x55dd35f41a80 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55dd35f40c60 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55dd35f3bc51 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55dd35f3bc50 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55dd35bf4370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd35bf4318 'T'
|       `-RecordType 0x55dd35f343e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55dd35f34350 'SelectorInfo'
|-EnumDecl 0x55dd35f41ad8 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd35f41bd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd35f41bb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd35bf59f8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd35bf59d0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd35bf59b0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd35f41c58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd35f41ee8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f41d10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f41db0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55dd35f421a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55dd35f42090 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55dd35f42468 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55dd35f42350 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55dd35f427b0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55dd35f42690 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55dd35f42ac0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55dd35f429a0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55dd35f42db0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f42bf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f42c70 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55dd35f42f08 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55dd35f42fe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f43040 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f43088 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55dd35f43138 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f43190 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f43258 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f43308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f43360 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f433a8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f43458 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f434b0 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f434f8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f435a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f43600 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f43648 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55dd35f436f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd35f43750 <col:30> Inherited
|-CXXMethodDecl 0x55dd35f43778 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f43828 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd35f438d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd35f43a98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f43988 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd35f43a00 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55dd35f43be8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f43b58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f43d98 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55dd35f43ca0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f43e50 <col:20>
| `-OptimizeNoneAttr 0x55dd35f43ea8 <col:30>
|-CXXMethodDecl 0x55dd35f43fc8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd35f43ed0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd35f44080 <col:20>
| `-OptimizeNoneAttr 0x55dd35f440d8 <col:30>
|-CXXMethodDecl 0x55dd35f44190 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f44100 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f442d8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f44248 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f44408 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55dd35f44538 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55dd35f44608 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55dd35f446d8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55dd35f44818 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd35f44788 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f44960 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd35f448d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd35f44aa8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd35f44a18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f44b60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd35f44c60 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd35f44bd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd35f44d18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd35f44dd8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55dd35f44ed8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55dd35f45088 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f44f98 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55dd35f45878 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd35f45140 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55dd35f457d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55dd35f456a8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55dd35f45958 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd35f45aa8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd35f45a18 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55dd35f45b60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd35f45da8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd35f45c20 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55dd35f45c98 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55dd35f45f68 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55dd35f45e78 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55dd35f461b8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55dd35f46030 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55dd35f460a8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55dd35f46278 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd35f464d8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55dd35f463e0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55dd35f465a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dd35f465a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.18 = type { %class.vector_memory.19 }
  NonVirtualBaseLLVMType:%class.Vector.18 = type { %class.vector_memory.19 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35f33530 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35f33648 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55dd35f336d8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55dd35f33760 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55dd35f33850 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55dd35f33850
|-CXXMethodDecl 0x55dd35f33950 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55dd35f33bf0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55dd35f33a08 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55dd35f33a80 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55dd35f33b00 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55dd35f33e60 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55dd35f33cc0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55dd35f33d38 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55dd35f33db8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55dd35f33fb8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55dd35f33f28 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55dd35f34080 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55dd35f47c58 <col:34, line:50:5>
|   |-BinaryOperator 0x55dd35f47628 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55dd35f475e8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55dd35f34808
|   | | `-CXXThisExpr 0x55dd35f475d8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55dd35f47618 <col:23> 'bool' true
|   `-CallExpr 0x55dd35f47c30 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55dd35f47c18 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55dd35f47b98 <col:2> 'void (long)' lvalue Function 0x55dd35f47a98 'ignore_result' 'void (long)' (FunctionTemplate 0x55dd35bb7628 'ignore_result')
|     `-CallExpr 0x55dd35f47840 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55dd35f47828 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35f477a8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55dd35f069f8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55dd35f47878 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55dd35f47750 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55dd35f47738 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55dd35f476e8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55dd35f347a8
|       |   |   `-CXXThisExpr 0x55dd35f476d8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55dd35f47718 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55dd35f478a8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55dd35f47890 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55dd35f47770 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55dd35f478c0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55dd35f47788 <col:41> 'int' 1
|-CXXMethodDecl 0x55dd35f341c0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55dd35f34130 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55dd35f34288 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55dd35f34328 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd35f34350 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd35f34468 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55dd35f34508 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55dd35f34568 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55dd35f345d0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55dd35f34680 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55dd35f34508 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55dd35f47cb8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55dd35f47c78 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55dd35f34568 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55dd35f47d38 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55dd35f47cf8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55dd35f345d0 'pollfd' 'int'
|   | `-UnaryOperator 0x55dd35f47d98 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55dd35f47d78 <col:35> 'int' 1
|   `-CompoundStmt 0x55dd35f47e10 <line:64:2, line:65:2>
|-FieldDecl 0x55dd35f347a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55dd35f34808 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55dd35f3b950 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55dd35f46690 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55dd35f468c8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55dd35f466f8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55dd35f46770 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55dd35f467e8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55dd35f46ab0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55dd35f46998 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55dd35f46a18 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55dd35f46cf8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55dd35f46b78 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55dd35f46bf8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55dd35f46f08 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55dd35f46db8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55dd35f46e30 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55dd35f47058 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55dd35f46fc8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55dd35f47120 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55dd35f471e0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55dd35f472a8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55dd35f472a8
| `-ParmVarDecl 0x55dd35f473b8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55dd35f47458 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55dd35f47458
  `-ParmVarDecl 0x55dd35f47568 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.17, %class.Vector.18 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.17, %class.Vector.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e71518 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35e71638 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55dd35e716c8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55dd35e71750 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55dd35e71840 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55dd35e71940 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55dd35e71a00 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55dd35e71ac0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55dd35e71ba8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55dd35e71cc8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55dd35e71cc8
| `-ParmVarDecl 0x55dd35e71dd8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55dd35f4ca08 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55dd35f4ca08
  `-ParmVarDecl 0x55dd35f4cb18 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35ee93e8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35ee9508 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55dd35ee95a8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55dd35ee9608 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55dd35f4c008 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55dd35f4c008
| `-ParmVarDecl 0x55dd35f4c118 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55dd35f4c1b8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55dd35f4c1b8
| `-ParmVarDecl 0x55dd35f4c2c8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55dd35f4c338 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55dd35f4c338
|-CXXMethodDecl 0x55dd35f4cbb8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55dd35f4cbb8
| `-ParmVarDecl 0x55dd35f4ccc8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55dd35f4cd38 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55dd35f4cd38
| `-ParmVarDecl 0x55dd35f4ce48 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55dd35f54c58 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55dd35f54d30 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e73410 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35e73528 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55dd35e735b8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55dd35e73640 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55dd35e73700 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55dd358f4370 'int'
|-CXXMethodDecl 0x55dd35e737c8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55dd35e73868 <col:45> always_inline
|-CXXMethodDecl 0x55dd35e73998 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55dd35e738d0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55dd35e73a40 <col:49> always_inline
|-CXXConstructorDecl 0x55dd35e73b38 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55dd35e73b38
| `-ParmVarDecl 0x55dd35e73c48 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55dd35e73ce8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55dd35e73ce8
| `-ParmVarDecl 0x55dd35e73df8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55dd35f4c420 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55dd35f4c420
|-CXXMethodDecl 0x55dd35f4cee8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55dd35f4cee8
| `-ParmVarDecl 0x55dd35f4cff8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55dd35f4d068 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55dd35f4d068
  `-ParmVarDecl 0x55dd35f4d178 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35f48280 prev 0x55dd35f334a0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55dd35f48378 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55dd35f48408 <col:22, col:28> col:22 public
|-EnumDecl 0x55dd35f48430 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55dd35f48548 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55dd35f48528 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55dd35f48510 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd35f484f0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55dd35f485f0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55dd35f485d0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55dd35f485b8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55dd35f48598 <col:53> 'int' 1000
|-CXXMethodDecl 0x55dd35f48690 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55dd35f48750 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55dd35f48838 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55dd35f4d238 <col:34, col:52>
|   `-ReturnStmt 0x55dd35f4d228 <col:36, col:43>
|     `-MemberExpr 0x55dd35f4d1f8 <col:43> 'TimerSet' lvalue ->_timers 0x55dd35f4a508
|       `-CXXThisExpr 0x55dd35f4d1e8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55dd35f48928 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55dd35f4d2a0 <col:46, col:64>
|   `-ReturnStmt 0x55dd35f4d290 <col:48, col:55>
|     `-MemberExpr 0x55dd35f4d260 <col:55> 'const TimerSet' lvalue ->_timers 0x55dd35f4a508
|       `-CXXThisExpr 0x55dd35f4d250 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55dd35f48a18 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55dd35f4d308 <col:36, col:55>
|   `-ReturnStmt 0x55dd35f4d2f8 <col:38, col:45>
|     `-MemberExpr 0x55dd35f4d2c8 <col:45> 'SelectSet' lvalue ->_selects 0x55dd35f4a568
|       `-CXXThisExpr 0x55dd35f4d2b8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55dd35f48b08 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55dd35f4d370 <col:48, col:67>
|   `-ReturnStmt 0x55dd35f4d360 <col:50, col:57>
|     `-MemberExpr 0x55dd35f4d330 <col:57> 'const SelectSet' lvalue ->_selects 0x55dd35f4a568
|       `-CXXThisExpr 0x55dd35f4d320 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55dd35f48bc8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55dd35f48cb8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55dd35f48e28 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55dd35f48d68 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55dd35f48ef0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55dd35f49338 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55dd35f48fa0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55dd35f49220 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55dd35f49408 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55dd35f494c8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55dd35f49588 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55dd35f496c8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55dd35f49638 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55dd35f49790 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55dd35f49850 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55dd35f49910 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55dd35f499d0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55dd35f49b10 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55dd35f49a80 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55dd35f49bd8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55dd35f49c98 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55dd35f49d38 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55dd35f49e00 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f49e50 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f49ea0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f49ef0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f49f40 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f49f90 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f49fe0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f4a030 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f4a080 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55dd35f4a0d0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55dd35f4a120 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55dd35f4a218 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55dd35f4a188 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55dd35f4a368 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55dd35f4a2d8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55dd35f4a410 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55dd35f4a448 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55dd35f4a4a8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55dd35f4a508 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55dd35f4a568 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55dd35f4a5e8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55dd35f4a658 <col:40, col:50> aligned
|   `-ConstantExpr 0x55dd35f4a638 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55dd35f4a5b8 <col:48> 'int' 64
|-FieldDecl 0x55dd35f4a6c8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55dd35f4a728 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55dd35f4a820 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55dd35f4a930 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55dd35f4a990 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55dd35f4aa10 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55dd35f4aa80 <col:36, col:46> aligned
|   `-ConstantExpr 0x55dd35f4aa60 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55dd35f4a9e0 <col:44> 'int' 64
|-FieldDecl 0x55dd35f4aaf8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55dd35f4ab58 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55dd35f4aba8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55dd35f4abe8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55dd35f4ac50 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55dd35f4aca0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55dd35f4ae48 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55dd35f4acd8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55dd35f4ad58 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55dd35f4af48 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55dd35f4af48
|-CXXMethodDecl 0x55dd35f4b050 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55dd35f4b118 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55dd35f4d468 <col:34, line:217:5>
|   `-ReturnStmt 0x55dd35f4d458 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55dd35f4d440 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55dd35f4d410 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55dd35ee64c0
|         `-ImplicitCastExpr 0x55dd35f4d3f8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55dd35f4d3c8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55dd35ee6458
|             `-MemberExpr 0x55dd35f4d398 <col:16> 'const TaskLink' lvalue ->_task_link 0x55dd35f4a448
|               `-CXXThisExpr 0x55dd35f4d388 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55dd35f4b1d8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55dd35f4b298 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55dd35f4f330 <col:39, line:226:5>
|   |-DeclStmt 0x55dd35f4d6b8 <line:223:9, col:68>
|   | `-VarDecl 0x55dd35f4d490 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55dd35f4d670 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55dd35f4d640 <col:24, col:38> '<bound member function type>' .compare_swap 0x55dd35c1dc70
|   |     | `-MemberExpr 0x55dd35f4d508 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55dd35f4a6c8
|   |     |   `-CXXThisExpr 0x55dd35f4d4f8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55dd35f4d5f8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55dd35f4d5e0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55dd35f4d5b8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55dd35f4d598 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55dd35f4d6a0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55dd35f4d620 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55dd35f4d700 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55dd35f4d6d0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55dd35f4d490 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55dd35f4f310 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55dd35f4f2e0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55dd35f4efb8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55dd35f4ef88 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55dd35f4ef70 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55dd35f4d728 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55dd35f4d490 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55dd35f4ef48 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55dd35f4ef30 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55dd35f4d768 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55dd35f4d748 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55dd35f4f018 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55dd35f4eff8 <col:60> 'int' 0
|       `-CallExpr 0x55dd35f4f240 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55dd35f4f228 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55dd35f4f208 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55dd35f4f280 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55dd35f4f108 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55dd35f4f298 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55dd35f4f138 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55dd35f4f2b0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55dd35f4f178 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55dd35f4f2c8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55dd35f4f1f0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55dd35f4f1d8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55dd35f4f198 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55dd35f4b3e0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55dd35f4b350 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55dd35f4b4a8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55dd35f4b568 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55dd35f4b628 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55dd35f4b6e8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55dd35f4b7a8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55dd35f4b8a0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55dd35f4b900 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55dd35f4b990 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55dd35f4bd58 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55dd35f4bd58
| `-ParmVarDecl 0x55dd35f4be68 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55dd35f4c528 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55dd35f4c528
  `-ParmVarDecl 0x55dd35f4c638 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e75b78 prev 0x55dd35e57fc0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35e75c70 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55dd35e75d00 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55dd35e75d60 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55dd35e75e08 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd35e75f28 <col:5, col:12> col:12 implicit struct do_nothing_t
| |-CXXConstructorDecl 0x55dd35fd9600 <col:12> col:12 implicit constexpr do_nothing_t 'void ()' inline default trivial noexcept-unevaluated 0x55dd35fd9600
| |-CXXConstructorDecl 0x55dd35fd96e0 <col:12> col:12 implicit constexpr do_nothing_t 'void (const Timer::do_nothing_t &)' inline default trivial noexcept-unevaluated 0x55dd35fd96e0
| | `-ParmVarDecl 0x55dd35fd97c8 <col:12> col:12 'const Timer::do_nothing_t &'
| `-CXXConstructorDecl 0x55dd35fd9868 <col:12> col:12 implicit constexpr do_nothing_t 'void (Timer::do_nothing_t &&)' inline default trivial noexcept-unevaluated 0x55dd35fd9868
|   `-ParmVarDecl 0x55dd35fd9978 <col:12> col:12 'Timer::do_nothing_t &&'
|-CXXConstructorDecl 0x55dd35e760c8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55dd35e76008 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55dd35e76318 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55dd35e76188 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55dd35e76208 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55dd35e764a8 <line:43:5, col:27> col:5 used Timer 'void (Element *)'
| `-ParmVarDecl 0x55dd35e763e0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55dd35e76628 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55dd35e76568 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55dd35e767d8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55dd35e76718 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55dd35e768d0 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55dd35e8c140 <col:21, line:58:5>
|   `-IfStmt 0x55dd35e8c128 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55dd35e8c090 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55dd35e8c060 <col:6> '<bound member function type>' ->scheduled 0x55dd35e77128
|     |   `-ImplicitCastExpr 0x55dd35e8c0b0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55dd35e8c050 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55dd35e8c108 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55dd35e8c0d8 <col:6> '<bound member function type>' ->unschedule 0x55dd35e8a7f0
|         `-CXXThisExpr 0x55dd35e8c0c8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55dd35e769d0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55dd35e8c2e0 <col:26, line:65:5>
|   |-BinaryOperator 0x55dd35e8c200 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55dd35e8c198 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55dd35e8b478
|   | | `-MemberExpr 0x55dd35e8c168 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55dd35e8b538
|   | |   `-CXXThisExpr 0x55dd35e8c158 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55dd35e8c1e8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd35e8c1c8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55dd35e8b998 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55dd35e8c2c0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55dd35e8c230 <col:2> 'void *' lvalue ->_thunk 0x55dd35e8b5b8
|     | `-CXXThisExpr 0x55dd35e8c220 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55dd35e8c298 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55dd35e8c260 <col:20> 'int' 1
|-CXXMethodDecl 0x55dd35e76b10 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55dd35e76a80 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55dd35e8c440 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55dd35e8c330 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55dd35e8c300 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55dd35e76a80 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55dd35e8c420 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55dd35e8c3f0 <col:2> '<bound member function type>' ->assign 0x55dd35e769d0
|       `-CXXThisExpr 0x55dd35e8c3e0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55dd35e76ce0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55dd35e76bc8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55dd35e76c48 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55dd35e8c5c0 <col:58, line:79:5>
|   |-BinaryOperator 0x55dd35e8c508 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55dd35e8c4a0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55dd35e8b478
|   | | `-MemberExpr 0x55dd35e8c470 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55dd35e8b538
|   | |   `-CXXThisExpr 0x55dd35e8c460 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55dd35e8c4f0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd35e8c4d0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55dd35e76bc8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55dd35e8c5a0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55dd35e8c538 <col:2> 'void *' lvalue ->_thunk 0x55dd35e8b5b8
|     | `-CXXThisExpr 0x55dd35e8c528 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55dd35e8c588 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e8c568 <col:11> 'void *' lvalue ParmVar 0x55dd35e76c48 'user_data' 'void *'
|-CXXMethodDecl 0x55dd35e76e30 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55dd35e76da0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55dd35e8c758 <col:35, line:87:5>
|   |-BinaryOperator 0x55dd35e8c688 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55dd35e8c620 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55dd35e8b478
|   | | `-MemberExpr 0x55dd35e8c5f0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55dd35e8b538
|   | |   `-CXXThisExpr 0x55dd35e8c5e0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55dd35e8c670 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd35e8c650 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55dd35e8bb70 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55dd35e8c738 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55dd35e8c6b8 <col:2> 'void *' lvalue ->_thunk 0x55dd35e8b5b8
|     | `-CXXThisExpr 0x55dd35e8c6a8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55dd35e8c720 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55dd35e8c708 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55dd35e8c6e8 <col:11> 'Element *' lvalue ParmVar 0x55dd35e76da0 'element' 'Element *'
|-CXXMethodDecl 0x55dd35e76f78 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55dd35e76ee8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55dd35e8c8f0 <col:29, line:94:5>
|   |-BinaryOperator 0x55dd35e8c820 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55dd35e8c7b8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55dd35e8b478
|   | | `-MemberExpr 0x55dd35e8c788 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55dd35e8b538
|   | |   `-CXXThisExpr 0x55dd35e8c778 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55dd35e8c808 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd35e8c7e8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55dd35e8bd48 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55dd35e8c8d0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55dd35e8c850 <col:2> 'void *' lvalue ->_thunk 0x55dd35e8b5b8
|     | `-CXXThisExpr 0x55dd35e8c840 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55dd35e8c8b8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55dd35e8c8a0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55dd35e8c880 <col:11> 'Task *' lvalue ParmVar 0x55dd35e76ee8 'task' 'Task *'
|-CXXMethodDecl 0x55dd35e77068 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55dd35e8c9d0 <col:37, line:100:5>
|   `-ReturnStmt 0x55dd35e8c9c0 <line:99:2, col:19>
|     `-BinaryOperator 0x55dd35e8c9a0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55dd35e8c970 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55dd35e8c920 <col:9> 'Element *const' lvalue ->_owner 0x55dd35e8b618
|       |   `-CXXThisExpr 0x55dd35e8c910 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55dd35e8c988 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55dd35e8c950 <col:19> 'int' 0
|-CXXMethodDecl 0x55dd35e77128 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55dd35e8ca90 <col:35, line:105:5>
|   `-ReturnStmt 0x55dd35e8ca80 <line:104:2, col:23>
|     `-BinaryOperator 0x55dd35e8ca60 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55dd35e8ca48 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55dd35e8c9f8 <col:9> 'const int' lvalue ->_schedpos1 0x55dd35e8b298
|       |   `-CXXThisExpr 0x55dd35e8c9e8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55dd35e8ca28 <col:23> 'int' 0
|-CXXMethodDecl 0x55dd35e771e8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55dd35e8caf8 <col:51, line:118:5>
|   `-ReturnStmt 0x55dd35e8cae8 <line:117:2, col:9>
|     `-MemberExpr 0x55dd35e8cab8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|       `-CXXThisExpr 0x55dd35e8caa8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd35e772a8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55dd35e8d050 <col:37, line:136:5>
|   `-IfStmt 0x55dd35e8d028 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55dd35e8cbb8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55dd35e8cba0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55dd35e8cb80 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55dd35e8cb50 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55dd35dea098
|     |       `-MemberExpr 0x55dd35e8cb20 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|     |         `-CXXThisExpr 0x55dd35e8cb10 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55dd35e8cf98 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55dd35e8cf80 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55dd35e8cf50 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55dd35e8cf38 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55dd35e8cf00 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55dd35e8cee8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55dd35e8cec8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd35e18870 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55dd35e8ce68 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55dd35e8ce50 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55dd35e8cd78 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55dd35e8cd60 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55dd35e8cd40 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd35e18530 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55dd35e8cce0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55dd35e8cbe0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|     |         |     |   `-CXXThisExpr 0x55dd35e8cbd0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55dd35e8cd28 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55dd35e8cd10 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55dd35e8ccc0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55dd35e8cca8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55dd35e8cc48 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55dd35e0bb90 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55dd35e8ceb0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55dd35e8ce98 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55dd35e8ce30 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55dd35e8ce18 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55dd35e8cde8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55dd35c670e0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55dd35e8d018 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55dd35e8cfe8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55dd35e8cfb8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|           `-CXXThisExpr 0x55dd35e8cfa8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd35e77368 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55dd35e8d138 <col:35, line:141:5>
|   `-ReturnStmt 0x55dd35e8d128 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55dd35e8d0f0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55dd35e8d0c0 <col:9, col:17> '<bound member function type>' ->router 0x55dd35e6a720
|         `-ImplicitCastExpr 0x55dd35e8d110 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55dd35e8d0a8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55dd35e8d078 <col:9> 'Element *const' lvalue ->_owner 0x55dd35e8b618
|               `-CXXThisExpr 0x55dd35e8d068 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd35e77428 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55dd35e8d1b8 <col:37, line:146:5>
|   `-ReturnStmt 0x55dd35e8d1a8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55dd35e8d190 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55dd35e8d160 <col:9> 'Element *const' lvalue ->_owner 0x55dd35e8b618
|         `-CXXThisExpr 0x55dd35e8d150 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd35e774e8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55dd35e8d238 <col:41, line:151:5>
|   `-ReturnStmt 0x55dd35e8d228 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55dd35e8d210 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55dd35e8d1e0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55dd35e8b678
|         `-CXXThisExpr 0x55dd35e8d1d0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd35e775b0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55dd35e777a8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55dd35e77660 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55dd35e776d8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd35e8bf58 <col:50> 'bool' false
|-CXXMethodDecl 0x55dd35e77928 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55dd35e77868 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55dd35e89ae0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55dd35e779e0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55dd35e89c28 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55dd35e89b98 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55dd35e89d70 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55dd35e89ce0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55dd35e89eb8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55dd35e89e28 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55dd35e89f80 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55dd35e8d3a0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55dd35e8d388 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55dd35e8d330 <col:2, col:47> 'void'
|       |-MemberExpr 0x55dd35e8d260 <col:2> '<bound member function type>' ->schedule_at_steady 0x55dd35e89ae0
|       | `-CXXThisExpr 0x55dd35e8d250 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd35e8d370 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd35e8d358 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55dd35e8d310 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55dd35e8d2f8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55dd35e8d2c8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55dd35c670e0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55dd35e8a0c0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55dd35e8a030 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55dd35e8a208 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd35e8a178 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e8d528 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55dd35e8d510 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55dd35e8d4b8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55dd35e8d3c8 <col:2> '<bound member function type>' ->schedule_after 0x55dd35e8a0c0
|       | `-CXXThisExpr 0x55dd35e8d3b8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd35e8d4f8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd35e8d4e0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55dd35e8d478 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd35e8d448 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd35e8d408 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35e8a178 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55dd35e8d460 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55dd35e8d428 <col:38> 'int' 0
|-CXXMethodDecl 0x55dd35e8a350 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd35e8a2c0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e8d798 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55dd35e8d780 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55dd35e8d728 <col:2, col:49> 'void'
|       |-MemberExpr 0x55dd35e8d550 <col:2> '<bound member function type>' ->schedule_after 0x55dd35e8a0c0
|       | `-CXXThisExpr 0x55dd35e8d540 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd35e8d768 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd35e8d750 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55dd35e8d6d0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55dd35e8d6b8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55dd35e8d628 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55dd35debe88 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55dd35e8d710 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55dd35e8d6f8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd35e8d608 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35e8a2c0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e8a498 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55dd35e8a408 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55dd35e8d978 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55dd35e8d960 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55dd35e8d908 <col:2, col:38> 'void'
|       |-MemberExpr 0x55dd35e8d7c0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55dd35e89ae0
|       | `-CXXThisExpr 0x55dd35e8d7b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd35e8d948 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd35e8d930 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55dd35e8d8d0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55dd35e8d8b8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55dd35e8d898 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd35e18530 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55dd35e8d868 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55dd35e8d850 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55dd35e8d800 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|             |     `-CXXThisExpr 0x55dd35e8d7f0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55dd35e8d830 <col:33> 'const Timestamp' lvalue ParmVar 0x55dd35e8a408 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55dd35e8a5e0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd35e8a550 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e8dc50 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55dd35e8dc38 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55dd35e8dbe0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55dd35e8d9a0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55dd35e89ae0
|       | `-CXXThisExpr 0x55dd35e8d990 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd35e8dc20 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd35e8dc08 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55dd35e8dba0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55dd35e8dad8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55dd35e8dac0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55dd35e8da50 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55dd35e8da20 <col:31, col:41> '<bound member function type>' .sec 0x55dd35c68bd8
|             | |     `-ImplicitCastExpr 0x55dd35e8da70 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55dd35e8d9f0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|             | |         `-CXXThisExpr 0x55dd35e8d9e0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55dd35e8daa8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55dd35e8da88 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35e8a550 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55dd35e8db68 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55dd35e8db38 <col:60, col:70> '<bound member function type>' .subsec 0x55dd35c692d0
|                 `-ImplicitCastExpr 0x55dd35e8db88 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55dd35e8db08 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|                     `-CXXThisExpr 0x55dd35e8daf8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55dd35e8a728 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd35e8a698 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd35e8df88 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55dd35e8df70 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55dd35e8df18 <col:2, col:65> 'void'
|       |-MemberExpr 0x55dd35e8dc78 <col:2> '<bound member function type>' ->schedule_at_steady 0x55dd35e89ae0
|       | `-CXXThisExpr 0x55dd35e8dc68 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd35e8df58 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd35e8df40 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55dd35e8dee0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55dd35e8dec8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55dd35e8dea8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd35e18530 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55dd35e8de48 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55dd35e8de30 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55dd35e8dcb8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|             |     `-CXXThisExpr 0x55dd35e8dca8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55dd35e8de90 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55dd35e8de78 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55dd35e8ddd8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55dd35e8ddc0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55dd35e8dd90 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55dd35debe88 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55dd35e8de18 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55dd35e8de00 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55dd35e8dd70 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd35e8a698 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e8a7f0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55dd35e8a8b0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55dd35e8e450 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55dd35e8dfe0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55dd35e8dfb0 <col:2> '<bound member function type>' ->unschedule 0x55dd35e8a7f0
|   |   `-CXXThisExpr 0x55dd35e8dfa0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55dd35e8e438 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55dd35e8e400 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55dd35e8e3e8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35e8e098 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55dd35b00178 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55dd35e8e010 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55dd35e8b2f8
|       | `-CXXThisExpr 0x55dd35e8e000 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd35e8e080 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55dd35e8e050 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55dd35e8a970 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55dd35e8e7a8 <col:42, line:310:5>
|   |-IfStmt 0x55dd35e8e5f0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55dd35e8e520 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55dd35e8e508 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55dd35e8e4a8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55dd35e0a000 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55dd35e8e5e0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55dd35e8e5c8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55dd35e8e598 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55dd35e8e580 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55dd35e8e550 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55dd35e8e798 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55dd35e8e780 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55dd35e8e750 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd35e8e738 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55dd35e8e6f8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55dd35e8e6e0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55dd35e8e6b0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55dd35dec1a0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55dd35e8e720 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55dd35e8e690 <col:30> 'int' 500
|-CXXMethodDecl 0x55dd35e8aab0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd35e8aa20 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35e8ab58 <col:69> "" ""
|-CXXMethodDecl 0x55dd35e8ac68 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd35e8abd8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35e8ad10 <col:70> "" ""
|-CXXMethodDecl 0x55dd35e8ae20 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd35e8ad90 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35e8aec8 <col:71> "" ""
|-CXXMethodDecl 0x55dd35e8afd8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd35e8af48 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35e8b080 <col:72> "" ""
|-EnumDecl 0x55dd35e8b0f0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55dd35e8b1f0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55dd35e8b240 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e8b1d0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55dd35e8b1b0 <col:25> 'int' 1
|-AccessSpecDecl 0x55dd35e8b258 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55dd35e8b298 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55dd35e8b2f8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55dd35e8b348 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55dd35e8b478 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55dd35e8bf68 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55dd35e8b538 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55dd35e8b5b8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55dd35e8b618 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55dd35e8b678 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55dd35e8b7c8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55dd35e8b6d8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55dd35e8b998 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55dd35e8b880 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55dd35e8b900 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55dd35e8bb70 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55dd35e8ba58 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55dd35e8bad8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55dd35e8bd48 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55dd35e8bc30 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55dd35e8bcb0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55dd35e8bf18 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.14, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.14, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e8fb50 <../elements/standard/quitwatcher.hh:24:1, line:40:1> line:24:7 class QuitWatcher definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55dd35e8fca8 <col:1, col:7> col:7 implicit referenced class QuitWatcher
|-AccessSpecDecl 0x55dd35e8fd38 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x55dd35e8fdc0 <line:26:3, col:15> col:3 QuitWatcher 'void ()'
|-CXXMethodDecl 0x55dd35e8fec0 <line:28:3, col:58> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55dd35e59ad8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55dd35ea2f80 <col:34, col:58>
|   `-ReturnStmt 0x55dd35ea2f70 <col:36, col:43>
|     `-ImplicitCastExpr 0x55dd35ea2f58 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55dd35ea2f30 <col:43> 'const char [12]' lvalue "QuitWatcher"
|-CXXMethodDecl 0x55dd35e90190 <line:29:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55dd35e5b370 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55dd35e90040 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55dd35e900b8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e902e8 <line:30:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55dd35e5b5c0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55dd35e90250 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35e90430 <line:32:3, col:25> col:8 run_timer 'void (Timer *)'
| |-Overrides: [ 0x55dd35e58ff8 Element::run_timer 'void (Timer *)' ]
| `-ParmVarDecl 0x55dd35e903a0 <col:18, col:24> col:25 'Timer *'
|-AccessSpecDecl 0x55dd35e904d8 <line:34:2, col:9> col:2 private
|-FieldDecl 0x55dd35e9b610 <line:36:3, col:20> col:20 _e 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55dd35ea2700 <line:37:3, col:26> col:26 _handlers 'Vector<const Handler *>':'Vector<const Handler *>'
|-FieldDecl 0x55dd35ea2760 <line:38:3, col:9> col:9 _timer 'Timer'
|-CXXConstructorDecl 0x55dd35ea27d8 <line:24:7> col:7 implicit QuitWatcher 'void (const QuitWatcher &)' inline default_delete noexcept-unevaluated 0x55dd35ea27d8
| `-ParmVarDecl 0x55dd35ea28e8 <col:7> col:7 'const QuitWatcher &'
|-CXXConstructorDecl 0x55dd35ea2988 <col:7> col:7 implicit QuitWatcher 'void (QuitWatcher &&)' inline default_delete noexcept-unevaluated 0x55dd35ea2988
| `-ParmVarDecl 0x55dd35ea2a98 <col:7> col:7 'QuitWatcher &&'
|-CXXMethodDecl 0x55dd35ea2b38 <col:7> col:7 implicit operator= 'QuitWatcher &(const QuitWatcher &)' inline default_delete noexcept-unevaluated 0x55dd35ea2b38
| `-ParmVarDecl 0x55dd35ea2c48 <col:7> col:7 'const QuitWatcher &'
|-CXXMethodDecl 0x55dd35ea2cb8 <col:7> col:7 implicit operator= 'QuitWatcher &(QuitWatcher &&)' inline default_delete noexcept-unevaluated 0x55dd35ea2cb8
| `-ParmVarDecl 0x55dd35ea2dc8 <col:7> col:7 'QuitWatcher &&'
`-CXXDestructorDecl 0x55dd35ea2e50 <col:7> col:7 implicit ~QuitWatcher 'void ()' inline default noexcept-unevaluated 0x55dd35ea2e50
  `-Overrides: [ 0x55dd35e58678 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.QuitWatcher = type { %class.Element.base, %class.Vector, %class.Vector.13, %class.Timer }
  NonVirtualBaseLLVMType:%class.QuitWatcher = type { %class.Element.base, %class.Vector, %class.Vector.13, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35ee8d18 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55dd35ee8e48 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55dd35ee8ea8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55dd35ee8f08 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55dd35f54388 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55dd35f54460 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55dd35f54460
|-CXXConstructorDecl 0x55dd35f54718 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55dd35f54718
| `-ParmVarDecl 0x55dd35f54828 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55dd35f548c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55dd35f548c8
  `-ParmVarDecl 0x55dd35f549d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35ee8b70 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dd35ee8c88 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55dd35ee8d18 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55dd35ee8e48 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55dd35ee8ea8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55dd35ee8f08 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55dd35f54388 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55dd35f54460 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55dd35f54460
| |-CXXConstructorDecl 0x55dd35f54718 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55dd35f54718
| | `-ParmVarDecl 0x55dd35f54828 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55dd35f548c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55dd35f548c8
|   `-ParmVarDecl 0x55dd35f549d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55dd35ee8fc8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55dd35ee9028 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55dd35ee8fc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55dd35ee8e48 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55dd35ee9080 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55dd35ee8fc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55dd35ee8ea8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55dd35ee90d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55dd35ee8fc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55dd35ee8f08 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55dd35ee9130 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd35f54298 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd35f54bf8 <col:11>
|-CXXConstructorDecl 0x55dd35f54568 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55dd35f54568
| `-ParmVarDecl 0x55dd35f54678 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55dd35f54a78 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55dd35f54a78
  `-ParmVarDecl 0x55dd35f54b88 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35ee67d0 prev 0x55dd35e57f10 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55dd35ee6908 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55dd35ee6998 <col:33, col:39> col:33 public
|-EnumDecl 0x55dd35ee69c0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55dd35ee6b00 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55dd35ee6ae0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55dd35ee6ac0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55dd35ee6a80 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55dd35ee6aa0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55dd35ee6bd0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55dd35ee6bb0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55dd35ee6b90 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55dd35ee6b50 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55dd35ee6b70 <col:47> 'int' 31
|-EnumDecl 0x55dd35ee6c20 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55dd35ee6d60 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55dd35ee6e80 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35ee6d40 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55dd35ee6d20 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55dd35ee6ce0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55dd35ee6d00 <col:29> 'int' 15
| `-EnumConstantDecl 0x55dd35ee6e30 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55dd35ee6e98 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35ee6e10 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55dd35ee6df0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55dd35ee6db0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55dd35ee6dd0 <col:54> 'int' 10
|-CXXConstructorDecl 0x55dd35ee7068 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55dd35ee6ec0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55dd35ee6f40 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55dd35ee71c0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55dd35ee7130 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55dd35ee72b8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55dd35ee72b8
|-CXXMethodDecl 0x55dd35ee7448 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55dd35eea548 <col:42, line:100:5>
|   `-ReturnStmt 0x55dd35eea538 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55dd35eea520 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55dd35eea4f0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55dd35ee9270
|         `-CXXThisExpr 0x55dd35eea4e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55dd35ee7510 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55dd35eea5c8 <col:36, line:105:5>
|   `-ReturnStmt 0x55dd35eea5b8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55dd35eea5a0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55dd35eea570 <col:16> 'void *const' lvalue ->_thunk 0x55dd35ee92d8
|         `-CXXThisExpr 0x55dd35eea560 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55dd35ee75d0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55dd35eea648 <col:37, line:110:5>
|   `-ReturnStmt 0x55dd35eea638 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55dd35eea620 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55dd35eea5f0 <col:16> 'Element *const' lvalue ->_owner 0x55dd35ee9398
|         `-CXXThisExpr 0x55dd35eea5e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55dd35ee7690 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55dd35ee7758 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55dd35ee7818 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55dd35ee78d8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55dd35eea730 <col:35, line:137:5>
|   `-ReturnStmt 0x55dd35eea720 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55dd35eea6e8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55dd35eea6b8 <col:16, col:24> '<bound member function type>' ->router 0x55dd35e6a720
|         `-ImplicitCastExpr 0x55dd35eea708 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55dd35eea6a0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55dd35eea670 <col:16> 'Element *const' lvalue ->_owner 0x55dd35ee9398
|               `-CXXThisExpr 0x55dd35eea660 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55dd35ee7998 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55dd35ee7b58 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55dd35ee7a48 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55dd35ee7ac0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55dd35ee7d68 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55dd35ee7c18 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55dd35ee7c90 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55dd35ee7e38 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55dd35eea840 <col:35, line:181:5>
|   `-ReturnStmt 0x55dd35eea830 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55dd35eea818 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55dd35eea800 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55dd35eea7d0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55dd35ee8ea8
|           `-MemberExpr 0x55dd35eea788 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55dd35ee8fc8
|             `-MemberExpr 0x55dd35eea758 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55dd35ee91f8
|               `-CXXThisExpr 0x55dd35eea748 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55dd35ee7ef8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55dd35eea958 <col:30, line:192:5>
|   `-BinaryOperator 0x55dd35eea938 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55dd35eea8e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55dd35ee8ea8
|     | `-MemberExpr 0x55dd35eea898 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55dd35ee8fc8
|     |   `-MemberExpr 0x55dd35eea868 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55dd35ee91f8
|     |     `-CXXThisExpr 0x55dd35eea858 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55dd35eea920 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55dd35eea910 <col:32> 'bool' false
|-CXXMethodDecl 0x55dd35ee7fb8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55dd35eeaca8 <col:30, line:206:5>
|   |-BinaryOperator 0x55dd35eeaa50 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55dd35eea9f8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55dd35ee8ea8
|   | | `-MemberExpr 0x55dd35eea9b0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55dd35ee8fc8
|   | |   `-MemberExpr 0x55dd35eea980 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55dd35ee91f8
|   | |     `-CXXThisExpr 0x55dd35eea970 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55dd35eeaa38 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55dd35eeaa28 <col:32> 'bool' true
|   |-CallExpr 0x55dd35eeaaf0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55dd35eeaad8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd35eeaab8 <col:9> 'void ()' lvalue Function 0x55dd35e710d0 'click_fence' 'void ()'
|   `-IfStmt 0x55dd35eeac90 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55dd35eeabd0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55dd35eeaba0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55dd35eeab50 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55dd35ee9608
|     | |   `-MemberExpr 0x55dd35eeab20 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55dd35ee9680
|     | |     `-CXXThisExpr 0x55dd35eeab10 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55dd35eeabb8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55dd35eeab80 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55dd35eeac50 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55dd35eeac00 <col:13> '<bound member function type>' ->complete_schedule 0x55dd35eea080
|       | `-CXXThisExpr 0x55dd35eeabf0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55dd35eeac78 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55dd35eeac30 <col:31> 'int' 0
|-CXXMethodDecl 0x55dd35ee8078 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55dd35eeadd0 <col:35, line:240:5>
|   `-BinaryOperator 0x55dd35eeadb0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55dd35eead58 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55dd35ee8ea8
|     | `-MemberExpr 0x55dd35eead10 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55dd35ee8fc8
|     |   `-MemberExpr 0x55dd35eeace0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55dd35ee91f8
|     |     `-CXXThisExpr 0x55dd35eeacd0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55dd35eead98 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55dd35eead88 <col:32> 'bool' true
|-CXXMethodDecl 0x55dd35ee8138 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55dd35eeafe8 <col:37, line:253:5>
|   |-BinaryOperator 0x55dd35eeaec8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55dd35eeae70 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55dd35ee8ea8
|   | | `-MemberExpr 0x55dd35eeae28 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55dd35ee8fc8
|   | |   `-MemberExpr 0x55dd35eeadf8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55dd35ee91f8
|   | |     `-CXXThisExpr 0x55dd35eeade8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55dd35eeaeb0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55dd35eeaea0 <col:32> 'bool' false
|   `-BinaryOperator 0x55dd35eeafc8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55dd35eeaf70 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55dd35ee8f08
|     | `-MemberExpr 0x55dd35eeaf28 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55dd35ee8fc8
|     |   `-MemberExpr 0x55dd35eeaef8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55dd35ee91f8
|     |     `-CXXThisExpr 0x55dd35eeaee8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55dd35eeafb0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55dd35eeafa0 <col:41> 'bool' true
|-CXXMethodDecl 0x55dd35ee81f8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55dd35eeb168 <col:37, line:264:5>
|   |-BinaryOperator 0x55dd35eeb0e8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55dd35eeb090 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55dd35ee8f08
|   | | `-MemberExpr 0x55dd35eeb048 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55dd35ee8fc8
|   | |   `-MemberExpr 0x55dd35eeb018 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55dd35ee91f8
|   | |     `-CXXThisExpr 0x55dd35eeb008 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55dd35eeb0d0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55dd35eeb0c0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55dd35eeb148 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55dd35eeb118 <col:9> '<bound member function type>' ->reschedule 0x55dd35ee7fb8
|       `-CXXThisExpr 0x55dd35eeb108 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55dd35ee8340 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55dd35ee82b0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55dd35ee8410 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55dd35ee8558 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55dd35ee84c8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55dd35ee86a8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55dd35ee8618 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55dd35ee8770 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55dd35ee8830 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55dd35ee88d0 <col:53> "" ""
|-CXXMethodDecl 0x55dd35ee8968 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55dd35ee8a08 <col:47> "" ""
|-AccessSpecDecl 0x55dd35ee8a78 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55dd35ee8ab8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55dd35ee8b20 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55dd35ee8b70 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd35ee8c88 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55dd35ee8d18 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55dd35ee8e48 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55dd35ee8ea8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55dd35ee8f08 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55dd35f54388 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55dd35f54460 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55dd35f54460
| | |-CXXConstructorDecl 0x55dd35f54718 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55dd35f54718
| | | `-ParmVarDecl 0x55dd35f54828 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55dd35f548c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55dd35f548c8
| |   `-ParmVarDecl 0x55dd35f549d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55dd35ee8fc8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55dd35ee9028 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55dd35ee8fc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55dd35ee8e48 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55dd35ee9080 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55dd35ee8fc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55dd35ee8ea8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55dd35ee90d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55dd35ee8fc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55dd35ee8f08 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55dd35ee9130 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55dd35f54298 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dd35f54bf8 <col:11>
| |-CXXConstructorDecl 0x55dd35f54568 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55dd35f54568
| | `-ParmVarDecl 0x55dd35f54678 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55dd35f54a78 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55dd35f54a78
|   `-ParmVarDecl 0x55dd35f54b88 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55dd35ee91f8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55dd35ee9270 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55dd35ee92d8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55dd35ee9338 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55dd35ee9398 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55dd35ee93e8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd35ee9508 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55dd35ee95a8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55dd35ee9608 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55dd35f4c008 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55dd35f4c008
| | `-ParmVarDecl 0x55dd35f4c118 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55dd35f4c1b8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55dd35f4c1b8
| | `-ParmVarDecl 0x55dd35f4c2c8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55dd35f4c338 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55dd35f4c338
| |-CXXMethodDecl 0x55dd35f4cbb8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55dd35f4cbb8
| | `-ParmVarDecl 0x55dd35f4ccc8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55dd35f4cd38 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55dd35f4cd38
| | `-ParmVarDecl 0x55dd35f4ce48 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55dd35f54c58 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55dd35f54d30 <col:11>
|-FieldDecl 0x55dd35ee9680 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55dd35ee97c8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55dd35ee9708 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55dd35ee9978 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55dd35ee9888 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55dd35ee9a40 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55dd35ee9b00 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55dd35ee9bc0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55dd35eeb278 <col:41, line:355:5>
|   `-ReturnStmt 0x55dd35eeb268 <line:354:9, col:38>
|     `-BinaryOperator 0x55dd35eeb248 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55dd35eeb218 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55dd35eeb1c8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55dd35ee9608
|       |   `-MemberExpr 0x55dd35eeb198 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55dd35ee9680
|       |     `-CXXThisExpr 0x55dd35eeb188 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55dd35eeb230 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55dd35eeb1f8 <col:38> 'int' 0
|-CXXMethodDecl 0x55dd35ee9c80 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55dd35ee9dc0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55dd35ee9d30 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55dd35ee9f38 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55dd35ee9e78 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55dd35eea080 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55dd35ee9ff0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55dd35eea148 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55dd35eea310 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55dd35eea1f8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55dd35eea278 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55dd35eea410 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55dd35eea4a0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HandlerCall
         0 |   class Element * _e
         8 |   const class Handler * _h
        16 |   class String _value
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35fc4a30 prev 0x55dd35ea3418 <../dummy_inc/click/handlercall.hh:143:1, line:470:1> line:143:7 referenced class HandlerCall definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55dd35fc4b28 <col:1, col:7> col:7 implicit referenced class HandlerCall
|-AccessSpecDecl 0x55dd35fc4bb8 <col:21, col:27> col:21 public
|-CXXMethodDecl 0x55dd35fc4df8 <line:147:5, line:148:30> line:147:19 call_read 'String (Element *, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fc4bf0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55dd35fc4c68 <col:41, col:55> col:55 hname 'const String &'
| `-ParmVarDecl 0x55dd35fc4ce0 <line:148:8, col:29> col:22 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcb930 <col:29> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcb910 <col:29> 'int' 0
|-CXXMethodDecl 0x55dd35fc5098 <line:149:5, line:150:30> line:149:19 call_read 'String (const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fc4ec0 <col:29, col:43> col:43 hdesc 'const String &'
| |-ParmVarDecl 0x55dd35fc4f38 <col:50, col:65> col:65 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc4fb0 <line:150:8, col:29> col:22 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcb968 <col:29> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcb948 <col:29> 'int' 0
|-CXXMethodDecl 0x55dd35fc5340 <line:151:5, line:152:28> line:151:16 call_write 'int (Element *, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fc5160 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55dd35fc51d8 <col:39, col:53> col:53 hname 'const String &'
| `-ParmVarDecl 0x55dd35fc5250 <line:152:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcb9a0 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcb980 <col:27> 'int' 0
|-CXXMethodDecl 0x55dd35fc6690 <line:153:5, line:154:28> line:153:16 used call_write 'int (Element *, const String &, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fc6430 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55dd35fc64a8 <col:39, col:53> col:53 hname 'const String &'
| |-ParmVarDecl 0x55dd35fc6520 <col:60, col:74> col:74 value 'const String &'
| `-ParmVarDecl 0x55dd35fc6598 <line:154:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcb9d8 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcb9b8 <col:27> 'int' 0
|-CXXMethodDecl 0x55dd35fc6940 <line:155:5, line:156:52> line:155:16 call_write 'int (const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fc6760 <col:27, col:41> col:41 hdesc 'const String &'
| |-ParmVarDecl 0x55dd35fc67d8 <line:156:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc6850 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcba10 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcb9f0 <col:51> 'int' 0
|-CXXMethodDecl 0x55dd35fc6c70 <line:157:5, line:158:52> line:157:16 call_write 'int (const String &, const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fc6a08 <col:27, col:41> col:41 hdesc 'const String &'
| |-ParmVarDecl 0x55dd35fc6a80 <col:48, col:62> col:62 value 'const String &'
| |-ParmVarDecl 0x55dd35fc6af8 <line:158:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc6b70 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcba48 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcba28 <col:51> 'int' 0
|-CXXConstructorDecl 0x55dd35fc6d68 <line:167:5, line:169:5> line:167:5 HandlerCall 'void ()'
| |-CXXCtorInitializer Field 0x55dd35fca9f8 '_e' 'Element *'
| | `-ImplicitCastExpr 0x55dd35fcbe28 <line:168:7> 'Element *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd35fcbde8 <col:7> 'int' 0
| |-CXXCtorInitializer Field 0x55dd35fcaa58 '_h' 'const Handler *'
| | `-CallExpr 0x55dd35fcbf10 <col:14, col:37> 'const Handler *'
| |   `-ImplicitCastExpr 0x55dd35fcbef8 <col:14, col:23> 'const Handler *(*)()' <FunctionToPointerDecay>
| |     `-DeclRefExpr 0x55dd35fcbea0 <col:14, col:23> 'const Handler *()' lvalue CXXMethod 0x55dd35e51d48 'blank_handler' 'const Handler *()'
| |-CXXCtorInitializer Field 0x55dd35fcaab8 '_value' 'String'
| | `-CXXConstructExpr 0x55dd35fcbf78 <line:167:5> 'String' 'void ()'
| `-CompoundStmt 0x55dd35fcbfe0 <line:168:40, line:169:5>
|-CXXConstructorDecl 0x55dd35fc6eb0 <line:178:5, line:181:5> line:178:5 used HandlerCall 'void (const String &)'
| |-ParmVarDecl 0x55dd35fc6e20 <col:17, col:31> col:31 used hdesc 'const String &'
| |-CXXCtorInitializer Field 0x55dd35fca9f8 '_e' 'Element *'
| | `-CXXReinterpretCastExpr 0x55dd35fcc020 <line:179:7, col:36> 'Element *' reinterpret_cast<class Element *> <IntegralToPointer>
| |   `-IntegerLiteral 0x55dd35fcbff0 <col:35> 'int' 4
| |-CXXCtorInitializer Field 0x55dd35fcaa58 '_h' 'const Handler *'
| | `-CallExpr 0x55dd35fcc118 <col:43, col:66> 'const Handler *'
| |   `-ImplicitCastExpr 0x55dd35fcc100 <col:43, col:52> 'const Handler *(*)()' <FunctionToPointerDecay>
| |     `-DeclRefExpr 0x55dd35fcc0d0 <col:43, col:52> 'const Handler *()' lvalue CXXMethod 0x55dd35e51d48 'blank_handler' 'const Handler *()'
| |-CXXCtorInitializer Field 0x55dd35fcaab8 '_value' 'String'
| | `-CXXConstructExpr 0x55dd35fcc1c0 <line:180:4, col:16> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55dd35fcc180 <col:11> 'const String' lvalue ParmVar 0x55dd35fc6e20 'hdesc' 'const String &'
| `-CompoundStmt 0x55dd35fcc230 <col:18, line:181:5>
|-EnumDecl 0x55dd35fc6f60 <line:184:5, line:191:5> line:184:10 Flags
| |-EnumConstantDecl 0x55dd35fc70a8 <line:185:2, col:22> col:2 readable 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55dd35fc74a0 <col:13, col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fc7088 <col:13, col:22> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55dd35fc7058 <col:13, col:22> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35fc7180 <line:186:2, col:20> col:2 referenced f_read 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55dd35fc74b8 <col:11, col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fc7160 <col:11, col:20> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55dd35fc7130 <col:11, col:20> 'Handler::Flags' EnumConstant 0x55dd35e4f540 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35fc7258 <line:187:2, col:22> col:2 writable 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55dd35fc74d0 <col:13, col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fc7238 <col:13, col:22> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55dd35fc7208 <col:13, col:22> 'Handler::Flags' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35fc7330 <line:188:2, col:21> col:2 referenced f_write 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55dd35fc74e8 <col:12, col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fc7310 <col:12, col:21> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55dd35fc72e0 <col:12, col:21> 'Handler::Flags' EnumConstant 0x55dd35e4f5d0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55dd35fc73c0 <line:189:2, col:20> col:2 referenced f_preinitialize 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x55dd35fc7500 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fc73a0 <col:20> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd35fc7380 <col:20> 'int' 4
| `-EnumConstantDecl 0x55dd35fc7450 <line:190:9, col:27> col:9 referenced f_unquote_param 'HandlerCall::Flags'
|   `-ImplicitCastExpr 0x55dd35fc7518 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35fc7430 <col:27> 'int' Int: 8
|       `-IntegerLiteral 0x55dd35fc7410 <col:27> 'int' 8
|-CXXMethodDecl 0x55dd35fc7720 <line:227:5, col:77> col:9 used initialize 'int (int, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35fc7548 <col:20, col:24> col:24 flags 'int'
| |-ParmVarDecl 0x55dd35fc75c0 <col:31, col:46> col:46 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc7638 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcba80 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcba60 <col:76> 'int' 0
|-CXXMethodDecl 0x55dd35fc7940 <line:235:5, col:78> col:16 used initialize_read 'int (const Element *, ErrorHandler *)' inline
| |-ParmVarDecl 0x55dd35fc77e8 <col:32, col:47> col:47 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc7860 <col:56, col:77> col:70 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbab8 <col:77> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcba98 <col:77> 'int' 0
|-CXXMethodDecl 0x55dd35fc7b18 <line:243:5, col:79> col:16 initialize_write 'int (const Element *, ErrorHandler *)' inline
| |-ParmVarDecl 0x55dd35fc7a00 <col:33, col:48> col:48 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc7a78 <col:57, col:78> col:71 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbaf0 <col:78> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbad0 <col:78> 'int' 0
|-TypedefDecl 0x55dd35fc7cd8 <line:246:5, col:58> col:33 referenced unspecified_bool_type 'bool (HandlerCall::*)() const'
| `-MemberPointerType 0x55dd35fc7c50 'bool (HandlerCall::*)() const'
|   |-RecordType 0x55dd35ea34b0 'HandlerCall'
|   | `-CXXRecord 0x55dd35fc4a30 'HandlerCall'
|   `-ParenType 0x55dd35fc7bf0 'bool () const' sugar
|     `-FunctionProtoType 0x55dd3599e9a0 'bool () const' const cdecl
|       `-BuiltinType 0x55dd358f42f0 'bool'
|-CXXConversionDecl 0x55dd35fc7e18 <line:252:5, line:254:5> line:252:5 operator bool (HandlerCall::*)() const 'HandlerCall::unspecified_bool_type () const'
| `-CompoundStmt 0x55dd35fcc4e0 <col:44, line:254:5>
|   `-ReturnStmt 0x55dd35fcc4d0 <line:253:2, col:70>
|     `-ConditionalOperator 0x55dd35fcc4a0 <col:9, col:70> 'bool (HandlerCall::*)() const'
|       |-BinaryOperator 0x55dd35fcc3c8 <col:9, col:43> 'bool' '||'
|       | |-BinaryOperator 0x55dd35fcc338 <col:9, col:38> 'bool' '!='
|       | | |-ImplicitCastExpr 0x55dd35fcc320 <col:9> 'const Handler *' <LValueToRValue>
|       | | | `-MemberExpr 0x55dd35fcc250 <col:9> 'const Handler *const' lvalue ->_h 0x55dd35fcaa58
|       | | |   `-CXXThisExpr 0x55dd35fcc240 <col:9> 'const HandlerCall *' implicit this
|       | | `-CallExpr 0x55dd35fcc300 <col:15, col:38> 'const Handler *'
|       | |   `-ImplicitCastExpr 0x55dd35fcc2e8 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|       | |     `-DeclRefExpr 0x55dd35fcc2b8 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x55dd35e51d48 'blank_handler' 'const Handler *()'
|       | `-ImplicitCastExpr 0x55dd35fcc3b0 <col:43> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55dd35fcc398 <col:43> 'Element *' <LValueToRValue>
|       |     `-MemberExpr 0x55dd35fcc368 <col:43> 'Element *const' lvalue ->_e 0x55dd35fca9f8
|       |       `-CXXThisExpr 0x55dd35fcc358 <col:43> 'const HandlerCall *' implicit this
|       |-UnaryOperator 0x55dd35fcc450 <col:48, col:62> 'bool (HandlerCall::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55dd35fcc420 <col:49, col:62> 'bool () const' CXXMethod 0x55dd35fc7ee8 'empty' 'bool () const'
|       `-ImplicitCastExpr 0x55dd35fcc488 <col:70> 'bool (HandlerCall::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55dd35fcc468 <col:70> 'int' 0
|-CXXMethodDecl 0x55dd35fc7ee8 <line:258:5, line:260:5> line:258:10 used empty 'bool () const'
| `-CompoundStmt 0x55dd35fcc6c8 <col:24, line:260:5>
|   `-ReturnStmt 0x55dd35fcc6b8 <line:259:2, col:44>
|     `-BinaryOperator 0x55dd35fcc698 <col:9, col:44> 'bool' '&&'
|       |-BinaryOperator 0x55dd35fcc5f0 <col:9, col:38> 'bool' '=='
|       | |-ImplicitCastExpr 0x55dd35fcc5d8 <col:9> 'const Handler *' <LValueToRValue>
|       | | `-MemberExpr 0x55dd35fcc508 <col:9> 'const Handler *const' lvalue ->_h 0x55dd35fcaa58
|       | |   `-CXXThisExpr 0x55dd35fcc4f8 <col:9> 'const HandlerCall *' implicit this
|       | `-CallExpr 0x55dd35fcc5b8 <col:15, col:38> 'const Handler *'
|       |   `-ImplicitCastExpr 0x55dd35fcc5a0 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|       |     `-DeclRefExpr 0x55dd35fcc570 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x55dd35e51d48 'blank_handler' 'const Handler *()'
|       `-UnaryOperator 0x55dd35fcc680 <col:43, col:44> 'bool' prefix '!' cannot overflow
|         `-ImplicitCastExpr 0x55dd35fcc668 <col:44> 'bool' <PointerToBoolean>
|           `-ImplicitCastExpr 0x55dd35fcc650 <col:44> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55dd35fcc620 <col:44> 'Element *const' lvalue ->_e 0x55dd35fca9f8
|               `-CXXThisExpr 0x55dd35fcc610 <col:44> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x55dd35fc7fa8 <line:264:5, line:266:5> line:264:10 used initialized 'bool () const'
| `-CompoundStmt 0x55dd35fcc808 <col:30, line:266:5>
|   `-ReturnStmt 0x55dd35fcc7f8 <line:265:2, col:38>
|     `-BinaryOperator 0x55dd35fcc7d8 <col:9, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55dd35fcc7c0 <col:9> 'const Handler *' <LValueToRValue>
|       | `-MemberExpr 0x55dd35fcc6f0 <col:9> 'const Handler *const' lvalue ->_h 0x55dd35fcaa58
|       |   `-CXXThisExpr 0x55dd35fcc6e0 <col:9> 'const HandlerCall *' implicit this
|       `-CallExpr 0x55dd35fcc7a0 <col:15, col:38> 'const Handler *'
|         `-ImplicitCastExpr 0x55dd35fcc788 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x55dd35fcc758 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x55dd35e51d48 'blank_handler' 'const Handler *()'
|-CXXMethodDecl 0x55dd35fc8118 <line:276:5, col:53> col:19 call_read 'String (ErrorHandler *) const' inline
| `-ParmVarDecl 0x55dd35fc8058 <col:29, col:50> col:43 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbb28 <col:50> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbb08 <col:50> 'int' 0
|-CXXMethodDecl 0x55dd35fc82a0 <line:285:5, col:51> col:16 call_write 'int (ErrorHandler *) const' inline
| `-ParmVarDecl 0x55dd35fc81d0 <col:27, col:48> col:41 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbb60 <col:48> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbb40 <col:48> 'int' 0
|-CXXMethodDecl 0x55dd35fc84e0 <line:296:5, col:82> col:16 call_write 'int (const VariableExpander &, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55dd35fc8388 <col:27, col:51> col:51 scope 'const VariableExpander &'
| `-ParmVarDecl 0x55dd35fc8400 <col:58, col:79> col:72 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbb98 <col:79> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbb78 <col:79> 'int' 0
|-CXXMethodDecl 0x55dd35fc86f0 <line:309:5, col:76> col:16 call_write 'int (const String &, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55dd35fc85a0 <col:27, col:41> col:41 value_ext 'const String &'
| `-ParmVarDecl 0x55dd35fc8618 <col:52, col:73> col:66 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbbd0 <col:73> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbbb0 <col:73> 'int' 0
|-CXXMethodDecl 0x55dd35fc8ad0 <line:333:5, line:334:54> line:333:16 used reset 'int (HandlerCall *&, const String &, int, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fc87e0 <col:22, col:36> col:36 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55dd35fc8858 <col:43, col:57> col:57 hdesc 'const String &'
| |-ParmVarDecl 0x55dd35fc88d8 <col:64, col:68> col:68 flags 'int'
| |-ParmVarDecl 0x55dd35fc8950 <line:334:8, col:23> col:23 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc89c8 <col:32, col:53> col:46 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbc08 <col:53> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbbe8 <col:53> 'int' 0
|-CXXMethodDecl 0x55dd35fc8f30 <line:347:5, line:349:41> line:347:16 used reset 'int (HandlerCall *&, Element *, const String &, const String &, int, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd35fc8bb0 <col:22, col:36> col:36 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55dd35fc8c28 <line:348:8, col:17> col:17 e 'Element *'
| |-ParmVarDecl 0x55dd35fc8ca0 <col:20, col:34> col:34 hname 'const String &'
| |-ParmVarDecl 0x55dd35fc8d18 <col:41, col:55> col:55 value 'const String &'
| |-ParmVarDecl 0x55dd35fc8d98 <line:349:8, col:12> col:12 flags 'int'
| `-ParmVarDecl 0x55dd35fc8e10 <col:19, col:40> col:33 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbc40 <col:40> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbc20 <col:40> 'int' 0
|-CXXMethodDecl 0x55dd35fc9280 <line:361:5, line:362:52> line:361:23 reset_read 'int (HandlerCall *&, const String &, const Element *, ErrorHandler *)' static inline
| |-ParmVarDecl 0x55dd35fc9018 <col:34, col:48> col:48 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55dd35fc9090 <col:55, col:69> col:69 hdesc 'const String &'
| |-ParmVarDecl 0x55dd35fc9108 <line:362:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc9180 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbc78 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbc58 <col:51> 'int' 0
|-CXXMethodDecl 0x55dd35fc95c0 <line:373:5, line:375:28> line:373:23 reset_read 'int (HandlerCall *&, Element *, const String &, ErrorHandler *)' static inline
| |-ParmVarDecl 0x55dd35fc9358 <col:34, col:48> col:48 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55dd35fc93d0 <line:374:6, col:15> col:15 e 'Element *'
| |-ParmVarDecl 0x55dd35fc9448 <col:18, col:32> col:32 hname 'const String &'
| `-ParmVarDecl 0x55dd35fc94c0 <line:375:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbcb0 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbc90 <col:27> 'int' 0
|-CXXMethodDecl 0x55dd35fc98b0 <line:386:5, line:387:53> line:386:23 reset_write 'int (HandlerCall *&, const String &, const Element *, ErrorHandler *)' static inline
| |-ParmVarDecl 0x55dd35fc9698 <col:35, col:49> col:49 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55dd35fc9710 <col:56, col:70> col:70 hdesc 'const String &'
| |-ParmVarDecl 0x55dd35fc9788 <line:387:7, col:22> col:22 context 'const Element *'
| `-ParmVarDecl 0x55dd35fc9800 <col:31, col:52> col:45 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbce8 <col:52> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbcc8 <col:52> 'int' 0
|-CXXMethodDecl 0x55dd35fc9c70 <line:399:5, line:402:29> line:399:23 reset_write 'int (HandlerCall *&, Element *, const String &, const String &, ErrorHandler *)' static inline
| |-ParmVarDecl 0x55dd35fc9988 <col:35, col:49> col:49 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x55dd35fc9a00 <line:400:7, col:16> col:16 e 'Element *'
| |-ParmVarDecl 0x55dd35fc9a78 <col:19, col:33> col:33 hname 'const String &'
| |-ParmVarDecl 0x55dd35fc9af0 <line:401:7, col:36> col:21 value 'const String &' cinit
| | `-ExprWithCleanups 0x55dd35fcbd98 <col:29, col:36> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55dd35fcbd80 <col:29, col:36> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55dd35fcbd68 <col:29, col:36> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55dd35fcbd48 <col:29, col:36> 'String' (CXXTemporary 0x55dd35fcbd48)
| |         `-CXXTemporaryObjectExpr 0x55dd35fcbd10 <col:29, col:36> 'String' 'void ()'
| `-ParmVarDecl 0x55dd35fc9b68 <line:402:7, col:28> col:21 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55dd35fcbdd0 <col:28> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55dd35fcbdb0 <col:28> 'int' 0
|-CXXMethodDecl 0x55dd35fc9d58 <line:409:5, line:411:5> line:409:14 used element 'Element *() const'
| `-CompoundStmt 0x55dd35fcc888 <col:30, line:411:5>
|   `-ReturnStmt 0x55dd35fcc878 <line:410:2, col:9>
|     `-ImplicitCastExpr 0x55dd35fcc860 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55dd35fcc830 <col:9> 'Element *const' lvalue ->_e 0x55dd35fca9f8
|         `-CXXThisExpr 0x55dd35fcc820 <col:9> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x55dd35fc9e48 <line:416:5, line:418:5> line:416:20 used handler 'const Handler *() const'
| `-CompoundStmt 0x55dd35fcc908 <col:36, line:418:5>
|   `-ReturnStmt 0x55dd35fcc8f8 <line:417:2, col:9>
|     `-ImplicitCastExpr 0x55dd35fcc8e0 <col:9> 'const Handler *' <LValueToRValue>
|       `-MemberExpr 0x55dd35fcc8b0 <col:9> 'const Handler *const' lvalue ->_h 0x55dd35fcaa58
|         `-CXXThisExpr 0x55dd35fcc8a0 <col:9> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x55dd35fc9f08 <line:423:5, line:425:5> line:423:19 value 'const String &() const'
| `-CompoundStmt 0x55dd35fccad0 <col:33, line:425:5>
|   `-ReturnStmt 0x55dd35fccac0 <line:424:2, col:53>
|     `-ConditionalOperator 0x55dd35fcca90 <col:9, col:53> 'const String' lvalue
|       |-CXXMemberCallExpr 0x55dd35fcc960 <col:9, col:21> 'bool'
|       | `-MemberExpr 0x55dd35fcc930 <col:9> '<bound member function type>' ->initialized 0x55dd35fc7fa8
|       |   `-CXXThisExpr 0x55dd35fcc920 <col:9> 'const HandlerCall *' implicit this
|       |-MemberExpr 0x55dd35fcc990 <col:25> 'const String' lvalue ->_value 0x55dd35fcaab8
|       | `-CXXThisExpr 0x55dd35fcc980 <col:25> 'const HandlerCall *' implicit this
|       `-CallExpr 0x55dd35fcca70 <col:34, col:53> 'const String' lvalue
|         `-ImplicitCastExpr 0x55dd35fcca58 <col:34, col:42> 'const String &(*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x55dd35fcc9f8 <col:34, col:42> 'const String &()' lvalue CXXMethod 0x55dd35c38678 'make_empty' 'const String &()'
|-CXXMethodDecl 0x55dd35fca048 <line:431:5, line:434:5> line:431:10 set_value 'void (const String &)'
| |-ParmVarDecl 0x55dd35fc9fb8 <col:20, col:34> col:34 used value 'const String &'
| `-CompoundStmt 0x55dd35fccc48 <col:41, line:434:5>
|   `-IfStmt 0x55dd35fccc30 <line:432:2, line:433:15>
|     |-CXXMemberCallExpr 0x55dd35fccb28 <line:432:6, col:18> 'bool'
|     | `-MemberExpr 0x55dd35fccaf8 <col:6> '<bound member function type>' ->initialized 0x55dd35fc7fa8
|     |   `-ImplicitCastExpr 0x55dd35fccb48 <col:6> 'const HandlerCall *' <NoOp>
|     |     `-CXXThisExpr 0x55dd35fccae8 <col:6> 'HandlerCall *' implicit this
|     `-CXXOperatorCallExpr 0x55dd35fccbf8 <line:433:6, col:15> 'String' lvalue
|       |-ImplicitCastExpr 0x55dd35fccbe0 <col:13> 'String &(*)(const String &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35fccbc0 <col:13> 'String &(const String &)' lvalue CXXMethod 0x55dd35c435c0 'operator=' 'String &(const String &)'
|       |-MemberExpr 0x55dd35fccb70 <col:6> 'String' lvalue ->_value 0x55dd35fcaab8
|       | `-CXXThisExpr 0x55dd35fccb60 <col:6> 'HandlerCall *' implicit this
|       `-DeclRefExpr 0x55dd35fccba0 <col:15> 'const String' lvalue ParmVar 0x55dd35fc9fb8 'value' 'const String &'
|-CXXMethodDecl 0x55dd35fca110 <line:439:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55dd35fca1d0 <line:445:5, line:449:5> line:445:10 clear 'void ()'
| `-CompoundStmt 0x55dd35fccf40 <col:18, line:449:5>
|   |-BinaryOperator 0x55dd35fcccd8 <line:446:2, col:7> 'Element *' lvalue '='
|   | |-MemberExpr 0x55dd35fccc70 <col:2> 'Element *' lvalue ->_e 0x55dd35fca9f8
|   | | `-CXXThisExpr 0x55dd35fccc60 <col:2> 'HandlerCall *' implicit this
|   | `-ImplicitCastExpr 0x55dd35fcccc0 <col:7> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55dd35fccca0 <col:7> 'int' 0
|   |-BinaryOperator 0x55dd35fccdd8 <line:447:2, col:30> 'const Handler *' lvalue '='
|   | |-MemberExpr 0x55dd35fccd08 <col:2> 'const Handler *' lvalue ->_h 0x55dd35fcaa58
|   | | `-CXXThisExpr 0x55dd35fcccf8 <col:2> 'HandlerCall *' implicit this
|   | `-CallExpr 0x55dd35fccdb8 <col:7, col:30> 'const Handler *'
|   |   `-ImplicitCastExpr 0x55dd35fccda0 <col:7, col:16> 'const Handler *(*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55dd35fccd70 <col:7, col:16> 'const Handler *()' lvalue CXXMethod 0x55dd35e51d48 'blank_handler' 'const Handler *()'
|   `-ExprWithCleanups 0x55dd35fccf28 <line:448:2, col:18> 'String' lvalue
|     `-CXXOperatorCallExpr 0x55dd35fccef0 <col:2, col:18> 'String' lvalue
|       |-ImplicitCastExpr 0x55dd35fcced8 <col:9> 'String &(*)(String &&)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd35fcceb8 <col:9> 'String &(String &&)' lvalue CXXMethod 0x55dd35c43cc8 'operator=' 'String &(String &&)'
|       |-MemberExpr 0x55dd35fcce08 <col:2> 'String' lvalue ->_value 0x55dd35fcaab8
|       | `-CXXThisExpr 0x55dd35fccdf8 <col:2> 'HandlerCall *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd35fccea0 <col:11, col:18> 'String' xvalue
|         `-CXXBindTemporaryExpr 0x55dd35fcce80 <col:11, col:18> 'String' (CXXTemporary 0x55dd35fcce80)
|           `-CXXTemporaryObjectExpr 0x55dd35fcce48 <col:11, col:18> 'String' 'void ()'
|-EnumDecl 0x55dd35fca270 <line:453:5, line:458:5> line:453:5
| |-EnumConstantDecl 0x55dd35fca370 <line:454:9, col:22> col:9 CHECK_READ 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca8d0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca350 <col:22> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x55dd35fca330 <col:22> 'HandlerCall::Flags' EnumConstant 0x55dd35fc7180 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55dd35fca400 <col:30, col:40> col:30 OP_READ 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca8e8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca3e0 <col:40> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x55dd35fca3c0 <col:40> 'HandlerCall::Flags' EnumConstant 0x55dd35fc7180 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55dd35fca490 <col:48, col:57> col:48 h_read 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca900 <col:57> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca470 <col:57> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x55dd35fca450 <col:57> 'HandlerCall::Flags' EnumConstant 0x55dd35fc7180 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55dd35fca520 <line:455:9, col:23> col:9 CHECK_WRITE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca918 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca500 <col:23> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x55dd35fca4e0 <col:23> 'HandlerCall::Flags' EnumConstant 0x55dd35fc7330 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55dd35fca5b0 <col:32, col:43> col:32 OP_WRITE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca930 <col:43> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca590 <col:43> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x55dd35fca570 <col:43> 'HandlerCall::Flags' EnumConstant 0x55dd35fc7330 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55dd35fca640 <col:52, col:62> col:52 h_write 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca948 <col:62> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca620 <col:62> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x55dd35fca600 <col:62> 'HandlerCall::Flags' EnumConstant 0x55dd35fc7330 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55dd35fca6d0 <line:456:9, col:25> col:9 PREINITIALIZE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca960 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca6b0 <col:25> 'HandlerCall::Flags' Int: 4
| |     `-DeclRefExpr 0x55dd35fca690 <col:25> 'HandlerCall::Flags' EnumConstant 0x55dd35fc73c0 'f_preinitialize' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55dd35fca760 <col:42, col:60> col:42 h_preinitialize 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca978 <col:60> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca740 <col:60> 'HandlerCall::Flags' Int: 4
| |     `-DeclRefExpr 0x55dd35fca720 <col:60> 'HandlerCall::Flags' EnumConstant 0x55dd35fc73c0 'f_preinitialize' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x55dd35fca7f0 <line:457:9, col:25> col:9 UNQUOTE_PARAM 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x55dd35fca990 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35fca7d0 <col:25> 'HandlerCall::Flags' Int: 8
| |     `-DeclRefExpr 0x55dd35fca7b0 <col:25> 'HandlerCall::Flags' EnumConstant 0x55dd35fc7450 'f_unquote_param' 'HandlerCall::Flags'
| `-EnumConstantDecl 0x55dd35fca880 <col:42, col:60> col:42 h_unquote_param 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
|   `-ImplicitCastExpr 0x55dd35fca9a8 <col:60> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35fca860 <col:60> 'HandlerCall::Flags' Int: 8
|       `-DeclRefExpr 0x55dd35fca840 <col:60> 'HandlerCall::Flags' EnumConstant 0x55dd35fc7450 'f_unquote_param' 'HandlerCall::Flags'
|-AccessSpecDecl 0x55dd35fca9c0 <line:461:3, col:10> col:3 private
|-FieldDecl 0x55dd35fca9f8 <line:463:5, col:14> col:14 referenced _e 'Element *'
|-FieldDecl 0x55dd35fcaa58 <line:464:5, col:20> col:20 referenced _h 'const Handler *'
|-FieldDecl 0x55dd35fcaab8 <line:465:5, col:12> col:12 referenced _value 'String'
|-CXXMethodDecl 0x55dd35fcad00 <line:467:5, col:49> col:9 parse 'int (int, Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35fcab20 <col:15, col:19> col:19 flags 'int'
| |-ParmVarDecl 0x55dd35fcab98 <col:26, col:33> col:34 'Element *'
| `-ParmVarDecl 0x55dd35fcac10 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55dd35fcb0c0 <line:468:5, col:80> col:9 assign 'int (Element *, const String &, const String &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55dd35fcadc8 <col:16, col:23> col:24 'Element *'
| |-ParmVarDecl 0x55dd35fcae40 <col:26, col:38> col:39 'const String &'
| |-ParmVarDecl 0x55dd35fcaeb8 <col:41, col:53> col:54 'const String &'
| |-ParmVarDecl 0x55dd35fcaf38 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55dd35fcafb0 <col:67, col:79> col:80 'ErrorHandler *'
|-CXXConstructorDecl 0x55dd35fcb1b8 <line:143:7> col:7 implicit HandlerCall 'void (const HandlerCall &)' inline default noexcept-unevaluated 0x55dd35fcb1b8
| `-ParmVarDecl 0x55dd35fcb2c8 <col:7> col:7 'const HandlerCall &'
|-CXXConstructorDecl 0x55dd35fcb368 <col:7> col:7 implicit HandlerCall 'void (HandlerCall &&)' inline default noexcept-unevaluated 0x55dd35fcb368
| `-ParmVarDecl 0x55dd35fcb478 <col:7> col:7 'HandlerCall &&'
|-CXXMethodDecl 0x55dd35fcb518 <col:7> col:7 implicit operator= 'HandlerCall &(const HandlerCall &)' inline default noexcept-unevaluated 0x55dd35fcb518
| `-ParmVarDecl 0x55dd35fcb628 <col:7> col:7 'const HandlerCall &'
|-CXXMethodDecl 0x55dd35fcb698 <col:7> col:7 implicit operator= 'HandlerCall &(HandlerCall &&)' inline default noexcept-unevaluated 0x55dd35fcb698
| `-ParmVarDecl 0x55dd35fcb7a8 <col:7> col:7 'HandlerCall &&'
`-CXXDestructorDecl 0x55dd35fcb830 <col:7> col:7 implicit used ~HandlerCall 'void () noexcept' inline default
  `-CompoundStmt 0x55dd35ff91c8 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HandlerCall = type { %class.Element*, %class.Handler*, %class.String }
  NonVirtualBaseLLVMType:%class.HandlerCall = type { %class.Element*, %class.Handler*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e30a38 prev 0x55dd35e25c40 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35e30b30 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55dd35e30c20 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55dd35e30d48 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55dd35e30ec8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55dd35e31048 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55dd35e311c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55dd35e41ff8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd35e42868 <col:11>
|-CXXDestructorDecl 0x55dd35e420d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55dd35e42208 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55dd35e42208
| `-ParmVarDecl 0x55dd35e42318 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55dd35e423b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55dd35e423b8
| `-ParmVarDecl 0x55dd35e424c8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55dd35e45288 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd35e45398 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55dd35e45618 <col:11>
|   `-ReturnStmt 0x55dd35e45608 <col:11>
|     `-UnaryOperator 0x55dd35e455f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd35e455e0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55dd35e45408 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55dd35e45408
  `-ParmVarDecl 0x55dd35e45518 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e31230 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35e31348 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55dd35e313e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55dd35e31450 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55dd35e314b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55dd35e31520 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55dd35e31580 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55dd35e31640 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55dd35e316a0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55dd35e31700 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55dd35e41f08 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55dd35e313e8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55dd35e42878 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55dd35e428d0 <col:12>
|-CXXConstructorDecl 0x55dd35e42538 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55dd35e42538
| `-ParmVarDecl 0x55dd35e42648 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55dd35e426e8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55dd35e426e8
| `-ParmVarDecl 0x55dd35e427f8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55dd35e44970 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35e1f350 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd35e1f468 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55dd35e1f4f8 <col:16, col:22> col:16 public
|-EnumDecl 0x55dd35e1f520 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55dd35e1f620 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55dd35e1f700 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e1f600 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55dd35e1f5e0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55dd35e1f6b0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55dd35e1f718 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e1f690 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55dd35e1f670 <col:22> 'int' 64
|-CXXMethodDecl 0x55dd35e1fa58 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55dd35e1f740 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd35e1f7c0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55dd35e1f838 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd35e1f8b0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd35e1fb18 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e1fd18 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55dd35e1fb90 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55dd35e1fc08 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd35e1fdc8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e1ff28 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55dd35e1fe38 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd35e1ffd0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55dd35e20330 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55dd35e202c0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55dd35e20260 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55dd35e20220 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55dd358f42d0 'void'
|       |-PointerType 0x55dd35b9f6f0 'unsigned char *'
|       | `-BuiltinType 0x55dd358f43d0 'unsigned char'
|       |-TypedefType 0x55dd3599bc60 'size_t' sugar
|       | |-Typedef 0x55dd35964b20 'size_t'
|       | `-BuiltinType 0x55dd358f4430 'unsigned long'
|       `-PointerType 0x55dd358f4ad0 'void *'
|         `-BuiltinType 0x55dd358f42d0 'void'
|-CXXMethodDecl 0x55dd35e207a8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55dd35e203a0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55dd35e20418 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd35e204b0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55dd35e20530 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55dd35e3aea0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55dd35e3ae88 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55dd35e3ae50 <col:58> 'int' 0
| |-ParmVarDecl 0x55dd35e205b0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55dd35e3aec8 <col:76> 'int' 0
| |-ParmVarDecl 0x55dd35e20630 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55dd35e3aee8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55dd35e20878 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e208f8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55dd35e209b8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55dd35e20a58 <col:20>
| `-OptimizeNoneAttr 0x55dd35e20ab0 <col:30>
|-CXXMethodDecl 0x55dd35e20b28 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55dd35e20bc8 <col:20>
| `-OptimizeNoneAttr 0x55dd35e20c20 <col:30>
|-CXXMethodDecl 0x55dd35e20c98 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55dd35e20d38 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e20de8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55dd35e20e88 <col:20>
| |-OptimizeNoneAttr 0x55dd35e20ee0 <col:30>
| `-WarnUnusedResultAttr 0x55dd35e20f08 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e20f60 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55dd35e21000 <col:20>
| `-OptimizeNoneAttr 0x55dd35e21058 <col:30>
|-CXXMethodDecl 0x55dd35e210a8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55dd35e21148 <col:20>
| `-OptimizeNoneAttr 0x55dd35e211a0 <col:30>
|-CXXMethodDecl 0x55dd35e211e8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55dd35e21288 <col:20>
| `-OptimizeNoneAttr 0x55dd35e212e0 <col:30>
|-CXXMethodDecl 0x55dd35e21328 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35e213e8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35e214b0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55dd35e21578 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55dd35e21638 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35e21758 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55dd35e3afb0 <col:54, line:99:5>
|   `-ReturnStmt 0x55dd35e3afa0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55dd35e3af88 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55dd35e3af58 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55dd35e31a38
|         `-CXXThisExpr 0x55dd35e3af48 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55dd35e218f8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55dd35e21808 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55dd35e3b060 <col:67, line:103:5>
|   `-BinaryOperator 0x55dd35e3b040 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55dd35e3afd8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55dd35e31a38
|     | `-CXXThisExpr 0x55dd35e3afc8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55dd35e3b028 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e3b008 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55dd35e21808 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55dd35e219f0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55dd35e3b0e0 <col:33, line:107:5>
|   `-ReturnStmt 0x55dd35e3b0d0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55dd35e3b0b8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55dd35e3b088 <col:16> 'void *' lvalue ->_destructor_argument 0x55dd35e31aa0
|         `-CXXThisExpr 0x55dd35e3b078 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55dd35e21ab0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55dd35e3b710 <col:25, line:113:5>
|   |-ParenExpr 0x55dd35e3b458 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55dd35e3b428 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3b198 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55dd35e3b170 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55dd35e3b138 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55dd35e3b108 <col:24> '<bound member function type>' ->shared 0x55dd35e20b28
|   |   |       `-ImplicitCastExpr 0x55dd35e3b158 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55dd35e3b0f8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55dd35e3b1f8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3b1d8 <col:42> 'int' 0
|   |   `-CallExpr 0x55dd35e3b388 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3b370 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3b350 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3b3c8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3b268 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55dd35e3b3e0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3b290 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3b3f8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3b2c8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55dd35e3b410 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3b338 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3b320 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3b2e8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55dd35e3b658 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55dd35e3b488 <col:2> 'unsigned char *' lvalue ->_head 0x55dd35e31840
|   | | `-CXXThisExpr 0x55dd35e3b478 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55dd35e3b640 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55dd35e3b620 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55dd35e3b4c8 <col:10> 'unsigned char *' lvalue ->_data 0x55dd35e318a8
|   |     | `-CXXThisExpr 0x55dd35e3b4b8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55dd35e3b608 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55dd35e3b5e8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55dd35e3b508 <col:18> 'unsigned char *' lvalue ->_tail 0x55dd35e31910
|   |         | `-CXXThisExpr 0x55dd35e3b4f8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55dd35e3b5d0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55dd35e3b5b0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55dd35e3b548 <col:26> 'unsigned char *' lvalue ->_end 0x55dd35e31978
|   |             | `-CXXThisExpr 0x55dd35e3b538 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55dd35e3b598 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55dd35e3b578 <col:33> 'int' 0
|   `-BinaryOperator 0x55dd35e3b6f0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55dd35e3b688 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55dd35e31a38
|     | `-CXXThisExpr 0x55dd35e3b678 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55dd35e3b6d8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55dd35e3b6b8 <col:16> 'int' 0
|-CXXMethodDecl 0x55dd35e21bf0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55dd35e21b60 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd35e21c98 <col:20>
| |-OptimizeNoneAttr 0x55dd35e21cf0 <col:30>
| `-WarnUnusedResultAttr 0x55dd35e21d18 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e21de8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55dd35e21d58 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd35e21e90 <col:20>
| |-OptimizeNoneAttr 0x55dd35e21ee8 <col:30>
| `-WarnUnusedResultAttr 0x55dd35e21f10 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e22048 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55dd35e21f50 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd35e220f0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e221f0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55dd35e22160 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd35e22298 <col:20>
| `-OptimizeNoneAttr 0x55dd35e222f0 <col:30>
|-CXXMethodDecl 0x55dd35e223b8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55dd35e22328 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd35e22460 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e22560 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55dd35e224d0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd35e22608 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e22708 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55dd35e22678 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd35e227b0 <col:20>
| `-OptimizeNoneAttr 0x55dd35e22808 <col:30>
|-CXXMethodDecl 0x55dd35e22998 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55dd35e22848 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55dd35e228c0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55dd35e3af08 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55dd35e22a48 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55dd35e22c48 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55dd35e22ac0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55dd35e22b38 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e22e58 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55dd35e22d08 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd35e22d80 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e23068 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55dd35e22f18 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55dd35e22f98 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55dd35e3af18 <col:39> 'int' 0
|-CXXMethodDecl 0x55dd35e23138 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55dd35e23200 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55dd35e232c8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55dd35e23388 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35e23450 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55dd35e23598 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55dd35e23508 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55dd35e23768 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55dd35e23658 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55dd35e236d0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e23838 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55dd35e238f8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55dd35e23998 <col:20>
| `-OptimizeNoneAttr 0x55dd35e239f0 <col:30>
|-CXXMethodDecl 0x55dd35e23a40 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55dd35e23ae0 <col:20>
| `-OptimizeNoneAttr 0x55dd35e23b38 <col:30>
|-CXXMethodDecl 0x55dd35e23b88 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55dd35e23c48 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35e23d10 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55dd35e23db0 <col:20>
| `-OptimizeNoneAttr 0x55dd35e23e08 <col:30>
|-CXXMethodDecl 0x55dd35e23f58 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55dd35e23e48 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55dd35e23ec0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e240a8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55dd35e24018 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e24180 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55dd35e24240 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55dd35e242e0 <col:20>
| `-OptimizeNoneAttr 0x55dd35e24338 <col:30>
|-CXXMethodDecl 0x55dd35e24388 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55dd35e24428 <col:20>
| `-OptimizeNoneAttr 0x55dd35e24480 <col:30>
|-CXXMethodDecl 0x55dd35e244d0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55dd35e24598 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55dd35e24638 <col:20>
| `-OptimizeNoneAttr 0x55dd35e24690 <col:30>
|-CXXMethodDecl 0x55dd35e246d8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55dd35e247f8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55dd35e24968 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55dd35e248a8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55dd35e24a58 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55dd35e24af8 <col:20>
| `-OptimizeNoneAttr 0x55dd35e24b50 <col:30>
|-CXXMethodDecl 0x55dd35e24ba0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55dd35e24c60 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd35e24e98 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55dd35e24d10 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55dd35e24d88 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd35e24f48 <col:20>
| `-OptimizeNoneAttr 0x55dd35e24fa0 <col:30>
|-CXXMethodDecl 0x55dd35e25048 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55dd35e250e8 <col:20>
| `-OptimizeNoneAttr 0x55dd35e25140 <col:30>
|-CXXMethodDecl 0x55dd35e25190 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55dd35e25230 <col:20>
| `-OptimizeNoneAttr 0x55dd35e25288 <col:30>
|-CXXMethodDecl 0x55dd35e252d0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55dd35e25370 <col:20>
| `-OptimizeNoneAttr 0x55dd35e253c8 <col:30>
|-CXXMethodDecl 0x55dd35e254c8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55dd35e25400 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55dd35e25570 <col:20>
| `-OptimizeNoneAttr 0x55dd35e255c8 <col:30>
|-CXXMethodDecl 0x55dd35e25788 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55dd35e25600 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55dd35e25678 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd35e25838 <col:20>
| `-OptimizeNoneAttr 0x55dd35e25890 <col:30>
|-CXXMethodDecl 0x55dd35e25938 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55dd35e25a58 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55dd35e25b78 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55dd35e25c18 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd35e25c40 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55dd35e25d68 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55dd35e25e08 <col:20>
| `-OptimizeNoneAttr 0x55dd35e25e60 <col:30>
|-CXXMethodDecl 0x55dd35e25f08 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55dd35e25fa8 <col:20>
| `-OptimizeNoneAttr 0x55dd35e26000 <col:30>
|-AccessSpecDecl 0x55dd35e26028 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55dd35e26050 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55dd35e26150 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55dd35e261a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e26130 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55dd35e26110 <col:14> 'int' 48
|-CXXMethodDecl 0x55dd35e26208 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55dd35e262a8 <col:20>
| `-OptimizeNoneAttr 0x55dd35e26300 <col:30>
|-CXXMethodDecl 0x55dd35e26378 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55dd35e26418 <col:20>
| `-OptimizeNoneAttr 0x55dd35e26470 <col:30>
|-CXXMethodDecl 0x55dd35e26538 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55dd35e264a8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55dd35e266d8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55dd35e26878 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55dd35e26788 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55dd35e26920 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55dd35e26a20 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd35e26dd0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e26a00 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd35e269e0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55dd35e26ab0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd35e26de8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e26a90 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd35e26a70 <col:14> 'int' 1
| |-EnumConstantDecl 0x55dd35e26b40 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd35e26e00 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e26b20 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd35e26b00 <col:14> 'int' 2
| |-EnumConstantDecl 0x55dd35e26bd0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd35e26e18 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e26bb0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55dd35e26b90 <col:14> 'int' 3
| |-EnumConstantDecl 0x55dd35e26c60 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd35e26e30 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e26c40 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd35e26c20 <col:13> 'int' 4
| |-EnumConstantDecl 0x55dd35e26cf0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd35e26e48 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e26cd0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55dd35e26cb0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55dd35e26d80 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55dd35e26e60 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e26d60 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55dd35e26d40 <col:14> 'int' 6
|-CXXMethodDecl 0x55dd35e26ec8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55dd35e26f68 <col:20>
| `-OptimizeNoneAttr 0x55dd35e26fc0 <col:30>
|-CXXMethodDecl 0x55dd35e270b8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55dd35e26ff8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55dd35e27160 <col:20>
| `-OptimizeNoneAttr 0x55dd35e271b8 <col:30>
|-CXXMethodDecl 0x55dd35e27228 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55dd35e27350 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55dd35e274c8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55dd35e27400 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55dd35e27590 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55dd35e27658 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55dd35e27798 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55dd35e27708 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55dd35e27840 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55dd35e27940 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55dd35e27b40 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e27920 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd35e27900 <col:23> 'int' 0
| |-EnumConstantDecl 0x55dd35e279d0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55dd35e27b58 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e279b0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd35e27990 <col:45> 'int' 4
| |-EnumConstantDecl 0x55dd35e27a60 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55dd35e27b70 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e27a40 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd35e27a20 <col:24> 'int' 0
| `-EnumConstantDecl 0x55dd35e27af0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55dd35e27b88 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e27ad0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55dd35e27ab0 <col:47> 'int' 16
|-CXXMethodDecl 0x55dd35e27be8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55dd35e27d58 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55dd35e27c98 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55dd35e27e00 <col:20>
| `-OptimizeNoneAttr 0x55dd35e27e58 <col:30>
|-CXXMethodDecl 0x55dd35e27ea8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55dd35e3b830 <col:18, col:36>
|   `-ReturnStmt 0x55dd35e3b820 <col:20, col:33>
|     `-ImplicitCastExpr 0x55dd35e3b808 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55dd35e3b7e8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55dd35e3b7b8 <col:27> '<bound member function type>' ->xanno 0x55dd35e25f08
|           `-CXXThisExpr 0x55dd35e3b7a8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55dd35e27fa0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55dd35e3b940 <col:30, col:48>
|   `-ReturnStmt 0x55dd35e3b930 <col:32, col:45>
|     `-ImplicitCastExpr 0x55dd35e3b918 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55dd35e3b8f8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55dd35e3b8c8 <col:39> '<bound member function type>' ->xanno 0x55dd35e25d68
|           `-CXXThisExpr 0x55dd35e3b8b8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55dd35e28088 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55dd35e3bad8 <col:24, col:50>
|   `-ReturnStmt 0x55dd35e3bac8 <col:26, col:47>
|     `-UnaryOperator 0x55dd35e3bab0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55dd35e3ba90 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55dd35e3ba78 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd35e3ba28 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55dd35e30d48
|         |   `-CXXMemberCallExpr 0x55dd35e3ba08 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55dd35e3b9d8 <col:34> '<bound member function type>' ->xanno 0x55dd35e25f08
|         |       `-CXXThisExpr 0x55dd35e3b9c8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55dd35e3ba58 <col:46> 'int' 0
|-CXXMethodDecl 0x55dd35e28190 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55dd35e3bca8 <col:36, col:62>
|   `-ReturnStmt 0x55dd35e3bc98 <col:38, col:59>
|     `-UnaryOperator 0x55dd35e3bc80 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55dd35e3bc60 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55dd35e3bc48 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd35e3bbc0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55dd35e30d48
|         |   `-CXXMemberCallExpr 0x55dd35e3bba0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55dd35e3bb70 <col:46> '<bound member function type>' ->xanno 0x55dd35e25d68
|         |       `-CXXThisExpr 0x55dd35e3bb60 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55dd35e3bbf0 <col:58> 'int' 0
|-CXXMethodDecl 0x55dd35e282a8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55dd35e3be40 <col:26, col:53>
|   `-ReturnStmt 0x55dd35e3be30 <col:28, col:50>
|     `-UnaryOperator 0x55dd35e3be18 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55dd35e3bdf8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55dd35e3bde0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd35e3bd90 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55dd35e31048
|         |   `-CXXMemberCallExpr 0x55dd35e3bd70 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55dd35e3bd40 <col:36> '<bound member function type>' ->xanno 0x55dd35e25f08
|         |       `-CXXThisExpr 0x55dd35e3bd30 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55dd35e3bdc0 <col:49> 'int' 0
|-CXXMethodDecl 0x55dd35e283c8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55dd35e3c018 <col:38, col:65>
|   `-ReturnStmt 0x55dd35e3c008 <col:40, col:62>
|     `-UnaryOperator 0x55dd35e3bff0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55dd35e3bfd0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55dd35e3bfb8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd35e3bf28 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55dd35e31048
|         |   `-CXXMemberCallExpr 0x55dd35e3bf08 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55dd35e3bed8 <col:48> '<bound member function type>' ->xanno 0x55dd35e25d68
|         |       `-CXXThisExpr 0x55dd35e3bec8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55dd35e3bf58 <col:61> 'int' 0
|-CXXMethodDecl 0x55dd35e28578 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55dd35e28480 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55dd35e3c6e8 <col:34, line:463:5>
|   |-ParenExpr 0x55dd35e3c530 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55dd35e3c500 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3c168 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3c138 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3c088 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3c070 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3c030 <col:23> 'int' lvalue ParmVar 0x55dd35e28480 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3c050 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3c118 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3c0e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3c0a8 <col:33> 'int' lvalue ParmVar 0x55dd35e28480 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55dd35e3c100 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55dd35e3c0c8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55dd35e3c1c8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3c1a8 <col:56> 'int' 0
|   |   `-CallExpr 0x55dd35e3c460 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3c448 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3c428 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3c4a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3c2b8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55dd35e3c4b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3c2e8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3c4d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3c320 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55dd35e3c4e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3c410 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3c3f8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3c3b8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55dd35e3c6d8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55dd35e3c6c0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55dd35e3c6a0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55dd35e3c670 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd35e3c620 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55dd35e30d48
|         |   `-CXXMemberCallExpr 0x55dd35e3c600 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55dd35e3c5d0 <col:9> '<bound member function type>' ->xanno 0x55dd35e25d68
|         |       `-CXXThisExpr 0x55dd35e3c5c0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55dd35e3c688 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55dd35e3c650 <col:21> 'int' lvalue ParmVar 0x55dd35e28480 'i' 'int'
|-CXXMethodDecl 0x55dd35e287c8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55dd35e28638 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55dd35e286b0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55dd35e3cd78 <col:40, line:472:5>
|   |-ParenExpr 0x55dd35e3cb90 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55dd35e3cb60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3c840 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3c810 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3c760 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3c748 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3c708 <col:23> 'int' lvalue ParmVar 0x55dd35e28638 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3c728 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3c7f0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3c7c0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3c780 <col:33> 'int' lvalue ParmVar 0x55dd35e28638 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55dd35e3c7d8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55dd35e3c7a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55dd35e3c8a0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3c880 <col:56> 'int' 0
|   |   `-CallExpr 0x55dd35e3cac0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3caa8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3ca88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3cb00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3c910 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55dd35e3cb18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3c940 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3cb30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3c978 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55dd35e3cb48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3ca70 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3ca58 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3ca18 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55dd35e3cd58 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55dd35e3cd00 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55dd35e3ccd0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55dd35e3cc80 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55dd35e30d48
|     | |   `-CXXMemberCallExpr 0x55dd35e3cc60 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55dd35e3cc30 <col:2> '<bound member function type>' ->xanno 0x55dd35e25f08
|     | |       `-CXXThisExpr 0x55dd35e3cc20 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55dd35e3cce8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55dd35e3ccb0 <col:14> 'int' lvalue ParmVar 0x55dd35e28638 'i' 'int'
|     `-ImplicitCastExpr 0x55dd35e3cd40 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e3cd20 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55dd35e286b0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55dd35e28988 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55dd35e28890 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55dd35e3d4f8 <col:36, line:485:5>
|   |-ParenExpr 0x55dd35e3d260 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e3d230 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3cf10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3cee0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3cdf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3cdd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3cd98 <col:23> 'int' lvalue ParmVar 0x55dd35e28890 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3cdb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3cec0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3cea8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3ce10 <col:33> 'int' lvalue ParmVar 0x55dd35e28890 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e3ce88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e3ce70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e3ce30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e3ce50 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55dd35e3cf70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3cf50 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e3d190 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3d178 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3d158 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3d1d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3cfe0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55dd35e3d1e8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3d018 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3d200 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3d050 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55dd35e3d218 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3d140 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3d128 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3d0e8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55dd35e3d4e8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55dd35e3d4d0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55dd35e3d4b8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd35e3d488 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55dd35e3d428 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd35e3d3f8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd35e3d370 <col:61, col:70> 'char const[48]' lvalue ->c 0x55dd35e30c20
|             |   `-CXXMemberCallExpr 0x55dd35e3d350 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd35e3d320 <col:61> '<bound member function type>' ->xanno 0x55dd35e25d68
|             |       `-CXXThisExpr 0x55dd35e3d310 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd35e3d410 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd35e3d3a0 <col:74> 'int' lvalue ParmVar 0x55dd35e28890 'i' 'int'
|-CXXMethodDecl 0x55dd35e28bd8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55dd35e28a48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd35e28ac0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55dd35e3dc48 <col:42, line:500:5>
|   |-ParenExpr 0x55dd35e3d9e0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e3d9b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3d690 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3d660 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3d570 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3d558 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3d518 <col:23> 'int' lvalue ParmVar 0x55dd35e28a48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3d538 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3d640 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3d628 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3d590 <col:33> 'int' lvalue ParmVar 0x55dd35e28a48 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e3d608 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e3d5f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e3d5b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e3d5d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55dd35e3d6f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3d6d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e3d910 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3d8f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3d8d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3d950 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3d760 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55dd35e3d968 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3d798 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3d980 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3d7d0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55dd35e3d998 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3d8c0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3d8a8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3d868 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55dd35e3dc28 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55dd35e3dbd8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd35e3dba8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd35e3db50 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd35e3db20 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd35e3dad0 <col:48, col:57> 'char [48]' lvalue ->c 0x55dd35e30c20
|     |     |   `-CXXMemberCallExpr 0x55dd35e3dab0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd35e3da80 <col:48> '<bound member function type>' ->xanno 0x55dd35e25f08
|     |     |       `-CXXThisExpr 0x55dd35e3da70 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd35e3db38 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd35e3db00 <col:61> 'int' lvalue ParmVar 0x55dd35e28a48 'i' 'int'
|     `-ImplicitCastExpr 0x55dd35e3dc10 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e3dbf0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55dd35e28ac0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55dd35e28d98 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55dd35e28ca0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55dd35e3e3a8 <col:35, line:513:5>
|   |-ParenExpr 0x55dd35e3e0b8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e3e088 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3dde0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3ddb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3dcc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3dca8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3dc68 <col:23> 'int' lvalue ParmVar 0x55dd35e28ca0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3dc88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3dd90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3dd78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3dce0 <col:33> 'int' lvalue ParmVar 0x55dd35e28ca0 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e3dd58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e3dd40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e3dd00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e3dd20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55dd35e3de40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3de20 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e3dfe8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3dfd0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3dfb0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3e028 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3deb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55dd35e3e040 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3dee8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3e058 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3df20 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55dd35e3e070 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3df98 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3df80 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3df40 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55dd35e3e398 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55dd35e3e380 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55dd35e3e368 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd35e3e338 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55dd35e3e2b0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd35e3e280 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd35e3e230 <col:60, col:69> 'char const[48]' lvalue ->c 0x55dd35e30c20
|             |   `-CXXMemberCallExpr 0x55dd35e3e210 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd35e3e1e0 <col:60> '<bound member function type>' ->xanno 0x55dd35e25d68
|             |       `-CXXThisExpr 0x55dd35e3e1d0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd35e3e298 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd35e3e260 <col:73> 'int' lvalue ParmVar 0x55dd35e28ca0 'i' 'int'
|-CXXMethodDecl 0x55dd35e28fe8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55dd35e28e58 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd35e28ed0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55dd35e3eac8 <col:41, line:528:5>
|   |-ParenExpr 0x55dd35e3e850 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e3e820 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3e540 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3e510 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3e420 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3e408 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3e3c8 <col:23> 'int' lvalue ParmVar 0x55dd35e28e58 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3e3e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3e4f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3e4d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3e440 <col:33> 'int' lvalue ParmVar 0x55dd35e28e58 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e3e4b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e3e4a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e3e460 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e3e480 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55dd35e3e5a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3e580 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e3e780 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3e768 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3e748 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3e7c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3e610 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55dd35e3e7d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3e648 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3e7f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3e680 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55dd35e3e808 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3e730 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3e718 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3e6d8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55dd35e3eaa8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55dd35e3ea58 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd35e3ea28 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd35e3e9d0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd35e3e990 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd35e3e940 <col:47, col:56> 'char [48]' lvalue ->c 0x55dd35e30c20
|     |     |   `-CXXMemberCallExpr 0x55dd35e3e920 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd35e3e8f0 <col:47> '<bound member function type>' ->xanno 0x55dd35e25f08
|     |     |       `-CXXThisExpr 0x55dd35e3e8e0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd35e3e9a8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd35e3e970 <col:60> 'int' lvalue ParmVar 0x55dd35e28e58 'i' 'int'
|     `-ImplicitCastExpr 0x55dd35e3ea90 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e3ea70 <col:65> 'int16_t':'short' lvalue ParmVar 0x55dd35e28ed0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55dd35e291a8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55dd35e290b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55dd35e3f198 <col:36, line:541:5>
|   |-ParenExpr 0x55dd35e3ef38 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e3ef08 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3ec60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3ec30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3eb40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3eb28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3eae8 <col:23> 'int' lvalue ParmVar 0x55dd35e290b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3eb08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3ec10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3ebf8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3eb60 <col:33> 'int' lvalue ParmVar 0x55dd35e290b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e3ebd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e3ebc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e3eb80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e3eba0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55dd35e3ecc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3eca0 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e3ee68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3ee50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3ee30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3eea8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3ed30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55dd35e3eec0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3ed68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3eed8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3eda0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55dd35e3eef0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3ee18 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3ee00 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3edc0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55dd35e3f188 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55dd35e3f170 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55dd35e3f158 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd35e3f128 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55dd35e3f0d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd35e3f0a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd35e3f050 <col:61, col:70> 'char const[48]' lvalue ->c 0x55dd35e30c20
|             |   `-CXXMemberCallExpr 0x55dd35e3f030 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd35e3f000 <col:61> '<bound member function type>' ->xanno 0x55dd35e25d68
|             |       `-CXXThisExpr 0x55dd35e3eff0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd35e3f0b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd35e3f080 <col:74> 'int' lvalue ParmVar 0x55dd35e290b0 'i' 'int'
|-CXXMethodDecl 0x55dd35e29378 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55dd35e29268 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55dd35e292e0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd35e29428 <col:20>
| `-OptimizeNoneAttr 0x55dd35e29480 <col:30>
|-CXXMethodDecl 0x55dd35e295b8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55dd35e294c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55dd35e3f868 <col:35, line:562:5>
|   |-ParenExpr 0x55dd35e3f608 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e3f5d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3f330 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3f300 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3f210 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3f1f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3f1b8 <col:23> 'int' lvalue ParmVar 0x55dd35e294c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3f1d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3f2e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3f2c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3f230 <col:33> 'int' lvalue ParmVar 0x55dd35e294c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e3f2a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e3f290 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e3f250 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e3f270 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55dd35e3f390 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3f370 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e3f538 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3f520 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3f500 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3f578 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3f400 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55dd35e3f590 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3f438 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3f5a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3f470 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55dd35e3f5c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3f4e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3f4d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3f490 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55dd35e3f858 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55dd35e3f840 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55dd35e3f828 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd35e3f7f8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55dd35e3f7a0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd35e3f770 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd35e3f720 <col:60, col:69> 'char const[48]' lvalue ->c 0x55dd35e30c20
|             |   `-CXXMemberCallExpr 0x55dd35e3f700 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd35e3f6d0 <col:60> '<bound member function type>' ->xanno 0x55dd35e25d68
|             |       `-CXXThisExpr 0x55dd35e3f6c0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd35e3f788 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd35e3f750 <col:73> 'int' lvalue ParmVar 0x55dd35e294c0 'i' 'int'
|-CXXMethodDecl 0x55dd35e297c8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55dd35e29678 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd35e296f0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55dd35e3ff48 <col:41, line:577:5>
|   |-ParenExpr 0x55dd35e3fcd8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e3fca8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e3fa00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e3f9d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3f8e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3f8c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3f888 <col:23> 'int' lvalue ParmVar 0x55dd35e29678 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3f8a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e3f9b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e3f998 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3f900 <col:33> 'int' lvalue ParmVar 0x55dd35e29678 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e3f978 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e3f960 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e3f920 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e3f940 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55dd35e3fa60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e3fa40 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e3fc08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e3fbf0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e3fbd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e3fc48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3fad0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55dd35e3fc60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e3fb08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e3fc78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e3fb40 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55dd35e3fc90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e3fbb8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e3fba0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e3fb60 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55dd35e3ff28 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55dd35e3fed8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd35e3fea8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd35e3fe48 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd35e3fe18 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd35e3fdc8 <col:47, col:56> 'char [48]' lvalue ->c 0x55dd35e30c20
|     |     |   `-CXXMemberCallExpr 0x55dd35e3fda8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd35e3fd78 <col:47> '<bound member function type>' ->xanno 0x55dd35e25f08
|     |     |       `-CXXThisExpr 0x55dd35e3fd68 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd35e3fe30 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd35e3fdf8 <col:60> 'int' lvalue ParmVar 0x55dd35e29678 'i' 'int'
|     `-ImplicitCastExpr 0x55dd35e3ff10 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e3fef0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55dd35e296f0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55dd35e29988 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55dd35e29890 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55dd35e40678 <col:36, line:591:5>
|   |-ParenExpr 0x55dd35e403b8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e40388 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e400e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e400b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e3ffc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e3ffa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e3ff68 <col:23> 'int' lvalue ParmVar 0x55dd35e29890 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e3ff88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e40090 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e40078 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e3ffe0 <col:33> 'int' lvalue ParmVar 0x55dd35e29890 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e40058 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e40040 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e40000 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e40020 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55dd35e40140 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e40120 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e402e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e402d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e402b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e40328 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e401b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55dd35e40340 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e401e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e40358 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e40220 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55dd35e40370 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e40298 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e40280 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e40240 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55dd35e40668 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55dd35e40650 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55dd35e40638 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd35e40608 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55dd35e40580 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd35e40550 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd35e40500 <col:61, col:70> 'char const[48]' lvalue ->c 0x55dd35e30c20
|             |   `-CXXMemberCallExpr 0x55dd35e404e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd35e404b0 <col:61> '<bound member function type>' ->xanno 0x55dd35e25d68
|             |       `-CXXThisExpr 0x55dd35e404a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd35e40568 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd35e40530 <col:74> 'int' lvalue ParmVar 0x55dd35e29890 'i' 'int'
|-CXXMethodDecl 0x55dd35e29bd8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55dd35e29a48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd35e29ac0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55dd35e40d58 <col:42, line:606:5>
|   |-ParenExpr 0x55dd35e40ae8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd35e40ab8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e40810 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e407e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e406f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e406d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e40698 <col:23> 'int' lvalue ParmVar 0x55dd35e29a48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e406b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e407c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd35e407a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e40710 <col:33> 'int' lvalue ParmVar 0x55dd35e29a48 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e40788 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e40770 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e40730 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd35e40750 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55dd35e40870 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e40850 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd35e40a18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e40a00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e409e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e40a58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e408e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55dd35e40a70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e40918 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e40a88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e40950 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55dd35e40aa0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e409c8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e409b0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e40970 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55dd35e40d38 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55dd35e40ce8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd35e40cb8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd35e40c58 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd35e40c28 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd35e40bd8 <col:48, col:57> 'char [48]' lvalue ->c 0x55dd35e30c20
|     |     |   `-CXXMemberCallExpr 0x55dd35e40bb8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd35e40b88 <col:48> '<bound member function type>' ->xanno 0x55dd35e25f08
|     |     |       `-CXXThisExpr 0x55dd35e40b78 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd35e40c40 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd35e40c08 <col:61> 'int' lvalue ParmVar 0x55dd35e29a48 'i' 'int'
|     `-ImplicitCastExpr 0x55dd35e40d20 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55dd35e40d00 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55dd35e29ac0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55dd35e29d70 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55dd35e29ca0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55dd35e415c8 <col:33, line:620:5>
|   |-ParenExpr 0x55dd35e41340 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55dd35e41310 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e40f60 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e40f30 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e40dd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e40db8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e40d78 <col:23> 'int' lvalue ParmVar 0x55dd35e29ca0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e40d98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e40f10 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55dd35e40ef8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e40df0 <col:33> 'int' lvalue ParmVar 0x55dd35e29ca0 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e40ed8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e40ec0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e40e10 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55dd35e40e98 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55dd35e40e80 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55dd35e40e48 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55dd35e40fc0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e40fa0 <col:79> 'int' 0
|   |   `-CallExpr 0x55dd35e41270 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e41258 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e41238 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e412b0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e410a8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55dd35e412c8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e410f0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e412e0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e41128 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55dd35e412f8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e41220 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e41208 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e411c8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55dd35e415b8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55dd35e415a0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55dd35e41588 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd35e41558 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55dd35e414d0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd35e414a0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd35e41450 <col:67, col:76> 'char const[48]' lvalue ->c 0x55dd35e30c20
|             |   `-CXXMemberCallExpr 0x55dd35e41430 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd35e41400 <col:67> '<bound member function type>' ->xanno 0x55dd35e25d68
|             |       `-CXXThisExpr 0x55dd35e413f0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd35e414b8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd35e41480 <col:80> 'int' lvalue ParmVar 0x55dd35e29ca0 'i' 'int'
|-CXXMethodDecl 0x55dd35e29f88 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55dd35e29e30 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd35e29eb0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55dd35e41df0 <col:45, line:635:5>
|   |-ParenExpr 0x55dd35e41b38 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55dd35e41b08 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55dd35e417d0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd35e417a0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd35e41640 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd35e41628 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd35e415e8 <col:23> 'int' lvalue ParmVar 0x55dd35e29e30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd35e41608 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd35e41780 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55dd35e41768 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd35e41660 <col:33> 'int' lvalue ParmVar 0x55dd35e29e30 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd35e41748 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd35e41730 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd35e41680 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd35e26150 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55dd35e41708 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55dd35e416f0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55dd35e416b8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55dd35e41830 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd35e41810 <col:79> 'int' 0
|   |   `-CallExpr 0x55dd35e41a68 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55dd35e41a50 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd35e41a30 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd35992a70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd35e41aa8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e418a0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55dd35e41ac0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd35e418e8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd35e41ad8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd35e41920 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55dd35e41af0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd35e41a18 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd35e41a00 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd35e419b8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55dd35e41dd0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55dd35e41d38 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd35e41d08 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd35e41ca8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd35e41c78 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd35e41c28 <col:54, col:63> 'char [48]' lvalue ->c 0x55dd35e30c20
|     |     |   `-CXXMemberCallExpr 0x55dd35e41c08 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd35e41bd8 <col:54> '<bound member function type>' ->xanno 0x55dd35e25f08
|     |     |       `-CXXThisExpr 0x55dd35e41bc8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd35e41c90 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd35e41c58 <col:67> 'int' lvalue ParmVar 0x55dd35e29e30 'i' 'int'
|     `-CXXConstCastExpr 0x55dd35e41da0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55dd35e41d88 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55dd35e41d50 <col:91> 'const void *' lvalue ParmVar 0x55dd35e29eb0 'x' 'const void *'
|-CXXMethodDecl 0x55dd35e2a058 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55dd35e41e78 <col:34, line:640:5>
|   `-ReturnStmt 0x55dd35e41e68 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55dd35e41e50 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55dd35e41e20 <col:16> 'Packet *' lvalue ->_data_packet 0x55dd35e317d8
|         `-CXXThisExpr 0x55dd35e41e10 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55dd35e2a198 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55dd35e2a108 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd35e3af38 <col:46> 'bool' true
|-CXXMethodDecl 0x55dd35e2a318 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55dd35e2a250 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55dd35e2a3c0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55dd35e2ab70 <line:660:22> "" ""
| |-EnumConstantDecl 0x55dd35e2a4c0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2abe0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a4a0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55dd35e2a480 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55dd35e1f620 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55dd35e2a550 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2abf8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a530 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55dd35e2a510 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55dd35e1f6b0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55dd35e2a5e0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2ac10 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a5c0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd35e2a5a0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55dd35e2a670 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2ac28 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a650 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55dd35e2a630 <col:19> 'int' 16
| |-EnumConstantDecl 0x55dd35e2a700 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2ac40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a6e0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55dd35e2a6c0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55dd35e2a790 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2ac58 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a770 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55dd35e2a750 <col:19> 'int' 32
| |-EnumConstantDecl 0x55dd35e2a820 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2ac70 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a800 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55dd35e2a7e0 <col:19> 'int' EnumConstant 0x55dd35e2a670 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55dd35e2a8b0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2ac88 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a890 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55dd35e2a870 <col:19> 'int' EnumConstant 0x55dd35e2a790 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55dd35e2a980 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2aca0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2a960 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55dd35e2a940 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55dd35e2a900 <col:23> 'int' EnumConstant 0x55dd35e2a8b0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55dd35e2a920 <col:40> 'int' 2
| |-EnumConstantDecl 0x55dd35e2aa50 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd35e2acb8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd35e2aa30 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55dd35e2aa10 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55dd35e2a9d0 <col:23> 'int' EnumConstant 0x55dd35e2a8b0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55dd35e2a9f0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55dd35e2ab20 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55dd35e2acd0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd35e2ab00 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55dd35e2aae0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55dd35e2aaa0 <col:23> 'int' EnumConstant 0x55dd35e2a8b0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55dd35e2aac0 <col:40> 'int' 8
|-CXXMethodDecl 0x55dd35e2ad10 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55dd35e2adb0 <col:68> "" ""
|-CXXMethodDecl 0x55dd35e2ae48 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55dd35e2aee8 <col:45> "" ""
|-CXXMethodDecl 0x55dd35e2af80 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55dd35e2b020 <col:57> "" ""
|-CXXMethodDecl 0x55dd35e2b0b8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55dd35e2b158 <col:45> "" ""
|-CXXMethodDecl 0x55dd35e2b1f0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55dd35e2b290 <col:57> "" ""
|-CXXMethodDecl 0x55dd35e2b320 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55dd35e2b3c0 <col:51> "" ""
|-CXXMethodDecl 0x55dd35e2b450 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55dd35e2b4f0 <col:63> "" ""
|-CXXMethodDecl 0x55dd35e2b580 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55dd35e2b620 <col:53> "" ""
|-CXXMethodDecl 0x55dd35e2b6b0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55dd35e2b750 <col:65> "" ""
|-CXXMethodDecl 0x55dd35e2b868 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55dd35e2b7d8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55dd35e2b910 <col:61> "" ""
|-CXXMethodDecl 0x55dd35e2baa8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55dd35e2b998 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55dd35e2ba10 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55dd35e2bb58 <col:67> "" ""
|-CXXMethodDecl 0x55dd35e2bc70 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55dd35e2bbe0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55dd35e2bd18 <col:63> "" ""
|-CXXMethodDecl 0x55dd35e2beb0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55dd35e2bda0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55dd35e2be18 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55dd35e2bf60 <col:69> "" ""
|-CXXMethodDecl 0x55dd35e2c078 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55dd35e2bfe8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55dd35e2c120 <col:63> "" ""
|-CXXMethodDecl 0x55dd35e2e7f8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55dd35e2e6e8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55dd35e2e760 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35e2e8a8 <col:69> "" ""
|-CXXMethodDecl 0x55dd35e2e9c0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55dd35e2e930 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55dd35e2ea68 <col:62> "" ""
|-CXXMethodDecl 0x55dd35e2ec00 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55dd35e2eaf0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55dd35e2eb68 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55dd35e2ecb0 <col:68> "" ""
|-CXXMethodDecl 0x55dd35e2edc8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55dd35e2ed38 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55dd35e2ee70 <col:63> "" ""
|-CXXMethodDecl 0x55dd35e2f008 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55dd35e2eef8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55dd35e2ef70 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55dd35e2f0b8 <col:69> "" ""
|-CXXMethodDecl 0x55dd35e2f148 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55dd35e2f1e8 <col:64> "" ""
|-CXXMethodDecl 0x55dd35e2f278 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55dd35e2f318 <col:52> "" ""
|-CXXMethodDecl 0x55dd35e2f3a8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55dd35e2f448 <col:67> "" ""
|-CXXMethodDecl 0x55dd35e2f4d8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55dd35e2f578 <col:55> "" ""
|-CXXMethodDecl 0x55dd35e2f690 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55dd35e2f600 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55dd35e2f738 <col:58> "" ""
|-CXXMethodDecl 0x55dd35e2f8d0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55dd35e2f7c0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55dd35e2f838 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55dd35e2f980 <col:62> "" ""
|-CXXMethodDecl 0x55dd35e2fa98 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55dd35e2fa08 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55dd35e2fb40 <col:58> "" ""
|-CXXMethodDecl 0x55dd35e2fcd8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55dd35e2fbc8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55dd35e2fc40 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55dd35e2fd88 <col:62> "" ""
|-CXXMethodDecl 0x55dd35e2fea0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55dd35e2fe10 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55dd35e2ff48 <col:60> "" ""
|-CXXMethodDecl 0x55dd35e300e0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55dd35e2ffd0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55dd35e30048 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55dd35e30190 <col:64> "" ""
|-CXXMethodDecl 0x55dd35e302a8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55dd35e30218 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55dd35e30350 <col:58> "" ""
|-CXXMethodDecl 0x55dd35e304e8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55dd35e303d8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55dd35e30450 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55dd35e30598 <col:62> "" ""
|-CXXMethodDecl 0x55dd35e306b0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55dd35e30620 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55dd35e30758 <col:59> "" ""
|-CXXMethodDecl 0x55dd35e308f0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55dd35e307e0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55dd35e30858 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd35e309a0 <col:63> "" ""
|-AccessSpecDecl 0x55dd35e30a10 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd35e30a38 prev 0x55dd35e25c40 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd35e30b30 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55dd35e30c20 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55dd35e30d48 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55dd35e30ec8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55dd35e31048 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55dd35e311c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55dd35e41ff8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dd35e42868 <col:11>
| |-CXXDestructorDecl 0x55dd35e420d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55dd35e42208 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55dd35e42208
| | `-ParmVarDecl 0x55dd35e42318 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55dd35e423b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55dd35e423b8
| | `-ParmVarDecl 0x55dd35e424c8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55dd35e45288 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd35e45398 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55dd35e45618 <col:11>
| |   `-ReturnStmt 0x55dd35e45608 <col:11>
| |     `-UnaryOperator 0x55dd35e455f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55dd35e455e0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55dd35e45408 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55dd35e45408
|   `-ParmVarDecl 0x55dd35e45518 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55dd35e31230 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd35e31348 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55dd35e313e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55dd35e31450 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55dd35e314b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55dd35e31520 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55dd35e31580 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55dd35e31640 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55dd35e316a0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55dd35e31700 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55dd35e41f08 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55dd35e313e8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55dd35e42878 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55dd35e428d0 <col:12>
| |-CXXConstructorDecl 0x55dd35e42538 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55dd35e42538
| | `-ParmVarDecl 0x55dd35e42648 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55dd35e426e8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55dd35e426e8
| | `-ParmVarDecl 0x55dd35e427f8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55dd35e44970 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55dd35e31778 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55dd35e317d8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55dd35e31840 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55dd35e318a8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55dd35e31910 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55dd35e31978 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55dd35e319d8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55dd35e31a38 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55dd35e31aa0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55dd35e31b28 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55dd35e31778 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55dd35e41ea0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55dd35e319d8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55dd35e428e0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55dd35e42940 <col:21, line:755:5>
|-CXXConstructorDecl 0x55dd35e31cc8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55dd35e31c08 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55dd35e31dc0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55dd35e31fa8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55dd35e31eb0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55dd35e32278 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55dd35e32060 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd35e320d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd35e32150 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e32498 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55dd35e32348 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55dd35e323c0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55dd35e3aa78 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55dd35e32558 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55dd35e325d0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55dd35e32648 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55dd35e3abd0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55dd35e3ab40 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd35e3ad18 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55dd35e3ac88 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55dd35e3ae10 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35eefae0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55dd35ffb8d8 <line:167:18>
|-CXXRecordDecl 0x55dd35ffb998 prev 0x55dd35eefae0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55dd35ffbaa8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd35e92050 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55dd35ffcdf0 <line:167:18>
|-CXXRecordDecl 0x55dd35ffceb0 prev 0x55dd35e92050 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55dd35ffcfc0 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd35a4bbe8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd35a4bd08 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55dd35c5db80 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55dd35c5dc60 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55dd35c5dc60
| `-ParmVarDecl 0x55dd35c5dd48 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55dd35c5dde8 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55dd35c5dde8
| `-ParmVarDecl 0x55dd35c5def8 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55dd35dfabe0 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
