
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb922f318 prev 0x562eb9226ac8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562eb922f410 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x562eb922f4a0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x562eb922f518 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x562eb922f5d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x562eb922f6a0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x562eb922f818 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x562eb922f750 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x562eb922f8c0 <col:24>
| `-OptimizeNoneAttr 0x562eb922f918 <col:34>
|-CXXMethodDecl 0x562eb922f960 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x562eb922fc18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x562eb922fa10 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x562eb922fa88 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x562eb922fb08 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x562eb922fcd0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x562eb922fd08 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x562eb922fd70 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x562eb922fdf8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x562eb9230118 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x562eb922feb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x562eb922ff28 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x562eb922ffa0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x562eb9230020 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x562eb9230230 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x562eb9236bc8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x562eb9236bc8
| `-ParmVarDecl 0x562eb9236cd8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x562eb9236d78 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x562eb9236d78
| `-ParmVarDecl 0x562eb9236e88 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x562eb923ae48 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb9222340 prev 0x562eb92220c0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562eb9222438 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x562eb92224c8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x562eb9222528 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x562eb9222618 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x562eb9222718 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x562eb92228e8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x562eb9222798 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x562eb9222810 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x562eb9222a78 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x562eb92229b0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x562eb9222b20 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x562eb9222c58 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x562eb9222b90 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x562eb9222df8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x562eb9222d38 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x562eb9222f98 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x562eb9222ed8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x562eb9223040 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x562eb9223140 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x562eb9223220 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb9223120 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x562eb9223100 <col:26> 'int' 1
| `-EnumConstantDecl 0x562eb92231d0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x562eb9223238 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb92231b0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x562eb9223190 <col:44> 'int' 2
|-CXXMethodDecl 0x562eb9223380 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x562eb9223268 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x562eb92232e8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x562eb92234d8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x562eb9223448 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x562eb9223718 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x562eb9223598 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x562eb9223610 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x562eb92237c8 <col:20>
| `-OptimizeNoneAttr 0x562eb9223820 <col:30>
|-CXXMethodDecl 0x562eb9223928 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x562eb9223860 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x562eb92239d0 <col:20>
| `-OptimizeNoneAttr 0x562eb9223a28 <col:30>
|-CXXMethodDecl 0x562eb9223a78 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x562eb9223b40 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x562eb9223c58 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x562eb9223ce0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x562eb9223d68 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x562eb9223df0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x562eb9223e78 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x562eb9223f08 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x562eb9223fc8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x562eb9224050 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x562eb92240d8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x562eb9224160 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x562eb92241e8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x562eb9224270 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x562eb9224300 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x562eb92243c0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x562eb9224450 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x562eb92245b0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x562eb9224518 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x562eb9224740 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x562eb9224670 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x562eb92249e0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x562eb92247f8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x562eb9224878 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x562eb92248f8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x562eb9224a98 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x562eb9224ba0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x562eb9224e30 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb9224b80 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x562eb9224b60 <col:33> 'int' 0
| |-EnumConstantDecl 0x562eb9224c30 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x562eb9224e48 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb9224c10 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x562eb9224bf0 <col:32> 'int' 20
| |-EnumConstantDecl 0x562eb9224cc0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x562eb9224e60 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb9224ca0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x562eb9224c80 <col:38> 'int' 90
| |-EnumConstantDecl 0x562eb9224d50 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x562eb9224e78 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb9224d30 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x562eb9224d10 <col:35> 'int' 100
| `-EnumConstantDecl 0x562eb9224de0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x562eb9224e90 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb9224dc0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x562eb9224da0 <col:32> 'int' 2000
|-CXXMethodDecl 0x562eb9224ed0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x562eb9225310 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x562eb9225180 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x562eb92251f8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562eb92253e0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x562eb9225560 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x562eb9225490 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562eb9225768 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x562eb9225618 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x562eb9225690 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562eb9225868 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x562eb9225908 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x562eb92259d0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x562eb9225a60 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x562eb9225c90 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb9225a40 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x562eb9225a20 <col:36> 'int' EnumConstant 0x562eb92259d0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x562eb9225ab0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x562eb9225b00 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x562eb9225b50 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x562eb9225ba0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x562eb9225bf0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x562eb9225c40 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x562eb9225d78 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x562eb9225cb8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x562eb9225e40 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x562eb9225f00 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x562eb9225fc0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x562eb9226080 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x562eb9226198 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x562eb9226260 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x562eb92263e0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x562eb9226310 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x562eb9226508 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x562eb9226708 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x562eb92265b8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x562eb9226638 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x562eb9233038 <col:54, line:127:5>
|   |-ParenExpr 0x562eb9232ee8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x562eb9232eb8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9232ba8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x562eb9232b80 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x562eb9232b68 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x562eb9232b50 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x562eb9232b20 <col:31> 'Router *' lvalue ->_router 0x562eb9230a00
|   |   |         `-CXXThisExpr 0x562eb9232b10 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x562eb9232c08 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9232be8 <col:48> 'int' 0
|   |   `-CallExpr 0x562eb9232e18 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x562eb9232e00 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9232de0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9232e58 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9232c78 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x562eb9232e70 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9232c98 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x562eb9232e88 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9232cd0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x562eb9232ea0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9232dc8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9232db0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9232d68 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x562eb9232f80 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x562eb9232f18 <col:9> 'Router *' lvalue ->_router 0x562eb9230a00
|   | | `-CXXThisExpr 0x562eb9232f08 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x562eb9232f68 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x562eb9232f48 <col:19> 'Router *' lvalue ParmVar 0x562eb92265b8 'r' 'Router *'
|   `-BinaryOperator 0x562eb9233018 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x562eb9232fb0 <col:9> 'int' lvalue ->_eindex 0x562eb9230a68
|     | `-CXXThisExpr 0x562eb9232fa0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x562eb9233000 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x562eb9232fe0 <col:19> 'int' lvalue ParmVar 0x562eb9226638 'eindex' 'int'
|-CXXMethodDecl 0x562eb9226890 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x562eb92267c8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x562eb9226960 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x562eb9226a28 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x562eb9226ac8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x562eb9226d18 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x562eb9226b90 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x562eb9226c10 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x562eb9226dc8 <col:20>
| `-OptimizeNoneAttr 0x562eb9226e20 <col:30>
|-CXXMethodDecl 0x562eb9226f28 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x562eb9226e60 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x562eb9226fd0 <col:20>
| `-OptimizeNoneAttr 0x562eb9227028 <col:30>
|-CXXMethodDecl 0x562eb92270f8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x562eb9227068 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x562eb92271a0 <col:20>
| `-OptimizeNoneAttr 0x562eb92271f8 <col:30>
|-CXXMethodDecl 0x562eb9227388 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x562eb9227230 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x562eb92272b0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x562eb9227518 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x562eb9227450 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x562eb9227668 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x562eb92275d8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x562eb92277b8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x562eb9227728 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x562eb9227908 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x562eb9227878 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x562eb9227bc8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x562eb92279c0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x562eb9227a40 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x562eb9227ae8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x562eb9227ca0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x562eb9227d60 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x562eb9228030 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x562eb9227ee0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x562eb9227f58 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x562eb9228158 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x562eb9228330 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x562eb9228210 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x562eb9228290 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x562eb9228548 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x562eb92283f8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x562eb9228478 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x562eb92288b8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x562eb9228608 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x562eb9228680 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x562eb9228700 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x562eb9232620 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x562eb9232600 <col:106> 'int' 0
| `-ParmVarDecl 0x562eb9228778 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562eb9232658 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562eb9232638 <col:126> 'int' 0
|-CXXMethodDecl 0x562eb9228c38 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x562eb9228988 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x562eb9228a00 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x562eb9228a80 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x562eb9228af8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562eb9232690 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562eb9232670 <col:114> 'int' 0
|-CXXMethodDecl 0x562eb9228fc8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x562eb9228d10 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x562eb9228d88 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x562eb9228e08 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x562eb92326a8 <col:96> 'int' 0
| `-ParmVarDecl 0x562eb9228e80 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562eb92326e8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562eb92326c8 <col:116> 'int' 0
|-CXXMethodDecl 0x562eb9229348 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x562eb9229098 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x562eb9229110 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x562eb9229190 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x562eb9232720 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x562eb9232700 <col:109> 'int' 0
| `-ParmVarDecl 0x562eb9229208 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562eb9232758 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562eb9232738 <col:129> 'int' 0
|-CXXMethodDecl 0x562eb92296c8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x562eb9229418 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x562eb9229490 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x562eb9229510 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x562eb9229588 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562eb9232790 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562eb9232770 <col:117> 'int' 0
|-CXXMethodDecl 0x562eb9229a58 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x562eb92297a0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb9229818 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x562eb9229898 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x562eb92327a8 <col:99> 'int' 0
| `-ParmVarDecl 0x562eb9229910 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562eb92327e8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562eb92327c8 <col:119> 'int' 0
|-CXXMethodDecl 0x562eb9229e78 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x562eb9229b28 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x562eb9229ba8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x562eb9229c20 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x562eb9229ca0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x562eb9232820 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x562eb9232800 <col:108> 'int' 0
| `-ParmVarDecl 0x562eb9229d20 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x562eb9232858 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x562eb9232838 <col:141> 'int' 0
|-CXXMethodDecl 0x562eb922a298 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x562eb9229f50 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x562eb9229fd0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x562eb922a048 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x562eb922a0c8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x562eb922a148 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x562eb9232870 <col:121> 'int' 0
|-CXXMethodDecl 0x562eb922a6c8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x562eb922a378 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x562eb922a3f8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x562eb922a470 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x562eb922a4f0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x562eb9232890 <col:98> 'int' 0
| `-ParmVarDecl 0x562eb922a570 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x562eb92328b0 <col:123> 'int' 0
|-CXXMethodDecl 0x562eb922a990 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x562eb922a7a0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x562eb922a820 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x562eb922a8a0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x562eb92328d0 <col:80> 'int' 0
|-EnumDecl 0x562eb922aa48 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x562eb922ab50 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x562eb922ade0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb922ab30 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x562eb922ab10 <col:42> 'int' 1
| |-EnumConstantDecl 0x562eb922abe0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x562eb922adf8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb922abc0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x562eb922aba0 <col:40> 'int' 2
| |-EnumConstantDecl 0x562eb922ac70 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x562eb922ae10 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb922ac50 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x562eb922ac30 <col:44> 'int' 4
| |-EnumConstantDecl 0x562eb922ad00 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x562eb922ae28 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb922ace0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x562eb922acc0 <col:36> 'int' 7
| `-EnumConstantDecl 0x562eb922ad90 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x562eb922ae40 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb922ad70 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x562eb922ad50 <col:34> 'int' 6
|-CXXMethodDecl 0x562eb922b0f8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x562eb922ae68 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x562eb922af08 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x562eb922af88 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x562eb922b000 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x562eb9232988 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x562eb9232970 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x562eb9232958 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x562eb9232938 <col:98, col:105> 'String' (CXXTemporary 0x562eb9232938)
|           `-CXXTemporaryObjectExpr 0x562eb9232900 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x562eb922b398 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x562eb922b1c8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x562eb922b240 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x562eb922b2b8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x562eb9232a38 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x562eb9232a20 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x562eb9232a08 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x562eb92329e8 <col:94, col:101> 'String' (CXXTemporary 0x562eb92329e8)
| |         `-CXXTemporaryObjectExpr 0x562eb92329b0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x562eb9233220 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x562eb9233198 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x562eb9233168 <col:9> '<bound member function type>' ->add_task_handlers 0x562eb922b0f8
|     | `-CXXThisExpr 0x562eb9233158 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x562eb92331d8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x562eb92330d8 <col:27> 'Task *' lvalue ParmVar 0x562eb922b1c8 'task' 'Task *'
|     |-ImplicitCastExpr 0x562eb92331f0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x562eb92330f8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x562eb922b240 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x562eb9233208 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x562eb9233118 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x562eb922ad90 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x562eb9233138 <col:62> 'const String' lvalue ParmVar 0x562eb922b2b8 'prefix' 'const String &'
|-CXXMethodDecl 0x562eb922b5a8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x562eb922b460 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x562eb922b4d8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x562eb9232ae8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x562eb9232ad0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x562eb9232ab8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x562eb9232a98 <col:70, col:77> 'String' (CXXTemporary 0x562eb9232a98)
| |         `-CXXTemporaryObjectExpr 0x562eb9232a60 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x562eb92333f8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x562eb9233370 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x562eb9233340 <col:9> '<bound member function type>' ->add_task_handlers 0x562eb922b0f8
|     | `-CXXThisExpr 0x562eb9233330 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x562eb92333b0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x562eb92332b0 <col:27> 'Task *' lvalue ParmVar 0x562eb922b460 'task' 'Task *'
|     |-ImplicitCastExpr 0x562eb92333c8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x562eb92332d0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x562eb92333e0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x562eb92332f0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x562eb922ad90 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x562eb9233310 <col:57> 'const String' lvalue ParmVar 0x562eb922b4d8 'prefix' 'const String &'
|-CXXMethodDecl 0x562eb922b888 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x562eb922b670 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922b6f0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922b768 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x562eb922bb38 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x562eb922b958 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922b9d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922ba58 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x562eb922be28 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x562eb922bc08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922bc88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922bd00 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x562eb922c0d8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x562eb922bef8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922bf78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922bff8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x562eb922c388 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x562eb922c1a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922c228 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922c2a8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x562eb922c678 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x562eb922c458 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922c520 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922c598 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x562eb922c928 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x562eb922c748 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922c7c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922c848 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x562eb922cbd8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x562eb922c9f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922ca78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922caf8 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x562eb922ceb8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x562eb922cca8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922cd28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922cdd0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x562eb922d198 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x562eb922cf88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922d008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922d0b0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x562eb922d400 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x562eb922d268 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x562eb922d2e8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x562eb922d360 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x562eb922d6a8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x562eb922d4d0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x562eb922d550 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x562eb922d5c8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x562eb922d958 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x562eb922d778 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922d7f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922d878 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x562eb922dc08 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x562eb922da28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922daa8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922db20 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x562eb922deb8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x562eb922dcd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922dd58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922ddd0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x562eb922e188 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x562eb922df88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922e008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562eb922e0a8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x562eb922e4b8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x562eb922e258 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562eb922e2d8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x562eb922e350 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x562eb922e3c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562eb9232b00 <col:93> 'bool' false
|-CXXMethodDecl 0x562eb922e6a0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x562eb922e588 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x562eb922e608 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x562eb922e878 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x562eb922e760 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x562eb922e7e0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x562eb922eb58 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x562eb922e938 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x562eb922e9b0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x562eb922ea30 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x562eb922eaa8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x562eb922ee48 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x562eb922ec28 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x562eb922eca0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x562eb922ed20 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x562eb922ed98 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x562eb922f080 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x562eb922ef20 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x562eb922efa0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x562eb922f268 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x562eb922f148 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x562eb922f1c8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x562eb922f318 prev 0x562eb9226ac8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562eb922f410 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x562eb922f4a0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x562eb922f518 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x562eb922f5d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x562eb922f6a0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x562eb922f818 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x562eb922f750 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x562eb922f8c0 <col:24>
| | `-OptimizeNoneAttr 0x562eb922f918 <col:34>
| |-CXXMethodDecl 0x562eb922f960 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x562eb922fc18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x562eb922fa10 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x562eb922fa88 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x562eb922fb08 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x562eb922fcd0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x562eb922fd08 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x562eb922fd70 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x562eb922fdf8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x562eb9230118 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x562eb922feb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x562eb922ff28 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x562eb922ffa0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x562eb9230020 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x562eb9230230 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x562eb9236bc8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x562eb9236bc8
| | `-ParmVarDecl 0x562eb9236cd8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x562eb9236d78 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x562eb9236d78
| | `-ParmVarDecl 0x562eb9236e88 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x562eb923ae48 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x562eb92302a8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x562eb9230348 <col:38> "" ""
|-CXXMethodDecl 0x562eb92303d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x562eb9230478 <col:44> "" ""
|-AccessSpecDecl 0x562eb92304e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x562eb9230530 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x562eb9230630 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x562eb9230680 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb9230610 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x562eb92305f0 <col:27> 'int' 4
|-FieldDecl 0x562eb9230738 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x562eb92308e8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x562eb92309a0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x562eb9230a00 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x562eb9230a68 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x562eb9230bb8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x562eb9230af8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x562eb9230d68 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x562eb9230c78 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x562eb9230f48 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x562eb9230e28 <col:20> col:23 'int'
| `-ParmVarDecl 0x562eb9230ea8 <col:25> col:28 'int'
|-CXXMethodDecl 0x562eb92311f0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x562eb9231010 <col:23> col:26 'int'
| |-ParmVarDecl 0x562eb9231090 <col:28> col:31 'int'
| `-ParmVarDecl 0x562eb9231108 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x562eb92312a8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x562eb9231370 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x562eb92313c0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x562eb9231410 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x562eb92315f0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x562eb92314a0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x562eb9231518 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562eb9231898 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x562eb92316b8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x562eb9231738 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x562eb92317b0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x562eb9231ab8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x562eb9231968 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x562eb92319e8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x562eb9231df0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x562eb9231b78 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x562eb9231bf8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x562eb9231c70 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x562eb9231cf0 <col:57> col:60 'int'
|-CXXMethodDecl 0x562eb9231fd8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x562eb9231ec0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x562eb9231f40 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x562eb9232128 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x562eb9232098 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x562eb92324a8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x562eb92321e8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x562eb9232268 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x562eb92322e0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x562eb9232360 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x562eb92325c0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class CheckCRC32
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class atomic_uint32_t _drops
       108 |     uint32_t _val
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb8fdd560 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562eb8fdd678 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x562eb8fdd708 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x562eb8fdd7d8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x562eb8fdd8c0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x562eb8fddad8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x562eb8fdd980 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fddc88 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x562eb8fddb90 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x562eb8fdddd0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x562eb8fddd40 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x562eb8fddf18 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x562eb8fdde88 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fde060 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x562eb8fddfd0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fde128 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x562eb8fde270 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x562eb8fde1e0 <col:28> col:31 'int'
|-CXXMethodDecl 0x562eb8fde338 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x562eb8fde480 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x562eb8fde3f0 <col:28> col:31 'int'
|-CXXMethodDecl 0x562eb8fde5f8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x562eb8fde538 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fde740 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x562eb8fde6b0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fde808 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x562eb8fde9c8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x562eb8fde8b8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562eb8fde930 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fdec18 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x562eb8fdea88 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562eb8fdeb00 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562eb8fdecc8 <col:86> "" ""
|-CXXMethodDecl 0x562eb8fdef38 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x562eb8fdeda8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x562eb8fdee20 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fdf0e8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x562eb8fdeff8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x562eb8fdf298 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x562eb8fdf1a0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x562eb8fdf568 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x562eb8fdf350 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x562eb8fdf3c8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562eb8fdf440 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fdf848 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x562eb8fdf630 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x562eb8fdf6a8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562eb8fdf720 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562eb8fdf900 <col:115> "" ""
|-AccessSpecDecl 0x562eb8fdf970 <line:84:3, col:10> col:3 private
|-FieldDecl 0x562eb8fdf9a8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb8fe2e98 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x562eb8fe2e98
| `-ParmVarDecl 0x562eb8fe2fa8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x562eb8fe3048 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x562eb8fe3048
| `-ParmVarDecl 0x562eb8fe3158 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x562eb90137a8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x562eb9208ff0 <col:7>
|-CXXConstructorDecl 0x562eb9013880 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x562eb9013880
| `-ParmVarDecl 0x562eb9013998 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x562eb9013a08 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x562eb9013a08
| `-ParmVarDecl 0x562eb9013b18 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x562eb920b9b0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb9239d48 <../elements/standard/checkcrc32.hh:18:1, line:31:1> line:18:7 class CheckCRC32 definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x562eb9239ea8 <col:1, col:7> col:7 implicit referenced class CheckCRC32
|-AccessSpecDecl 0x562eb9239f38 <col:37, col:43> col:37 public
|-CXXConstructorDecl 0x562eb9239fc0 <line:20:5, col:16> col:5 CheckCRC32 'void ()'
|-CXXMethodDecl 0x562eb923a0c0 <line:22:5, col:59> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x562eb9223a78 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x562eb923abd0 <col:36, col:59>
|   `-ReturnStmt 0x562eb923abc0 <col:38, col:45>
|     `-ImplicitCastExpr 0x562eb923aba8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x562eb923ab80 <col:45> 'const char [11]' lvalue "CheckCRC32"
|-CXXMethodDecl 0x562eb923a188 <line:23:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x562eb9223b40 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x562eb923ac30 <col:36, col:56>
|   `-ReturnStmt 0x562eb923ac20 <col:38, col:45>
|     `-ImplicitCastExpr 0x562eb923ac08 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x562eb923abe8 <col:45> 'const char []' lvalue Var 0x562eb9223df0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x562eb923a2c8 <line:25:5, col:35> col:13 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x562eb9222c58 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x562eb923a238 <col:27, col:34> col:35 'Packet *'
|-AccessSpecDecl 0x562eb923a370 <line:27:3, col:10> col:3 private
|-FieldDecl 0x562eb923a3a8 <line:29:5, col:21> col:21 referenced _drops 'atomic_uint32_t'
|-CXXConstructorDecl 0x562eb923a428 <line:18:7> col:7 implicit CheckCRC32 'void (const CheckCRC32 &)' inline default_delete noexcept-unevaluated 0x562eb923a428
| `-ParmVarDecl 0x562eb923a538 <col:7> col:7 'const CheckCRC32 &'
|-CXXConstructorDecl 0x562eb923a5d8 <col:7> col:7 implicit CheckCRC32 'void (CheckCRC32 &&)' inline default_delete noexcept-unevaluated 0x562eb923a5d8
| `-ParmVarDecl 0x562eb923a6e8 <col:7> col:7 'CheckCRC32 &&'
|-CXXMethodDecl 0x562eb923a788 <col:7> col:7 implicit operator= 'CheckCRC32 &(const CheckCRC32 &)' inline default_delete noexcept-unevaluated 0x562eb923a788
| `-ParmVarDecl 0x562eb923a898 <col:7> col:7 'const CheckCRC32 &'
|-CXXMethodDecl 0x562eb923a908 <col:7> col:7 implicit operator= 'CheckCRC32 &(CheckCRC32 &&)' inline default_delete noexcept-unevaluated 0x562eb923a908
| `-ParmVarDecl 0x562eb923aa18 <col:7> col:7 'CheckCRC32 &&'
`-CXXDestructorDecl 0x562eb923aaa0 <col:7> col:7 implicit ~CheckCRC32 'void ()' inline default noexcept-unevaluated 0x562eb923aaa0
  `-Overrides: [ 0x562eb9222618 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.CheckCRC32 = type { %class.Element.base, %class.atomic_uint32_t }
  NonVirtualBaseLLVMType:%class.CheckCRC32 = type { %class.Element.base, %class.atomic_uint32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb91f7b28 prev 0x562eb91e95a0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562eb91f7c20 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x562eb91f7d10 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x562eb91f7e38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x562eb91f7fb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x562eb91f8138 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x562eb91f82b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x562eb9209158 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x562eb9209a18 <col:11>
|-CXXDestructorDecl 0x562eb9209230 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x562eb9209368 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x562eb9209368
| `-ParmVarDecl 0x562eb9209478 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x562eb9209560 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x562eb9209560
| `-ParmVarDecl 0x562eb9209678 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x562eb920c3a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x562eb920c4b8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x562eb920c738 <col:11>
|   `-ReturnStmt 0x562eb920c728 <col:11>
|     `-UnaryOperator 0x562eb920c710 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x562eb920c700 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x562eb920c528 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x562eb920c528
  `-ParmVarDecl 0x562eb920c638 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb91f8320 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562eb91f8438 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x562eb91f84d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x562eb91f8540 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x562eb91f85a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x562eb91f8610 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x562eb91f8670 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x562eb91f8730 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x562eb91f8790 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x562eb91f87f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x562eb9209068 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x562eb91f84d8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x562eb9209a28 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x562eb9209a80 <col:12>
|-CXXConstructorDecl 0x562eb92096e8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x562eb92096e8
| `-ParmVarDecl 0x562eb92097f8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x562eb9209898 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x562eb9209898
| `-ParmVarDecl 0x562eb92099a8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x562eb920ba90 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb91e2c10 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562eb91e2d28 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x562eb91e2db8 <col:16, col:22> col:16 public
|-EnumDecl 0x562eb91e2de0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x562eb91e2ee0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x562eb91e2fc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91e2ec0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x562eb91e2ea0 <col:21> 'int' 28
| `-EnumConstantDecl 0x562eb91e2f70 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x562eb91e2fd8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb91e2f50 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x562eb91e2f30 <col:22> 'int' 64
|-CXXMethodDecl 0x562eb91e3318 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x562eb91e3000 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562eb91e3080 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x562eb91e30f8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562eb91e3170 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562eb91e33d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e3618 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x562eb91e3450 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x562eb91e34c8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562eb91e36c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e3828 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x562eb91e3738 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562eb91e38d0 <col:72> warn_unused_result ""
|-TypedefDecl 0x562eb91e3c00 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x562eb91e3b90 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x562eb91e3b30 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x562eb91e3af0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x562eb8cbf2d0 'void'
|       |-PointerType 0x562eb8f65a00 'unsigned char *'
|       | `-BuiltinType 0x562eb8cbf3d0 'unsigned char'
|       |-TypedefType 0x562eb8d620d0 'size_t' sugar
|       | |-Typedef 0x562eb8d2fb20 'size_t'
|       | `-BuiltinType 0x562eb8cbf430 'unsigned long'
|       `-PointerType 0x562eb8cbfad0 'void *'
|         `-BuiltinType 0x562eb8cbf2d0 'void'
|-CXXMethodDecl 0x562eb91e4078 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x562eb91e3c70 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x562eb91e3ce8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562eb91e3d80 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x562eb91e3e00 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x562eb9201ff0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x562eb9201fd8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x562eb9201fa0 <col:58> 'int' 0
| |-ParmVarDecl 0x562eb91e3e80 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x562eb9202018 <col:76> 'int' 0
| |-ParmVarDecl 0x562eb91e3f00 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x562eb9202038 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x562eb91e4148 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e41c8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x562eb91e4288 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x562eb91e4328 <col:20>
| `-OptimizeNoneAttr 0x562eb91e4380 <col:30>
|-CXXMethodDecl 0x562eb91e43f8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x562eb91e4498 <col:20>
| `-OptimizeNoneAttr 0x562eb91e44f0 <col:30>
|-CXXMethodDecl 0x562eb91e4568 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x562eb91e4608 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e46b8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x562eb91e4758 <col:20>
| |-OptimizeNoneAttr 0x562eb91e47b0 <col:30>
| `-WarnUnusedResultAttr 0x562eb91e47d8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e4830 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x562eb91e48d0 <col:20>
| `-OptimizeNoneAttr 0x562eb91e4928 <col:30>
|-CXXMethodDecl 0x562eb91e4978 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x562eb91e4a18 <col:20>
| `-OptimizeNoneAttr 0x562eb91e4a70 <col:30>
|-CXXMethodDecl 0x562eb91e4ab8 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x562eb91e4b58 <col:20>
| `-OptimizeNoneAttr 0x562eb91e4bb0 <col:30>
|-CXXMethodDecl 0x562eb91e4bf8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x562eb91e4cb8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x562eb91e4d80 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x562eb91e4e48 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x562eb91e4f08 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x562eb91e5028 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x562eb9202100 <col:54, line:99:5>
|   `-ReturnStmt 0x562eb92020f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x562eb92020d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x562eb92020a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x562eb91f8b28
|         `-CXXThisExpr 0x562eb9202098 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x562eb91e51c8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x562eb91e50d8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x562eb92021b0 <col:67, line:103:5>
|   `-BinaryOperator 0x562eb9202190 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x562eb9202128 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x562eb91f8b28
|     | `-CXXThisExpr 0x562eb9202118 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x562eb9202178 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x562eb9202158 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x562eb91e50d8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x562eb91e52c0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x562eb9202230 <col:33, line:107:5>
|   `-ReturnStmt 0x562eb9202220 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x562eb9202208 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x562eb92021d8 <col:16> 'void *' lvalue ->_destructor_argument 0x562eb91f8b90
|         `-CXXThisExpr 0x562eb92021c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x562eb91e5380 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x562eb9202860 <col:25, line:113:5>
|   |-ParenExpr 0x562eb92025a8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x562eb9202578 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x562eb92022e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x562eb92022c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x562eb9202288 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x562eb9202258 <col:24> '<bound member function type>' ->shared 0x562eb91e43f8
|   |   |       `-ImplicitCastExpr 0x562eb92022a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x562eb9202248 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x562eb9202348 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9202328 <col:42> 'int' 0
|   |   `-CallExpr 0x562eb92024d8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x562eb92024c0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb92024a0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9202518 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb92023b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x562eb9202530 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb92023e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9202548 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9202418 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x562eb9202560 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9202488 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9202470 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9202438 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x562eb92027a8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x562eb92025d8 <col:2> 'unsigned char *' lvalue ->_head 0x562eb91f8930
|   | | `-CXXThisExpr 0x562eb92025c8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x562eb9202790 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x562eb9202770 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x562eb9202618 <col:10> 'unsigned char *' lvalue ->_data 0x562eb91f8998
|   |     | `-CXXThisExpr 0x562eb9202608 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x562eb9202758 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x562eb9202738 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x562eb9202658 <col:18> 'unsigned char *' lvalue ->_tail 0x562eb91f8a00
|   |         | `-CXXThisExpr 0x562eb9202648 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x562eb9202720 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x562eb9202700 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x562eb9202698 <col:26> 'unsigned char *' lvalue ->_end 0x562eb91f8a68
|   |             | `-CXXThisExpr 0x562eb9202688 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x562eb92026e8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x562eb92026c8 <col:33> 'int' 0
|   `-BinaryOperator 0x562eb9202840 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x562eb92027d8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x562eb91f8b28
|     | `-CXXThisExpr 0x562eb92027c8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x562eb9202828 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x562eb9202808 <col:16> 'int' 0
|-CXXMethodDecl 0x562eb91e54c0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x562eb91e5430 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562eb91e5568 <col:20>
| |-OptimizeNoneAttr 0x562eb91e55c0 <col:30>
| `-WarnUnusedResultAttr 0x562eb91e55e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e56b8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x562eb91e5628 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562eb91e5760 <col:20>
| |-OptimizeNoneAttr 0x562eb91e57b8 <col:30>
| `-WarnUnusedResultAttr 0x562eb91e57e0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e5918 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x562eb91e5820 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562eb91e59c0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e5ac0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x562eb91e5a30 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562eb91e5b68 <col:20>
| `-OptimizeNoneAttr 0x562eb91e5bc0 <col:30>
|-CXXMethodDecl 0x562eb91e5c88 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x562eb91e5bf8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562eb91e5d30 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e5e30 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x562eb91e5da0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562eb91e5ed8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e5fd8 <line:245:5, col:62> col:45 used take 'void (uint32_t)'
| |-ParmVarDecl 0x562eb91e5f48 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562eb91e6080 <col:20>
| `-OptimizeNoneAttr 0x562eb91e60d8 <col:30>
|-CXXMethodDecl 0x562eb91e6268 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x562eb91e6118 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x562eb91e6190 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x562eb9202058 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x562eb91e6318 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x562eb91e6518 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x562eb91e6390 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x562eb91e6408 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb91e6728 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x562eb91e65d8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562eb91e6650 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb91e6938 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x562eb91e67e8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x562eb91e6868 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x562eb9202068 <col:39> 'int' 0
|-CXXMethodDecl 0x562eb91e6a08 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x562eb91e6ad0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x562eb91e6b98 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x562eb91e6c58 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x562eb91e6d20 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x562eb91e6e68 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x562eb91e6dd8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x562eb91e7038 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x562eb91e6f28 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x562eb91e6fa0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb91e7108 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x562eb91e71c8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x562eb91e7268 <col:20>
| `-OptimizeNoneAttr 0x562eb91e72c0 <col:30>
|-CXXMethodDecl 0x562eb91e7310 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x562eb91e73b0 <col:20>
| `-OptimizeNoneAttr 0x562eb91e7408 <col:30>
|-CXXMethodDecl 0x562eb91e7458 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x562eb91e75c0 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x562eb91e7688 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x562eb91e7728 <col:20>
| `-OptimizeNoneAttr 0x562eb91e7780 <col:30>
|-CXXMethodDecl 0x562eb91e78d0 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x562eb91e77c0 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x562eb91e7838 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb91e7a20 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x562eb91e7990 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb91e7ae8 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x562eb91e7ba8 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x562eb91e7c48 <col:20>
| `-OptimizeNoneAttr 0x562eb91e7ca0 <col:30>
|-CXXMethodDecl 0x562eb91e7cf0 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x562eb91e7d90 <col:20>
| `-OptimizeNoneAttr 0x562eb91e7de8 <col:30>
|-CXXMethodDecl 0x562eb91e7e38 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x562eb91e7f00 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x562eb91e7fa0 <col:20>
| `-OptimizeNoneAttr 0x562eb91e7ff8 <col:30>
|-CXXMethodDecl 0x562eb91e8040 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x562eb91e8158 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x562eb91e82c8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x562eb91e8208 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x562eb91e83b8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x562eb91e8458 <col:20>
| `-OptimizeNoneAttr 0x562eb91e84b0 <col:30>
|-CXXMethodDecl 0x562eb91e8500 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x562eb91e85c0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x562eb91e87f8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x562eb91e8670 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x562eb91e86e8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562eb91e88a8 <col:20>
| `-OptimizeNoneAttr 0x562eb91e8900 <col:30>
|-CXXMethodDecl 0x562eb91e89a8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x562eb91e8a48 <col:20>
| `-OptimizeNoneAttr 0x562eb91e8aa0 <col:30>
|-CXXMethodDecl 0x562eb91e8af0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x562eb91e8b90 <col:20>
| `-OptimizeNoneAttr 0x562eb91e8be8 <col:30>
|-CXXMethodDecl 0x562eb91e8c30 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x562eb91e8cd0 <col:20>
| `-OptimizeNoneAttr 0x562eb91e8d28 <col:30>
|-CXXMethodDecl 0x562eb91e8e28 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x562eb91e8d60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x562eb91e8ed0 <col:20>
| `-OptimizeNoneAttr 0x562eb91e8f28 <col:30>
|-CXXMethodDecl 0x562eb91e90e8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x562eb91e8f60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x562eb91e8fd8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562eb91e9198 <col:20>
| `-OptimizeNoneAttr 0x562eb91e91f0 <col:30>
|-CXXMethodDecl 0x562eb91e9298 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x562eb91e93b8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x562eb91e94d8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x562eb91e9578 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x562eb91e95a0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x562eb91e96c8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x562eb91e9768 <col:20>
| `-OptimizeNoneAttr 0x562eb91e97c0 <col:30>
|-CXXMethodDecl 0x562eb91e9868 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x562eb91e9908 <col:20>
| `-OptimizeNoneAttr 0x562eb91e9960 <col:30>
|-AccessSpecDecl 0x562eb91e9988 <line:344:3, col:9> col:3 public
|-EnumDecl 0x562eb91e99b0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x562eb91e9ab0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x562eb91e9b00 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb91e9a90 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x562eb91e9a70 <col:14> 'int' 48
|-CXXMethodDecl 0x562eb91e9b68 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x562eb91e9c08 <col:20>
| `-OptimizeNoneAttr 0x562eb91e9c60 <col:30>
|-CXXMethodDecl 0x562eb91e9cd8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x562eb91e9d78 <col:20>
| `-OptimizeNoneAttr 0x562eb91e9dd0 <col:30>
|-CXXMethodDecl 0x562eb91e9e98 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x562eb91e9e08 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x562eb91ea038 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x562eb91ea1d8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x562eb91ea0e8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x562eb91ea280 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x562eb91ea380 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562eb91ea730 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ea360 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x562eb91ea340 <col:9> 'int' 0
| |-EnumConstantDecl 0x562eb91ea410 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562eb91ea748 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ea3f0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x562eb91ea3d0 <col:14> 'int' 1
| |-EnumConstantDecl 0x562eb91ea4a0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562eb91ea760 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ea480 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x562eb91ea460 <col:14> 'int' 2
| |-EnumConstantDecl 0x562eb91ea530 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562eb91ea778 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ea510 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x562eb91ea4f0 <col:14> 'int' 3
| |-EnumConstantDecl 0x562eb91ea5c0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562eb91ea790 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ea5a0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x562eb91ea580 <col:13> 'int' 4
| |-EnumConstantDecl 0x562eb91ea650 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562eb91ea7a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ea630 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x562eb91ea610 <col:13> 'int' 5
| `-EnumConstantDecl 0x562eb91ea6e0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x562eb91ea7c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb91ea6c0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x562eb91ea6a0 <col:14> 'int' 6
|-CXXMethodDecl 0x562eb91ea828 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x562eb91ea8c8 <col:20>
| `-OptimizeNoneAttr 0x562eb91ea920 <col:30>
|-CXXMethodDecl 0x562eb91eaa18 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x562eb91ea958 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x562eb91eaac0 <col:20>
| `-OptimizeNoneAttr 0x562eb91eab18 <col:30>
|-CXXMethodDecl 0x562eb91eab88 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x562eb91eacb0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x562eb91eae28 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x562eb91ead60 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x562eb91eaef0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x562eb91eafb8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x562eb91eb0f8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x562eb91eb068 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x562eb91eb1a0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x562eb91eb2a0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x562eb91eb4a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91eb280 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x562eb91eb260 <col:23> 'int' 0
| |-EnumConstantDecl 0x562eb91eb330 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x562eb91eb4b8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91eb310 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x562eb91eb2f0 <col:45> 'int' 4
| |-EnumConstantDecl 0x562eb91eb3c0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x562eb91eb4d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91eb3a0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x562eb91eb380 <col:24> 'int' 0
| `-EnumConstantDecl 0x562eb91eb450 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x562eb91eb4e8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb91eb430 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x562eb91eb410 <col:47> 'int' 16
|-CXXMethodDecl 0x562eb91eb5d0 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x562eb91eb748 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x562eb91eb680 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x562eb91eb7f0 <col:20>
| `-OptimizeNoneAttr 0x562eb91eb848 <col:30>
|-CXXMethodDecl 0x562eb91eb898 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x562eb9202980 <col:18, col:36>
|   `-ReturnStmt 0x562eb9202970 <col:20, col:33>
|     `-ImplicitCastExpr 0x562eb9202958 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x562eb9202938 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x562eb9202908 <col:27> '<bound member function type>' ->xanno 0x562eb91e9868
|           `-CXXThisExpr 0x562eb92028f8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x562eb91eb990 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x562eb9202a90 <col:30, col:48>
|   `-ReturnStmt 0x562eb9202a80 <col:32, col:45>
|     `-ImplicitCastExpr 0x562eb9202a68 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x562eb9202a48 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x562eb9202a18 <col:39> '<bound member function type>' ->xanno 0x562eb91e96c8
|           `-CXXThisExpr 0x562eb9202a08 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x562eb91eba78 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x562eb9202c28 <col:24, col:50>
|   `-ReturnStmt 0x562eb9202c18 <col:26, col:47>
|     `-UnaryOperator 0x562eb9202c00 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x562eb9202be0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x562eb9202bc8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562eb9202b78 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x562eb91f7e38
|         |   `-CXXMemberCallExpr 0x562eb9202b58 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x562eb9202b28 <col:34> '<bound member function type>' ->xanno 0x562eb91e9868
|         |       `-CXXThisExpr 0x562eb9202b18 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x562eb9202ba8 <col:46> 'int' 0
|-CXXMethodDecl 0x562eb91ebb68 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x562eb9202df8 <col:36, col:62>
|   `-ReturnStmt 0x562eb9202de8 <col:38, col:59>
|     `-UnaryOperator 0x562eb9202dd0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x562eb9202db0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x562eb9202d98 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562eb9202d10 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x562eb91f7e38
|         |   `-CXXMemberCallExpr 0x562eb9202cf0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x562eb9202cc0 <col:46> '<bound member function type>' ->xanno 0x562eb91e96c8
|         |       `-CXXThisExpr 0x562eb9202cb0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x562eb9202d40 <col:58> 'int' 0
|-CXXMethodDecl 0x562eb91ebc88 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x562eb9202f90 <col:26, col:53>
|   `-ReturnStmt 0x562eb9202f80 <col:28, col:50>
|     `-UnaryOperator 0x562eb9202f68 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x562eb9202f48 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x562eb9202f30 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562eb9202ee0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x562eb91f8138
|         |   `-CXXMemberCallExpr 0x562eb9202ec0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x562eb9202e90 <col:36> '<bound member function type>' ->xanno 0x562eb91e9868
|         |       `-CXXThisExpr 0x562eb9202e80 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x562eb9202f10 <col:49> 'int' 0
|-CXXMethodDecl 0x562eb91ebda8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x562eb9203168 <col:38, col:65>
|   `-ReturnStmt 0x562eb9203158 <col:40, col:62>
|     `-UnaryOperator 0x562eb9203140 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x562eb9203120 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x562eb9203108 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562eb9203078 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x562eb91f8138
|         |   `-CXXMemberCallExpr 0x562eb9203058 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x562eb9203028 <col:48> '<bound member function type>' ->xanno 0x562eb91e96c8
|         |       `-CXXThisExpr 0x562eb9203018 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x562eb92030a8 <col:61> 'int' 0
|-CXXMethodDecl 0x562eb91ebf58 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x562eb91ebe60 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x562eb9203838 <col:34, line:463:5>
|   |-ParenExpr 0x562eb9203680 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x562eb9203650 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x562eb92032b8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9203288 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb92031d8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb92031c0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9203180 <col:23> 'int' lvalue ParmVar 0x562eb91ebe60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb92031a0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9203268 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9203238 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb92031f8 <col:33> 'int' lvalue ParmVar 0x562eb91ebe60 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x562eb9203250 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x562eb9203218 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x562eb9203318 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb92032f8 <col:56> 'int' 0
|   |   `-CallExpr 0x562eb92035b0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x562eb9203598 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9203578 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb92035f0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9203408 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x562eb9203608 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9203438 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9203620 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9203470 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x562eb9203638 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9203560 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9203548 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9203508 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x562eb9203828 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x562eb9203810 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x562eb92037f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x562eb92037c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562eb9203770 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x562eb91f7e38
|         |   `-CXXMemberCallExpr 0x562eb9203750 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x562eb9203720 <col:9> '<bound member function type>' ->xanno 0x562eb91e96c8
|         |       `-CXXThisExpr 0x562eb9203710 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x562eb92037d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x562eb92037a0 <col:21> 'int' lvalue ParmVar 0x562eb91ebe60 'i' 'int'
|-CXXMethodDecl 0x562eb91ec1a8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x562eb91ec018 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x562eb91ec090 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x562eb9203ec8 <col:40, line:472:5>
|   |-ParenExpr 0x562eb9203ce0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x562eb9203cb0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9203990 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9203960 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb92038b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9203898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9203858 <col:23> 'int' lvalue ParmVar 0x562eb91ec018 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9203878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9203940 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9203910 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb92038d0 <col:33> 'int' lvalue ParmVar 0x562eb91ec018 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x562eb9203928 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x562eb92038f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x562eb92039f0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb92039d0 <col:56> 'int' 0
|   |   `-CallExpr 0x562eb9203c10 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x562eb9203bf8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9203bd8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9203c50 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9203a60 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x562eb9203c68 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9203a90 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9203c80 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9203ac8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x562eb9203c98 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9203bc0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9203ba8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9203b68 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x562eb9203ea8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x562eb9203e50 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x562eb9203e20 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x562eb9203dd0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x562eb91f7e38
|     | |   `-CXXMemberCallExpr 0x562eb9203db0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x562eb9203d80 <col:2> '<bound member function type>' ->xanno 0x562eb91e9868
|     | |       `-CXXThisExpr 0x562eb9203d70 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x562eb9203e38 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x562eb9203e00 <col:14> 'int' lvalue ParmVar 0x562eb91ec018 'i' 'int'
|     `-ImplicitCastExpr 0x562eb9203e90 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x562eb9203e70 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x562eb91ec090 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x562eb91ec368 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x562eb91ec270 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x562eb9204648 <col:36, line:485:5>
|   |-ParenExpr 0x562eb92043b0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb9204380 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9204060 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9204030 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9203f40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9203f28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9203ee8 <col:23> 'int' lvalue ParmVar 0x562eb91ec270 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9203f08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9204010 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9203ff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb9203f60 <col:33> 'int' lvalue ParmVar 0x562eb91ec270 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb9203fd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb9203fc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb9203f80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb9203fa0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x562eb92040c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb92040a0 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb92042e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb92042c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb92042a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9204320 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9204130 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x562eb9204338 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9204168 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9204350 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb92041a0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x562eb9204368 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9204290 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9204278 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9204238 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x562eb9204638 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x562eb9204620 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x562eb9204608 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562eb92045d8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x562eb9204578 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x562eb9204548 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562eb92044c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x562eb91f7d10
|             |   `-CXXMemberCallExpr 0x562eb92044a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562eb9204470 <col:61> '<bound member function type>' ->xanno 0x562eb91e96c8
|             |       `-CXXThisExpr 0x562eb9204460 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562eb9204560 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562eb92044f0 <col:74> 'int' lvalue ParmVar 0x562eb91ec270 'i' 'int'
|-CXXMethodDecl 0x562eb91ec5b8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x562eb91ec428 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562eb91ec4a0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x562eb9204d98 <col:42, line:500:5>
|   |-ParenExpr 0x562eb9204b30 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb9204b00 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb92047e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb92047b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb92046c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb92046a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9204668 <col:23> 'int' lvalue ParmVar 0x562eb91ec428 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9204688 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9204790 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9204778 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb92046e0 <col:33> 'int' lvalue ParmVar 0x562eb91ec428 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb9204758 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb9204740 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb9204700 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb9204720 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x562eb9204840 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9204820 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb9204a60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb9204a48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9204a28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9204aa0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb92048b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x562eb9204ab8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb92048e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9204ad0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9204920 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x562eb9204ae8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9204a10 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb92049f8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb92049b8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x562eb9204d78 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x562eb9204d28 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562eb9204cf8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x562eb9204ca0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562eb9204c70 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562eb9204c20 <col:48, col:57> 'char [48]' lvalue ->c 0x562eb91f7d10
|     |     |   `-CXXMemberCallExpr 0x562eb9204c00 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562eb9204bd0 <col:48> '<bound member function type>' ->xanno 0x562eb91e9868
|     |     |       `-CXXThisExpr 0x562eb9204bc0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562eb9204c88 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562eb9204c50 <col:61> 'int' lvalue ParmVar 0x562eb91ec428 'i' 'int'
|     `-ImplicitCastExpr 0x562eb9204d60 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x562eb9204d40 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x562eb91ec4a0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x562eb91ec778 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x562eb91ec680 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x562eb92054f8 <col:35, line:513:5>
|   |-ParenExpr 0x562eb9205208 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb92051d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9204f30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9204f00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9204e10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9204df8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9204db8 <col:23> 'int' lvalue ParmVar 0x562eb91ec680 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9204dd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9204ee0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9204ec8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb9204e30 <col:33> 'int' lvalue ParmVar 0x562eb91ec680 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb9204ea8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb9204e90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb9204e50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb9204e70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x562eb9204f90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9204f70 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb9205138 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb9205120 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9205100 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9205178 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9205000 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x562eb9205190 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9205038 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb92051a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9205070 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x562eb92051c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb92050e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb92050d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9205090 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x562eb92054e8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x562eb92054d0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x562eb92054b8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562eb9205488 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x562eb9205400 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x562eb92053d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562eb9205380 <col:60, col:69> 'char const[48]' lvalue ->c 0x562eb91f7d10
|             |   `-CXXMemberCallExpr 0x562eb9205360 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562eb9205330 <col:60> '<bound member function type>' ->xanno 0x562eb91e96c8
|             |       `-CXXThisExpr 0x562eb9205320 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562eb92053e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562eb92053b0 <col:73> 'int' lvalue ParmVar 0x562eb91ec680 'i' 'int'
|-CXXMethodDecl 0x562eb91ec9c8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x562eb91ec838 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562eb91ec8b0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x562eb9205c28 <col:41, line:528:5>
|   |-ParenExpr 0x562eb92059c0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb9205990 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb92056a8 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9205678 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9205588 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9205570 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9205518 <col:23> 'int' lvalue ParmVar 0x562eb91ec838 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9205550 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9205658 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9205640 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb92055a8 <col:33> 'int' lvalue ParmVar 0x562eb91ec838 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb9205620 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb9205608 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb92055c8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb92055e8 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x562eb9205708 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb92056e8 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb92058f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb92058d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb92058b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9205930 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9205778 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x562eb9205948 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb92057b0 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9205960 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb92057e8 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x562eb9205978 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb92058a0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9205888 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9205848 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x562eb9205c08 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x562eb9205bb8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562eb9205b88 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x562eb9205b30 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562eb9205b00 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562eb9205ab0 <col:47, col:56> 'char [48]' lvalue ->c 0x562eb91f7d10
|     |     |   `-CXXMemberCallExpr 0x562eb9205a90 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562eb9205a60 <col:47> '<bound member function type>' ->xanno 0x562eb91e9868
|     |     |       `-CXXThisExpr 0x562eb9205a50 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562eb9205b18 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562eb9205ae0 <col:60> 'int' lvalue ParmVar 0x562eb91ec838 'i' 'int'
|     `-ImplicitCastExpr 0x562eb9205bf0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x562eb9205bd0 <col:65> 'int16_t':'short' lvalue ParmVar 0x562eb91ec8b0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x562eb91ecb88 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x562eb91eca90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x562eb92062f8 <col:36, line:541:5>
|   |-ParenExpr 0x562eb9206098 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb9206068 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9205dc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9205d90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9205ca0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9205c88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9205c48 <col:23> 'int' lvalue ParmVar 0x562eb91eca90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9205c68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9205d70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9205d58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb9205cc0 <col:33> 'int' lvalue ParmVar 0x562eb91eca90 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb9205d38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb9205d20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb9205ce0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb9205d00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x562eb9205e20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9205e00 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb9205fc8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb9205fb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9205f90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9206008 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9205e90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x562eb9206020 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9205ec8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9206038 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9205f00 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x562eb9206050 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9205f78 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9205f60 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9205f20 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x562eb92062e8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x562eb92062d0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x562eb92062b8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562eb9206288 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x562eb9206230 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x562eb9206200 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562eb92061b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x562eb91f7d10
|             |   `-CXXMemberCallExpr 0x562eb9206190 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562eb9206160 <col:61> '<bound member function type>' ->xanno 0x562eb91e96c8
|             |       `-CXXThisExpr 0x562eb9206150 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562eb9206218 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562eb92061e0 <col:74> 'int' lvalue ParmVar 0x562eb91eca90 'i' 'int'
|-CXXMethodDecl 0x562eb91ecd58 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x562eb91ecc48 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x562eb91eccc0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562eb91ece08 <col:20>
| `-OptimizeNoneAttr 0x562eb91ece60 <col:30>
|-CXXMethodDecl 0x562eb91ecf98 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x562eb91ecea0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x562eb92069c8 <col:35, line:562:5>
|   |-ParenExpr 0x562eb9206768 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb9206738 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9206490 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9206460 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9206370 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9206358 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9206318 <col:23> 'int' lvalue ParmVar 0x562eb91ecea0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9206338 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9206440 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9206428 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb9206390 <col:33> 'int' lvalue ParmVar 0x562eb91ecea0 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb9206408 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb92063f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb92063b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb92063d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x562eb92064f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb92064d0 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb9206698 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb9206680 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9206660 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb92066d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9206560 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x562eb92066f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9206598 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9206708 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb92065d0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x562eb9206720 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9206648 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9206630 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb92065f0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x562eb92069b8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x562eb92069a0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x562eb9206988 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562eb9206958 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x562eb9206900 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x562eb92068d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562eb9206880 <col:60, col:69> 'char const[48]' lvalue ->c 0x562eb91f7d10
|             |   `-CXXMemberCallExpr 0x562eb9206860 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562eb9206830 <col:60> '<bound member function type>' ->xanno 0x562eb91e96c8
|             |       `-CXXThisExpr 0x562eb9206820 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562eb92068e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562eb92068b0 <col:73> 'int' lvalue ParmVar 0x562eb91ecea0 'i' 'int'
|-CXXMethodDecl 0x562eb91ed1a8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x562eb91ed058 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562eb91ed0d0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x562eb92070a8 <col:41, line:577:5>
|   |-ParenExpr 0x562eb9206e38 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb9206e08 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9206b60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9206b30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9206a40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9206a28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb92069e8 <col:23> 'int' lvalue ParmVar 0x562eb91ed058 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9206a08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9206b10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9206af8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb9206a60 <col:33> 'int' lvalue ParmVar 0x562eb91ed058 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb9206ad8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb9206ac0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb9206a80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb9206aa0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x562eb9206bc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9206ba0 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb9206d68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb9206d50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9206d30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9206da8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9206c30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x562eb9206dc0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9206c68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9206dd8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9206ca0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x562eb9206df0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9206d18 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9206d00 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9206cc0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x562eb9207088 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x562eb9207038 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562eb9207008 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x562eb9206fa8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562eb9206f78 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562eb9206f28 <col:47, col:56> 'char [48]' lvalue ->c 0x562eb91f7d10
|     |     |   `-CXXMemberCallExpr 0x562eb9206f08 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562eb9206ed8 <col:47> '<bound member function type>' ->xanno 0x562eb91e9868
|     |     |       `-CXXThisExpr 0x562eb9206ec8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562eb9206f90 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562eb9206f58 <col:60> 'int' lvalue ParmVar 0x562eb91ed058 'i' 'int'
|     `-ImplicitCastExpr 0x562eb9207070 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x562eb9207050 <col:65> 'int32_t':'int' lvalue ParmVar 0x562eb91ed0d0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x562eb91ed368 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x562eb91ed270 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x562eb92077d8 <col:36, line:591:5>
|   |-ParenExpr 0x562eb9207518 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb92074e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9207240 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9207210 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9207120 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9207108 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb92070c8 <col:23> 'int' lvalue ParmVar 0x562eb91ed270 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb92070e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb92071f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb92071d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb9207140 <col:33> 'int' lvalue ParmVar 0x562eb91ed270 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb92071b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb92071a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb9207160 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb9207180 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x562eb92072a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9207280 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb9207448 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb9207430 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9207410 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9207488 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9207310 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x562eb92074a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9207348 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb92074b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9207380 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x562eb92074d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb92073f8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb92073e0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb92073a0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x562eb92077c8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x562eb92077b0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x562eb9207798 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562eb9207768 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x562eb92076e0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x562eb92076b0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562eb9207660 <col:61, col:70> 'char const[48]' lvalue ->c 0x562eb91f7d10
|             |   `-CXXMemberCallExpr 0x562eb9207640 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562eb9207610 <col:61> '<bound member function type>' ->xanno 0x562eb91e96c8
|             |       `-CXXThisExpr 0x562eb9207600 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562eb92076c8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562eb9207690 <col:74> 'int' lvalue ParmVar 0x562eb91ed270 'i' 'int'
|-CXXMethodDecl 0x562eb91ed5b8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x562eb91ed428 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562eb91ed4a0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x562eb9207eb8 <col:42, line:606:5>
|   |-ParenExpr 0x562eb9207c48 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x562eb9207c18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9207970 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9207940 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9207850 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9207838 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb92077f8 <col:23> 'int' lvalue ParmVar 0x562eb91ed428 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9207818 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9207920 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562eb9207908 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb9207870 <col:33> 'int' lvalue ParmVar 0x562eb91ed428 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb92078e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb92078d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb9207890 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562eb92078b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x562eb92079d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb92079b0 <col:60> 'int' 0
|   |   `-CallExpr 0x562eb9207b78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562eb9207b60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9207b40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9207bb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9207a40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x562eb9207bd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9207a78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9207be8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9207ab0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x562eb9207c00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9207b28 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9207b10 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9207ad0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x562eb9207e98 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x562eb9207e48 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562eb9207e18 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x562eb9207db8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562eb9207d88 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562eb9207d38 <col:48, col:57> 'char [48]' lvalue ->c 0x562eb91f7d10
|     |     |   `-CXXMemberCallExpr 0x562eb9207d18 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562eb9207ce8 <col:48> '<bound member function type>' ->xanno 0x562eb91e9868
|     |     |       `-CXXThisExpr 0x562eb9207cd8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562eb9207da0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562eb9207d68 <col:61> 'int' lvalue ParmVar 0x562eb91ed428 'i' 'int'
|     `-ImplicitCastExpr 0x562eb9207e80 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x562eb9207e60 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x562eb91ed4a0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x562eb91ed750 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x562eb91ed680 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x562eb9208728 <col:33, line:620:5>
|   |-ParenExpr 0x562eb92084a0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x562eb9208470 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x562eb92080c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9208090 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb9207f30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9207f18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9207ed8 <col:23> 'int' lvalue ParmVar 0x562eb91ed680 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9207ef8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb9208070 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x562eb9208058 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb9207f50 <col:33> 'int' lvalue ParmVar 0x562eb91ed680 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb9208038 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb9208020 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb9207f70 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x562eb9207ff8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x562eb9207fe0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x562eb9207fa8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x562eb9208120 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9208100 <col:79> 'int' 0
|   |   `-CallExpr 0x562eb92083d0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x562eb92083b8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9208398 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9208410 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9208208 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x562eb9208428 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9208250 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9208440 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9208288 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x562eb9208458 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9208380 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9208368 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9208328 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x562eb9208718 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x562eb9208700 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x562eb92086e8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562eb92086b8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x562eb9208630 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x562eb9208600 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562eb92085b0 <col:67, col:76> 'char const[48]' lvalue ->c 0x562eb91f7d10
|             |   `-CXXMemberCallExpr 0x562eb9208590 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562eb9208560 <col:67> '<bound member function type>' ->xanno 0x562eb91e96c8
|             |       `-CXXThisExpr 0x562eb9208550 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562eb9208618 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562eb92085e0 <col:80> 'int' lvalue ParmVar 0x562eb91ed680 'i' 'int'
|-CXXMethodDecl 0x562eb91ed968 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x562eb91ed810 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562eb91ed890 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x562eb9208f50 <col:45, line:635:5>
|   |-ParenExpr 0x562eb9208c98 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x562eb9208c68 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x562eb9208930 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562eb9208900 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562eb92087a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562eb9208788 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562eb9208748 <col:23> 'int' lvalue ParmVar 0x562eb91ed810 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562eb9208768 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562eb92088e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x562eb92088c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562eb92087c0 <col:33> 'int' lvalue ParmVar 0x562eb91ed810 'i' 'int'
|   |   |     `-BinaryOperator 0x562eb92088a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562eb9208890 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562eb92087e0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562eb91e9ab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x562eb9208868 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x562eb9208850 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x562eb9208818 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x562eb9208990 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562eb9208970 <col:79> 'int' 0
|   |   `-CallExpr 0x562eb9208bc8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x562eb9208bb0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562eb9208b90 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562eb9208c08 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9208a00 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x562eb9208c20 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562eb9208a48 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562eb9208c38 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562eb9208a80 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x562eb9208c50 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562eb9208b78 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562eb9208b60 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562eb9208b18 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x562eb9208f30 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x562eb9208e98 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562eb9208e68 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x562eb9208e08 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562eb9208dd8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562eb9208d88 <col:54, col:63> 'char [48]' lvalue ->c 0x562eb91f7d10
|     |     |   `-CXXMemberCallExpr 0x562eb9208d68 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562eb9208d38 <col:54> '<bound member function type>' ->xanno 0x562eb91e9868
|     |     |       `-CXXThisExpr 0x562eb9208d28 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562eb9208df0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562eb9208db8 <col:67> 'int' lvalue ParmVar 0x562eb91ed810 'i' 'int'
|     `-CXXConstCastExpr 0x562eb9208f00 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x562eb9208ee8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x562eb9208eb0 <col:91> 'const void *' lvalue ParmVar 0x562eb91ed890 'x' 'const void *'
|-CXXMethodDecl 0x562eb91eda38 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x562eb9208fd8 <col:34, line:640:5>
|   `-ReturnStmt 0x562eb9208fc8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x562eb9208fb0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x562eb9208f80 <col:16> 'Packet *' lvalue ->_data_packet 0x562eb91f88c8
|         `-CXXThisExpr 0x562eb9208f70 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x562eb91edb78 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x562eb91edae8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562eb9202088 <col:46> 'bool' true
|-CXXMethodDecl 0x562eb91edcf8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x562eb91edc30 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x562eb91edda0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x562eb91ee550 <line:660:22> "" ""
| |-EnumConstantDecl 0x562eb91edea0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee5c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ede80 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x562eb91ede60 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x562eb91e2ee0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x562eb91edf30 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee5d8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91edf10 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x562eb91edef0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x562eb91e2f70 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x562eb91edfc0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee5f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91edfa0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x562eb91edf80 <col:21> 'int' 0
| |-EnumConstantDecl 0x562eb91ee050 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee608 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ee030 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x562eb91ee010 <col:19> 'int' 16
| |-EnumConstantDecl 0x562eb91ee0e0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee620 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ee0c0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x562eb91ee0a0 <col:21> 'int' 16
| |-EnumConstantDecl 0x562eb91ee170 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee638 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ee150 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x562eb91ee130 <col:19> 'int' 32
| |-EnumConstantDecl 0x562eb91ee200 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee650 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ee1e0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x562eb91ee1c0 <col:19> 'int' EnumConstant 0x562eb91ee050 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x562eb91ee290 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee668 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ee270 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x562eb91ee250 <col:19> 'int' EnumConstant 0x562eb91ee170 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x562eb91ee360 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee680 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ee340 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x562eb91ee320 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x562eb91ee2e0 <col:23> 'int' EnumConstant 0x562eb91ee290 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x562eb91ee300 <col:40> 'int' 2
| |-EnumConstantDecl 0x562eb91ee430 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562eb91ee698 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562eb91ee410 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x562eb91ee3f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x562eb91ee3b0 <col:23> 'int' EnumConstant 0x562eb91ee290 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x562eb91ee3d0 <col:40> 'int' 4
| `-EnumConstantDecl 0x562eb91ee500 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x562eb91ee6b0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb91ee4e0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x562eb91ee4c0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x562eb91ee480 <col:23> 'int' EnumConstant 0x562eb91ee290 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x562eb91ee4a0 <col:40> 'int' 8
|-CXXMethodDecl 0x562eb91ee6f0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x562eb91ee790 <col:68> "" ""
|-CXXMethodDecl 0x562eb91ee828 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x562eb91ee8c8 <col:45> "" ""
|-CXXMethodDecl 0x562eb91ee960 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x562eb91eea00 <col:57> "" ""
|-CXXMethodDecl 0x562eb91eea98 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x562eb91eeb38 <col:45> "" ""
|-CXXMethodDecl 0x562eb91eebd0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x562eb91eec70 <col:57> "" ""
|-CXXMethodDecl 0x562eb91eed00 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x562eb91eeda0 <col:51> "" ""
|-CXXMethodDecl 0x562eb91eee30 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x562eb91eeed0 <col:63> "" ""
|-CXXMethodDecl 0x562eb91eef60 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x562eb91ef000 <col:53> "" ""
|-CXXMethodDecl 0x562eb91ef090 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x562eb91ef130 <col:65> "" ""
|-CXXMethodDecl 0x562eb91ef248 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x562eb91ef1b8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x562eb91ef2f0 <col:61> "" ""
|-CXXMethodDecl 0x562eb91ef488 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x562eb91ef378 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x562eb91ef3f0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x562eb91ef538 <col:67> "" ""
|-CXXMethodDecl 0x562eb91f52a0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x562eb91f5210 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x562eb91f5348 <col:63> "" ""
|-CXXMethodDecl 0x562eb91f54e0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x562eb91f53d0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x562eb91f5448 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x562eb91f5590 <col:69> "" ""
|-CXXMethodDecl 0x562eb91f56a8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x562eb91f5618 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x562eb91f5750 <col:63> "" ""
|-CXXMethodDecl 0x562eb91f58e8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x562eb91f57d8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x562eb91f5850 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562eb91f5998 <col:69> "" ""
|-CXXMethodDecl 0x562eb91f5ab0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x562eb91f5a20 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x562eb91f5b58 <col:62> "" ""
|-CXXMethodDecl 0x562eb91f5cf0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x562eb91f5be0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x562eb91f5c58 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x562eb91f5da0 <col:68> "" ""
|-CXXMethodDecl 0x562eb91f5eb8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x562eb91f5e28 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x562eb91f5f60 <col:63> "" ""
|-CXXMethodDecl 0x562eb91f60f8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x562eb91f5fe8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x562eb91f6060 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x562eb91f61a8 <col:69> "" ""
|-CXXMethodDecl 0x562eb91f6238 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x562eb91f62d8 <col:64> "" ""
|-CXXMethodDecl 0x562eb91f6368 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x562eb91f6408 <col:52> "" ""
|-CXXMethodDecl 0x562eb91f6498 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x562eb91f6538 <col:67> "" ""
|-CXXMethodDecl 0x562eb91f65c8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x562eb91f6668 <col:55> "" ""
|-CXXMethodDecl 0x562eb91f6780 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x562eb91f66f0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x562eb91f6828 <col:58> "" ""
|-CXXMethodDecl 0x562eb91f69c0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x562eb91f68b0 <col:33> col:36 'int'
| |-ParmVarDecl 0x562eb91f6928 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x562eb91f6a70 <col:62> "" ""
|-CXXMethodDecl 0x562eb91f6b88 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x562eb91f6af8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x562eb91f6c30 <col:58> "" ""
|-CXXMethodDecl 0x562eb91f6dc8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x562eb91f6cb8 <col:33> col:36 'int'
| |-ParmVarDecl 0x562eb91f6d30 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x562eb91f6e78 <col:62> "" ""
|-CXXMethodDecl 0x562eb91f6f90 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x562eb91f6f00 <col:34> col:37 'int'
| `-DeprecatedAttr 0x562eb91f7038 <col:60> "" ""
|-CXXMethodDecl 0x562eb91f71d0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x562eb91f70c0 <col:34> col:37 'int'
| |-ParmVarDecl 0x562eb91f7138 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x562eb91f7280 <col:64> "" ""
|-CXXMethodDecl 0x562eb91f7398 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x562eb91f7308 <col:32> col:35 'int'
| `-DeprecatedAttr 0x562eb91f7440 <col:58> "" ""
|-CXXMethodDecl 0x562eb91f75d8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x562eb91f74c8 <col:33> col:36 'int'
| |-ParmVarDecl 0x562eb91f7540 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x562eb91f7688 <col:62> "" ""
|-CXXMethodDecl 0x562eb91f77a0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x562eb91f7710 <col:33> col:36 'int'
| `-DeprecatedAttr 0x562eb91f7848 <col:59> "" ""
|-CXXMethodDecl 0x562eb91f79e0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x562eb91f78d0 <col:33> col:36 'int'
| |-ParmVarDecl 0x562eb91f7948 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562eb91f7a90 <col:63> "" ""
|-AccessSpecDecl 0x562eb91f7b00 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x562eb91f7b28 prev 0x562eb91e95a0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562eb91f7c20 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x562eb91f7d10 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x562eb91f7e38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x562eb91f7fb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x562eb91f8138 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x562eb91f82b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x562eb9209158 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x562eb9209a18 <col:11>
| |-CXXDestructorDecl 0x562eb9209230 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x562eb9209368 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x562eb9209368
| | `-ParmVarDecl 0x562eb9209478 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x562eb9209560 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x562eb9209560
| | `-ParmVarDecl 0x562eb9209678 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x562eb920c3a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x562eb920c4b8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x562eb920c738 <col:11>
| |   `-ReturnStmt 0x562eb920c728 <col:11>
| |     `-UnaryOperator 0x562eb920c710 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x562eb920c700 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x562eb920c528 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x562eb920c528
|   `-ParmVarDecl 0x562eb920c638 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x562eb91f8320 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562eb91f8438 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x562eb91f84d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x562eb91f8540 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x562eb91f85a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x562eb91f8610 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x562eb91f8670 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x562eb91f8730 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x562eb91f8790 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x562eb91f87f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x562eb9209068 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x562eb91f84d8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x562eb9209a28 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x562eb9209a80 <col:12>
| |-CXXConstructorDecl 0x562eb92096e8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x562eb92096e8
| | `-ParmVarDecl 0x562eb92097f8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x562eb9209898 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x562eb9209898
| | `-ParmVarDecl 0x562eb92099a8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x562eb920ba90 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x562eb91f8868 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x562eb91f88c8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x562eb91f8930 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x562eb91f8998 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x562eb91f8a00 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x562eb91f8a68 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x562eb91f8ac8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x562eb91f8b28 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x562eb91f8b90 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x562eb91f8c18 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x562eb91f8868 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x562eb9209000 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x562eb91f8ac8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x562eb9209a90 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x562eb9209af0 <col:21, line:755:5>
|-CXXConstructorDecl 0x562eb91f8db8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x562eb91f8cf8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x562eb91f8eb0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x562eb91f9098 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x562eb91f8fa0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x562eb92016d8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x562eb91f9150 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562eb9201540 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562eb92015b8 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb92018f8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x562eb92017a8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x562eb9201820 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x562eb9201bc8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x562eb92019b8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x562eb9201a30 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x562eb9201aa8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x562eb9201d20 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x562eb9201c90 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562eb9201e68 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x562eb9201dd8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x562eb9201f60 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb8ff28c0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x562eb8ff29d8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x562eb8ff2a78 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x562eb8ff2ad8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x562eb8ff2b38 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x562eb8ff2be8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb8ff2ef0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562eb8ff3008 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x562eb8ff30b0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x562eb8ff3118 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x562eb8ff31a8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x562eb8ff9240 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x562eb8ff9678 <col:12>
|-CXXConstructorDecl 0x562eb8ff9348 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x562eb8ff9458 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x562eb8ff30b0 'data' 'const char *'
| | `-ImplicitCastExpr 0x562eb8ffbc00 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x562eb8ffbbd0 <col:12> 'const char *const' lvalue .data 0x562eb8ff30b0
| |     `-DeclRefExpr 0x562eb8ffbbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb8ff9458 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x562eb8ff3118 'length' 'int'
| | `-ImplicitCastExpr 0x562eb8ffbc90 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x562eb8ffbc60 <col:12> 'const int' lvalue .length 0x562eb8ff3118
| |     `-DeclRefExpr 0x562eb8ffbc40 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb8ff9458 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x562eb8ff31a8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x562eb8ffbd20 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x562eb8ffbcf0 <col:12> 'String::memo_t *const' lvalue .memo 0x562eb8ff31a8
| |     `-DeclRefExpr 0x562eb8ffbcd0 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb8ff9458 '' 'const String::rep_t &'
| `-CompoundStmt 0x562eb8ffbd78 <col:12>
|-CXXConstructorDecl 0x562eb8ff94f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x562eb8ff94f8
| `-ParmVarDecl 0x562eb8ff9608 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x562eb8ffeb70 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x562eb900a5f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x562eb900a708 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x562eb900ac20 <col:12>
|   |-BinaryOperator 0x562eb900aa38 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x562eb900a9f0 <col:12> 'const char *' lvalue ->data 0x562eb8ff30b0
|   | | `-CXXThisExpr 0x562eb900a9e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x562eb900aa20 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x562eb900a9b0 <col:12> 'const char *const' lvalue .data 0x562eb8ff30b0
|   |     `-DeclRefExpr 0x562eb900a990 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb900a708 '' 'const String::rep_t &'
|   |-BinaryOperator 0x562eb900ab00 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x562eb900aab8 <col:12> 'int' lvalue ->length 0x562eb8ff3118
|   | | `-CXXThisExpr 0x562eb900aaa8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x562eb900aae8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x562eb900aa78 <col:12> 'const int' lvalue .length 0x562eb8ff3118
|   |     `-DeclRefExpr 0x562eb900aa58 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb900a708 '' 'const String::rep_t &'
|   |-BinaryOperator 0x562eb900abc8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x562eb900ab80 <col:12> 'String::memo_t *' lvalue ->memo 0x562eb8ff31a8
|   | | `-CXXThisExpr 0x562eb900ab70 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x562eb900abb0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x562eb900ab40 <col:12> 'String::memo_t *const' lvalue .memo 0x562eb8ff31a8
|   |     `-DeclRefExpr 0x562eb900ab20 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb900a708 '' 'const String::rep_t &'
|   `-ReturnStmt 0x562eb900ac10 <col:12>
|     `-UnaryOperator 0x562eb900abf8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x562eb900abe8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x562eb900a778 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x562eb900a778
  `-ParmVarDecl 0x562eb900a888 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562eb8fe9e70 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562eb8fe9f88 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x562eb8fea018 <col:16, col:22> col:16 public
|-TypedefDecl 0x562eb8fea058 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x562eb8cbfdc0 'const char *'
|   `-QualType 0x562eb8cbf311 'const char' const
|     `-BuiltinType 0x562eb8cbf310 'char'
|-TypedefDecl 0x562eb8fea0e0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x562eb8fea0b0 'String::const_iterator' sugar
|   |-Typedef 0x562eb8fea058 'const_iterator'
|   `-PointerType 0x562eb8cbfdc0 'const char *'
|     `-QualType 0x562eb8cbf311 'const char' const
|       `-BuiltinType 0x562eb8cbf310 'char'
|-TypedefDecl 0x562eb8fea250 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x562eb8fea1c0 'int (String::*)() const'
|   |-RecordType 0x562eb8fe9f00 'String'
|   | `-CXXRecord 0x562eb8fe9e70 'String'
|   `-ParenType 0x562eb8fea160 'int () const' sugar
|     `-FunctionProtoType 0x562eb8fbdd40 'int () const' const cdecl
|       `-BuiltinType 0x562eb8cbf370 'int'
|-TypedefDecl 0x562eb8fea2b8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x562eb8e12680 'int64_t' sugar
|   |-Typedef 0x562eb8d282d0 'int64_t'
|   `-TypedefType 0x562eb8d014d0 '__int64_t' sugar
|     |-Typedef 0x562eb8d010a8 '__int64_t'
|     `-BuiltinType 0x562eb8cbf390 'long'
|-TypedefDecl 0x562eb8fea320 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x562eb8e125a0 'uint64_t' sugar
|   |-Typedef 0x562eb8d28470 'uint64_t'
|   `-TypedefType 0x562eb8d01560 '__uint64_t' sugar
|     |-Typedef 0x562eb8d01118 '__uint64_t'
|     `-BuiltinType 0x562eb8cbf430 'unsigned long'
|-TypedefDecl 0x562eb8fea3b0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x562eb8fea380 'String::intmax_t' sugar
|   |-Typedef 0x562eb8fea2b8 'intmax_t'
|   `-TypedefType 0x562eb8e12680 'int64_t' sugar
|     |-Typedef 0x562eb8d282d0 'int64_t'
|     `-TypedefType 0x562eb8d014d0 '__int64_t' sugar
|       |-Typedef 0x562eb8d010a8 '__int64_t'
|       `-BuiltinType 0x562eb8cbf390 'long'
|-TypedefDecl 0x562eb8fea440 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x562eb8fea410 'String::uintmax_t' sugar
|   |-Typedef 0x562eb8fea320 'uintmax_t'
|   `-TypedefType 0x562eb8e125a0 'uint64_t' sugar
|     |-Typedef 0x562eb8d28470 'uint64_t'
|     `-TypedefType 0x562eb8d01560 '__uint64_t' sugar
|       |-Typedef 0x562eb8d01118 '__uint64_t'
|       `-BuiltinType 0x562eb8cbf430 'unsigned long'
|-CXXConstructorDecl 0x562eb8fea500 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x562eb8fea6a8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x562eb8fea5e8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x562eb8fea858 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x562eb8fea798 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x562eb8fea9b0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x562eb8fea920 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x562eb8feabc8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x562eb8feaa78 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x562eb8feaaf8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x562eb8feade8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x562eb8feac98 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x562eb8fead18 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x562eb8feb008 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x562eb8feaeb8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x562eb8feaf38 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x562eb8feb228 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x562eb8feb0d8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x562eb8feb158 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x562eb8feb3b8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x562eb8feb2f0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x562eb8feb538 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x562eb8feb478 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x562eb8feb6c8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x562eb8feb600 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x562eb8feb820 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x562eb8feb790 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x562eb8feb978 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x562eb8feb8e8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x562eb8febad0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x562eb8feba40 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x562eb8febc58 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x562eb8febb98 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x562eb8febde8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x562eb8febd20 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x562eb8febf78 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x562eb8febeb0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x562eb8fec108 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x562eb8fec040 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x562eb8fec200 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x562eb8fec328 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x562eb8fec4b8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x562eb8fec3e0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x562eb8fec608 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x562eb8fec578 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x562eb8fec6b0 <col:63> "" ""
|-CXXMethodDecl 0x562eb8fec7f8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x562eb8fec738 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x562eb8feca08 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x562eb8fec8b8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x562eb8fec938 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x562eb8fecc28 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x562eb8fecad0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x562eb8fecb50 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x562eb8fecf08 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x562eb8fecce8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x562eb8fecd68 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x562eb8ff8d10 <col:55> 'int' 10
| `-ParmVarDecl 0x562eb8fecde0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562eb8ff8d30 <col:76> 'bool' true
|-CXXMethodDecl 0x562eb8fed1e8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x562eb8fecfd0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x562eb8fed050 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x562eb8ff8d40 <col:56> 'int' 10
| `-ParmVarDecl 0x562eb8fed0c8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562eb8ff8d60 <col:77> 'bool' true
|-CXXMethodDecl 0x562eb8fed2f0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x562eb8fed3b8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x562eb8fed480 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x562eb8fed520 <col:20>
| `-OptimizeNoneAttr 0x562eb8fed578 <col:30>
|-CXXConversionDecl 0x562eb8fed668 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x562eb8fed738 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x562eb8fed7f8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x562eb8fed8e8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x562eb8fed9a8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x562eb8fedb28 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x562eb8feda60 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x562eb8fedc78 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x562eb8fedbe8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x562eb8fedd68 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x562eb8fede28 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x562eb8fee078 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x562eb8fedee0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x562eb8fedf60 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x562eb8fee2d8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x562eb8fee140 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x562eb8fee1c0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x562eb8fee3a8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x562eb8fee5b8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x562eb8fee460 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x562eb8fee4e0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x562eb8fee7d8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x562eb8fee680 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x562eb8fee700 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x562eb8fee968 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x562eb8fee8a0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x562eb8feea58 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x562eb8feebc8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x562eb8feeb08 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x562eb8feedd8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x562eb8feec88 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x562eb8feed08 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x562eb8feeff0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x562eb8feee98 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x562eb8feef10 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x562eb8fef180 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x562eb8fef0b0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x562eb8fef3a0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x562eb8fef240 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x562eb8fef2c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x562eb8fef4f0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x562eb8fef460 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x562eb8fef6c8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x562eb8fef5b0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x562eb8fef630 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x562eb8fef818 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x562eb8fef788 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x562eb8fefa30 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x562eb8fef8d0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x562eb8fef950 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x562eb8ff8d70 <col:39> 'int' 0
|-CXXMethodDecl 0x562eb8fefc50 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x562eb8fefaf0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x562eb8fefb70 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x562eb8ff8d90 <col:48> 'int' 0
|-CXXMethodDecl 0x562eb8fefe30 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x562eb8fefd10 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x562eb8fefd90 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x562eb8ff8db0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x562eb8feff00 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x562eb8feffc0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x562eb8ff0080 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x562eb8ff0140 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x562eb8ff0200 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x562eb8ff03a8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x562eb8ff02b0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x562eb8ff0538 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x562eb8ff0470 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x562eb8ff06b8 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x562eb8ff05f8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x562eb8ff0838 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x562eb8ff0770 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x562eb8ff0980 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x562eb8ff08f0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x562eb8ff0ad0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x562eb8ff0a40 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x562eb8ff0ca8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x562eb8ff0b90 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x562eb8ff0c10 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x562eb8ff0e88 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x562eb8ff0d70 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x562eb8ff0df0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x562eb8ff0fd8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x562eb8ff0f48 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x562eb8ff11e8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x562eb8ff1098 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x562eb8ff1118 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x562eb8ff1348 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x562eb8ff12b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x562eb8ff14a0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x562eb8ff1408 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x562eb8ff1548 <col:57> "" ""
|-CXXMethodDecl 0x562eb8ff1658 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x562eb8ff15c8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x562eb8ff17a8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x562eb8ff1718 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x562eb8ff1928 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x562eb8ff1860 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x562eb8ff19f0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x562eb8ff1ab0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x562eb8ff1b70 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x562eb8ff1c10 <col:49> "" ""
|-CXXMethodDecl 0x562eb8ff1ca0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x562eb8ff1d60 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x562eb8ff1e50 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x562eb8ff1f18 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x562eb8ff1fd8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x562eb8ff2098 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x562eb8ff2190 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x562eb8ff2258 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x562eb8ff2320 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x562eb8ff24f8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x562eb8ff23d8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x562eb8ff2458 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x562eb8ff2720 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x562eb8ff25c0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x562eb8ff2640 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x562eb8ff2830 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x562eb8ff2898 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x562eb8ff28c0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x562eb8ff29d8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x562eb8ff2a78 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x562eb8ff2ad8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x562eb8ff2b38 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x562eb8ff2be8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x562eb8ff2c50 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x562eb8ff2e88 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x562eb8ff2ed8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb8ff2e68 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x562eb8ff2d78 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x562eb8ff2d20 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x562eb8ff2d60 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x562eb8ff2d40 <col:32> 'int' 8
|-CXXRecordDecl 0x562eb8ff2ef0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562eb8ff3008 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x562eb8ff30b0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x562eb8ff3118 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x562eb8ff31a8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x562eb8ff9240 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x562eb8ff9678 <col:12>
| |-CXXConstructorDecl 0x562eb8ff9348 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x562eb8ff9458 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x562eb8ff30b0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x562eb8ffbc00 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x562eb8ffbbd0 <col:12> 'const char *const' lvalue .data 0x562eb8ff30b0
| | |     `-DeclRefExpr 0x562eb8ffbbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb8ff9458 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x562eb8ff3118 'length' 'int'
| | | `-ImplicitCastExpr 0x562eb8ffbc90 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x562eb8ffbc60 <col:12> 'const int' lvalue .length 0x562eb8ff3118
| | |     `-DeclRefExpr 0x562eb8ffbc40 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb8ff9458 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x562eb8ff31a8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x562eb8ffbd20 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x562eb8ffbcf0 <col:12> 'String::memo_t *const' lvalue .memo 0x562eb8ff31a8
| | |     `-DeclRefExpr 0x562eb8ffbcd0 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb8ff9458 '' 'const String::rep_t &'
| | `-CompoundStmt 0x562eb8ffbd78 <col:12>
| |-CXXConstructorDecl 0x562eb8ff94f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x562eb8ff94f8
| | `-ParmVarDecl 0x562eb8ff9608 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x562eb8ffeb70 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x562eb900a5f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x562eb900a708 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x562eb900ac20 <col:12>
| |   |-BinaryOperator 0x562eb900aa38 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x562eb900a9f0 <col:12> 'const char *' lvalue ->data 0x562eb8ff30b0
| |   | | `-CXXThisExpr 0x562eb900a9e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x562eb900aa20 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x562eb900a9b0 <col:12> 'const char *const' lvalue .data 0x562eb8ff30b0
| |   |     `-DeclRefExpr 0x562eb900a990 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb900a708 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x562eb900ab00 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x562eb900aab8 <col:12> 'int' lvalue ->length 0x562eb8ff3118
| |   | | `-CXXThisExpr 0x562eb900aaa8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x562eb900aae8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x562eb900aa78 <col:12> 'const int' lvalue .length 0x562eb8ff3118
| |   |     `-DeclRefExpr 0x562eb900aa58 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb900a708 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x562eb900abc8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x562eb900ab80 <col:12> 'String::memo_t *' lvalue ->memo 0x562eb8ff31a8
| |   | | `-CXXThisExpr 0x562eb900ab70 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x562eb900abb0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x562eb900ab40 <col:12> 'String::memo_t *const' lvalue .memo 0x562eb8ff31a8
| |   |     `-DeclRefExpr 0x562eb900ab20 <col:12> 'const String::rep_t' lvalue ParmVar 0x562eb900a708 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x562eb900ac10 <col:12>
| |     `-UnaryOperator 0x562eb900abf8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x562eb900abe8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x562eb900a778 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x562eb900a778
|   `-ParmVarDecl 0x562eb900a888 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x562eb8ff3220 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x562eb8ff3468 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x562eb8ff3288 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x562eb8ff3308 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x562eb8ff3380 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x562eb8ff9200 <col:79, line:261:5>
|   |-BinaryOperator 0x562eb8ff8e78 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x562eb8ff8e10 <col:2, col:5> 'const char *' lvalue .data 0x562eb8ff30b0
|   | | `-MemberExpr 0x562eb8ff8de0 <col:2> 'String::rep_t' lvalue ->_r 0x562eb8ff3220
|   | |   `-CXXThisExpr 0x562eb8ff8dd0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x562eb8ff8e60 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x562eb8ff8e40 <col:12> 'const char *' lvalue ParmVar 0x562eb8ff3288 'data' 'const char *'
|   |-BinaryOperator 0x562eb8ff8f40 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x562eb8ff8ed8 <col:2, col:5> 'int' lvalue .length 0x562eb8ff3118
|   | | `-MemberExpr 0x562eb8ff8ea8 <col:2> 'String::rep_t' lvalue ->_r 0x562eb8ff3220
|   | |   `-CXXThisExpr 0x562eb8ff8e98 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x562eb8ff8f28 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562eb8ff8f08 <col:14> 'int' lvalue ParmVar 0x562eb8ff3308 'length' 'int'
|   `-IfStmt 0x562eb8ff91e8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x562eb8ff9060 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x562eb8ff9048 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x562eb8ff9028 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x562eb8ff9008 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x562eb8ff8fa0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x562eb8ff31a8
|     |       | `-MemberExpr 0x562eb8ff8f70 <col:7> 'String::rep_t' lvalue ->_r 0x562eb8ff3220
|     |       |   `-CXXThisExpr 0x562eb8ff8f60 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x562eb8ff8ff0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x562eb8ff8fd0 <col:17> 'String::memo_t *' lvalue ParmVar 0x562eb8ff3380 'memo' 'String::memo_t *'
|     `-CallExpr 0x562eb8ff91c0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x562eb8ff91a8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562eb8ff90b0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x562eb8fe3f08 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x562eb8ff9118 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x562eb8ff2a78
|         `-ImplicitCastExpr 0x562eb8ff9100 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x562eb8ff90e0 <col:27> 'String::memo_t *' lvalue ParmVar 0x562eb8ff3380 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x562eb8ff3718 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x562eb8ff3538 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x562eb8ff35b8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x562eb8ff3630 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x562eb8ff3220 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x562eb8ff9688 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x562eb8ff9818 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x562eb8ff9780 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x562eb8ff96f0 <col:2> '<bound member function type>' ->assign_memo 0x562eb8ff3468
|     | `-ImplicitCastExpr 0x562eb8ff97b8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x562eb8ff96e0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x562eb8ff97d0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x562eb8ff9720 <col:14> 'const char *' lvalue ParmVar 0x562eb8ff3538 'data' 'const char *'
|     |-ImplicitCastExpr 0x562eb8ff97e8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x562eb8ff9740 <col:20> 'int' lvalue ParmVar 0x562eb8ff35b8 'length' 'int'
|     `-ImplicitCastExpr 0x562eb8ff9800 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x562eb8ff9760 <col:28> 'String::memo_t *' lvalue ParmVar 0x562eb8ff3630 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x562eb8ff38a8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x562eb8ff37e8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x562eb8ff9a70 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x562eb8ff99f0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x562eb8ff9840 <col:2> '<bound member function type>' ->assign_memo 0x562eb8ff3468
|     | `-CXXThisExpr 0x562eb8ff9830 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x562eb8ff9a28 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x562eb8ff98c0 <col:14, col:19> 'const char *' lvalue .data 0x562eb8ff30b0
|     |   `-MemberExpr 0x562eb8ff9890 <col:14, col:16> 'String::rep_t' lvalue ._r 0x562eb8ff3220
|     |     `-DeclRefExpr 0x562eb8ff9870 <col:14> 'const String' lvalue ParmVar 0x562eb8ff37e8 'x' 'const String &'
|     |-ImplicitCastExpr 0x562eb8ff9a40 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x562eb8ff9940 <col:25, col:30> 'int' lvalue .length 0x562eb8ff3118
|     |   `-MemberExpr 0x562eb8ff9910 <col:25, col:27> 'String::rep_t' lvalue ._r 0x562eb8ff3220
|     |     `-DeclRefExpr 0x562eb8ff98f0 <col:25> 'const String' lvalue ParmVar 0x562eb8ff37e8 'x' 'const String &'
|     `-ImplicitCastExpr 0x562eb8ff9a58 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x562eb8ff99c0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x562eb8ff31a8
|         `-MemberExpr 0x562eb8ff9990 <col:38, col:40> 'String::rep_t' lvalue ._r 0x562eb8ff3220
|           `-DeclRefExpr 0x562eb8ff9970 <col:38> 'const String' lvalue ParmVar 0x562eb8ff37e8 'x' 'const String &'
|-CXXMethodDecl 0x562eb8ff3970 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x562eb8ffa430 <col:31, line:278:5>
|   `-IfStmt 0x562eb8ffa418 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x562eb8ff9b10 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x562eb8ff9af8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x562eb8ff9ac8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x562eb8ff31a8
|     |     `-MemberExpr 0x562eb8ff9a98 <col:6> 'String::rep_t' lvalue ->_r 0x562eb8ff3220
|     |       `-CXXThisExpr 0x562eb8ff9a88 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x562eb8ffa3f0 <col:15, line:277:2>
|       |-ParenExpr 0x562eb8ff9fc0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x562eb8ff9f90 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x562eb8ff9c20 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x562eb8ff9c08 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x562eb8ff9bf0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x562eb8ff9bb0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x562eb8ff2a78
|       |   |       `-ImplicitCastExpr 0x562eb8ff9b98 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x562eb8ff9b68 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x562eb8ff31a8
|       |   |           `-MemberExpr 0x562eb8ff9b38 <col:27> 'String::rep_t' lvalue ->_r 0x562eb8ff3220
|       |   |             `-CXXThisExpr 0x562eb8ff9b28 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x562eb8ff9c80 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x562eb8ff9c60 <col:54> 'int' 0
|       |   `-CallExpr 0x562eb8ff9ef0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x562eb8ff9ed8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x562eb8ff9e58 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562eb8d58ee0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x562eb8ff9f30 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x562eb8ff9d68 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x562eb8ff9f48 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x562eb8ff9d98 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x562eb8ff9f60 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x562eb8ff9dd0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x562eb8ff9f78 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x562eb8ff9e40 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x562eb8ff9e28 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x562eb8ff9df0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x562eb8ffa310 <line:274:6, line:275:22>
|       | |-CallExpr 0x562eb8ffa1d0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x562eb8ffa1b8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x562eb8ffa130 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x562eb8fe5350 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x562eb8ffa100 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x562eb8ff2a78
|       | |   `-ImplicitCastExpr 0x562eb8ffa0e8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x562eb8ffa0b8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x562eb8ff31a8
|       | |       `-MemberExpr 0x562eb8ffa088 <col:40> 'String::rep_t' lvalue ->_r 0x562eb8ff3220
|       | |         `-CXXThisExpr 0x562eb8ffa078 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x562eb8ffa2d0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x562eb8ffa2b8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x562eb8ffa1f8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x562eb8ff8148 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x562eb8ffa2f8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x562eb8ffa258 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x562eb8ff31a8
|       |       `-MemberExpr 0x562eb8ffa228 <col:15> 'String::rep_t' lvalue ->_r 0x562eb8ff3220
|       |         `-CXXThisExpr 0x562eb8ffa218 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x562eb8ffa3d0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x562eb8ffa368 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x562eb8ff31a8
|         | `-MemberExpr 0x562eb8ffa338 <col:6> 'String::rep_t' lvalue ->_r 0x562eb8ff3220
|         |   `-CXXThisExpr 0x562eb8ffa328 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x562eb8ffa3b8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x562eb8ffa398 <col:16> 'int' 0
|-CXXMethodDecl 0x562eb8ff3c08 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x562eb8ff3a28 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x562eb8ff3aa8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x562eb8ff3b20 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x562eb8ff3ce0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x562eb8ff3f30 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x562eb8ff3d98 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x562eb8ff3e18 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x562eb8ff3e90 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x562eb8ff4118 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x562eb8ff4000 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x562eb8ff4080 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x562eb8ff4218 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x562eb8ffa508 <col:41, line:286:5>
|   `-ReturnStmt 0x562eb8ffa4f8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x562eb8ffa4c8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x562eb8ffa490 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x562eb8ffa478 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x562eb8ffa458 <col:46> 'int' 1
|-CXXMethodDecl 0x562eb8ff7fb8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x562eb8ff42d0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x562eb8ff4350 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x562eb8ff43d0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x562eb8ff8148 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x562eb8ff8080 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x562eb8ff8218 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x562eb8ff83e8 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x562eb8ff82d0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x562eb8ff8350 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x562eb8ff84a8 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x562eb8ff8570 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x562eb8ff8678 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x562eb8ff86f0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x562eb8ff8768 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x562eb8ff87d0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x562eb8ff88d0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x562eb8ff8920 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562eb8ff88b0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x562eb8ff8890 <col:22> 'int' 14
|-CXXMethodDecl 0x562eb8ff8b38 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x562eb8ff8950 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x562eb8ff89d0 <col:38> col:41 'int'
| `-ParmVarDecl 0x562eb8ff8a50 <col:43> col:46 'int'
|-FriendDecl 0x562eb8ff8c40 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x562eb8ff8cd0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
