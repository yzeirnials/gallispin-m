
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct (anonymous at /usr/include/bits/types/siginfo_t.h:97:3)
         0 |   void * _lower
         8 |   void * _upper
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union sigval
         0 |   int sival_int
         0 |   void * sival_ptr
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union sigaction::(anonymous at /usr/include/bits/sigaction.h:31:5)
         0 |   __sighandler_t sa_handler
         0 |   void (*)(int, siginfo_t *, void *) sa_sigaction
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct _fpxreg
         0 |   unsigned short [4] significand
         8 |   unsigned short exponent
        10 |   unsigned short [3] __glibc_reserved1
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct _xmmreg
         0 |   __uint32_t [4] element
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct _fpstate
         0 |   __uint16_t cwd
         2 |   __uint16_t swd
         4 |   __uint16_t ftw
         6 |   __uint16_t fop
         8 |   __uint64_t rip
        16 |   __uint64_t rdp
        24 |   __uint32_t mxcsr
        28 |   __uint32_t mxcr_mask
        32 |   struct _fpxreg [8] _st
       160 |   struct _xmmreg [16] _xmm
       416 |   __uint32_t [24] __glibc_reserved1
           | [sizeof=512, dsize=512, align=8,
           |  nvsize=512, nvalign=8]

*** Dumping AST Record Layout
         0 | struct _libc_fpxreg
         0 |   unsigned short [4] significand
         8 |   unsigned short exponent
        10 |   unsigned short [3] __glibc_reserved1
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct _libc_xmmreg
         0 |   __uint32_t [4] element
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct ArchiveElement
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int date
        28 |   int uid
        32 |   int gid
        36 |   int mode
        40 |   class String data
        40 |     struct String::rep_t _r
        40 |       const char * data
        48 |       int length
        56 |       struct String::memo_t * memo
           | [sizeof=64, dsize=64, align=8,
           |  nvsize=64, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StaticNameDB::Entry
         0 |   const char * name
         8 |   uint32_t value
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameDB
         0 |   (NameDB vtable pointer)
         8 |   uint32_t _type
        16 |   class String _context
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
        40 |   size_t _value_size
        48 |   class NameDB * _context_parent
        56 |   class NameDB * _context_sibling
        64 |   class NameDB * _context_child
        72 |   class NameInfo * _installed
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping AST Record Layout
         0 | class StaticNameDB
         0 |   class NameDB (primary base)
         0 |     (NameDB vtable pointer)
         8 |     uint32_t _type
        16 |     class String _context
        16 |       struct String::rep_t _r
        16 |         const char * data
        24 |         int length
        32 |         struct String::memo_t * memo
        40 |     size_t _value_size
        48 |     class NameDB * _context_parent
        56 |     class NameDB * _context_sibling
        64 |     class NameDB * _context_child
        72 |     class NameInfo * _installed
        80 |   const struct StaticNameDB::Entry * _entries
        88 |   size_t _nentries
           | [sizeof=96, dsize=96, align=8,
           |  nvsize=96, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469aa2dc50 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56469aa2dd68 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56469aa2de08 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56469aa2de68 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56469aa2dec8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56469aa2df78 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469aa2e280 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469aa2e398 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56469aa2e440 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56469aa2e4a8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56469aa2e538 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56469aa345d0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56469aa34a08 <col:12>
|-CXXConstructorDecl 0x56469aa346d8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56469aa347e8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56469aa2e440 'data' 'const char *'
| | `-ImplicitCastExpr 0x56469aa36f90 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56469aa36f60 <col:12> 'const char *const' lvalue .data 0x56469aa2e440
| |     `-DeclRefExpr 0x56469aa36f40 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa347e8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56469aa2e4a8 'length' 'int'
| | `-ImplicitCastExpr 0x56469aa37020 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56469aa36ff0 <col:12> 'const int' lvalue .length 0x56469aa2e4a8
| |     `-DeclRefExpr 0x56469aa36fd0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa347e8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56469aa2e538 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56469aa370b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56469aa37080 <col:12> 'String::memo_t *const' lvalue .memo 0x56469aa2e538
| |     `-DeclRefExpr 0x56469aa37060 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa347e8 '' 'const String::rep_t &'
| `-CompoundStmt 0x56469aa37108 <col:12>
|-CXXConstructorDecl 0x56469aa34888 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56469aa34888
| `-ParmVarDecl 0x56469aa34998 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56469aa39ef0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56469aa45908 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56469aa45a18 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56469aa45f30 <col:12>
|   |-BinaryOperator 0x56469aa45d48 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56469aa45d00 <col:12> 'const char *' lvalue ->data 0x56469aa2e440
|   | | `-CXXThisExpr 0x56469aa45cf0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56469aa45d30 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56469aa45cc0 <col:12> 'const char *const' lvalue .data 0x56469aa2e440
|   |     `-DeclRefExpr 0x56469aa45ca0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa45a18 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56469aa45e10 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56469aa45dc8 <col:12> 'int' lvalue ->length 0x56469aa2e4a8
|   | | `-CXXThisExpr 0x56469aa45db8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56469aa45df8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56469aa45d88 <col:12> 'const int' lvalue .length 0x56469aa2e4a8
|   |     `-DeclRefExpr 0x56469aa45d68 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa45a18 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56469aa45ed8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56469aa45e90 <col:12> 'String::memo_t *' lvalue ->memo 0x56469aa2e538
|   | | `-CXXThisExpr 0x56469aa45e80 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56469aa45ec0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56469aa45e50 <col:12> 'String::memo_t *const' lvalue .memo 0x56469aa2e538
|   |     `-DeclRefExpr 0x56469aa45e30 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa45a18 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56469aa45f20 <col:12>
|     `-UnaryOperator 0x56469aa45f08 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469aa45ef8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56469aa45a88 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56469aa45a88
  `-ParmVarDecl 0x56469aa45b98 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469aa251c0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469aa252d8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56469aa25368 <col:16, col:22> col:16 public
|-TypedefDecl 0x56469aa253a8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56469a6f2fd0 'const char *'
|   `-QualType 0x56469a6f2521 'const char' const
|     `-BuiltinType 0x56469a6f2520 'char'
|-TypedefDecl 0x56469aa25430 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56469aa25400 'String::const_iterator' sugar
|   |-Typedef 0x56469aa253a8 'const_iterator'
|   `-PointerType 0x56469a6f2fd0 'const char *'
|     `-QualType 0x56469a6f2521 'const char' const
|       `-BuiltinType 0x56469a6f2520 'char'
|-TypedefDecl 0x56469aa255a0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56469aa25510 'int (String::*)() const'
|   |-RecordType 0x56469aa25250 'String'
|   | `-CXXRecord 0x56469aa251c0 'String'
|   `-ParenType 0x56469aa254b0 'int () const' sugar
|     `-FunctionProtoType 0x56469a9fa050 'int () const' const cdecl
|       `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aa25608 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56469a84ea10 'int64_t' sugar
|   |-Typedef 0x56469a75b390 'int64_t'
|   `-TypedefType 0x56469a734630 '__int64_t' sugar
|     |-Typedef 0x56469a734208 '__int64_t'
|     `-BuiltinType 0x56469a6f25a0 'long'
|-TypedefDecl 0x56469aa25670 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56469a84e930 'uint64_t' sugar
|   |-Typedef 0x56469a75b530 'uint64_t'
|   `-TypedefType 0x56469a7346c0 '__uint64_t' sugar
|     |-Typedef 0x56469a734278 '__uint64_t'
|     `-BuiltinType 0x56469a6f2640 'unsigned long'
|-TypedefDecl 0x56469aa25700 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56469aa256d0 'String::intmax_t' sugar
|   |-Typedef 0x56469aa25608 'intmax_t'
|   `-TypedefType 0x56469a84ea10 'int64_t' sugar
|     |-Typedef 0x56469a75b390 'int64_t'
|     `-TypedefType 0x56469a734630 '__int64_t' sugar
|       |-Typedef 0x56469a734208 '__int64_t'
|       `-BuiltinType 0x56469a6f25a0 'long'
|-TypedefDecl 0x56469aa25790 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56469aa25760 'String::uintmax_t' sugar
|   |-Typedef 0x56469aa25670 'uintmax_t'
|   `-TypedefType 0x56469a84e930 'uint64_t' sugar
|     |-Typedef 0x56469a75b530 'uint64_t'
|     `-TypedefType 0x56469a7346c0 '__uint64_t' sugar
|       |-Typedef 0x56469a734278 '__uint64_t'
|       `-BuiltinType 0x56469a6f2640 'unsigned long'
|-CXXConstructorDecl 0x56469aa25850 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56469aa259f8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56469aa25938 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56469aa25ba8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56469aa25ae8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56469aa25d00 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56469aa25c70 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56469aa25f18 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56469aa25dc8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56469aa25e48 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56469aa26138 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56469aa25fe8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56469aa26068 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56469aa26358 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56469aa26208 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56469aa26288 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56469aa26578 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56469aa26428 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56469aa264a8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56469aa26708 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x56469aa26640 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56469aa26888 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56469aa267c8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56469aa26a18 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56469aa26950 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56469aa26b70 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56469aa26ae0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56469aa26cc8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56469aa26c38 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56469aa26e20 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56469aa26d90 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56469aa26fa8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56469aa26ee8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56469aa27138 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56469aa27070 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56469aa272c8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56469aa27200 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56469aa27458 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56469aa27390 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56469aa27550 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56469aa27678 <line:69:5, col:44> col:33 used make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56469aa277f8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56469aa27730 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56469aa27948 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56469aa278b8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56469aa27a00 <col:63> "" ""
|-CXXMethodDecl 0x56469aa27b48 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56469aa27a88 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56469aa27d58 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56469aa27c08 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56469aa27c88 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56469aa27f78 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56469aa27e20 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56469aa27ea0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56469aa28258 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56469aa28038 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56469aa280b8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56469aa340a0 <col:55> 'int' 10
| `-ParmVarDecl 0x56469aa28130 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469aa340c0 <col:76> 'bool' true
|-CXXMethodDecl 0x56469aa28538 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56469aa28320 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56469aa283a0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56469aa340d0 <col:56> 'int' 10
| `-ParmVarDecl 0x56469aa28418 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469aa340f0 <col:77> 'bool' true
|-CXXMethodDecl 0x56469aa28640 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56469aa28708 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56469aa287d0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56469aa28870 <col:20>
| `-OptimizeNoneAttr 0x56469aa288c8 <col:30>
|-CXXConversionDecl 0x56469aa289b8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56469aa28a88 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56469aa28b48 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56469aa28c38 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56469aa28cf8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56469aa28e78 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56469aa28db0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56469aa28fc8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56469aa28f38 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56469aa290b8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56469aa29178 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56469aa293c8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56469aa29230 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56469aa292b0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56469aa29628 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56469aa29490 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56469aa29510 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56469aa296f8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56469aa29908 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56469aa297b0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56469aa29830 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56469aa29b28 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56469aa299d0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56469aa29a50 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56469aa29cb8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56469aa29bf0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56469aa29da8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56469aa29f18 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56469aa29e58 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56469aa2a128 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56469aa29fd8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56469aa2a058 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56469aa2a340 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56469aa2a1e8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56469aa2a260 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56469aa2a4d0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56469aa2a400 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56469aa2a6f0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56469aa2a590 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56469aa2a610 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56469aa2a840 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56469aa2a7b0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56469aa2aa18 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56469aa2a900 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56469aa2a980 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56469aa2ab68 <line:112:5, col:44> col:10 used glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56469aa2aad8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56469aa2ad80 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56469aa2ac20 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56469aa2aca0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56469aa34100 <col:39> 'int' 0
|-CXXMethodDecl 0x56469aa2afa0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56469aa2ae40 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56469aa2aec0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56469aa34120 <col:48> 'int' 0
|-CXXMethodDecl 0x56469aa2b180 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56469aa2b060 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56469aa2b0e0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56469aa34140 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56469aa2b250 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56469aa2b310 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56469aa2b3d0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56469aa2b490 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56469aa2b550 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56469aa2b6f8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56469aa2b600 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56469aa2b878 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56469aa2b7b0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56469aa2ba50 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56469aa2b938 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56469aa2bbc8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56469aa2bb08 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56469aa2bd10 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56469aa2bc80 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56469aa2be60 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56469aa2bdd0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56469aa2c038 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56469aa2bf20 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56469aa2bfa0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56469aa2c218 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56469aa2c100 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56469aa2c180 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56469aa2c368 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56469aa2c2d8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56469aa2c578 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56469aa2c428 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56469aa2c4a8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56469aa2c6d8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56469aa2c640 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56469aa2c830 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56469aa2c798 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56469aa2c8d8 <col:57> "" ""
|-CXXMethodDecl 0x56469aa2c9e8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56469aa2c958 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56469aa2cb38 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56469aa2caa8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56469aa2ccb8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56469aa2cbf0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56469aa2cd80 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56469aa2ce40 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56469aa2cf00 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56469aa2cfa0 <col:49> "" ""
|-CXXMethodDecl 0x56469aa2d030 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56469aa2d0f0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56469aa2d1e0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56469aa2d2a8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56469aa2d368 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56469aa2d428 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56469aa2d520 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56469aa2d5e8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56469aa2d6b0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56469aa2d888 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56469aa2d768 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56469aa2d7e8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56469aa2dab0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56469aa2d950 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56469aa2d9d0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56469aa2dbc0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56469aa2dc28 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56469aa2dc50 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469aa2dd68 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56469aa2de08 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56469aa2de68 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56469aa2dec8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56469aa2df78 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56469aa2dfe0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56469aa2e218 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56469aa2e268 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469aa2e1f8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56469aa2e108 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56469aa2e0b0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56469aa2e0f0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56469aa2e0d0 <col:32> 'int' 8
|-CXXRecordDecl 0x56469aa2e280 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56469aa2e398 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56469aa2e440 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56469aa2e4a8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56469aa2e538 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56469aa345d0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56469aa34a08 <col:12>
| |-CXXConstructorDecl 0x56469aa346d8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56469aa347e8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56469aa2e440 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56469aa36f90 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56469aa36f60 <col:12> 'const char *const' lvalue .data 0x56469aa2e440
| | |     `-DeclRefExpr 0x56469aa36f40 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa347e8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56469aa2e4a8 'length' 'int'
| | | `-ImplicitCastExpr 0x56469aa37020 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56469aa36ff0 <col:12> 'const int' lvalue .length 0x56469aa2e4a8
| | |     `-DeclRefExpr 0x56469aa36fd0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa347e8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56469aa2e538 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56469aa370b0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56469aa37080 <col:12> 'String::memo_t *const' lvalue .memo 0x56469aa2e538
| | |     `-DeclRefExpr 0x56469aa37060 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa347e8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56469aa37108 <col:12>
| |-CXXConstructorDecl 0x56469aa34888 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56469aa34888
| | `-ParmVarDecl 0x56469aa34998 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56469aa39ef0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56469aa45908 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56469aa45a18 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56469aa45f30 <col:12>
| |   |-BinaryOperator 0x56469aa45d48 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56469aa45d00 <col:12> 'const char *' lvalue ->data 0x56469aa2e440
| |   | | `-CXXThisExpr 0x56469aa45cf0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56469aa45d30 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56469aa45cc0 <col:12> 'const char *const' lvalue .data 0x56469aa2e440
| |   |     `-DeclRefExpr 0x56469aa45ca0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa45a18 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56469aa45e10 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56469aa45dc8 <col:12> 'int' lvalue ->length 0x56469aa2e4a8
| |   | | `-CXXThisExpr 0x56469aa45db8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56469aa45df8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56469aa45d88 <col:12> 'const int' lvalue .length 0x56469aa2e4a8
| |   |     `-DeclRefExpr 0x56469aa45d68 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa45a18 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56469aa45ed8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56469aa45e90 <col:12> 'String::memo_t *' lvalue ->memo 0x56469aa2e538
| |   | | `-CXXThisExpr 0x56469aa45e80 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56469aa45ec0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56469aa45e50 <col:12> 'String::memo_t *const' lvalue .memo 0x56469aa2e538
| |   |     `-DeclRefExpr 0x56469aa45e30 <col:12> 'const String::rep_t' lvalue ParmVar 0x56469aa45a18 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56469aa45f20 <col:12>
| |     `-UnaryOperator 0x56469aa45f08 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56469aa45ef8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56469aa45a88 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56469aa45a88
|   `-ParmVarDecl 0x56469aa45b98 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56469aa2e5b0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56469aa2e7f8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56469aa2e618 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56469aa2e698 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56469aa2e710 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56469aa34590 <col:79, line:261:5>
|   |-BinaryOperator 0x56469aa34208 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56469aa341a0 <col:2, col:5> 'const char *' lvalue .data 0x56469aa2e440
|   | | `-MemberExpr 0x56469aa34170 <col:2> 'String::rep_t' lvalue ->_r 0x56469aa2e5b0
|   | |   `-CXXThisExpr 0x56469aa34160 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56469aa341f0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56469aa341d0 <col:12> 'const char *' lvalue ParmVar 0x56469aa2e618 'data' 'const char *'
|   |-BinaryOperator 0x56469aa342d0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56469aa34268 <col:2, col:5> 'int' lvalue .length 0x56469aa2e4a8
|   | | `-MemberExpr 0x56469aa34238 <col:2> 'String::rep_t' lvalue ->_r 0x56469aa2e5b0
|   | |   `-CXXThisExpr 0x56469aa34228 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56469aa342b8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56469aa34298 <col:14> 'int' lvalue ParmVar 0x56469aa2e698 'length' 'int'
|   `-IfStmt 0x56469aa34578 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56469aa343f0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56469aa343d8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56469aa343b8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56469aa34398 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56469aa34330 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56469aa2e538
|     |       | `-MemberExpr 0x56469aa34300 <col:7> 'String::rep_t' lvalue ->_r 0x56469aa2e5b0
|     |       |   `-CXXThisExpr 0x56469aa342f0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56469aa34380 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56469aa34360 <col:17> 'String::memo_t *' lvalue ParmVar 0x56469aa2e710 'memo' 'String::memo_t *'
|     `-CallExpr 0x56469aa34550 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56469aa34538 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469aa34440 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56469aa1d228 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56469aa344a8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56469aa2de08
|         `-ImplicitCastExpr 0x56469aa34490 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56469aa34470 <col:27> 'String::memo_t *' lvalue ParmVar 0x56469aa2e710 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56469aa2eaa8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56469aa2e8c8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56469aa2e948 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56469aa2e9c0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56469aa2e5b0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56469aa34a18 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56469aa34ba8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56469aa34b10 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56469aa34a80 <col:2> '<bound member function type>' ->assign_memo 0x56469aa2e7f8
|     | `-ImplicitCastExpr 0x56469aa34b48 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56469aa34a70 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56469aa34b60 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56469aa34ab0 <col:14> 'const char *' lvalue ParmVar 0x56469aa2e8c8 'data' 'const char *'
|     |-ImplicitCastExpr 0x56469aa34b78 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56469aa34ad0 <col:20> 'int' lvalue ParmVar 0x56469aa2e948 'length' 'int'
|     `-ImplicitCastExpr 0x56469aa34b90 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56469aa34af0 <col:28> 'String::memo_t *' lvalue ParmVar 0x56469aa2e9c0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56469aa2ec38 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56469aa2eb78 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56469aa34e00 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56469aa34d80 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56469aa34bd0 <col:2> '<bound member function type>' ->assign_memo 0x56469aa2e7f8
|     | `-CXXThisExpr 0x56469aa34bc0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56469aa34db8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56469aa34c50 <col:14, col:19> 'const char *' lvalue .data 0x56469aa2e440
|     |   `-MemberExpr 0x56469aa34c20 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56469aa2e5b0
|     |     `-DeclRefExpr 0x56469aa34c00 <col:14> 'const String' lvalue ParmVar 0x56469aa2eb78 'x' 'const String &'
|     |-ImplicitCastExpr 0x56469aa34dd0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56469aa34cd0 <col:25, col:30> 'int' lvalue .length 0x56469aa2e4a8
|     |   `-MemberExpr 0x56469aa34ca0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56469aa2e5b0
|     |     `-DeclRefExpr 0x56469aa34c80 <col:25> 'const String' lvalue ParmVar 0x56469aa2eb78 'x' 'const String &'
|     `-ImplicitCastExpr 0x56469aa34de8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56469aa34d50 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56469aa2e538
|         `-MemberExpr 0x56469aa34d20 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56469aa2e5b0
|           `-DeclRefExpr 0x56469aa34d00 <col:38> 'const String' lvalue ParmVar 0x56469aa2eb78 'x' 'const String &'
|-CXXMethodDecl 0x56469aa2ed00 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56469aa357c0 <col:31, line:278:5>
|   `-IfStmt 0x56469aa357a8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56469aa34ea0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56469aa34e88 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56469aa34e58 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56469aa2e538
|     |     `-MemberExpr 0x56469aa34e28 <col:6> 'String::rep_t' lvalue ->_r 0x56469aa2e5b0
|     |       `-CXXThisExpr 0x56469aa34e18 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56469aa35780 <col:15, line:277:2>
|       |-ParenExpr 0x56469aa35350 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56469aa35320 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56469aa34fb0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56469aa34f98 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56469aa34f80 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56469aa34f40 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56469aa2de08
|       |   |       `-ImplicitCastExpr 0x56469aa34f28 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56469aa34ef8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56469aa2e538
|       |   |           `-MemberExpr 0x56469aa34ec8 <col:27> 'String::rep_t' lvalue ->_r 0x56469aa2e5b0
|       |   |             `-CXXThisExpr 0x56469aa34eb8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56469aa35010 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56469aa34ff0 <col:54> 'int' 0
|       |   `-CallExpr 0x56469aa35280 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56469aa35268 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56469aa351e8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56469aa352c0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56469aa350f8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56469aa352d8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56469aa35128 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56469aa352f0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56469aa35160 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56469aa35308 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56469aa351d0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56469aa351b8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56469aa35180 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56469aa356a0 <line:274:6, line:275:22>
|       | |-CallExpr 0x56469aa35560 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56469aa35548 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56469aa354c0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56469aa1e670 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56469aa35490 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56469aa2de08
|       | |   `-ImplicitCastExpr 0x56469aa35478 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56469aa35448 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56469aa2e538
|       | |       `-MemberExpr 0x56469aa35418 <col:40> 'String::rep_t' lvalue ->_r 0x56469aa2e5b0
|       | |         `-CXXThisExpr 0x56469aa35408 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56469aa35660 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56469aa35648 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56469aa35588 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56469aa334e0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56469aa35688 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56469aa355e8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56469aa2e538
|       |       `-MemberExpr 0x56469aa355b8 <col:15> 'String::rep_t' lvalue ->_r 0x56469aa2e5b0
|       |         `-CXXThisExpr 0x56469aa355a8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56469aa35760 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56469aa356f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56469aa2e538
|         | `-MemberExpr 0x56469aa356c8 <col:6> 'String::rep_t' lvalue ->_r 0x56469aa2e5b0
|         |   `-CXXThisExpr 0x56469aa356b8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56469aa35748 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56469aa35728 <col:16> 'int' 0
|-CXXMethodDecl 0x56469aa2ef98 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56469aa2edb8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56469aa2ee38 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56469aa2eeb0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56469aa2f070 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56469aa2f2c0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56469aa2f128 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56469aa2f1a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56469aa2f220 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56469aa2f4a8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56469aa2f390 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56469aa2f410 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56469aa2f5a8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56469aa35898 <col:41, line:286:5>
|   `-ReturnStmt 0x56469aa35888 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56469aa35858 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56469aa35820 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56469aa35808 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56469aa357e8 <col:46> 'int' 1
|-CXXMethodDecl 0x56469aa2f848 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56469aa2f660 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56469aa2f6e0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56469aa2f760 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56469aa334e0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56469aa2f910 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56469aa335b0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56469aa33780 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56469aa33668 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56469aa336e8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56469aa33840 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56469aa33908 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56469aa33a08 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56469aa33a80 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56469aa33af8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56469aa33b60 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56469aa33c60 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56469aa33cb0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469aa33c40 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56469aa33c20 <col:22> 'int' 14
|-CXXMethodDecl 0x56469aa33ec8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56469aa33ce0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56469aa33d60 <col:38> col:41 'int'
| `-ParmVarDecl 0x56469aa33de0 <col:43> col:46 'int'
|-FriendDecl 0x56469aa33fd0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56469aa34060 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class NameDB *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameInfo
         0 |   class Vector<class NameDB *> _namedb_roots
         0 |     class vector_memory<class sized_array_memory<8> > vm_
         0 |       vector_memory<class sized_array_memory<8> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   class Vector<class NameDB *> _namedbs
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad249f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x56469ad24bc8 prev 0x56469ad249f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56469ad24c58 <col:46, col:52> col:46 public
|-TypedefDecl 0x56469ad24c80 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad26870 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x56469ad26820 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x56469ad25130 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x56469ad25030 'type'
|     `-TemplateSpecializationType 0x56469ad24fc0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56469ad24ea0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x56469ad24e80 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56469ad24e60 <col:24> 'unsigned long' 8
|       `-RecordType 0x56469ad24fa0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x56469ad24ec0 'char_array'
|-TypedefDecl 0x56469ad26928 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x56469ad268f0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x56469ad268d0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x56469ad26870 'type'
|     `-ElaboratedType 0x56469ad26820 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x56469ad25130 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x56469ad25030 'type'
|         `-TemplateSpecializationType 0x56469ad24fc0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56469ad24ea0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x56469ad24e80 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56469ad24e60 <col:24> 'unsigned long' 8
|           `-RecordType 0x56469ad24fa0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x56469ad24ec0 'char_array'
|-CXXMethodDecl 0x56469ad26aa8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x56469ad269b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x56469ad26b98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56469ad26c78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56469ad26c78
|-CXXMethodDecl 0x56469ad26f48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56469ad26e50 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x56469ad27188 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56469ad27000 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad27078 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56469ad27358 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56469ad27248 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad272c0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56469ad274b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56469ad27588 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56469ad277d8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56469ad27648 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56469ad276c0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56469ad27a38 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x56469ad278a8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56469ad27920 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56469ad27bf8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56469ad27b08 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56469ad27db8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56469ad27cc0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56469ad27e70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ad27f20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ad28158 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56469ad27fd0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad28048 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56469ad283f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56469ad28300 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x56469ad284c0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x56469ad28510 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56469ad28560 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ab0b290 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'NameDB *'
|-CXXRecordDecl 0x56469ab0b498 prev 0x56469ab0b290 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ab0c4b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<NameDB *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56469ab0c460 'typename array_memory<NameDB *>::type' sugar
|   `-TypedefType 0x56469ab0c440 'conditional<true, sized_array_memory<8>, typed_array_memory<NameDB *> >::type' sugar
|     |-Typedef 0x56469ab0c2f0 'type'
|     `-SubstTemplateTypeParmType 0x56469ad245c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469ad24110 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56469ad24028 'sized_array_memory'
|-FieldDecl 0x56469ab0c5b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<NameDB *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56469ab0c600 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ab0c638 <line:118:5, col:15> col:15 value_type 'NameDB *':'NameDB *'
| `-SubstTemplateTypeParmType 0x56469ab0b530 'NameDB *' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-PointerType 0x56469ae65520 'NameDB *'
|     `-RecordType 0x56469ae63cd0 'NameDB'
|       `-CXXRecord 0x56469ae66d28 'NameDB'
|-TypedefDecl 0x56469ab0c6f8 <line:119:5, col:16> col:16 reference 'NameDB *&'
| `-LValueReferenceType 0x56469ab0c6c0 'NameDB *&'
|   `-SubstTemplateTypeParmType 0x56469ab0b530 'NameDB *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ae65520 'NameDB *'
|       `-RecordType 0x56469ae63cd0 'NameDB'
|         `-CXXRecord 0x56469ae66d28 'NameDB'
|-TypedefDecl 0x56469ab0c7b8 <line:120:5, col:22> col:22 const_reference 'NameDB *const &'
| `-LValueReferenceType 0x56469ab0c780 'NameDB *const &'
|   `-QualType 0x56469ab0b531 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x56469ab0b530 'NameDB *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ae65520 'NameDB *'
|         `-RecordType 0x56469ae63cd0 'NameDB'
|           `-CXXRecord 0x56469ae66d28 'NameDB'
|-TypedefDecl 0x56469ab0c878 <line:121:5, col:16> col:16 pointer 'NameDB **'
| `-PointerType 0x56469ab0c840 'NameDB **'
|   `-SubstTemplateTypeParmType 0x56469ab0b530 'NameDB *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ae65520 'NameDB *'
|       `-RecordType 0x56469ae63cd0 'NameDB'
|         `-CXXRecord 0x56469ae66d28 'NameDB'
|-TypedefDecl 0x56469ab0c938 <line:122:5, col:22> col:22 const_pointer 'NameDB *const *'
| `-PointerType 0x56469ab0c900 'NameDB *const *'
|   `-QualType 0x56469ab0b531 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x56469ab0b530 'NameDB *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ae65520 'NameDB *'
|         `-RecordType 0x56469ae63cd0 'NameDB'
|           `-CXXRecord 0x56469ae66d28 'NameDB'
|-TypedefDecl 0x56469ab0d510 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<NameDB *>::type':'NameDB *'
| `-ElaboratedType 0x56469ab0d4c0 'typename fast_argument<NameDB *>::type' sugar
|   `-TypedefType 0x56469ab0d4a0 'fast_argument<NameDB *, false>::type' sugar
|     |-Typedef 0x56469ab0d430 'type'
|     `-SubstTemplateTypeParmType 0x56469ab0d1f0 'NameDB *' sugar
|       |-TemplateTypeParmType 0x56469a9c9ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9c9e50 'T'
|       `-PointerType 0x56469ae65520 'NameDB *'
|         `-RecordType 0x56469ae63cd0 'NameDB'
|           `-CXXRecord 0x56469ae66d28 'NameDB'
|-TypedefDecl 0x56469ab0d578 <line:126:5, col:22> col:22 const_access_type 'NameDB *const &'
| `-LValueReferenceType 0x56469ab0c780 'NameDB *const &'
|   `-QualType 0x56469ab0b531 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x56469ab0b530 'NameDB *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ae65520 'NameDB *'
|         `-RecordType 0x56469ae63cd0 'NameDB'
|           `-CXXRecord 0x56469ae66d28 'NameDB'
|-TypedefDecl 0x56469ab0d5d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ab0d638 <line:130:5, col:16> col:16 iterator 'NameDB **'
| `-PointerType 0x56469ab0c840 'NameDB **'
|   `-SubstTemplateTypeParmType 0x56469ab0b530 'NameDB *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ae65520 'NameDB *'
|       `-RecordType 0x56469ae63cd0 'NameDB'
|         `-CXXRecord 0x56469ae66d28 'NameDB'
|-TypedefDecl 0x56469ab0d6a0 <line:131:5, col:22> col:22 const_iterator 'NameDB *const *'
| `-PointerType 0x56469ab0c900 'NameDB *const *'
|   `-QualType 0x56469ab0b531 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x56469ab0b530 'NameDB *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ae65520 'NameDB *'
|         `-RecordType 0x56469ae63cd0 'NameDB'
|           `-CXXRecord 0x56469ae66d28 'NameDB'
|-EnumDecl 0x56469ab0d6f8 <line:134:5> col:5
| `-EnumConstantDecl 0x56469ab0d7f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<NameDB *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469ab0d7d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469ab0d878 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469ab0db08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ab0d930 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ab0d9d0 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXConstructorDecl 0x56469ab0ddc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x56469ab0dcb0 <col:19, col:36> col:36 x 'const Vector<NameDB *> &'
|-CXXConstructorDecl 0x56469ab0e088 <line:141:5, col:32> col:12 Vector 'void (Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x56469ab0df70 <col:19, col:31> col:31 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x56469ab0e3d0 <line:144:5, col:51> col:23 operator= 'Vector<NameDB *> &(const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x56469ab0e2b0 <col:33, col:50> col:50 x 'const Vector<NameDB *> &'
|-CXXMethodDecl 0x56469ab0e6e0 <line:146:5, col:46> col:23 operator= 'Vector<NameDB *> &(Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x56469ab0e5c0 <col:33, col:45> col:45 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x56469ab0e9d0 <line:148:5, col:70> col:23 assign 'Vector<NameDB *> &(Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ab0e818 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ab0e890 <col:43, col:69> col:63 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x56469ab0eb28 <line:150:5, col:55> col:49 begin 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x56469ab0ec08 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ab0ec60 <col:30> Inherited
|-CXXMethodDecl 0x56469ab0eca8 <line:151:5, col:53> col:49 end 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x56469ab0ed58 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ab0edb0 <col:30> Inherited
|-CXXMethodDecl 0x56469ab0ee78 <line:152:5, col:63> col:55 begin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x56469ab0ef28 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ab0ef80 <col:30> Inherited
|-CXXMethodDecl 0x56469ab0efc8 <line:153:5, col:61> col:55 end 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x56469ab0f078 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ab0f0d0 <col:30> Inherited
|-CXXMethodDecl 0x56469ab0f118 <line:154:5, col:64> col:55 cbegin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x56469ab0f1c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ab0f220 <col:30> Inherited
|-CXXMethodDecl 0x56469ab0f268 <line:155:5, col:62> col:55 cend 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x56469ab0f318 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ab0f370 <col:30> Inherited
|-CXXMethodDecl 0x56469ab0f398 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ab0f448 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ab0f4f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469ab0f6b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ab0f5a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ab0f620 <col:37, col:63> col:57 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x56469ab0f808 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469ab0f778 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ab0f9b8 <line:163:5, col:65> col:43 operator[] 'NameDB *&(Vector::size_type)'
| |-ParmVarDecl 0x56469ab0f8c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ab0fa70 <col:20>
| `-OptimizeNoneAttr 0x56469ab0fac8 <col:30>
|-CXXMethodDecl 0x56469ab0fbe8 <line:164:5, col:73> col:49 operator[] 'NameDB *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56469ab0faf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ab0fca0 <col:20>
| `-OptimizeNoneAttr 0x56469ab0fcf8 <col:30>
|-CXXMethodDecl 0x56469ab0fdb0 <line:165:5, col:29> col:15 at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ab0fd20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ab0fef8 <line:166:5, col:37> col:21 at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ab0fe68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ab10028 <line:167:5, col:21> col:15 front 'NameDB *&()' inline
|-CXXMethodDecl 0x56469ab10158 <line:168:5, col:29> col:21 front 'NameDB *const &() const' inline
|-CXXMethodDecl 0x56469ab10228 <line:169:5, col:20> col:15 back 'NameDB *&()' inline
|-CXXMethodDecl 0x56469ab102f8 <line:170:5, col:28> col:21 back 'NameDB *const &() const' inline
|-CXXMethodDecl 0x56469ab10438 <line:172:5, col:39> col:15 unchecked_at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ab103a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ab10580 <line:173:5, col:47> col:21 unchecked_at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ab104f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ab106c8 <line:174:5, col:59> col:15 at_u 'NameDB *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56469ab10638 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ab10780 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469ab10880 <line:175:5, col:71> col:21 at_u 'NameDB *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469ab107f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ab10938 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469ab109f8 <line:177:5, col:20> col:15 data 'NameDB **()' inline
|-CXXMethodDecl 0x56469ab10af8 <line:178:5, col:28> col:21 data 'NameDB *const *() const' inline
|-CXXMethodDecl 0x56469ab10c78 <line:180:5, col:48> col:17 push_back 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ab10bb8 <col:27, col:47> col:47 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-FunctionTemplateDecl 0x56469ab11438 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469ab10d30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<NameDB *>':'fast_argument<NameDB *, false>'
| `-CXXMethodDecl 0x56469ab11398 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (NameDB *&&)' inline
|   `-ParmVarDecl 0x56469ab11298 <col:58, col:62> col:62 v 'NameDB *&&'
|-CXXMethodDecl 0x56469ab11518 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ab11668 <line:186:5, col:49> col:17 push_front 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ab115d8 <col:28, col:48> col:48 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x56469ab11720 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469ab11968 <line:189:5, col:62> col:21 insert 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ab117e0 <col:28, col:37> col:37 it 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x56469ab11858 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x56469ab11b28 <line:190:5, col:38> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator)' inline
| `-ParmVarDecl 0x56469ab11a38 <col:27, col:36> col:36 it 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x56469ab11d78 <line:191:5, col:49> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::iterator)' inline
| |-ParmVarDecl 0x56469ab11bf0 <col:27, col:36> col:36 a 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x56469ab11c68 <col:39, col:48> col:48 b 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x56469ab11e38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ab12098 <line:195:5, col:34> col:17 swap 'void (Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x56469ab11fa0 <col:22, col:33> col:33 x 'Vector<NameDB *> &'
`-CXXDestructorDecl 0x56469ab12168 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469ab12168

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae63d80 prev 0x56469ad80920 <../dummy_inc/click/nameinfo.hh:11:1, line:243:1> line:11:7 referenced class NameInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ae63e78 <col:1, col:7> col:7 implicit referenced class NameInfo
|-AccessSpecDecl 0x56469ae63f08 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56469ae63f68 <line:16:5, col:14> col:5 NameInfo 'void ()'
|-CXXDestructorDecl 0x56469ae64058 <line:23:5, col:15> col:5 ~NameInfo 'void ()' noexcept-unevaluated 0x56469ae64058
|-CXXMethodDecl 0x56469ae64160 <line:29:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x56469ae64220 <line:35:5, col:32> col:17 static_cleanup 'void ()' static
|-EnumDecl 0x56469ae642c0 <line:38:5, line:63:5> line:38:10 DBType
| |-EnumConstantDecl 0x56469ae643c0 <line:39:2, col:11> col:2 T_NONE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65100 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae643a0 <col:11> 'int' Int: 0
| |     `-IntegerLiteral 0x56469ae64380 <col:11> 'int' 0
| |-EnumConstantDecl 0x56469ae64450 <line:40:2, col:19> col:2 T_SCHEDULEINFO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65118 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64430 <col:19> 'int' Int: 1
| |     `-IntegerLiteral 0x56469ae64410 <col:19> 'int' 1
| |-EnumConstantDecl 0x56469ae644e0 <line:41:2, col:17> col:2 T_ANNOTATION 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65130 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae644c0 <col:17> 'int' Int: 2
| |     `-IntegerLiteral 0x56469ae644a0 <col:17> 'int' 2
| |-EnumConstantDecl 0x56469ae64570 <line:42:2, col:18> col:2 referenced T_SCRIPT_INSN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65148 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64550 <col:18> 'int' Int: 3
| |     `-IntegerLiteral 0x56469ae64530 <col:18> 'int' 3
| |-EnumConstantDecl 0x56469ae64600 <line:43:2, col:12> col:2 referenced T_SIGNO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65160 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae645e0 <col:12> 'int' Int: 4
| |     `-IntegerLiteral 0x56469ae645c0 <col:12> 'int' 4
| |-EnumConstantDecl 0x56469ae64690 <line:44:2, col:15> col:2 T_SPINLOCK 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65178 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64670 <col:15> 'int' Int: 5
| |     `-IntegerLiteral 0x56469ae64650 <col:15> 'int' 5
| |-EnumConstantDecl 0x56469ae64720 <line:45:2, col:20> col:2 T_ETHERNET_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65190 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64700 <col:20> 'int' Int: 16777217
| |     `-IntegerLiteral 0x56469ae646e0 <col:20> 'int' 16777217
| |-EnumConstantDecl 0x56469ae647b0 <line:46:2, col:14> col:2 T_IP_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae651a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64790 <col:14> 'int' Int: 67108865
| |     `-IntegerLiteral 0x56469ae64770 <col:14> 'int' 67108865
| |-EnumConstantDecl 0x56469ae64840 <line:47:2, col:16> col:2 T_IP_PREFIX 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae651c0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64820 <col:16> 'int' Int: 67108866
| |     `-IntegerLiteral 0x56469ae64800 <col:16> 'int' 67108866
| |-EnumConstantDecl 0x56469ae648d0 <line:48:2, col:15> col:2 T_IP_PROTO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae651d8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae648b0 <col:15> 'int' Int: 67108867
| |     `-IntegerLiteral 0x56469ae64890 <col:15> 'int' 67108867
| |-EnumConstantDecl 0x56469ae64960 <line:49:2, col:20> col:2 T_IPFILTER_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae651f0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64940 <col:20> 'int' Int: 67108868
| |     `-IntegerLiteral 0x56469ae64920 <col:20> 'int' 67108868
| |-EnumConstantDecl 0x56469ae649f0 <line:50:2, col:14> col:2 T_TCP_OPT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65208 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae649d0 <col:14> 'int' Int: 67108869
| |     `-IntegerLiteral 0x56469ae649b0 <col:14> 'int' 67108869
| |-EnumConstantDecl 0x56469ae64a80 <line:51:2, col:25> col:2 T_IPREWRITER_PATTERN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65220 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64a60 <col:25> 'int' Int: 67108870
| |     `-IntegerLiteral 0x56469ae64a40 <col:25> 'int' 67108870
| |-EnumConstantDecl 0x56469ae64b10 <line:52:2, col:16> col:2 T_ICMP_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65238 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64af0 <col:16> 'int' Int: 67174400
| |     `-IntegerLiteral 0x56469ae64ad0 <col:16> 'int' 67174400
| |-EnumConstantDecl 0x56469ae64ba0 <line:53:2, col:16> col:2 T_ICMP_CODE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65250 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64b80 <col:16> 'int' Int: 67174656
| |     `-IntegerLiteral 0x56469ae64b60 <col:16> 'int' 67174656
| |-EnumConstantDecl 0x56469ae64c30 <line:54:2, col:14> col:2 T_IP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65268 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64c10 <col:14> 'int' Int: 67239936
| |     `-IntegerLiteral 0x56469ae64bf0 <col:14> 'int' 67239936
| |-EnumConstantDecl 0x56469ae64cc0 <line:55:2, col:15> col:2 T_TCP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65280 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64ca0 <col:15> 'int' Int: 67239942
| |     `-IntegerLiteral 0x56469ae64c80 <col:15> 'int' 67239942
| |-EnumConstantDecl 0x56469ae64d50 <line:56:2, col:15> col:2 T_UDP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65298 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64d30 <col:15> 'int' Int: 67239953
| |     `-IntegerLiteral 0x56469ae64d10 <col:15> 'int' 67239953
| |-EnumConstantDecl 0x56469ae64de0 <line:57:2, col:19> col:2 T_IP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae652b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64dc0 <col:19> 'int' Int: 67305472
| |     `-IntegerLiteral 0x56469ae64da0 <col:19> 'int' 67305472
| |-EnumConstantDecl 0x56469ae64e70 <line:58:2, col:21> col:2 T_ICMP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae652c8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64e50 <col:21> 'int' Int: 67305473
| |     `-IntegerLiteral 0x56469ae64e30 <col:21> 'int' 67305473
| |-EnumConstantDecl 0x56469ae64f00 <line:59:2, col:20> col:2 T_TCP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae652e0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64ee0 <col:20> 'int' Int: 67305478
| |     `-IntegerLiteral 0x56469ae64ec0 <col:20> 'int' 67305478
| |-EnumConstantDecl 0x56469ae64f90 <line:60:2, col:20> col:2 T_UDP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae652f8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae64f70 <col:20> 'int' Int: 67305489
| |     `-IntegerLiteral 0x56469ae64f50 <col:20> 'int' 67305489
| |-EnumConstantDecl 0x56469ae65020 <line:61:2, col:15> col:2 T_IP6_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x56469ae65310 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae65000 <col:15> 'int' Int: 100663297
| |     `-IntegerLiteral 0x56469ae64fe0 <col:15> 'int' 100663297
| `-EnumConstantDecl 0x56469ae650b0 <line:62:2, col:17> col:2 T_IP6_PREFIX 'NameInfo::DBType'
|   `-ImplicitCastExpr 0x56469ae65328 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ae65090 <col:17> 'int' Int: 100663298
|       `-IntegerLiteral 0x56469ae65070 <col:17> 'int' 100663298
|-CXXMethodDecl 0x56469ae65628 <line:85:5, line:86:35> line:85:20 used getdb 'NameDB *(uint32_t, const Element *, size_t, bool)' static
| |-ParmVarDecl 0x56469ae65350 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ae653c8 <col:41, col:56> col:56 context 'const Element *'
| |-ParmVarDecl 0x56469ae65440 <line:86:5, col:12> col:12 value_size 'size_t':'unsigned long'
| `-ParmVarDecl 0x56469ae654b8 <col:24, col:29> col:29 create 'bool'
|-CXXMethodDecl 0x56469ae65848 <line:104:5, col:61> col:17 used installdb 'void (NameDB *, const Element *)' static
| |-ParmVarDecl 0x56469ae656f8 <col:27, col:35> col:35 db 'NameDB *'
| `-ParmVarDecl 0x56469ae65770 <col:39, col:54> col:54 context 'const Element *'
|-CXXMethodDecl 0x56469ae659c8 <line:112:5, col:39> col:17 used uninstalldb 'void (NameDB *)' static
| `-ParmVarDecl 0x56469ae65908 <col:29, col:37> col:37 db 'NameDB *'
|-CXXMethodDecl 0x56469ae65db8 <line:127:5, line:128:65> line:127:17 used query 'bool (uint32_t, const Element *, const String &, void *, size_t)' static
| |-ParmVarDecl 0x56469ae65a80 <col:23, col:32> col:32 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ae65af8 <col:38, col:53> col:53 context 'const Element *'
| |-ParmVarDecl 0x56469ae65b70 <line:128:9, col:23> col:23 name 'const String &'
| |-ParmVarDecl 0x56469ae65bf0 <col:29, col:35> col:35 value_store 'void *'
| `-ParmVarDecl 0x56469ae65c68 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x56469ae66138 <line:147:5, line:148:46> line:147:17 query_int 'bool (uint32_t, const Element *, const String &, int32_t *)' static
| |-ParmVarDecl 0x56469ae65e90 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ae65f08 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x56469ae65f80 <line:148:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x56469ae65ff8 <col:26, col:35> col:35 value_store 'int32_t *'
|-CXXMethodDecl 0x56469ae664b8 <line:151:5, line:152:47> line:151:17 query_int 'bool (uint32_t, const Element *, const String &, uint32_t *)' static
| |-ParmVarDecl 0x56469ae66208 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ae66280 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x56469ae662f8 <line:152:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x56469ae66370 <col:26, col:36> col:36 value_store 'uint32_t *'
|-CXXMethodDecl 0x56469ab0a730 <line:167:5, line:168:43> line:167:19 used revquery 'String (uint32_t, const Element *, const void *, size_t)' static
| |-ParmVarDecl 0x56469ae66588 <col:28, col:37> col:37 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ae66600 <col:43, col:58> col:58 context 'const Element *'
| |-ParmVarDecl 0x56469ae66680 <line:168:7, col:19> col:19 value 'const void *'
| `-ParmVarDecl 0x56469ae666f8 <col:26, col:33> col:33 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x56469ab0aa18 <line:182:5, line:183:24> line:182:26 revquery_int 'String (uint32_t, const Element *, int32_t)' static inline
| |-ParmVarDecl 0x56469ab0a800 <col:39, col:48> col:48 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ab0a878 <col:54, col:69> col:69 context 'const Element *'
| `-ParmVarDecl 0x56469ab0a8f0 <line:183:11, col:19> col:19 value 'int32_t':'int'
|-CXXMethodDecl 0x56469ab0ae18 <line:202:5, line:203:66> line:202:24 define 'bool (uint32_t, const Element *, const String &, const void *, size_t)' static inline
| |-ParmVarDecl 0x56469ab0aae0 <col:31, col:40> col:40 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ab0ab58 <col:46, col:61> col:61 context 'const Element *'
| |-ParmVarDecl 0x56469ab0abd0 <line:203:10, col:24> col:24 name 'const String &'
| |-ParmVarDecl 0x56469ab0ac50 <col:30, col:42> col:42 value 'const void *'
| `-ParmVarDecl 0x56469ab0acc8 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x56469ab0b198 <line:220:5, line:221:40> line:220:24 define_int 'bool (uint32_t, const Element *, const String &, int32_t)' static inline
| |-ParmVarDecl 0x56469ab0aef0 <col:35, col:44> col:44 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ab0af68 <col:50, col:65> col:65 context 'const Element *'
| |-ParmVarDecl 0x56469ab0afe0 <line:221:7, col:21> col:21 name 'const String &'
| `-ParmVarDecl 0x56469ab0b058 <col:27, col:35> col:35 value 'int32_t':'int'
|-AccessSpecDecl 0x56469ab0b258 <line:230:3, col:10> col:3 private
|-FieldDecl 0x56469ab12250 <line:232:5, col:22> col:22 _namedb_roots 'Vector<NameDB *>':'Vector<NameDB *>'
|-FieldDecl 0x56469ab12350 <line:233:5, col:22> col:22 _namedbs 'Vector<NameDB *>':'Vector<NameDB *>'
|-CXXMethodDecl 0x56469ab123e8 <line:235:5, col:73> col:20 install_dynamic_sentinel 'NameDB *()' inline
| `-CompoundStmt 0x56469ae66d10 <col:47, col:73>
|   `-ReturnStmt 0x56469ae66d00 <col:49, col:67>
|     `-CStyleCastExpr 0x56469ae66cd8 <col:56, col:67> 'NameDB *' <BitCast>
|       `-CXXThisExpr 0x56469ae66cb8 <col:67> 'NameInfo *' this
|-CXXMethodDecl 0x56469ae66898 <line:236:5, col:87> col:13 namedb 'NameDB *(uint32_t, size_t, const String &, NameDB *)'
| |-ParmVarDecl 0x56469ab12498 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ab12510 <col:35, col:42> col:42 size 'size_t':'unsigned long'
| |-ParmVarDecl 0x56469ab12588 <col:48, col:62> col:62 prefix 'const String &'
| `-ParmVarDecl 0x56469ab12600 <col:70, col:78> col:78 installer 'NameDB *'
|-CXXConstructorDecl 0x56469ae66988 <line:11:7> col:7 implicit NameInfo 'void (const NameInfo &)' inline default noexcept-unevaluated 0x56469ae66988
| `-ParmVarDecl 0x56469ae66a98 <col:7> col:7 'const NameInfo &'
`-CXXMethodDecl 0x56469ae66b38 <col:7> col:7 implicit operator= 'NameInfo &(const NameInfo &)' inline default noexcept-unevaluated 0x56469ae66b38
  `-ParmVarDecl 0x56469ae66c48 <col:7> col:7 'const NameInfo &'

Layout: <CGRecordLayout
  LLVMType:%class.NameInfo = type { %class.Vector, %class.Vector }
  NonVirtualBaseLLVMType:%class.NameInfo = type { %class.Vector, %class.Vector }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae66d28 prev 0x56469ae63c38 <../dummy_inc/click/nameinfo.hh:245:1, line:348:1> line:245:7 referenced class NameDB definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56469ae66e20 <col:1, col:7> col:7 implicit referenced class NameDB
|-AccessSpecDecl 0x56469ae66eb0 <col:16, col:22> col:16 public
|-CXXConstructorDecl 0x56469ae67118 <line:253:5, col:74> col:12 used NameDB 'void (uint32_t, const String &, size_t)' inline
| |-ParmVarDecl 0x56469ae66ee8 <col:19, col:28> col:28 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ae66f60 <col:34, col:48> col:48 context 'const String &'
| `-ParmVarDecl 0x56469ae66fd8 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x56469ae67220 <line:259:5, line:261:5> line:259:13 used ~NameDB 'void () noexcept' virtual
| `-CompoundStmt 0x56469ae688a8 <col:23, line:261:5>
|   `-CallExpr 0x56469ae68880 <line:260:2, col:28> 'void'
|     |-ImplicitCastExpr 0x56469ae68868 <col:2, col:12> 'void (*)(NameDB *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56469ae687f8 <col:2, col:12> 'void (NameDB *)' lvalue CXXMethod 0x56469ae659c8 'uninstalldb' 'void (NameDB *)'
|     `-CXXThisExpr 0x56469ae68828 <col:24> 'NameDB *' this
|-CXXMethodDecl 0x56469ae67348 <line:264:5, line:266:5> line:264:14 type 'uint32_t () const'
| `-CompoundStmt 0x56469ae68928 <col:27, line:266:5>
|   `-ReturnStmt 0x56469ae68918 <line:265:2, col:9>
|     `-ImplicitCastExpr 0x56469ae68900 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56469ae688d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_type 0x56469ae68130
|         `-CXXThisExpr 0x56469ae688c0 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x56469ae67408 <line:269:5, line:271:5> line:269:19 context 'const String &() const'
| `-CompoundStmt 0x56469ae68990 <col:35, line:271:5>
|   `-ReturnStmt 0x56469ae68980 <line:270:2, col:9>
|     `-MemberExpr 0x56469ae68950 <col:9> 'const String' lvalue ->_context 0x56469ae68190
|       `-CXXThisExpr 0x56469ae68940 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x56469ae674f8 <line:279:5, line:281:5> line:279:13 context_parent 'NameDB *() const'
| `-CompoundStmt 0x56469ae68a10 <col:36, line:281:5>
|   `-ReturnStmt 0x56469ae68a00 <line:280:2, col:9>
|     `-ImplicitCastExpr 0x56469ae689e8 <col:9> 'NameDB *' <LValueToRValue>
|       `-MemberExpr 0x56469ae689b8 <col:9> 'NameDB *const' lvalue ->_context_parent 0x56469ae68250
|         `-CXXThisExpr 0x56469ae689a8 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x56469ae675e8 <line:284:5, line:286:5> line:284:12 value_size 'size_t () const'
| `-CompoundStmt 0x56469ae68a90 <col:31, line:286:5>
|   `-ReturnStmt 0x56469ae68a80 <line:285:2, col:9>
|     `-ImplicitCastExpr 0x56469ae68a68 <col:9> 'size_t':'unsigned long' <LValueToRValue>
|       `-MemberExpr 0x56469ae68a38 <col:9> 'const size_t':'const unsigned long' lvalue ->_value_size 0x56469ae681f0
|         `-CXXThisExpr 0x56469ae68a28 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x56469ae678b8 <line:295:5, col:78> col:18 query 'bool (const String &, void *, size_t)' virtual pure
| |-ParmVarDecl 0x56469ae67698 <col:24, col:38> col:38 name 'const String &'
| |-ParmVarDecl 0x56469ae67718 <col:44, col:50> col:50 value 'void *'
| `-ParmVarDecl 0x56469ae67790 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x56469ae67b18 <line:305:5, col:65> col:20 revquery 'String (const void *, size_t)' virtual
| |-ParmVarDecl 0x56469ae67988 <col:29, col:41> col:41 value 'const void *'
| `-ParmVarDecl 0x56469ae67a00 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x56469ae67df8 <line:315:5, col:81> col:18 used define 'bool (const String &, const void *, size_t)' virtual
| |-ParmVarDecl 0x56469ae67bd8 <col:25, col:39> col:39 name 'const String &'
| |-ParmVarDecl 0x56469ae67c58 <col:45, col:57> col:57 value 'const void *'
| `-ParmVarDecl 0x56469ae67cd0 <col:64, col:71> col:71 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x56469ae68048 <line:324:5, col:61> col:17 define_int 'bool (const String &, int32_t)' inline
| |-ParmVarDecl 0x56469ae67ec0 <col:28, col:42> col:42 name 'const String &'
| `-ParmVarDecl 0x56469ae67f38 <col:48, col:56> col:56 value 'int32_t':'int'
|-AccessSpecDecl 0x56469ae680f8 <line:332:3, col:10> col:3 private
|-FieldDecl 0x56469ae68130 <line:334:5, col:14> col:14 referenced _type 'uint32_t':'unsigned int'
|-FieldDecl 0x56469ae68190 <line:335:5, col:12> col:12 referenced _context 'String'
|-FieldDecl 0x56469ae681f0 <line:336:5, col:12> col:12 referenced _value_size 'size_t':'unsigned long'
|-FieldDecl 0x56469ae68250 <line:337:5, col:13> col:13 referenced _context_parent 'NameDB *'
|-FieldDecl 0x56469ae682b0 <line:338:5, col:13> col:13 _context_sibling 'NameDB *'
|-FieldDecl 0x56469ae68310 <line:339:5, col:13> col:13 _context_child 'NameDB *'
|-FieldDecl 0x56469ae68370 <line:340:5, col:15> col:15 _installed 'NameInfo *'
|-FriendDecl 0x56469ae68410 <line:346:5, col:18> col:12 'class NameInfo':'NameInfo'
|-CXXConstructorDecl 0x56469ae68478 <line:245:7> col:7 implicit NameDB 'void (const NameDB &)' inline default noexcept-unevaluated 0x56469ae68478
| `-ParmVarDecl 0x56469ae68588 <col:7> col:7 'const NameDB &'
`-CXXMethodDecl 0x56469ae68628 <col:7> col:7 implicit operator= 'NameDB &(const NameDB &)' inline default noexcept-unevaluated 0x56469ae68628
  `-ParmVarDecl 0x56469ae68738 <col:7> col:7 'const NameDB &'

Layout: <CGRecordLayout
  LLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  NonVirtualBaseLLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae68cc0 <../dummy_inc/click/nameinfo.hh:352:5, line:355:5> line:352:12 referenced struct Entry definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ae68dd8 <col:5, col:12> col:12 implicit struct Entry
|-FieldDecl 0x56469ae68e80 <line:353:2, col:14> col:14 name 'const char *'
|-FieldDecl 0x56469ae68ee0 <line:354:2, col:11> col:11 referenced value 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x56469aea2440 <line:352:12> col:12 implicit referenced ~Entry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StaticNameDB::Entry" = type { i8*, i32 }
  NonVirtualBaseLLVMType:%"struct.StaticNameDB::Entry" = type { i8*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae68aa8 <../dummy_inc/click/nameinfo.hh:350:1, line:401:1> line:350:7 referenced class StaticNameDB definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'NameDB'
|-CXXRecordDecl 0x56469ae68c08 <col:1, col:7> col:7 implicit referenced class StaticNameDB
|-AccessSpecDecl 0x56469ae68c98 <col:38, col:44> col:38 public
|-CXXRecordDecl 0x56469ae68cc0 <line:352:5, line:355:5> line:352:12 referenced struct Entry definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56469ae68dd8 <col:5, col:12> col:12 implicit struct Entry
| |-FieldDecl 0x56469ae68e80 <line:353:2, col:14> col:14 name 'const char *'
| |-FieldDecl 0x56469ae68ee0 <line:354:2, col:11> col:11 referenced value 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x56469aea2440 <line:352:12> col:12 implicit referenced ~Entry 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56469ae69278 <line:369:5, line:370:37> line:369:12 used StaticNameDB 'void (uint32_t, const String &, const StaticNameDB::Entry *, size_t)' inline
| |-ParmVarDecl 0x56469ae68f58 <col:25, col:34> col:34 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ae68fd0 <col:40, col:54> col:54 context 'const String &'
| |-ParmVarDecl 0x56469ae69078 <line:370:4, col:17> col:17 entry 'const StaticNameDB::Entry *'
| `-ParmVarDecl 0x56469ae690f0 <col:24, col:31> col:31 nentry 'size_t':'unsigned long'
|-CXXMethodDecl 0x56469ae694e8 <line:379:5, col:66> col:10 query 'bool (const String &, void *, size_t)'
| |-Overrides: [ 0x56469ae678b8 NameDB::query 'bool (const String &, void *, size_t)' ]
| |-ParmVarDecl 0x56469ae69350 <col:16, col:30> col:30 name 'const String &'
| |-ParmVarDecl 0x56469ae693d0 <col:36, col:42> col:42 value 'void *'
| `-ParmVarDecl 0x56469ae69448 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x56469ae696c8 <line:388:5, col:57> col:12 revquery 'String (const void *, size_t)'
| |-Overrides: [ 0x56469ae67b18 NameDB::revquery 'String (const void *, size_t)' ]
| |-ParmVarDecl 0x56469ae695b8 <col:21, col:33> col:33 value 'const void *'
| `-ParmVarDecl 0x56469ae69630 <col:40, col:47> col:47 value_size 'size_t':'unsigned long'
|-AccessSpecDecl 0x56469ae69778 <line:396:3, col:10> col:3 private
|-FieldDecl 0x56469ae697b0 <line:398:5, col:18> col:18 _entries 'const StaticNameDB::Entry *'
|-FieldDecl 0x56469ae69810 <line:399:5, col:12> col:12 _nentries 'size_t':'unsigned long'
|-CXXConstructorDecl 0x56469ae69888 <line:350:7> col:7 implicit StaticNameDB 'void (const StaticNameDB &)' inline default noexcept-unevaluated 0x56469ae69888
| `-ParmVarDecl 0x56469ae69998 <col:7> col:7 'const StaticNameDB &'
|-CXXConstructorDecl 0x56469ae69a38 <col:7> col:7 implicit StaticNameDB 'void (StaticNameDB &&)' inline default noexcept-unevaluated 0x56469ae69a38
| `-ParmVarDecl 0x56469ae69b48 <col:7> col:7 'StaticNameDB &&'
|-CXXMethodDecl 0x56469ae69be8 <col:7> col:7 implicit operator= 'StaticNameDB &(const StaticNameDB &)' inline default noexcept-unevaluated 0x56469ae69be8
| `-ParmVarDecl 0x56469ae69cf8 <col:7> col:7 'const StaticNameDB &'
|-CXXMethodDecl 0x56469ae69d68 <col:7> col:7 implicit operator= 'StaticNameDB &(StaticNameDB &&)' inline default noexcept-unevaluated 0x56469ae69d68
| `-ParmVarDecl 0x56469ae69e78 <col:7> col:7 'StaticNameDB &&'
`-CXXDestructorDecl 0x56469ae69f00 <col:7> col:7 implicit ~StaticNameDB 'void ()' inline default noexcept-unevaluated 0x56469ae69f00
  `-Overrides: [ 0x56469ae67220 NameDB::~NameDB 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.StaticNameDB = type { %class.NameDB, %"struct.StaticNameDB::Entry"*, i64 }
  NonVirtualBaseLLVMType:%class.StaticNameDB = type { %class.NameDB, %"struct.StaticNameDB::Entry"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac67da8 prev 0x56469ac5f548 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56469ac67ea0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56469ac67f30 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56469ac67fa8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56469ac68068 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56469ac68130 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56469ac682a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56469ac681e0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56469ac68350 <col:24>
| `-OptimizeNoneAttr 0x56469ac683a8 <col:34>
|-CXXMethodDecl 0x56469ac683f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56469ac686a8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56469ac684a0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56469ac68518 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56469ac68598 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56469ac68760 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56469ac68798 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56469ac68800 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56469ac68888 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56469ac68ba8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56469ac68940 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56469ac689b8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56469ac68a30 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56469ac68ab0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56469ac68cc0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56469ac70638 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56469ac70638
| `-ParmVarDecl 0x56469ac70748 <col:11> col:11 'const Element::Port &'
`-CXXConstructorDecl 0x56469ac707e8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56469ac707e8
  `-ParmVarDecl 0x56469ac708f8 <col:11> col:11 'Element::Port &&'

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping AST Record Layout
         0 | __sigset_t
         0 |   unsigned long [16] __val
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class Master
         0 |   class RouterThread ** _threads
         8 |   int _nthreads
        16 |   class Router * _routers
        24 |   int _refcount
        28 |   class atomic_uint32_t _master_paused
        28 |     uint32_t _val
        32 |   struct Master::SignalInfo * _siginfo
        40 |   __sigset_t _sig_dispatching
        40 |     unsigned long [16] __val
       168 |   class Spinlock _signal_lock (empty)
           | [sizeof=176, dsize=169, align=8,
           |  nvsize=169, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad035b0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ad036c8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x56469ad03798 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x56469ad037f8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x56469ad03860 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x56469ad038e8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x56469ad03b50 <col:16, line:46:5>
|   |-BinaryOperator 0x56469ad03a98 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x56469ad039b8 <col:9> 'TaskLink *' lvalue ->_prev 0x56469ad03798
|   | | `-CXXThisExpr 0x56469ad039a8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x56469ad03a80 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x56469ad03a60 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x56469ad039f8 <col:17> 'TaskLink *' lvalue ->_next 0x56469ad037f8
|   |     | `-CXXThisExpr 0x56469ad039e8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x56469ad03a48 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x56469ad03a28 <col:25> 'int' 0
|   `-BinaryOperator 0x56469ad03b30 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x56469ad03ac8 <col:9> 'unsigned int' lvalue ->_pass 0x56469ad03860
|     | `-CXXThisExpr 0x56469ad03ab8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x56469ad03b18 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56469ad03af8 <col:17> 'int' 0
|-CXXConstructorDecl 0x56469ad6d2c8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x56469ad6d2c8
| `-ParmVarDecl 0x56469ad6d3d8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x56469ad6d478 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x56469ad6d478
| `-ParmVarDecl 0x56469ad6d588 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x56469ad6d778 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x56469ad6d778
|-CXXMethodDecl 0x56469ad6df78 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x56469ad6df78
| `-ParmVarDecl 0x56469ad6e088 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x56469ad6e0f8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x56469ad6e0f8
  `-ParmVarDecl 0x56469ad6e208 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469abf36f0 prev 0x56469abea530 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469abf37e8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56469abf3888 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x56469abfa650 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56469abfaa38 <col:11>
|-CXXConstructorDecl 0x56469abfa730 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56469abfa818 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56469abfb180 <col:11>
|-CXXConstructorDecl 0x56469abfa8b8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56469abfa9c8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x56469abfc9d8 <col:11>
|-CXXDestructorDecl 0x56469abfbce8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56469a902678 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56469a902788 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56469a903050 <col:11>
|   `-ReturnStmt 0x56469a903040 <col:11>
|     `-UnaryOperator 0x56469a903028 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469a903018 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x56469a9027f8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56469a902908 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x56469ac90d10 <col:11>
    `-ReturnStmt 0x56469ac90d00 <col:11>
      `-UnaryOperator 0x56469ac90ce8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56469ac90cd8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469abe96e8 prev 0x56469abe93f8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469abe97e0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x56469abe9870 <col:19, col:25> col:19 public
|-TypedefDecl 0x56469abe98a8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x56469a84e850 'int32_t' sugar
|   |-Typedef 0x56469a75b328 'int32_t'
|   `-TypedefType 0x56469a734510 '__int32_t' sugar
|     |-Typedef 0x56469a734128 '__int32_t'
|     `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469abe9910 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x56469a84ea10 'int64_t' sugar
|   |-Typedef 0x56469a75b390 'int64_t'
|   `-TypedefType 0x56469a734630 '__int64_t' sugar
|     |-Typedef 0x56469a734208 '__int64_t'
|     `-BuiltinType 0x56469a6f25a0 'long'
|-EnumDecl 0x56469abe9968 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x56469abe9ae0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x56469abe9ac0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x56469abe9a98 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x56469abe9a80 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x56469abe9a50 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x56469abe9bd8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x56469abe9bb8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x56469abe9b90 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x56469abe9b78 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x56469abe9b50 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x56469abe9b30 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x56469abe9c28 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x56469abe9d30 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56469abea280 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abe9d10 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x56469abe9cf0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x56469abe9dc0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56469abea298 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abe9da0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56469abe9d80 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x56469abe9e50 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56469abea2b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abe9e30 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56469abe9e10 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56469abe9ee0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56469abea2c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abe9ec0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56469abe9ea0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x56469abe9f70 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56469abea2e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abe9f50 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56469abe9f30 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56469abea000 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56469abea2f8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abe9fe0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x56469abe9fc0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x56469abea090 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56469abea310 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abea070 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x56469abea050 <col:26> 'int' EnumConstant 0x56469abe9d30 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x56469abea160 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56469abea328 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abea140 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x56469abea120 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x56469abea0e0 <col:27> 'int' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x56469abea100 <col:44> 'int' EnumConstant 0x56469abea000 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x56469abea230 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x56469abea340 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469abea210 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x56469abea1f0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x56469abea1b0 <col:27> 'int' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x56469abea1d0 <col:44> 'int' EnumConstant 0x56469abe9ee0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x56469abea358 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x56469abea460 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x56469abea4b0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469abea440 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x56469abea420 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x56469abea4d8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x56469a84e480 'uninitialized_type'
|   `-CXXRecord 0x56469a84e3e8 'uninitialized_type'
|-CXXRecordDecl 0x56469abea530 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x56469abea640 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abfaa48 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56469abfab68 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x56469abfab20 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x56469abfaab0 <col:9> '<bound member function type>' ->assign 0x56469abef288
|     | `-CXXThisExpr 0x56469abfaaa0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56469abfaae0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56469abfab50 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56469abfab00 <col:19> 'int' 0
|-CXXConstructorDecl 0x56469abea888 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x56469abea700 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x56469abea778 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56469abf6380 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56469abf6360 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abfab80 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56469abfacd0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x56469abfac58 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x56469abfabe8 <col:9> '<bound member function type>' ->assign 0x56469abef288
|     | `-CXXThisExpr 0x56469abfabd8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56469abfaca0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56469abfac88 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56469abfac18 <col:16> 'long' lvalue ParmVar 0x56469abea700 'sec' 'long'
|     `-ImplicitCastExpr 0x56469abfacb8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56469abfac38 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abea778 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56469abeaae8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56469abea958 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x56469abea9d0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56469abf63b8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56469abf6398 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abface8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56469abfae20 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x56469abfadc0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x56469abfad50 <col:9> '<bound member function type>' ->assign 0x56469abef288
|     | `-CXXThisExpr 0x56469abfad40 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56469abfadf0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56469abfad80 <col:16> 'int' lvalue ParmVar 0x56469abea958 'sec' 'int'
|     `-ImplicitCastExpr 0x56469abfae08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56469abfada0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abea9d0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56469abead48 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x56469abeabb8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x56469abeac30 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56469abf63f0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56469abf63d0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abfae38 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56469abfaf88 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x56469abfaf10 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x56469abfaea0 <col:9> '<bound member function type>' ->assign 0x56469abef288
|     | `-CXXThisExpr 0x56469abfae90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56469abfaf58 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56469abfaf40 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56469abfaed0 <col:16> 'unsigned long' lvalue ParmVar 0x56469abeabb8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x56469abfaf70 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56469abfaef0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abeac30 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56469abebee0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x56469abeae18 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x56469abeae90 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56469abf6428 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56469abf6408 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abfafa0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56469abfb0f0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x56469abfb078 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x56469abfb008 <col:9> '<bound member function type>' ->assign 0x56469abef288
|     | `-CXXThisExpr 0x56469abfaff8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56469abfb0c0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56469abfb0a8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56469abfb038 <col:16> 'unsigned int' lvalue ParmVar 0x56469abeae18 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x56469abfb0d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56469abfb058 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abeae90 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56469abec040 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x56469abebfb0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x56469abec1d8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x56469abec118 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x56469abec408 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x56469abec310 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x56469abec5b8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x56469abec4f8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abfb190 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x56469abfb108 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x56469abec4f8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56469abfb1f0 <col:19, line:214:5>
|-CXXConstructorDecl 0x56469abec788 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x56469abec6c8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abfb200 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56469abfb2b0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x56469abfb288 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x56469abfb258 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x56469abec6c8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x56469abec978 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x56469abec8f0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x56469abe9490 'Timestamp'
|   | `-CXXRecord 0x56469abe96e8 'Timestamp'
|   `-ParenType 0x56469abec890 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x56469abec860 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x56469abe9a30 'Timestamp::seconds_type' sugar
|         |-Typedef 0x56469abe98a8 'seconds_type'
|         `-TypedefType 0x56469a84e850 'int32_t' sugar
|           |-Typedef 0x56469a75b328 'int32_t'
|           `-TypedefType 0x56469a734510 '__int32_t' sugar
|             |-Typedef 0x56469a734128 '__int32_t'
|             `-BuiltinType 0x56469a6f2580 'int'
|-CXXConversionDecl 0x56469abecab8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56469abecb88 <line:225:5, line:231:5> line:225:17 used is_negative 'bool () const' inline
| `-CompoundStmt 0x56469abfb3b8 <col:37, line:231:5>
|   `-ReturnStmt 0x56469abfb3a8 <line:227:9, col:23>
|     `-BinaryOperator 0x56469abfb388 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x56469abfb358 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56469abfb308 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56469abf3888
|       |   `-MemberExpr 0x56469abfb2d8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56469abf4838
|       |     `-CXXThisExpr 0x56469abfb2c8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56469abfb370 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x56469abfb338 <col:23> 'int' 0
|-CXXMethodDecl 0x56469abecc48 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x56469abecd08 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56469abecdc8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x56469abece88 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x56469abecf48 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56469abed0b8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x56469abecff8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x56469abed200 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x56469abed170 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469abed2c8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56469abed368 <col:54> "" ""
|-CXXMethodDecl 0x56469abed3f8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56469abed498 <col:54> "" ""
|-CXXMethodDecl 0x56469abed528 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56469abed5c8 <col:54> "" ""
|-CXXMethodDecl 0x56469abed6c8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x56469abed798 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x56469abed8c8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x56469abed9c0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x56469abedaf8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56469abfb5d0 <col:39, line:271:5>
|   `-ReturnStmt 0x56469abfb5c0 <line:267:9, col:61>
|     `-CallExpr 0x56469abfb560 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56469abfb548 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469abfb3d0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56469abf4b68 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56469abfb590 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56469abfb430 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56469abf3888
|       |   `-MemberExpr 0x56469abfb400 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56469abf4838
|       |     `-CXXThisExpr 0x56469abfb3f0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56469abfb5a8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56469abfb4d0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56469abfb4a0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56469abfb460 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56469abfb4b8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56469abfb480 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea000 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56469abedbb8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56469abfb790 <col:39, line:279:5>
|   `-ReturnStmt 0x56469abfb780 <line:275:9, col:61>
|     `-CallExpr 0x56469abfb720 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56469abfb708 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469abfb5e8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56469abf4b68 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56469abfb750 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56469abfb648 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56469abf3888
|       |   `-MemberExpr 0x56469abfb618 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56469abf4838
|       |     `-CXXThisExpr 0x56469abfb608 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56469abfb768 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56469abfb6e8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56469abfb6b8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56469abfb678 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56469abfb6d0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56469abfb698 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abe9ee0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56469abedc78 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56469abfb928 <col:39, line:287:5>
|   `-ReturnStmt 0x56469abfb918 <line:283:9, col:53>
|     `-BinaryOperator 0x56469abfb8f8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x56469abfb8c8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56469abfb7e8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56469abf3888
|       |   `-MemberExpr 0x56469abfb7b8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56469abf4838
|       |     `-CXXThisExpr 0x56469abfb7a8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56469abfb8e0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x56469abfb8a8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56469abfb888 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56469abfb858 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56469abfb818 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abe9d30 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56469abfb870 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56469abfb838 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56469abedd68 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56469abfcbc0 <col:40, line:293:5>
|   |-DeclStmt 0x56469abfba70 <line:291:9, col:48>
|   | `-VarDecl 0x56469abfb950 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56469abfba50 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56469abfb9f8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56469abfb9c8 <col:22> '<bound member function type>' ->subsec 0x56469abecd08
|   |     |   `-CXXThisExpr 0x56469abfb9b8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56469abfba38 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56469abfba18 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea160 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56469abfcbb0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x56469abfcb98 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56469abfcb68 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56469abfcb50 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56469abfcb30 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56469abfcb00 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56469abfc898 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56469abfc880 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56469abfba88 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56469abfb950 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56469abfcaa0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56469abfca88 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56469abfca58 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56469abfc8b0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56469abfc820 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56469abfc808 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56469abfc7b8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56469abe9638 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56469abfc758 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56469abfbab8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56469abfbaa8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56469abfc7a0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56469abfc788 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56469abfbf78 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56469abfbae0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56469abfbb70 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56469abfbb40 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56469abfbb00 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea160 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56469abfbb58 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56469abfbb20 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56469abfb950 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56469abfcad0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56469abfc868 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56469abfc858 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56469abede28 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56469abfd118 <col:40, line:302:5>
|   |-DeclStmt 0x56469abfcd10 <line:297:9, col:48>
|   | `-VarDecl 0x56469abfcbf0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56469abfccf0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56469abfcc98 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56469abfcc68 <col:22> '<bound member function type>' ->subsec 0x56469abecd08
|   |     |   `-CXXThisExpr 0x56469abfcc58 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56469abfccd8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56469abfccb8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea230 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56469abfd108 <line:298:9, col:70>
|     `-ExprWithCleanups 0x56469abfd0f0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56469abfd0c0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56469abfd0a8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56469abfd088 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56469abfd058 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56469abfcf80 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56469abfcf68 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56469abfcd28 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56469abfcbf0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56469abfcff8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56469abfcfe0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56469abfcfb0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56469abfcf98 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56469abfcf08 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56469abfcef0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56469abfced0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56469abe9638 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56469abfce70 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56469abfcd58 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56469abfcd48 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56469abfceb8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56469abfcea0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56469abfce30 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56469abfcd80 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56469abfce10 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56469abfcde0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56469abfcda0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea230 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56469abfcdf8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56469abfcdc0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56469abfcbf0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56469abfd028 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56469abfcf50 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56469abfcf40 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56469abedee8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56469abfd1a0 <col:40, line:306:5>
|   `-ReturnStmt 0x56469abfd190 <line:305:9, col:17>
|     `-CXXConstructExpr 0x56469abfd160 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x56469abfd148 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469abfd138 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x56469abee088 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x56469abedf98 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x56469abee258 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x56469abee160 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x56469abee348 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x56469abee4b8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x56469abee3f8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x56469abfd2e8 <col:56, line:320:5>
|   `-ReturnStmt 0x56469abfd2d8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x56469abfd2c0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x56469abfd290 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56469abfd278 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56469abfd238 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56469abfd208 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56469abfd1c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56469abee3f8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x56469abfd220 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56469abfd1e8 <col:31> 'int' 0
|-CXXMethodDecl 0x56469abee6f8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56469abee570 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abee5e8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469abfd4b8 <col:72, line:326:5>
|   `-ReturnStmt 0x56469abfd4a8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x56469abfd490 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56469abfd460 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56469abfd448 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56469abfd408 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56469abfd3f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56469abfd310 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56469abee570 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56469abfd3b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56469abfd398 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56469abfd330 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56469abf2fe0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56469abfd3d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56469abfd350 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abee5e8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469abee8a8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56469abee7b8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56469abfdb80 <col:56, line:337:5>
|   |-DeclStmt 0x56469abfd7b8 <line:329:9, col:51>
|   | `-VarDecl 0x56469abfd4e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56469abfd7a0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56469abfd770 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56469abfd758 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56469abfd740 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56469abfd710 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56469abfd6f8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56469abfd6e0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56469abfd5d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56469abfd970 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56469abfd820 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56469abf3888
|   | | `-MemberExpr 0x56469abfd7f0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56469abf4838
|   | |   `-DeclRefExpr 0x56469abfd7d0 <col:9> 'Timestamp' lvalue Var 0x56469abfd4e0 't' 'Timestamp'
|   | `-BinaryOperator 0x56469abfd950 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56469abfd920 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56469abfd850 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56469abee7b8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56469abfd938 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56469abfd900 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56469abfd8e0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56469abfd8b0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56469abfd870 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56469abfd8c8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56469abfd890 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea000 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56469abfdb68 <line:336:9, col:16>
|     `-CXXConstructExpr 0x56469abfdb38 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56469abfdb20 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56469abfdb00 <col:16> 'Timestamp' lvalue Var 0x56469abfd4e0 't' 'Timestamp'
|-CXXMethodDecl 0x56469abeea70 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56469abee960 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abee9d8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469abfdd38 <col:72, line:343:5>
|   `-ReturnStmt 0x56469abfdd28 <line:342:9, col:51>
|     `-ExprWithCleanups 0x56469abfdd10 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56469abfdce0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56469abfdcc8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56469abfdc88 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56469abfdc70 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56469abfdbb8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56469abee960 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56469abfdc30 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56469abfdc18 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56469abfdbd8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56469abf3128 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56469abfdc58 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56469abfdbf8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abee9d8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469abeebc0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56469abeeb30 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56469abfe180 <col:56, line:354:5>
|   |-DeclStmt 0x56469abfdf28 <line:346:9, col:51>
|   | `-VarDecl 0x56469abfdd60 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56469abfdf10 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56469abfdee0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56469abfdec8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56469abfdeb0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56469abfde80 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56469abfde68 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56469abfde50 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56469abfde20 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56469abfe0e0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56469abfdf90 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56469abf3888
|   | | `-MemberExpr 0x56469abfdf60 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56469abf4838
|   | |   `-DeclRefExpr 0x56469abfdf40 <col:9> 'Timestamp' lvalue Var 0x56469abfdd60 't' 'Timestamp'
|   | `-BinaryOperator 0x56469abfe0c0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56469abfe090 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56469abfdfc0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56469abeeb30 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56469abfe0a8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56469abfe070 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56469abfe050 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56469abfe020 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56469abfdfe0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56469abfe038 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56469abfe000 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abe9ee0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56469abfe168 <line:353:9, col:16>
|     `-CXXConstructExpr 0x56469abfe138 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56469abfe120 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56469abfe100 <col:16> 'Timestamp' lvalue Var 0x56469abfdd60 't' 'Timestamp'
|-CXXMethodDecl 0x56469abeed88 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56469abeec78 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abeecf0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469abfe338 <col:72, line:360:5>
|   `-ReturnStmt 0x56469abfe328 <line:359:9, col:51>
|     `-ExprWithCleanups 0x56469abfe310 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56469abfe2e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56469abfe2c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56469abfe288 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56469abfe270 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56469abfe1b8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56469abeec78 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56469abfe230 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56469abfe218 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56469abfe1d8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56469abf3270 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56469abfe258 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56469abfe1f8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abeecf0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469abeeed8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56469abeee48 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56469ac0aca8 <col:56, line:371:5>
|   |-DeclStmt 0x56469abfe528 <line:363:9, col:51>
|   | `-VarDecl 0x56469abfe360 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56469abfe510 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56469abfe4e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56469abfe4c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56469abfe4b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56469abfe480 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56469abfe468 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56469abfe450 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56469abfe420 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56469ac0ac08 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56469abfe590 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56469abf3888
|   | | `-MemberExpr 0x56469abfe560 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56469abf4838
|   | |   `-DeclRefExpr 0x56469abfe540 <col:9> 'Timestamp' lvalue Var 0x56469abfe360 't' 'Timestamp'
|   | `-CallExpr 0x56469ac0aba8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x56469ac0ab90 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56469abfe5c0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56469abf4b68 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x56469ac0abd8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56469abfe5e0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x56469abeee48 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56469ac0abf0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x56469ac0ab70 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x56469ac0ab40 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x56469abfe600 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abe9d30 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x56469ac0ab58 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x56469abfe620 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56469ac0ac90 <line:370:9, col:16>
|     `-CXXConstructExpr 0x56469ac0ac60 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56469ac0ac48 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56469ac0ac28 <col:16> 'Timestamp' lvalue Var 0x56469abfe360 't' 'Timestamp'
|-CXXMethodDecl 0x56469abeefc8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x56469ac0ade8 <col:39, line:377:5>
|   `-ReturnStmt 0x56469ac0add8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x56469ac0adc0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x56469ac0ad90 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56469ac0ad78 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56469ac0ad38 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x56469ac0ace0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x56469ac0ad20 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56469ac0ad00 <col:29> 'int' 1
|-CXXMethodDecl 0x56469abef088 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x56469ac0aec8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x56469ac0ae80 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x56469ac0ae10 <col:9> '<bound member function type>' ->assign 0x56469abef288
|     | `-CXXThisExpr 0x56469ac0ae00 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56469ac0ae40 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56469ac0aeb0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56469ac0ae60 <col:19> 'int' 0
|-CXXMethodDecl 0x56469abef288 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56469abef138 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abef1b0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56469abf6460 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56469abf6440 <col:60> 'int' 0
| `-CompoundStmt 0x56469ac0b0c0 <col:63, line:395:5>
|   `-BinaryOperator 0x56469ac0b0a0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x56469ac0af20 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56469abf3888
|     | `-MemberExpr 0x56469ac0aef0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56469abf4838
|     |   `-CXXThisExpr 0x56469ac0aee0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x56469ac0b080 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x56469ac0b010 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x56469ac0afb0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x56469ac0af98 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x56469ac0af80 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x56469ac0af50 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56469abef138 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x56469ac0aff8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x56469ac0afd8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x56469ac0b068 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x56469ac0b050 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x56469ac0b030 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abef1b0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469abef458 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56469abef348 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abef3c0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0b218 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x56469ac0b1d0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x56469ac0b0e8 <col:9> '<bound member function type>' ->assign 0x56469abef288
|     | `-CXXThisExpr 0x56469ac0b0d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56469ac0b200 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56469ac0b118 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56469abef348 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56469ac0b190 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56469ac0b178 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469ac0b138 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56469abf3128 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56469ac0b1b8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56469ac0b158 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abef3c0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469abef628 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56469abef518 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abef590 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0b370 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x56469ac0b328 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x56469ac0b240 <col:9> '<bound member function type>' ->assign 0x56469abef288
|     | `-CXXThisExpr 0x56469ac0b230 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56469ac0b358 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56469ac0b270 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56469abef518 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56469ac0b2e8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56469ac0b2d0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469ac0b290 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56469abf3270 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56469ac0b310 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56469ac0b2b0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abef590 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469abef7f8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56469abef6e8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abef760 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56469abf6498 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56469abf6478 <col:57> 'int' 0
| `-DeprecatedAttr 0x56469abef8a8 <col:75> "" ""
|-CXXMethodDecl 0x56469abefa38 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56469abef928 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abef9a0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469abefae8 <col:74> "" ""
|-CXXMethodDecl 0x56469abefc78 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56469abefb68 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56469abefbe0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469abefd28 <col:74> "" ""
|-CXXMethodDecl 0x56469abefdb8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x56469abefe58 <col:42> "" ""
|-CXXMethodDecl 0x56469abf2690 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x56469abf2570 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56469abf25f0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x56469abf2760 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x56469abf2820 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x56469abf28c0 <col:20>
| `-OptimizeNoneAttr 0x56469abf2918 <col:30>
|-CXXMethodDecl 0x56469abf2960 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x56469abf2a20 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x56469abf2ae0 <line:466:5, col:40> col:29 used now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56469abf2ba0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x56469abf2c60 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56469abf2d20 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x56469abf2de0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56469abf2ea0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x56469abf2fe0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56469abf2f50 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0b4b8 <col:58, line:512:5>
|   `-ReturnStmt 0x56469ac0b4a8 <line:511:9, col:53>
|     `-BinaryOperator 0x56469ac0b488 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56469ac0b458 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56469ac0b388 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abf2f50 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56469ac0b470 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56469ac0b438 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56469ac0b418 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56469ac0b3e8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56469ac0b3a8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56469ac0b400 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56469ac0b3c8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea000 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56469abf3128 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56469abf3098 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0b600 <col:58, line:516:5>
|   `-ReturnStmt 0x56469ac0b5f0 <line:515:9, col:53>
|     `-BinaryOperator 0x56469ac0b5d0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56469ac0b5a0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56469ac0b4d0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abf3098 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56469ac0b5b8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56469ac0b580 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56469ac0b560 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56469ac0b530 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56469ac0b4f0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56469ac0b548 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56469ac0b510 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abe9ee0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56469abf3270 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56469abf31e0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0b748 <col:58, line:520:5>
|   `-ReturnStmt 0x56469ac0b738 <line:519:9, col:53>
|     `-BinaryOperator 0x56469ac0b718 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56469ac0b6e8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56469ac0b618 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abf31e0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56469ac0b700 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56469ac0b6c8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56469ac0b6a8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56469ac0b678 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56469ac0b638 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abe9d30 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56469ac0b690 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56469ac0b658 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56469abf33b8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56469abf3328 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0b890 <col:60, line:524:5>
|   `-ReturnStmt 0x56469ac0b880 <line:523:9, col:55>
|     `-BinaryOperator 0x56469ac0b860 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56469ac0b830 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56469ac0b760 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abf3328 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56469ac0b848 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56469ac0b810 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56469ac0b7f0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56469ac0b7c0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56469ac0b780 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56469ac0b7d8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56469ac0b7a0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea000 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56469abf3500 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56469abf3470 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0b9d8 <col:60, line:528:5>
|   `-ReturnStmt 0x56469ac0b9c8 <line:527:9, col:55>
|     `-BinaryOperator 0x56469ac0b9a8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56469ac0b978 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56469ac0b8a8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abf3470 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56469ac0b990 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56469ac0b958 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56469ac0b938 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56469ac0b908 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56469ac0b8c8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56469ac0b920 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56469ac0b8e8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abe9ee0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56469abf3648 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56469abf35b8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0bb20 <col:60, line:532:5>
|   `-ReturnStmt 0x56469ac0bb10 <line:531:9, col:55>
|     `-BinaryOperator 0x56469ac0baf0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56469ac0bac0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56469ac0b9f0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abf35b8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56469ac0bad8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56469ac0baa0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56469ac0ba80 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56469ac0ba50 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56469ac0ba10 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abe9d30 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56469ac0ba68 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56469ac0ba30 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56469abea090 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56469abf36f0 prev 0x56469abea530 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56469abf37e8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56469abf3888 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x56469abfa650 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56469abfaa38 <col:11>
| |-CXXConstructorDecl 0x56469abfa730 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56469abfa818 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56469abfb180 <col:11>
| |-CXXConstructorDecl 0x56469abfa8b8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x56469abfa9c8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x56469abfc9d8 <col:11>
| |-CXXDestructorDecl 0x56469abfbce8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56469a902678 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56469a902788 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56469a903050 <col:11>
| |   `-ReturnStmt 0x56469a903040 <col:11>
| |     `-UnaryOperator 0x56469a903028 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56469a903018 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x56469a9027f8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56469a902908 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x56469ac90d10 <col:11>
|     `-ReturnStmt 0x56469ac90d00 <col:11>
|       `-UnaryOperator 0x56469ac90ce8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ac90cd8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x56469abf38f0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56469abf39f0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56469abf3bf0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abf39d0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56469abf39b0 <col:21> 'int' 0
| |-EnumConstantDecl 0x56469abf3a80 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56469abf3c08 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abf3a60 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56469abf3a40 <col:23> 'int' 1
| |-EnumConstantDecl 0x56469abf3b10 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56469abf3c20 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469abf3af0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56469abf3ad0 <col:23> 'int' 2
| `-EnumConstantDecl 0x56469abf3ba0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56469abf3c38 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469abf3b80 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56469abf3b60 <col:27> 'int' 3
|-CXXMethodDecl 0x56469abf3c78 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56469abf3d40 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56469abf3f48 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56469abf3df0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56469abf3e70 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x56469abf64b0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56469abf4158 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56469abf4008 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56469abf4080 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56469abf4228 <line:632:5, col:40> col:22 used warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56469abf42e8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56469abf4458 <line:640:5, col:57> col:17 used warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56469abf4398 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56469abf4520 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56469abf45e0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56469abf46a0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56469abf4760 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56469abf4800 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56469abf4838 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56469abf48a8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x56469ac0bb38 <col:27, line:684:5>
|-CXXMethodDecl 0x56469abf4968 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x56469ac0bb48 <col:27, line:696:5>
|-CXXMethodDecl 0x56469abf4b68 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56469abf4a18 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56469abf4a90 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0bcd0 <col:66, line:700:5>
|   `-ReturnStmt 0x56469ac0bcc0 <line:699:9, col:31>
|     `-CallExpr 0x56469ac0bc60 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x56469ac0bc48 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469ac0bbf8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x56469aa76f18 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x56469ac0bc90 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x56469ac0bbb8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56469abf4a18 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x56469ac0bca8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56469ac0bbd8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abf4a90 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469abf4ed8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56469abf4c28 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56469abf4ca0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56469abf4d18 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56469abf4d90 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac0c020 <col:64, line:707:5>
|   |-DeclStmt 0x56469ac0bd60 <line:704:9, col:24>
|   | `-VarDecl 0x56469ac0bcf8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x56469ac0bf70 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x56469ac0bd78 <col:9> 'int32_t':'int' lvalue ParmVar 0x56469abf4ca0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x56469ac0bf58 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x56469ac0bef0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x56469ac0bed8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac0be58 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x56469aa7c1e8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x56469ac0bf28 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56469ac0bdf8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56469abf4d18 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x56469ac0bf40 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56469ac0be18 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469abf4d90 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x56469ac0be38 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x56469ac0bcf8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x56469ac0c000 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x56469ac0bf90 <col:9> 'int32_t':'int' lvalue ParmVar 0x56469abf4c28 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x56469ac0bfe8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56469ac0bfd0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x56469ac0bfb0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x56469ac0bcf8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56469abf5178 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56469abf4fa8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56469abf5020 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56469abf5098 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56469abf5418 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56469abf5240 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56469abf52b8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56469abf5330 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56469abf55a8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56469abf54e0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56469abf57a8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56469abf5660 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56469abf56d8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56469abf5a78 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56469abf59b8 parent 0x56469a6f2488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56469abf5868 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56469abf58e0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56469abf5c98 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56469abf5bd8 parent 0x56469a6f2488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56469abf5ac8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56469abf5b40 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x56469abf5e60 <line:719:5, col:57> col:29
| `-FunctionDecl 0x56469abf5da8 parent 0x56469a6f2488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56469abf5ce8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x56469abf60e8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x56469abf6028 parent 0x56469a6f2488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56469abf5ed8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56469abf5f50 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56469abf6308 <line:721:5, col:73> col:30
| `-FunctionDecl 0x56469abf6248 parent 0x56469a6f2488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56469abf6138 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56469abf61b0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x56469abfbb90 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56469abfbc78 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abfc6e8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x56469abfc6a0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56469abf4838
| |     `-DeclRefExpr 0x56469abfc680 <col:7> 'const Timestamp' lvalue ParmVar 0x56469abfbc78 '' 'const Timestamp &'
| `-CompoundStmt 0x56469abfc748 <col:7>
|-CXXConstructorDecl 0x56469abfbdf8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56469abfbf08 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56469abf4838 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56469abfc9e8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x56469abfc990 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56469abf4838
| |     `-CXXStaticCastExpr 0x56469abfc960 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x56469abfc930 <col:7> 'Timestamp' lvalue ParmVar 0x56469abfbf08 '' 'Timestamp &&'
| `-CompoundStmt 0x56469abfca48 <col:7>
|-CXXDestructorDecl 0x56469abfbfb8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56469a9024c8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56469a9025d8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x56469a9030c8 <col:7>
|   |-CXXMemberCallExpr 0x56469a903068 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x56469a902fa8 <col:7> '<bound member function type>' .operator= 0x56469a902678
|   | | `-MemberExpr 0x56469a902eb8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56469abf4838
|   | |   `-CXXThisExpr 0x56469a902ea8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x56469a902f78 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56469abf4838
|   |   `-DeclRefExpr 0x56469a902f58 <col:7> 'const Timestamp' lvalue ParmVar 0x56469a9025d8 '' 'const Timestamp &'
|   `-ReturnStmt 0x56469a9030b8 <col:7>
|     `-UnaryOperator 0x56469a9030a0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469a903090 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x56469a902978 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56469a902a88 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x56469ac90d88 <col:7>
    |-CXXMemberCallExpr 0x56469ac90d28 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x56469ac90c90 <col:7> '<bound member function type>' .operator= 0x56469a9027f8
    | | `-MemberExpr 0x56469ac90b60 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56469abf4838
    | |   `-CXXThisExpr 0x56469ac90b50 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x56469ac90c60 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56469abf4838
    |   `-CXXStaticCastExpr 0x56469ac90c30 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x56469ac90c00 <col:7> 'Timestamp' lvalue ParmVar 0x56469a902a88 '' 'Timestamp &&'
    `-ReturnStmt 0x56469ac90d78 <col:7>
      `-UnaryOperator 0x56469ac90d60 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56469ac90d50 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad0da80 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x56469ad0dc58 prev 0x56469ad0da80 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56469ad0dce8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56469ad0dd10 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad0f8e0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x56469ad0f890 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x56469ad0e1c0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x56469ad0e0c0 'type'
|     `-TemplateSpecializationType 0x56469ad0e050 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56469ad0df30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x56469ad0df10 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56469ad0def0 <col:24> 'unsigned long' 16
|       `-RecordType 0x56469ad0e030 'char_array<16>'
|         `-ClassTemplateSpecialization 0x56469ad0df50 'char_array'
|-TypedefDecl 0x56469ad0f998 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x56469ad0f960 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x56469ad0f940 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x56469ad0f8e0 'type'
|     `-ElaboratedType 0x56469ad0f890 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x56469ad0e1c0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x56469ad0e0c0 'type'
|         `-TemplateSpecializationType 0x56469ad0e050 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56469ad0df30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x56469ad0df10 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56469ad0def0 <col:24> 'unsigned long' 16
|           `-RecordType 0x56469ad0e030 'char_array<16>'
|             `-ClassTemplateSpecialization 0x56469ad0df50 'char_array'
|-CXXMethodDecl 0x56469ad0fb18 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x56469ad0fa28 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x56469ad0fc08 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56469ad0fce8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56469ad0fce8
|-CXXMethodDecl 0x56469ad0ffb8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56469ad0fec0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x56469ad101f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56469ad10070 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad100e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56469ad103c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56469ad102b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad10330 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56469ad10528 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56469ad105f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56469ad10848 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56469ad106b8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56469ad10730 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56469ad10aa8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x56469ad10918 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56469ad10990 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56469ad10c68 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56469ad10b78 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56469ad10e28 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56469ad10d30 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56469ad1d178 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ad1d228 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ad1d468 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56469ad1d2d8 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad1d350 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56469ad1d708 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56469ad1d610 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x56469ad1d7d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x56469ad1d820 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56469ad1d870 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad0c5d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x56469ad0c7e8 prev 0x56469ad0c5d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ad0d9f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56469ad0d9a0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x56469ad0d980 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x56469ad0d830 'type'
|     `-SubstTemplateTypeParmType 0x56469ad0d650 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469ad0d1a0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56469ad0d0b8 'sized_array_memory'
|-FieldDecl 0x56469ad1d8c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x56469ad1d910 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ad1d948 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x56469ad0c880 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|     `-CXXRecord 0x56469ad0b750 'heap_element'
|-TypedefDecl 0x56469ad1da08 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x56469ad1d9d0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x56469ad0c880 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|       `-CXXRecord 0x56469ad0b750 'heap_element'
|-TypedefDecl 0x56469ad1da98 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56469ad1da60 'const TimerSet::heap_element &'
|   `-QualType 0x56469ad0c881 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56469ad0c880 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|         `-CXXRecord 0x56469ad0b750 'heap_element'
|-TypedefDecl 0x56469ad1db28 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x56469ad1daf0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56469ad0c880 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|       `-CXXRecord 0x56469ad0b750 'heap_element'
|-TypedefDecl 0x56469ad1dbe8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x56469ad1dbb0 'const TimerSet::heap_element *'
|   `-QualType 0x56469ad0c881 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56469ad0c880 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|         `-CXXRecord 0x56469ad0b750 'heap_element'
|-TypedefDecl 0x56469ad1e840 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x56469ad1e7f0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x56469ad1e7d0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x56469ad1e708 'type'
|     `-LValueReferenceType 0x56469ad1e6d0 'const TimerSet::heap_element &'
|       `-QualType 0x56469ad1e471 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x56469ad1e470 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x56469a9c9770 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56469a9c9718 'T'
|           `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|             `-CXXRecord 0x56469ad0b750 'heap_element'
|-TypedefDecl 0x56469ad1e8a8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56469ad1da60 'const TimerSet::heap_element &'
|   `-QualType 0x56469ad0c881 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56469ad0c880 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|         `-CXXRecord 0x56469ad0b750 'heap_element'
|-TypedefDecl 0x56469ad1e900 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad1e968 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x56469ad1daf0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56469ad0c880 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|       `-CXXRecord 0x56469ad0b750 'heap_element'
|-TypedefDecl 0x56469ad1e9d0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x56469ad1dbb0 'const TimerSet::heap_element *'
|   `-QualType 0x56469ad0c881 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56469ad0c880 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad0b7e0 'TimerSet::heap_element'
|         `-CXXRecord 0x56469ad0b750 'heap_element'
|-EnumDecl 0x56469ad1ea28 <line:134:5> col:5
| `-EnumConstantDecl 0x56469ad1eb20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469ad1eb00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469ad1eba8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469ad1ee38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad1ec60 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad1ed00 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x56469ad1f0f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56469ad1efe0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x56469ad1f3b8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56469ad1f2a0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56469ad1f700 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56469ad1f5e0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x56469ad1fa10 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56469ad1f8f0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56469ad1fd00 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad1fb48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad1fbc0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56469ad1fe58 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56469ad1ff38 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad1ff90 <col:30> Inherited
|-CXXMethodDecl 0x56469ad1ffd8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56469ad20088 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad200e0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad201a8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56469ad20258 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad202b0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad202f8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56469ad203a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad20400 <col:30> Inherited
|-CXXMethodDecl 0x56469ad20448 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56469ad204f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad20550 <col:30> Inherited
|-CXXMethodDecl 0x56469ad20598 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56469ad20648 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad206a0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad206c8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad20778 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad20828 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56469ad209e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad208d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad20950 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56469ad20b38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad20aa8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad20ce8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x56469ad20bf0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad20da0 <col:20>
| `-OptimizeNoneAttr 0x56469ad20df8 <col:30>
|-CXXMethodDecl 0x56469ad20f18 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x56469ad20e20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad20fd0 <col:20>
| `-OptimizeNoneAttr 0x56469ad21028 <col:30>
|-CXXMethodDecl 0x56469ad210e0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad21050 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad21228 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad21198 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad21358 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56469ad21488 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56469ad21558 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56469ad21628 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56469ad21768 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad216d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad218b0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad21820 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad219f8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x56469ad21968 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad21ab0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469ad21bb0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469ad21b20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad21c68 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469ad21d28 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x56469ad21e28 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x56469ad21fd8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad21ee8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x56469ad22798 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469ad22090 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x56469ad226f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x56469ad225f8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x56469ad22878 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ad229c8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad22938 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56469ad22a80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469ad22cc8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad22b40 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56469ad22bb8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56469ad22e88 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x56469ad22d98 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56469ad230d8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x56469ad22f50 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56469ad22fc8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56469ad23198 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ad233f8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56469ad23300 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x56469ad234c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469ad234c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad23610 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x56469ad23818 prev 0x56469ad23610 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ad24960 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56469ad24910 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x56469ad248f0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x56469ad247a0 'type'
|     `-SubstTemplateTypeParmType 0x56469ad245c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469ad24110 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56469ad24028 'sized_array_memory'
|-FieldDecl 0x56469ad285b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56469ad28600 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ad28638 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x56469ad238b0 'Timer *' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-PointerType 0x56469ac5b920 'Timer *'
|     `-RecordType 0x56469ac5aa70 'Timer'
|       `-CXXRecord 0x56469ac78598 'Timer'
|-TypedefDecl 0x56469ad286f8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x56469ad286c0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x56469ad238b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ac5b920 'Timer *'
|       `-RecordType 0x56469ac5aa70 'Timer'
|         `-CXXRecord 0x56469ac78598 'Timer'
|-TypedefDecl 0x56469ad287b8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x56469ad28780 'Timer *const &'
|   `-QualType 0x56469ad238b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56469ad238b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ac5b920 'Timer *'
|         `-RecordType 0x56469ac5aa70 'Timer'
|           `-CXXRecord 0x56469ac78598 'Timer'
|-TypedefDecl 0x56469ad28878 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x56469ad28840 'Timer **'
|   `-SubstTemplateTypeParmType 0x56469ad238b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ac5b920 'Timer *'
|       `-RecordType 0x56469ac5aa70 'Timer'
|         `-CXXRecord 0x56469ac78598 'Timer'
|-TypedefDecl 0x56469ad28938 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x56469ad28900 'Timer *const *'
|   `-QualType 0x56469ad238b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56469ad238b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ac5b920 'Timer *'
|         `-RecordType 0x56469ac5aa70 'Timer'
|           `-CXXRecord 0x56469ac78598 'Timer'
|-TypedefDecl 0x56469ad29510 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x56469ad294c0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x56469ad294a0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x56469ad29430 'type'
|     `-SubstTemplateTypeParmType 0x56469ad291f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56469a9c9ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9c9e50 'T'
|       `-PointerType 0x56469ac5b920 'Timer *'
|         `-RecordType 0x56469ac5aa70 'Timer'
|           `-CXXRecord 0x56469ac78598 'Timer'
|-TypedefDecl 0x56469ad29578 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x56469ad28780 'Timer *const &'
|   `-QualType 0x56469ad238b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56469ad238b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ac5b920 'Timer *'
|         `-RecordType 0x56469ac5aa70 'Timer'
|           `-CXXRecord 0x56469ac78598 'Timer'
|-TypedefDecl 0x56469ad295d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad29638 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x56469ad28840 'Timer **'
|   `-SubstTemplateTypeParmType 0x56469ad238b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ac5b920 'Timer *'
|       `-RecordType 0x56469ac5aa70 'Timer'
|         `-CXXRecord 0x56469ac78598 'Timer'
|-TypedefDecl 0x56469ad296a0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x56469ad28900 'Timer *const *'
|   `-QualType 0x56469ad238b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56469ad238b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ac5b920 'Timer *'
|         `-RecordType 0x56469ac5aa70 'Timer'
|           `-CXXRecord 0x56469ac78598 'Timer'
|-EnumDecl 0x56469ad296f8 <line:134:5> col:5
| `-EnumConstantDecl 0x56469ad297f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469ad297d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469ad29878 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469ad29b08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad29930 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad299d0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x56469ad29dc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56469ad29cb0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x56469ad2a088 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56469ad29f70 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56469ad2a3d0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56469ad2a2b0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x56469ad2a6e0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56469ad2a5c0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56469ad2a9d0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad2a818 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad2a890 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56469ad2ab28 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56469ad2ac08 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad2ac60 <col:30> Inherited
|-CXXMethodDecl 0x56469ad2aca8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56469ad2ad58 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad2adb0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad2ae78 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56469ad2af28 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad2af80 <col:30> Inherited
|-CXXMethodDecl 0x56469ad2afc8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56469ad2b078 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad2b0d0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad2b118 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56469ad2b1c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad2b220 <col:30> Inherited
|-CXXMethodDecl 0x56469ad2b268 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56469ad2b318 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad2b370 <col:30> Inherited
|-CXXMethodDecl 0x56469ad2b398 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad2b448 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad2b4f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469ad2b6b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad2b5a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad2b620 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56469ad2b808 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad2b778 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad2b9b8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x56469ad2b8c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad2ba70 <col:20>
| `-OptimizeNoneAttr 0x56469ad2bac8 <col:30>
|-CXXMethodDecl 0x56469ad2bbe8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56469ad2baf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad2bca0 <col:20>
| `-OptimizeNoneAttr 0x56469ad2bcf8 <col:30>
|-CXXMethodDecl 0x56469ad2bdb0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad2bd20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad2bef8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad2be68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad2c028 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x56469ad2c158 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x56469ad2c228 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x56469ad2c2f8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x56469ad2c438 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad2c3a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad2c580 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad2c4f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad2c6c8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56469ad2c638 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad2c780 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469ad2c880 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469ad2c7f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad2c938 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469ad2c9f8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x56469ad2caf8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x56469ad2cc78 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad2cbb8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x56469ad2d448 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469ad2cd30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x56469ad2d3a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x56469ad2d2a8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x56469ad2d528 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ad2d678 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad2d5e8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56469ad2d730 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469ad2d978 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad2d7f0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56469ad2d868 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56469ad2db38 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x56469ad2da48 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56469ad2dd88 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x56469ad2dc00 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56469ad2dc78 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56469ad2de48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ad2e0a8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56469ad2dfb0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x56469ad2e178 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469ad2e178

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac74fd0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ac750e8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x56469ac75178 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x56469ac75200 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x56469ac752f0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56469ac753f0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x56469ac754b0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x56469ac75570 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x56469ac75698 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56469ac75698
| `-ParmVarDecl 0x56469ac757a8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x56469ad2ef28 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56469ad2ef28
  `-ParmVarDecl 0x56469ad2f038 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad0a8d0 prev 0x56469ac8e818 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56469ad0a9c8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x56469ad0aa58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56469ad0aae0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x56469ad0abd8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x56469ad2f3a0 <col:43, col:67>
|   `-ReturnStmt 0x56469ad2f390 <col:45, col:52>
|     `-CXXConstructExpr 0x56469ad2f360 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x56469ad2f330 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x56469ad0c3c0
|         `-CXXThisExpr 0x56469ad2f320 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56469ad0ac98 <line:17:5, col:53> col:22 used timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x56469ad0aea0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x56469ad0ad48 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x56469ad0adc0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x56469ad0af98 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x56469ad0b060 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56469ad2f420 <col:39, col:67>
|   `-ReturnStmt 0x56469ad2f410 <col:41, col:48>
|     `-ImplicitCastExpr 0x56469ad2f3f8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56469ad2f3c8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x56469ad0c4a8
|         `-CXXThisExpr 0x56469ad2f3b8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56469ad0b128 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56469ad2f4a0 <col:35, col:59>
|   `-ReturnStmt 0x56469ad2f490 <col:37, col:44>
|     `-ImplicitCastExpr 0x56469ad2f478 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56469ad2f448 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x56469ad0c510
|         `-CXXThisExpr 0x56469ad2f438 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56469ad0b270 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x56469ad0b1e0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x56469ad0b3b8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56469ad0b328 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56469ad0b5b8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x56469ad0b470 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x56469ad0b4e8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x56469ad0b688 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56469ad0b728 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x56469ad0b750 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469ad0b868 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x56469ad0b908 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x56469ad0b968 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x56469ad0ba98 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x56469ad0b9c8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x56469ad0b908 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x56469ad2f578 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x56469ad2f520 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x56469ad2f4f0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x56469ac79c08
|   |       `-ImplicitCastExpr 0x56469ad2f540 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x56469ad2f4d8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x56469ad2f4b8 <col:17> 'Timer *' lvalue ParmVar 0x56469ad0b9c8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x56469ad0b968 't' 'Timer *'
|   | `-ImplicitCastExpr 0x56469ad2f610 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56469ad2f5d0 <col:41> 'Timer *' lvalue ParmVar 0x56469ad0b9c8 't_' 'Timer *'
|   `-CompoundStmt 0x56469ad2f660 <col:45, line:44:2>
|-CXXRecordDecl 0x56469ad0bb60 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469ad0bc78 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x56469ad0bec8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x56469ad0bd48 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x56469ad0bdc0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x56469ad2f790 <col:71, line:49:2>
|     `-ReturnStmt 0x56469ad2f780 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x56469ad2f748 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x56469ad2f730 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56469ad2f710 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x56469ac18c88 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x56469ad2f690 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x56469ad0b908
|         | `-DeclRefExpr 0x56469ad2f670 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x56469ad0bd48 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x56469ad2f6e0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x56469ad0b908
|           `-DeclRefExpr 0x56469ad2f6c0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x56469ad0bdc0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x56469ad0bf90 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469ad0c0a8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x56469ad0c2c8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x56469ad0c148 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x56469ad0c1c0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x56469ad2f998 <col:63, line:54:2>
|     `-BinaryOperator 0x56469ad2f978 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x56469ad2f828 <col:6, col:12> 'int' lvalue ->_schedpos1 0x56469ac8dcb8
|       | `-ImplicitCastExpr 0x56469ad2f810 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x56469ad2f7e0 <col:6, col:9> 'Timer *' lvalue ->t 0x56469ad0b968
|       |     `-ImplicitCastExpr 0x56469ad2f7c8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x56469ad2f7a8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x56469ad0c1c0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x56469ad2f960 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x56469ad2f940 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x56469ad2f8e8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x56469ad2f8c8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x56469ad2f898 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x56469ad2f858 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x56469ad0c1c0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x56469ad2f8b0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x56469ad2f878 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x56469ad0c148 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x56469ad2f928 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x56469ad2f908 <col:39> 'int' 1
|-FieldDecl 0x56469ad0c3c0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x56469ad0c430 <col:44, col:53> aligned
|   `-ConstantExpr 0x56469ad0c410 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x56469ad0c390 <col:52> 'int' 8
|-FieldDecl 0x56469ad0c4a8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x56469ad0c510 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x56469ad0c578 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x56469ad235b0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x56469ad2e260 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x56469ad2e2c0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x56469ad2e320 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x56469ad2e380 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ad2e470 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x56469ad2e3e0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x56469ad2e538 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x56469ad2fdf0 <col:29, line:81:5>
|   `-IfStmt 0x56469ad2fdc8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x56469ad2fa80 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x56469ad2fa20 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x56469ad2f9f0 <col:6, col:18> '<bound member function type>' .size 0x56469ad206c8
|     |     `-ImplicitCastExpr 0x56469ad2fa68 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x56469ad2f9c0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56469ad235b0
|     |         `-CXXThisExpr 0x56469ad2f9b0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x56469ad2fc70 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x56469ad2fc58 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x56469ad2fc38 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x56469a9024c8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x56469ad2faa8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56469ad0c3c0
|     | | `-CXXThisExpr 0x56469ad2fa98 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x56469ad2fc20 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x56469ad2fbf0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x56469ad0b908
|     |     `-CXXMemberCallExpr 0x56469ad2fbc8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x56469ad2fb98 <col:22, col:34> '<bound member function type>' .unchecked_at 0x56469ad21768
|     |       | `-MemberExpr 0x56469ad2fae8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56469ad235b0
|     |       |   `-CXXThisExpr 0x56469ad2fad8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x56469ad2fb78 <col:47> 'int' 0
|     `-ExprWithCleanups 0x56469ad2fdb0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x56469ad2fd78 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x56469ad2fd60 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56469ad2fd40 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56469a902978 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x56469ad2fcb8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56469ad0c3c0
|         | `-CXXThisExpr 0x56469ad2fca8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x56469ad2fd28 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56469ad2fcf8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56469ad2e678 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x56469ad2e5e8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x56469ad2e740 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x56469ad2e800 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x56469ad2e8c0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x56469ad2e9b0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x56469ad2ea18 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x56469ad2ea18
| `-ParmVarDecl 0x56469ad2eb28 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x56469ad2ebc8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x56469ad2ebc8
| `-ParmVarDecl 0x56469ad2ecd8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x56469ad2ed78 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x56469ad2ed78
| `-ParmVarDecl 0x56469ad2ee88 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x56469ad2f0a8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x56469ad2f0a8
| `-ParmVarDecl 0x56469ad2f1b8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x56469ad2f240 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x56469ad2f240

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.0, %class.Vector.3, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.0, %class.Vector.3, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad54048 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x56469ad54258 prev 0x56469ad54048 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ad56360 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56469ad56310 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x56469ad562f0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x56469ad55170 'type'
|     `-SubstTemplateTypeParmType 0x56469ad245c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469ad24110 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56469ad24028 'sized_array_memory'
|-FieldDecl 0x56469ad56460 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56469ad564b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ad564e8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x56469ad542f0 'pollfd' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-RecordType 0x56469ad52100 'pollfd'
|     `-CXXRecord 0x56469ad52070 'pollfd'
|-TypedefDecl 0x56469ad565a8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x56469ad56570 'pollfd &'
|   `-SubstTemplateTypeParmType 0x56469ad542f0 'pollfd' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad52100 'pollfd'
|       `-CXXRecord 0x56469ad52070 'pollfd'
|-TypedefDecl 0x56469ad56668 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x56469ad56630 'const pollfd &'
|   `-QualType 0x56469ad542f1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56469ad542f0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad52100 'pollfd'
|         `-CXXRecord 0x56469ad52070 'pollfd'
|-TypedefDecl 0x56469ad566f8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x56469ad566c0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56469ad542f0 'pollfd' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad52100 'pollfd'
|       `-CXXRecord 0x56469ad52070 'pollfd'
|-TypedefDecl 0x56469ad567b8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x56469ad56780 'const pollfd *'
|   `-QualType 0x56469ad542f1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56469ad542f0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad52100 'pollfd'
|         `-CXXRecord 0x56469ad52070 'pollfd'
|-TypedefDecl 0x56469ad57390 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x56469ad57340 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x56469ad57320 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x56469ad572b0 'type'
|     `-SubstTemplateTypeParmType 0x56469ad57070 'pollfd' sugar
|       |-TemplateTypeParmType 0x56469a9c9ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9c9e50 'T'
|       `-RecordType 0x56469ad52100 'pollfd'
|         `-CXXRecord 0x56469ad52070 'pollfd'
|-TypedefDecl 0x56469ad573f8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x56469ad56630 'const pollfd &'
|   `-QualType 0x56469ad542f1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56469ad542f0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad52100 'pollfd'
|         `-CXXRecord 0x56469ad52070 'pollfd'
|-TypedefDecl 0x56469ad57450 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad574b8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x56469ad566c0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56469ad542f0 'pollfd' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad52100 'pollfd'
|       `-CXXRecord 0x56469ad52070 'pollfd'
|-TypedefDecl 0x56469ad57520 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x56469ad56780 'const pollfd *'
|   `-QualType 0x56469ad542f1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56469ad542f0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad52100 'pollfd'
|         `-CXXRecord 0x56469ad52070 'pollfd'
|-EnumDecl 0x56469ad57578 <line:134:5> col:5
| `-EnumConstantDecl 0x56469ad57670 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469ad57650 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469ad576f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469ad57988 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad577b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad57850 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x56469ad57c48 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56469ad57b30 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x56469ad57f08 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56469ad57df0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56469ad58250 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56469ad58130 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x56469ad58560 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56469ad58440 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56469ad58850 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad58698 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad58710 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56469ad589a8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56469ad58a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad58ae0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad58b28 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56469ad58bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad58c30 <col:30> Inherited
|-CXXMethodDecl 0x56469ad58cf8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56469ad58da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad58e00 <col:30> Inherited
|-CXXMethodDecl 0x56469ad58e48 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56469ad58ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad58f50 <col:30> Inherited
|-CXXMethodDecl 0x56469ad58f98 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56469ad59048 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad590a0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad590e8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56469ad59198 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad591f0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad59218 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad592c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad59378 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469ad59538 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad59428 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad594a0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56469ad59688 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad595f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad59838 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x56469ad59740 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad598f0 <col:20>
| `-OptimizeNoneAttr 0x56469ad59948 <col:30>
|-CXXMethodDecl 0x56469ad59a68 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x56469ad59970 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad59b20 <col:20>
| `-OptimizeNoneAttr 0x56469ad59b78 <col:30>
|-CXXMethodDecl 0x56469ad59c30 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad59ba0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad59d78 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad59ce8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad59ea8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x56469ad59fd8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x56469ad5a0a8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x56469ad5a178 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x56469ad5a2b8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad5a228 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad5a400 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad5a370 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad5a548 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x56469ad5a4b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad5a600 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469ad5a700 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469ad5a670 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad5a7b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469ad5a878 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x56469ad5a978 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x56469ad5ab28 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad5aa38 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x56469ad5b2e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469ad5abe0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x56469ad5b248 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x56469ad5b148 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x56469ad5b3c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ad5b518 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad5b488 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56469ad5b5d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469ad5b818 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad5b690 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56469ad5b708 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56469ad5b9d8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x56469ad5b8e8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56469ad5bc28 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x56469ad5baa0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56469ad5bb18 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56469ad5bce8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ad5bf48 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56469ad5be50 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x56469ad5c018 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469ad5c018

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad5d500 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x56469ad5d6d8 prev 0x56469ad5d500 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56469ad5d768 <col:46, col:52> col:46 public
|-TypedefDecl 0x56469ad5d790 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad5f3f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x56469ad5f3a0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x56469ad5dc40 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x56469ad5db40 'type'
|     `-TemplateSpecializationType 0x56469ad5dad0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56469ad5d9b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x56469ad5d990 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56469ad5d970 <col:24> 'unsigned long' 24
|       `-RecordType 0x56469ad5dab0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x56469ad5d9d0 'char_array'
|-TypedefDecl 0x56469ad5f4a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x56469ad5f470 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x56469ad5f450 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x56469ad5f3f0 'type'
|     `-ElaboratedType 0x56469ad5f3a0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x56469ad5dc40 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x56469ad5db40 'type'
|         `-TemplateSpecializationType 0x56469ad5dad0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56469ad5d9b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x56469ad5d990 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56469ad5d970 <col:24> 'unsigned long' 24
|           `-RecordType 0x56469ad5dab0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x56469ad5d9d0 'char_array'
|-CXXMethodDecl 0x56469ad5f628 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x56469ad5f538 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x56469ad5f718 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56469ad5f7f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56469ad5f7f8
|-CXXMethodDecl 0x56469ad5fac8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56469ad5f9d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x56469ad5fd08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56469ad5fb80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad5fbf8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56469ad5fed8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56469ad5fdc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad5fe40 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56469ad60038 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56469ad60108 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56469ad60358 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56469ad601c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56469ad60240 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56469ad605b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x56469ad60428 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56469ad604a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56469ad60778 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56469ad60688 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56469ad60938 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56469ad60840 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56469ad609f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ad60aa0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ad60cd8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56469ad60b50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ad60bc8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56469ad60f78 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56469ad60e80 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x56469ad61040 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x56469ad61090 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56469ad610e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.6 = type { %struct.char_array.7*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.6 = type { %struct.char_array.7*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad5c160 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x56469ad5c368 prev 0x56469ad5c160 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ad5d470 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x56469ad5d420 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x56469ad5d400 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x56469ad5d2b0 'type'
|     `-SubstTemplateTypeParmType 0x56469ad5d0d0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469ac952d0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x56469ac951e8 'sized_array_memory'
|-FieldDecl 0x56469ad61130 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x56469ad61180 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ad611b8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x56469ad5c400 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-TypedefDecl 0x56469ad61278 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56469ad61240 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x56469ad5c400 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-TypedefDecl 0x56469ad61338 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56469ad61300 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56469ad5c401 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56469ad5c400 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-TypedefDecl 0x56469ad613c8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x56469ad61390 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56469ad5c400 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-TypedefDecl 0x56469ad61488 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56469ad61450 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56469ad5c401 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56469ad5c400 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-TypedefDecl 0x56469ad620e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x56469ad62090 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x56469ad62070 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x56469ad61fa8 'type'
|     `-LValueReferenceType 0x56469ad61f70 'const SelectSet::SelectorInfo &'
|       `-QualType 0x56469ad61d11 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x56469ad61d10 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x56469a9c9770 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56469a9c9718 'T'
|           `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-TypedefDecl 0x56469ad62148 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56469ad61300 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56469ad5c401 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56469ad5c400 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-TypedefDecl 0x56469ad621a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad62208 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x56469ad61390 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56469ad5c400 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-TypedefDecl 0x56469ad62270 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56469ad61450 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56469ad5c401 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56469ad5c400 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad53bb0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56469ad53b20 'SelectorInfo'
|-EnumDecl 0x56469ad622c8 <line:134:5> col:5
| `-EnumConstantDecl 0x56469ad623c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469ad623a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469ad62448 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469ad626d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad62500 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad625a0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x56469ad62998 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56469ad62880 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x56469ad62c58 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56469ad62b40 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56469ad62fa0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56469ad62e80 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x56469ad632b0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56469ad63190 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56469ad635a0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad633e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad63460 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56469ad636f8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56469ad637d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad63830 <col:30> Inherited
|-CXXMethodDecl 0x56469ad63878 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56469ad63928 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad63980 <col:30> Inherited
|-CXXMethodDecl 0x56469ad63a48 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56469ad63af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad63b50 <col:30> Inherited
|-CXXMethodDecl 0x56469ad63b98 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56469ad63c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad63ca0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad63ce8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56469ad63d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad63df0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad63e38 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56469ad63ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad63f40 <col:30> Inherited
|-CXXMethodDecl 0x56469ad63f68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad64018 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad640c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469ad64288 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad64178 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad641f0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56469ad643d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad64348 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad64588 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x56469ad64490 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad64640 <col:20>
| `-OptimizeNoneAttr 0x56469ad64698 <col:30>
|-CXXMethodDecl 0x56469ad647b8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x56469ad646c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad64870 <col:20>
| `-OptimizeNoneAttr 0x56469ad648c8 <col:30>
|-CXXMethodDecl 0x56469ad64980 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad648f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad64ac8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad64a38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad64bf8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56469ad64d28 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56469ad64df8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56469ad64ec8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56469ad65008 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad64f78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad65150 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad650c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad65298 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x56469ad65208 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad65350 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469ad65450 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469ad653c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad65508 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469ad655c8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x56469ad656c8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x56469ad65878 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad65788 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x56469ad66038 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469ad65930 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x56469ad65f98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x56469ad65e98 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x56469ad66118 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ad67340 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad672b0 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56469ad673f8 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469ad67648 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad674b8 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56469ad67530 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56469ad67808 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x56469ad67718 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56469ad67a58 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x56469ad678d0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56469ad67948 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56469ad67b18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ad67d78 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56469ad67c80 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x56469ad67e48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469ad67e48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.6 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.6 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad52d00 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ad52e18 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x56469ad52ea8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x56469ad52f30 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x56469ad53020 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x56469ad53020
|-CXXMethodDecl 0x56469ad53120 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x56469ad533c0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56469ad531d8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x56469ad53250 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x56469ad532d0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x56469ad53630 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56469ad53490 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x56469ad53508 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x56469ad53588 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x56469ad53788 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x56469ad536f8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x56469ad53850 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x56469ad694f8 <col:34, line:50:5>
|   |-BinaryOperator 0x56469ad68ec8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x56469ad68e88 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x56469ad53fd8
|   | | `-CXXThisExpr 0x56469ad68e78 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x56469ad68eb8 <col:23> 'bool' true
|   `-CallExpr 0x56469ad694d0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x56469ad694b8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56469ad69438 <col:2> 'void (long)' lvalue Function 0x56469ad69338 'ignore_result' 'void (long)' (FunctionTemplate 0x56469a9b9e28 'ignore_result')
|     `-CallExpr 0x56469ad690e0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x56469ad690c8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469ad69048 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x56469ad32e18 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x56469ad69118 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x56469ad68ff0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x56469ad68fd8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x56469ad68f88 <col:22> 'int [2]' lvalue ->_wake_pipe 0x56469ad53f78
|       |   |   `-CXXThisExpr 0x56469ad68f78 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x56469ad68fb8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x56469ad69148 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x56469ad69130 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x56469ad69010 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x56469ad69160 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56469ad69028 <col:41> 'int' 1
|-CXXMethodDecl 0x56469ad53990 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56469ad53900 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56469ad53a58 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56469ad53af8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x56469ad53b20 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469ad53c38 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x56469ad53cd8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x56469ad53d38 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x56469ad53da0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x56469ad53e50 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x56469ad53cd8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x56469ad69558 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56469ad69518 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x56469ad53d38 'write' 'Element *'
|   | `-ImplicitCastExpr 0x56469ad695d8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56469ad69598 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x56469ad53da0 'pollfd' 'int'
|   | `-UnaryOperator 0x56469ad69638 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x56469ad69618 <col:35> 'int' 1
|   `-CompoundStmt 0x56469ad696b0 <line:64:2, line:65:2>
|-FieldDecl 0x56469ad53f78 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x56469ad53fd8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x56469ad5c100 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x56469ad67f30 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x56469ad68168 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x56469ad67f98 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x56469ad68010 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x56469ad68088 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x56469ad68350 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x56469ad68238 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x56469ad682b8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x56469ad68598 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x56469ad68418 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x56469ad68498 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x56469ad687a8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x56469ad68658 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x56469ad686d0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x56469ad688f8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x56469ad68868 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x56469ad689c0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x56469ad68a80 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x56469ad68b48 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x56469ad68b48
| `-ParmVarDecl 0x56469ad68c58 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x56469ad68cf8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x56469ad68cf8
  `-ParmVarDecl 0x56469ad68e08 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.4, %class.Vector.5 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.4, %class.Vector.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac73f38 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ac74058 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x56469ac740e8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56469ac74170 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x56469ac74260 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56469ac74360 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x56469ac74420 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x56469ac744e0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x56469ac745c8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x56469ac746e8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x56469ac746e8
| `-ParmVarDecl 0x56469ac747f8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x56469ad6e2a8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x56469ad6e2a8
  `-ParmVarDecl 0x56469ad6e3b8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469aa19870 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469aa19988 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56469aa19a18 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56469aa19ae8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56469aa19bd0 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56469aa19de8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56469aa19c90 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa19f98 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56469aa19ea0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56469aa1a0e0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56469aa1a050 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56469aa1a228 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56469aa1a198 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa1a370 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56469aa1a2e0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa1a438 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x56469aa1a580 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x56469aa1a4f0 <col:28> col:31 'int'
|-CXXMethodDecl 0x56469aa1a648 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x56469aa1a790 <line:70:5, col:31> col:17 used operator-- 'void (int)' inline
| `-ParmVarDecl 0x56469aa1a700 <col:28> col:31 'int'
|-CXXMethodDecl 0x56469aa1a908 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56469aa1a848 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa1aa50 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56469aa1a9c0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa1ab18 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56469aa1acd8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56469aa1abc8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56469aa1ac40 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa1af28 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56469aa1ad98 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469aa1ae10 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469aa1afd8 <col:86> "" ""
|-CXXMethodDecl 0x56469aa1b248 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56469aa1b0b8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56469aa1b130 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa1b3f8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56469aa1b308 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56469aa1b5a8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56469aa1b4b0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56469aa1b878 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56469aa1b660 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56469aa1b6d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56469aa1b750 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa1bb58 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56469aa1b940 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56469aa1b9b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469aa1ba30 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469aa1bc10 <col:115> "" ""
|-AccessSpecDecl 0x56469aa1bc80 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56469aa1bcb8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469aa1c1c0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56469aa1c1c0
| `-ParmVarDecl 0x56469aa1c2c8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56469aa1c368 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56469aa1c368
| `-ParmVarDecl 0x56469aa1c478 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56469aa51aa8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56469ac448b0 <col:7>
|-CXXConstructorDecl 0x56469aa51b80 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56469aa51b80
| `-ParmVarDecl 0x56469aa51c98 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56469aa51d08 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56469aa51d08
| `-ParmVarDecl 0x56469aa51e18 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56469ac472b0 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad06788 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ad068a8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x56469ad06948 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x56469ad069a8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x56469ad6d8a8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56469ad6d8a8
| `-ParmVarDecl 0x56469ad6d9b8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x56469ad6da58 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56469ad6da58
| `-ParmVarDecl 0x56469ad6db68 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x56469ad6dbd8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x56469ad6dbd8
|-CXXMethodDecl 0x56469ad6e458 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56469ad6e458
| `-ParmVarDecl 0x56469ad6e568 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x56469ad6e5d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56469ad6e5d8
| `-ParmVarDecl 0x56469ad6e6e8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x56469ad793a8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x56469ad79480 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac75e30 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ac75f48 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x56469ac75fd8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x56469ac76060 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x56469ac76120 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-CXXMethodDecl 0x56469ac761e8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x56469ac76288 <col:45> always_inline
|-CXXMethodDecl 0x56469ac763b8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x56469ac762f0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x56469ac76460 <col:49> always_inline
|-CXXConstructorDecl 0x56469ac76558 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56469ac76558
| `-ParmVarDecl 0x56469ac76668 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x56469ac76708 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56469ac76708
| `-ParmVarDecl 0x56469ac76818 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x56469ad6dcc0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x56469ad6dcc0
|-CXXMethodDecl 0x56469ad6e788 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56469ad6e788
| `-ParmVarDecl 0x56469ad6e898 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x56469ad6e908 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56469ad6e908
  `-ParmVarDecl 0x56469ad6ea18 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad69b20 prev 0x56469ad52c70 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56469ad69c18 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x56469ad69ca8 <col:22, col:28> col:22 public
|-EnumDecl 0x56469ad69cd0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x56469ad69de8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x56469ad69dc8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56469ad69db0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469ad69d90 <col:32> 'int' 1
| `-EnumConstantDecl 0x56469ad69e90 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x56469ad69e70 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56469ad69e58 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56469ad69e38 <col:53> 'int' 1000
|-CXXMethodDecl 0x56469ad69f30 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x56469ad69ff0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56469ad6a0d8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x56469ad6ead8 <col:34, col:52>
|   `-ReturnStmt 0x56469ad6eac8 <col:36, col:43>
|     `-MemberExpr 0x56469ad6ea98 <col:43> 'TimerSet' lvalue ->_timers 0x56469ad6bda8
|       `-CXXThisExpr 0x56469ad6ea88 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56469ad6a1c8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x56469ad6eb40 <col:46, col:64>
|   `-ReturnStmt 0x56469ad6eb30 <col:48, col:55>
|     `-MemberExpr 0x56469ad6eb00 <col:55> 'const TimerSet' lvalue ->_timers 0x56469ad6bda8
|       `-CXXThisExpr 0x56469ad6eaf0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56469ad6a2b8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x56469ad6eba8 <col:36, col:55>
|   `-ReturnStmt 0x56469ad6eb98 <col:38, col:45>
|     `-MemberExpr 0x56469ad6eb68 <col:45> 'SelectSet' lvalue ->_selects 0x56469ad6be08
|       `-CXXThisExpr 0x56469ad6eb58 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56469ad6a3a8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x56469ad6ec10 <col:48, col:67>
|   `-ReturnStmt 0x56469ad6ec00 <col:50, col:57>
|     `-MemberExpr 0x56469ad6ebd0 <col:57> 'const SelectSet' lvalue ->_selects 0x56469ad6be08
|       `-CXXThisExpr 0x56469ad6ebc0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56469ad6a468 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x56469ad6a558 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x56469ad6a6c8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x56469ad6a608 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x56469ad6a790 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x56469ad6abd8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x56469ad6a840 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x56469ad6aac0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x56469ad6aca8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x56469ad6ad68 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x56469ad6ae28 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x56469ad6af68 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x56469ad6aed8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x56469ad6b030 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x56469ad6b0f0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x56469ad6b1b0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x56469ad6b270 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x56469ad6b3b0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56469ad6b320 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56469ad6b478 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x56469ad6b538 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x56469ad6b5d8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x56469ad6b6a0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b6f0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b740 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b790 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b7e0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b830 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b880 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b8d0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b920 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56469ad6b970 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x56469ad6b9c0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x56469ad6bab8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x56469ad6ba28 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x56469ad6bc08 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x56469ad6bb78 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x56469ad6bcb0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x56469ad6bce8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x56469ad6bd48 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x56469ad6bda8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x56469ad6be08 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x56469ad6be88 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x56469ad6bef8 <col:40, col:50> aligned
|   `-ConstantExpr 0x56469ad6bed8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x56469ad6be58 <col:48> 'int' 64
|-FieldDecl 0x56469ad6bf68 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x56469ad6bfc8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x56469ad6c0c0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x56469ad6c1d0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x56469ad6c230 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x56469ad6c2b0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x56469ad6c320 <col:36, col:46> aligned
|   `-ConstantExpr 0x56469ad6c300 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x56469ad6c280 <col:44> 'int' 64
|-FieldDecl 0x56469ad6c398 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x56469ad6c3f8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x56469ad6c448 <line:170:3, col:9> col:3 public
|-FieldDecl 0x56469ad6c488 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x56469ad6c4f0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x56469ad6c540 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x56469ad6c6e8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x56469ad6c578 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x56469ad6c5f8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x56469ad6c7e8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x56469ad6c7e8
|-CXXMethodDecl 0x56469ad6c8f0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x56469ad6c9b8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x56469ad6ed08 <col:34, line:217:5>
|   `-ReturnStmt 0x56469ad6ecf8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x56469ad6ece0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56469ad6ecb0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x56469ad03860
|         `-ImplicitCastExpr 0x56469ad6ec98 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x56469ad6ec68 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x56469ad037f8
|             `-MemberExpr 0x56469ad6ec38 <col:16> 'const TaskLink' lvalue ->_task_link 0x56469ad6bce8
|               `-CXXThisExpr 0x56469ad6ec28 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56469ad6ca78 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x56469ad6cb38 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x56469ad73a78 <col:39, line:226:5>
|   |-DeclStmt 0x56469ad6ef58 <line:223:9, col:68>
|   | `-VarDecl 0x56469ad6ed30 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x56469ad6ef10 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x56469ad6eee0 <col:24, col:38> '<bound member function type>' .compare_swap 0x56469aa1f680
|   |     | `-MemberExpr 0x56469ad6eda8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x56469ad6bf68
|   |     |   `-CXXThisExpr 0x56469ad6ed98 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x56469ad6ee98 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x56469ad6ee80 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x56469ad6ee58 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x56469ad6ee38 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x56469ad6ef40 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x56469ad6eec0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x56469ad6efa0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56469ad6ef70 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x56469ad6ed30 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x56469ad73a58 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x56469ad73a28 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x56469ad6f0b8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x56469ad6f088 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x56469ad6f070 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x56469ad6efc8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x56469ad6ed30 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x56469ad6f048 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x56469ad6f030 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x56469ad6f008 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x56469ad6efe8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x56469ad6f118 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x56469ad6f0f8 <col:60> 'int' 0
|       `-CallExpr 0x56469ad73988 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x56469ad73970 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56469ad73950 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x56469ad739c8 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56469ad6f208 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x56469ad739e0 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56469ad6f238 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x56469ad739f8 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x56469ad6f278 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x56469ad73a10 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x56469ad73938 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x56469ad73920 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x56469ad738e0 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x56469ad6cc80 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x56469ad6cbf0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x56469ad6cd48 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x56469ad6ce08 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x56469ad6cec8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x56469ad6cf88 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x56469ad6d048 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x56469ad6d140 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x56469ad6d1a0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56469ad6d230 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x56469ad6d5f8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x56469ad6d5f8
| `-ParmVarDecl 0x56469ad6d708 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x56469ad6ddc8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x56469ad6ddc8
  `-ParmVarDecl 0x56469ad6ded8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Master::SignalInfo
         0 |   int signo
         8 |   class Router * router
        16 |   class String handler
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
        40 |   struct Master::SignalInfo * next
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae84ae0 <../dummy_inc/click/master.hh:87:5, line:98:5> line:87:12 referenced struct SignalInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56469ae84bf8 <col:5, col:12> col:12 implicit referenced struct SignalInfo
|-FieldDecl 0x56469ae84ca0 <line:88:9, col:13> col:13 referenced signo 'int'
|-FieldDecl 0x56469ae84d00 <line:89:9, col:17> col:17 referenced router 'Router *'
|-FieldDecl 0x56469ae84d60 <line:90:9, col:16> col:16 referenced handler 'String'
|-FieldDecl 0x56469ae84de8 <line:91:9, col:21> col:21 next 'Master::SignalInfo *'
|-CXXConstructorDecl 0x56469ae85038 <line:92:9, line:94:9> line:92:9 SignalInfo 'void (int, Router *, const String &)'
| |-ParmVarDecl 0x56469ae84e50 <col:20, col:24> col:24 used signo_ 'int'
| |-ParmVarDecl 0x56469ae84ec8 <col:32, col:40> col:40 used router_ 'Router *'
| |-ParmVarDecl 0x56469ae84f40 <col:49, col:63> col:63 used handler_ 'const String &'
| |-CXXCtorInitializer Field 0x56469ae84ca0 'signo' 'int'
| | `-ImplicitCastExpr 0x56469ae86248 <line:93:21> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x56469ae86208 <col:21> 'int' lvalue ParmVar 0x56469ae84e50 'signo_' 'int'
| |-CXXCtorInitializer Field 0x56469ae84d00 'router' 'Router *'
| | `-ImplicitCastExpr 0x56469ae862c8 <col:37> 'Router *' <LValueToRValue>
| |   `-DeclRefExpr 0x56469ae86288 <col:37> 'Router *' lvalue ParmVar 0x56469ae84ec8 'router_' 'Router *'
| |-CXXCtorInitializer Field 0x56469ae84d60 'handler' 'String'
| | `-CXXConstructExpr 0x56469ae86348 <col:47, col:63> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x56469ae86308 <col:55> 'const String' lvalue ParmVar 0x56469ae84f40 'handler_' 'const String &'
| |-CXXCtorInitializer Field 0x56469ae84de8 'next' 'Master::SignalInfo *'
| | `-ImplicitValueInitExpr 0x56469ae863b8 <<invalid sloc>> 'Master::SignalInfo *'
| `-CompoundStmt 0x56469ae86410 <col:73, line:94:9>
|-CXXMethodDecl 0x56469ae85318 <line:95:9, line:97:9> line:95:14 equals 'bool (int, Router *, const String &) const'
| |-ParmVarDecl 0x56469ae85110 <col:21, col:25> col:25 used signo_ 'int'
| |-ParmVarDecl 0x56469ae85188 <col:33, col:41> col:41 used router_ 'Router *'
| |-ParmVarDecl 0x56469ae85200 <col:50, col:64> col:64 used handler_ 'const String &'
| `-CompoundStmt 0x56469ae866a0 <col:80, line:97:9>
|   `-ReturnStmt 0x56469ae86690 <line:96:13, col:71>
|     `-BinaryOperator 0x56469ae86670 <col:20, col:71> 'bool' '&&'
|       |-BinaryOperator 0x56469ae86580 <col:20, col:49> 'bool' '&&'
|       | |-BinaryOperator 0x56469ae864b0 <col:20, col:29> 'bool' '=='
|       | | |-ImplicitCastExpr 0x56469ae86480 <col:20> 'int' <LValueToRValue>
|       | | | `-MemberExpr 0x56469ae86430 <col:20> 'const int' lvalue ->signo 0x56469ae84ca0
|       | | |   `-CXXThisExpr 0x56469ae86420 <col:20> 'const Master::SignalInfo *' implicit this
|       | | `-ImplicitCastExpr 0x56469ae86498 <col:29> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x56469ae86460 <col:29> 'int' lvalue ParmVar 0x56469ae85110 'signo_' 'int'
|       | `-BinaryOperator 0x56469ae86560 <col:39, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x56469ae86530 <col:39> 'Router *' <LValueToRValue>
|       |   | `-MemberExpr 0x56469ae864e0 <col:39> 'Router *const' lvalue ->router 0x56469ae84d00
|       |   |   `-CXXThisExpr 0x56469ae864d0 <col:39> 'const Master::SignalInfo *' implicit this
|       |   `-ImplicitCastExpr 0x56469ae86548 <col:49> 'Router *' <LValueToRValue>
|       |     `-DeclRefExpr 0x56469ae86510 <col:49> 'Router *' lvalue ParmVar 0x56469ae85188 'router_' 'Router *'
|       `-CXXOperatorCallExpr 0x56469ae86638 <col:60, col:71> 'bool'
|         |-ImplicitCastExpr 0x56469ae86620 <col:68> 'bool (*)(const String &, const String &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56469ae86600 <col:68> 'bool (const String &, const String &)' lvalue Function 0x56469aa505e8 'operator==' 'bool (const String &, const String &)'
|         |-MemberExpr 0x56469ae865b0 <col:60> 'const String' lvalue ->handler 0x56469ae84d60
|         | `-CXXThisExpr 0x56469ae865a0 <col:60> 'const Master::SignalInfo *' implicit this
|         `-DeclRefExpr 0x56469ae865e0 <col:71> 'const String' lvalue ParmVar 0x56469ae85200 'handler_' 'const String &'
|-CXXConstructorDecl 0x56469ae853f8 <line:87:12> col:12 implicit SignalInfo 'void (const Master::SignalInfo &)' inline default noexcept-unevaluated 0x56469ae853f8
| `-ParmVarDecl 0x56469ae85508 <col:12> col:12 'const Master::SignalInfo &'
|-CXXConstructorDecl 0x56469ae855a8 <col:12> col:12 implicit SignalInfo 'void (Master::SignalInfo &&)' inline default noexcept-unevaluated 0x56469ae855a8
| `-ParmVarDecl 0x56469ae856b8 <col:12> col:12 'Master::SignalInfo &&'
|-CXXMethodDecl 0x56469ae85758 <col:12> col:12 implicit operator= 'Master::SignalInfo &(const Master::SignalInfo &)' inline default noexcept-unevaluated 0x56469ae85758
| `-ParmVarDecl 0x56469ae85868 <col:12> col:12 'const Master::SignalInfo &'
|-CXXMethodDecl 0x56469ae858d8 <col:12> col:12 implicit operator= 'Master::SignalInfo &(Master::SignalInfo &&)' inline default noexcept-unevaluated 0x56469ae858d8
| `-ParmVarDecl 0x56469ae859e8 <col:12> col:12 'Master::SignalInfo &&'
`-CXXDestructorDecl 0x56469ae85a70 <col:12> col:12 implicit ~SignalInfo 'void ()' inline default noexcept-unevaluated 0x56469ae85a70

Layout: <CGRecordLayout
  LLVMType:%"struct.Master::SignalInfo" = type { i32, %class.Router*, %class.String, %"struct.Master::SignalInfo"* }
  NonVirtualBaseLLVMType:%"struct.Master::SignalInfo" = type { i32, %class.Router*, %class.String, %"struct.Master::SignalInfo"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469a766448 </usr/include/bits/types/__sigset_t.h:5:9, line:8:1> line:5:9 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
`-FieldDecl 0x56469a766710 <line:7:3, col:68> col:21 __val 'unsigned long [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.__sigset_t = type { [16 x i64] }
  NonVirtualBaseLLVMType:%struct.__sigset_t = type { [16 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae828f8 prev 0x56469ad80438 <../dummy_inc/click/master.hh:16:1, line:114:1> line:16:7 referenced class Master definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56469ae829f0 <col:1, col:7> col:7 implicit referenced class Master
|-AccessSpecDecl 0x56469ae82a80 <col:16, col:22> col:16 public
|-CXXConstructorDecl 0x56469ae82b68 <line:18:5, col:24> col:5 Master 'void (int)'
| `-ParmVarDecl 0x56469ae82ac0 <col:12, col:16> col:16 nthreads 'int'
|-CXXDestructorDecl 0x56469ae82c60 <line:19:5, col:13> col:5 ~Master 'void ()' noexcept-unevaluated 0x56469ae82c60
|-CXXMethodDecl 0x56469ae82d60 <line:21:5, col:14> col:10 use 'void ()'
|-CXXMethodDecl 0x56469ae82e20 <line:22:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x56469ae82ee0 <line:24:5, col:20> col:10 block_all 'void ()'
|-CXXMethodDecl 0x56469ae82fa0 <line:25:5, col:22> col:10 unblock_all 'void ()'
|-CXXMethodDecl 0x56469ae83060 <line:27:5, col:16> col:10 pause 'void ()'
|-CXXMethodDecl 0x56469ae83120 <line:28:5, col:25> col:17 unpause 'void ()' inline
|-CXXMethodDecl 0x56469ae83208 <line:29:5, col:54> col:10 paused 'bool () const'
| `-CompoundStmt 0x56469ae861f0 <col:25, col:54>
|   `-ReturnStmt 0x56469ae861e0 <col:27, col:51>
|     `-BinaryOperator 0x56469ae861c0 <col:34, col:51> 'bool' '>'
|       |-ImplicitCastExpr 0x56469ae86190 <col:34> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | `-CXXMemberCallExpr 0x56469ae86170 <col:34> 'uint32_t':'unsigned int'
|       |   `-MemberExpr 0x56469ae86140 <col:34> '<bound member function type>' .operator unsigned int 0x56469aa19bd0
|       |     `-MemberExpr 0x56469ae860f0 <col:34> 'const atomic_uint32_t' lvalue ->_master_paused 0x56469ae846d8
|       |       `-CXXThisExpr 0x56469ae860e0 <col:34> 'const Master *' implicit this
|       `-ImplicitCastExpr 0x56469ae861a8 <col:51> 'unsigned int' <IntegralCast>
|         `-IntegerLiteral 0x56469ae86120 <col:51> 'int' 0
|-CXXMethodDecl 0x56469ae832d0 <line:31:5, col:27> col:16 nthreads 'int () const' inline
|-CXXMethodDecl 0x56469ae83448 <line:32:5, col:41> col:26 thread 'RouterThread *(int) const' inline
| `-ParmVarDecl 0x56469ae83388 <col:33, col:37> col:37 id 'int'
|-CXXMethodDecl 0x56469ae83510 <line:33:5, col:24> col:10 used wake_somebody 'void ()'
|-CXXMethodDecl 0x56469ae837a0 <line:36:5, col:69> col:9 add_signal_handler 'int (int, Router *, String)'
| |-ParmVarDecl 0x56469ae835c8 <col:28, col:32> col:32 signo 'int'
| |-ParmVarDecl 0x56469ae83640 <col:39, col:47> col:47 router 'Router *'
| `-ParmVarDecl 0x56469ae836b8 <col:55, col:62> col:62 handler 'String' destroyed
|-CXXMethodDecl 0x56469ae83a08 <line:37:5, col:72> col:9 remove_signal_handler 'int (int, Router *, String)'
| |-ParmVarDecl 0x56469ae83870 <col:31, col:35> col:35 signo 'int'
| |-ParmVarDecl 0x56469ae838e8 <col:42, col:50> col:50 router 'Router *'
| `-ParmVarDecl 0x56469ae83960 <col:58, col:65> col:65 handler 'String' destroyed
|-CXXMethodDecl 0x56469ae83b60 <line:38:5, col:46> col:10 used process_signals 'void (RouterThread *)'
| `-ParmVarDecl 0x56469ae83ad0 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x56469ae83cb0 <line:39:5, col:41> col:17 signal_handler 'void (int)' static
| `-ParmVarDecl 0x56469ae83c20 <col:32, col:36> col:36 signo 'int'
|-CXXMethodDecl 0x56469ae83df8 <line:42:5, col:29> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56469ae83d68 <col:22, col:28> col:29 'Router *'
|-VarDecl 0x56469ae83ed0 <line:54:5, col:34> col:34 used signals_pending 'volatile sig_atomic_t':'volatile int' static
|-AccessSpecDecl 0x56469ae83f38 <line:57:3, col:10> col:3 private
|-FieldDecl 0x56469ae83fa0 <line:60:5, col:20> col:20 referenced _threads 'RouterThread **'
|-FieldDecl 0x56469ae84008 <line:61:5, col:9> col:9 referenced _nthreads 'int'
|-FieldDecl 0x56469ae84068 <line:64:5, col:13> col:13 _routers 'Router *'
|-FieldDecl 0x56469ae840d0 <line:65:5, col:9> col:9 _refcount 'int'
|-CXXMethodDecl 0x56469ae841c0 <line:66:5, col:33> col:10 register_router 'void (Router *)'
| `-ParmVarDecl 0x56469ae84130 <col:26, col:32> col:33 'Router *'
|-CXXMethodDecl 0x56469ae84308 <line:67:5, col:32> col:10 prepare_router 'void (Router *)'
| `-ParmVarDecl 0x56469ae84278 <col:25, col:31> col:32 'Router *'
|-CXXMethodDecl 0x56469ae844d0 <line:68:5, col:45> col:10 run_router 'void (Router *, bool)'
| |-ParmVarDecl 0x56469ae843c0 <col:21, col:27> col:28 'Router *'
| `-ParmVarDecl 0x56469ae84438 <col:30, col:35> col:35 foreground 'bool'
|-CXXMethodDecl 0x56469ae84620 <line:69:5, col:35> col:10 unregister_router 'void (Router *)'
| `-ParmVarDecl 0x56469ae84590 <col:28, col:34> col:35 'Router *'
|-FieldDecl 0x56469ae846d8 <line:78:5, col:21> col:21 referenced _master_paused 'atomic_uint32_t'
|-CXXMethodDecl 0x56469ae84748 <line:79:5, col:29> col:17 lock_master 'void ()' inline
|-CXXMethodDecl 0x56469ae84808 <line:80:5, col:31> col:17 unlock_master 'void ()' inline
|-CXXMethodDecl 0x56469ae848c8 <line:82:5, col:23> col:10 request_stop 'void ()'
|-CXXMethodDecl 0x56469ae84a38 <line:83:5, col:37> col:10 verify_stop 'bool (RouterThread *)'
| `-ParmVarDecl 0x56469ae84978 <col:22, col:36> col:36 t 'RouterThread *'
|-CXXRecordDecl 0x56469ae84ae0 <line:87:5, line:98:5> line:87:12 referenced struct SignalInfo definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x56469ae84bf8 <col:5, col:12> col:12 implicit referenced struct SignalInfo
| |-FieldDecl 0x56469ae84ca0 <line:88:9, col:13> col:13 referenced signo 'int'
| |-FieldDecl 0x56469ae84d00 <line:89:9, col:17> col:17 referenced router 'Router *'
| |-FieldDecl 0x56469ae84d60 <line:90:9, col:16> col:16 referenced handler 'String'
| |-FieldDecl 0x56469ae84de8 <line:91:9, col:21> col:21 next 'Master::SignalInfo *'
| |-CXXConstructorDecl 0x56469ae85038 <line:92:9, line:94:9> line:92:9 SignalInfo 'void (int, Router *, const String &)'
| | |-ParmVarDecl 0x56469ae84e50 <col:20, col:24> col:24 used signo_ 'int'
| | |-ParmVarDecl 0x56469ae84ec8 <col:32, col:40> col:40 used router_ 'Router *'
| | |-ParmVarDecl 0x56469ae84f40 <col:49, col:63> col:63 used handler_ 'const String &'
| | |-CXXCtorInitializer Field 0x56469ae84ca0 'signo' 'int'
| | | `-ImplicitCastExpr 0x56469ae86248 <line:93:21> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x56469ae86208 <col:21> 'int' lvalue ParmVar 0x56469ae84e50 'signo_' 'int'
| | |-CXXCtorInitializer Field 0x56469ae84d00 'router' 'Router *'
| | | `-ImplicitCastExpr 0x56469ae862c8 <col:37> 'Router *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56469ae86288 <col:37> 'Router *' lvalue ParmVar 0x56469ae84ec8 'router_' 'Router *'
| | |-CXXCtorInitializer Field 0x56469ae84d60 'handler' 'String'
| | | `-CXXConstructExpr 0x56469ae86348 <col:47, col:63> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x56469ae86308 <col:55> 'const String' lvalue ParmVar 0x56469ae84f40 'handler_' 'const String &'
| | |-CXXCtorInitializer Field 0x56469ae84de8 'next' 'Master::SignalInfo *'
| | | `-ImplicitValueInitExpr 0x56469ae863b8 <<invalid sloc>> 'Master::SignalInfo *'
| | `-CompoundStmt 0x56469ae86410 <col:73, line:94:9>
| |-CXXMethodDecl 0x56469ae85318 <line:95:9, line:97:9> line:95:14 equals 'bool (int, Router *, const String &) const'
| | |-ParmVarDecl 0x56469ae85110 <col:21, col:25> col:25 used signo_ 'int'
| | |-ParmVarDecl 0x56469ae85188 <col:33, col:41> col:41 used router_ 'Router *'
| | |-ParmVarDecl 0x56469ae85200 <col:50, col:64> col:64 used handler_ 'const String &'
| | `-CompoundStmt 0x56469ae866a0 <col:80, line:97:9>
| |   `-ReturnStmt 0x56469ae86690 <line:96:13, col:71>
| |     `-BinaryOperator 0x56469ae86670 <col:20, col:71> 'bool' '&&'
| |       |-BinaryOperator 0x56469ae86580 <col:20, col:49> 'bool' '&&'
| |       | |-BinaryOperator 0x56469ae864b0 <col:20, col:29> 'bool' '=='
| |       | | |-ImplicitCastExpr 0x56469ae86480 <col:20> 'int' <LValueToRValue>
| |       | | | `-MemberExpr 0x56469ae86430 <col:20> 'const int' lvalue ->signo 0x56469ae84ca0
| |       | | |   `-CXXThisExpr 0x56469ae86420 <col:20> 'const Master::SignalInfo *' implicit this
| |       | | `-ImplicitCastExpr 0x56469ae86498 <col:29> 'int' <LValueToRValue>
| |       | |   `-DeclRefExpr 0x56469ae86460 <col:29> 'int' lvalue ParmVar 0x56469ae85110 'signo_' 'int'
| |       | `-BinaryOperator 0x56469ae86560 <col:39, col:49> 'bool' '=='
| |       |   |-ImplicitCastExpr 0x56469ae86530 <col:39> 'Router *' <LValueToRValue>
| |       |   | `-MemberExpr 0x56469ae864e0 <col:39> 'Router *const' lvalue ->router 0x56469ae84d00
| |       |   |   `-CXXThisExpr 0x56469ae864d0 <col:39> 'const Master::SignalInfo *' implicit this
| |       |   `-ImplicitCastExpr 0x56469ae86548 <col:49> 'Router *' <LValueToRValue>
| |       |     `-DeclRefExpr 0x56469ae86510 <col:49> 'Router *' lvalue ParmVar 0x56469ae85188 'router_' 'Router *'
| |       `-CXXOperatorCallExpr 0x56469ae86638 <col:60, col:71> 'bool'
| |         |-ImplicitCastExpr 0x56469ae86620 <col:68> 'bool (*)(const String &, const String &)' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x56469ae86600 <col:68> 'bool (const String &, const String &)' lvalue Function 0x56469aa505e8 'operator==' 'bool (const String &, const String &)'
| |         |-MemberExpr 0x56469ae865b0 <col:60> 'const String' lvalue ->handler 0x56469ae84d60
| |         | `-CXXThisExpr 0x56469ae865a0 <col:60> 'const Master::SignalInfo *' implicit this
| |         `-DeclRefExpr 0x56469ae865e0 <col:71> 'const String' lvalue ParmVar 0x56469ae85200 'handler_' 'const String &'
| |-CXXConstructorDecl 0x56469ae853f8 <line:87:12> col:12 implicit SignalInfo 'void (const Master::SignalInfo &)' inline default noexcept-unevaluated 0x56469ae853f8
| | `-ParmVarDecl 0x56469ae85508 <col:12> col:12 'const Master::SignalInfo &'
| |-CXXConstructorDecl 0x56469ae855a8 <col:12> col:12 implicit SignalInfo 'void (Master::SignalInfo &&)' inline default noexcept-unevaluated 0x56469ae855a8
| | `-ParmVarDecl 0x56469ae856b8 <col:12> col:12 'Master::SignalInfo &&'
| |-CXXMethodDecl 0x56469ae85758 <col:12> col:12 implicit operator= 'Master::SignalInfo &(const Master::SignalInfo &)' inline default noexcept-unevaluated 0x56469ae85758
| | `-ParmVarDecl 0x56469ae85868 <col:12> col:12 'const Master::SignalInfo &'
| |-CXXMethodDecl 0x56469ae858d8 <col:12> col:12 implicit operator= 'Master::SignalInfo &(Master::SignalInfo &&)' inline default noexcept-unevaluated 0x56469ae858d8
| | `-ParmVarDecl 0x56469ae859e8 <col:12> col:12 'Master::SignalInfo &&'
| `-CXXDestructorDecl 0x56469ae85a70 <col:12> col:12 implicit ~SignalInfo 'void ()' inline default noexcept-unevaluated 0x56469ae85a70
|-FieldDecl 0x56469ae85b60 <line:99:5, col:17> col:17 _siginfo 'Master::SignalInfo *'
|-FieldDecl 0x56469ae85bc0 <line:100:5, col:14> col:14 _sig_dispatching 'sigset_t':'__sigset_t'
|-FieldDecl 0x56469ae85c20 <line:101:5, col:14> col:14 _signal_lock 'Spinlock'
|-CXXConstructorDecl 0x56469ae85d68 <line:108:5, col:25> col:5 Master 'void (const Master &)'
| `-ParmVarDecl 0x56469ae85ca8 <col:12, col:24> col:25 'const Master &'
|-CXXMethodDecl 0x56469ae85f18 <line:109:5, col:36> col:13 operator= 'Master &(const Master &)'
| `-ParmVarDecl 0x56469ae85e28 <col:23, col:35> col:36 'const Master &'
|-FriendDecl 0x56469ae85fe0 <line:111:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x56469ae86040 <line:112:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x56469ae860a0 <line:113:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Master = type <{ %class.RouterThread**, i32, [4 x i8], %class.Router*, i32, %class.atomic_uint32_t, %"struct.Master::SignalInfo"*, %struct.__sigset_t, %class.Spinlock, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.Master.base = type <{ %class.RouterThread**, i32, [4 x i8], %class.Router*, i32, %class.atomic_uint32_t, %"struct.Master::SignalInfo"*, %struct.__sigset_t, %class.Spinlock }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad81598 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x56469ad8d5b8 prev 0x56469ad81598 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ad8e5d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56469ad8e580 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x56469ad8e560 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x56469ad8e410 'type'
|     `-SubstTemplateTypeParmType 0x56469ad245c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469ad24110 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56469ad24028 'sized_array_memory'
|-FieldDecl 0x56469ad8e6d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56469ad8e720 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ad8e758 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x56469ad8d650 'Element *' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-PointerType 0x56469ac512f0 'Element *'
|     `-RecordType 0x56469ac51070 'Element'
|       `-CXXRecord 0x56469ac5adc0 'Element'
|-TypedefDecl 0x56469ad8e818 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x56469ad8e7e0 'Element *&'
|   `-SubstTemplateTypeParmType 0x56469ad8d650 'Element *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ac512f0 'Element *'
|       `-RecordType 0x56469ac51070 'Element'
|         `-CXXRecord 0x56469ac5adc0 'Element'
|-TypedefDecl 0x56469ad8e8d8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x56469ad8e8a0 'Element *const &'
|   `-QualType 0x56469ad8d651 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56469ad8d650 'Element *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ac512f0 'Element *'
|         `-RecordType 0x56469ac51070 'Element'
|           `-CXXRecord 0x56469ac5adc0 'Element'
|-TypedefDecl 0x56469ad8e968 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x56469ad8e930 'Element **'
|   `-SubstTemplateTypeParmType 0x56469ad8d650 'Element *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ac512f0 'Element *'
|       `-RecordType 0x56469ac51070 'Element'
|         `-CXXRecord 0x56469ac5adc0 'Element'
|-TypedefDecl 0x56469ad8ea28 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x56469ad8e9f0 'Element *const *'
|   `-QualType 0x56469ad8d651 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56469ad8d650 'Element *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ac512f0 'Element *'
|         `-RecordType 0x56469ac51070 'Element'
|           `-CXXRecord 0x56469ac5adc0 'Element'
|-TypedefDecl 0x56469ad8f600 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x56469ad8f5b0 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x56469ad8f590 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x56469ad8f520 'type'
|     `-SubstTemplateTypeParmType 0x56469ad8f2e0 'Element *' sugar
|       |-TemplateTypeParmType 0x56469a9c9ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9c9e50 'T'
|       `-PointerType 0x56469ac512f0 'Element *'
|         `-RecordType 0x56469ac51070 'Element'
|           `-CXXRecord 0x56469ac5adc0 'Element'
|-TypedefDecl 0x56469ad8f668 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x56469ad8e8a0 'Element *const &'
|   `-QualType 0x56469ad8d651 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56469ad8d650 'Element *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ac512f0 'Element *'
|         `-RecordType 0x56469ac51070 'Element'
|           `-CXXRecord 0x56469ac5adc0 'Element'
|-TypedefDecl 0x56469ad8f6c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad8f728 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x56469ad8e930 'Element **'
|   `-SubstTemplateTypeParmType 0x56469ad8d650 'Element *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469ac512f0 'Element *'
|       `-RecordType 0x56469ac51070 'Element'
|         `-CXXRecord 0x56469ac5adc0 'Element'
|-TypedefDecl 0x56469ad8f790 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x56469ad8e9f0 'Element *const *'
|   `-QualType 0x56469ad8d651 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56469ad8d650 'Element *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469ac512f0 'Element *'
|         `-RecordType 0x56469ac51070 'Element'
|           `-CXXRecord 0x56469ac5adc0 'Element'
|-EnumDecl 0x56469ad8f7e8 <line:134:5> col:5
| `-EnumConstantDecl 0x56469ad8f8e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469ad8f8c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469ad8f968 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469ad8fbf8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad8fa20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad8fac0 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x56469ad8fe88 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x56469ad8fd70 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x56469ad94fb8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x56469ad94ea0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x56469ad952d0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x56469ad951b0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x56469ad955e0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x56469ad954c0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x56469ad958d0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad95718 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad95790 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56469ad95a28 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x56469ad95b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad95b60 <col:30> Inherited
|-CXXMethodDecl 0x56469ad95ba8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x56469ad95c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad95cb0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad95d78 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56469ad95e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad95e80 <col:30> Inherited
|-CXXMethodDecl 0x56469ad95ec8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56469ad95f78 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad95fd0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad96018 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56469ad960c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad96120 <col:30> Inherited
|-CXXMethodDecl 0x56469ad96168 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56469ad96218 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad96270 <col:30> Inherited
|-CXXMethodDecl 0x56469ad96298 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad96348 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad963f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469ad965b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad964a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad96520 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56469ad96708 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad96678 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad968b8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x56469ad967c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad96970 <col:20>
| `-OptimizeNoneAttr 0x56469ad969c8 <col:30>
|-CXXMethodDecl 0x56469ad96ae8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56469ad969f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad96ba0 <col:20>
| `-OptimizeNoneAttr 0x56469ad96bf8 <col:30>
|-CXXMethodDecl 0x56469ad96cb0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad96c20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad96df8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad96d68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad96f28 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x56469ad97058 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x56469ad97128 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x56469ad971f8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x56469ad97338 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad972a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad97480 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad973f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad975c8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56469ad97538 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad97680 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469ad97780 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469ad976f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad97838 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469ad978f8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x56469ad979f8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x56469ad97b78 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad97ab8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x56469ad98338 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469ad97c30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x56469ad98298 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x56469ad98198 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x56469ad98418 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ad98568 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ad984d8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56469ad98620 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469ad98868 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad986e0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x56469ad98758 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56469ad98a28 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x56469ad98938 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x56469ad98c78 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x56469ad98af0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x56469ad98b68 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x56469ad98d38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ad98f98 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x56469ad98ea0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x56469ad99068 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469ad99068

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ac95bb0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x56469ac95d88 prev 0x56469ac95bb0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56469ac95e18 <col:46, col:52> col:46 public
|-TypedefDecl 0x56469ac95e40 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ac977a0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x56469ac97750 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x56469ac97730 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x56469ac96058 'type'
|     `-SubstTemplateTypeParmType 0x56469ac96020 'String' sugar
|       |-TemplateTypeParmType 0x56469a9e9a70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9e9a20 'T'
|       `-RecordType 0x56469aa25250 'String'
|         `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac97858 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x56469ac97820 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x56469ac97800 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56469ac977a0 'type'
|     `-ElaboratedType 0x56469ac97750 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x56469ac97730 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x56469ac96058 'type'
|         `-SubstTemplateTypeParmType 0x56469ac96020 'String' sugar
|           |-TemplateTypeParmType 0x56469a9e9a70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56469a9e9a20 'T'
|           `-RecordType 0x56469aa25250 'String'
|             `-CXXRecord 0x56469aa251c0 'String'
|-CXXMethodDecl 0x56469ac979d8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x56469ac978e8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x56469ac97ac8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56469ac97ba8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x56469ac97e78 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56469ac97d80 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x56469ac980b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56469ac97f30 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ac97fa8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56469ac98288 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56469ac98178 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ac981f0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56469ac983e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56469ac984b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56469ac98708 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56469ac98578 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56469ac985f0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56469ac98968 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x56469ac987d8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56469ac98850 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56469ac98b28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56469ac98a38 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56469ac98ce8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56469ac98bf0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56469ac98da0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ac98e50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ac99088 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56469ac98f00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ac98f78 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56469ac99328 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56469ac99230 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x56469ac993f0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x56469ac99440 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56469ac99490 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.10 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.10 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ac5da00 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x56469ac94618 prev 0x56469ac5da00 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ac95b20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x56469ac95ad0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x56469ac95ab0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56469ac95960 'type'
|     `-SubstTemplateTypeParmType 0x56469ac957f0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x56469a9bf600 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56469a9bf5a8 'F'
|       `-RecordType 0x56469ac95450 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x56469ac95370 'typed_array_memory'
|-FieldDecl 0x56469ac994e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x56469ac99530 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ac99568 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x56469ac946b0 'String' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-RecordType 0x56469aa25250 'String'
|     `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac995f8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x56469ac995c0 'String &'
|   `-SubstTemplateTypeParmType 0x56469ac946b0 'String' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469aa25250 'String'
|       `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac99688 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x56469ac99650 'const String &'
|   `-QualType 0x56469ac946b1 'const String' const
|     `-SubstTemplateTypeParmType 0x56469ac946b0 'String' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469aa25250 'String'
|         `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac99718 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x56469ac996e0 'String *'
|   `-SubstTemplateTypeParmType 0x56469ac946b0 'String' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469aa25250 'String'
|       `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac997a8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x56469ac99770 'const String *'
|   `-QualType 0x56469ac946b1 'const String' const
|     `-SubstTemplateTypeParmType 0x56469ac946b0 'String' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469aa25250 'String'
|         `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac9a400 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x56469ac9a3b0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x56469ac9a390 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x56469ac9a2c8 'type'
|     `-LValueReferenceType 0x56469ac9a290 'const String &'
|       `-QualType 0x56469ac9a031 'const String' const
|         `-SubstTemplateTypeParmType 0x56469ac9a030 'String' sugar
|           |-TemplateTypeParmType 0x56469a9c9770 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56469a9c9718 'T'
|           `-RecordType 0x56469aa25250 'String'
|             `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac9a468 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x56469ac99650 'const String &'
|   `-QualType 0x56469ac946b1 'const String' const
|     `-SubstTemplateTypeParmType 0x56469ac946b0 'String' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469aa25250 'String'
|         `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac9a4c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ac9a528 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x56469ac996e0 'String *'
|   `-SubstTemplateTypeParmType 0x56469ac946b0 'String' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469aa25250 'String'
|       `-CXXRecord 0x56469aa251c0 'String'
|-TypedefDecl 0x56469ac9a590 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x56469ac99770 'const String *'
|   `-QualType 0x56469ac946b1 'const String' const
|     `-SubstTemplateTypeParmType 0x56469ac946b0 'String' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469aa25250 'String'
|         `-CXXRecord 0x56469aa251c0 'String'
|-EnumDecl 0x56469ac9a5e8 <line:134:5> col:5
| `-EnumConstantDecl 0x56469ac9a6e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469ac9a6c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469ac9a768 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x56469ac9a9f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ac9a820 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ac9a8c0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x56469ac9ac88 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x56469ac9ab70 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x56469ac9af48 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x56469ac9ae30 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x56469ac9b260 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x56469ac9b140 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x56469ac9b570 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x56469ac9b450 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x56469ac9b860 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ac9b6a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ac9b720 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56469ac9b988 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56469ac9ba68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ac9bac0 <col:30> Inherited
|-CXXMethodDecl 0x56469ac9bb08 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56469ac9bbb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ac9bc10 <col:30> Inherited
|-CXXMethodDecl 0x56469ac9bcd8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56469ac9bd88 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ac9bde0 <col:30> Inherited
|-CXXMethodDecl 0x56469ac9be28 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56469ac9bed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ac9bf30 <col:30> Inherited
|-CXXMethodDecl 0x56469ac9bf78 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56469ac9c028 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ac9c080 <col:30> Inherited
|-CXXMethodDecl 0x56469ac9c0c8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56469ac9c178 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ac9c1d0 <col:30> Inherited
|-CXXMethodDecl 0x56469ac9c1f8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ac9c2a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ac9c358 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469ac9c550 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ac9c408 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ac9c480 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56469ac9c6a0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469ac9c610 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ac9c848 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x56469ac9c758 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ac9c900 <col:20>
| `-OptimizeNoneAttr 0x56469ac9c958 <col:30>
|-CXXMethodDecl 0x56469ac9ca48 <line:164:5, col:73> col:49 used operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x56469ac9c980 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ac9cb00 <col:20>
| `-OptimizeNoneAttr 0x56469ac9cb58 <col:30>
|-CXXMethodDecl 0x56469ac9cc10 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ac9cb80 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ac9cd58 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ac9ccc8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ac9ce88 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x56469ac9cf88 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x56469ac9d058 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x56469ac9d128 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x56469ac9d268 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ac9d1d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ac9d3b0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ac9d320 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ac9d4f8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x56469ac9d468 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ac9d5b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469ac9d6b0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469ac9d620 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ac9d768 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469ac9d828 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x56469ac9d928 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x56469ac9daa8 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ac9d9e8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x56469ac9e268 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469ac9db60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x56469ac9e1c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x56469ac9e0c8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x56469ac9e348 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ac9e498 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ac9e408 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56469ac9e550 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469ac9e798 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ac9e610 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56469ac9e688 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56469ac9e928 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x56469ac9e868 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56469ac9eb38 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x56469ac9e9f0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56469ac9ea68 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56469ac9ebf8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x56469ac9ee58 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x56469ac9ed60 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x56469ac9ef28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x56469ae6cd88 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.9 = type { %class.vector_memory.10 }
  NonVirtualBaseLLVMType:%class.Vector.9 = type { %class.vector_memory.10 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469aca3c50 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x56469aca3e28 prev 0x56469aca3c50 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56469aca3eb8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56469aca3ee0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca5ad0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x56469aca5a80 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x56469aca4390 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x56469aca4290 'type'
|     `-TemplateSpecializationType 0x56469aca4220 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56469aca4100 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x56469aca40e0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56469aca40c0 <col:24> 'unsigned long' 4
|       `-RecordType 0x56469aca4200 'char_array<4>'
|         `-ClassTemplateSpecialization 0x56469aca4120 'char_array'
|-TypedefDecl 0x56469aca5b88 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x56469aca5b50 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x56469aca5b30 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x56469aca5ad0 'type'
|     `-ElaboratedType 0x56469aca5a80 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x56469aca4390 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x56469aca4290 'type'
|         `-TemplateSpecializationType 0x56469aca4220 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56469aca4100 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x56469aca40e0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56469aca40c0 <col:24> 'unsigned long' 4
|           `-RecordType 0x56469aca4200 'char_array<4>'
|             `-ClassTemplateSpecialization 0x56469aca4120 'char_array'
|-CXXMethodDecl 0x56469aca5d08 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x56469aca5c18 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x56469aca5df8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56469aca5ed8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56469aca5ed8
|-CXXMethodDecl 0x56469aca61a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x56469aca60b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x56469aca63e8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56469aca6260 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469aca62d8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56469aca65b8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56469aca64a8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469aca6520 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56469aca6718 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x56469aca67e8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x56469aca6a38 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56469aca68a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x56469aca6920 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56469aca6c98 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x56469aca6b08 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x56469aca6b80 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56469aca6e58 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x56469aca6d68 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56469aca7018 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x56469aca6f20 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56469aca70d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469aca7180 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469aca73b8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56469aca7230 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469aca72a8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56469aca7658 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x56469aca7560 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x56469aca7720 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x56469aca7770 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56469aca77c0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.12 = type { %struct.char_array.13*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.12 = type { %struct.char_array.13*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad993b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x56469ad995b8 prev 0x56469ad993b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ad9a5d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x56469ad9a580 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x56469ad9a560 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x56469ad9a410 'type'
|     `-SubstTemplateTypeParmType 0x56469aca3820 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469aca3370 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x56469aca3288 'sized_array_memory'
|-FieldDecl 0x56469ad9a6d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x56469ad9a720 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ad9a758 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x56469ad99650 'unsigned int' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-BuiltinType 0x56469a6f2620 'unsigned int'
|-TypedefDecl 0x56469ad9a7e8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x56469ad9a7b0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x56469ad99650 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-BuiltinType 0x56469a6f2620 'unsigned int'
|-TypedefDecl 0x56469ad9a8a8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x56469ad9a870 'const unsigned int &'
|   `-QualType 0x56469ad99651 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56469ad99650 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-BuiltinType 0x56469a6f2620 'unsigned int'
|-TypedefDecl 0x56469ad9a938 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x56469ad9a900 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x56469ad99650 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-BuiltinType 0x56469a6f2620 'unsigned int'
|-TypedefDecl 0x56469ad9a9c8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x56469ad9a990 'const unsigned int *'
|   `-QualType 0x56469ad99651 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56469ad99650 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-BuiltinType 0x56469a6f2620 'unsigned int'
|-TypedefDecl 0x56469ad9b5b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x56469ad9b560 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x56469ad9b540 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x56469ad9b4d0 'type'
|     `-SubstTemplateTypeParmType 0x56469ad9b290 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56469a9c9ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9c9e50 'T'
|       `-BuiltinType 0x56469a6f2620 'unsigned int'
|-TypedefDecl 0x56469ad9b618 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x56469ad9a870 'const unsigned int &'
|   `-QualType 0x56469ad99651 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56469ad99650 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-BuiltinType 0x56469a6f2620 'unsigned int'
|-TypedefDecl 0x56469ad9b670 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ad9b6d8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x56469ad9a900 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x56469ad99650 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-BuiltinType 0x56469a6f2620 'unsigned int'
|-TypedefDecl 0x56469ad9b740 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x56469ad9a990 'const unsigned int *'
|   `-QualType 0x56469ad99651 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56469ad99650 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-BuiltinType 0x56469a6f2620 'unsigned int'
|-EnumDecl 0x56469ad9b798 <line:134:5> col:5
| `-EnumConstantDecl 0x56469ad9b890 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469ad9b870 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469ad9b918 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469ad9bb68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad9b9d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad9ba70 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x56469ad9be28 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56469ad9bd10 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x56469ad9c0e8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x56469ad9bfd0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x56469ad9c430 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56469ad9c310 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x56469ad9c740 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x56469ad9c620 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x56469ad9ca30 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad9c878 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad9c8f0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56469ad9cb58 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x56469ad9cc38 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad9cc90 <col:30> Inherited
|-CXXMethodDecl 0x56469ad9ccd8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x56469ad9cd88 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad9cde0 <col:30> Inherited
|-CXXMethodDecl 0x56469ad9e330 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56469ad9e3e0 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad9e438 <col:30> Inherited
|-CXXMethodDecl 0x56469ad9e480 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56469ad9e530 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad9e588 <col:30> Inherited
|-CXXMethodDecl 0x56469ad9e5d0 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56469ad9e680 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad9e6d8 <col:30> Inherited
|-CXXMethodDecl 0x56469ad9e720 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56469ad9e7d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469ad9e828 <col:30> Inherited
|-CXXMethodDecl 0x56469ad9e850 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad9e900 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469ad9e9b0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469ad9eb70 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ad9ea60 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469ad9ead8 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56469ad9ecc0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad9ec30 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad9ee68 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x56469ad9ed78 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad9ef20 <col:20>
| `-OptimizeNoneAttr 0x56469ad9ef78 <col:30>
|-CXXMethodDecl 0x56469ad9f098 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x56469ad9efa0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469ad9f150 <col:20>
| `-OptimizeNoneAttr 0x56469ad9f1a8 <col:30>
|-CXXMethodDecl 0x56469ad9f260 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad9f1d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad9f3a8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad9f318 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad9f4d8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x56469ad9f608 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x56469ad9f6d8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x56469ad9f7a8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x56469ad9f8e8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469ad9f858 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad9fa30 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469ad9f9a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469ad9fb78 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x56469ad9fae8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad9fc30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469ad9fd30 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469ad9fca0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469ad9fde8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469ad9fea8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x56469ad9ffa8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x56469ada0128 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ada0068 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x56469ada08e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469ada01e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x56469ada0848 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x56469ada0748 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x56469ada09c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ada0b18 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x56469ada0a88 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56469ada0bd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469ada0e18 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56469ada0c90 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x56469ada0d08 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56469ada0fd8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x56469ada0ee8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x56469ada1228 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x56469ada10a0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x56469ada1118 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x56469ada12e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ada1548 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56469ada1450 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x56469ada1618 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469ada1618

Layout: <CGRecordLayout
  LLVMType:%class.Vector.11 = type { %class.vector_memory.12 }
  NonVirtualBaseLLVMType:%class.Vector.11 = type { %class.vector_memory.12 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469aca2658 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x56469aca2868 prev 0x56469aca2658 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469aca3bc0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x56469aca3b70 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x56469aca3b50 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x56469aca3a00 'type'
|     `-SubstTemplateTypeParmType 0x56469aca3820 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469aca3370 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x56469aca3288 'sized_array_memory'
|-FieldDecl 0x56469aca7810 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x56469aca7860 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469aca7898 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x56469aca2900 'int' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca7928 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x56469aca78f0 'int &'
|   `-SubstTemplateTypeParmType 0x56469aca2900 'int' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca79e8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x56469aca79b0 'const int &'
|   `-QualType 0x56469aca2901 'const int' const
|     `-SubstTemplateTypeParmType 0x56469aca2900 'int' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca7a78 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x56469aca7a40 'int *'
|   `-SubstTemplateTypeParmType 0x56469aca2900 'int' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca7b08 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x56469aca7ad0 'const int *'
|   `-QualType 0x56469aca2901 'const int' const
|     `-SubstTemplateTypeParmType 0x56469aca2900 'int' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca86f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x56469aca86a0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x56469aca8680 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x56469aca8610 'type'
|     `-SubstTemplateTypeParmType 0x56469aca83d0 'int' sugar
|       |-TemplateTypeParmType 0x56469a9c9ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9c9e50 'T'
|       `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca8758 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x56469aca79b0 'const int &'
|   `-QualType 0x56469aca2901 'const int' const
|     `-SubstTemplateTypeParmType 0x56469aca2900 'int' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca87b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca8818 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x56469aca7a40 'int *'
|   `-SubstTemplateTypeParmType 0x56469aca2900 'int' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469aca8880 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x56469aca7ad0 'const int *'
|   `-QualType 0x56469aca2901 'const int' const
|     `-SubstTemplateTypeParmType 0x56469aca2900 'int' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-BuiltinType 0x56469a6f2580 'int'
|-EnumDecl 0x56469aca88d8 <line:134:5> col:5
| `-EnumConstantDecl 0x56469aca89d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469aca89b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469aca8a58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469aca8ca8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56469aca8b10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469aca8bb0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x56469aca8f68 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x56469aca8e50 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x56469aca9228 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x56469aca9110 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x56469aca9570 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x56469aca9450 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x56469aca9880 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x56469aca9760 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x56469aca9b70 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56469aca99b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469aca9a30 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56469aca9c98 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x56469aca9d78 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469aca9dd0 <col:30> Inherited
|-CXXMethodDecl 0x56469aca9e18 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x56469aca9ec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469aca9f20 <col:30> Inherited
|-CXXMethodDecl 0x56469aca9fe8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56469acaa098 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469acaa0f0 <col:30> Inherited
|-CXXMethodDecl 0x56469acaa138 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56469acaa1e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469acaa240 <col:30> Inherited
|-CXXMethodDecl 0x56469acaa288 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56469acaa338 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469acaa390 <col:30> Inherited
|-CXXMethodDecl 0x56469acaa3d8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56469acaa488 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469acaa4e0 <col:30> Inherited
|-CXXMethodDecl 0x56469acaa508 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469acaa5b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469acaa668 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469acaa828 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56469acaa718 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469acaa790 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56469acaa978 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469acaa8e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469acaab28 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x56469acaaa30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469acaabe0 <col:20>
| `-OptimizeNoneAttr 0x56469acaac38 <col:30>
|-CXXMethodDecl 0x56469acaad58 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x56469acaac60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469acaae10 <col:20>
| `-OptimizeNoneAttr 0x56469acaae68 <col:30>
|-CXXMethodDecl 0x56469acaaf20 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469acaae90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469acab068 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469acaafd8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469acab198 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x56469acab2c8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x56469acab398 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x56469acab468 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x56469acab5a8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469acab518 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469acab6f0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469acab660 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469acab838 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x56469acab7a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469acab8f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469acab9f0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469acab960 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469acabaa8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469acabb68 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x56469acabc68 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x56469acabde8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x56469acabd28 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x56469acb05f0 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469acabea0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x56469acb0550 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x56469acac408 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x56469acb06d0 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469acb0820 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x56469acb0790 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56469acb08d8 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469acb0b28 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56469acb0998 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x56469acb0a10 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56469acb0ce8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x56469acb0bf8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x56469acb0f38 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x56469acb0db0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x56469acb0e28 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x56469acb0ff8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x56469acb1258 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x56469acb1160 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x56469acb1328 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469acb1328

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.12 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.12 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ada1860 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56469ada1978 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x56469ada1a18 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x56469ada1a78 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x56469ada1b10 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56469ada1b10
| `-ParmVarDecl 0x56469ada1c28 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x56469ada1cc8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56469ada1cc8
| `-ParmVarDecl 0x56469ada1dd8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x56469ada1e78 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56469ada1e78
| `-ParmVarDecl 0x56469ada1f88 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56469ada1ff8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56469ada1ff8
| `-ParmVarDecl 0x56469ada2108 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x56469ada2190 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x56469ada2190

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ada3720 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x56469ada38f8 prev 0x56469ada3720 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56469ada3988 <col:46, col:52> col:46 public
|-TypedefDecl 0x56469ada39b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469ada5370 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x56469ada5320 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x56469ada5300 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x56469ada3bc8 'type'
|     `-SubstTemplateTypeParmType 0x56469ada3b90 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56469a9e9a70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9e9a20 'T'
|       `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|         `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469ada5428 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x56469ada53f0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x56469ada53d0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x56469ada5370 'type'
|     `-ElaboratedType 0x56469ada5320 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x56469ada5300 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x56469ada3bc8 'type'
|         `-SubstTemplateTypeParmType 0x56469ada3b90 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x56469a9e9a70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56469a9e9a20 'T'
|           `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|             `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-CXXMethodDecl 0x56469ada55a8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x56469ada54b8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x56469ada5698 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56469ada5778 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56469ada5778
|-CXXMethodDecl 0x56469ada5a48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x56469ada5950 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x56469ada5c88 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56469ada5b00 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ada5b78 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56469ada5e58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56469ada5d48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ada5dc0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56469ada5fb8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x56469ada6088 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x56469ada8210 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56469ada6148 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x56469ada61c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56469ada8468 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x56469ada82e0 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x56469ada8358 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56469ada8628 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x56469ada8538 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56469ada87e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x56469ada86f0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56469ada88a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469ada8950 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469ada8b88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56469ada8a00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56469ada8a78 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56469ada8e28 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x56469ada8d30 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x56469ada8ef0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x56469ada8f40 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56469ada8f90 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.16 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.16 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ada2280 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x56469ada2488 prev 0x56469ada2280 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469ada3690 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x56469ada3640 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x56469ada3620 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x56469ada34d0 'type'
|     `-SubstTemplateTypeParmType 0x56469ada3360 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x56469a9bf600 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56469a9bf5a8 'F'
|       `-RecordType 0x56469ada2fc0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x56469ada2ee0 'typed_array_memory'
|-FieldDecl 0x56469ada8fe0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x56469ada9030 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469ada9068 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x56469ada2520 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|     `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469ada90f8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x56469ada90c0 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x56469ada2520 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|       `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469ada9188 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x56469ada9150 'const Router::element_landmark_t &'
|   `-QualType 0x56469ada2521 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56469ada2520 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|         `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469ada9218 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x56469ada91e0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x56469ada2520 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|       `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469ada92a8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x56469ada9270 'const Router::element_landmark_t *'
|   `-QualType 0x56469ada2521 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56469ada2520 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|         `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469ada9f00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x56469ada9eb0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x56469ada9e90 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x56469ada9dc8 'type'
|     `-LValueReferenceType 0x56469ada9d90 'const Router::element_landmark_t &'
|       `-QualType 0x56469ada9b31 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x56469ada9b30 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x56469a9c9770 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56469a9c9718 'T'
|           `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|             `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469ada9f68 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x56469ada9150 'const Router::element_landmark_t &'
|   `-QualType 0x56469ada2521 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56469ada2520 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|         `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469ada9fc0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469adaa028 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x56469ada91e0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x56469ada2520 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|       `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-TypedefDecl 0x56469adaa090 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x56469ada9270 'const Router::element_landmark_t *'
|   `-QualType 0x56469ada2521 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56469ada2520 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ada18f0 'Router::element_landmark_t'
|         `-CXXRecord 0x56469ada1860 'element_landmark_t'
|-EnumDecl 0x56469adaa0e8 <line:134:5> col:5
| `-EnumConstantDecl 0x56469adaa1e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469adaa1c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469adaa268 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469adaa4f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adaa320 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adaa3c0 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x56469adaa7b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56469adaa6a0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x56469adaaa78 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x56469adaa960 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x56469adaadc0 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56469adaaca0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x56469adab0d0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x56469adaafb0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x56469adab3c0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adab208 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adab280 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56469adab4e8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x56469adab5c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adab620 <col:30> Inherited
|-CXXMethodDecl 0x56469adab668 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x56469adab718 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adab770 <col:30> Inherited
|-CXXMethodDecl 0x56469adab838 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56469adab8e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adab940 <col:30> Inherited
|-CXXMethodDecl 0x56469adab988 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56469adaba38 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adaba90 <col:30> Inherited
|-CXXMethodDecl 0x56469adabad8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56469adabb88 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adabbe0 <col:30> Inherited
|-CXXMethodDecl 0x56469adabc28 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56469adabcd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adabd30 <col:30> Inherited
|-CXXMethodDecl 0x56469adabd58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469adabe08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469adabeb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469adac078 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adabf68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adabfe0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56469adac1c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469adac138 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adac378 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x56469adac280 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469adac430 <col:20>
| `-OptimizeNoneAttr 0x56469adac488 <col:30>
|-CXXMethodDecl 0x56469adac5a8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x56469adac4b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469adac660 <col:20>
| `-OptimizeNoneAttr 0x56469adac6b8 <col:30>
|-CXXMethodDecl 0x56469adac770 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469adac6e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adac8b8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469adac828 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adac9e8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x56469adacb18 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x56469adacbe8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x56469adaccb8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x56469adacdf8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469adacd68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adacf40 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469adaceb0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adad088 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x56469adacff8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469adad140 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469adad240 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469adad1b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469adad2f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469adad3b8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x56469adad4b8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x56469adad638 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x56469adad578 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x56469adaddc8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469adad6f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x56469adadd28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x56469adadc28 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x56469adadea8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469adadff8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x56469adadf68 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56469adae0b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469adae2f8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adae170 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x56469adae1e8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56469adae488 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x56469adae3c8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x56469adae698 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x56469adae550 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x56469adae5c8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x56469adae758 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469adae9b8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56469adae8c0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x56469adaea88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469adaea88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory.16 }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469adaf1a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x56469adaf3a8 prev 0x56469adaf1a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469adb3400 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56469adb33b0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x56469adb3390 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x56469adb3240 'type'
|     `-SubstTemplateTypeParmType 0x56469ad0d650 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469ad0d1a0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56469ad0d0b8 'sized_array_memory'
|-FieldDecl 0x56469adb3500 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x56469adb3550 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469adb3588 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x56469adaf440 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-RecordType 0x56469ad8bc50 'Router::Connection'
|     `-CXXRecord 0x56469ad8bbc0 'Connection'
|-TypedefDecl 0x56469adb3648 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x56469adb3610 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x56469adaf440 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad8bc50 'Router::Connection'
|       `-CXXRecord 0x56469ad8bbc0 'Connection'
|-TypedefDecl 0x56469adb36d8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x56469adb36a0 'const Router::Connection &'
|   `-QualType 0x56469adaf441 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56469adaf440 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad8bc50 'Router::Connection'
|         `-CXXRecord 0x56469ad8bbc0 'Connection'
|-TypedefDecl 0x56469adb3768 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x56469adb3730 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x56469adaf440 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad8bc50 'Router::Connection'
|       `-CXXRecord 0x56469ad8bbc0 'Connection'
|-TypedefDecl 0x56469adb37f8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x56469adb37c0 'const Router::Connection *'
|   `-QualType 0x56469adaf441 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56469adaf440 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad8bc50 'Router::Connection'
|         `-CXXRecord 0x56469ad8bbc0 'Connection'
|-TypedefDecl 0x56469adb4450 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x56469adb4400 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x56469adb43e0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x56469adb4318 'type'
|     `-LValueReferenceType 0x56469adb42e0 'const Router::Connection &'
|       `-QualType 0x56469adb4081 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x56469adb4080 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x56469a9c9770 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56469a9c9718 'T'
|           `-RecordType 0x56469ad8bc50 'Router::Connection'
|             `-CXXRecord 0x56469ad8bbc0 'Connection'
|-TypedefDecl 0x56469adb44b8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x56469adb36a0 'const Router::Connection &'
|   `-QualType 0x56469adaf441 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56469adaf440 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad8bc50 'Router::Connection'
|         `-CXXRecord 0x56469ad8bbc0 'Connection'
|-TypedefDecl 0x56469adb4510 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469adb4578 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x56469adb3730 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x56469adaf440 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-RecordType 0x56469ad8bc50 'Router::Connection'
|       `-CXXRecord 0x56469ad8bbc0 'Connection'
|-TypedefDecl 0x56469adb45e0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x56469adb37c0 'const Router::Connection *'
|   `-QualType 0x56469adaf441 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56469adaf440 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-RecordType 0x56469ad8bc50 'Router::Connection'
|         `-CXXRecord 0x56469ad8bbc0 'Connection'
|-EnumDecl 0x56469adb4638 <line:134:5> col:5
| `-EnumConstantDecl 0x56469adb4730 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469adb4710 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469adb47b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469adb4a48 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adb4870 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adb4910 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x56469adb4d08 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56469adb4bf0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x56469adb4fc8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x56469adb4eb0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x56469adb5310 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56469adb51f0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x56469adb5620 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x56469adb5500 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x56469adb5910 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adb5758 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adb57d0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56469adb5a68 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x56469adb5b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adb5ba0 <col:30> Inherited
|-CXXMethodDecl 0x56469adb5be8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x56469adb5c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adb5cf0 <col:30> Inherited
|-CXXMethodDecl 0x56469adb5db8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56469adb5e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adb5ec0 <col:30> Inherited
|-CXXMethodDecl 0x56469adb5f08 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56469adb5fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adb6010 <col:30> Inherited
|-CXXMethodDecl 0x56469adb6058 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56469adb6108 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adb6160 <col:30> Inherited
|-CXXMethodDecl 0x56469adb61a8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56469adb6258 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adb62b0 <col:30> Inherited
|-CXXMethodDecl 0x56469adb62d8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469adb6388 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469adb6438 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469adb65f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adb64e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adb6560 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56469adb6748 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469adb66b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adb68f8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x56469adb6800 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469adb69b0 <col:20>
| `-OptimizeNoneAttr 0x56469adb6a08 <col:30>
|-CXXMethodDecl 0x56469adb6b28 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x56469adb6a30 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469adb6be0 <col:20>
| `-OptimizeNoneAttr 0x56469adb6c38 <col:30>
|-CXXMethodDecl 0x56469adb6cf0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469adb6c60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adb6e38 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469adb6da8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adb6f68 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x56469adb7098 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x56469adb7168 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x56469adb7238 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x56469adb7378 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x56469adb72e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adb74c0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469adb7430 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adb7608 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x56469adb7578 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469adb76c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469adb77c0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469adb7730 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469adb7878 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469adb7938 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x56469adb7a38 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x56469adb7be8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x56469adb7af8 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x56469adb83a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469adb7ca0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x56469adb8308 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x56469adb8208 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x56469adb8488 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469adb85d8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x56469adb8548 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56469adb8690 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469adb88d8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adb8750 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x56469adb87c8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56469adb8a98 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x56469adb89a8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x56469adb8ce8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x56469adb8b60 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x56469adb8bd8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x56469adb8da8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469adb9008 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56469adb8f10 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x56469adb90d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469adb90d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469acec6e8 prev 0x56469acb7640 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469acec7e0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x56469acec870 <col:22, col:28> col:22 public
|-EnumDecl 0x56469acec898 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x56469acec9b8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469acec998 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x56469acec980 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469acec960 <col:14> 'int' 999
| |-EnumConstantDecl 0x56469aceca60 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469aceca40 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x56469aceca28 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469aceca08 <col:14> 'int' 1
| |-EnumConstantDecl 0x56469acecaf0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469acecad0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x56469acecab0 <col:17> 'int' 0
| |-EnumConstantDecl 0x56469acecb80 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469acecb60 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x56469acecb40 <col:13> 'int' 1
| |-EnumConstantDecl 0x56469acecc10 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469acecbf0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x56469acecbd0 <col:16> 'int' 2
| |-EnumConstantDecl 0x56469acecca0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469acecc80 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x56469acecc60 <col:13> 'int' 3
| |-EnumConstantDecl 0x56469acecd30 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469acecd10 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x56469aceccf0 <col:15> 'int' 4
| |-EnumConstantDecl 0x56469acecdc0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469acecda0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x56469acecd80 <col:14> 'int' 5
| |-EnumConstantDecl 0x56469acece50 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x56469acece30 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x56469acece10 <col:12> 'int' 6
| `-EnumConstantDecl 0x56469acecee0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x56469acecec0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x56469acecea0 <col:13> 'int' 7
|-VarDecl 0x56469acecf50 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x56469acecfd8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x56469aced060 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x56469aced0e8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x56469aced170 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x56469aced1f8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x56469aced280 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x56469aced308 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x56469aced390 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x56469aced418 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x56469aced4a0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x56469aced5a0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x56469acf3bf8 '_nerrors' 'int'
| | `-IntegerLiteral 0x56469acf4388 <line:128:13> 'int' 0
| `-CompoundStmt 0x56469acf43f8 <col:16, line:129:5>
|-CXXDestructorDecl 0x56469aced690 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x56469acf4408 <col:29, line:132:5>
|-CXXMethodDecl 0x56469aced848 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x56469aced780 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469aced910 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56469aced9f8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56469acf4460 <col:44, line:161:5>
|   `-ReturnStmt 0x56469acf4450 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x56469acf4438 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56469acf4418 <col:9> 'ErrorHandler *' lvalue Var 0x56469acf3c58 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x56469acedb68 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x56469acedaa8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acedc30 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56469acf44c0 <col:43, line:173:5>
|   `-ReturnStmt 0x56469acf44b0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x56469acf4498 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56469acf4478 <col:9> 'ErrorHandler *' lvalue Var 0x56469acf3cd0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x56469acedce8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x56469acedd68 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x56469acede78 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x56469acedde8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x56469acedfc8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x56469acedf38 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x56469acee120 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x56469acee088 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x56469acee278 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x56469acee1e0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56469acee3d0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x56469acee338 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56469acee5e0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56469acee488 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x56469acee508 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x56469acee7b8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56469acee6a0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x56469acee720 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x56469acee9d8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56469acee878 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x56469acee8f8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x56469aceebb8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56469aceea98 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56469aceeb18 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56469aceed98 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56469aceec78 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56469aceecf8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56469aceef20 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x56469aceee58 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x56469acef0f0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x56469aceefd8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56469acef050 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x56469acf4718 <col:57, line:234:5>
|   `-ReturnStmt 0x56469acf4708 <line:233:2, col:41>
|     `-ExprWithCleanups 0x56469acf46f0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56469acf4698 <col:9, col:41> 'int'
|         |-MemberExpr 0x56469acf4668 <col:9> '<bound member function type>' ->xmessage 0x56469aceef20
|         | `-CXXThisExpr 0x56469acf4658 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x56469acf46d8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56469acf46c0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56469acf4638 <col:18, col:40> 'String' (CXXTemporary 0x56469acf4638)
|               `-CallExpr 0x56469acf4600 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x56469acf45e8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x56469acf4560 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56469acf2420 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x56469acf4580 <col:31> 'const String' lvalue ParmVar 0x56469acef050 'str' 'const String &'
|                 `-DeclRefExpr 0x56469acf45a0 <col:36> 'const String' lvalue ParmVar 0x56469aceefd8 'anno' 'const String &'
|-CXXMethodDecl 0x56469acef430 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56469acef1b0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56469acef230 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x56469acef300 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56469acf49a8 <col:68, line:243:5>
|   `-ReturnStmt 0x56469acf4998 <line:242:2, col:41>
|     `-ExprWithCleanups 0x56469acf4980 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56469acf4920 <col:9, col:41> 'int'
|         |-MemberExpr 0x56469acf48f0 <col:9> '<bound member function type>' ->xmessage 0x56469acef0f0
|         | `-CXXThisExpr 0x56469acf48e0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56469acf47b8 <col:18> 'const String' lvalue ParmVar 0x56469acef1b0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56469acf4968 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56469acf4950 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56469acf48c0 <col:24, col:40> 'String' (CXXTemporary 0x56469acf48c0)
|               `-CXXMemberCallExpr 0x56469acf4858 <col:24, col:40> 'String'
|                 |-MemberExpr 0x56469acf47e8 <col:24> '<bound member function type>' ->vformat 0x56469acf0610
|                 | `-CXXThisExpr 0x56469acf47d8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56469acf4888 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56469acf4818 <col:32> 'const char *' lvalue ParmVar 0x56469acef230 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56469acf48a0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56469acf4838 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56469acef300 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56469acef6d0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x56469acef4f8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56469acef570 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56469acef5e8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x56469acf4ce8 <col:23, line:254:5>
|   `-ReturnStmt 0x56469acf4cd8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x56469acf4cc0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x56469acf4c60 <col:9, col:71> 'int'
|         |-MemberExpr 0x56469acf4c30 <col:9> '<bound member function type>' ->xmessage 0x56469acef0f0
|         | `-CXXThisExpr 0x56469acf4c20 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x56469acf4ca8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x56469acf4c90 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x56469acf4be0 <col:18, col:65> 'String' (CXXTemporary 0x56469acf4be0)
|         |     `-CallExpr 0x56469acf4b78 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x56469acf4b60 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x56469acf4a48 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56469acf2420 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x56469acf4a68 <col:31> 'const String' lvalue ParmVar 0x56469acef570 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x56469acf4bc0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x56469acf4ba8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x56469acf4b40 <col:37, col:64> 'String' (CXXTemporary 0x56469acf4b40)
|         |             `-CallExpr 0x56469acf4b10 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x56469acf4af8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x56469acf4a88 <col:37> 'String (const String &)' lvalue CXXMethod 0x56469acf2a78 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x56469acf4aa8 <col:56> 'const String' lvalue ParmVar 0x56469acef4f8 'landmark' 'const String &'
|         `-DeclRefExpr 0x56469acf4c00 <col:68> 'const String' lvalue ParmVar 0x56469acef5e8 'str' 'const String &'
|-CXXMethodDecl 0x56469acefa50 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56469acef798 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56469acef810 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56469acef890 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x56469acef908 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56469acf4fa0 <col:34, line:267:5>
|   `-ReturnStmt 0x56469acf4f90 <line:266:2, col:51>
|     `-ExprWithCleanups 0x56469acf4f78 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x56469acf4f10 <col:9, col:51> 'int'
|         |-MemberExpr 0x56469acf4ee0 <col:9> '<bound member function type>' ->xmessage 0x56469acef6d0
|         | `-CXXThisExpr 0x56469acf4ed0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56469acf4d88 <col:18> 'const String' lvalue ParmVar 0x56469acef798 'landmark' 'const String &'
|         |-DeclRefExpr 0x56469acf4da8 <col:28> 'const String' lvalue ParmVar 0x56469acef810 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56469acf4f60 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x56469acf4f48 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56469acf4eb0 <col:34, col:50> 'String' (CXXTemporary 0x56469acf4eb0)
|               `-CXXMemberCallExpr 0x56469acf4e48 <col:34, col:50> 'String'
|                 |-MemberExpr 0x56469acf4dd8 <col:34> '<bound member function type>' ->vformat 0x56469acf0610
|                 | `-CXXThisExpr 0x56469acf4dc8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56469acf4e78 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56469acf4e08 <col:42> 'const char *' lvalue ParmVar 0x56469acef890 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56469acf4e90 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56469acf4e28 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56469acef908 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56469acefb60 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x56469acf5020 <col:25, line:288:5>
|   `-ReturnStmt 0x56469acf5010 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x56469acf4ff8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x56469acf4fc8 <col:9> 'const int' lvalue ->_nerrors 0x56469acf3bf8
|         `-CXXThisExpr 0x56469acf4fb8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x56469acefd70 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x56469acefc18 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x56469acefc98 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x56469acf0058 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56469acefe38 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x56469acefeb8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x56469aceff30 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56469acf01f0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x56469acf0128 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x56469acf0438 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56469acf02b0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x56469acf0328 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56469acf5280 <col:58, line:357:5>
|   `-ReturnStmt 0x56469acf5270 <line:356:2, col:29>
|     `-ExprWithCleanups 0x56469acf5258 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x56469acf5228 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56469acf5210 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56469acf51f0 <col:9, col:29> 'String' (CXXTemporary 0x56469acf51f0)
|             `-CallExpr 0x56469acf5180 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x56469acf5168 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56469acf50e8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x56469acf0058 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x56469acf5088 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x56469acf51b8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x56469acf50a8 <col:21> 'const char *' lvalue ParmVar 0x56469acf02b0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x56469acf51d0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x56469acf50c8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56469acf0328 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56469acf0610 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x56469acf0500 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x56469acf0578 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56469acf0768 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x56469acf06d8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x56469acf08b0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x56469acf0820 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x56469acf0b50 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x56469acf0968 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x56469acf09e8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x56469acf0a60 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x56469acf0cb0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x56469acf0c20 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x56469acf5398 <col:37, line:441:5>
|   `-IfStmt 0x56469acf5380 <line:439:2, line:440:8>
|     |-BinaryOperator 0x56469acf5308 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x56469acf52d8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x56469acf5298 <col:6> 'int' lvalue ParmVar 0x56469acf0c20 'level' 'int'
|     | `-ImplicitCastExpr 0x56469acf52f0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x56469acf52b8 <col:15> 'ErrorHandler::Level' EnumConstant 0x56469acecca0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x56469acf5368 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x56469acf5338 <col:8> 'int' lvalue ->_nerrors 0x56469acf3bf8
|         `-CXXThisExpr 0x56469acf5328 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x56469acf0d78 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x56469acf5430 <col:26, line:448:5>
|   `-BinaryOperator 0x56469acf5410 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x56469acf53c0 <col:2> 'int' lvalue ->_nerrors 0x56469acf3bf8
|     | `-CXXThisExpr 0x56469acf53b0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x56469acf53f0 <col:13> 'int' 0
|-CXXMethodDecl 0x56469acf0f40 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x56469acf0e30 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56469acf0ea8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x56469acf2420 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x56469acf1000 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x56469acf1078 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x56469acf26d8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x56469acf24e0 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x56469acf2560 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x56469acf25e0 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x56469acf2790 <col:59> 0 0
|-CXXMethodDecl 0x56469acf2928 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x56469acf2808 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x56469acf2888 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x56469acf5aa0 <col:70, line:534:5>
|   |-DeclStmt 0x56469acf55a0 <line:528:2, col:20>
|   | |-VarDecl 0x56469acf5458 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x56469acf54c0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x56469acf54f8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x56469acf5560 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x56469acf5670 <line:529:2, col:23>
|   | `-VarDecl 0x56469acf55d0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x56469acf5658 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56469acf5638 <col:18> 'const char *' lvalue ParmVar 0x56469acf2808 'begin' 'const char *'
|   |-DoStmt 0x56469acf5a38 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x56469acf5968 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x56469acf5950 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x56469acf5930 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x56469acf5688 <col:6> 'const char *' lvalue Var 0x56469acf55d0 'x' 'const char *'
|   | |     `-CallExpr 0x56469acf5880 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x56469acf5868 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x56469acf5820 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x56469acf40d0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x56469acf58e8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x56469acf58d0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x56469acf5740 <col:20, col:27> 'String' (CXXTemporary 0x56469acf5740)
|   | |       |     `-CXXTemporaryObjectExpr 0x56469acf5708 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x56469acf5900 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56469acf5760 <col:30> 'const char *' lvalue Var 0x56469acf55d0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x56469acf5918 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56469acf5780 <col:33> 'const char *' lvalue ParmVar 0x56469acf2888 'end' 'const char *'
|   | |       |-UnaryOperator 0x56469acf57c0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56469acf57a0 <col:39> 'String' lvalue Var 0x56469acf5458 'name' 'String'
|   | |       |-UnaryOperator 0x56469acf57f8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56469acf57d8 <col:46> 'String' lvalue Var 0x56469acf54f8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x56469acf5810 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x56469acf5a20 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x56469acf5a08 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x56469acf59e8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x56469acf59b8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|   |         `-ImplicitCastExpr 0x56469acf59a0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x56469acf5980 <col:11> 'String' lvalue Var 0x56469acf5458 'name' 'String'
|   `-ReturnStmt 0x56469acf5a90 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x56469acf5a78 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56469acf5a58 <col:9> 'const char *' lvalue Var 0x56469acf55d0 'x' 'const char *'
|-CXXMethodDecl 0x56469acf2a78 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x56469acf29e8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x56469acf60a8 <col:55, line:550:5>
|   `-IfStmt 0x56469acf6080 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x56469acf5ce0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x56469acf5cc8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56469acf5cb0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56469acf5c90 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56469acf5c60 <col:6> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|     | |       `-DeclRefExpr 0x56469acf5b00 <col:6> 'const String' lvalue ParmVar 0x56469acf29e8 'x' 'const String &'
|     | `-BinaryOperator 0x56469acf5c40 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x56469acf5c10 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x56469acf5bc0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x56469acf5ba8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x56469acf5b60 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x56469aa421f0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x56469acf5b20 <col:11> 'const String' lvalue ParmVar 0x56469acf29e8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x56469acf5b40 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x56469acf5c28 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x56469acf5bf8 <col:19> 'char' 123
|     |-ReturnStmt 0x56469acf5d50 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x56469acf5d20 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x56469acf5d00 <col:13> 'const String' lvalue ParmVar 0x56469acf29e8 'x' 'const String &'
|     `-IfStmt 0x56469acf6058 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x56469acf5de8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56469acf5dd0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56469acf5db0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56469acf5d80 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|       |       `-DeclRefExpr 0x56469acf5d60 <col:11> 'const String' lvalue ParmVar 0x56469acf29e8 'x' 'const String &'
|       |-ReturnStmt 0x56469acf5f70 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x56469acf5f58 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x56469acf5f28 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x56469acf5f10 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x56469acf5ef0 <col:13, col:29> 'String' (CXXTemporary 0x56469acf5ef0)
|       |         `-CallExpr 0x56469acf5ea0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x56469acf5e88 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x56469acf5e00 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x56469acf0f40 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x56469acf5ed0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x56469acf5e20 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x56469acf5e40 <col:28> 'const String' lvalue ParmVar 0x56469acf29e8 'x' 'const String &'
|       `-ReturnStmt 0x56469acf6048 <line:549:6, col:20>
|         `-ExprWithCleanups 0x56469acf6030 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x56469acf6000 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x56469acf5fe8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x56469acf5fc8 <col:13, col:20> 'String' (CXXTemporary 0x56469acf5fc8)
|                 `-CXXTemporaryObjectExpr 0x56469acf5f90 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x56469acf2c40 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x56469acf2b30 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x56469acf2ba8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469acf4378 <col:71> 'bool' false
|-CXXRecordDecl 0x56469acf2cf0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x56469acf2fe8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x56469acf2f80 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x56469acf2f20 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x56469acf2ee0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x56469aa25250 'String'
|       | `-CXXRecord 0x56469aa251c0 'String'
|       |-BuiltinType 0x56469a6f2580 'int'
|       `-DecayedType 0x56469acef2d0 '__va_list_tag *' sugar
|         |-TypedefType 0x56469acef2a0 'va_list' sugar
|         | |-Typedef 0x56469a9170f0 'va_list'
|         | `-TypedefType 0x56469a9170a0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x56469a84ecc8 '__gnuc_va_list'
|         |   `-TypedefType 0x56469a84ec30 '__builtin_va_list' sugar
|         |     |-Typedef 0x56469a733d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x56469a733ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x56469a6f32d0 '__va_list_tag'
|         |         `-CXXRecord 0x56469a6f3238 '__va_list_tag'
|         `-PointerType 0x56469a91c990 '__va_list_tag *'
|           `-RecordType 0x56469a6f32d0 '__va_list_tag'
|             `-CXXRecord 0x56469a6f3238 '__va_list_tag'
|-EnumDecl 0x56469acf3040 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x56469acf3140 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf36a0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf3120 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x56469acf3100 <col:16> 'int' 1
| |-EnumConstantDecl 0x56469acf31d0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf36b8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf31b0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x56469acf3190 <col:21> 'int' 2
| |-EnumConstantDecl 0x56469acf3260 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf36d0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf3240 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x56469acf3220 <col:22> 'int' 4
| |-EnumConstantDecl 0x56469acf32f0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf36e8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf32d0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x56469acf32b0 <col:17> 'int' 8
| |-EnumConstantDecl 0x56469acf3380 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf3700 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf3360 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x56469acf3340 <col:22> 'int' 16
| |-EnumConstantDecl 0x56469acf3410 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf3718 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf33f0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56469acf33d0 <col:19> 'int' 32
| |-EnumConstantDecl 0x56469acf34a0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf3730 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf3480 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x56469acf3460 <col:17> 'int' 64
| |-EnumConstantDecl 0x56469acf3530 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf3748 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf3510 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x56469acf34f0 <col:14> 'int' 128
| |-EnumConstantDecl 0x56469acf35c0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56469acf3760 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acf35a0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x56469acf3580 <col:16> 'int' 256
| `-EnumConstantDecl 0x56469acf3650 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x56469acf3778 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469acf3630 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x56469acf3610 <col:12> 'int' 1024
|-CXXMethodDecl 0x56469acf3988 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x56469acf37a0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x56469acf3840 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x56469acf3b10 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x56469acf3a48 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x56469acf3bb8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x56469acf3bf8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x56469acf3c58 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x56469acf3cd0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x56469acf40d0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x56469acf3d48 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x56469acf3dc8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x56469acf3e48 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x56469acf3ec0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x56469acf3f38 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x56469acf3fb0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x56469acf41f8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x56469acf41f8
| `-ParmVarDecl 0x56469acf4308 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x56469acf6408 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x56469acf6408
  `-ParmVarDecl 0x56469acf6518 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac56320 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56469ac56470 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x56469ac564f0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x56469ac572e8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56469ac572e8
| `-ParmVarDecl 0x56469ac573f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x56469ac57498 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56469ac57498
| `-ParmVarDecl 0x56469ac575a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x56469ac57618 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56469ac57618
|-CXXMethodDecl 0x56469ac57ee8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56469ac57ee8
| `-ParmVarDecl 0x56469ac57ff8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x56469ac58068 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56469ac58068
| `-ParmVarDecl 0x56469ac58178 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x56469add3190 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x56469add3270 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac56620 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56469ac56748 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x56469ac567d0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x56469ac57748 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56469ac57748
| `-ParmVarDecl 0x56469ac57858 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x56469ac578f8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56469ac578f8
| `-ParmVarDecl 0x56469ac57a08 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x56469ac57a78 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56469ac57a78
|-CXXMethodDecl 0x56469ac58218 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56469ac58218
| `-ParmVarDecl 0x56469ac58328 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x56469ac58398 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56469ac58398
| `-ParmVarDecl 0x56469ac584a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x56469add32d0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x56469add33b0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.18 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac51ca8 prev 0x56469ac51140 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56469ac51da0 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x56469ac51e30 <col:17, col:23> col:17 public
|-EnumDecl 0x56469ac51e58 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x56469ac51f60 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52cb0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac51f40 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x56469ac51f20 <col:11> 'int' 1
| |-EnumConstantDecl 0x56469ac51ff0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52cc8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac51fd0 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x56469ac51fb0 <col:12> 'int' 2
| |-EnumConstantDecl 0x56469ac52080 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52ce0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52060 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x56469ac52040 <col:17> 'int' 4
| |-EnumConstantDecl 0x56469ac52110 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52cf8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac520f0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x56469ac520d0 <col:16> 'int' 0
| |-EnumConstantDecl 0x56469ac521a0 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52d10 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52180 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56469ac52160 <col:19> 'int' 32
| |-EnumConstantDecl 0x56469ac52230 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52d28 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52210 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x56469ac521f0 <col:10> 'int' 64
| |-EnumConstantDecl 0x56469ac522c0 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52d40 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac522a0 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x56469ac52280 <col:19> 'int' 128
| |-EnumConstantDecl 0x56469ac52350 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52d58 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52330 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x56469ac52310 <col:20> 'int' 256
| |-EnumConstantDecl 0x56469ac523e0 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52d70 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac523c0 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x56469ac523a0 <col:17> 'int' 512
| |-EnumConstantDecl 0x56469ac52470 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52d88 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52450 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x56469ac52430 <col:15> 'int' 1024
| |-EnumConstantDecl 0x56469ac52500 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52da0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac524e0 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x56469ac524c0 <col:11> 'int' 2048
| |-EnumConstantDecl 0x56469ac52590 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52db8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52570 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x56469ac52550 <col:16> 'int' 4096
| |-EnumConstantDecl 0x56469ac52620 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52dd0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52600 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x56469ac525e0 <col:13> 'int' 8192
| |-EnumConstantDecl 0x56469ac526b0 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52de8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52690 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x56469ac52670 <col:15> 'int' 16384
| |-EnumConstantDecl 0x56469ac52780 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x56469ac52760 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x56469ac52740 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56469ac52700 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x56469ac52720 <col:20> 'int' 26
| |-EnumConstantDecl 0x56469ac52850 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x56469ac52830 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x56469ac52810 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56469ac527d0 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x56469ac527f0 <col:27> 'int' 27
| |-EnumConstantDecl 0x56469ac528e0 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52e00 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac528c0 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x56469ac528a0 <col:17> 'int' 28
| |-EnumConstantDecl 0x56469ac529b0 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x56469ac52990 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x56469ac52970 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56469ac52930 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x56469ac52950 <col:18> 'int' EnumConstant 0x56469ac528e0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac52a40 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52e18 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52a20 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x56469ac52a00 <col:25> 'int' 8
| |-EnumConstantDecl 0x56469ac52ad0 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56469ac52e30 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac52ab0 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x56469ac52a90 <col:26> 'int' 16
| `-EnumConstantDecl 0x56469ac52c60 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x56469ac52e48 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac52c40 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x56469ac52c20 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x56469ac52be0 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x56469ac52ba0 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x56469ac52b60 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x56469ac52b20 <col:14> 'int' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x56469ac52b40 <col:23> 'int' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x56469ac52b80 <col:33> 'int' EnumConstant 0x56469ac52080 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x56469ac52bc0 <col:48> 'int' EnumConstant 0x56469ac52a40 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x56469ac52c00 <col:71> 'int' EnumConstant 0x56469ac52ad0 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac52ea8 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x56469ac588c8 <col:39, line:64:5>
|   `-ReturnStmt 0x56469ac588b8 <line:63:2, col:9>
|     `-MemberExpr 0x56469ac58888 <col:9> 'const String' lvalue ->_name 0x56469ac562d0
|       `-CXXThisExpr 0x56469ac58878 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56469ac52f68 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x56469ac58948 <col:35, line:71:5>
|   `-ReturnStmt 0x56469ac58938 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x56469ac58920 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56469ac588f0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|         `-CXXThisExpr 0x56469ac588e0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56469ac530b8 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x56469ac53020 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x56469ac58ac8 <col:42, line:77:5>
|   `-ReturnStmt 0x56469ac58ab8 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x56469ac58aa0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x56469ac58a70 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x56469ac589d0 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x56469ac589a0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56469ac58960 <col:9> 'int' lvalue ParmVar 0x56469ac53020 'op' 'int'
|         | `-ImplicitCastExpr 0x56469ac589b8 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x56469ac58980 <col:15> 'Handler::Flags' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x56469ac58a00 <col:25> 'void *const' lvalue ->_write_user_data 0x56469ac56980
|         | `-CXXThisExpr 0x56469ac589f0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x56469ac58a40 <col:44> 'void *const' lvalue ->_read_user_data 0x56469ac56918
|           `-CXXThisExpr 0x56469ac58a30 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x56469ac53188 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x56469ac58b48 <col:41, line:82:5>
|   `-ReturnStmt 0x56469ac58b38 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x56469ac58b20 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56469ac58af0 <col:9> 'void *const' lvalue ->_read_user_data 0x56469ac56918
|         `-CXXThisExpr 0x56469ac58ae0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56469ac53250 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x56469ac58bc8 <col:42, line:87:5>
|   `-ReturnStmt 0x56469ac58bb8 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x56469ac58ba0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56469ac58b70 <col:9> 'void *const' lvalue ->_write_user_data 0x56469ac56980
|         `-CXXThisExpr 0x56469ac58b60 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56469ac53318 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x56469ac533b8 <col:52> "" ""
|-CXXMethodDecl 0x56469ac53450 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x56469ac534f0 <col:52> "" ""
|-CXXMethodDecl 0x56469ac53580 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x56469ac58cb8 <col:34, line:98:5>
|   `-ReturnStmt 0x56469ac58ca8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x56469ac58c90 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56469ac58c70 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56469ac58c40 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56469ac58bf0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|         |   `-CXXThisExpr 0x56469ac58be0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56469ac58c58 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56469ac58c20 <col:18> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac53640 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x56469ac58da8 <col:36, line:104:5>
|   `-ReturnStmt 0x56469ac58d98 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x56469ac58d80 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56469ac58d60 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56469ac58d30 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56469ac58ce0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|         |   `-CXXThisExpr 0x56469ac58cd0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56469ac58d48 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56469ac58d10 <col:18> 'Handler::Flags' EnumConstant 0x56469ac52080 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac53700 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x56469ac58f88 <col:38, line:113:5>
|   `-ReturnStmt 0x56469ac58f78 <line:112:2, col:49>
|     `-BinaryOperator 0x56469ac58f58 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x56469ac58f00 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x56469ac58ee0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56469ac58eb0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56469ac58dd0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|       |   |   `-CXXThisExpr 0x56469ac58dc0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x56469ac58ec8 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x56469ac58e90 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x56469ac58e70 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x56469ac58e40 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x56469ac58e00 <col:20> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x56469ac58e58 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x56469ac58e20 <col:29> 'Handler::Flags' EnumConstant 0x56469ac522c0 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x56469ac58f40 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x56469ac58f20 <col:49> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac537c0 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x56469ac59078 <col:34, line:118:5>
|   `-ReturnStmt 0x56469ac59068 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x56469ac59050 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56469ac59030 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56469ac59000 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56469ac58fb0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|         |   `-CXXThisExpr 0x56469ac58fa0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56469ac59018 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56469ac58fe0 <col:18> 'Handler::Flags' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac53880 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x56469ac59258 <col:39, line:127:5>
|   `-ReturnStmt 0x56469ac59248 <line:126:2, col:51>
|     `-BinaryOperator 0x56469ac59228 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x56469ac591d0 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x56469ac591b0 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56469ac59180 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56469ac590a0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|       |   |   `-CXXThisExpr 0x56469ac59090 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x56469ac59198 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x56469ac59160 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x56469ac59140 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x56469ac59110 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x56469ac590d0 <col:20> 'Handler::Flags' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x56469ac59128 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x56469ac590f0 <col:30> 'Handler::Flags' EnumConstant 0x56469ac52350 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x56469ac59210 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x56469ac591f0 <col:51> 'Handler::Flags' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac53940 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x56469ac59360 <col:33, line:132:5>
|   `-ReturnStmt 0x56469ac59350 <line:131:2, col:41>
|     `-BinaryOperator 0x56469ac59330 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x56469ac592b0 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x56469ac59280 <col:9> '<bound member function type>' ->read_visible 0x56469ac53700
|       |   `-CXXThisExpr 0x56469ac59270 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x56469ac59310 <col:27, col:41> 'bool'
|         `-MemberExpr 0x56469ac592e0 <col:27> '<bound member function type>' ->write_visible 0x56469ac53880
|           `-CXXThisExpr 0x56469ac592d0 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x56469ac53a00 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x56469ac59498 <col:51, line:138:5>
|   `-ReturnStmt 0x56469ac59488 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x56469ac59470 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x56469ac59450 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x56469ac59408 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x56469ac593d8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x56469ac59388 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|           |   `-CXXThisExpr 0x56469ac59378 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x56469ac593f0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x56469ac593b8 <col:26> 'Handler::Flags' EnumConstant 0x56469ac521a0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac53ac0 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x56469ac595a8 <col:50, line:144:5>
|   `-ReturnStmt 0x56469ac59598 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x56469ac59580 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x56469ac59560 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x56469ac59540 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x56469ac59510 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x56469ac594c0 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|           |   `-CXXThisExpr 0x56469ac594b0 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x56469ac59528 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x56469ac594f0 <col:26> 'Handler::Flags' EnumConstant 0x56469ac521a0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac53b80 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x56469ac59698 <col:29, line:166:5>
|   `-ReturnStmt 0x56469ac59688 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x56469ac59670 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56469ac59650 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56469ac59620 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56469ac595d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|         |   `-CXXThisExpr 0x56469ac595c0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56469ac59638 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56469ac59600 <col:18> 'Handler::Flags' EnumConstant 0x56469ac52230 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac53e08 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x56469ac53c30 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x56469ac53ca8 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x56469ac53d20 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac54018 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x56469ac53ed0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x56469ac53f48 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x56469ac587b0 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x56469ac58790 <col:62> 'int' 0
| `-CompoundStmt 0x56469ac59938 <col:71, line:188:5>
|   `-ReturnStmt 0x56469ac59928 <line:187:2, col:36>
|     `-ExprWithCleanups 0x56469ac59910 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x56469ac598e0 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56469ac598c8 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56469ac598a8 <col:9, col:36> 'String' (CXXTemporary 0x56469ac598a8)
|             `-CXXMemberCallExpr 0x56469ac59808 <col:9, col:36> 'String'
|               |-MemberExpr 0x56469ac597d8 <col:9> '<bound member function type>' ->call_read 0x56469ac53e08
|               | `-CXXThisExpr 0x56469ac597c8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x56469ac59840 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x56469ac59720 <col:19> 'Element *' lvalue ParmVar 0x56469ac53ed0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x56469ac59870 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x56469ac59858 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x56469ac59788 <col:22, col:29> 'String' (CXXTemporary 0x56469ac59788)
|               |     `-CXXTemporaryObjectExpr 0x56469ac59750 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x56469ac59888 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x56469ac597a8 <col:32> 'ErrorHandler *' lvalue ParmVar 0x56469ac53f48 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac542b0 <line:198:5, col:73> col:9 used call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x56469ac540d8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x56469ac54150 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56469ac541c8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac54438 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x56469ac54378 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x56469ac54668 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x56469ac544f0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x56469ac54568 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x56469ac54768 <line:223:5, line:225:5> line:223:34 used blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x56469ac59998 <col:50, line:225:5>
|   `-ReturnStmt 0x56469ac59988 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x56469ac59970 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac59950 <col:9> 'const Handler *' lvalue Var 0x56469ac56b10 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x56469ac54808 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x56469ac54910 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac554b0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac548f0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x56469ac548d0 <col:11> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac549a0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac554c8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54980 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x56469ac54960 <col:12> 'Handler::Flags' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54a30 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac554e0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54a10 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x56469ac549f0 <col:17> 'Handler::Flags' EnumConstant 0x56469ac52080 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54ac0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac554f8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54aa0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x56469ac54a80 <col:16> 'Handler::Flags' EnumConstant 0x56469ac52110 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54b50 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55510 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54b30 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x56469ac54b10 <col:19> 'Handler::Flags' EnumConstant 0x56469ac521a0 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54be0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55528 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54bc0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x56469ac54ba0 <col:10> 'Handler::Flags' EnumConstant 0x56469ac52230 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54c70 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55540 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54c50 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x56469ac54c30 <col:19> 'Handler::Flags' EnumConstant 0x56469ac522c0 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54d00 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55558 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54ce0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x56469ac54cc0 <col:20> 'Handler::Flags' EnumConstant 0x56469ac52350 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54d90 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55570 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54d70 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x56469ac54d50 <col:17> 'Handler::Flags' EnumConstant 0x56469ac523e0 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54e20 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55588 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54e00 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x56469ac54de0 <col:15> 'Handler::Flags' EnumConstant 0x56469ac52470 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54eb0 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac555a0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54e90 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x56469ac54e70 <col:11> 'Handler::Flags' EnumConstant 0x56469ac52500 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54f40 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac555b8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54f20 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x56469ac54f00 <col:16> 'Handler::Flags' EnumConstant 0x56469ac52590 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac54fd0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac555d0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac54fb0 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x56469ac54f90 <col:13> 'Handler::Flags' EnumConstant 0x56469ac52620 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55060 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac555e8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55040 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x56469ac55020 <col:15> 'Handler::Flags' EnumConstant 0x56469ac526b0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac550f0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55600 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac550d0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x56469ac550b0 <col:20> 'Handler::Flags' EnumConstant 0x56469ac52780 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55180 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55618 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55160 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x56469ac55140 <col:27> 'Handler::Flags' EnumConstant 0x56469ac52850 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55210 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55630 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac551f0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x56469ac551d0 <col:22> 'Handler::Flags' EnumConstant 0x56469ac528e0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac552a0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55648 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55280 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x56469ac55260 <col:18> 'Handler::Flags' EnumConstant 0x56469ac529b0 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55330 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55660 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55310 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x56469ac552f0 <col:25> 'Handler::Flags' EnumConstant 0x56469ac52a40 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac553c0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56469ac55678 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac553a0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x56469ac55380 <col:26> 'Handler::Flags' EnumConstant 0x56469ac52ad0 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x56469ac55460 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x56469ac55690 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac55440 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x56469ac55410 <col:20> 'Handler::Flags' EnumConstant 0x56469ac52c60 'f_special' 'Handler::Flags'
|-EnumDecl 0x56469ac556a8 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x56469ac557b0 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55d10 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55790 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x56469ac55770 <col:12> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55840 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55d28 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55820 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x56469ac55800 <col:13> 'Handler::Flags' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac558d0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55d40 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac558b0 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x56469ac55890 <col:15> 'Handler::Flags' EnumConstant 0x56469ac52080 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55960 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55d58 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55940 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x56469ac55920 <col:8> 'Handler::Flags' EnumConstant 0x56469ac52230 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac559f0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55d70 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac559d0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x56469ac559b0 <col:9> 'Handler::Flags' EnumConstant 0x56469ac52500 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55a80 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55d88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55a60 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x56469ac55a40 <col:14> 'Handler::Flags' EnumConstant 0x56469ac52590 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55b10 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55da0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55af0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x56469ac55ad0 <col:11> 'Handler::Flags' EnumConstant 0x56469ac52620 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55ba0 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55db8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55b80 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x56469ac55b60 <col:13> 'Handler::Flags' EnumConstant 0x56469ac526b0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x56469ac55c30 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56469ac55dd0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55c10 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x56469ac55bf0 <col:20> 'Handler::Flags' EnumConstant 0x56469ac528e0 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x56469ac55cc0 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x56469ac55de8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac55ca0 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x56469ac55c80 <col:16> 'Handler::Flags' EnumConstant 0x56469ac529b0 'f_user0' 'Handler::Flags'
|-EnumDecl 0x56469ac55e00 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x56469ac55ec0 <col:25> "" ""
| |-EnumConstantDecl 0x56469ac55f70 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x56469ac56050 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac55f50 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x56469ac55f30 <col:14> 'Handler::Flags' EnumConstant 0x56469ac52110 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x56469ac56000 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x56469ac56068 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac55fe0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x56469ac55fc0 <col:17> 'Handler::Flags' EnumConstant 0x56469ac521a0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56469ac561e8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x56469ac56090 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x56469ac56110 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x56469ac5a058 <col:70, line:284:5>
|   |-ParenExpr 0x56469ac59e78 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x56469ac59e48 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac59b78 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac59b48 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x56469ac59af0 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x56469ac59ad0 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x56469ac59aa0 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x56469ac599c0 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56469ac569e0
|   |   |   |   |   `-CXXThisExpr 0x56469ac599b0 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x56469ac59ab8 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x56469ac59a80 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x56469ac59a60 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x56469ac59a30 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x56469ac599f0 <col:34> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x56469ac59a48 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x56469ac59a10 <col:43> 'Handler::Flags' EnumConstant 0x56469ac52a40 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x56469ac59b30 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x56469ac59b10 <col:69> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x56469ac59bd8 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac59bb8 <col:85> 'int' 0
|   |   `-CallExpr 0x56469ac59da8 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x56469ac59d90 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac59d70 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac59de8 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac59c48 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x56469ac59e00 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac59c98 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x56469ac59e18 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac59cd0 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x56469ac59e30 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac59d58 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac59d40 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac59cf0 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x56469ac5a048 <line:283:2, col:38>
|     `-ExprWithCleanups 0x56469ac5a030 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x56469ac5a000 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56469ac59fe8 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56469ac59fc8 <col:9, col:38> 'String' (CXXTemporary 0x56469ac59fc8)
|             `-CallExpr 0x56469ac59f60 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x56469ac59f48 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x56469ac59ed8 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x56469ac564f0
|               |   `-MemberExpr 0x56469ac59ea8 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x56469ac565b8
|               |     `-CXXThisExpr 0x56469ac59e98 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x56469ac59f90 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x56469ac59f08 <col:22> 'Element *' lvalue ParmVar 0x56469ac56090 'e' 'Element *'
|               `-ImplicitCastExpr 0x56469ac59fa8 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x56469ac59f28 <col:25> 'void *' lvalue ParmVar 0x56469ac56110 'new_user_data' 'void *'
|-AccessSpecDecl 0x56469ac56298 <line:287:3, col:10> col:3 private
|-FieldDecl 0x56469ac562d0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x56469ac56320 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56469ac56470 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x56469ac564f0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x56469ac572e8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56469ac572e8
| | `-ParmVarDecl 0x56469ac573f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x56469ac57498 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56469ac57498
| | `-ParmVarDecl 0x56469ac575a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x56469ac57618 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56469ac57618
| |-CXXMethodDecl 0x56469ac57ee8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56469ac57ee8
| | `-ParmVarDecl 0x56469ac57ff8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x56469ac58068 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56469ac58068
| | `-ParmVarDecl 0x56469ac58178 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x56469add3190 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56469add3270 <col:5>
|-FieldDecl 0x56469ac565b8 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x56469ac56620 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56469ac56748 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x56469ac567d0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x56469ac57748 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56469ac57748
| | `-ParmVarDecl 0x56469ac57858 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x56469ac578f8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56469ac578f8
| | `-ParmVarDecl 0x56469ac57a08 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x56469ac57a78 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56469ac57a78
| |-CXXMethodDecl 0x56469ac58218 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56469ac58218
| | `-ParmVarDecl 0x56469ac58328 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x56469ac58398 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56469ac58398
| | `-ParmVarDecl 0x56469ac584a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x56469add32d0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56469add33b0 <col:5>
|-FieldDecl 0x56469ac56898 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x56469ac56918 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x56469ac56980 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x56469ac569e0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x56469ac56a48 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x56469ac56ab0 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x56469ac56b10 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x56469ac56c30 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x56469ac56b88 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x56469ac58860 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56469ac58848 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x56469ac58830 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56469ac58810 <col:30, col:37> 'String' (CXXTemporary 0x56469ac58810)
|           `-CXXTemporaryObjectExpr 0x56469ac587d8 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x56469ac56dd8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x56469ac56d18 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x56469ac56f58 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x56469ac56e90 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x56469ac57118 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x56469ac57158 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x56469ac57158
| `-ParmVarDecl 0x56469ac57238 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x56469ac57b88 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x56469ac57b88
| `-ParmVarDecl 0x56469ac57c98 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x56469ac57d38 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x56469ac57d38
| `-ParmVarDecl 0x56469ac57e48 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x56469ac58518 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x56469ac58518
| `-ParmVarDecl 0x56469ac58628 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x56469ac586b0 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x56469ac586b0

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.18, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.18, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469adb9c48 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x56469adb9e58 prev 0x56469adb9c48 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56469adbae70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56469adbae20 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x56469adbae00 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x56469adbacb0 'type'
|     `-SubstTemplateTypeParmType 0x56469ad245c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56469a9bee80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9bee28 'T'
|       `-RecordType 0x56469ad24110 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56469ad24028 'sized_array_memory'
|-FieldDecl 0x56469adbaf70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56469adbafc0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56469adbaff8 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x56469adb9ef0 'void *' sugar
|   |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56469a9f6d38 'T'
|   `-PointerType 0x56469a6f2ce0 'void *'
|     `-BuiltinType 0x56469a6f24e0 'void'
|-TypedefDecl 0x56469adbb088 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x56469adbb050 'void *&'
|   `-SubstTemplateTypeParmType 0x56469adb9ef0 'void *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469a6f2ce0 'void *'
|       `-BuiltinType 0x56469a6f24e0 'void'
|-TypedefDecl 0x56469adbb148 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x56469adbb110 'void *const &'
|   `-QualType 0x56469adb9ef1 'void *const' const
|     `-SubstTemplateTypeParmType 0x56469adb9ef0 'void *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469a6f2ce0 'void *'
|         `-BuiltinType 0x56469a6f24e0 'void'
|-TypedefDecl 0x56469adbceb8 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x56469adbce80 'void **'
|   `-SubstTemplateTypeParmType 0x56469adb9ef0 'void *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469a6f2ce0 'void *'
|       `-BuiltinType 0x56469a6f24e0 'void'
|-TypedefDecl 0x56469adbcf48 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x56469adbcf10 'void *const *'
|   `-QualType 0x56469adb9ef1 'void *const' const
|     `-SubstTemplateTypeParmType 0x56469adb9ef0 'void *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469a6f2ce0 'void *'
|         `-BuiltinType 0x56469a6f24e0 'void'
|-TypedefDecl 0x56469adbdb30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x56469adbdae0 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x56469adbdac0 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x56469adbda50 'type'
|     `-SubstTemplateTypeParmType 0x56469adbd810 'void *' sugar
|       |-TemplateTypeParmType 0x56469a9c9ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9c9e50 'T'
|       `-PointerType 0x56469a6f2ce0 'void *'
|         `-BuiltinType 0x56469a6f24e0 'void'
|-TypedefDecl 0x56469adbdb98 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x56469adbb110 'void *const &'
|   `-QualType 0x56469adb9ef1 'void *const' const
|     `-SubstTemplateTypeParmType 0x56469adb9ef0 'void *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469a6f2ce0 'void *'
|         `-BuiltinType 0x56469a6f24e0 'void'
|-TypedefDecl 0x56469adbdbf0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56469a6f2580 'int'
|-TypedefDecl 0x56469adbdc58 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x56469adbce80 'void **'
|   `-SubstTemplateTypeParmType 0x56469adb9ef0 'void *' sugar
|     |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56469a9f6d38 'T'
|     `-PointerType 0x56469a6f2ce0 'void *'
|       `-BuiltinType 0x56469a6f24e0 'void'
|-TypedefDecl 0x56469adbdcc0 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x56469adbcf10 'void *const *'
|   `-QualType 0x56469adb9ef1 'void *const' const
|     `-SubstTemplateTypeParmType 0x56469adb9ef0 'void *' sugar
|       |-TemplateTypeParmType 0x56469a9f6d90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56469a9f6d38 'T'
|       `-PointerType 0x56469a6f2ce0 'void *'
|         `-BuiltinType 0x56469a6f24e0 'void'
|-EnumDecl 0x56469adbdd18 <line:134:5> col:5
| `-EnumConstantDecl 0x56469adbde10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56469adbddf0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56469a9f8418 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56469a9f83f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56469a9f83d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56469adbde98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56469adbe0e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adbdf50 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adbdff0 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x56469adbe3a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x56469adbe290 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x56469adbe668 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x56469adbe550 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56469adbe9b0 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x56469adbe890 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x56469adbecc0 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x56469adbeba0 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56469adbefb0 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adbedf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adbee70 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56469adbf108 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56469adbf1e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adbf240 <col:30> Inherited
|-CXXMethodDecl 0x56469adbf288 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56469adbf338 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adbf390 <col:30> Inherited
|-CXXMethodDecl 0x56469adbf458 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56469adbf508 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adbf560 <col:30> Inherited
|-CXXMethodDecl 0x56469adbf5a8 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56469adbf658 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adbf6b0 <col:30> Inherited
|-CXXMethodDecl 0x56469adbf6f8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56469adbf7a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adbf800 <col:30> Inherited
|-CXXMethodDecl 0x56469adbf848 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56469adbf8f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56469adbf950 <col:30> Inherited
|-CXXMethodDecl 0x56469adbf978 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469adbfa28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56469adbfad8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469adbfc98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adbfb88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56469adbfc00 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56469adbfde8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56469adbfd58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adbff98 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x56469adbfea0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469adc0050 <col:20>
| `-OptimizeNoneAttr 0x56469adc00a8 <col:30>
|-CXXMethodDecl 0x56469adc01c8 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56469adc00d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56469adc0280 <col:20>
| `-OptimizeNoneAttr 0x56469adc02d8 <col:30>
|-CXXMethodDecl 0x56469adc0390 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56469adc0300 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adc04d8 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469adc0448 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adc0608 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x56469adc0738 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x56469adc0808 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x56469adc08d8 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x56469adc0a18 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56469adc0988 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adc0b60 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56469adc0ad0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56469adc0ca8 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56469adc0c18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469adc0d60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56469adc0e60 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56469adc0dd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56469adc0f18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56469adc0fd8 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x56469adc10d8 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x56469adc1258 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x56469adc1198 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x56469adc1a18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56469adc1310 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x56469adc1978 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x56469adc1878 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x56469adc1af8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56469adc1c48 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x56469adc1bb8 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56469adc1d00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56469adc1f48 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56469adc1dc0 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x56469adc1e38 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56469adc2108 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x56469adc2018 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x56469adc2358 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x56469adc21d0 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x56469adc2248 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x56469adc2418 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469adc2678 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x56469adc2580 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x56469adc2748 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56469adc2748

Layout: <CGRecordLayout
  LLVMType:%class.Vector.19 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.19 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469adc2940 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56469adc2a58 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x56469adc2ae8 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x56469adc2bf0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x56469adc2c40 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469adc2bd0 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x56469adc2bb0 <col:27> 'int' 4096
|-FieldDecl 0x56469adc2c68 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x56469adc2cd0 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x56469adc2ec8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x56469adc2f58 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x56469adc3118 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x56469adc2fb8 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x56469adc3030 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x56469adc2c68 'name' 'String'
| | `-CXXConstructExpr 0x56469adce138 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x56469adce0f8 <col:20> 'const String' lvalue ParmVar 0x56469adc2fb8 'n' 'const String &'
| |-CXXCtorInitializer Field 0x56469adc2cd0 'nsig' 'int'
| | `-IntegerLiteral 0x56469adce190 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x56469adc2ec8 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x56469adce278 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56469adc2f58 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x56469adce238 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x56469adce1f8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x56469adc3030 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x56469adce508 <col:42, line:289:9>
|   `-CallExpr 0x56469adce4b8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x56469adce4a0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56469adce480 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x56469a959538 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x56469adce4f0 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x56469adce3c8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x56469adce3a8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x56469adce390 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56469adce340 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x56469adc2ec8
|     |     |   `-CXXThisExpr 0x56469adce330 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x56469adce370 <col:25> 'int' 0
|     |-IntegerLiteral 0x56469adce3e0 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x56469adce460 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x56469adce440 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x56469adce410 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x56469adc2ec8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x56469adce400 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x56469adc31f8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56469adc31f8
| `-ParmVarDecl 0x56469adc3308 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x56469adc33a8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56469adc33a8
| `-ParmVarDecl 0x56469adc34b8 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x56469adc3558 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56469adc3558
| `-ParmVarDecl 0x56469adc3668 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x56469adc36d8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56469adc36d8
| `-ParmVarDecl 0x56469adc37e8 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x56469adc3870 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x56469adc3870

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad7fa98 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ad7fbb8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x56469ad7fc48 <col:21, col:27> col:21 public
|-EnumDecl 0x56469ad7fc70 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x56469ad7fd88 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x56469ad7fd68 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56469ad7fd50 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469ad7fd30 <col:32> 'int' 1
| `-EnumConstantDecl 0x56469ad7fe30 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x56469ad7fe10 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56469ad7fdf8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56469ad7fdd8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x56469ad7fee0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x56469ad80418 <col:19, col:21>
|-CXXDestructorDecl 0x56469ad7ffd0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x56469ad80428 <col:28, col:30>
|-CXXMethodDecl 0x56469ad80190 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x56469ad800c0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x56469ad80298 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x56469ad80298
  `-ParmVarDecl 0x56469ad803a8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad809d0 prev 0x56469ad52be0 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56469ad80ac8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x56469ad80b58 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x56469ad80bc8 <line:28:5, col:29> col:20 used master 'Master *() const' inline
|-CXXMethodDecl 0x56469ad80c88 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x56469ad80d48 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x56469ad80e08 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x56469ad80ec8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x56469ad80f68 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x56469ad810c8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x56469ad810a8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x56469ad81088 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x56469ad81050 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x56469ad81030 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x56469ad81068 <col:42> 'int' 1
|-CXXMethodDecl 0x56469ad81168 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x56469ad812d8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x56469ad81218 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x56469ad81420 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x56469ad81390 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x56469ad814e8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x56469ad81810 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x56469ad818d8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x56469ad81a58 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x56469ad81990 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x56469ad81b20 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x56469ad81d28 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x56469ad81bd0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x56469ad81c50 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x56469ad81e80 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x56469ad81df0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x56469ad81fd0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x56469ad81f40 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x56469ad82120 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x56469ad82090 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x56469ad82270 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x56469ad821e0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x56469ad82440 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x56469ad82330 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x56469ad823a8 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x56469ad82648 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x56469ad82500 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x56469ad82578 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adcad80 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adcad60 <col:60> 'int' 0
|-CXXMethodDecl 0x56469ad828d8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x56469ad82708 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x56469ad82780 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x56469ad827f8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adcadb8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adcad98 <col:76> 'int' 0
|-CXXMethodDecl 0x56469ad82b78 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x56469ad829a0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x56469ad82a18 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x56469ad82a90 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adcadf0 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adcadd0 <col:84> 'int' 0
|-CXXMethodDecl 0x56469ad82ed0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56469ad82c40 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x56469ad82cb8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x56469ad82d38 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x56469ad82dd8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56469ad83180 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56469ad82fa0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x56469ad83020 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x56469ad83098 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56469ad833e8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56469ad83248 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x56469ad832c8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x56469ad83340 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56469ad838a0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x56469ad834b0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x56469ad83530 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x56469ad835d8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x56469ad83750 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x56469ad83960 <col:115> "" ""
|-CXXMethodDecl 0x56469ad83d20 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x56469ad839e0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x56469ad83a60 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x56469ad83ad8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x56469ad83c20 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x56469ad83de0 <col:113> "" ""
|-CXXMethodDecl 0x56469ad83f30 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x56469ad83e68 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x56469ad84100 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x56469ad83ff0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x56469ad84068 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x56469ad84308 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x56469ad841c0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x56469ad84238 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x56469ad84708 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x56469ad843c8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x56469ad84440 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x56469ad844b8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56469ad84538 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x56469ad845b0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469adcae28 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469adcae08 <col:137> 'int' 0
|-CXXMethodDecl 0x56469ad84b18 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x56469ad847e0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x56469ad84858 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x56469ad848d0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ad84950 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x56469ad849c8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469adcae60 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469adcae40 <col:139> 'int' 0
|-CXXMethodDecl 0x56469ad84fc8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x56469ad84bf0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x56469ad84c68 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x56469ad84ce0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ad84d58 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ad84dd8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x56469adcae98 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x56469adcae78 <col:133> 'int' 0
| `-ParmVarDecl 0x56469ad84e58 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x56469adcaed0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x56469adcaeb0 <col:160> 'int' 0
|-CXXMethodDecl 0x56469ad85360 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56469ad850a8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x56469ad85120 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x56469ad85198 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56469ad85210 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469adcaf08 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469adcaee8 <col:116> 'int' 0
|-EnumDecl 0x56469ad85420 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x56469ad85520 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x56469ad85570 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ad85500 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x56469ad854e0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x56469ad856f0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x56469ad85598 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x56469ad85610 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x56469ad85908 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x56469ad857b0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x56469ad85830 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x56469ad85c38 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x56469ad859c8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x56469ad85b20 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x56469ad85dc0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x56469ad85cf8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x56469ad85f70 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x56469ad85e78 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x56469ad88030 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x56469ad86028 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x56469ad860a8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x56469ad881b8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x56469ad880f0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x56469ad882d8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x56469ad883c8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x56469ad88538 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x56469ad88478 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x56469ad886c0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x56469ad885f0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x56469ad888c8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x56469ad88778 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x56469ad887f8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x56469ad889f8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x56469ad88ae8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x56469ad88ba8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x56469ad88da8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56469ad88c58 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x56469ad88cd0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56469adcafb8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56469adcafa0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x56469adcaf88 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56469adcaf68 <col:58, col:65> 'String' (CXXTemporary 0x56469adcaf68)
|           `-CXXTemporaryObjectExpr 0x56469adcaf30 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x56469ad88f78 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56469ad88e68 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x56469ad88ee0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56469adcb068 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56469adcb050 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x56469adcb038 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56469adcb018 <col:71, col:78> 'String' (CXXTemporary 0x56469adcb018)
|           `-CXXTemporaryObjectExpr 0x56469adcafe0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x56469ad89148 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56469ad89038 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x56469ad890b0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56469adcb118 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56469adcb100 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x56469adcb0e8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56469adcb0c8 <col:71, col:78> 'String' (CXXTemporary 0x56469adcb0c8)
|           `-CXXTemporaryObjectExpr 0x56469adcb090 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x56469ad89318 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56469ad89208 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x56469ad89280 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56469adcb1c8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56469adcb1b0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x56469adcb198 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56469adcb178 <col:70, col:77> 'String' (CXXTemporary 0x56469adcb178)
|           `-CXXTemporaryObjectExpr 0x56469adcb140 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x56469ad89498 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x56469ad893d8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x56469ad896b8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x56469ad89550 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x56469ad895c8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x56469ad897b8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x56469ad897b8
|-CXXMethodDecl 0x56469ad898c0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x56469ad89980 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56469ad89a40 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x56469ad89b00 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x56469ad89cf8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x56469ad89bb0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x56469ad89c28 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x56469ad8a0b0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x56469ad89db8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x56469ad89e30 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x56469ad89ea8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x56469ad89f20 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x56469ad89fa0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x56469ad8a410 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x56469ad8a190 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x56469ad8a210 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x56469ad8a290 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x56469ad8a310 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x56469ad8a4f0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x56469ad8a630 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x56469ad8a5a0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x56469ad8a780 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56469ad8a6e8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ad8a988 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x56469ad8a838 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x56469ad8a8b0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ad8aad8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x56469ad8aa48 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ad8ac20 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x56469ad8ab90 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x56469ad8ae60 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x56469ad8ace0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56469ad8ad88 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x56469ad8afe8 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x56469ad8af20 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x56469ad8b090 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56469ad8b1a8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x56469ad8b250 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x56469ad8b2b8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x56469ad8b370 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x56469adcb1f0 <col:16, line:150:9>
| |-CXXConstructorDecl 0x56469ad8b548 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x56469ad8b430 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x56469ad8b4b0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x56469ad8b250 'idx' 'int'
| | | `-ImplicitCastExpr 0x56469adcb240 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x56469adcb200 <col:19> 'int' lvalue ParmVar 0x56469ad8b430 'i' 'int'
| | |-CXXCtorInitializer Field 0x56469ad8b2b8 'port' 'int'
| | | `-ImplicitCastExpr 0x56469adcb2c0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x56469adcb280 <col:28> 'int' lvalue ParmVar 0x56469ad8b4b0 'p' 'int'
| | `-CompoundStmt 0x56469adcb310 <col:31, line:153:9>
| |-CXXMethodDecl 0x56469ad8b728 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56469ad8b638 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56469adcb510 <col:46, line:157:9>
| |   `-ReturnStmt 0x56469adcb500 <line:156:13, col:46>
| |     `-BinaryOperator 0x56469adcb4e0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x56469adcb3e0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x56469adcb3b0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56469adcb330 <col:20> 'const int' lvalue ->idx 0x56469ad8b250
| |       | |   `-CXXThisExpr 0x56469adcb320 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56469adcb3c8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56469adcb380 <col:27, col:29> 'const int' lvalue .idx 0x56469ad8b250
| |       |     `-DeclRefExpr 0x56469adcb360 <col:27> 'const Router::Port' lvalue ParmVar 0x56469ad8b638 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x56469adcb4c0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x56469adcb490 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x56469adcb410 <col:36> 'const int' lvalue ->port 0x56469ad8b2b8
| |         |   `-CXXThisExpr 0x56469adcb400 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x56469adcb4a8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x56469adcb460 <col:44, col:46> 'const int' lvalue .port 0x56469ad8b2b8
| |             `-DeclRefExpr 0x56469adcb440 <col:44> 'const Router::Port' lvalue ParmVar 0x56469ad8b638 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56469ad8b870 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56469ad8b7e0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56469adcb718 <col:46, line:160:9>
| |   `-ReturnStmt 0x56469adcb708 <line:159:13, col:46>
| |     `-BinaryOperator 0x56469adcb6e8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x56469adcb5e8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x56469adcb5b8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56469adcb538 <col:20> 'const int' lvalue ->idx 0x56469ad8b250
| |       | |   `-CXXThisExpr 0x56469adcb528 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56469adcb5d0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56469adcb588 <col:27, col:29> 'const int' lvalue .idx 0x56469ad8b250
| |       |     `-DeclRefExpr 0x56469adcb568 <col:27> 'const Router::Port' lvalue ParmVar 0x56469ad8b7e0 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x56469adcb6c8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x56469adcb698 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x56469adcb618 <col:36> 'const int' lvalue ->port 0x56469ad8b2b8
| |         |   `-CXXThisExpr 0x56469adcb608 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x56469adcb6b0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x56469adcb668 <col:44, col:46> 'const int' lvalue .port 0x56469ad8b2b8
| |             `-DeclRefExpr 0x56469adcb648 <col:44> 'const Router::Port' lvalue ParmVar 0x56469ad8b7e0 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56469ad8b9b8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56469ad8b928 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x56469adcba40 <col:45, line:163:9>
| |   `-ReturnStmt 0x56469adcba30 <line:162:13, col:65>
| |     `-BinaryOperator 0x56469adcba10 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x56469adcb7f0 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x56469adcb7c0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56469adcb740 <col:20> 'const int' lvalue ->idx 0x56469ad8b250
| |       | |   `-CXXThisExpr 0x56469adcb730 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56469adcb7d8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56469adcb790 <col:26, col:28> 'const int' lvalue .idx 0x56469ad8b250
| |       |     `-DeclRefExpr 0x56469adcb770 <col:26> 'const Router::Port' lvalue ParmVar 0x56469ad8b928 'x' 'const Router::Port &'
| |       `-ParenExpr 0x56469adcb9f0 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x56469adcb9d0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x56469adcb8d0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x56469adcb8a0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x56469adcb820 <col:36> 'const int' lvalue ->idx 0x56469ad8b250
| |           | |   `-CXXThisExpr 0x56469adcb810 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x56469adcb8b8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x56469adcb870 <col:43, col:45> 'const int' lvalue .idx 0x56469ad8b250
| |           |     `-DeclRefExpr 0x56469adcb850 <col:43> 'const Router::Port' lvalue ParmVar 0x56469ad8b928 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x56469adcb9b0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x56469adcb980 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x56469adcb900 <col:52> 'const int' lvalue ->port 0x56469ad8b2b8
| |             |   `-CXXThisExpr 0x56469adcb8f0 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x56469adcb998 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x56469adcb950 <col:59, col:61> 'const int' lvalue .port 0x56469ad8b2b8
| |                 `-DeclRefExpr 0x56469adcb930 <col:59> 'const Router::Port' lvalue ParmVar 0x56469ad8b928 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56469ad8bb00 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56469ad8ba70 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56469adcbd68 <col:46, line:166:9>
| |   `-ReturnStmt 0x56469adcbd58 <line:165:13, col:66>
| |     `-BinaryOperator 0x56469adcbd38 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x56469adcbb18 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x56469adcbae8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56469adcba68 <col:20> 'const int' lvalue ->idx 0x56469ad8b250
| |       | |   `-CXXThisExpr 0x56469adcba58 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56469adcbb00 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56469adcbab8 <col:26, col:28> 'const int' lvalue .idx 0x56469ad8b250
| |       |     `-DeclRefExpr 0x56469adcba98 <col:26> 'const Router::Port' lvalue ParmVar 0x56469ad8ba70 'x' 'const Router::Port &'
| |       `-ParenExpr 0x56469adcbd18 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x56469adcbcf8 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x56469adcbbf8 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x56469adcbbc8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x56469adcbb48 <col:36> 'const int' lvalue ->idx 0x56469ad8b250
| |           | |   `-CXXThisExpr 0x56469adcbb38 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x56469adcbbe0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x56469adcbb98 <col:43, col:45> 'const int' lvalue .idx 0x56469ad8b250
| |           |     `-DeclRefExpr 0x56469adcbb78 <col:43> 'const Router::Port' lvalue ParmVar 0x56469ad8ba70 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x56469adcbcd8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x56469adcbca8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x56469adcbc28 <col:52> 'const int' lvalue ->port 0x56469ad8b2b8
| |             |   `-CXXThisExpr 0x56469adcbc18 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x56469adcbcc0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x56469adcbc78 <col:60, col:62> 'const int' lvalue .port 0x56469ad8b2b8
| |                 `-DeclRefExpr 0x56469adcbc58 <col:60> 'const Router::Port' lvalue ParmVar 0x56469ad8ba70 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x56469adcbd80 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x56469adcbd80
| | `-ParmVarDecl 0x56469adcbe98 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x56469adcbf38 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x56469adcbf38
| | `-ParmVarDecl 0x56469adcc048 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x56469adcc0e0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56469adcc3b0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x56469adcc3b0
| | `-ParmVarDecl 0x56469adcc4b8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x56469adcc528 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56469adcc638 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x56469adcc958 <col:12>
|     |-BinaryOperator 0x56469adcc7f8 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x56469adcc7b0 <col:12> 'int' lvalue ->idx 0x56469ad8b250
|     | | `-CXXThisExpr 0x56469adcc7a0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x56469adcc7e0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x56469adcc770 <col:12> 'int' xvalue .idx 0x56469ad8b250
|     |     `-CXXStaticCastExpr 0x56469adcc740 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x56469adcc710 <col:12> 'Router::Port' lvalue ParmVar 0x56469adcc638 '' 'Router::Port &&'
|     |-BinaryOperator 0x56469adcc900 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x56469adcc8b8 <col:12> 'int' lvalue ->port 0x56469ad8b2b8
|     | | `-CXXThisExpr 0x56469adcc8a8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x56469adcc8e8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x56469adcc878 <col:12> 'int' xvalue .port 0x56469ad8b2b8
|     |     `-CXXStaticCastExpr 0x56469adcc848 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x56469adcc818 <col:12> 'Router::Port' lvalue ParmVar 0x56469adcc638 '' 'Router::Port &&'
|     `-ReturnStmt 0x56469adcc948 <col:12>
|       `-UnaryOperator 0x56469adcc930 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469adcc920 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x56469ad8bbc0 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469ad8bcd8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x56469ad8bec8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x56469ad8bf80 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x56469ad8bec8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x56469adcc0b8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x56469adcc1f0 <col:22, line:173:9>
| |-CXXConstructorDecl 0x56469ad8c2b8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x56469ad8c040 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x56469ad8c0c0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x56469ad8c140 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x56469ad8c1c0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x56469ad8bec8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x56469adcc200 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x56469adccc38 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x56469adcca28 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x56469adcc9f0 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x56469adcc9d8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x56469adcc6c0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x56469adcc528 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x56469adcc2d0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x56469adcc2b8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x56469adcc268 <col:13> 'Router::Port [2]' lvalue ->p 0x56469ad8bec8
| |   |   | |   `-CXXThisExpr 0x56469adcc258 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x56469adcc298 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x56469adcc6a8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x56469adcc370 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x56469adcc340 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x56469adcc300 <col:25> 'int' lvalue ParmVar 0x56469ad8c140 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x56469adcc358 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x56469adcc320 <col:33> 'int' lvalue ParmVar 0x56469ad8c1c0 'to_port' 'int'
| |   `-ExprWithCleanups 0x56469adccc20 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x56469adccbe8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56469adccbd0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x56469adccbb0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x56469adcc528 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x56469adccab8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x56469adccaa0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x56469adcca50 <col:13> 'Router::Port [2]' lvalue ->p 0x56469ad8bec8
| |       | |   `-CXXThisExpr 0x56469adcca40 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x56469adcca80 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x56469adccb98 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x56469adccb58 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x56469adccb28 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x56469adccae8 <col:25> 'int' lvalue ParmVar 0x56469ad8c040 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x56469adccb40 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x56469adccb08 <col:35> 'int' lvalue ParmVar 0x56469ad8c0c0 'from_port' 'int'
| |-CXXMethodDecl 0x56469ad8c488 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x56469ad8c398 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x56469adcd1f8 <col:45, line:182:9>
| |   |-ParenExpr 0x56469adcd0d8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x56469adcd0a8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x56469adccd78 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x56469adccd48 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x56469adcccb0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x56469adccc98 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x56469adccc58 <col:34> 'int' lvalue ParmVar 0x56469ad8c398 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x56469adccc78 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x56469adccd28 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x56469adccd10 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x56469adcccd0 <col:44> 'int' lvalue ParmVar 0x56469ad8c398 'i' 'int'
| |   |   |     `-IntegerLiteral 0x56469adcccf0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x56469adccdd8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x56469adccdb8 <col:59> 'int' 0
| |   |   `-CallExpr 0x56469adcd008 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x56469adccff0 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x56469adccfd0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x56469adcd048 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56469adcce48 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x56469adcd060 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56469adcce70 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x56469adcd078 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x56469adccea8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x56469adcd090 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x56469adccfb8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x56469adccfa0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x56469adccf48 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x56469adcd1e8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x56469adcd1c8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56469adcd198 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x56469adcd108 <col:20> 'Router::Port const[2]' lvalue ->p 0x56469ad8bec8
| |       |   `-CXXThisExpr 0x56469adcd0f8 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x56469adcd1b0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x56469adcd138 <col:22> 'int' lvalue ParmVar 0x56469ad8c398 'i' 'int'
| |-CXXMethodDecl 0x56469ad8c638 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x56469ad8c548 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x56469adcd770 <col:33, line:186:9>
| |   |-ParenExpr 0x56469adcd690 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x56469adcd660 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x56469adcd338 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x56469adcd308 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x56469adcd270 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x56469adcd258 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x56469adcd218 <col:34> 'int' lvalue ParmVar 0x56469ad8c548 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x56469adcd238 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x56469adcd2e8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x56469adcd2d0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x56469adcd290 <col:44> 'int' lvalue ParmVar 0x56469ad8c548 'i' 'int'
| |   |   |     `-IntegerLiteral 0x56469adcd2b0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x56469adcd398 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x56469adcd378 <col:59> 'int' 0
| |   |   `-CallExpr 0x56469adcd5c0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x56469adcd5a8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x56469adcd588 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x56469adcd600 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56469adcd408 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x56469adcd618 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56469adcd430 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x56469adcd630 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x56469adcd468 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x56469adcd648 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x56469adcd570 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x56469adcd558 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x56469adcd508 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x56469adcd760 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x56469adcd740 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56469adcd710 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x56469adcd6c0 <col:20> 'Router::Port [2]' lvalue ->p 0x56469ad8bec8
| |       |   `-CXXThisExpr 0x56469adcd6b0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x56469adcd728 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x56469adcd6f0 <col:22> 'int' lvalue ParmVar 0x56469ad8c548 'i' 'int'
| |-CXXMethodDecl 0x56469ad8c7d8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x56469ad8c718 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x56469adcdb48 <col:52, line:190:9>
| |   `-ReturnStmt 0x56469adcdb38 <line:189:13, col:51>
| |     `-BinaryOperator 0x56469adcdb18 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x56469adcd930 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x56469adcd918 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x56469adcd8d0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56469ad8b728 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x56469adcd808 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x56469adcd7f0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x56469adcd7a0 <col:20> 'Router::Port const[2]' lvalue ->p 0x56469ad8bec8
| |       | | |   `-CXXThisExpr 0x56469adcd790 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x56469adcd7d0 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x56469adcd8b0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x56469adcd898 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x56469adcd848 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x56469ad8bec8
| |       |   |   `-DeclRefExpr 0x56469adcd828 <col:28> 'const Router::Connection' lvalue ParmVar 0x56469ad8c718 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x56469adcd878 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x56469adcdae0 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x56469adcdac8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x56469adcdaa8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56469ad8b728 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x56469adcd9e0 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x56469adcd9c8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x56469adcd978 <col:38> 'Router::Port const[2]' lvalue ->p 0x56469ad8bec8
| |         | |   `-CXXThisExpr 0x56469adcd968 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x56469adcd9a8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x56469adcda88 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x56469adcda70 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x56469adcda20 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x56469ad8bec8
| |           |   `-DeclRefExpr 0x56469adcda00 <col:46> 'const Router::Connection' lvalue ParmVar 0x56469ad8c718 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x56469adcda50 <col:50> 'int' 1
| `-CXXMethodDecl 0x56469ad8c920 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x56469ad8c890 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x56469adce0e0 <col:51, line:193:9>
|     `-ReturnStmt 0x56469adce0d0 <line:192:13, col:69>
|       `-BinaryOperator 0x56469adce0b0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x56469adcdcd8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x56469adcdcc0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x56469adcdca0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56469ad8b9b8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x56469adcdbd8 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x56469adcdbc0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x56469adcdb70 <col:20> 'Router::Port const[2]' lvalue ->p 0x56469ad8bec8
|         | | |   `-CXXThisExpr 0x56469adcdb60 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x56469adcdba0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x56469adcdc80 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x56469adcdc68 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x56469adcdc18 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x56469ad8bec8
|         |   |   `-DeclRefExpr 0x56469adcdbf8 <col:27> 'const Router::Connection' lvalue ParmVar 0x56469ad8c890 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x56469adcdc48 <col:31> 'int' 0
|         `-ParenExpr 0x56469adce090 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x56469adce070 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x56469adcde88 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x56469adcde70 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x56469adcde50 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56469ad8b728 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x56469adcdd88 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x56469adcdd70 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x56469adcdd20 <col:38> 'Router::Port const[2]' lvalue ->p 0x56469ad8bec8
|             | | |   `-CXXThisExpr 0x56469adcdd10 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x56469adcdd50 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x56469adcde30 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x56469adcde18 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x56469adcddc8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x56469ad8bec8
|             |   |   `-DeclRefExpr 0x56469adcdda8 <col:46> 'const Router::Connection' lvalue ParmVar 0x56469ad8c890 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x56469adcddf8 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x56469adce038 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x56469adce020 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56469adce000 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56469ad8b9b8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x56469adcdf38 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x56469adcdf20 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x56469adcded0 <col:56> 'Router::Port const[2]' lvalue ->p 0x56469ad8bec8
|               | |   `-CXXThisExpr 0x56469adcdec0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x56469adcdf00 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x56469adcdfe0 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x56469adcdfc8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x56469adcdf78 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x56469ad8bec8
|                 |   `-DeclRefExpr 0x56469adcdf58 <col:63> 'const Router::Connection' lvalue ParmVar 0x56469ad8c890 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x56469adcdfa8 <col:67> 'int' 1
|-AccessSpecDecl 0x56469ad8c9e0 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x56469ad8ca08 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x56469ad8cac0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x56469ad8cb80 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56469ad8cbd0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56469ad8cc20 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56469ad8cc70 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x56469ad8ccc0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x56469ad8cd10 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x56469ad8ce28 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56469ad8ce08 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x56469ad8cdf0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469ad8cdd0 <col:25> 'int' 2
| |-EnumConstantDecl 0x56469ad8ced0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56469ad8ceb0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x56469ad8ce98 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469ad8ce78 <col:48> 'int' 1
| |-EnumConstantDecl 0x56469ad8cf60 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56469ad8cf40 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x56469ad8cf20 <col:71> 'int' 0
| |-EnumConstantDecl 0x56469ad8cff0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56469ad8cfd0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x56469ad8cfb0 <col:30> 'int' 1
| `-EnumConstantDecl 0x56469ad8d080 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x56469ad8d060 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x56469ad8d040 <col:50> 'int' 2
|-FieldDecl 0x56469ad8d0e0 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x56469ad8d140 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x56469ad8d1a8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x56469ad8d248 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x56469ad8d228 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x56469ad8d1f8 <col:30> 'int' 1
|-FieldDecl 0x56469ad8d2e8 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x56469ad8d2c8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x56469ad8d298 <col:33> 'int' 1
|-FieldDecl 0x56469ad8d388 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x56469ad8d368 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x56469ad8d338 <col:32> 'int' 1
|-FieldDecl 0x56469ad8d3f0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x56469ad8d450 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x56469ad99150 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x56469ad99250 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56469ad99350 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56469ada1700 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x56469ada1810 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x56469ada1860 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x56469ada1978 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x56469ada1a18 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x56469ada1a78 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x56469ada1b10 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56469ada1b10
| | `-ParmVarDecl 0x56469ada1c28 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x56469ada1cc8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56469ada1cc8
| | `-ParmVarDecl 0x56469ada1dd8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x56469ada1e78 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56469ada1e78
| | `-ParmVarDecl 0x56469ada1f88 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x56469ada1ff8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56469ada1ff8
| | `-ParmVarDecl 0x56469ada2108 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x56469ada2190 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x56469ada2190
|-FieldDecl 0x56469adaeb70 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x56469adaebd0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x56469adaece0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x56469adaf038 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x56469adaf140 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469adb91c0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x56469adb92d0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x56469adb93d0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56469adb94e0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469adb95f0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469adb9700 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469adb9810 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x56469adb9860 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x56469adb9960 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x56469adb99b0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469adb9940 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x56469adb9920 <col:29> 'int' 256
|-FieldDecl 0x56469adb9a10 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x56469adb9a78 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x56469adb9ae0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x56469adb9be0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56469adc2830 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x56469adc2890 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x56469adc28f0 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x56469adc2940 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x56469adc2a58 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x56469adc2ae8 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x56469adc2bf0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x56469adc2c40 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x56469adc2bd0 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x56469adc2bb0 <col:27> 'int' 4096
| |-FieldDecl 0x56469adc2c68 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x56469adc2cd0 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x56469adc2ec8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x56469adc2f58 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x56469adc3118 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x56469adc2fb8 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x56469adc3030 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x56469adc2c68 'name' 'String'
| | | `-CXXConstructExpr 0x56469adce138 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x56469adce0f8 <col:20> 'const String' lvalue ParmVar 0x56469adc2fb8 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x56469adc2cd0 'nsig' 'int'
| | | `-IntegerLiteral 0x56469adce190 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x56469adc2ec8 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x56469adce278 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x56469adc2f58 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x56469adce238 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56469adce1f8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x56469adc3030 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x56469adce508 <col:42, line:289:9>
| |   `-CallExpr 0x56469adce4b8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x56469adce4a0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x56469adce480 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x56469a959538 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x56469adce4f0 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x56469adce3c8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x56469adce3a8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x56469adce390 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x56469adce340 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x56469adc2ec8
| |     |     |   `-CXXThisExpr 0x56469adce330 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x56469adce370 <col:25> 'int' 0
| |     |-IntegerLiteral 0x56469adce3e0 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x56469adce460 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x56469adce440 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x56469adce410 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x56469adc2ec8 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x56469adce400 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x56469adc31f8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56469adc31f8
| | `-ParmVarDecl 0x56469adc3308 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x56469adc33a8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56469adc33a8
| | `-ParmVarDecl 0x56469adc34b8 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x56469adc3558 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56469adc3558
| | `-ParmVarDecl 0x56469adc3668 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x56469adc36d8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56469adc36d8
| | `-ParmVarDecl 0x56469adc37e8 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x56469adc3870 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x56469adc3870
|-FieldDecl 0x56469adc3960 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x56469adc39c0 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x56469adc3a20 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x56469adc3a80 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x56469adc3ae0 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x56469adc3bf0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469adc3cf0 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56469adc3d50 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x56469adc3e98 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x56469adc3dd8 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x56469adc4048 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x56469adc3f58 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x56469adc4190 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x56469adc4100 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x56469adc4538 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x56469adc4248 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x56469adc42c0 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x56469adc4340 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x56469adc43b8 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x56469adc4430 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469adcb1e0 <col:57> 'bool' false
|-CXXMethodDecl 0x56469adc46a8 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56469adc4610 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x56469adc47f8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56469adc4760 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x56469adc4948 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56469adc48b0 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x56469adc4aa0 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x56469adc4a08 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x56469adc4dc0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x56469adc4b58 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x56469adc4bd0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x56469adc4c50 <col:56> col:59 'int'
| `-ParmVarDecl 0x56469adc4cc8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x56469adc8b98 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56469adc8b00 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x56469adc8c60 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x56469adc8d20 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x56469adc8f20 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x56469adc8dd0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x56469adc8e48 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x56469adc8ff0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x56469adc9138 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x56469adc90a0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x56469adce740 <col:42, line:326:5>
|   `-ReturnStmt 0x56469adce730 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x56469adce718 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x56469adce6f8 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x56469adce6c8 <col:16, col:45> '<bound member function type>' .back 0x56469acab468
|           `-ArraySubscriptExpr 0x56469adce648 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x56469adce618 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56469adce530 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x56469adaf038
|             |   `-CXXThisExpr 0x56469adce520 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x56469adce630 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x56469adce560 <col:38> 'bool' lvalue ParmVar 0x56469adc90a0 'isout' 'bool'
|-CXXMethodDecl 0x56469adc9308 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x56469adc91f0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x56469adc9268 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x56469adc9460 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x56469adc93c8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x56469adc9708 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x56469adc9518 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x56469adc9590 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x56469adc9610 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x56469adc98e0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x56469adc97d0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x56469adc9848 <col:36> col:40 'bool'
|-CXXMethodDecl 0x56469adc9a68 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x56469adc99a8 <col:30> col:33 'int'
|-CXXMethodDecl 0x56469adc9d00 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x56469adc9b28 <col:23> col:26 'int'
| |-ParmVarDecl 0x56469adc9ba0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x56469adc9c18 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x56469adc9f18 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x56469adc9dc8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x56469adc9e40 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x56469adca128 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x56469adc9fe0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x56469adca058 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x56469adca2a8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x56469adca1e8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x56469adca4a8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x56469adca360 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x56469adca3d8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x56469adca680 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56469adca568 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x56469adca5e8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x56469adca960 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adca740 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x56469adca7b8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x56469adca838 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x56469adca8b0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x56469adcaa40 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56469adcaaa0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x56469adcad20 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x56469adcac20 parent 0x56469ac5adc0 prev 0x56469ac6a9e8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x56469adcab00 <col:36> col:39 'int'
    `-ParmVarDecl 0x56469adcab80 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector.8, %class.Vector.9, %class.Vector.9, %class.Vector.11, %class.Vector.14, %class.Vector.15, i32, %class.Vector.14, [2 x %class.Vector.14], %class.Vector.14, %class.Vector.17, %class.Vector.14, %class.Vector.9, %class.Vector.14, %class.Vector.14, %class.Vector.14, %class.Vector.14, %class.Handler**, i32, i32, %class.Vector.9, %class.Vector.19, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.14, %class.Vector.9, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector.8, %class.Vector.9, %class.Vector.9, %class.Vector.11, %class.Vector.14, %class.Vector.15, i32, %class.Vector.14, [2 x %class.Vector.14], %class.Vector.14, %class.Vector.17, %class.Vector.14, %class.Vector.9, %class.Vector.14, %class.Vector.14, %class.Vector.14, %class.Vector.14, %class.Handler**, i32, i32, %class.Vector.9, %class.Vector.19, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.14, %class.Vector.9, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac5adc0 prev 0x56469ac5ab40 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ac5aeb8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56469ac5af48 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56469ac5afa8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x56469ac5b098 <line:32:5, col:22> col:13 ~Element 'void ()' virtual noexcept-unevaluated 0x56469ac5b098
|-VarDecl 0x56469ac5b198 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56469ac5b368 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56469ac5b218 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56469ac5b290 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56469ac5b4f8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56469ac5b430 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56469ac5b5a0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56469ac5b6d8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56469ac5b610 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56469ac5b878 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56469ac5b7b8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56469ac5ba18 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56469ac5b958 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56469ac5bac0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56469ac5bbc0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56469ac5bca0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac5bba0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56469ac5bb80 <col:26> 'int' 1
| `-EnumConstantDecl 0x56469ac5bc50 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56469ac5bcb8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac5bc30 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56469ac5bc10 <col:44> 'int' 2
|-CXXMethodDecl 0x56469ac5be00 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56469ac5bce8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56469ac5bd68 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56469ac5bf58 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56469ac5bec8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56469ac5c198 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56469ac5c018 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56469ac5c090 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56469ac5c248 <col:20>
| `-OptimizeNoneAttr 0x56469ac5c2a0 <col:30>
|-CXXMethodDecl 0x56469ac5c3a8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56469ac5c2e0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56469ac5c450 <col:20>
| `-OptimizeNoneAttr 0x56469ac5c4a8 <col:30>
|-CXXMethodDecl 0x56469ac5c4f8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56469ac5c5c0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56469ac5c6d8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56469ac5c760 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56469ac5c7e8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56469ac5c870 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x56469ac5c8f8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56469ac5c988 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56469ac5ca48 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56469ac5cad0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x56469ac5cb58 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56469ac5cbe0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56469ac5cc68 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56469ac5ccf0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56469ac5cd80 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56469ac5ce40 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56469ac5ced0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56469ac5d020 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56469ac5cf88 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56469ac5d1b0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56469ac5d0e0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56469ac5d460 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56469ac5d268 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56469ac5d2e8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56469ac5d368 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56469ac5d518 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56469ac5d620 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56469ac5d8b0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac5d600 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56469ac5d5e0 <col:33> 'int' 0
| |-EnumConstantDecl 0x56469ac5d6b0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56469ac5d8c8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac5d690 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56469ac5d670 <col:32> 'int' 20
| |-EnumConstantDecl 0x56469ac5d740 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56469ac5d8e0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac5d720 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56469ac5d700 <col:38> 'int' 90
| |-EnumConstantDecl 0x56469ac5d7d0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56469ac5d8f8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac5d7b0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56469ac5d790 <col:35> 'int' 100
| `-EnumConstantDecl 0x56469ac5d860 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56469ac5d910 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac5d840 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56469ac5d820 <col:32> 'int' 2000
|-CXXMethodDecl 0x56469ac5d950 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56469ac5dd90 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56469ac5dc00 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56469ac5dc78 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac5de60 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56469ac5dfe0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56469ac5df10 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac5e1e8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56469ac5e098 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56469ac5e110 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac5e2e8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56469ac5e388 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56469ac5e450 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56469ac5e4e0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56469ac5e710 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac5e4c0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56469ac5e4a0 <col:36> 'int' EnumConstant 0x56469ac5e450 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56469ac5e530 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56469ac5e580 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56469ac5e5d0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56469ac5e620 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56469ac5e670 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56469ac5e6c0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56469ac5e7f8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56469ac5e738 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56469ac5e8c0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56469ac5e980 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56469ac5ea40 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56469ac5eb00 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56469ac5ec18 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56469ac5ece0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x56469ac5ee60 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56469ac5ed90 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56469ac5ef88 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56469ac5f188 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56469ac5f038 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56469ac5f0b8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56469ac6cad8 <col:54, line:127:5>
|   |-ParenExpr 0x56469ac6c988 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56469ac6c958 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac6c648 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56469ac6c620 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56469ac6c608 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56469ac6c5f0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56469ac6c5c0 <col:31> 'Router *' lvalue ->_router 0x56469ac6a4a0
|   |   |         `-CXXThisExpr 0x56469ac6c5b0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56469ac6c6a8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac6c688 <col:48> 'int' 0
|   |   `-CallExpr 0x56469ac6c8b8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56469ac6c8a0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac6c880 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac6c8f8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac6c718 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56469ac6c910 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac6c738 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56469ac6c928 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac6c770 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56469ac6c940 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac6c868 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac6c850 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac6c808 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56469ac6ca20 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56469ac6c9b8 <col:9> 'Router *' lvalue ->_router 0x56469ac6a4a0
|   | | `-CXXThisExpr 0x56469ac6c9a8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56469ac6ca08 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56469ac6c9e8 <col:19> 'Router *' lvalue ParmVar 0x56469ac5f038 'r' 'Router *'
|   `-BinaryOperator 0x56469ac6cab8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56469ac6ca50 <col:9> 'int' lvalue ->_eindex 0x56469ac6a508
|     | `-CXXThisExpr 0x56469ac6ca40 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56469ac6caa0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac6ca80 <col:19> 'int' lvalue ParmVar 0x56469ac5f0b8 'eindex' 'int'
|-CXXMethodDecl 0x56469ac5f310 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56469ac5f248 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56469ac5f3e0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56469ac5f4a8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56469ac5f548 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56469ac5f798 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56469ac5f610 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56469ac5f690 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56469ac5f848 <col:20>
| `-OptimizeNoneAttr 0x56469ac5f8a0 <col:30>
|-CXXMethodDecl 0x56469ac5f9a8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56469ac5f8e0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56469ac5fa50 <col:20>
| `-OptimizeNoneAttr 0x56469ac5faa8 <col:30>
|-CXXMethodDecl 0x56469ac5fb78 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56469ac5fae8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56469ac5fc20 <col:20>
| `-OptimizeNoneAttr 0x56469ac5fc78 <col:30>
|-CXXMethodDecl 0x56469ac5fe08 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56469ac5fcb0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56469ac5fd30 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56469ac5ff98 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56469ac5fed0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56469ac600e8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56469ac60058 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56469ac60238 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56469ac601a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56469ac60388 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56469ac602f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56469ac60648 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56469ac60440 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56469ac604c0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56469ac60568 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56469ac60720 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56469ac607e0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56469ac60ab0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56469ac60960 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56469ac609d8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac60bd8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56469ac60db0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56469ac60c90 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56469ac60d10 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56469ac60f98 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56469ac60e78 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56469ac60ef8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56469ac61308 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56469ac61058 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56469ac610d0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56469ac61150 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56469ac6c0c0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56469ac6c0a0 <col:106> 'int' 0
| `-ParmVarDecl 0x56469ac611c8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469ac6c0f8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469ac6c0d8 <col:126> 'int' 0
|-CXXMethodDecl 0x56469ac616a8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56469ac613d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56469ac61470 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56469ac614f0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56469ac61568 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469ac6c130 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469ac6c110 <col:114> 'int' 0
|-CXXMethodDecl 0x56469ac61a38 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56469ac61780 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56469ac617f8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56469ac61878 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56469ac6c148 <col:96> 'int' 0
| `-ParmVarDecl 0x56469ac618f0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469ac6c188 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469ac6c168 <col:116> 'int' 0
|-CXXMethodDecl 0x56469ac61db8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56469ac61b08 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56469ac61b80 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ac61c00 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56469ac6c1c0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56469ac6c1a0 <col:109> 'int' 0
| `-ParmVarDecl 0x56469ac61c78 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469ac6c1f8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469ac6c1d8 <col:129> 'int' 0
|-CXXMethodDecl 0x56469ac62138 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56469ac61e88 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56469ac61f00 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ac61f80 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56469ac61ff8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469ac6c230 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469ac6c210 <col:117> 'int' 0
|-CXXMethodDecl 0x56469ac624c8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56469ac62210 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac62288 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ac62308 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56469ac6c248 <col:99> 'int' 0
| `-ParmVarDecl 0x56469ac62380 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56469ac6c288 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56469ac6c268 <col:119> 'int' 0
|-CXXMethodDecl 0x56469ac628e8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56469ac62598 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56469ac62618 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56469ac62690 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ac62710 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56469ac6c2c0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56469ac6c2a0 <col:108> 'int' 0
| `-ParmVarDecl 0x56469ac62790 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56469ac6c2f8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56469ac6c2d8 <col:141> 'int' 0
|-CXXMethodDecl 0x56469ac62d08 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56469ac629c0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56469ac62a40 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56469ac62ab8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ac62b38 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56469ac62bb8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56469ac6c310 <col:121> 'int' 0
|-CXXMethodDecl 0x56469ac63138 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56469ac62de8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56469ac62e68 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56469ac62ee0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ac62f60 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56469ac6c330 <col:98> 'int' 0
| `-ParmVarDecl 0x56469ac62fe0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56469ac6c350 <col:123> 'int' 0
|-CXXMethodDecl 0x56469ac63400 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56469ac63210 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56469ac63290 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56469ac63310 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56469ac6c370 <col:80> 'int' 0
|-EnumDecl 0x56469ac634b8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56469ac635c0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56469ac63850 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac635a0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56469ac63580 <col:42> 'int' 1
| |-EnumConstantDecl 0x56469ac63650 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56469ac63868 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac63630 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56469ac63610 <col:40> 'int' 2
| |-EnumConstantDecl 0x56469ac636e0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56469ac63880 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac636c0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56469ac636a0 <col:44> 'int' 4
| |-EnumConstantDecl 0x56469ac63770 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56469ac63898 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac63750 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56469ac63730 <col:36> 'int' 7
| `-EnumConstantDecl 0x56469ac63800 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56469ac638b0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac637e0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56469ac637c0 <col:34> 'int' 6
|-CXXMethodDecl 0x56469ac63b68 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56469ac638d8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56469ac63978 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56469ac639f8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56469ac63a70 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56469ac6c428 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56469ac6c410 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56469ac6c3f8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56469ac6c3d8 <col:98, col:105> 'String' (CXXTemporary 0x56469ac6c3d8)
|           `-CXXTemporaryObjectExpr 0x56469ac6c3a0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56469ac63e08 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56469ac63c38 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56469ac63cb0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56469ac63d28 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56469ac6c4d8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56469ac6c4c0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56469ac6c4a8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56469ac6c488 <col:94, col:101> 'String' (CXXTemporary 0x56469ac6c488)
| |         `-CXXTemporaryObjectExpr 0x56469ac6c450 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56469ac6ccc0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56469ac6cc38 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56469ac6cc08 <col:9> '<bound member function type>' ->add_task_handlers 0x56469ac63b68
|     | `-CXXThisExpr 0x56469ac6cbf8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56469ac6cc78 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56469ac6cb78 <col:27> 'Task *' lvalue ParmVar 0x56469ac63c38 'task' 'Task *'
|     |-ImplicitCastExpr 0x56469ac6cc90 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56469ac6cb98 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56469ac63cb0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56469ac6cca8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56469ac6cbb8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56469ac63800 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56469ac6cbd8 <col:62> 'const String' lvalue ParmVar 0x56469ac63d28 'prefix' 'const String &'
|-CXXMethodDecl 0x56469ac64018 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56469ac63ed0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56469ac63f48 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56469ac6c588 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56469ac6c570 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56469ac6c558 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56469ac6c538 <col:70, col:77> 'String' (CXXTemporary 0x56469ac6c538)
| |         `-CXXTemporaryObjectExpr 0x56469ac6c500 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56469ac6ce98 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56469ac6ce10 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56469ac6cde0 <col:9> '<bound member function type>' ->add_task_handlers 0x56469ac63b68
|     | `-CXXThisExpr 0x56469ac6cdd0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56469ac6ce50 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56469ac6cd50 <col:27> 'Task *' lvalue ParmVar 0x56469ac63ed0 'task' 'Task *'
|     |-ImplicitCastExpr 0x56469ac6ce68 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56469ac6cd70 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56469ac6ce80 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56469ac6cd90 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56469ac63800 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56469ac6cdb0 <col:57> 'const String' lvalue ParmVar 0x56469ac63f48 'prefix' 'const String &'
|-CXXMethodDecl 0x56469ac642f8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56469ac640e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac64160 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac641d8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56469ac645a8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56469ac643c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac64448 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac644c8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56469ac64898 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56469ac64678 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac646f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac64770 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56469ac64b48 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56469ac64968 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac649e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac64a68 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56469ac64df8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56469ac64c18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac64c98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac64d18 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56469ac650a8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56469ac64ec8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac64f48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac64fc0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56469ac65358 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56469ac65178 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac651f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac65278 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56469ac65668 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56469ac65480 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac65500 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac65580 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56469ac65948 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56469ac65738 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac657b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac65860 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56469ac65c28 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56469ac65a18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac65a98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac65b40 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56469ac65e90 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56469ac65cf8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56469ac65d78 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56469ac65df0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56469ac66138 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56469ac65f60 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56469ac65fe0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56469ac66058 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56469ac663e8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56469ac66208 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac66288 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac66308 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56469ac66698 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56469ac664b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac66538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac665b0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56469ac66948 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56469ac66768 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac667e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac66860 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56469ac66c18 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56469ac66a18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac66a98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56469ac66b38 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56469ac66f48 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56469ac66ce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56469ac66d68 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56469ac66de0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56469ac66e58 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469ac6c5a0 <col:93> 'bool' false
|-CXXMethodDecl 0x56469ac67130 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56469ac67018 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56469ac67098 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56469ac67308 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56469ac671f0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56469ac67270 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56469ac675e8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469ac673c8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56469ac67440 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56469ac674c0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56469ac67538 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac678d8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469ac676b8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56469ac67730 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56469ac677b0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56469ac67828 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac67b10 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56469ac679b0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56469ac67a30 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56469ac67cf8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56469ac67bd8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56469ac67c58 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56469ac67da8 prev 0x56469ac5f548 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469ac67ea0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56469ac67f30 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56469ac67fa8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56469ac68068 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56469ac68130 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56469ac682a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56469ac681e0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56469ac68350 <col:24>
| | `-OptimizeNoneAttr 0x56469ac683a8 <col:34>
| |-CXXMethodDecl 0x56469ac683f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56469ac686a8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56469ac684a0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56469ac68518 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56469ac68598 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56469ac68760 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56469ac68798 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56469ac68800 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56469ac68888 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56469ac68ba8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56469ac68940 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56469ac689b8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56469ac68a30 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56469ac68ab0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56469ac68cc0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56469ac70638 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56469ac70638
| | `-ParmVarDecl 0x56469ac70748 <col:11> col:11 'const Element::Port &'
| `-CXXConstructorDecl 0x56469ac707e8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56469ac707e8
|   `-ParmVarDecl 0x56469ac708f8 <col:11> col:11 'Element::Port &&'
|-CXXMethodDecl 0x56469ac68d38 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56469ac68dd8 <col:38> "" ""
|-CXXMethodDecl 0x56469ac68e68 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56469ac68f08 <col:44> "" ""
|-AccessSpecDecl 0x56469ac68f78 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56469ac68fa0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56469ac690a0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56469ac690f0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac69080 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56469ac69060 <col:27> 'int' 4
|-FieldDecl 0x56469ac691a8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56469ac69358 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56469ac69410 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56469ac6a4a0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56469ac6a508 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56469ac6a658 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56469ac6a598 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56469ac6a808 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56469ac6a718 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56469ac6a9e8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56469ac6a8c8 <col:20> col:23 'int'
| `-ParmVarDecl 0x56469ac6a948 <col:25> col:28 'int'
|-CXXMethodDecl 0x56469ac6ac90 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56469ac6aab0 <col:23> col:26 'int'
| |-ParmVarDecl 0x56469ac6ab30 <col:28> col:31 'int'
| `-ParmVarDecl 0x56469ac6aba8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56469ac6ad48 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56469ac6ae10 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56469ac6ae60 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56469ac6aeb0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56469ac6b090 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56469ac6af40 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56469ac6afb8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac6b338 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56469ac6b158 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56469ac6b1d8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56469ac6b250 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56469ac6b558 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56469ac6b408 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56469ac6b488 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56469ac6b890 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56469ac6b618 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56469ac6b698 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56469ac6b710 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56469ac6b790 <col:57> col:60 'int'
|-CXXMethodDecl 0x56469ac6ba78 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56469ac6b960 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56469ac6b9e0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56469ac6bbc8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56469ac6bb38 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56469ac6bf48 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56469ac6bc88 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56469ac6bd08 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56469ac6bd80 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56469ac6be00 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56469ac6c060 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad060b8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56469ad061e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x56469ad06248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x56469ad062a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x56469ad78ad8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x56469ad78bb0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56469ad78bb0
|-CXXConstructorDecl 0x56469ad78e68 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56469ad78e68
| `-ParmVarDecl 0x56469ad78f78 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x56469ad79018 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56469ad79018
  `-ParmVarDecl 0x56469ad79128 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad05f10 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56469ad06028 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x56469ad060b8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56469ad061e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x56469ad06248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x56469ad062a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x56469ad78ad8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x56469ad78bb0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56469ad78bb0
| |-CXXConstructorDecl 0x56469ad78e68 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56469ad78e68
| | `-ParmVarDecl 0x56469ad78f78 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x56469ad79018 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56469ad79018
|   `-ParmVarDecl 0x56469ad79128 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x56469ad06368 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x56469ad063c8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x56469ad06368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56469ad061e8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x56469ad06420 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x56469ad06368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56469ad06248 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x56469ad06478 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x56469ad06368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56469ad062a8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x56469ad064d0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56469ad789e8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56469ad79348 <col:11>
|-CXXConstructorDecl 0x56469ad78cb8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56469ad78cb8
| `-ParmVarDecl 0x56469ad78dc8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x56469ad791c8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56469ad791c8
  `-ParmVarDecl 0x56469ad792d8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ad03b70 prev 0x56469ac5a930 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x56469ad03ca8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x56469ad03d38 <col:33, col:39> col:33 public
|-EnumDecl 0x56469ad03d60 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x56469ad03ea0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x56469ad03e80 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x56469ad03e60 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56469ad03e20 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x56469ad03e40 <col:26> 'int' 16
| `-EnumConstantDecl 0x56469ad03f70 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x56469ad03f50 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x56469ad03f30 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x56469ad03ef0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x56469ad03f10 <col:47> 'int' 31
|-EnumDecl 0x56469ad03fc0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x56469ad04100 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x56469ad04220 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ad040e0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x56469ad040c0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x56469ad04080 <col:26> 'int' 1
| |       `-IntegerLiteral 0x56469ad040a0 <col:29> 'int' 15
| `-EnumConstantDecl 0x56469ad041d0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x56469ad04238 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ad041b0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x56469ad04190 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x56469ad04150 <col:51> 'int' 1
|         `-IntegerLiteral 0x56469ad04170 <col:54> 'int' 10
|-CXXConstructorDecl 0x56469ad04408 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x56469ad04260 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x56469ad042e0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x56469ad04560 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x56469ad044d0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x56469ad04658 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x56469ad04658
|-CXXMethodDecl 0x56469ad047e8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x56469ad099d8 <col:42, line:100:5>
|   `-ReturnStmt 0x56469ad099c8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x56469ad099b0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x56469ad09980 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x56469ad06610
|         `-CXXThisExpr 0x56469ad09970 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56469ad048b0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x56469ad09a58 <col:36, line:105:5>
|   `-ReturnStmt 0x56469ad09a48 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x56469ad09a30 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56469ad09a00 <col:16> 'void *const' lvalue ->_thunk 0x56469ad06678
|         `-CXXThisExpr 0x56469ad099f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56469ad04970 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x56469ad09ad8 <col:37, line:110:5>
|   `-ReturnStmt 0x56469ad09ac8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x56469ad09ab0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56469ad09a80 <col:16> 'Element *const' lvalue ->_owner 0x56469ad06738
|         `-CXXThisExpr 0x56469ad09a70 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56469ad04a30 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x56469ad04af8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x56469ad04bb8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x56469ad04c78 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x56469ad09bc0 <col:35, line:137:5>
|   `-ReturnStmt 0x56469ad09bb0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x56469ad09b78 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x56469ad09b48 <col:16, col:24> '<bound member function type>' ->router 0x56469ac6d140
|         `-ImplicitCastExpr 0x56469ad09b98 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56469ad09b30 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56469ad09b00 <col:16> 'Element *const' lvalue ->_owner 0x56469ad06738
|               `-CXXThisExpr 0x56469ad09af0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56469ad04d38 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x56469ad04ef8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56469ad04de8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56469ad04e60 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56469ad05108 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x56469ad04fb8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x56469ad05030 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56469ad051d8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x56469ad09cd0 <col:35, line:181:5>
|   `-ReturnStmt 0x56469ad09cc0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x56469ad09ca8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x56469ad09c90 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x56469ad09c60 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x56469ad06248
|           `-MemberExpr 0x56469ad09c18 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56469ad06368
|             `-MemberExpr 0x56469ad09be8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x56469ad06598
|               `-CXXThisExpr 0x56469ad09bd8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56469ad05298 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x56469ad09de8 <col:30, line:192:5>
|   `-BinaryOperator 0x56469ad09dc8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56469ad09d70 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56469ad06248
|     | `-MemberExpr 0x56469ad09d28 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56469ad06368
|     |   `-MemberExpr 0x56469ad09cf8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56469ad06598
|     |     `-CXXThisExpr 0x56469ad09ce8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56469ad09db0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56469ad09da0 <col:32> 'bool' false
|-CXXMethodDecl 0x56469ad05358 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x56469ad0a138 <col:30, line:206:5>
|   |-BinaryOperator 0x56469ad09ee0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56469ad09e88 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56469ad06248
|   | | `-MemberExpr 0x56469ad09e40 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56469ad06368
|   | |   `-MemberExpr 0x56469ad09e10 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56469ad06598
|   | |     `-CXXThisExpr 0x56469ad09e00 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56469ad09ec8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56469ad09eb8 <col:32> 'bool' true
|   |-CallExpr 0x56469ad09f80 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x56469ad09f68 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56469ad09f48 <col:9> 'void ()' lvalue Function 0x56469ac73af0 'click_fence' 'void ()'
|   `-IfStmt 0x56469ad0a120 <line:204:9, line:205:32>
|     |-BinaryOperator 0x56469ad0a060 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x56469ad0a030 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x56469ad09fe0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x56469ad069a8
|     | |   `-MemberExpr 0x56469ad09fb0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x56469ad06a20
|     | |     `-CXXThisExpr 0x56469ad09fa0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x56469ad0a048 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x56469ad0a010 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x56469ad0a0e0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x56469ad0a090 <col:13> '<bound member function type>' ->complete_schedule 0x56469ad09510
|       | `-CXXThisExpr 0x56469ad0a080 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x56469ad0a108 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x56469ad0a0c0 <col:31> 'int' 0
|-CXXMethodDecl 0x56469ad05418 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x56469ad0a260 <col:35, line:240:5>
|   `-BinaryOperator 0x56469ad0a240 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56469ad0a1e8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56469ad06248
|     | `-MemberExpr 0x56469ad0a1a0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56469ad06368
|     |   `-MemberExpr 0x56469ad0a170 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56469ad06598
|     |     `-CXXThisExpr 0x56469ad0a160 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56469ad0a228 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56469ad0a218 <col:32> 'bool' true
|-CXXMethodDecl 0x56469ad054d8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x56469ad0a478 <col:37, line:253:5>
|   |-BinaryOperator 0x56469ad0a358 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56469ad0a300 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56469ad06248
|   | | `-MemberExpr 0x56469ad0a2b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56469ad06368
|   | |   `-MemberExpr 0x56469ad0a288 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56469ad06598
|   | |     `-CXXThisExpr 0x56469ad0a278 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56469ad0a340 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56469ad0a330 <col:32> 'bool' false
|   `-BinaryOperator 0x56469ad0a458 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56469ad0a400 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56469ad062a8
|     | `-MemberExpr 0x56469ad0a3b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56469ad06368
|     |   `-MemberExpr 0x56469ad0a388 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56469ad06598
|     |     `-CXXThisExpr 0x56469ad0a378 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56469ad0a440 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56469ad0a430 <col:41> 'bool' true
|-CXXMethodDecl 0x56469ad05598 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x56469ad0a5f8 <col:37, line:264:5>
|   |-BinaryOperator 0x56469ad0a578 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56469ad0a520 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56469ad062a8
|   | | `-MemberExpr 0x56469ad0a4d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56469ad06368
|   | |   `-MemberExpr 0x56469ad0a4a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56469ad06598
|   | |     `-CXXThisExpr 0x56469ad0a498 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56469ad0a560 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56469ad0a550 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x56469ad0a5d8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x56469ad0a5a8 <col:9> '<bound member function type>' ->reschedule 0x56469ad05358
|       `-CXXThisExpr 0x56469ad0a598 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x56469ad056e0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x56469ad05650 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x56469ad057b0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x56469ad058f8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x56469ad05868 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x56469ad05a48 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x56469ad059b8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x56469ad05b10 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x56469ad05bd0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x56469ad05c70 <col:53> "" ""
|-CXXMethodDecl 0x56469ad05d08 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x56469ad05da8 <col:47> "" ""
|-AccessSpecDecl 0x56469ad05e18 <line:303:3, col:10> col:3 private
|-FieldDecl 0x56469ad05e58 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x56469ad05ec0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x56469ad05f10 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469ad06028 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x56469ad060b8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x56469ad061e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x56469ad06248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x56469ad062a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x56469ad78ad8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x56469ad78bb0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56469ad78bb0
| | |-CXXConstructorDecl 0x56469ad78e68 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56469ad78e68
| | | `-ParmVarDecl 0x56469ad78f78 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x56469ad79018 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56469ad79018
| |   `-ParmVarDecl 0x56469ad79128 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x56469ad06368 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x56469ad063c8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x56469ad06368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56469ad061e8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x56469ad06420 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x56469ad06368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56469ad06248 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x56469ad06478 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x56469ad06368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56469ad062a8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x56469ad064d0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x56469ad789e8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56469ad79348 <col:11>
| |-CXXConstructorDecl 0x56469ad78cb8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56469ad78cb8
| | `-ParmVarDecl 0x56469ad78dc8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x56469ad791c8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56469ad791c8
|   `-ParmVarDecl 0x56469ad792d8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x56469ad06598 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x56469ad06610 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x56469ad06678 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56469ad066d8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x56469ad06738 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x56469ad06788 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56469ad068a8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x56469ad06948 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x56469ad069a8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x56469ad6d8a8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56469ad6d8a8
| | `-ParmVarDecl 0x56469ad6d9b8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x56469ad6da58 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56469ad6da58
| | `-ParmVarDecl 0x56469ad6db68 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x56469ad6dbd8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x56469ad6dbd8
| |-CXXMethodDecl 0x56469ad6e458 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56469ad6e458
| | `-ParmVarDecl 0x56469ad6e568 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x56469ad6e5d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56469ad6e5d8
| | `-ParmVarDecl 0x56469ad6e6e8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x56469ad793a8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56469ad79480 <col:11>
|-FieldDecl 0x56469ad06a20 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x56469ad06b68 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x56469ad06aa8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x56469ad06d18 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x56469ad06c28 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x56469ad08ed0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x56469ad08f90 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x56469ad09050 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x56469ad0a708 <col:41, line:355:5>
|   `-ReturnStmt 0x56469ad0a6f8 <line:354:9, col:38>
|     `-BinaryOperator 0x56469ad0a6d8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x56469ad0a6a8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x56469ad0a658 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x56469ad069a8
|       |   `-MemberExpr 0x56469ad0a628 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x56469ad06a20
|       |     `-CXXThisExpr 0x56469ad0a618 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x56469ad0a6c0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56469ad0a688 <col:38> 'int' 0
|-CXXMethodDecl 0x56469ad09110 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x56469ad09250 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x56469ad091c0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x56469ad093c8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x56469ad09308 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x56469ad09510 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x56469ad09480 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x56469ad095d8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x56469ad097a0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x56469ad09688 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x56469ad09708 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x56469ad098a0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x56469ad09930 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Script
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Vector<int> _insns
       112 |     class vector_memory<class sized_array_memory<4> > vm_
       112 |       vector_memory<class sized_array_memory<4> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   class Vector<int> _args
       128 |     class vector_memory<class sized_array_memory<4> > vm_
       128 |       vector_memory<class sized_array_memory<4> >::type * l_
       136 |       vector_memory::size_type n_
       140 |       vector_memory::size_type capacity_
       144 |   class Vector<int> _args2
       144 |     class vector_memory<class sized_array_memory<4> > vm_
       144 |       vector_memory<class sized_array_memory<4> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class Vector<class String> _args3
       160 |     class vector_memory<class typed_array_memory<class String> > vm_
       160 |       vector_memory<class typed_array_memory<class String> >::type * l_
       168 |       vector_memory::size_type n_
       172 |       vector_memory::size_type capacity_
       176 |   class Vector<class String> _vars
       176 |     class vector_memory<class typed_array_memory<class String> > vm_
       176 |       vector_memory<class typed_array_memory<class String> >::type * l_
       184 |       vector_memory::size_type n_
       188 |       vector_memory::size_type capacity_
       192 |   class String _run_handler_name
       192 |     struct String::rep_t _r
       192 |       const char * data
       200 |       int length
       208 |       struct String::memo_t * memo
       216 |   class String _run_args
       216 |     struct String::rep_t _r
       216 |       const char * data
       224 |       int length
       232 |       struct String::memo_t * memo
       240 |   int _run_op
       244 |   int _insn_pos
       248 |   int _step_count
       252 |   int _type
       256 |   int _write_status
       264 |   class Vector<int> _signos
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Timer _timer
       280 |     int _schedpos1
       288 |     class Timestamp _expiry_s
       288 |       union Timestamp::rep_t _t
       288 |         int64_t x
       296 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       296 |       TimerCallback callback
       304 |     void * _thunk
       312 |     class Element * _owner
       320 |     class RouterThread * _thread
       328 |   int * _cur_steps
           | [sizeof=336, dsize=336, align=8,
           |  nvsize=336, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac8dd68 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56469ac8de98 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x56469ac8e988 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.20 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac78598 prev 0x56469ac5a9e0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ac78690 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x56469ac78720 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x56469ac78780 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x56469ac78828 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56469ac78948 <col:5, col:12> col:12 implicit struct do_nothing_t
| |-CXXConstructorDecl 0x56469aeb7238 <col:12> col:12 implicit constexpr do_nothing_t 'void ()' inline default trivial noexcept-unevaluated 0x56469aeb7238
| |-CXXConstructorDecl 0x56469aeb7310 <col:12> col:12 implicit constexpr do_nothing_t 'void (const Timer::do_nothing_t &)' inline default trivial noexcept-unevaluated 0x56469aeb7310
| | `-ParmVarDecl 0x56469aeb73f8 <col:12> col:12 'const Timer::do_nothing_t &'
| `-CXXConstructorDecl 0x56469aeb7498 <col:12> col:12 implicit constexpr do_nothing_t 'void (Timer::do_nothing_t &&)' inline default trivial noexcept-unevaluated 0x56469aeb7498
|   `-ParmVarDecl 0x56469aeb75a8 <col:12> col:12 'Timer::do_nothing_t &&'
|-CXXConstructorDecl 0x56469ac78ae8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x56469ac78a28 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x56469ac78d38 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x56469ac78ba8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x56469ac78c28 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x56469ac78ec8 <line:43:5, col:27> col:5 used Timer 'void (Element *)'
| `-ParmVarDecl 0x56469ac78e00 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x56469ac79048 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x56469ac78f88 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x56469ac791f8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x56469ac79138 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x56469ac792f0 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x56469ac8eb60 <col:21, line:58:5>
|   `-IfStmt 0x56469ac8eb48 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x56469ac8eab0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x56469ac8ea80 <col:6> '<bound member function type>' ->scheduled 0x56469ac79b48
|     |   `-ImplicitCastExpr 0x56469ac8ead0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x56469ac8ea70 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x56469ac8eb28 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x56469ac8eaf8 <col:6> '<bound member function type>' ->unschedule 0x56469ac8d210
|         `-CXXThisExpr 0x56469ac8eae8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x56469ac793f0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x56469ac8ed00 <col:26, line:65:5>
|   |-BinaryOperator 0x56469ac8ec20 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56469ac8ebb8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56469ac8de98
|   | | `-MemberExpr 0x56469ac8eb88 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56469ac8df58
|   | |   `-CXXThisExpr 0x56469ac8eb78 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56469ac8ec08 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56469ac8ebe8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56469ac8e3b8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56469ac8ece0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x56469ac8ec50 <col:2> 'void *' lvalue ->_thunk 0x56469ac8dfd8
|     | `-CXXThisExpr 0x56469ac8ec40 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x56469ac8ecb8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x56469ac8ec80 <col:20> 'int' 1
|-CXXMethodDecl 0x56469ac79530 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x56469ac794a0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x56469ac8ee60 <col:52, line:71:5>
|   |-CStyleCastExpr 0x56469ac8ed50 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56469ac8ed20 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x56469ac794a0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x56469ac8ee40 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x56469ac8ee10 <col:2> '<bound member function type>' ->assign 0x56469ac793f0
|       `-CXXThisExpr 0x56469ac8ee00 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x56469ac79700 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x56469ac795e8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x56469ac79668 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x56469ac8efe0 <col:58, line:79:5>
|   |-BinaryOperator 0x56469ac8ef28 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56469ac8eec0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56469ac8de98
|   | | `-MemberExpr 0x56469ac8ee90 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56469ac8df58
|   | |   `-CXXThisExpr 0x56469ac8ee80 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56469ac8ef10 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x56469ac8eef0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x56469ac795e8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x56469ac8efc0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56469ac8ef58 <col:2> 'void *' lvalue ->_thunk 0x56469ac8dfd8
|     | `-CXXThisExpr 0x56469ac8ef48 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56469ac8efa8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac8ef88 <col:11> 'void *' lvalue ParmVar 0x56469ac79668 'user_data' 'void *'
|-CXXMethodDecl 0x56469ac79850 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x56469ac797c0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x56469ac8f178 <col:35, line:87:5>
|   |-BinaryOperator 0x56469ac8f0a8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56469ac8f040 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56469ac8de98
|   | | `-MemberExpr 0x56469ac8f010 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56469ac8df58
|   | |   `-CXXThisExpr 0x56469ac8f000 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56469ac8f090 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56469ac8f070 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56469ac8e590 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56469ac8f158 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56469ac8f0d8 <col:2> 'void *' lvalue ->_thunk 0x56469ac8dfd8
|     | `-CXXThisExpr 0x56469ac8f0c8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56469ac8f140 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56469ac8f128 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x56469ac8f108 <col:11> 'Element *' lvalue ParmVar 0x56469ac797c0 'element' 'Element *'
|-CXXMethodDecl 0x56469ac79998 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x56469ac79908 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x56469ac8f310 <col:29, line:94:5>
|   |-BinaryOperator 0x56469ac8f240 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56469ac8f1d8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56469ac8de98
|   | | `-MemberExpr 0x56469ac8f1a8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56469ac8df58
|   | |   `-CXXThisExpr 0x56469ac8f198 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56469ac8f228 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56469ac8f208 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56469ac8e768 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56469ac8f2f0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56469ac8f270 <col:2> 'void *' lvalue ->_thunk 0x56469ac8dfd8
|     | `-CXXThisExpr 0x56469ac8f260 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56469ac8f2d8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56469ac8f2c0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x56469ac8f2a0 <col:11> 'Task *' lvalue ParmVar 0x56469ac79908 'task' 'Task *'
|-CXXMethodDecl 0x56469ac79a88 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x56469ac8f3f0 <col:37, line:100:5>
|   `-ReturnStmt 0x56469ac8f3e0 <line:99:2, col:19>
|     `-BinaryOperator 0x56469ac8f3c0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x56469ac8f390 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x56469ac8f340 <col:9> 'Element *const' lvalue ->_owner 0x56469ac8e038
|       |   `-CXXThisExpr 0x56469ac8f330 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x56469ac8f3a8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x56469ac8f370 <col:19> 'int' 0
|-CXXMethodDecl 0x56469ac79b48 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x56469ac8f4b0 <col:35, line:105:5>
|   `-ReturnStmt 0x56469ac8f4a0 <line:104:2, col:23>
|     `-BinaryOperator 0x56469ac8f480 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x56469ac8f468 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x56469ac8f418 <col:9> 'const int' lvalue ->_schedpos1 0x56469ac8dcb8
|       |   `-CXXThisExpr 0x56469ac8f408 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x56469ac8f448 <col:23> 'int' 0
|-CXXMethodDecl 0x56469ac79c08 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x56469ac8f518 <col:51, line:118:5>
|   `-ReturnStmt 0x56469ac8f508 <line:117:2, col:9>
|     `-MemberExpr 0x56469ac8f4d8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|       `-CXXThisExpr 0x56469ac8f4c8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56469ac79cc8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x56469ac8fa70 <col:37, line:136:5>
|   `-IfStmt 0x56469ac8fa48 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x56469ac8f5d8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x56469ac8f5c0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x56469ac8f5a0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x56469ac8f570 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x56469abecab8
|     |       `-MemberExpr 0x56469ac8f540 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|     |         `-CXXThisExpr 0x56469ac8f530 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x56469ac8f9b8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x56469ac8f9a0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x56469ac8f970 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x56469ac8f958 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x56469ac8f920 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x56469ac8f908 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x56469ac8f8e8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56469ac1b290 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x56469ac8f888 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x56469ac8f870 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x56469ac8f798 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x56469ac8f780 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x56469ac8f760 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56469ac1af50 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x56469ac8f700 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x56469ac8f600 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|     |         |     |   `-CXXThisExpr 0x56469ac8f5f0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x56469ac8f748 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x56469ac8f730 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x56469ac8f6e0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x56469ac8f6c8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x56469ac8f668 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x56469ac0e5b0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x56469ac8f8d0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x56469ac8f8b8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x56469ac8f850 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x56469ac8f838 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x56469ac8f808 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x56469aa69b00 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x56469ac8fa38 <line:135:6, col:13>
|       `-CXXConstructExpr 0x56469ac8fa08 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x56469ac8f9d8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|           `-CXXThisExpr 0x56469ac8f9c8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x56469ac79d88 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x56469ac8fb58 <col:35, line:141:5>
|   `-ReturnStmt 0x56469ac8fb48 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x56469ac8fb10 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x56469ac8fae0 <col:9, col:17> '<bound member function type>' ->router 0x56469ac6d140
|         `-ImplicitCastExpr 0x56469ac8fb30 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56469ac8fac8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56469ac8fa98 <col:9> 'Element *const' lvalue ->_owner 0x56469ac8e038
|               `-CXXThisExpr 0x56469ac8fa88 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56469ac79e48 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x56469ac8fbd8 <col:37, line:146:5>
|   `-ReturnStmt 0x56469ac8fbc8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x56469ac8fbb0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56469ac8fb80 <col:9> 'Element *const' lvalue ->_owner 0x56469ac8e038
|         `-CXXThisExpr 0x56469ac8fb70 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56469ac79f08 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x56469ac8fc58 <col:41, line:151:5>
|   `-ReturnStmt 0x56469ac8fc48 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x56469ac8fc30 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x56469ac8fc00 <col:9> 'RouterThread *const' lvalue ->_thread 0x56469ac8e098
|         `-CXXThisExpr 0x56469ac8fbf0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56469ac79fd0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x56469ac7a1c8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56469ac7a080 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56469ac7a0f8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469ac8e978 <col:50> 'bool' false
|-CXXMethodDecl 0x56469ac7a348 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x56469ac7a288 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x56469ac8c500 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56469ac7a400 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56469ac8c648 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56469ac8c5b8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56469ac8c790 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56469ac8c700 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x56469ac8c8d8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56469ac8c848 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x56469ac8c9a0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x56469ac8fdc0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x56469ac8fda8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x56469ac8fd50 <col:2, col:47> 'void'
|       |-MemberExpr 0x56469ac8fc80 <col:2> '<bound member function type>' ->schedule_at_steady 0x56469ac8c500
|       | `-CXXThisExpr 0x56469ac8fc70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56469ac8fd90 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56469ac8fd78 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56469ac8fd30 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x56469ac8fd18 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x56469ac8fce8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x56469aa69b00 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x56469ac8cae0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x56469ac8ca50 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x56469ac8cc28 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56469ac8cb98 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac8ff48 <col:56, line:241:5>
|   `-ExprWithCleanups 0x56469ac8ff30 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x56469ac8fed8 <col:2, col:40> 'void'
|       |-MemberExpr 0x56469ac8fde8 <col:2> '<bound member function type>' ->schedule_after 0x56469ac8cae0
|       | `-CXXThisExpr 0x56469ac8fdd8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56469ac8ff18 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56469ac8ff00 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56469ac8fe98 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x56469ac8fe68 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x56469ac8fe28 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469ac8cb98 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x56469ac8fe80 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56469ac8fe48 <col:38> 'int' 0
|-CXXMethodDecl 0x56469ac8cd70 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56469ac8cce0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac901b8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x56469ac901a0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x56469ac90148 <col:2, col:49> 'void'
|       |-MemberExpr 0x56469ac8ff70 <col:2> '<bound member function type>' ->schedule_after 0x56469ac8cae0
|       | `-CXXThisExpr 0x56469ac8ff60 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56469ac90188 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56469ac90170 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56469ac900f0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x56469ac900d8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56469ac90048 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56469abee8a8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56469ac90130 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x56469ac90118 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56469ac90028 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469ac8cce0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac8ceb8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x56469ac8ce28 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x56469ac90398 <col:58, line:261:5>
|   `-ExprWithCleanups 0x56469ac90380 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x56469ac90328 <col:2, col:38> 'void'
|       |-MemberExpr 0x56469ac901e0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56469ac8c500
|       | `-CXXThisExpr 0x56469ac901d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56469ac90368 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56469ac90350 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56469ac902f0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56469ac902d8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56469ac902b8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56469ac1af50 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56469ac90288 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56469ac90270 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56469ac90220 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|             |     `-CXXThisExpr 0x56469ac90210 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x56469ac90250 <col:33> 'const Timestamp' lvalue ParmVar 0x56469ac8ce28 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x56469ac8d000 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56469ac8cf70 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac90670 <col:58, line:270:5>
|   `-ExprWithCleanups 0x56469ac90658 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x56469ac90600 <col:2, col:79> 'void'
|       |-MemberExpr 0x56469ac903c0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56469ac8c500
|       | `-CXXThisExpr 0x56469ac903b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56469ac90640 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56469ac90628 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56469ac905c0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x56469ac904f8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x56469ac904e0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x56469ac90470 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x56469ac90440 <col:31, col:41> '<bound member function type>' .sec 0x56469aa6b5f8
|             | |     `-ImplicitCastExpr 0x56469ac90490 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x56469ac90410 <col:31> 'Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|             | |         `-CXXThisExpr 0x56469ac90400 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x56469ac904c8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x56469ac904a8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469ac8cf70 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x56469ac90588 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x56469ac90558 <col:60, col:70> '<bound member function type>' .subsec 0x56469aa6bcf0
|                 `-ImplicitCastExpr 0x56469ac905a8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x56469ac90528 <col:60> 'Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|                     `-CXXThisExpr 0x56469ac90518 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x56469ac8d148 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56469ac8d0b8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56469ac909a8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x56469ac90990 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x56469ac90938 <col:2, col:65> 'void'
|       |-MemberExpr 0x56469ac90698 <col:2> '<bound member function type>' ->schedule_at_steady 0x56469ac8c500
|       | `-CXXThisExpr 0x56469ac90688 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56469ac90978 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56469ac90960 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56469ac90900 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x56469ac908e8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56469ac908c8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56469ac1af50 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56469ac90868 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56469ac90850 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56469ac906d8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|             |     `-CXXThisExpr 0x56469ac906c8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x56469ac908b0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x56469ac90898 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x56469ac907f8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x56469ac907e0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x56469ac907b0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56469abee8a8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x56469ac90838 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x56469ac90820 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x56469ac90790 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x56469ac8d0b8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac8d210 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x56469ac8d2d0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x56469ac90e70 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x56469ac90a00 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x56469ac909d0 <col:2> '<bound member function type>' ->unschedule 0x56469ac8d210
|   |   `-CXXThisExpr 0x56469ac909c0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x56469ac90e58 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x56469ac90e20 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x56469ac90e08 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469ac90ab8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56469a902978 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x56469ac90a30 <col:2> 'Timestamp' lvalue ->_expiry_s 0x56469ac8dd18
|       | `-CXXThisExpr 0x56469ac90a20 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56469ac90aa0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x56469ac90a70 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56469ac8d390 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x56469ac911c8 <col:42, line:310:5>
|   |-IfStmt 0x56469ac91010 <line:306:2, line:307:23>
|   | |-CallExpr 0x56469ac90f40 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x56469ac90f28 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x56469ac90ec8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x56469ac0ca20 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x56469ac91000 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x56469ac90fe8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x56469ac90fb8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56469ac90fa0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x56469ac90f70 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x56469ac911b8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x56469ac911a0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x56469ac91170 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56469ac91158 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x56469ac91118 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56469ac91100 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56469ac910d0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56469abeebc0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56469ac91140 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x56469ac910b0 <col:30> 'int' 500
|-CXXMethodDecl 0x56469ac8d4d0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56469ac8d440 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469ac8d578 <col:69> "" ""
|-CXXMethodDecl 0x56469ac8d688 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56469ac8d5f8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469ac8d730 <col:70> "" ""
|-CXXMethodDecl 0x56469ac8d840 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56469ac8d7b0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469ac8d8e8 <col:71> "" ""
|-CXXMethodDecl 0x56469ac8d9f8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56469ac8d968 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469ac8daa0 <col:72> "" ""
|-EnumDecl 0x56469ac8db10 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x56469ac8dc10 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x56469ac8dc60 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac8dbf0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x56469ac8dbd0 <col:25> 'int' 1
|-AccessSpecDecl 0x56469ac8dc78 <line:339:3, col:10> col:3 private
|-FieldDecl 0x56469ac8dcb8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x56469ac8dd18 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x56469ac8dd68 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56469ac8de98 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x56469ac8e988 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x56469ac8df58 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x56469ac8dfd8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56469ac8e038 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x56469ac8e098 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x56469ac8e1e8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x56469ac8e0f8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x56469ac8e3b8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56469ac8e2a0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x56469ac8e320 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x56469ac8e590 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56469ac8e478 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x56469ac8e4f8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x56469ac8e768 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56469ac8e650 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x56469ac8e6d0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x56469ac8e938 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469aca0418 <../elements/standard/script.hh:444:1, line:549:1> line:444:7 class Script definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56469aca0578 <col:1, col:7> col:7 implicit referenced class Script
|-AccessSpecDecl 0x56469aca0608 <col:33, col:39> col:33 public
|-CXXConstructorDecl 0x56469aca0690 <line:446:5, col:12> col:5 Script 'void ()'
|-CXXMethodDecl 0x56469aca0758 <line:448:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x56469aca0818 <line:449:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56469aca0910 <line:451:5, col:55> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56469ac5c4f8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56469acb7448 <col:36, col:55>
|   `-ReturnStmt 0x56469acb7438 <col:38, col:45>
|     `-ImplicitCastExpr 0x56469acb7420 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56469acb7400 <col:45> 'const char [7]' lvalue "Script"
|-CXXMethodDecl 0x56469aca09d8 <line:452:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x56469ac5c5c0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56469acb74a8 <col:36, col:52>
|   `-ReturnStmt 0x56469acb7498 <col:38, col:45>
|     `-ImplicitCastExpr 0x56469acb7480 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56469acb7460 <col:45> 'const char [4]' lvalue "-/-"
|-CXXMethodDecl 0x56469aca0aa0 <line:453:5, col:54> col:17 processing 'const char *() const'
| |-Overrides: [ 0x56469ac5c988 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x56469acb7508 <col:36, col:54>
|   `-ReturnStmt 0x56469acb74f8 <col:38, col:45>
|     `-ImplicitCastExpr 0x56469acb74e0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56469acb74c0 <col:45> 'const char [6]' lvalue "ah/ah"
|-CXXMethodDecl 0x56469aca0d70 <line:454:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56469ac5dd90 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56469aca0c20 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x56469aca0c98 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x56469aca0ec8 <line:455:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x56469ac5dfe0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x56469aca0e30 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x56469aca0f90 <line:456:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x56469ac5de60 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x56469aca1158 <line:458:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x56469ac5b368 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56469aca1048 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x56469aca10c0 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x56469aca12b0 <line:459:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x56469ac5b4f8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x56469aca1220 <col:18, col:22> col:22 port 'int'
|-CXXMethodDecl 0x56469aca13f8 <line:460:5, col:27> col:10 run_timer 'void (Timer *)'
| |-Overrides: [ 0x56469ac5ba18 Element::run_timer 'void (Timer *)' ]
| `-ParmVarDecl 0x56469aca1368 <col:20, col:26> col:27 'Timer *'
|-EnumDecl 0x56469aca14a0 <line:462:5, line:475:5> line:462:10 Insn
| |-EnumConstantDecl 0x56469aca1560 <line:463:9> col:9 INSN_INITIAL 'Script::Insn'
| |-EnumConstantDecl 0x56469aca15b0 <col:23> col:23 referenced INSN_WAIT_STEP 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1600 <col:39> col:39 referenced INSN_WAIT_TIME 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1650 <line:464:9> col:9 referenced INSN_PRINT 'Script::Insn'
| |-EnumConstantDecl 0x56469aca16a0 <col:21> col:21 referenced INSN_PRINTQ 'Script::Insn'
| |-EnumConstantDecl 0x56469aca16f0 <col:34> col:34 referenced INSN_PRINTN 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1740 <col:47> col:47 referenced INSN_PRINTNQ 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1790 <line:465:9> col:9 referenced INSN_READ 'Script::Insn'
| |-EnumConstantDecl 0x56469aca17e0 <col:20> col:20 referenced INSN_READQ 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1830 <col:32> col:32 referenced INSN_WRITE 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1880 <col:44> col:44 referenced INSN_WRITEQ 'Script::Insn'
| |-EnumConstantDecl 0x56469aca18d0 <line:466:9> col:9 referenced INSN_SET 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1920 <col:19> col:19 referenced insn_setq 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1970 <col:30> col:30 referenced insn_init 'Script::Insn'
| |-EnumConstantDecl 0x56469aca19c0 <col:41> col:41 referenced insn_initq 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1a10 <col:53> col:53 referenced insn_export 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1a60 <col:66> col:66 referenced insn_exportq 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1ab0 <line:468:9> col:9 referenced insn_save 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1b00 <col:20> col:20 referenced insn_append 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1b50 <line:470:9> col:9 referenced INSN_LABEL 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1ba0 <col:21> col:21 referenced INSN_GOTO 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1bf0 <col:32> col:32 referenced INSN_RETURN 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1c40 <col:45> col:45 referenced insn_returnq 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1c90 <line:471:9> col:9 referenced INSN_WAIT_PSEUDO 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1ce0 <col:27> col:27 referenced INSN_LOOP_PSEUDO 'Script::Insn'
| |-EnumConstantDecl 0x56469aca1d88 <line:473:9, col:22> col:9 referenced insn_exit 'Script::Insn'
| | `-ConstantExpr 0x56469aca1d68 <col:21, col:22> 'int' Int: -1
| |   `-UnaryOperator 0x56469aca1d50 <col:21, col:22> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469aca1d30 <col:22> 'int' 1
| |-EnumConstantDecl 0x56469aca1e30 <col:25, col:37> col:25 referenced insn_end 'Script::Insn'
| | `-ConstantExpr 0x56469aca1e10 <col:36, col:37> 'int' Int: -2
| |   `-UnaryOperator 0x56469aca1df8 <col:36, col:37> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469aca1dd8 <col:37> 'int' 2
| |-EnumConstantDecl 0x56469aca1ed8 <col:40, col:53> col:40 referenced insn_stop 'Script::Insn'
| | `-ConstantExpr 0x56469aca1eb8 <col:52, col:53> 'int' Int: -3
| |   `-UnaryOperator 0x56469aca1ea0 <col:52, col:53> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469aca1e80 <col:53> 'int' 3
| |-EnumConstantDecl 0x56469aca1f80 <col:56, col:70> col:56 referenced insn_error 'Script::Insn'
| | `-ConstantExpr 0x56469aca1f60 <col:69, col:70> 'int' Int: -4
| |   `-UnaryOperator 0x56469aca1f48 <col:69, col:70> 'int' prefix '-'
| |     `-IntegerLiteral 0x56469aca1f28 <col:70> 'int' 4
| `-EnumConstantDecl 0x56469aca2028 <line:474:9, col:24> col:9 referenced insn_errorq 'Script::Insn'
|   `-ConstantExpr 0x56469aca2008 <col:23, col:24> 'int' Int: -5
|     `-UnaryOperator 0x56469aca1ff0 <col:23, col:24> 'int' prefix '-'
|       `-IntegerLiteral 0x56469aca1fd0 <col:24> 'int' 5
|-AccessSpecDecl 0x56469aca2078 <line:477:3, col:10> col:3 private
|-EnumDecl 0x56469aca20a0 <line:479:5, line:482:5> line:479:10 Type
| |-EnumConstantDecl 0x56469aca2160 <line:480:9> col:9 type_active 'Script::Type'
| |-EnumConstantDecl 0x56469aca21b0 <col:22> col:22 type_driver 'Script::Type'
| |-EnumConstantDecl 0x56469aca2200 <col:35> col:35 type_signal 'Script::Type'
| |-EnumConstantDecl 0x56469aca2250 <col:48> col:48 type_passive 'Script::Type'
| |-EnumConstantDecl 0x56469aca22a0 <col:62> col:62 type_proxy 'Script::Type'
| `-EnumConstantDecl 0x56469aca22f0 <line:481:9> col:9 type_push 'Script::Type'
|-EnumDecl 0x56469aca2340 <line:484:5, line:486:5> line:484:5
| |-EnumConstantDecl 0x56469aca2440 <line:485:9, col:21> col:9 max_jumps 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
| | `-ImplicitCastExpr 0x56469aca2610 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469aca2420 <col:21> 'int' Int: 1000
| |     `-IntegerLiteral 0x56469aca2400 <col:21> 'int' 1000
| |-EnumConstantDecl 0x56469aca24d0 <col:27, col:41> col:27 STEP_NORMAL 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
| | `-ImplicitCastExpr 0x56469aca2628 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469aca24b0 <col:41> 'int' Int: 0
| |     `-IntegerLiteral 0x56469aca2490 <col:41> 'int' 0
| |-EnumConstantDecl 0x56469aca2520 <col:44> col:44 STEP_ROUTER 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
| |-EnumConstantDecl 0x56469aca2570 <col:57> col:57 STEP_TIMER 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
| `-EnumConstantDecl 0x56469aca25c0 <col:69> col:69 STEP_JUMP 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
|-FieldDecl 0x56469acb1410 <line:488:5, col:17> col:17 _insns 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469acb1520 <line:489:5, col:17> col:17 _args 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469acb1630 <line:490:5, col:17> col:17 _args2 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469acb1730 <line:491:5, col:20> col:20 _args3 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56469acb1830 <line:493:5, col:20> col:20 _vars 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56469acb1890 <line:494:5, col:12> col:12 _run_handler_name 'String'
|-FieldDecl 0x56469acb18f0 <line:495:5, col:12> col:12 _run_args 'String'
|-FieldDecl 0x56469acb1958 <line:496:5, col:9> col:9 _run_op 'int'
|-FieldDecl 0x56469acb19c0 <line:498:5, col:9> col:9 _insn_pos 'int'
|-FieldDecl 0x56469acb1a28 <line:499:5, col:9> col:9 _step_count 'int'
|-FieldDecl 0x56469acb1a90 <line:500:5, col:9> col:9 _type 'int'
|-FieldDecl 0x56469acb1af8 <line:501:5, col:9> col:9 _write_status 'int'
|-FieldDecl 0x56469acb1c00 <line:503:5, col:17> col:17 _signos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469acb1c60 <line:506:5, col:11> col:11 _timer 'Timer'
|-FieldDecl 0x56469acb1cc8 <line:507:5, col:10> col:10 _cur_steps 'int *'
|-CXXRecordDecl 0x56469acb1d18 <line:509:5, line:513:5> line:509:11 class Expander definition
| |-DefinitionData polymorphic
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-public 'VariableExpander'
| |-CXXRecordDecl 0x56469acb1e78 <col:5, col:11> col:11 implicit class Expander
| |-AccessSpecDecl 0x56469acb1f08 <col:48, col:54> col:48 public
| |-FieldDecl 0x56469acb1f40 <line:510:9, col:17> col:17 script 'Script *'
| |-FieldDecl 0x56469acb1fa0 <line:511:9, col:23> col:23 errh 'ErrorHandler *'
| |-CXXMethodDecl 0x56469acb2250 <line:512:9, col:82> col:13 expand 'int (const String &, String &, int, int) const'
| | |-Overrides: [ 0x56469ac92c20 VariableExpander::expand 'int (const String &, String &, int, int) const' ]
| | |-ParmVarDecl 0x56469acb2000 <col:20, col:34> col:34 var 'const String &'
| | |-ParmVarDecl 0x56469acb2078 <col:39, col:47> col:47 expansion 'String &'
| | |-ParmVarDecl 0x56469acb20f8 <col:58, col:62> col:62 vartype 'int'
| | `-ParmVarDecl 0x56469acb2178 <col:71, col:75> col:75 depth 'int'
| |-CXXConstructorDecl 0x56469acb2350 <line:509:11> col:11 implicit constexpr Expander 'void (const Script::Expander &)' inline default noexcept-unevaluated 0x56469acb2350
| | `-ParmVarDecl 0x56469acb2468 <col:11> col:11 'const Script::Expander &'
| |-CXXConstructorDecl 0x56469acb2508 <col:11> col:11 implicit constexpr Expander 'void (Script::Expander &&)' inline default noexcept-unevaluated 0x56469acb2508
| | `-ParmVarDecl 0x56469acb2618 <col:11> col:11 'Script::Expander &&'
| |-CXXMethodDecl 0x56469acb26b8 <col:11> col:11 implicit operator= 'Script::Expander &(const Script::Expander &)' inline default noexcept-unevaluated 0x56469acb26b8
| | `-ParmVarDecl 0x56469acb27c8 <col:11> col:11 'const Script::Expander &'
| |-CXXMethodDecl 0x56469acb2838 <col:11> col:11 implicit operator= 'Script::Expander &(Script::Expander &&)' inline default noexcept-unevaluated 0x56469acb2838
| | `-ParmVarDecl 0x56469acb2948 <col:11> col:11 'Script::Expander &&'
| `-CXXDestructorDecl 0x56469acb29d0 <col:11> col:11 implicit ~Expander 'void ()' inline default noexcept-unevaluated 0x56469acb29d0
|   `-Overrides: [ 0x56469ac92890 VariableExpander::~VariableExpander 'void () noexcept' ]
|-EnumDecl 0x56469acb2ab0 <line:515:5, line:525:5> line:515:5
| |-EnumConstantDecl 0x56469acb2bb0 <line:516:9, col:19> col:9 ST_STEP 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| | `-ImplicitCastExpr 0x56469acb3a00 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acb2b90 <col:19> 'int' Int: 0
| |     `-IntegerLiteral 0x56469acb2b70 <col:19> 'int' 0
| |-EnumConstantDecl 0x56469acb2c00 <col:22> col:22 ST_RUN 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2c50 <col:30> col:30 ST_GOTO 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2ce0 <line:517:9, col:18> col:9 ar_add 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| | `-ImplicitCastExpr 0x56469acb3a18 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469acb2cc0 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x56469acb2ca0 <col:18> 'int' 0
| |-EnumConstantDecl 0x56469acb2d30 <col:21> col:21 ar_sub 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2d80 <col:29> col:29 ar_min 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2dd0 <col:37> col:37 ar_max 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2e20 <col:45> col:45 ar_mul 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2e70 <col:53> col:53 ar_div 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2ec0 <col:61> col:61 ar_idiv 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2f10 <col:70> col:70 ar_mod 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2f60 <col:78> col:78 ar_rem 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb2fb0 <line:518:9> col:9 ar_neg 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3000 <col:17> col:17 ar_abs 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3050 <line:519:9> col:9 AR_LT 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb30a0 <col:16> col:16 AR_EQ 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb30f0 <col:23> col:23 AR_GT 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3140 <col:30> col:30 AR_GE 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3190 <col:37> col:37 AR_NE 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb31e0 <col:44> col:44 AR_LE 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3230 <line:520:9> col:9 AR_FIRST 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3280 <col:19> col:19 AR_NOT 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb32d0 <col:27> col:27 AR_SPRINTF 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3320 <col:39> col:39 ar_random 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3370 <col:50> col:50 ar_cat 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb33c0 <col:58> col:58 ar_catq 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3410 <line:521:9> col:9 ar_and 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3460 <col:17> col:17 ar_or 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb34b0 <col:24> col:24 ar_nand 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3500 <col:33> col:33 ar_nor 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3550 <col:41> col:41 ar_now 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb35a0 <col:49> col:49 ar_if 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb35f0 <col:56> col:56 ar_in 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3640 <line:522:9> col:9 ar_readable 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3690 <col:22> col:22 ar_writable 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb36e0 <col:35> col:35 ar_length 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3730 <col:46> col:46 ar_unquote 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3780 <col:58> col:58 ar_kill 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb37d0 <line:523:9> col:9 ar_htons 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3820 <col:19> col:19 ar_htonl 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3870 <col:29> col:29 ar_ntohs 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb38c0 <col:39> col:39 ar_ntohl 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3910 <line:524:9> col:9 vh_get 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x56469acb3960 <col:17> col:17 vh_set 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| `-EnumConstantDecl 0x56469acb39b0 <col:25> col:25 vh_shift 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
|-CXXMethodDecl 0x56469acb3cb8 <line:527:5, col:63> col:10 add_insn 'void (int, int, int, const String &)'
| |-ParmVarDecl 0x56469acb3a48 <col:19> col:22 'int'
| |-ParmVarDecl 0x56469acb3ac8 <col:24> col:27 'int'
| |-ParmVarDecl 0x56469acb3b48 <col:29, col:35> col:33 'int' cinit
| | `-IntegerLiteral 0x56469acb7330 <col:35> 'int' 0
| `-ParmVarDecl 0x56469acb3bc0 <col:38, col:62> col:53 'const String &' cinit
|   `-ExprWithCleanups 0x56469acb73e8 <col:55, col:62> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56469acb73d0 <col:55, col:62> 'const String' lvalue
|       `-ImplicitCastExpr 0x56469acb73b8 <col:55, col:62> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56469acb7398 <col:55, col:62> 'String' (CXXTemporary 0x56469acb7398)
|           `-CXXTemporaryObjectExpr 0x56469acb7360 <col:55, col:62> 'String' 'void ()'
|-CXXMethodDecl 0x56469acb4000 <line:528:5, col:71> col:9 step 'int (int, int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56469acb3d90 <col:14, col:18> col:18 nsteps 'int'
| |-ParmVarDecl 0x56469acb3e10 <col:26, col:30> col:30 step_type 'int'
| |-ParmVarDecl 0x56469acb3e90 <col:41, col:45> col:45 njumps 'int'
| `-ParmVarDecl 0x56469acb3f08 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb41a0 <line:529:5, col:37> col:9 complete_step 'int (String *)'
| `-ParmVarDecl 0x56469acb40d0 <col:23, col:31> col:31 retval 'String *'
|-CXXMethodDecl 0x56469acb42f0 <line:530:5, col:36> col:9 find_label 'int (const String &) const'
| `-ParmVarDecl 0x56469acb4258 <col:20, col:33> col:34 'const String &'
|-CXXMethodDecl 0x56469acb4500 <line:531:5, col:51> col:9 find_variable 'int (const String &, bool)'
| |-ParmVarDecl 0x56469acb43a8 <col:23, col:37> col:37 name 'const String &'
| `-ParmVarDecl 0x56469acb4420 <col:43, col:48> col:48 add 'bool'
|-CXXMethodDecl 0x56469acb4860 <line:533:5, col:82> col:16 step_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb45c8 <col:29> col:32 'int'
| |-ParmVarDecl 0x56469acb4640 <col:34, col:40> col:41 'String &'
| |-ParmVarDecl 0x56469acb46b8 <col:43, col:50> col:51 'Element *'
| |-ParmVarDecl 0x56469acb4730 <col:53, col:66> col:67 'const Handler *'
| `-ParmVarDecl 0x56469acb47a8 <col:69, col:81> col:82 'ErrorHandler *'
|-EnumDecl 0x56469acb4928 <line:534:5, col:48> col:5
| |-EnumConstantDecl 0x56469acb49f0 <col:12> col:12 error_one_number 'Script::(anonymous enum at ../elements/standard/script.hh:534:5)'
| `-EnumConstantDecl 0x56469acb4a40 <col:30> col:30 error_two_numbers 'Script::(anonymous enum at ../elements/standard/script.hh:534:5)'
|-CXXMethodDecl 0x56469acb4c00 <line:535:5, col:60> col:16 normal_error 'int (int, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb4aa8 <col:29, col:33> col:33 message 'int'
| `-ParmVarDecl 0x56469acb4b20 <col:42, col:56> col:56 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb4f60 <line:536:5, col:101> col:16 arithmetic_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb4cc8 <col:35> col:38 'int'
| |-ParmVarDecl 0x56469acb4d40 <col:40, col:48> col:48 str 'String &'
| |-ParmVarDecl 0x56469acb4db8 <col:53, col:62> col:62 e 'Element *'
| |-ParmVarDecl 0x56469acb4e30 <col:65, col:80> col:80 h 'const Handler *'
| `-ParmVarDecl 0x56469acb4ea8 <col:83, col:97> col:97 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb52d8 <line:537:5, col:97> col:16 modrem_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb5040 <col:31> col:34 'int'
| |-ParmVarDecl 0x56469acb50b8 <col:36, col:44> col:44 str 'String &'
| |-ParmVarDecl 0x56469acb5130 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x56469acb51a8 <col:61, col:76> col:76 h 'const Handler *'
| `-ParmVarDecl 0x56469acb5220 <col:79, col:93> col:93 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb5650 <line:538:5, col:97> col:16 negabs_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb53b8 <col:31> col:34 'int'
| |-ParmVarDecl 0x56469acb5430 <col:36, col:44> col:44 str 'String &'
| |-ParmVarDecl 0x56469acb54a8 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x56469acb5520 <col:61, col:76> col:76 h 'const Handler *'
| `-ParmVarDecl 0x56469acb5598 <col:79, col:93> col:93 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb59c8 <line:539:5, col:98> col:16 compare_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb5730 <col:32> col:35 'int'
| |-ParmVarDecl 0x56469acb57a8 <col:37, col:45> col:45 str 'String &'
| |-ParmVarDecl 0x56469acb5820 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x56469acb5898 <col:62, col:77> col:77 h 'const Handler *'
| `-ParmVarDecl 0x56469acb5910 <col:80, col:94> col:94 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb5d40 <line:540:5, col:98> col:16 sprintf_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb5aa8 <col:32> col:35 'int'
| |-ParmVarDecl 0x56469acb5b20 <col:37, col:45> col:45 str 'String &'
| |-ParmVarDecl 0x56469acb5b98 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x56469acb5c10 <col:62, col:77> col:77 h 'const Handler *'
| `-ParmVarDecl 0x56469acb5c88 <col:80, col:94> col:94 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb60b8 <line:541:5, col:83> col:16 basic_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb5e20 <col:30> col:33 'int'
| |-ParmVarDecl 0x56469acb5e98 <col:35, col:41> col:42 'String &'
| |-ParmVarDecl 0x56469acb5f10 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x56469acb5f88 <col:54, col:67> col:68 'const Handler *'
| `-ParmVarDecl 0x56469acb6000 <col:70, col:82> col:83 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb62a8 <line:542:5, col:54> col:19 read_export_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56469acb6190 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x56469acb6210 <col:49, col:53> col:54 'void *'
|-CXXMethodDecl 0x56469acb6608 <line:543:5, col:94> col:16 var_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb6370 <col:28> col:31 'int'
| |-ParmVarDecl 0x56469acb63e8 <col:33, col:41> col:41 str 'String &'
| |-ParmVarDecl 0x56469acb6460 <col:46, col:55> col:55 e 'Element *'
| |-ParmVarDecl 0x56469acb64d8 <col:58, col:73> col:73 h 'const Handler *'
| `-ParmVarDecl 0x56469acb6550 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb6900 <line:544:5, col:80> col:16 star_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469acb66e0 <col:35, col:47> col:48 'const String &'
| |-ParmVarDecl 0x56469acb6758 <col:50, col:57> col:58 'Element *'
| |-ParmVarDecl 0x56469acb67d8 <col:60, col:64> col:65 'void *'
| `-ParmVarDecl 0x56469acb6850 <col:67, col:79> col:80 'ErrorHandler *'
|-FriendDecl 0x56469acb6ad8 <line:546:5, col:18> col:12 'class DriverManager':'DriverManager'
|-FriendDecl 0x56469acb6b70 <line:547:5, col:18> col:12 'class Expander':'Script::Expander'
|-CXXConstructorDecl 0x56469acb6bd8 <line:444:7> col:7 implicit Script 'void (const Script &)' inline default_delete noexcept-unevaluated 0x56469acb6bd8
| `-ParmVarDecl 0x56469acb6ce8 <col:7> col:7 'const Script &'
|-CXXConstructorDecl 0x56469acb6d88 <col:7> col:7 implicit Script 'void (Script &&)' inline default_delete noexcept-unevaluated 0x56469acb6d88
| `-ParmVarDecl 0x56469acb6e98 <col:7> col:7 'Script &&'
|-CXXMethodDecl 0x56469acb6f38 <col:7> col:7 implicit operator= 'Script &(const Script &)' inline default_delete noexcept-unevaluated 0x56469acb6f38
| `-ParmVarDecl 0x56469acb7048 <col:7> col:7 'const Script &'
|-CXXMethodDecl 0x56469acb70b8 <col:7> col:7 implicit operator= 'Script &(Script &&)' inline default_delete noexcept-unevaluated 0x56469acb70b8
| `-ParmVarDecl 0x56469acb71c8 <col:7> col:7 'Script &&'
`-CXXDestructorDecl 0x56469acb7250 <col:7> col:7 implicit ~Script 'void ()' inline default noexcept-unevaluated 0x56469acb7250
  `-Overrides: [ 0x56469ac5b098 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.Script = type { %class.Element.base, %class.Vector.14, %class.Vector.14, %class.Vector.14, %class.Vector.9, %class.Vector.9, %class.String, %class.String, i32, i32, i32, i32, i32, %class.Vector.14, %class.Timer, i32* }
  NonVirtualBaseLLVMType:%class.Script = type { %class.Element.base, %class.Vector.14, %class.Vector.14, %class.Vector.14, %class.Vector.9, %class.Vector.9, %class.String, %class.String, i32, i32, i32, i32, i32, %class.Vector.14, %class.Timer, i32* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae021b8 prev 0x56469ac204a8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ae022b0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x56469ae02340 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x56469ae02448 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x56469ae02378 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x56469ae06d30 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x56469ae06d10 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x56469ae068a8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x56469ae06dc0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x56469ae06d80 <col:17> 'ErrorHandler *' lvalue ParmVar 0x56469ae02378 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x56469ae06910 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x56469ae06e40 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x56469ae06e00 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x56469ae06970 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x56469ae06e80 <col:54> 'bool' false
| `-CompoundStmt 0x56469ae06f88 <col:61, line:38:5>
|   `-BinaryOperator 0x56469ae06f68 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x56469ae06f00 <col:9> 'const Element *' lvalue ->_context 0x56469ae06848
|     | `-CXXThisExpr 0x56469ae06ef0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x56469ae06f50 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x56469ae06f30 <col:20> 'int' 0
|-CXXConstructorDecl 0x56469ae02658 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ae02508 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x56469ae02580 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x56469ae06d68 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x56469ae06d48 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x56469ae06848 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x56469ae06fe0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x56469ae06fa0 <col:20> 'const Element *' lvalue ParmVar 0x56469ae02508 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x56469ae068a8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x56469ae07060 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x56469ae07020 <col:36> 'ErrorHandler *' lvalue ParmVar 0x56469ae02580 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x56469ae06910 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x56469ae070e0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x56469ae070a0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x56469ae06970 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x56469ae07120 <col:73> 'bool' false
| `-CompoundStmt 0x56469ae07198 <col:80, line:46:5>
|-CXXMethodDecl 0x56469ae02788 <line:49:5, line:51:5> line:49:20 used context 'const Element *() const'
| `-CompoundStmt 0x56469ae07210 <col:36, line:51:5>
|   `-ReturnStmt 0x56469ae07200 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x56469ae071e8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x56469ae071b8 <col:16> 'const Element *const' lvalue ->_context 0x56469ae06848
|         `-CXXThisExpr 0x56469ae071a8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x56469ae02878 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x56469ae07290 <col:32, line:57:5>
|   `-ReturnStmt 0x56469ae07280 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x56469ae07268 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x56469ae07238 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x56469ae068a8
|         `-CXXThisExpr 0x56469ae07228 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x56469ae02938 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x56469ae02ac0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x56469ae029f0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x56469ae02c10 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x56469ae02b80 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x56469ae06270 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x56469ae02cd0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x56469ae06478 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x56469ae06328 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x56469ae063a0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x56469ae06758 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x56469ae06538 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x56469ae065b8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x56469ae06630 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x56469ae06810 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x56469ae06848 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x56469ae068a8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x56469ae06910 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x56469ae06970 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x56469ae069c0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x56469ae069c0
| `-ParmVarDecl 0x56469ae06ad8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x56469ae06b78 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x56469ae06b78
| `-ParmVarDecl 0x56469ae06c88 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x56469aebae30 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae23528 prev 0x56469ae0c1a8 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ae23620 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x56469ae23710 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x56469ae437b0 <col:16, line:828:9>
|-CXXDestructorDecl 0x56469ae23800 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x56469ae437c0 <col:25, line:830:9>
|-CXXMethodDecl 0x56469ae23900 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x56469ae239b0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x56469ae23a58 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x56469ae23a58
| `-ParmVarDecl 0x56469ae23b68 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x56469ae304c0 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x56469ae304c0
  `-ParmVarDecl 0x56469ae305d8 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae0bfb8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x56469ae0c118 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x56469ae0c1a8 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x56469ae0c260 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x56469ae0c368 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x56469ae0c298 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469ae32aa8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469ae32a88 <col:31> 'int' 0
|-CXXConstructorDecl 0x56469ae0c688 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x56469ae0c500 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x56469ae0c578 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469ae32ae0 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469ae32ac0 <col:59> 'int' 0
|-CXXConstructorDecl 0x56469ae0c860 <line:265:5, col:56> col:5 used Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ae0c750 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x56469ae0c7c8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469ae32b18 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469ae32af8 <col:55> 'int' 0
|-CXXConstructorDecl 0x56469ae0cc18 <line:271:5, line:272:32> line:271:5 Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x56469ae0ca00 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x56469ae0ca78 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x56469ae0caf0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469ae32b50 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469ae32b30 <col:31> 'int' 0
|-CXXConstructorDecl 0x56469ae0cdd8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x56469ae0cd18 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x56469ae0ced0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x56469ae0d0b8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x56469ae0cfc0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x56469ae0d1a8 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x56469ae32f00 <col:24, line:291:5>
|   `-ReturnStmt 0x56469ae32ef0 <line:290:9, col:79>
|     `-BinaryOperator 0x56469ae32ed0 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x56469ae32da8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x56469ae32d00 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x56469ae32ce0 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x56469ae32bd8 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x56469ae32bc0 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x56469ae32ba8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x56469ae32b78 <col:18> 'Vector<String> *const' lvalue ->_conf 0x56469ae314f0
|       | |   |       `-CXXThisExpr 0x56469ae32b68 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x56469ae32cc8 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x56469ae32cb0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x56469ae32c78 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x56469ae32c48 <col:28, col:35> '<bound member function type>' ->size 0x56469ac9c1f8
|       | |           `-ImplicitCastExpr 0x56469ae32c98 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x56469ae32c30 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x56469ae32c00 <col:28> 'Vector<String> *const' lvalue ->_conf 0x56469ae314f0
|       | |                 `-CXXThisExpr 0x56469ae32bf0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x56469ae32d90 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x56469ae32d78 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x56469ae32d60 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x56469ae32d30 <col:47> 'Args::Slot *const' lvalue ->_slots 0x56469ae31660
|       |         `-CXXThisExpr 0x56469ae32d20 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x56469ae32eb0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x56469ae32e98 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x56469ae32e80 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x56469ae32e40 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x56469ae32e28 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x56469ae32dd8 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x56469ae31710
|         |     |   `-CXXThisExpr 0x56469ae32dc8 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x56469ae32e08 <col:73> 'int' 0
|         `-IntegerLiteral 0x56469ae32e60 <col:79> 'int' 0
|-CXXMethodDecl 0x56469ae0d268 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x56469ae330d8 <col:32, line:296:5>
|   `-ReturnStmt 0x56469ae330c8 <line:295:9, col:49>
|     `-BinaryOperator 0x56469ae330a8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x56469ae32f88 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x56469ae32f70 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x56469ae32f58 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x56469ae32f28 <col:17> 'Args::Slot *const' lvalue ->_slots 0x56469ae31660
|       |       `-CXXThisExpr 0x56469ae32f18 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x56469ae33088 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x56469ae33070 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x56469ae33058 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x56469ae33018 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x56469ae33000 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x56469ae32fb0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x56469ae31710
|         |     |   `-CXXThisExpr 0x56469ae32fa0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x56469ae32fe0 <col:43> 'int' 0
|         `-IntegerLiteral 0x56469ae33038 <col:49> 'int' 0
|-CXXMethodDecl 0x56469ae0d358 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x56469ae332e8 <col:19, line:306:5>
|   |-IfStmt 0x56469ae33208 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x56469ae33148 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x56469ae33130 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x56469ae33100 <col:13> 'Vector<String> *' lvalue ->_conf 0x56469ae314f0
|   | |     `-CXXThisExpr 0x56469ae330f0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x56469ae331e8 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x56469ae331b8 <col:13, col:20> '<bound member function type>' ->clear 0x56469ac9ebf8
|   |     `-ImplicitCastExpr 0x56469ae331a0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x56469ae33170 <col:13> 'Vector<String> *' lvalue ->_conf 0x56469ae314f0
|   |         `-CXXThisExpr 0x56469ae33160 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x56469ae33290 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x56469ae33260 <col:9, col:16> '<bound member function type>' .clear 0x56469acb0ff8
|   |   `-MemberExpr 0x56469ae33230 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x56469ae31600
|   |     `-CXXThisExpr 0x56469ae33220 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x56469ae332d8 <line:305:9, col:17>
|     `-UnaryOperator 0x56469ae332c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469ae332b0 <col:17> 'Args *' this
|-CXXMethodDecl 0x56469ae0d5d8 <line:313:5, col:36> col:11 used bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x56469ae0d4e0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x56469ae0d758 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x56469ae0d690 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x56469ae0dad8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x56469ae0d800 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x56469ae0da38 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x56469ae0d8a8 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x56469ae0d920 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x56469ae33608 <col:67, line:327:5>
|     |-WhileStmt 0x56469ae335b8 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x56469ae333d0 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x56469ae33350 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x56469ac18978 0x56469aa61f58 0x56469aa61c30 0x56469aa52400 0x56469aa520b0 0x56469aa519a0 0x56469aa24310 0x56469a9b15c0
|     | | |-DeclRefExpr 0x56469ae33310 <col:16> 'Iter' lvalue ParmVar 0x56469ae0d8a8 'begin' 'Iter'
|     | | `-DeclRefExpr 0x56469ae33330 <col:25> 'Iter' lvalue ParmVar 0x56469ae0d920 'end' 'Iter'
|     | `-CompoundStmt 0x56469ae33598 <col:30, line:325:9>
|     |   |-CallExpr 0x56469ae33538 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x56469ae33418 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x56469ae33508 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x56469ae33498 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|     |   |   `-DeclRefExpr 0x56469ae33478 <col:24> 'Iter' lvalue ParmVar 0x56469ae0d8a8 'begin' 'Iter'
|     |   `-UnaryOperator 0x56469ae33580 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x56469ae33560 <col:15> 'Iter' lvalue ParmVar 0x56469ae0d8a8 'begin' 'Iter'
|     `-ReturnStmt 0x56469ae335f8 <line:326:9, col:17>
|       `-UnaryOperator 0x56469ae335e0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae335d0 <col:17> 'Args *' this
|-CXXMethodDecl 0x56469ae0dbe0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x56469ae0db50 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x56469ae0dd28 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x56469ae0dc98 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x56469ae0ddf0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x56469ae336e8 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x56469ae33688 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x56469ae33638 <col:9> '<bound member function type>' ->reset_from 0x56469ae31a88
|   | | `-CXXThisExpr 0x56469ae33628 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x56469ae33668 <col:20> 'int' 0
|   `-ReturnStmt 0x56469ae336d8 <line:352:9, col:17>
|     `-UnaryOperator 0x56469ae336c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469ae336b0 <col:17> 'Args *' this
|-VarDecl 0x56469ae0dea8 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x56469ae0df10 <col:38> 'int' 1
|-VarDecl 0x56469ae0dfa0 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x56469ae0e008 <col:39> 'int' 2
|-VarDecl 0x56469ae0e098 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x56469ae0e100 <col:39> 'int' 4
|-VarDecl 0x56469ae0e190 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x56469ae0e1f8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x56469ae10108 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x56469ae0fe00 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae10068 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x56469ae0feb0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae0ff58 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x56469ae33840 <col:43, line:371:5>
|     `-ReturnStmt 0x56469ae33830 <line:370:9, col:34>
|       `-CallExpr 0x56469ae337f8 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae33718 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae33798 <col:21> 'const char *' lvalue ParmVar 0x56469ae0feb0 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae337b8 <col:30> 'int' 0
|         `-DeclRefExpr 0x56469ae337d8 <col:33> 'T' lvalue ParmVar 0x56469ae0ff58 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae10438 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x56469ae10170 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae10398 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x56469ae10220 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae102c8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x56469ae33990 <col:45, line:375:5>
|     `-ReturnStmt 0x56469ae33980 <line:374:9, col:42>
|       `-CallExpr 0x56469ae33948 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae33868 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae338e8 <col:21> 'const char *' lvalue ParmVar 0x56469ae10220 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae33908 <col:30> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int'
|         `-DeclRefExpr 0x56469ae33928 <col:41> 'T' lvalue ParmVar 0x56469ae102c8 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae10768 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x56469ae104a0 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae106c8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x56469ae10550 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae105f8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x56469ae33ae0 <col:45, line:379:5>
|     `-ReturnStmt 0x56469ae33ad0 <line:378:9, col:43>
|       `-CallExpr 0x56469ae33a98 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae339b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae33a38 <col:21> 'const char *' lvalue ParmVar 0x56469ae10550 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae33a58 <col:30> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int'
|         `-DeclRefExpr 0x56469ae33a78 <col:42> 'T' lvalue ParmVar 0x56469ae105f8 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae10a98 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x56469ae107d0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae109f8 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x56469ae10880 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae10928 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x56469ae33ce0 <col:46, line:383:5>
|     `-ReturnStmt 0x56469ae33cd0 <line:382:9, col:55>
|       `-CallExpr 0x56469ae33c98 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae33b08 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae33b88 <col:21> 'const char *' lvalue ParmVar 0x56469ae10880 'keyword' 'const char *'
|         |-BinaryOperator 0x56469ae33c58 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x56469ae33c08 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56469ae33be8 <col:30> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x56469ae33c40 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x56469ae33c20 <col:42> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x56469ae33c78 <col:54> 'T' lvalue ParmVar 0x56469ae10928 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae10e98 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x56469ae10b00 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae10df8 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x56469ae10bb0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae10c30 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae10cd8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x56469ae33e20 <col:54, line:388:5>
|     |-CallExpr 0x56469ae33da8 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae33cf8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x56469ae33d38 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x56469ae33d48 <col:30> 'const char *' lvalue ParmVar 0x56469ae10bb0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56469ae33d68 <col:39> 'int' lvalue ParmVar 0x56469ae10c30 'flags' 'int'
|     | `-DeclRefExpr 0x56469ae33d88 <col:46> 'T' lvalue ParmVar 0x56469ae10cd8 'x' 'T &'
|     `-ReturnStmt 0x56469ae33e10 <line:387:9, col:17>
|       `-UnaryOperator 0x56469ae33df8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae33de8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae11348 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x56469ae10f08 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x56469ae10f88 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x56469ae112a8 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x56469ae11048 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae110e8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x56469ae11188 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x56469ae33f90 <col:74, line:403:5>
|     `-ReturnStmt 0x56469ae33f80 <line:402:9, col:56>
|       `-CallExpr 0x56469ae33f40 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae33e50 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae33ec0 <col:28> 'const char *' lvalue ParmVar 0x56469ae11048 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae33ee0 <col:37> 'int' 0
|         |-DeclRefExpr 0x56469ae33f00 <col:40> 'T' lvalue ParmVar 0x56469ae110e8 'x' 'T &'
|         `-DeclRefExpr 0x56469ae33f20 <col:43> 'const V' lvalue ParmVar 0x56469ae11188 'default_value' 'const V &'
|-FunctionTemplateDecl 0x56469ae117b8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x56469ae113b8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x56469ae11438 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x56469ae11718 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x56469ae114f8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae11598 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x56469ae11638 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x56469ae340f8 <col:76, line:407:5>
|     `-ReturnStmt 0x56469ae340e8 <line:406:9, col:65>
|       `-CallExpr 0x56469ae340a8 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae33fb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae34028 <col:28> 'const char *' lvalue ParmVar 0x56469ae114f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae34048 <col:37> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int'
|         |-DeclRefExpr 0x56469ae34068 <col:49> 'T' lvalue ParmVar 0x56469ae11598 'x' 'T &'
|         `-DeclRefExpr 0x56469ae34088 <col:52> 'const V' lvalue ParmVar 0x56469ae11638 'default_value' 'const V &'
|-FunctionTemplateDecl 0x56469ae11d08 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x56469ae11828 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x56469ae118a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x56469ae11c68 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x56469ae11968 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae119e8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae11a88 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x56469ae11b28 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x56469ae34260 <col:85, line:412:5>
|     |-CallExpr 0x56469ae341e0 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae34110 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x56469ae34150 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x56469ae34160 <col:37> 'const char *' lvalue ParmVar 0x56469ae11968 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56469ae34180 <col:46> 'int' lvalue ParmVar 0x56469ae119e8 'flags' 'int'
|     | |-DeclRefExpr 0x56469ae341a0 <col:53> 'T' lvalue ParmVar 0x56469ae11a88 'x' 'T &'
|     | `-DeclRefExpr 0x56469ae341c0 <col:56> 'const V' lvalue ParmVar 0x56469ae11b28 'default_value' 'const V &'
|     `-ReturnStmt 0x56469ae34250 <line:411:9, col:17>
|       `-UnaryOperator 0x56469ae34238 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae34228 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae12198 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x56469ae11d80 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae11df8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x56469ae120f8 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x56469ae11eb8 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x56469ae11f30 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x56469ae11fd8 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x56469ae343e0 <col:53, line:425:5>
| |   `-ReturnStmt 0x56469ae343d0 <line:424:9, col:42>
| |     `-CallExpr 0x56469ae34390 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x56469ae34290 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x56469ae34310 <col:21> 'const char *' lvalue ParmVar 0x56469ae11eb8 'keyword' 'const char *'
| |       |-IntegerLiteral 0x56469ae34330 <col:30> 'int' 0
| |       |-DeclRefExpr 0x56469ae34350 <col:33> 'P' lvalue ParmVar 0x56469ae11f30 'parser' 'P'
| |       `-DeclRefExpr 0x56469ae34370 <col:41> 'T' lvalue ParmVar 0x56469ae11fd8 'x' 'T &'
| `-CXXMethodDecl 0x56469aebb988 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, AnyArg, String &)'
|   |-TemplateArgument type 'AnyArg'
|   |-TemplateArgument type 'String'
|   |-ParmVarDecl 0x56469aebb6f0 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x56469aebb798 <col:37, col:39> col:39 parser 'AnyArg':'AnyArg'
|   `-ParmVarDecl 0x56469aebb868 <col:47, col:50> col:50 x 'String &'
|-FunctionTemplateDecl 0x56469ae125e8 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x56469ae12208 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae12288 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae12548 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x56469ae12348 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae123c0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae12468 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x56469ae34558 <col:55, line:429:5>
|     `-ReturnStmt 0x56469ae34548 <line:428:9, col:50>
|       `-CallExpr 0x56469ae34508 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae34408 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae34488 <col:21> 'const char *' lvalue ParmVar 0x56469ae12348 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae344a8 <col:30> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int'
|         |-DeclRefExpr 0x56469ae344c8 <col:41> 'P' lvalue ParmVar 0x56469ae123c0 'parser' 'P'
|         `-DeclRefExpr 0x56469ae344e8 <col:49> 'T' lvalue ParmVar 0x56469ae12468 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae12a38 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x56469ae12658 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae126d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae12998 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x56469ae12798 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae12810 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae128b8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x56469ae346d0 <col:55, line:433:5>
|     `-ReturnStmt 0x56469ae346c0 <line:432:9, col:51>
|       `-CallExpr 0x56469ae34680 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae34580 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae34600 <col:21> 'const char *' lvalue ParmVar 0x56469ae12798 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae34620 <col:30> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int'
|         |-DeclRefExpr 0x56469ae34640 <col:42> 'P' lvalue ParmVar 0x56469ae12810 'parser' 'P'
|         `-DeclRefExpr 0x56469ae34660 <col:50> 'T' lvalue ParmVar 0x56469ae128b8 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae12e88 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x56469ae12aa8 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae12b28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae12de8 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x56469ae12be8 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae12c60 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae12d08 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x56469ae348f8 <col:56, line:437:5>
|     `-ReturnStmt 0x56469ae348e8 <line:436:9, col:63>
|       `-CallExpr 0x56469ae348a8 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae346f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae34778 <col:21> 'const char *' lvalue ParmVar 0x56469ae12be8 'keyword' 'const char *'
|         |-BinaryOperator 0x56469ae34848 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x56469ae347f8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56469ae347d8 <col:30> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x56469ae34830 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x56469ae34810 <col:42> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x56469ae34868 <col:54> 'P' lvalue ParmVar 0x56469ae12c60 'parser' 'P'
|         `-DeclRefExpr 0x56469ae34888 <col:62> 'T' lvalue ParmVar 0x56469ae12d08 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae133b8 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x56469ae12ef8 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae12f78 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae13318 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x56469ae13038 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae130b8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae13130 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae131d8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x56469ae34a60 <col:64, line:442:5>
|     |-CallExpr 0x56469ae349e0 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae34910 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x56469ae34950 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x56469ae34960 <col:30> 'const char *' lvalue ParmVar 0x56469ae13038 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56469ae34980 <col:39> 'int' lvalue ParmVar 0x56469ae130b8 'flags' 'int'
|     | |-DeclRefExpr 0x56469ae349a0 <col:46> 'P' lvalue ParmVar 0x56469ae13130 'parser' 'P'
|     | `-DeclRefExpr 0x56469ae349c0 <col:54> 'T' lvalue ParmVar 0x56469ae131d8 'x' 'T &'
|     `-ReturnStmt 0x56469ae34a50 <line:441:9, col:17>
|       `-UnaryOperator 0x56469ae34a38 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae34a28 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae139b8 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x56469ae13430 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae134a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x56469ae13528 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x56469ae13918 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x56469ae135f0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae13668 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae13708 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x56469ae137d8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x56469ae34bf8 <col:84, line:458:5>
|     `-ReturnStmt 0x56469ae34be8 <line:457:9, col:64>
|       `-CallExpr 0x56469ae34ba0 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae34a90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae34b00 <col:28> 'const char *' lvalue ParmVar 0x56469ae135f0 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae34b20 <col:37> 'int' 0
|         |-DeclRefExpr 0x56469ae34b40 <col:40> 'P' lvalue ParmVar 0x56469ae13668 'parser' 'P'
|         |-DeclRefExpr 0x56469ae34b60 <col:48> 'T' lvalue ParmVar 0x56469ae13708 'x' 'T &'
|         `-DeclRefExpr 0x56469ae34b80 <col:51> 'const V' lvalue ParmVar 0x56469ae137d8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x56469ae13f38 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x56469ae13a30 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae13aa8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x56469ae13b28 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x56469ae13e98 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x56469ae13bf0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae13c68 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae13d08 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x56469ae13da8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x56469ae34d88 <col:86, line:462:5>
|     `-ReturnStmt 0x56469ae34d78 <line:461:9, col:73>
|       `-CallExpr 0x56469ae34d30 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae34c20 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae34c90 <col:28> 'const char *' lvalue ParmVar 0x56469ae13bf0 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae34cb0 <col:37> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int'
|         |-DeclRefExpr 0x56469ae34cd0 <col:49> 'P' lvalue ParmVar 0x56469ae13c68 'parser' 'P'
|         |-DeclRefExpr 0x56469ae34cf0 <col:57> 'T' lvalue ParmVar 0x56469ae13d08 'x' 'T &'
|         `-DeclRefExpr 0x56469ae34d10 <col:60> 'const V' lvalue ParmVar 0x56469ae13da8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x56469ae14598 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x56469ae13fb0 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae14028 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x56469ae140a8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x56469ae144f8 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x56469ae14170 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae141f0 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae14268 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae14308 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x56469ae143a8 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x56469ae34f18 <col:95, line:467:5>
|     |-CallExpr 0x56469ae34e90 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae34da0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x56469ae34de0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x56469ae34df0 <col:37> 'const char *' lvalue ParmVar 0x56469ae14170 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56469ae34e10 <col:46> 'int' lvalue ParmVar 0x56469ae141f0 'flags' 'int'
|     | |-DeclRefExpr 0x56469ae34e30 <col:53> 'P' lvalue ParmVar 0x56469ae14268 'parser' 'P'
|     | |-DeclRefExpr 0x56469ae34e50 <col:61> 'T' lvalue ParmVar 0x56469ae14308 'x' 'T &'
|     | `-DeclRefExpr 0x56469ae34e70 <col:64> 'const V' lvalue ParmVar 0x56469ae143a8 'default_value' 'const V &'
|     `-ReturnStmt 0x56469ae34f08 <line:466:9, col:17>
|       `-UnaryOperator 0x56469ae34ef0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae34ee0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae14b78 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x56469ae14618 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae14698 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x56469ae14718 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x56469ae14ad8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x56469ae147e0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae14858 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae148f8 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x56469ae14998 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x56469ae350c0 <col:63, line:481:5>
|     `-ReturnStmt 0x56469ae350b0 <line:480:9, col:47>
|       `-CallExpr 0x56469ae35068 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae34f48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae34fc8 <col:21> 'const char *' lvalue ParmVar 0x56469ae147e0 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae34fe8 <col:30> 'int' 0
|         |-DeclRefExpr 0x56469ae35008 <col:33> 'P' lvalue ParmVar 0x56469ae14858 'parser' 'P'
|         |-DeclRefExpr 0x56469ae35028 <col:41> 'T1' lvalue ParmVar 0x56469ae148f8 'x1' 'T1 &'
|         `-DeclRefExpr 0x56469ae35048 <col:45> 'T2' lvalue ParmVar 0x56469ae14998 'x2' 'T2 &'
|-FunctionTemplateDecl 0x56469ae150f8 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x56469ae14bf0 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae14c68 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x56469ae14ce8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x56469ae15058 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x56469ae14db0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae14e28 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae14ec8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x56469ae14f68 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x56469ae35260 <col:65, line:485:5>
|     `-ReturnStmt 0x56469ae35250 <line:484:9, col:55>
|       `-CallExpr 0x56469ae35208 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae350e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae35168 <col:21> 'const char *' lvalue ParmVar 0x56469ae14db0 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae35188 <col:30> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int'
|         |-DeclRefExpr 0x56469ae351a8 <col:41> 'P' lvalue ParmVar 0x56469ae14e28 'parser' 'P'
|         |-DeclRefExpr 0x56469ae351c8 <col:49> 'T1' lvalue ParmVar 0x56469ae14ec8 'x1' 'T1 &'
|         `-DeclRefExpr 0x56469ae351e8 <col:53> 'T2' lvalue ParmVar 0x56469ae14f68 'x2' 'T2 &'
|-FunctionTemplateDecl 0x56469ae15678 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x56469ae15170 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae151e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x56469ae15268 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x56469ae155d8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x56469ae15330 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae153a8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae15448 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x56469ae154e8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x56469ae35400 <col:65, line:489:5>
|     `-ReturnStmt 0x56469ae353f0 <line:488:9, col:56>
|       `-CallExpr 0x56469ae353a8 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae35288 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae35308 <col:21> 'const char *' lvalue ParmVar 0x56469ae15330 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae35328 <col:30> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int'
|         |-DeclRefExpr 0x56469ae35348 <col:42> 'P' lvalue ParmVar 0x56469ae153a8 'parser' 'P'
|         |-DeclRefExpr 0x56469ae35368 <col:50> 'T1' lvalue ParmVar 0x56469ae15448 'x1' 'T1 &'
|         `-DeclRefExpr 0x56469ae35388 <col:54> 'T2' lvalue ParmVar 0x56469ae154e8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x56469ae15bf8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x56469ae156f0 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae15768 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x56469ae157e8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x56469ae15b58 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x56469ae158b0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae15928 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae159c8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x56469ae15a68 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x56469ae35650 <col:66, line:493:5>
|     `-ReturnStmt 0x56469ae35640 <line:492:9, col:68>
|       `-CallExpr 0x56469ae355f8 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae35428 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae354a8 <col:21> 'const char *' lvalue ParmVar 0x56469ae158b0 'keyword' 'const char *'
|         |-BinaryOperator 0x56469ae35578 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x56469ae35528 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56469ae35508 <col:30> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x56469ae35560 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x56469ae35540 <col:42> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x56469ae35598 <col:54> 'P' lvalue ParmVar 0x56469ae15928 'parser' 'P'
|         |-DeclRefExpr 0x56469ae355b8 <col:62> 'T1' lvalue ParmVar 0x56469ae159c8 'x1' 'T1 &'
|         `-DeclRefExpr 0x56469ae355d8 <col:66> 'T2' lvalue ParmVar 0x56469ae15a68 'x2' 'T2 &'
|-FunctionTemplateDecl 0x56469ae16258 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x56469ae15c70 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae15ce8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x56469ae15d68 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x56469ae161b8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x56469ae15e30 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae15eb0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae15f28 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae15fc8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x56469ae16068 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x56469ae357e0 <col:74, line:498:5>
|     |-CallExpr 0x56469ae35758 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae35668 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x56469ae356a8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x56469ae356b8 <col:30> 'const char *' lvalue ParmVar 0x56469ae15e30 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56469ae356d8 <col:39> 'int' lvalue ParmVar 0x56469ae15eb0 'flags' 'int'
|     | |-DeclRefExpr 0x56469ae356f8 <col:46> 'P' lvalue ParmVar 0x56469ae15f28 'parser' 'P'
|     | |-DeclRefExpr 0x56469ae35718 <col:54> 'T1' lvalue ParmVar 0x56469ae15fc8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x56469ae35738 <col:58> 'T2' lvalue ParmVar 0x56469ae16068 'x2' 'T2 &'
|     `-ReturnStmt 0x56469ae357d0 <line:497:9, col:17>
|       `-UnaryOperator 0x56469ae357b8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae357a8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae165b8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x56469ae162d8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae16518 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x56469ae16390 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae16408 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x56469ae35928 <col:52, line:509:5>
|     `-ReturnStmt 0x56469ae35918 <line:508:9, col:44>
|       `-CallExpr 0x56469ae358e0 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae35810 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae35880 <col:26> 'const char *' lvalue ParmVar 0x56469ae16390 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae358a0 <col:35> 'int' 0
|         `-DeclRefExpr 0x56469ae358c0 <col:38> 'P' lvalue ParmVar 0x56469ae16408 'parser' 'P'
|-FunctionTemplateDecl 0x56469ae168b8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x56469ae16620 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae16818 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x56469ae166d0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae16748 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x56469ae35a68 <col:54, line:513:5>
|     `-ReturnStmt 0x56469ae35a58 <line:512:9, col:52>
|       `-CallExpr 0x56469ae35a20 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae35950 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae359c0 <col:26> 'const char *' lvalue ParmVar 0x56469ae166d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae359e0 <col:35> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int'
|         `-DeclRefExpr 0x56469ae35a00 <col:46> 'P' lvalue ParmVar 0x56469ae16748 'parser' 'P'
|-FunctionTemplateDecl 0x56469ae16bb8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x56469ae16920 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae16b18 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x56469ae169d0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae16a48 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x56469ae35ba8 <col:54, line:517:5>
|     `-ReturnStmt 0x56469ae35b98 <line:516:9, col:53>
|       `-CallExpr 0x56469ae35b60 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae35a90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae35b00 <col:26> 'const char *' lvalue ParmVar 0x56469ae169d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae35b20 <col:35> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int'
|         `-DeclRefExpr 0x56469ae35b40 <col:47> 'P' lvalue ParmVar 0x56469ae16a48 'parser' 'P'
|-FunctionTemplateDecl 0x56469ae16eb8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x56469ae16c20 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae16e18 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x56469ae16cd0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae16d48 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x56469ae35d98 <col:55, line:521:5>
|     `-ReturnStmt 0x56469ae35d88 <line:520:9, col:65>
|       `-CallExpr 0x56469ae35d50 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae35bd0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae35c40 <col:26> 'const char *' lvalue ParmVar 0x56469ae16cd0 'keyword' 'const char *'
|         |-BinaryOperator 0x56469ae35d10 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x56469ae35cc0 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56469ae35ca0 <col:35> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x56469ae35cf8 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x56469ae35cd8 <col:47> 'const int' lvalue Var 0x56469ae0dfa0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x56469ae35d30 <col:59> 'P' lvalue ParmVar 0x56469ae16d48 'parser' 'P'
|-FunctionTemplateDecl 0x56469ae17288 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x56469ae16f20 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae171e8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x56469ae16fd0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae17050 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae170c8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x56469ae35ed8 <col:63, line:526:5>
|     |-CallExpr 0x56469ae35e60 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae35db0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x56469ae35df0 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x56469ae35e00 <col:35> 'const char *' lvalue ParmVar 0x56469ae16fd0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56469ae35e20 <col:44> 'int' lvalue ParmVar 0x56469ae17050 'flags' 'int'
|     | `-DeclRefExpr 0x56469ae35e40 <col:51> 'P' lvalue ParmVar 0x56469ae170c8 'parser' 'P'
|     `-ReturnStmt 0x56469ae35ec8 <line:525:9, col:17>
|       `-UnaryOperator 0x56469ae35eb0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae35ea0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae176d8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x56469ae172f8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae17378 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae17638 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x56469ae17438 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae174b0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae17558 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x56469ae36030 <col:58, line:541:5>
|     `-ReturnStmt 0x56469ae36020 <line:540:9, col:39>
|       `-CallExpr 0x56469ae35fe8 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae35f08 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae35f88 <col:21> 'const char *' lvalue ParmVar 0x56469ae17438 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae35fa8 <col:30> 'P' lvalue ParmVar 0x56469ae174b0 'parser' 'P'
|         `-DeclRefExpr 0x56469ae35fc8 <col:38> 'T' lvalue ParmVar 0x56469ae17558 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae17b28 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x56469ae17748 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae177c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae17a88 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x56469ae17888 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae17900 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae179a8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x56469ae36168 <col:60, line:545:5>
|     `-ReturnStmt 0x56469ae36158 <line:544:9, col:41>
|       `-CallExpr 0x56469ae36120 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae36058 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae360c0 <col:23> 'const char *' lvalue ParmVar 0x56469ae17888 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae360e0 <col:32> 'P' lvalue ParmVar 0x56469ae17900 'parser' 'P'
|         `-DeclRefExpr 0x56469ae36100 <col:40> 'T' lvalue ParmVar 0x56469ae179a8 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae1c4f8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x56469ae17b98 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae17c18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae1c458 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x56469ae17cd8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae17d50 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae1c370 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x56469ae362a0 <col:60, line:549:5>
|     `-ReturnStmt 0x56469ae36290 <line:548:9, col:41>
|       `-CallExpr 0x56469ae36258 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae36190 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae361f8 <col:23> 'const char *' lvalue ParmVar 0x56469ae17cd8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae36218 <col:32> 'P' lvalue ParmVar 0x56469ae17d50 'parser' 'P'
|         `-DeclRefExpr 0x56469ae36238 <col:40> 'T' lvalue ParmVar 0x56469ae1c370 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae1c948 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x56469ae1c568 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae1c5e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae1c8a8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x56469ae1c6a8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1c720 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae1c7c8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x56469ae363d8 <col:61, line:553:5>
|     `-ReturnStmt 0x56469ae363c8 <line:552:9, col:42>
|       `-CallExpr 0x56469ae36390 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae362c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae36330 <col:24> 'const char *' lvalue ParmVar 0x56469ae1c6a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae36350 <col:33> 'P' lvalue ParmVar 0x56469ae1c720 'parser' 'P'
|         `-DeclRefExpr 0x56469ae36370 <col:41> 'T' lvalue ParmVar 0x56469ae1c7c8 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae1ce28 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x56469ae1c9b8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae1ca38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae1cd88 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x56469ae1caf8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1cb78 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae1cbf0 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae1cc98 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x56469ae36550 <col:69, line:557:5>
|     `-ReturnStmt 0x56469ae36540 <line:556:9, col:46>
|       `-CallExpr 0x56469ae36500 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae36400 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae36480 <col:21> 'const char *' lvalue ParmVar 0x56469ae1caf8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae364a0 <col:30> 'int' lvalue ParmVar 0x56469ae1cb78 'flags' 'int'
|         |-DeclRefExpr 0x56469ae364c0 <col:37> 'P' lvalue ParmVar 0x56469ae1cbf0 'parser' 'P'
|         `-DeclRefExpr 0x56469ae364e0 <col:45> 'T' lvalue ParmVar 0x56469ae1cc98 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae1d138 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x56469ae1cea0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae1d098 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x56469ae1cf50 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1cfc8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x56469ae36690 <col:56, line:571:5>
|     `-ReturnStmt 0x56469ae36680 <line:570:9, col:48>
|       `-CallExpr 0x56469ae36648 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae36578 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae365e8 <col:30> 'const char *' lvalue ParmVar 0x56469ae1cf50 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae36608 <col:39> 'int' 0
|         `-DeclRefExpr 0x56469ae36628 <col:42> 'P' lvalue ParmVar 0x56469ae1cfc8 'parser' 'P'
|-FunctionTemplateDecl 0x56469ae1d4c8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x56469ae1d1a0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae1d428 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x56469ae1d250 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1d2d0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae1d348 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x56469ae36860 <col:67, line:576:5>
|     |-CallExpr 0x56469ae367e8 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae366a8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x56469ae366e8 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x56469ae366f8 <col:39> 'const char *' lvalue ParmVar 0x56469ae1d250 'keyword' 'const char *'
|     | |-BinaryOperator 0x56469ae367a8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x56469ae36758 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x56469ae36718 <col:48> 'int' lvalue ParmVar 0x56469ae1d2d0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x56469ae36790 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x56469ae36770 <col:56> 'const int' lvalue Var 0x56469ae0e190 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x56469ae367c8 <col:68> 'P' lvalue ParmVar 0x56469ae1d348 'parser' 'P'
|     `-ReturnStmt 0x56469ae36850 <line:575:9, col:17>
|       `-UnaryOperator 0x56469ae36838 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae36828 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae1d918 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x56469ae1d538 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae1d5b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae1d878 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x56469ae1d678 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1d6f0 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae1d798 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x56469ae369d0 <col:62, line:592:5>
|     `-ReturnStmt 0x56469ae369c0 <line:591:9, col:51>
|       `-CallExpr 0x56469ae36980 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae36890 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae36900 <col:30> 'const char *' lvalue ParmVar 0x56469ae1d678 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae36920 <col:39> 'int' 0
|         |-DeclRefExpr 0x56469ae36940 <col:42> 'P' lvalue ParmVar 0x56469ae1d6f0 'parser' 'P'
|         `-DeclRefExpr 0x56469ae36960 <col:50> 'T' lvalue ParmVar 0x56469ae1d798 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae1ddf8 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x56469ae1d988 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae1da08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae1dd58 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x56469ae1dac8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1db48 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae1dbc0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae1dc68 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x56469ae36bc8 <col:73, line:597:5>
|     |-CallExpr 0x56469ae36b48 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae369e8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x56469ae36a28 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x56469ae36a38 <col:39> 'const char *' lvalue ParmVar 0x56469ae1dac8 'keyword' 'const char *'
|     | |-BinaryOperator 0x56469ae36ae8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x56469ae36a98 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x56469ae36a58 <col:48> 'int' lvalue ParmVar 0x56469ae1db48 'flags' 'int'
|     | | `-ImplicitCastExpr 0x56469ae36ad0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x56469ae36ab0 <col:56> 'const int' lvalue Var 0x56469ae0e190 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x56469ae36b08 <col:68> 'P' lvalue ParmVar 0x56469ae1dbc0 'parser' 'P'
|     | `-DeclRefExpr 0x56469ae36b28 <col:76> 'T' lvalue ParmVar 0x56469ae1dc68 'x' 'T &'
|     `-ReturnStmt 0x56469ae36bb8 <line:596:9, col:17>
|       `-UnaryOperator 0x56469ae36ba0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae36b90 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae1e3a8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x56469ae1de70 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae1dee8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae1e308 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x56469ae1dfa8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1e020 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae1e1e0 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x56469ae36d38 <col:65, line:614:5>
|     `-ReturnStmt 0x56469ae36d28 <line:613:9, col:46>
|       `-CallExpr 0x56469ae36ce8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae36bf8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae36c68 <col:25> 'const char *' lvalue ParmVar 0x56469ae1dfa8 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae36c88 <col:34> 'int' 0
|         |-DeclRefExpr 0x56469ae36ca8 <col:37> 'P' lvalue ParmVar 0x56469ae1e020 'parser' 'P'
|         `-DeclRefExpr 0x56469ae36cc8 <col:45> 'Vector<T>' lvalue ParmVar 0x56469ae1e1e0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x56469ae1e7d8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x56469ae1e418 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae1e738 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x56469ae1e4d0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1e620 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x56469ae36f50 <col:55, line:618:5>
|     `-ReturnStmt 0x56469ae36f40 <line:617:9, col:55>
|       `-CallExpr 0x56469ae36f00 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae36d60 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae36dd0 <col:25> 'const char *' lvalue ParmVar 0x56469ae1e4d0 'keyword' 'const char *'
|         |-IntegerLiteral 0x56469ae36df0 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x56469ae36ec0 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x56469ae36ee0 <col:54> 'Vector<T>' lvalue ParmVar 0x56469ae1e620 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x56469ae1eda8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x56469ae1e840 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae1e8b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae1ed08 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x56469ae1e978 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1e9f8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae1ea70 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae1ebc0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x56469ae37148 <col:76, line:623:5>
|     |-CallExpr 0x56469ae370c8 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae36f68 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x56469ae36fa8 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x56469ae36fb8 <col:34> 'const char *' lvalue ParmVar 0x56469ae1e978 'keyword' 'const char *'
|     | |-BinaryOperator 0x56469ae37068 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x56469ae37018 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x56469ae36fd8 <col:43> 'int' lvalue ParmVar 0x56469ae1e9f8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x56469ae37050 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x56469ae37030 <col:51> 'const int' lvalue Var 0x56469ae0e190 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x56469ae37088 <col:63> 'P' lvalue ParmVar 0x56469ae1ea70 'parser' 'P'
|     | `-DeclRefExpr 0x56469ae370a8 <col:71> 'Vector<T>' lvalue ParmVar 0x56469ae1ebc0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x56469ae37138 <line:622:9, col:17>
|       `-UnaryOperator 0x56469ae37120 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae37110 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae1f2e8 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x56469ae1ee20 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae1ee98 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae1f248 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x56469ae1ef58 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae1efd8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae1f120 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x56469ae373b0 <col:66, line:627:5>
|     `-ReturnStmt 0x56469ae373a0 <line:626:9, col:59>
|       `-CallExpr 0x56469ae37360 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56469ae37178 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56469ae371e8 <col:25> 'const char *' lvalue ParmVar 0x56469ae1ef58 'keyword' 'const char *'
|         |-DeclRefExpr 0x56469ae37208 <col:34> 'int' lvalue ParmVar 0x56469ae1efd8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x56469ae37320 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x56469ae37340 <col:58> 'Vector<T>' lvalue ParmVar 0x56469ae1f120 'x' 'Vector<T> &'
|-CXXMethodDecl 0x56469ae1f378 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x56469ae37430 <col:25, line:633:5>
|   `-ReturnStmt 0x56469ae37420 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x56469ae37408 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x56469ae373d8 <col:16> 'const bool' lvalue ->_status 0x56469ae31358
|         `-CXXThisExpr 0x56469ae373c8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x56469ae1f4f8 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x56469ae1f430 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x56469ae37518 <col:27, line:639:5>
|   |-BinaryOperator 0x56469ae374c0 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x56469ae37448 <col:9> 'bool' lvalue ParmVar 0x56469ae1f430 'x' 'bool &'
|   | `-ImplicitCastExpr 0x56469ae374a8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x56469ae37478 <col:13> 'bool' lvalue ->_status 0x56469ae31358
|   |     `-CXXThisExpr 0x56469ae37468 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x56469ae37508 <line:638:9, col:17>
|     `-UnaryOperator 0x56469ae374f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469ae374e0 <col:17> 'Args *' this
|-CXXMethodDecl 0x56469ae1f678 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x56469ae1f5b8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x56469ae37608 <col:39, line:644:5>
|   |-BinaryOperator 0x56469ae375b0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x56469ae37538 <col:9> 'bool' lvalue ParmVar 0x56469ae1f5b8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x56469ae37598 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x56469ae37568 <col:13> 'const bool' lvalue ->_status 0x56469ae31358
|   |     `-CXXThisExpr 0x56469ae37558 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x56469ae375f8 <line:643:9, col:17>
|     `-UnaryOperator 0x56469ae375e0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469ae375d0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x56469ae1f740 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x56469ae376b0 <col:30, line:651:5>
|   `-ReturnStmt 0x56469ae376a0 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x56469ae37688 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x56469ae37658 <col:16> 'bool' lvalue ->_read_status 0x56469ae06970
|         `-ImplicitCastExpr 0x56469ae37638 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x56469ae37628 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x56469ae1f888 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x56469ae1f7f8 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x56469ae377b8 <col:32, line:658:5>
|   |-BinaryOperator 0x56469ae37760 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x56469ae376c8 <col:9> 'bool' lvalue ParmVar 0x56469ae1f7f8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x56469ae37748 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x56469ae37718 <col:13> 'bool' lvalue ->_read_status 0x56469ae06970
|   |     `-ImplicitCastExpr 0x56469ae376f8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x56469ae376e8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x56469ae377a8 <line:657:9, col:17>
|     `-UnaryOperator 0x56469ae37790 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469ae37780 <col:17> 'Args *' this
|-CXXMethodDecl 0x56469ae1f9d8 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x56469ae1f948 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x56469ae378c8 <col:44, line:663:5>
|   |-BinaryOperator 0x56469ae37870 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x56469ae377d8 <col:9> 'bool' lvalue ParmVar 0x56469ae1f948 'x' 'bool &'
|   | `-ImplicitCastExpr 0x56469ae37858 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x56469ae37828 <col:13> 'bool' lvalue ->_read_status 0x56469ae06970
|   |     `-ImplicitCastExpr 0x56469ae37808 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x56469ae377f8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x56469ae378b8 <line:662:9, col:17>
|     `-UnaryOperator 0x56469ae378a0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469ae37890 <col:17> 'const Args *' this
|-CXXMethodDecl 0x56469ae1faa0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x56469ae1fb68 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x56469ae1fc30 <line:684:5, col:17> col:9 used consume 'int ()'
|-CXXMethodDecl 0x56469ae1fcf8 <line:693:5, col:18> col:9 complete 'int ()'
|-FunctionTemplateDecl 0x56469ae20008 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x56469ae1fd98 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae1ff68 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x56469ae1fe78 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x56469ae37c80 <col:19, line:706:5>
|     `-IfStmt 0x56469ae37c58 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x56469ae379c8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x56469ae37b88 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x56469ae37b58 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x56469ae37b18 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x56469ae37a20 <col:42> '<bound member function type>' ->simple_slot 0x56469ae32710
|       |     | `-CXXThisExpr 0x56469ae37a10 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x56469ae37ab8 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x56469ae37a70 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x56469aa669f8
|       |     | `-DeclRefExpr 0x56469ae37a50 <col:55> 'T' lvalue ParmVar 0x56469ae1fe78 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x56469ae37af8 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x56469ae37c48 <line:705:13, col:34>
|         `-CallExpr 0x56469ae37c20 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x56469ae37ba8 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x56469ae37c00 <col:33> 'T' lvalue ParmVar 0x56469ae1fe78 'x' 'T &'
|-FunctionTemplateDecl 0x56469ae202d8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x56469ae20068 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae20238 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x56469ae20148 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x56469ae38060 <col:31, line:717:5>
|     |-DeclStmt 0x56469ae37dc0 <line:713:9, col:23>
|     | `-VarDecl 0x56469ae37ca8 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x56469ae37d98 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x56469ae37d20 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x56469ae37d78 <col:21> 'T' lvalue ParmVar 0x56469ae20148 'x' 'T &'
|     |-IfStmt 0x56469ae38010 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x56469ae37eb8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x56469ae37ff0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x56469ae37f90 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x56469ae37f20 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|     |   | `-DeclRefExpr 0x56469ae37f00 <col:14> 'T *' lvalue Var 0x56469ae37ca8 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x56469ae37fd0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x56469ae38048 <line:716:9, col:16>
|       `-DeclRefExpr 0x56469ae38028 <col:16> 'T *' lvalue Var 0x56469ae37ca8 's' 'T *'
|-FunctionTemplateDecl 0x56469ae206e8 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x56469ae20338 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x56469ae203b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x56469ae20648 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x56469ae20498 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x56469ae20538 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x56469ae38370 <col:37, line:726:5>
|     |-IfStmt 0x56469ae38300 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x56469ae38320 <line:723:13, col:26>
|     | | `-VarDecl 0x56469ae380c8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x56469ae381b8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x56469ae38140 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x56469ae38198 <col:25> 'T' lvalue ParmVar 0x56469ae20498 'x' 'T &'
|     | |-DeclRefExpr 0x56469ae381e0 <col:16> 'T *' lvalue Var 0x56469ae380c8 's' 'T *'
|     | `-BinaryOperator 0x56469ae382e0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x56469ae38290 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x56469ae38220 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|     |   | `-DeclRefExpr 0x56469ae38200 <col:14> 'T *' lvalue Var 0x56469ae380c8 's' 'T *'
|     |   `-DeclRefExpr 0x56469ae382c0 <col:18> 'const V' lvalue ParmVar 0x56469ae20538 'value' 'const V &'
|     `-ReturnStmt 0x56469ae38360 <line:725:9, col:17>
|       `-UnaryOperator 0x56469ae38348 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56469ae38338 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x56469ae20ae8 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x56469ae20750 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x56469ae20a48 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x56469ae20800 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae20880 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae20928 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x56469ae3d350 <col:65, line:737:5>
|     |-DeclStmt 0x56469ae38408 <line:732:9, col:26>
|     | `-VarDecl 0x56469ae383a0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x56469ae3d318 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x56469ae3d338 <line:733:13, col:58>
|       | `-VarDecl 0x56469ae38430 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x56469ae3c7c8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x56469ae3c798 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x56469ae3c780 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x56469ae3c760 <col:26, col:58> 'String' (CXXTemporary 0x56469ae3c760)
|       |           `-CXXMemberCallExpr 0x56469ae3c6f0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x56469ae3c660 <col:26> '<bound member function type>' ->find 0x56469ae31d58
|       |             | `-CXXThisExpr 0x56469ae38498 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x56469ae3c728 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x56469ae3c690 <col:31> 'const char *' lvalue ParmVar 0x56469ae20800 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x56469ae3c740 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x56469ae3c6b0 <col:40> 'int' lvalue ParmVar 0x56469ae20880 'flags' 'int'
|       |             `-DeclRefExpr 0x56469ae3c6d0 <col:47> 'Args::Slot *' lvalue Var 0x56469ae383a0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x56469ae3c880 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56469ae3c868 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56469ae3c848 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56469ae3c818 <col:20> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|       |       `-ImplicitCastExpr 0x56469ae3c800 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x56469ae3c7e0 <col:20> 'String' lvalue Var 0x56469ae38430 'str' 'String'
|       `-CompoundStmt 0x56469ae3d2f8 <col:61, line:736:9>
|         |-DeclStmt 0x56469ae3cd40 <line:734:13, col:76>
|         | `-VarDecl 0x56469ae3c8d8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x56469ae3cd10 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x56469ae3cc80 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x56469ae3ccc8 <col:60> 'T' lvalue ParmVar 0x56469ae20928 'variable' 'T &'
|         |     `-UnaryOperator 0x56469ae3ccf8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x56469ae3cce8 <col:71> 'Args *' this
|         `-CallExpr 0x56469ae3d2c8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x56469ae3cd68 <col:13> '<bound member function type>' ->postparse 0x56469ae31f68
|           | `-CXXThisExpr 0x56469ae3cd58 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x56469ae3d288 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x56469ae3cd98 <col:23> 'T *' lvalue Var 0x56469ae3c8d8 's' 'T *'
|           | `-CallExpr 0x56469ae3d248 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x56469ae3d020 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x56469ae3d120 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x56469ae3d140 <col:86> 'String' lvalue Var 0x56469ae38430 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x56469ae3d1f0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x56469ae3d180 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|           |   | `-DeclRefExpr 0x56469ae3d160 <col:92> 'T *' lvalue Var 0x56469ae3c8d8 's' 'T *'
|           |   `-UnaryOperator 0x56469ae3d230 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x56469ae3d220 <col:96> 'Args *' this
|           `-DeclRefExpr 0x56469ae3d2a8 <col:103> 'Args::Slot *' lvalue Var 0x56469ae383a0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x56469ae21038 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x56469ae20b58 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x56469ae20bd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x56469ae20f98 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x56469ae20c98 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae20d18 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae20db8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x56469ae20e58 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x56469ae3e1f0 <col:88, line:745:5>
|     |-DeclStmt 0x56469ae3d3e8 <line:741:9, col:26>
|     | `-VarDecl 0x56469ae3d380 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x56469ae3d608 <line:742:9, col:55>
|     | `-VarDecl 0x56469ae3d410 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x56469ae3d5f0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x56469ae3d5c0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x56469ae3d5a8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x56469ae3d588 <col:22, col:54> 'String' (CXXTemporary 0x56469ae3d588)
|     |           `-CXXMemberCallExpr 0x56469ae3d518 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x56469ae3d488 <col:22> '<bound member function type>' ->find 0x56469ae31d58
|     |             | `-CXXThisExpr 0x56469ae3d478 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x56469ae3d550 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x56469ae3d4b8 <col:27> 'const char *' lvalue ParmVar 0x56469ae20c98 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x56469ae3d568 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x56469ae3d4d8 <col:36> 'int' lvalue ParmVar 0x56469ae20d18 'flags' 'int'
|     |             `-DeclRefExpr 0x56469ae3d4f8 <col:43> 'Args::Slot *' lvalue Var 0x56469ae3d380 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x56469ae3d9e0 <line:743:9, col:72>
|     | `-VarDecl 0x56469ae3d658 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x56469ae3d9b0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x56469ae3d920 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x56469ae3d968 <col:56> 'T' lvalue ParmVar 0x56469ae20db8 'variable' 'T &'
|     |     `-UnaryOperator 0x56469ae3d998 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x56469ae3d988 <col:67> 'Args *' this
|     `-CallExpr 0x56469ae3e1c0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x56469ae3da08 <col:9> '<bound member function type>' ->postparse 0x56469ae31f68
|       | `-CXXThisExpr 0x56469ae3d9f8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x56469ae3e180 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x56469ae3da38 <col:19> 'T *' lvalue Var 0x56469ae3d658 's' 'T *'
|       | `-ParenExpr 0x56469ae3e160 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x56469ae3e130 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x56469ae3e118 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x56469ae3e100 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x56469ae3e0e0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x56469ae3e0b0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|       |     |       `-ImplicitCastExpr 0x56469ae3e098 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x56469ae3da58 <col:25> 'String' lvalue Var 0x56469ae3d410 'str' 'String'
|       |     |-CallExpr 0x56469ae3df08 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x56469ae3dce0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x56469ae3dde0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x56469ae3de00 <col:89> 'String' lvalue Var 0x56469ae3d410 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x56469ae3deb0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x56469ae3de40 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|       |     | | `-DeclRefExpr 0x56469ae3de20 <col:95> 'T *' lvalue Var 0x56469ae3d658 's' 'T *'
|       |     | `-UnaryOperator 0x56469ae3def0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x56469ae3dee0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x56469ae3e078 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x56469ae3e058 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x56469ae3e028 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x56469ae3dfd8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x56469ae3df68 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|       |         | | `-DeclRefExpr 0x56469ae3df48 <col:109> 'T *' lvalue Var 0x56469ae3d658 's' 'T *'
|       |         | `-DeclRefExpr 0x56469ae3e008 <col:113> 'const V' lvalue ParmVar 0x56469ae20e58 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x56469ae3e048 <col:120> 'bool' true
|       `-DeclRefExpr 0x56469ae3e1a0 <col:128> 'Args::Slot *' lvalue Var 0x56469ae3d380 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x56469ae21568 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x56469ae210b0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae21128 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae214c8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x56469ae211e8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae21268 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae212e0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae21388 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x56469ae3ede8 <col:75, line:754:5>
|     |-DeclStmt 0x56469ae3e298 <line:749:9, col:26>
|     | `-VarDecl 0x56469ae3e230 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x56469ae3edb0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x56469ae3edd0 <line:750:13, col:58>
|       | `-VarDecl 0x56469ae3e2c0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x56469ae3e4a0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x56469ae3e470 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x56469ae3e458 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x56469ae3e438 <col:26, col:58> 'String' (CXXTemporary 0x56469ae3e438)
|       |           `-CXXMemberCallExpr 0x56469ae3e3c8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x56469ae3e338 <col:26> '<bound member function type>' ->find 0x56469ae31d58
|       |             | `-CXXThisExpr 0x56469ae3e328 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x56469ae3e400 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x56469ae3e368 <col:31> 'const char *' lvalue ParmVar 0x56469ae211e8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x56469ae3e418 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x56469ae3e388 <col:40> 'int' lvalue ParmVar 0x56469ae21268 'flags' 'int'
|       |             `-DeclRefExpr 0x56469ae3e3a8 <col:47> 'Args::Slot *' lvalue Var 0x56469ae3e230 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x56469ae3e558 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56469ae3e540 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56469ae3e520 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56469ae3e4f0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|       |       `-ImplicitCastExpr 0x56469ae3e4d8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x56469ae3e4b8 <col:20> 'String' lvalue Var 0x56469ae3e2c0 'str' 'String'
|       `-CompoundStmt 0x56469ae3ed90 <col:61, line:753:9>
|         |-DeclStmt 0x56469ae3e930 <line:751:13, col:63>
|         | `-VarDecl 0x56469ae3e5a8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x56469ae3e900 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x56469ae3e870 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x56469ae3e8b8 <col:47> 'T' lvalue ParmVar 0x56469ae21388 'variable' 'T &'
|         |     `-UnaryOperator 0x56469ae3e8e8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x56469ae3e8d8 <col:58> 'Args *' this
|         `-CallExpr 0x56469ae3ed60 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x56469ae3e958 <col:13> '<bound member function type>' ->postparse 0x56469ae31f68
|           | `-CXXThisExpr 0x56469ae3e948 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x56469ae3ed20 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x56469ae3e988 <col:23> 'T *' lvalue Var 0x56469ae3e5a8 's' 'T *'
|           | `-CallExpr 0x56469ae3ece0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x56469ae3eb70 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x56469ae3ebb8 <col:56> 'P' lvalue ParmVar 0x56469ae212e0 'parser' 'P'
|           |   |-DeclRefExpr 0x56469ae3ebd8 <col:64> 'String' lvalue Var 0x56469ae3e2c0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x56469ae3ec88 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x56469ae3ec18 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|           |   | `-DeclRefExpr 0x56469ae3ebf8 <col:70> 'T *' lvalue Var 0x56469ae3e5a8 's' 'T *'
|           |   `-UnaryOperator 0x56469ae3ecc8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x56469ae3ecb8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x56469ae3ed40 <col:81> 'Args::Slot *' lvalue Var 0x56469ae3e230 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x56469ae21bc8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x56469ae215e0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x56469ae21658 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x56469ae216d8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x56469ae21b28 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x56469ae217a0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae21820 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae21898 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae21938 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x56469ae219d8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x56469ae3fb78 <col:98, line:762:5>
|     |-DeclStmt 0x56469ae3ee80 <line:758:9, col:26>
|     | `-VarDecl 0x56469ae3ee18 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x56469ae3f0a0 <line:759:9, col:55>
|     | `-VarDecl 0x56469ae3eea8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x56469ae3f088 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x56469ae3f058 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x56469ae3f040 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x56469ae3f020 <col:22, col:54> 'String' (CXXTemporary 0x56469ae3f020)
|     |           `-CXXMemberCallExpr 0x56469ae3efb0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x56469ae3ef20 <col:22> '<bound member function type>' ->find 0x56469ae31d58
|     |             | `-CXXThisExpr 0x56469ae3ef10 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x56469ae3efe8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x56469ae3ef50 <col:27> 'const char *' lvalue ParmVar 0x56469ae217a0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x56469ae3f000 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x56469ae3ef70 <col:36> 'int' lvalue ParmVar 0x56469ae21820 'flags' 'int'
|     |             `-DeclRefExpr 0x56469ae3ef90 <col:43> 'Args::Slot *' lvalue Var 0x56469ae3ee18 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x56469ae3f4c0 <line:760:9, col:59>
|     | `-VarDecl 0x56469ae3f0f8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x56469ae3f490 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x56469ae3f400 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x56469ae3f448 <col:43> 'T' lvalue ParmVar 0x56469ae21938 'variable' 'T &'
|     |     `-UnaryOperator 0x56469ae3f478 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x56469ae3f468 <col:54> 'Args *' this
|     `-CallExpr 0x56469ae3fb48 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x56469ae3f4e8 <col:9> '<bound member function type>' ->postparse 0x56469ae31f68
|       | `-CXXThisExpr 0x56469ae3f4d8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x56469ae3fb08 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x56469ae3f518 <col:19> 'T *' lvalue Var 0x56469ae3f0f8 's' 'T *'
|       | `-ParenExpr 0x56469ae3fae8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x56469ae3fab8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x56469ae3faa0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x56469ae3fa88 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x56469ae3fa68 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x56469ae3fa38 <col:25> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|       |     |       `-ImplicitCastExpr 0x56469ae3fa20 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x56469ae3f538 <col:25> 'String' lvalue Var 0x56469ae3eea8 'str' 'String'
|       |     |-CallExpr 0x56469ae3f890 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x56469ae3f720 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x56469ae3f768 <col:59> 'P' lvalue ParmVar 0x56469ae21898 'parser' 'P'
|       |     | |-DeclRefExpr 0x56469ae3f788 <col:67> 'String' lvalue Var 0x56469ae3eea8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x56469ae3f838 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x56469ae3f7c8 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|       |     | | `-DeclRefExpr 0x56469ae3f7a8 <col:73> 'T *' lvalue Var 0x56469ae3f0f8 's' 'T *'
|       |     | `-UnaryOperator 0x56469ae3f878 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x56469ae3f868 <col:77> 'Args *' this
|       |     `-ParenExpr 0x56469ae3fa00 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x56469ae3f9e0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x56469ae3f9b0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x56469ae3f960 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x56469ae3f8f0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|       |         | | `-DeclRefExpr 0x56469ae3f8d0 <col:87> 'T *' lvalue Var 0x56469ae3f0f8 's' 'T *'
|       |         | `-DeclRefExpr 0x56469ae3f990 <col:91> 'const V' lvalue ParmVar 0x56469ae219d8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x56469ae3f9d0 <col:98> 'bool' true
|       `-DeclRefExpr 0x56469ae3fb28 <col:106> 'Args::Slot *' lvalue Var 0x56469ae3ee18 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x56469ae22238 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x56469ae21c48 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae21cc8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x56469ae21d48 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x56469ae22198 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x56469ae21e10 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae21e90 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae21f08 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae21fa8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x56469ae22048 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x56469ae40b58 <col:60, line:773:5>
|     |-DeclStmt 0x56469ae3fc20 <line:767:9, col:26>
|     | `-VarDecl 0x56469ae3fbb8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x56469ae40b20 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x56469ae40b40 <line:768:13, col:58>
|       | `-VarDecl 0x56469ae3fc48 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x56469ae3fe28 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x56469ae3fdf8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x56469ae3fde0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x56469ae3fdc0 <col:26, col:58> 'String' (CXXTemporary 0x56469ae3fdc0)
|       |           `-CXXMemberCallExpr 0x56469ae3fd50 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x56469ae3fcc0 <col:26> '<bound member function type>' ->find 0x56469ae31d58
|       |             | `-CXXThisExpr 0x56469ae3fcb0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x56469ae3fd88 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x56469ae3fcf0 <col:31> 'const char *' lvalue ParmVar 0x56469ae21e10 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x56469ae3fda0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x56469ae3fd10 <col:40> 'int' lvalue ParmVar 0x56469ae21e90 'flags' 'int'
|       |             `-DeclRefExpr 0x56469ae3fd30 <col:47> 'Args::Slot *' lvalue Var 0x56469ae3fbb8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x56469ae3fee0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56469ae3fec8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56469ae3fea8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56469ae3fe78 <col:20> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|       |       `-ImplicitCastExpr 0x56469ae3fe60 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x56469ae3fe40 <col:20> 'String' lvalue Var 0x56469ae3fc48 'str' 'String'
|       `-CompoundStmt 0x56469ae40af8 <col:61, line:772:9>
|         |-DeclStmt 0x56469ae40220 <line:769:13, col:66>
|         | `-VarDecl 0x56469ae3ff38 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x56469ae401f0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x56469ae40160 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x56469ae401a8 <col:49> 'T1' lvalue ParmVar 0x56469ae21fa8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x56469ae401d8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x56469ae401c8 <col:61> 'Args *' this
|         |-DeclStmt 0x56469ae40590 <line:770:13, col:66>
|         | `-VarDecl 0x56469ae402a8 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x56469ae40560 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x56469ae404d0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x56469ae40518 <col:49> 'T2' lvalue ParmVar 0x56469ae22048 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x56469ae40548 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x56469ae40538 <col:61> 'Args *' this
|         `-CallExpr 0x56469ae40ac8 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x56469ae405b8 <col:13> '<bound member function type>' ->postparse 0x56469ae31f68
|           | `-CXXThisExpr 0x56469ae405a8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x56469ae40a88 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x56469ae40628 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x56469ae405e8 <col:23> 'T1 *' lvalue Var 0x56469ae3ff38 's1' 'T1 *'
|           | | `-DeclRefExpr 0x56469ae40608 <col:29> 'T2 *' lvalue Var 0x56469ae402a8 's2' 'T2 *'
|           | `-CallExpr 0x56469ae40a40 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x56469ae40810 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x56469ae40858 <col:63> 'P' lvalue ParmVar 0x56469ae21f08 'parser' 'P'
|           |   |-DeclRefExpr 0x56469ae40878 <col:71> 'String' lvalue Var 0x56469ae3fc48 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x56469ae40928 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x56469ae408b8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|           |   | `-DeclRefExpr 0x56469ae40898 <col:77> 'T1 *' lvalue Var 0x56469ae3ff38 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x56469ae409e8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x56469ae40978 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|           |   | `-DeclRefExpr 0x56469ae40958 <col:82> 'T2 *' lvalue Var 0x56469ae402a8 's2' 'T2 *'
|           |   `-UnaryOperator 0x56469ae40a28 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x56469ae40a18 <col:87> 'Args *' this
|           `-DeclRefExpr 0x56469ae40aa8 <col:94> 'Args::Slot *' lvalue Var 0x56469ae3fbb8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x56469ae22628 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x56469ae222b8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae22588 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x56469ae22370 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae223f0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae22468 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x56469ae41070 <col:67, line:780:5>
|     |-DeclStmt 0x56469ae40bf0 <line:777:9, col:26>
|     | `-VarDecl 0x56469ae40b88 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x56469ae41038 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x56469ae41058 <line:778:13, col:58>
|       | `-VarDecl 0x56469ae40c18 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x56469ae40df8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x56469ae40dc8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x56469ae40db0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x56469ae40d90 <col:26, col:58> 'String' (CXXTemporary 0x56469ae40d90)
|       |           `-CXXMemberCallExpr 0x56469ae40d20 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x56469ae40c90 <col:26> '<bound member function type>' ->find 0x56469ae31d58
|       |             | `-CXXThisExpr 0x56469ae40c80 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x56469ae40d58 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x56469ae40cc0 <col:31> 'const char *' lvalue ParmVar 0x56469ae22370 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x56469ae40d70 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x56469ae40ce0 <col:40> 'int' lvalue ParmVar 0x56469ae223f0 'flags' 'int'
|       |             `-DeclRefExpr 0x56469ae40d00 <col:47> 'Args::Slot *' lvalue Var 0x56469ae40b88 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x56469ae40eb0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56469ae40e98 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56469ae40e78 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56469ae40e48 <col:20> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|       |       `-ImplicitCastExpr 0x56469ae40e30 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x56469ae40e10 <col:20> 'String' lvalue Var 0x56469ae40c18 'str' 'String'
|       `-CallExpr 0x56469ae41008 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x56469ae40ed8 <col:13> '<bound member function type>' ->postparse 0x56469ae31f68
|         | `-CXXThisExpr 0x56469ae40ec8 <col:13> 'Args *' implicit this
|         |-CallExpr 0x56469ae40fb8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x56469ae40f28 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x56469ae40f08 <col:23> 'P' lvalue ParmVar 0x56469ae22468 'parser' 'P'
|         | |-DeclRefExpr 0x56469ae40f70 <col:36> 'String' lvalue Var 0x56469ae40c18 'str' 'String'
|         | `-UnaryOperator 0x56469ae40fa0 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x56469ae40f90 <col:42> 'Args *' this
|         `-DeclRefExpr 0x56469ae40fe8 <col:49> 'Args::Slot *' lvalue Var 0x56469ae40b88 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x56469ae229c8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x56469ae22698 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x56469ae22928 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x56469ae22750 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae227d0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae22848 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x56469ae419e0 <col:71, line:792:5>
|     |-DeclStmt 0x56469ae41108 <line:784:9, col:26>
|     | `-VarDecl 0x56469ae410a0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x56469ae411d8 <line:785:9, col:29>
|     | `-VarDecl 0x56469ae41138 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x56469ae411c0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x56469ae411a0 <col:28> 'int' 1
|     |-WhileStmt 0x56469ae41890 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x56469ae418b0 <line:786:16, col:61>
|     | | `-VarDecl 0x56469ae41200 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x56469ae413e0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x56469ae413b0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x56469ae41398 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x56469ae41378 <col:29, col:61> 'String' (CXXTemporary 0x56469ae41378)
|     | |           `-CXXMemberCallExpr 0x56469ae41308 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x56469ae41278 <col:29> '<bound member function type>' ->find 0x56469ae31d58
|     | |             | `-CXXThisExpr 0x56469ae41268 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x56469ae41340 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x56469ae412a8 <col:34> 'const char *' lvalue ParmVar 0x56469ae22750 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x56469ae41358 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x56469ae412c8 <col:43> 'int' lvalue ParmVar 0x56469ae227d0 'flags' 'int'
|     | |             `-DeclRefExpr 0x56469ae412e8 <col:50> 'Args::Slot *' lvalue Var 0x56469ae410a0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x56469ae41498 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56469ae41480 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56469ae41460 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56469ae41430 <col:23> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|     | |       `-ImplicitCastExpr 0x56469ae41418 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x56469ae413f8 <col:23> 'String' lvalue Var 0x56469ae41200 'str' 'String'
|     | `-CompoundStmt 0x56469ae41868 <col:64, line:790:9>
|     |   |-CallExpr 0x56469ae415f0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x56469ae414c0 <col:13> '<bound member function type>' ->postparse 0x56469ae31f68
|     |   | | `-CXXThisExpr 0x56469ae414b0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x56469ae415a0 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x56469ae41510 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x56469ae414f0 <col:23> 'P' lvalue ParmVar 0x56469ae22848 'parser' 'P'
|     |   | | |-DeclRefExpr 0x56469ae41558 <col:36> 'String' lvalue Var 0x56469ae41200 'str' 'String'
|     |   | | `-UnaryOperator 0x56469ae41588 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x56469ae41578 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x56469ae415d0 <col:49> 'Args::Slot *' lvalue Var 0x56469ae410a0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x56469ae41788 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x56469ae41620 <col:13> 'int' lvalue Var 0x56469ae41138 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x56469ae41770 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x56469ae41750 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x56469ae416b8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x56469ae41698 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x56469ae41680 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x56469ae41640 <col:28> 'int' lvalue Var 0x56469ae41138 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x56469ae41660 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x56469ae41738 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x56469ae41708 <col:49> 'bool' lvalue ->_read_status 0x56469ae06970
|     |   |         `-ImplicitCastExpr 0x56469ae416e8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x56469ae416d8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x56469ae41838 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x56469ae417a8 <col:13> 'int' lvalue ParmVar 0x56469ae227d0 'flags' 'int'
|     |     `-UnaryOperator 0x56469ae41820 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x56469ae41808 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x56469ae417e8 <col:23> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x56469ae419c0 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x56469ae418f8 <col:9> 'bool' lvalue ->_read_status 0x56469ae06970
|       | `-ImplicitCastExpr 0x56469ae418d8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x56469ae418c8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x56469ae419a0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x56469ae41980 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x56469ae41968 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x56469ae41928 <col:25> 'int' lvalue Var 0x56469ae41138 'read_status' 'int'
|           `-IntegerLiteral 0x56469ae41948 <col:40> 'int' 1
|-FunctionTemplateDecl 0x56469ae22ea8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x56469ae22a38 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae22ab8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae22e08 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x56469ae22b78 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae22bf8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae22c70 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae22d18 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x56469ae42970 <col:84, line:805:5>
|     |-DeclStmt 0x56469ae41a88 <line:796:9, col:26>
|     | `-VarDecl 0x56469ae41a20 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x56469ae41b58 <line:797:9, col:29>
|     | `-VarDecl 0x56469ae41ab8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x56469ae41b40 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x56469ae41b20 <col:28> 'int' 1
|     |-DeclStmt 0x56469ae41e90 <line:798:9, col:71>
|     | `-VarDecl 0x56469ae41ba8 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x56469ae41e60 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x56469ae41dd0 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x56469ae41e18 <col:55> 'T' lvalue ParmVar 0x56469ae22d18 'variable' 'T &'
|     |     `-UnaryOperator 0x56469ae41e48 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x56469ae41e38 <col:66> 'Args *' this
|     |-WhileStmt 0x56469ae42820 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x56469ae42840 <line:799:16, col:61>
|     | | `-VarDecl 0x56469ae41eb8 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x56469ae42098 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x56469ae42068 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x56469ae42050 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x56469ae42030 <col:29, col:61> 'String' (CXXTemporary 0x56469ae42030)
|     | |           `-CXXMemberCallExpr 0x56469ae41fc0 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x56469ae41f30 <col:29> '<bound member function type>' ->find 0x56469ae31d58
|     | |             | `-CXXThisExpr 0x56469ae41f20 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x56469ae41ff8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x56469ae41f60 <col:34> 'const char *' lvalue ParmVar 0x56469ae22b78 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x56469ae42010 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x56469ae41f80 <col:43> 'int' lvalue ParmVar 0x56469ae22bf8 'flags' 'int'
|     | |             `-DeclRefExpr 0x56469ae41fa0 <col:50> 'Args::Slot *' lvalue Var 0x56469ae41a20 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x56469ae42150 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56469ae42138 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56469ae42118 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56469ae420e8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|     | |       `-ImplicitCastExpr 0x56469ae420d0 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x56469ae420b0 <col:23> 'String' lvalue Var 0x56469ae41eb8 'str' 'String'
|     | `-CompoundStmt 0x56469ae427f8 <col:64, line:803:9>
|     |   |-CallExpr 0x56469ae42580 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x56469ae42178 <col:13> '<bound member function type>' ->postparse 0x56469ae31f68
|     |   | | `-CXXThisExpr 0x56469ae42168 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x56469ae42540 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x56469ae421a8 <col:23> 'T *' lvalue Var 0x56469ae41ba8 's' 'T *'
|     |   | | `-CallExpr 0x56469ae42500 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x56469ae42390 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x56469ae423d8 <col:56> 'P' lvalue ParmVar 0x56469ae22c70 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x56469ae423f8 <col:64> 'String' lvalue Var 0x56469ae41eb8 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x56469ae424a8 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x56469ae42438 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|     |   | |   | `-DeclRefExpr 0x56469ae42418 <col:70> 'T *' lvalue Var 0x56469ae41ba8 's' 'T *'
|     |   | |   `-UnaryOperator 0x56469ae424e8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x56469ae424d8 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x56469ae42560 <col:81> 'Args::Slot *' lvalue Var 0x56469ae41a20 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x56469ae42718 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x56469ae425b0 <col:13> 'int' lvalue Var 0x56469ae41ab8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x56469ae42700 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x56469ae426e0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x56469ae42648 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x56469ae42628 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x56469ae42610 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x56469ae425d0 <col:28> 'int' lvalue Var 0x56469ae41ab8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x56469ae425f0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x56469ae426c8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x56469ae42698 <col:49> 'bool' lvalue ->_read_status 0x56469ae06970
|     |   |         `-ImplicitCastExpr 0x56469ae42678 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x56469ae42668 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x56469ae427c8 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x56469ae42738 <col:13> 'int' lvalue ParmVar 0x56469ae22bf8 'flags' 'int'
|     |     `-UnaryOperator 0x56469ae427b0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x56469ae42798 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x56469ae42778 <col:23> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x56469ae42950 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x56469ae42888 <col:9> 'bool' lvalue ->_read_status 0x56469ae06970
|       | `-ImplicitCastExpr 0x56469ae42868 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x56469ae42858 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x56469ae42930 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x56469ae42910 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x56469ae428f8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x56469ae428b8 <col:25> 'int' lvalue Var 0x56469ae41ab8 'read_status' 'int'
|           `-IntegerLiteral 0x56469ae428d8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x56469ae23488 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x56469ae22f20 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x56469ae22f98 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x56469ae233e8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x56469ae23058 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x56469ae230d8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x56469ae23150 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x56469ae232a0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x56469ae43778 <col:87, line:821:5>
|     |-DeclStmt 0x56469ae42a20 <line:809:9, col:26>
|     | `-VarDecl 0x56469ae429b8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x56469ae42af0 <line:810:9, col:29>
|     | `-VarDecl 0x56469ae42a50 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x56469ae42ad8 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x56469ae42ab8 <col:28> 'int' 1
|     |-DeclStmt 0x56469ae42d38 <line:811:9, col:38>
|     | `-VarDecl 0x56469ae42c20 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x56469ae42d10 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x56469ae42c98 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x56469ae42cf0 <col:29> 'Vector<T>' lvalue ParmVar 0x56469ae232a0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x56469ae43628 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x56469ae43648 <line:812:16, col:61>
|     | | `-VarDecl 0x56469ae42d60 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x56469ae42f40 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x56469ae42f10 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x56469ae42ef8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x56469ae42ed8 <col:29, col:61> 'String' (CXXTemporary 0x56469ae42ed8)
|     | |           `-CXXMemberCallExpr 0x56469ae42e68 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x56469ae42dd8 <col:29> '<bound member function type>' ->find 0x56469ae31d58
|     | |             | `-CXXThisExpr 0x56469ae42dc8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x56469ae42ea0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x56469ae42e08 <col:34> 'const char *' lvalue ParmVar 0x56469ae23058 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x56469ae42eb8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x56469ae42e28 <col:43> 'int' lvalue ParmVar 0x56469ae230d8 'flags' 'int'
|     | |             `-DeclRefExpr 0x56469ae42e48 <col:50> 'Args::Slot *' lvalue Var 0x56469ae429b8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x56469ae42ff8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56469ae42fe0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56469ae42fc0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56469ae42f90 <col:23> '<bound member function type>' .operator int (String::*)() const 0x56469aa289b8
|     | |       `-ImplicitCastExpr 0x56469ae42f78 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x56469ae42f58 <col:23> 'String' lvalue Var 0x56469ae42d60 'str' 'String'
|     | `-CompoundStmt 0x56469ae435f0 <col:64, line:819:9>
|     |   |-DeclStmt 0x56469ae430b8 <line:813:13, col:23>
|     |   | `-VarDecl 0x56469ae43020 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x56469ae43098 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x56469ae43238 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x56469ae430e0 <col:13> '<bound member function type>' ->postparse 0x56469ae31f68
|     |   | | `-CXXThisExpr 0x56469ae430d0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x56469ae431e0 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x56469ae43130 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x56469ae43110 <col:23> 'P' lvalue ParmVar 0x56469ae23150 'parser' 'P'
|     |   | | |-DeclRefExpr 0x56469ae43178 <col:36> 'String' lvalue Var 0x56469ae42d60 'str' 'String'
|     |   | | |-DeclRefExpr 0x56469ae43198 <col:41> 'T' lvalue Var 0x56469ae43020 'sx' 'T'
|     |   | | `-UnaryOperator 0x56469ae431c8 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x56469ae431b8 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x56469ae43218 <col:53> 'Args::Slot *' lvalue Var 0x56469ae429b8 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x56469ae43390 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x56469ae432c8 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x56469ae43298 <col:17> 'bool' lvalue ->_read_status 0x56469ae06970
|     |   | |   `-ImplicitCastExpr 0x56469ae43278 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x56469ae43268 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x56469ae43368 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x56469ae43300 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x56469ae432e0 <col:17> 'Vector<T> *' lvalue Var 0x56469ae42c20 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x56469ae43348 <col:30> 'T' lvalue Var 0x56469ae43020 'sx' 'T'
|     |   |-BinaryOperator 0x56469ae43510 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x56469ae433a8 <col:13> 'int' lvalue Var 0x56469ae42a50 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x56469ae434f8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x56469ae434d8 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x56469ae43440 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x56469ae43420 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x56469ae43408 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x56469ae433c8 <col:28> 'int' lvalue Var 0x56469ae42a50 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x56469ae433e8 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x56469ae434c0 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x56469ae43490 <col:49> 'bool' lvalue ->_read_status 0x56469ae06970
|     |   |         `-ImplicitCastExpr 0x56469ae43470 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x56469ae43460 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x56469ae435c0 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x56469ae43530 <col:13> 'int' lvalue ParmVar 0x56469ae230d8 'flags' 'int'
|     |     `-UnaryOperator 0x56469ae435a8 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x56469ae43590 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x56469ae43570 <col:23> 'const int' lvalue Var 0x56469ae0dea8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x56469ae43758 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x56469ae43690 <col:9> 'bool' lvalue ->_read_status 0x56469ae06970
|       | `-ImplicitCastExpr 0x56469ae43670 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x56469ae43660 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x56469ae43738 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x56469ae43718 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x56469ae43700 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x56469ae436c0 <col:25> 'int' lvalue Var 0x56469ae42a50 'read_status' 'int'
|           `-IntegerLiteral 0x56469ae436e0 <col:40> 'int' 1
|-AccessSpecDecl 0x56469ae23500 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x56469ae23528 prev 0x56469ae0c1a8 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x56469ae23620 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x56469ae23710 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x56469ae437b0 <col:16, line:828:9>
| |-CXXDestructorDecl 0x56469ae23800 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x56469ae437c0 <col:25, line:830:9>
| |-CXXMethodDecl 0x56469ae23900 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x56469ae239b0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x56469ae23a58 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x56469ae23a58
| | `-ParmVarDecl 0x56469ae23b68 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x56469ae304c0 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x56469ae304c0
|   `-ParmVarDecl 0x56469ae305d8 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x56469ae23bd8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x56469ae23d38 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x56469ae23f30 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x56469ae23de0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x56469ae23e58 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x56469ae439a0 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x56469ae241e8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x56469ae43810 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56469ae437d0 <col:20> 'void *' lvalue ParmVar 0x56469ae23de0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x56469ae24250 '_slot' 'char *'
| | | `-CXXNewExpr 0x56469ae43898 <col:32, col:45> 'char *' array Function 0x56469a84c418 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x56469ae43880 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x56469ae43850 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x56469ae23e58 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x56469ae242b0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x56469ae43960 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x56469ae43920 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x56469ae23e58 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x56469ae43a20 <col:61, line:838:9>
| |-CXXDestructorDecl 0x56469ae24030 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x56469ae23800 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x56469ae43aa8 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x56469ae43a88 <line:840:13, col:22> 'void' array Function 0x56469a84c778 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x56469ae43a70 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x56469ae43a40 <col:22> 'char *' lvalue ->_slot 0x56469ae24250
| |         `-CXXThisExpr 0x56469ae43a30 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x56469ae24130 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x56469ae23900 Slot::store 'void ()' ]
| | `-CompoundStmt 0x56469ae43c98 <col:22, line:844:9>
| |   `-CallExpr 0x56469ae43c00 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x56469ae43be8 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x56469ae43bc8 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x56469a9581f8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x56469ae43c38 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x56469ae43b18 <col:20> 'void *' lvalue ->_ptr 0x56469ae241e8
| |     |   `-CXXThisExpr 0x56469ae43b08 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x56469ae43c68 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x56469ae43c50 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x56469ae43b58 <col:26> 'char *' lvalue ->_slot 0x56469ae24250
| |     |     `-CXXThisExpr 0x56469ae43b48 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x56469ae43c80 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x56469ae43b98 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x56469ae242b0
| |         `-CXXThisExpr 0x56469ae43b88 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x56469ae241e8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x56469ae24250 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x56469ae242b0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x56469ae30648 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x56469ae30648
| | `-ParmVarDecl 0x56469ae30758 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x56469ae307f8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x56469ae307f8
|   `-ParmVarDecl 0x56469ae30908 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x56469ae30aa8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x56469ae30978 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x56469ae30a18 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x56469ae30d40 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x56469ae30f38 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x56469ae30e08 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x56469ae310b8 '_ptr' 'T *'
|   | | `-ParenListExpr 0x56469ae43cd0 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x56469ae43cb0 <col:20> 'T *' lvalue ParmVar 0x56469ae30e08 'ptr' 'T *'
|   | `-CompoundStmt 0x56469ae43d20 <col:25, line:854:9>
|   |-CXXMethodDecl 0x56469ae31008 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x56469ae23900 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x56469ae43ed8 <col:22, line:857:9>
|   |   `-CallExpr 0x56469ae43ea8 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x56469ae43d30 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x56469adf4258 0x56469aa10b48 0x56469a9bac58
|   |     |-CXXOperatorCallExpr 0x56469ae43e38 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x56469ae43dc8 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x56469ac1daf8 0x56469ac1d718 0x56469ac1d348 0x56469ac1cf68 0x56469ac1cb88 0x56469ac1c7b8
|   |     | `-MemberExpr 0x56469ae43d98 <col:29> 'T *' lvalue ->_ptr 0x56469ae310b8
|   |     |   `-CXXThisExpr 0x56469ae43d88 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x56469ae43e78 <col:35> 'T' lvalue ->_slot 0x56469ae31118
|   |       `-CXXThisExpr 0x56469ae43e68 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x56469ae310b8 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x56469ae31118 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x56469ae31180 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x56469ae31280 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x56469ae312d0 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ae31260 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x56469ae31240 <col:31> 'int' 48
|-FieldDecl 0x56469ae312f8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x56469ae31358 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x56469ae313b8 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x56469ae314f0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x56469ae31600 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56469ae31660 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x56469ae31710 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x56469ae31938 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x56469ae31840 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x56469ae31a88 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x56469ae319f8 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x56469ae31d58 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x56469ae31b48 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x56469ae31bc8 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x56469ae31c70 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x56469ae31f68 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x56469ae31e20 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x56469ae31e98 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x56469ae32038 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x56469ae32188 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x56469ae320f0 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x56469ae324e8 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x56469ae32248 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x56469ae322c8 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x56469ae32348 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x56469ae323f8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x56469ae32710 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x56469ae325c0 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x56469ae32638 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x56469ae32a28 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x56469ae327c0 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x56469ae32988 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x56469ae32898 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.9*, %class.Vector.14, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.9*, %class.Vector.14, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AnyArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae5f490 <../dummy_inc/click/args.hh:1326:1, line:1338:1> line:1326:7 referenced class AnyArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ae5f5a8 <col:1, col:7> col:7 implicit class AnyArg
|-AccessSpecDecl 0x56469ae5f638 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x56469ae5f7e8 <line:1327:5, line:1329:5> line:1327:17 parse 'bool (const String &, const ArgContext &)' static
| |-ParmVarDecl 0x56469ae5f670 <col:23, col:36> col:37 'const String &'
| |-ParmVarDecl 0x56469ae5f6e8 <col:39, col:60> col:58 'const ArgContext &' cinit
| | `-DeclRefExpr 0x56469ae5fef8 <col:60> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x56469ae5ff78 <col:72, line:1329:5>
|   `-ReturnStmt 0x56469ae5ff68 <line:1328:9, col:16>
|     `-CXXBoolLiteralExpr 0x56469ae5ff58 <col:16> 'bool' true
|-CXXMethodDecl 0x56469ae5fa78 <line:1330:5, line:1333:5> line:1330:17 parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x56469ae5f8a8 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x56469ae5f920 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x56469ae5f998 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x56469ae5ff18 <col:79> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x56469ae60060 <col:91, line:1333:5>
|   |-CXXOperatorCallExpr 0x56469ae60008 <line:1331:9, col:18> 'String' lvalue
|   | |-ImplicitCastExpr 0x56469ae5fff0 <col:16> 'String &(*)(const String &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56469ae5ffd0 <col:16> 'String &(const String &)' lvalue CXXMethod 0x56469aa44fd0 'operator=' 'String &(const String &)'
|   | |-DeclRefExpr 0x56469ae5ff90 <col:9> 'String' lvalue ParmVar 0x56469ae5f920 'result' 'String &'
|   | `-DeclRefExpr 0x56469ae5ffb0 <col:18> 'const String' lvalue ParmVar 0x56469ae5f8a8 'str' 'const String &'
|   `-ReturnStmt 0x56469ae60050 <line:1332:9, col:16>
|     `-CXXBoolLiteralExpr 0x56469ae60040 <col:16> 'bool' true
|-CXXMethodDecl 0x56469ae5fe28 <line:1334:5, line:1337:5> line:1334:17 parse 'bool (const String &, Vector<String> &, const ArgContext &)' static
| |-ParmVarDecl 0x56469ae5fb40 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x56469ae5fc90 <col:42, col:58> col:58 used result 'Vector<String> &'
| |-ParmVarDecl 0x56469ae5fd08 <col:66, col:87> col:85 'const ArgContext &' cinit
| | `-DeclRefExpr 0x56469ae5ff38 <col:87> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x56469ae60198 <col:99, line:1337:5>
|   |-CXXMemberCallExpr 0x56469ae60150 <line:1335:9, col:29> 'void'
|   | |-MemberExpr 0x56469ae60120 <col:9, col:16> '<bound member function type>' .push_back 0x56469ac9daa8
|   | | `-DeclRefExpr 0x56469ae60080 <col:9> 'Vector<String>':'Vector<String>' lvalue ParmVar 0x56469ae5fc90 'result' 'Vector<String> &'
|   | `-DeclRefExpr 0x56469ae60100 <col:26> 'const String' lvalue ParmVar 0x56469ae5fb40 'str' 'const String &'
|   `-ReturnStmt 0x56469ae60188 <line:1336:9, col:16>
|     `-CXXBoolLiteralExpr 0x56469ae60178 <col:16> 'bool' true
|-CXXConstructorDecl 0x56469aebb090 <line:1326:7> col:7 implicit referenced constexpr AnyArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56469aebb198 <col:7> col:7 implicit constexpr AnyArg 'void (const AnyArg &)' inline default trivial noexcept-unevaluated 0x56469aebb198
| `-ParmVarDecl 0x56469aebb2a8 <col:7> col:7 'const AnyArg &'
|-CXXConstructorDecl 0x56469aebb348 <col:7> col:7 implicit used constexpr AnyArg 'void (AnyArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56469aebb458 <col:7> col:7 'AnyArg &&'
| `-CompoundStmt 0x56469aebbb90 <col:7>
`-CXXDestructorDecl 0x56469aebb4f8 <col:7> col:7 implicit referenced ~AnyArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.AnyArg = type { i8 }
  NonVirtualBaseLLVMType:%class.AnyArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae4e7e0 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ae4e8f8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x56469ae4e988 <col:16, col:22> col:16 public
|-EnumDecl 0x56469ae4e9b0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x56469ae4eab0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x56469ae4ed00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae4ea90 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56469ae4ea70 <col:21> 'int' 0
| |-EnumConstantDecl 0x56469ae4eb40 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x56469ae4ed18 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae4eb20 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x56469ae4eb00 <col:24> 'int' 22
| |-EnumConstantDecl 0x56469ae4ebd0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x56469ae4ed30 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae4ebb0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x56469ae4eb90 <col:24> 'int' 34
| |-EnumConstantDecl 0x56469ae4ec60 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x56469ae4ed48 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ae4ec40 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x56469ae4ec20 <col:25> 'int' 95
| `-EnumConstantDecl 0x56469ae4ecb0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x56469ae506c0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56469ae50af8 <col:7>
|-CXXConstructorDecl 0x56469ae507c8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x56469ae507c8
| `-ParmVarDecl 0x56469ae508d8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x56469ae50978 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x56469ae50978
| `-ParmVarDecl 0x56469ae50a88 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x56469ae52bf8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae4ed78 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x56469ae4eed8 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x56469ae4ef68 <col:32, col:38> col:32 public
|-TypedefDecl 0x56469ae4efa0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x56469a84e770 'uint32_t' sugar
|   |-Typedef 0x56469a75b4c8 'uint32_t'
|   `-TypedefType 0x56469a7345a0 '__uint32_t' sugar
|     |-Typedef 0x56469a734198 '__uint32_t'
|     `-BuiltinType 0x56469a6f2620 'unsigned int'
|-CXXConstructorDecl 0x56469ae4f0e8 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x56469ae4f010 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x56469ae505c8 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x56469ae50b08 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56469ae4fe80 'base' 'int'
| | `-ImplicitCastExpr 0x56469ae50668 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x56469ae50628 <col:16> 'int' lvalue ParmVar 0x56469ae4f010 'b' 'int'
| `-CompoundStmt 0x56469ae50b78 <col:19, line:1046:5>
|-CXXMethodDecl 0x56469ae4f5e0 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x56469ae4f1b0 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x56469ae4f230 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x56469ae4f2a8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x56469ae4f328 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x56469ae4f3e8 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x56469ae4f468 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x56469ae4fa38 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x56469ae4f6b0 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x56469ae4f998 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x56469ae4f758 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x56469ae4f7f8 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x56469ae4f870 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x56469ae505e8 <col:82> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x56469ae51aa8 <col:94, line:1067:5>
|     |-DeclStmt 0x56469ae50d08 <line:1054:9, col:64>
|     | `-VarDecl 0x56469ae50b98 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x56469ae50cc0 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x56469ae50f28 <line:1055:9, col:91>
|     | `-VarDecl 0x56469ae50d38 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x56469ae50f00 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x56469ae50ee0 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x56469ae50e90 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x56469ae50e70 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x56469ae50e18 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x56469ae50dc8 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x56469ae50df8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x56469ae50e58 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x56469ae50e38 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x56469ae50ec0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x56469ae51088 <line:1056:9, col:27>
|     | `-VarDecl 0x56469ae51020 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x56469ae514d0 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x56469ae51400 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x56469ae51380 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x56469ac18978 0x56469aa61f58 0x56469aa61c30 0x56469aa52400 0x56469aa520b0 0x56469aa519a0 0x56469aa24310 0x56469a9b15c0
|     | | |-CallExpr 0x56469ae512c0 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x56469ae510b0 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x56469ae51160 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x56469ae51130 <col:19, col:23> '<bound member function type>' .begin 0x56469aa41608
|     | | | |   `-DeclRefExpr 0x56469ae51110 <col:19> 'const String' lvalue ParmVar 0x56469ae4f758 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x56469ae511d0 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x56469ae511a0 <col:32, col:36> '<bound member function type>' .end 0x56469aa41820
|     | | | |   `-DeclRefExpr 0x56469ae51180 <col:32> 'const String' lvalue ParmVar 0x56469ae4f758 'str' 'const String &'
|     | | | |-DeclRefExpr 0x56469ae511f0 <col:43> 'const bool' lvalue Var 0x56469ae50b98 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x56469ae51258 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x56469ae51238 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x56469ae51280 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x56469ae51020 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x56469ae512a0 <col:73> 'const int' lvalue Var 0x56469ae50d38 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x56469ae51360 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x56469ae51330 <col:16, col:20> '<bound member function type>' .end 0x56469aa41820
|     | |     `-DeclRefExpr 0x56469ae51310 <col:16> 'const String' lvalue ParmVar 0x56469ae4f758 'str' 'const String &'
|     | `-BinaryOperator 0x56469ae514b0 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x56469ae51448 <col:13> 'int' lvalue ->status 0x56469ae4fee8
|     |   | `-CXXThisExpr 0x56469ae51438 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x56469ae51498 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x56469ae51478 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x56469ae4eb40 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x56469ae51720 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x56469ae51608 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x56469ae515f0 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x56469ae515d8 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x56469ae514f8 <col:13> 'int' lvalue ->status 0x56469ae4fee8
|     | | |     `-CXXThisExpr 0x56469ae514e8 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x56469ae515b8 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x56469ae51588 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x56469ae51538 <col:23> 'int' lvalue ->status 0x56469ae4fee8
|     | |   |   `-CXXThisExpr 0x56469ae51528 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x56469ae515a0 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x56469ae51568 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x56469ae4ebd0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x56469ae51700 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x56469ae516a0 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x56469ae51648 <col:13, col:18> '<bound member function type>' .error 0x56469ae02ac0
|     |   | | `-DeclRefExpr 0x56469ae51628 <col:13> 'const ArgContext' lvalue ParmVar 0x56469ae4f870 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x56469ae516c8 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x56469ae51678 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x56469ae516f0 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x56469ae516e0 <col:20> 'bool' false
|     |-DeclStmt 0x56469ae518f8 <line:1064:9, col:64>
|     | `-TypedefDecl 0x56469ae518a0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x56469ae51830 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x56469ae51a58 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56469ae51910 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x56469a9e57a8
|     | |-DeclRefExpr 0x56469ae51958 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x56469ae51020 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x56469ae51a28 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x56469ae519a0 <col:64> 'V' lvalue ParmVar 0x56469ae4f7f8 'result' 'V &'
|     `-ReturnStmt 0x56469ae51a98 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x56469ae51a88 <col:16> 'bool' true
|-FunctionTemplateDecl 0x56469ae4fdf8 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x56469ae4faa8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x56469ae4fd58 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x56469ae4fb58 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x56469ae4fbf8 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x56469ae4fc70 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x56469ae50608 <col:71> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x56469ae52218 <col:83, line:1083:5>
| |   |-DeclStmt 0x56469ae51b70 <line:1071:9, col:12>
| |   | `-VarDecl 0x56469ae51b08 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x56469ae521f0 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x56469ae51e00 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x56469ae51c88 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x56469ae51c50 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x56469ae51b98 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x56469ae51bf0 <col:31> 'const String' lvalue ParmVar 0x56469ae4fb58 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x56469ae51c10 <col:36> 'V' lvalue Var 0x56469ae51b08 'x' 'V'
| |     | |   `-DeclRefExpr 0x56469ae51c30 <col:39> 'const ArgContext' lvalue ParmVar 0x56469ae4fc70 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x56469ae51de0 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x56469ae51dc0 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x56469ae51da8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x56469ae51d90 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x56469ae51cb0 <col:17> 'int' lvalue ->status 0x56469ae4fee8
| |     |     |     `-CXXThisExpr 0x56469ae51ca0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x56469ae51d70 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x56469ae51d40 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x56469ae51cf0 <col:27> 'int' lvalue ->status 0x56469ae4fee8
| |     |       |   `-CXXThisExpr 0x56469ae51ce0 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x56469ae51d58 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x56469ae51d20 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x56469ae4ebd0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x56469ae51e30 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x56469ae51e20 <col:20> 'bool' false
| |     `-IfStmt 0x56469ae521c8 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x56469ae51ed0 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x56469ae51ea0 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56469ae51e50 <col:18> 'int' lvalue ->status 0x56469ae4fee8
| |       | |   `-CXXThisExpr 0x56469ae51e40 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x56469ae51eb8 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x56469ae51e80 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x56469ae4ebd0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x56469ae52108 <col:42, line:1079:9>
| |       | |-CallExpr 0x56469ae520b0 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x56469ae51f00 <line:1076:13> '<bound member function type>' ->range_error 0x56469ae504f8
| |       | | | `-CXXThisExpr 0x56469ae51ef0 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x56469ae51f30 <col:25> 'const ArgContext' lvalue ParmVar 0x56469ae4fc70 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x56469ae52010 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x56469ae52088 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x56469ae52068 <col:43> 'V' lvalue Var 0x56469ae51b08 'x' 'V'
| |       | `-ReturnStmt 0x56469ae520f8 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x56469ae520e8 <col:20> 'bool' false
| |       `-CompoundStmt 0x56469ae521a8 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x56469ae52168 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x56469ae52128 <col:13> 'V' lvalue ParmVar 0x56469ae4fbf8 'result' 'V &'
| |         | `-DeclRefExpr 0x56469ae52148 <col:22> 'V' lvalue Var 0x56469ae51b08 'x' 'V'
| |         `-ReturnStmt 0x56469ae52198 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x56469ae52188 <col:20> 'bool' true
| |-CXXMethodDecl 0x56469ae6f5b8 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
| | |-TemplateArgument type 'int'
| | |-ParmVarDecl 0x56469ae6f398 <col:16, col:30> col:30 str 'const String &'
| | |-ParmVarDecl 0x56469ae6f468 <col:35, col:38> col:38 result 'int &'
| | `-ParmVarDecl 0x56469ae6f4d0 <col:46, col:71> col:64 args 'const ArgContext &'
| `-CXXMethodDecl 0x56469aee6b28 <col:5, line:1083:5> line:1070:10 used parse 'bool (const String &, unsigned int &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x56469aee6900 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x56469aee69d8 <col:35, col:38> col:38 result 'unsigned int &'
|   `-ParmVarDecl 0x56469aee6a40 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x56469ae50608 <col:71> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
|-FieldDecl 0x56469ae4fe80 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x56469ae4fee8 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x56469ae4ff38 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x56469ae501f0 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x56469ae4ff78 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x56469ae4fff8 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x56469ae50070 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x56469ae500f0 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x56469ae504f8 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x56469ae502c0 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x56469ae50338 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x56469ae503d0 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x56469ae52a78 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x56469ae52a78
| `-ParmVarDecl 0x56469ae52b88 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x56469ae52d08 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x56469ae52d08
| `-ParmVarDecl 0x56469ae52e18 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x56469ae6f118 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class VariableExpander
         0 |   (VariableExpander vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Script::Expander
         0 |   class VariableExpander (primary base)
         0 |     (VariableExpander vtable pointer)
         8 |   class Script * script
        16 |   class ErrorHandler * errh
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac92570 <../dummy_inc/click/variableenv.hh:9:1, line:16:1> line:9:7 referenced class VariableExpander definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ac92688 <col:1, col:7> col:7 implicit referenced class VariableExpander
|-AccessSpecDecl 0x56469ac92718 <col:26, col:32> col:26 public
|-CXXConstructorDecl 0x56469ac927a0 <line:11:5, col:26> col:5 used VariableExpander 'void ()'
| `-CompoundStmt 0x56469ac92eb8 <col:24, col:26>
|-CXXDestructorDecl 0x56469ac92890 <line:12:5, col:35> col:13 used ~VariableExpander 'void () noexcept' virtual
| `-CompoundStmt 0x56469ac92ec8 <col:33, col:35>
|-CXXMethodDecl 0x56469ac92c20 <line:14:5, col:94> col:17 expand 'int (const String &, String &, int, int) const' virtual pure
| |-ParmVarDecl 0x56469ac92980 <col:24, col:38> col:38 var 'const String &'
| |-ParmVarDecl 0x56469ac929f8 <col:43, col:51> col:51 expansion 'String &'
| |-ParmVarDecl 0x56469ac92a78 <col:62, col:66> col:66 vartype 'int'
| `-ParmVarDecl 0x56469ac92af8 <col:75, col:79> col:79 depth 'int'
|-CXXMethodDecl 0x56469ac92d38 <line:9:7> col:7 implicit operator= 'VariableExpander &(const VariableExpander &)' inline default noexcept-unevaluated 0x56469ac92d38
| `-ParmVarDecl 0x56469ac92e48 <col:7> col:7 'const VariableExpander &'
`-CXXConstructorDecl 0x56469ac9f258 <col:7> col:7 implicit constexpr VariableExpander 'void (const VariableExpander &)' inline default noexcept-unevaluated 0x56469ac9f258
  `-ParmVarDecl 0x56469ac9f368 <col:7> col:7 'const VariableExpander &'

Layout: <CGRecordLayout
  LLVMType:%class.VariableExpander = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.VariableExpander = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469acb1d18 <../elements/standard/script.hh:509:5, line:513:5> line:509:11 referenced class Expander definition
|-DefinitionData polymorphic
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'VariableExpander'
|-CXXRecordDecl 0x56469acb1e78 <col:5, col:11> col:11 implicit class Expander
|-AccessSpecDecl 0x56469acb1f08 <col:48, col:54> col:48 public
|-FieldDecl 0x56469acb1f40 <line:510:9, col:17> col:17 referenced script 'Script *'
|-FieldDecl 0x56469acb1fa0 <line:511:9, col:23> col:23 referenced errh 'ErrorHandler *'
|-CXXMethodDecl 0x56469acb2250 <line:512:9, col:82> col:13 expand 'int (const String &, String &, int, int) const'
| |-Overrides: [ 0x56469ac92c20 VariableExpander::expand 'int (const String &, String &, int, int) const' ]
| |-ParmVarDecl 0x56469acb2000 <col:20, col:34> col:34 var 'const String &'
| |-ParmVarDecl 0x56469acb2078 <col:39, col:47> col:47 expansion 'String &'
| |-ParmVarDecl 0x56469acb20f8 <col:58, col:62> col:62 vartype 'int'
| `-ParmVarDecl 0x56469acb2178 <col:71, col:75> col:75 depth 'int'
|-CXXConstructorDecl 0x56469acb2350 <line:509:11> col:11 implicit constexpr Expander 'void (const Script::Expander &)' inline default noexcept-unevaluated 0x56469acb2350
| `-ParmVarDecl 0x56469acb2468 <col:11> col:11 'const Script::Expander &'
|-CXXConstructorDecl 0x56469acb2508 <col:11> col:11 implicit constexpr Expander 'void (Script::Expander &&)' inline default noexcept-unevaluated 0x56469acb2508
| `-ParmVarDecl 0x56469acb2618 <col:11> col:11 'Script::Expander &&'
|-CXXMethodDecl 0x56469acb26b8 <col:11> col:11 implicit operator= 'Script::Expander &(const Script::Expander &)' inline default noexcept-unevaluated 0x56469acb26b8
| `-ParmVarDecl 0x56469acb27c8 <col:11> col:11 'const Script::Expander &'
|-CXXMethodDecl 0x56469acb2838 <col:11> col:11 implicit operator= 'Script::Expander &(Script::Expander &&)' inline default noexcept-unevaluated 0x56469acb2838
| `-ParmVarDecl 0x56469acb2948 <col:11> col:11 'Script::Expander &&'
|-CXXDestructorDecl 0x56469acb29d0 <col:11> col:11 implicit used ~Expander 'void () noexcept' inline default
| |-Overrides: [ 0x56469ac92890 VariableExpander::~VariableExpander 'void () noexcept' ]
| `-CompoundStmt 0x56469aef3e70 <col:11>
`-CXXConstructorDecl 0x56469aef3cb0 <col:11> col:11 implicit used Expander 'void () noexcept(false)' inline default
  |-CXXCtorInitializer 'VariableExpander'
  | `-CXXConstructExpr 0x56469aef3dd0 <col:11> 'VariableExpander' 'void ()'
  `-CompoundStmt 0x56469aef3e38 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"class.Script::Expander" = type { %class.VariableExpander, %class.Script*, %class.ErrorHandler* }
  NonVirtualBaseLLVMType:%"class.Script::Expander" = type { %class.VariableExpander, %class.Script*, %class.ErrorHandler* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct _IO_FILE
         0 |   int _flags
         8 |   char * _IO_read_ptr
        16 |   char * _IO_read_end
        24 |   char * _IO_read_base
        32 |   char * _IO_write_base
        40 |   char * _IO_write_ptr
        48 |   char * _IO_write_end
        56 |   char * _IO_buf_base
        64 |   char * _IO_buf_end
        72 |   char * _IO_save_base
        80 |   char * _IO_backup_base
        88 |   char * _IO_save_end
        96 |   struct _IO_marker * _markers
       104 |   struct _IO_FILE * _chain
       112 |   int _fileno
       116 |   int _flags2
       120 |   __off_t _old_offset
       128 |   unsigned short _cur_column
       130 |   signed char _vtable_offset
       131 |   char [1] _shortbuf
       136 |   _IO_lock_t * _lock
       144 |   __off64_t _offset
       152 |   struct _IO_codecvt * _codecvt
       160 |   struct _IO_wide_data * _wide_data
       168 |   struct _IO_FILE * _freeres_list
       176 |   void * _freeres_buf
       184 |   size_t __pad5
       192 |   int _mode
       196 |   char [20] _unused2
           | [sizeof=216, dsize=216, align=8,
           |  nvsize=216, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469a914ed8 prev 0x56469a914bd0 </usr/include/bits/types/struct_FILE.h:49:1, line:99:1> line:49:8 struct _IO_FILE definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56469a914fd0 <col:1, col:8> col:8 implicit struct _IO_FILE
|-FieldDecl 0x56469a915078 <line:51:3, col:7> col:7 _flags 'int'
|-FieldDecl 0x56469a9150e0 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
|-FieldDecl 0x56469a915148 <line:55:3, col:9> col:9 _IO_read_end 'char *'
|-FieldDecl 0x56469a9151b0 <line:56:3, col:9> col:9 _IO_read_base 'char *'
|-FieldDecl 0x56469a915218 <line:57:3, col:9> col:9 _IO_write_base 'char *'
|-FieldDecl 0x56469a915280 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
|-FieldDecl 0x56469a9152e8 <line:59:3, col:9> col:9 _IO_write_end 'char *'
|-FieldDecl 0x56469a915350 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
|-FieldDecl 0x56469a9153b8 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
|-FieldDecl 0x56469a915420 <line:64:3, col:9> col:9 _IO_save_base 'char *'
|-FieldDecl 0x56469a915488 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
|-FieldDecl 0x56469a9154f0 <line:66:3, col:9> col:9 _IO_save_end 'char *'
|-FieldDecl 0x56469a9155f0 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
|-FieldDecl 0x56469a9156c0 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
|-FieldDecl 0x56469a915728 <line:72:3, col:7> col:7 _fileno 'int'
|-FieldDecl 0x56469a915790 <line:73:3, col:7> col:7 _flags2 'int'
|-FieldDecl 0x56469a9157f0 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
|-FieldDecl 0x56469a915858 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
|-FieldDecl 0x56469a9158c0 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
|-FieldDecl 0x56469a9159a8 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
|-FieldDecl 0x56469a915a58 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
|-FieldDecl 0x56469a915ab8 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
|-FieldDecl 0x56469a915bc0 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
|-FieldDecl 0x56469a915cc0 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
|-FieldDecl 0x56469a915d38 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
|-FieldDecl 0x56469a915da0 <line:94:3, col:9> col:9 _freeres_buf 'void *'
|-FieldDecl 0x56469a915e00 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
|-FieldDecl 0x56469a915e68 <line:96:3, col:7> col:7 _mode 'int'
`-FieldDecl 0x56469a9160c8 <line:98:3, col:74> col:8 _unused2 'char [20]'

Layout: <CGRecordLayout
  LLVMType:%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
  NonVirtualBaseLLVMType:%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HandlerCall
         0 |   class Element * _e
         8 |   const class Handler * _h
        16 |   class String _value
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469adf4448 prev 0x56469acb79a0 <../dummy_inc/click/handlercall.hh:143:1, line:470:1> line:143:7 referenced class HandlerCall definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56469adf4540 <col:1, col:7> col:7 implicit referenced class HandlerCall
|-AccessSpecDecl 0x56469adf45d0 <col:21, col:27> col:21 public
|-CXXMethodDecl 0x56469adf4808 <line:147:5, line:148:30> line:147:19 call_read 'String (Element *, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adf4608 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x56469adf4680 <col:41, col:55> col:55 hname 'const String &'
| `-ParmVarDecl 0x56469adf46f8 <line:148:8, col:29> col:22 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc590 <col:29> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc570 <col:29> 'int' 0
|-CXXMethodDecl 0x56469adf4aa8 <line:149:5, line:150:30> line:149:19 call_read 'String (const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adf48d0 <col:29, col:43> col:43 hdesc 'const String &'
| |-ParmVarDecl 0x56469adf4948 <col:50, col:65> col:65 context 'const Element *'
| `-ParmVarDecl 0x56469adf49c0 <line:150:8, col:29> col:22 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc5c8 <col:29> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc5a8 <col:29> 'int' 0
|-CXXMethodDecl 0x56469adf4d50 <line:151:5, line:152:28> line:151:16 call_write 'int (Element *, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adf4b70 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x56469adf4be8 <col:39, col:53> col:53 hname 'const String &'
| `-ParmVarDecl 0x56469adf4c60 <line:152:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc600 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc5e0 <col:27> 'int' 0
|-CXXMethodDecl 0x56469adf5080 <line:153:5, line:154:28> line:153:16 used call_write 'int (Element *, const String &, const String &, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adf4e18 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x56469adf4e90 <col:39, col:53> col:53 hname 'const String &'
| |-ParmVarDecl 0x56469adf4f08 <col:60, col:74> col:74 value 'const String &'
| `-ParmVarDecl 0x56469adf4f80 <line:154:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc638 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc618 <col:27> 'int' 0
|-CXXMethodDecl 0x56469adf5330 <line:155:5, line:156:52> line:155:16 call_write 'int (const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adf5150 <col:27, col:41> col:41 hdesc 'const String &'
| |-ParmVarDecl 0x56469adf51c8 <line:156:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x56469adf5240 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc670 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc650 <col:51> 'int' 0
|-CXXMethodDecl 0x56469adf5660 <line:157:5, line:158:52> line:157:16 call_write 'int (const String &, const String &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adf53f8 <col:27, col:41> col:41 hdesc 'const String &'
| |-ParmVarDecl 0x56469adf5470 <col:48, col:62> col:62 value 'const String &'
| |-ParmVarDecl 0x56469adf54e8 <line:158:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x56469adf5560 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc6a8 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc688 <col:51> 'int' 0
|-CXXConstructorDecl 0x56469adf5758 <line:167:5, line:169:5> line:167:5 HandlerCall 'void ()'
| |-CXXCtorInitializer Field 0x56469adfb658 '_e' 'Element *'
| | `-ImplicitCastExpr 0x56469adfca88 <line:168:7> 'Element *' <NullToPointer>
| |   `-IntegerLiteral 0x56469adfca48 <col:7> 'int' 0
| |-CXXCtorInitializer Field 0x56469adfb6b8 '_h' 'const Handler *'
| | `-CallExpr 0x56469adfcb70 <col:14, col:37> 'const Handler *'
| |   `-ImplicitCastExpr 0x56469adfcb58 <col:14, col:23> 'const Handler *(*)()' <FunctionToPointerDecay>
| |     `-DeclRefExpr 0x56469adfcb00 <col:14, col:23> 'const Handler *()' lvalue CXXMethod 0x56469ac54768 'blank_handler' 'const Handler *()'
| |-CXXCtorInitializer Field 0x56469adfb718 '_value' 'String'
| | `-CXXConstructExpr 0x56469adfcbd8 <line:167:5> 'String' 'void ()'
| `-CompoundStmt 0x56469adfcc40 <line:168:40, line:169:5>
|-CXXConstructorDecl 0x56469adf58a0 <line:178:5, line:181:5> line:178:5 used HandlerCall 'void (const String &)'
| |-ParmVarDecl 0x56469adf5810 <col:17, col:31> col:31 used hdesc 'const String &'
| |-CXXCtorInitializer Field 0x56469adfb658 '_e' 'Element *'
| | `-CXXReinterpretCastExpr 0x56469adfcc80 <line:179:7, col:36> 'Element *' reinterpret_cast<class Element *> <IntegralToPointer>
| |   `-IntegerLiteral 0x56469adfcc50 <col:35> 'int' 4
| |-CXXCtorInitializer Field 0x56469adfb6b8 '_h' 'const Handler *'
| | `-CallExpr 0x56469adfcd78 <col:43, col:66> 'const Handler *'
| |   `-ImplicitCastExpr 0x56469adfcd60 <col:43, col:52> 'const Handler *(*)()' <FunctionToPointerDecay>
| |     `-DeclRefExpr 0x56469adfcd30 <col:43, col:52> 'const Handler *()' lvalue CXXMethod 0x56469ac54768 'blank_handler' 'const Handler *()'
| |-CXXCtorInitializer Field 0x56469adfb718 '_value' 'String'
| | `-CXXConstructExpr 0x56469adfce20 <line:180:4, col:16> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x56469adfcde0 <col:11> 'const String' lvalue ParmVar 0x56469adf5810 'hdesc' 'const String &'
| `-CompoundStmt 0x56469adfce90 <col:18, line:181:5>
|-EnumDecl 0x56469adf5950 <line:184:5, line:191:5> line:184:10 Flags
| |-EnumConstantDecl 0x56469adf5a98 <line:185:2, col:22> col:2 readable 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x56469adf5e90 <col:13, col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adf5a78 <col:13, col:22> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x56469adf5a48 <col:13, col:22> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x56469adf5b70 <line:186:2, col:20> col:2 referenced f_read 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x56469adf5ea8 <col:11, col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adf5b50 <col:11, col:20> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x56469adf5b20 <col:11, col:20> 'Handler::Flags' EnumConstant 0x56469ac51f60 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x56469adf5c48 <line:187:2, col:22> col:2 writable 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x56469adf5ec0 <col:13, col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adf5c28 <col:13, col:22> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x56469adf5bf8 <col:13, col:22> 'Handler::Flags' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x56469adf5d20 <line:188:2, col:21> col:2 referenced f_write 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x56469adf5ed8 <col:12, col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adf5d00 <col:12, col:21> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x56469adf5cd0 <col:12, col:21> 'Handler::Flags' EnumConstant 0x56469ac51ff0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x56469adf5db0 <line:189:2, col:20> col:2 referenced f_preinitialize 'HandlerCall::Flags'
| | `-ImplicitCastExpr 0x56469adf5ef0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adf5d90 <col:20> 'int' Int: 4
| |     `-IntegerLiteral 0x56469adf5d70 <col:20> 'int' 4
| `-EnumConstantDecl 0x56469adf5e40 <line:190:9, col:27> col:9 referenced f_unquote_param 'HandlerCall::Flags'
|   `-ImplicitCastExpr 0x56469adf5f08 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469adf5e20 <col:27> 'int' Int: 8
|       `-IntegerLiteral 0x56469adf5e00 <col:27> 'int' 8
|-CXXMethodDecl 0x56469adf6110 <line:227:5, col:77> col:9 used initialize 'int (int, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x56469adf5f38 <col:20, col:24> col:24 flags 'int'
| |-ParmVarDecl 0x56469adf5fb0 <col:31, col:46> col:46 context 'const Element *'
| `-ParmVarDecl 0x56469adf6028 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc6e0 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc6c0 <col:76> 'int' 0
|-CXXMethodDecl 0x56469adf6330 <line:235:5, col:78> col:16 initialize_read 'int (const Element *, ErrorHandler *)' inline
| |-ParmVarDecl 0x56469adf61d8 <col:32, col:47> col:47 context 'const Element *'
| `-ParmVarDecl 0x56469adf6250 <col:56, col:77> col:70 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc718 <col:77> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc6f8 <col:77> 'int' 0
|-CXXMethodDecl 0x56469adf6508 <line:243:5, col:79> col:16 initialize_write 'int (const Element *, ErrorHandler *)' inline
| |-ParmVarDecl 0x56469adf63f0 <col:33, col:48> col:48 context 'const Element *'
| `-ParmVarDecl 0x56469adf6468 <col:57, col:78> col:71 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc750 <col:78> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc730 <col:78> 'int' 0
|-TypedefDecl 0x56469adf66c8 <line:246:5, col:58> col:33 referenced unspecified_bool_type 'bool (HandlerCall::*)() const'
| `-MemberPointerType 0x56469adf6640 'bool (HandlerCall::*)() const'
|   |-RecordType 0x56469acb7a30 'HandlerCall'
|   | `-CXXRecord 0x56469adf4448 'HandlerCall'
|   `-ParenType 0x56469adf65e0 'bool () const' sugar
|     `-FunctionProtoType 0x56469a7a1200 'bool () const' const cdecl
|       `-BuiltinType 0x56469a6f2500 'bool'
|-CXXConversionDecl 0x56469adf6808 <line:252:5, line:254:5> line:252:5 operator bool (HandlerCall::*)() const 'HandlerCall::unspecified_bool_type () const'
| `-CompoundStmt 0x56469adfd140 <col:44, line:254:5>
|   `-ReturnStmt 0x56469adfd130 <line:253:2, col:70>
|     `-ConditionalOperator 0x56469adfd100 <col:9, col:70> 'bool (HandlerCall::*)() const'
|       |-BinaryOperator 0x56469adfd028 <col:9, col:43> 'bool' '||'
|       | |-BinaryOperator 0x56469adfcf98 <col:9, col:38> 'bool' '!='
|       | | |-ImplicitCastExpr 0x56469adfcf80 <col:9> 'const Handler *' <LValueToRValue>
|       | | | `-MemberExpr 0x56469adfceb0 <col:9> 'const Handler *const' lvalue ->_h 0x56469adfb6b8
|       | | |   `-CXXThisExpr 0x56469adfcea0 <col:9> 'const HandlerCall *' implicit this
|       | | `-CallExpr 0x56469adfcf60 <col:15, col:38> 'const Handler *'
|       | |   `-ImplicitCastExpr 0x56469adfcf48 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|       | |     `-DeclRefExpr 0x56469adfcf18 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x56469ac54768 'blank_handler' 'const Handler *()'
|       | `-ImplicitCastExpr 0x56469adfd010 <col:43> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x56469adfcff8 <col:43> 'Element *' <LValueToRValue>
|       |     `-MemberExpr 0x56469adfcfc8 <col:43> 'Element *const' lvalue ->_e 0x56469adfb658
|       |       `-CXXThisExpr 0x56469adfcfb8 <col:43> 'const HandlerCall *' implicit this
|       |-UnaryOperator 0x56469adfd0b0 <col:48, col:62> 'bool (HandlerCall::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x56469adfd080 <col:49, col:62> 'bool () const' CXXMethod 0x56469adf68d8 'empty' 'bool () const'
|       `-ImplicitCastExpr 0x56469adfd0e8 <col:70> 'bool (HandlerCall::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x56469adfd0c8 <col:70> 'int' 0
|-CXXMethodDecl 0x56469adf68d8 <line:258:5, line:260:5> line:258:10 used empty 'bool () const'
| `-CompoundStmt 0x56469adfd328 <col:24, line:260:5>
|   `-ReturnStmt 0x56469adfd318 <line:259:2, col:44>
|     `-BinaryOperator 0x56469adfd2f8 <col:9, col:44> 'bool' '&&'
|       |-BinaryOperator 0x56469adfd250 <col:9, col:38> 'bool' '=='
|       | |-ImplicitCastExpr 0x56469adfd238 <col:9> 'const Handler *' <LValueToRValue>
|       | | `-MemberExpr 0x56469adfd168 <col:9> 'const Handler *const' lvalue ->_h 0x56469adfb6b8
|       | |   `-CXXThisExpr 0x56469adfd158 <col:9> 'const HandlerCall *' implicit this
|       | `-CallExpr 0x56469adfd218 <col:15, col:38> 'const Handler *'
|       |   `-ImplicitCastExpr 0x56469adfd200 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|       |     `-DeclRefExpr 0x56469adfd1d0 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x56469ac54768 'blank_handler' 'const Handler *()'
|       `-UnaryOperator 0x56469adfd2e0 <col:43, col:44> 'bool' prefix '!' cannot overflow
|         `-ImplicitCastExpr 0x56469adfd2c8 <col:44> 'bool' <PointerToBoolean>
|           `-ImplicitCastExpr 0x56469adfd2b0 <col:44> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56469adfd280 <col:44> 'Element *const' lvalue ->_e 0x56469adfb658
|               `-CXXThisExpr 0x56469adfd270 <col:44> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x56469adf6998 <line:264:5, line:266:5> line:264:10 used initialized 'bool () const'
| `-CompoundStmt 0x56469adfd468 <col:30, line:266:5>
|   `-ReturnStmt 0x56469adfd458 <line:265:2, col:38>
|     `-BinaryOperator 0x56469adfd438 <col:9, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x56469adfd420 <col:9> 'const Handler *' <LValueToRValue>
|       | `-MemberExpr 0x56469adfd350 <col:9> 'const Handler *const' lvalue ->_h 0x56469adfb6b8
|       |   `-CXXThisExpr 0x56469adfd340 <col:9> 'const HandlerCall *' implicit this
|       `-CallExpr 0x56469adfd400 <col:15, col:38> 'const Handler *'
|         `-ImplicitCastExpr 0x56469adfd3e8 <col:15, col:24> 'const Handler *(*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x56469adfd3b8 <col:15, col:24> 'const Handler *()' lvalue CXXMethod 0x56469ac54768 'blank_handler' 'const Handler *()'
|-CXXMethodDecl 0x56469adf6b08 <line:276:5, col:53> col:19 used call_read 'String (ErrorHandler *) const' inline
| `-ParmVarDecl 0x56469adf6a48 <col:29, col:50> col:43 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc788 <col:50> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc768 <col:50> 'int' 0
|-CXXMethodDecl 0x56469adf6c90 <line:285:5, col:51> col:16 used call_write 'int (ErrorHandler *) const' inline
| `-ParmVarDecl 0x56469adf6bc0 <col:27, col:48> col:41 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc7c0 <col:48> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc7a0 <col:48> 'int' 0
|-CXXMethodDecl 0x56469adf6ea0 <line:296:5, col:82> col:16 call_write 'int (const VariableExpander &, ErrorHandler *) const' inline
| |-ParmVarDecl 0x56469adf6d48 <col:27, col:51> col:51 scope 'const VariableExpander &'
| `-ParmVarDecl 0x56469adf6dc0 <col:58, col:79> col:72 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc7f8 <col:79> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc7d8 <col:79> 'int' 0
|-CXXMethodDecl 0x56469adf70b0 <line:309:5, col:76> col:16 call_write 'int (const String &, ErrorHandler *) const' inline
| |-ParmVarDecl 0x56469adf6f60 <col:27, col:41> col:41 value_ext 'const String &'
| `-ParmVarDecl 0x56469adf6fd8 <col:52, col:73> col:66 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc830 <col:73> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc810 <col:73> 'int' 0
|-CXXMethodDecl 0x56469adf7490 <line:333:5, line:334:54> line:333:16 used reset 'int (HandlerCall *&, const String &, int, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adf71a0 <col:22, col:36> col:36 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x56469adf7218 <col:43, col:57> col:57 hdesc 'const String &'
| |-ParmVarDecl 0x56469adf7298 <col:64, col:68> col:68 flags 'int'
| |-ParmVarDecl 0x56469adf7310 <line:334:8, col:23> col:23 context 'const Element *'
| `-ParmVarDecl 0x56469adf7388 <col:32, col:53> col:46 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc868 <col:53> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc848 <col:53> 'int' 0
|-CXXMethodDecl 0x56469adf78f0 <line:347:5, line:349:41> line:347:16 used reset 'int (HandlerCall *&, Element *, const String &, const String &, int, ErrorHandler *)' static
| |-ParmVarDecl 0x56469adf7570 <col:22, col:36> col:36 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x56469adf75e8 <line:348:8, col:17> col:17 e 'Element *'
| |-ParmVarDecl 0x56469adf7660 <col:20, col:34> col:34 hname 'const String &'
| |-ParmVarDecl 0x56469adf76d8 <col:41, col:55> col:55 value 'const String &'
| |-ParmVarDecl 0x56469adf7758 <line:349:8, col:12> col:12 flags 'int'
| `-ParmVarDecl 0x56469adf77d0 <col:19, col:40> col:33 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc8a0 <col:40> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc880 <col:40> 'int' 0
|-CXXMethodDecl 0x56469adf7c40 <line:361:5, line:362:52> line:361:23 reset_read 'int (HandlerCall *&, const String &, const Element *, ErrorHandler *)' static inline
| |-ParmVarDecl 0x56469adf79d8 <col:34, col:48> col:48 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x56469adf7a50 <col:55, col:69> col:69 hdesc 'const String &'
| |-ParmVarDecl 0x56469adf7ac8 <line:362:6, col:21> col:21 context 'const Element *'
| `-ParmVarDecl 0x56469adf7b40 <col:30, col:51> col:44 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc8d8 <col:51> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc8b8 <col:51> 'int' 0
|-CXXMethodDecl 0x56469adf7f80 <line:373:5, line:375:28> line:373:23 reset_read 'int (HandlerCall *&, Element *, const String &, ErrorHandler *)' static inline
| |-ParmVarDecl 0x56469adf7d18 <col:34, col:48> col:48 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x56469adf7d90 <line:374:6, col:15> col:15 e 'Element *'
| |-ParmVarDecl 0x56469adf7e08 <col:18, col:32> col:32 hname 'const String &'
| `-ParmVarDecl 0x56469adf7e80 <line:375:6, col:27> col:20 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc910 <col:27> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc8f0 <col:27> 'int' 0
|-CXXMethodDecl 0x56469adf8270 <line:386:5, line:387:53> line:386:23 reset_write 'int (HandlerCall *&, const String &, const Element *, ErrorHandler *)' static inline
| |-ParmVarDecl 0x56469adf8058 <col:35, col:49> col:49 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x56469adf80d0 <col:56, col:70> col:70 hdesc 'const String &'
| |-ParmVarDecl 0x56469adf8148 <line:387:7, col:22> col:22 context 'const Element *'
| `-ParmVarDecl 0x56469adf81c0 <col:31, col:52> col:45 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfc948 <col:52> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfc928 <col:52> 'int' 0
|-CXXMethodDecl 0x56469adf8630 <line:399:5, line:402:29> line:399:23 reset_write 'int (HandlerCall *&, Element *, const String &, const String &, ErrorHandler *)' static inline
| |-ParmVarDecl 0x56469adf8348 <col:35, col:49> col:49 hcall 'HandlerCall *&'
| |-ParmVarDecl 0x56469adf83c0 <line:400:7, col:16> col:16 e 'Element *'
| |-ParmVarDecl 0x56469adf8438 <col:19, col:33> col:33 hname 'const String &'
| |-ParmVarDecl 0x56469adf84b0 <line:401:7, col:36> col:21 value 'const String &' cinit
| | `-ExprWithCleanups 0x56469adfc9f8 <col:29, col:36> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56469adfc9e0 <col:29, col:36> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56469adfc9c8 <col:29, col:36> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56469adfc9a8 <col:29, col:36> 'String' (CXXTemporary 0x56469adfc9a8)
| |         `-CXXTemporaryObjectExpr 0x56469adfc970 <col:29, col:36> 'String' 'void ()'
| `-ParmVarDecl 0x56469adf8528 <line:402:7, col:28> col:21 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56469adfca30 <col:28> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56469adfca10 <col:28> 'int' 0
|-CXXMethodDecl 0x56469adf8718 <line:409:5, line:411:5> line:409:14 used element 'Element *() const'
| `-CompoundStmt 0x56469adfd4e8 <col:30, line:411:5>
|   `-ReturnStmt 0x56469adfd4d8 <line:410:2, col:9>
|     `-ImplicitCastExpr 0x56469adfd4c0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56469adfd490 <col:9> 'Element *const' lvalue ->_e 0x56469adfb658
|         `-CXXThisExpr 0x56469adfd480 <col:9> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x56469adf8808 <line:416:5, line:418:5> line:416:20 used handler 'const Handler *() const'
| `-CompoundStmt 0x56469adfd568 <col:36, line:418:5>
|   `-ReturnStmt 0x56469adfd558 <line:417:2, col:9>
|     `-ImplicitCastExpr 0x56469adfd540 <col:9> 'const Handler *' <LValueToRValue>
|       `-MemberExpr 0x56469adfd510 <col:9> 'const Handler *const' lvalue ->_h 0x56469adfb6b8
|         `-CXXThisExpr 0x56469adfd500 <col:9> 'const HandlerCall *' implicit this
|-CXXMethodDecl 0x56469adf88c8 <line:423:5, line:425:5> line:423:19 value 'const String &() const'
| `-CompoundStmt 0x56469adfd730 <col:33, line:425:5>
|   `-ReturnStmt 0x56469adfd720 <line:424:2, col:53>
|     `-ConditionalOperator 0x56469adfd6f0 <col:9, col:53> 'const String' lvalue
|       |-CXXMemberCallExpr 0x56469adfd5c0 <col:9, col:21> 'bool'
|       | `-MemberExpr 0x56469adfd590 <col:9> '<bound member function type>' ->initialized 0x56469adf6998
|       |   `-CXXThisExpr 0x56469adfd580 <col:9> 'const HandlerCall *' implicit this
|       |-MemberExpr 0x56469adfd5f0 <col:25> 'const String' lvalue ->_value 0x56469adfb718
|       | `-CXXThisExpr 0x56469adfd5e0 <col:25> 'const HandlerCall *' implicit this
|       `-CallExpr 0x56469adfd6d0 <col:34, col:53> 'const String' lvalue
|         `-ImplicitCastExpr 0x56469adfd6b8 <col:34, col:42> 'const String &(*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x56469adfd658 <col:34, col:42> 'const String &()' lvalue CXXMethod 0x56469aa3a088 'make_empty' 'const String &()'
|-CXXMethodDecl 0x56469adf8a08 <line:431:5, line:434:5> line:431:10 set_value 'void (const String &)'
| |-ParmVarDecl 0x56469adf8978 <col:20, col:34> col:34 used value 'const String &'
| `-CompoundStmt 0x56469adfd8a8 <col:41, line:434:5>
|   `-IfStmt 0x56469adfd890 <line:432:2, line:433:15>
|     |-CXXMemberCallExpr 0x56469adfd788 <line:432:6, col:18> 'bool'
|     | `-MemberExpr 0x56469adfd758 <col:6> '<bound member function type>' ->initialized 0x56469adf6998
|     |   `-ImplicitCastExpr 0x56469adfd7a8 <col:6> 'const HandlerCall *' <NoOp>
|     |     `-CXXThisExpr 0x56469adfd748 <col:6> 'HandlerCall *' implicit this
|     `-CXXOperatorCallExpr 0x56469adfd858 <line:433:6, col:15> 'String' lvalue
|       |-ImplicitCastExpr 0x56469adfd840 <col:13> 'String &(*)(const String &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469adfd820 <col:13> 'String &(const String &)' lvalue CXXMethod 0x56469aa44fd0 'operator=' 'String &(const String &)'
|       |-MemberExpr 0x56469adfd7d0 <col:6> 'String' lvalue ->_value 0x56469adfb718
|       | `-CXXThisExpr 0x56469adfd7c0 <col:6> 'HandlerCall *' implicit this
|       `-DeclRefExpr 0x56469adfd800 <col:15> 'const String' lvalue ParmVar 0x56469adf8978 'value' 'const String &'
|-CXXMethodDecl 0x56469adfad70 <line:439:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x56469adfae30 <line:445:5, line:449:5> line:445:10 clear 'void ()'
| `-CompoundStmt 0x56469adfdba0 <col:18, line:449:5>
|   |-BinaryOperator 0x56469adfd938 <line:446:2, col:7> 'Element *' lvalue '='
|   | |-MemberExpr 0x56469adfd8d0 <col:2> 'Element *' lvalue ->_e 0x56469adfb658
|   | | `-CXXThisExpr 0x56469adfd8c0 <col:2> 'HandlerCall *' implicit this
|   | `-ImplicitCastExpr 0x56469adfd920 <col:7> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56469adfd900 <col:7> 'int' 0
|   |-BinaryOperator 0x56469adfda38 <line:447:2, col:30> 'const Handler *' lvalue '='
|   | |-MemberExpr 0x56469adfd968 <col:2> 'const Handler *' lvalue ->_h 0x56469adfb6b8
|   | | `-CXXThisExpr 0x56469adfd958 <col:2> 'HandlerCall *' implicit this
|   | `-CallExpr 0x56469adfda18 <col:7, col:30> 'const Handler *'
|   |   `-ImplicitCastExpr 0x56469adfda00 <col:7, col:16> 'const Handler *(*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56469adfd9d0 <col:7, col:16> 'const Handler *()' lvalue CXXMethod 0x56469ac54768 'blank_handler' 'const Handler *()'
|   `-ExprWithCleanups 0x56469adfdb88 <line:448:2, col:18> 'String' lvalue
|     `-CXXOperatorCallExpr 0x56469adfdb50 <col:2, col:18> 'String' lvalue
|       |-ImplicitCastExpr 0x56469adfdb38 <col:9> 'String &(*)(String &&)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469adfdb18 <col:9> 'String &(String &&)' lvalue CXXMethod 0x56469aa456d8 'operator=' 'String &(String &&)'
|       |-MemberExpr 0x56469adfda68 <col:2> 'String' lvalue ->_value 0x56469adfb718
|       | `-CXXThisExpr 0x56469adfda58 <col:2> 'HandlerCall *' implicit this
|       `-MaterializeTemporaryExpr 0x56469adfdb00 <col:11, col:18> 'String' xvalue
|         `-CXXBindTemporaryExpr 0x56469adfdae0 <col:11, col:18> 'String' (CXXTemporary 0x56469adfdae0)
|           `-CXXTemporaryObjectExpr 0x56469adfdaa8 <col:11, col:18> 'String' 'void ()'
|-EnumDecl 0x56469adfaed0 <line:453:5, line:458:5> line:453:5
| |-EnumConstantDecl 0x56469adfafd0 <line:454:9, col:22> col:9 CHECK_READ 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb530 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfafb0 <col:22> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x56469adfaf90 <col:22> 'HandlerCall::Flags' EnumConstant 0x56469adf5b70 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x56469adfb060 <col:30, col:40> col:30 OP_READ 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb548 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfb040 <col:40> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x56469adfb020 <col:40> 'HandlerCall::Flags' EnumConstant 0x56469adf5b70 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x56469adfb0f0 <col:48, col:57> col:48 h_read 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb560 <col:57> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfb0d0 <col:57> 'HandlerCall::Flags' Int: 1
| |     `-DeclRefExpr 0x56469adfb0b0 <col:57> 'HandlerCall::Flags' EnumConstant 0x56469adf5b70 'f_read' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x56469adfb180 <line:455:9, col:23> col:9 CHECK_WRITE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb578 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfb160 <col:23> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x56469adfb140 <col:23> 'HandlerCall::Flags' EnumConstant 0x56469adf5d20 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x56469adfb210 <col:32, col:43> col:32 OP_WRITE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb590 <col:43> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfb1f0 <col:43> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x56469adfb1d0 <col:43> 'HandlerCall::Flags' EnumConstant 0x56469adf5d20 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x56469adfb2a0 <col:52, col:62> col:52 h_write 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb5a8 <col:62> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfb280 <col:62> 'HandlerCall::Flags' Int: 2
| |     `-DeclRefExpr 0x56469adfb260 <col:62> 'HandlerCall::Flags' EnumConstant 0x56469adf5d20 'f_write' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x56469adfb330 <line:456:9, col:25> col:9 PREINITIALIZE 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb5c0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfb310 <col:25> 'HandlerCall::Flags' Int: 4
| |     `-DeclRefExpr 0x56469adfb2f0 <col:25> 'HandlerCall::Flags' EnumConstant 0x56469adf5db0 'f_preinitialize' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x56469adfb3c0 <col:42, col:60> col:42 h_preinitialize 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb5d8 <col:60> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfb3a0 <col:60> 'HandlerCall::Flags' Int: 4
| |     `-DeclRefExpr 0x56469adfb380 <col:60> 'HandlerCall::Flags' EnumConstant 0x56469adf5db0 'f_preinitialize' 'HandlerCall::Flags'
| |-EnumConstantDecl 0x56469adfb450 <line:457:9, col:25> col:9 referenced UNQUOTE_PARAM 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
| | `-ImplicitCastExpr 0x56469adfb5f0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469adfb430 <col:25> 'HandlerCall::Flags' Int: 8
| |     `-DeclRefExpr 0x56469adfb410 <col:25> 'HandlerCall::Flags' EnumConstant 0x56469adf5e40 'f_unquote_param' 'HandlerCall::Flags'
| `-EnumConstantDecl 0x56469adfb4e0 <col:42, col:60> col:42 h_unquote_param 'HandlerCall::(anonymous enum at ../dummy_inc/click/handlercall.hh:453:5)'
|   `-ImplicitCastExpr 0x56469adfb608 <col:60> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469adfb4c0 <col:60> 'HandlerCall::Flags' Int: 8
|       `-DeclRefExpr 0x56469adfb4a0 <col:60> 'HandlerCall::Flags' EnumConstant 0x56469adf5e40 'f_unquote_param' 'HandlerCall::Flags'
|-AccessSpecDecl 0x56469adfb620 <line:461:3, col:10> col:3 private
|-FieldDecl 0x56469adfb658 <line:463:5, col:14> col:14 referenced _e 'Element *'
|-FieldDecl 0x56469adfb6b8 <line:464:5, col:20> col:20 referenced _h 'const Handler *'
|-FieldDecl 0x56469adfb718 <line:465:5, col:12> col:12 referenced _value 'String'
|-CXXMethodDecl 0x56469adfb960 <line:467:5, col:49> col:9 parse 'int (int, Element *, ErrorHandler *)'
| |-ParmVarDecl 0x56469adfb780 <col:15, col:19> col:19 flags 'int'
| |-ParmVarDecl 0x56469adfb7f8 <col:26, col:33> col:34 'Element *'
| `-ParmVarDecl 0x56469adfb870 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x56469adfbd20 <line:468:5, col:80> col:9 assign 'int (Element *, const String &, const String &, int, ErrorHandler *)'
| |-ParmVarDecl 0x56469adfba28 <col:16, col:23> col:24 'Element *'
| |-ParmVarDecl 0x56469adfbaa0 <col:26, col:38> col:39 'const String &'
| |-ParmVarDecl 0x56469adfbb18 <col:41, col:53> col:54 'const String &'
| |-ParmVarDecl 0x56469adfbb98 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56469adfbc10 <col:67, col:79> col:80 'ErrorHandler *'
|-CXXConstructorDecl 0x56469adfbe18 <line:143:7> col:7 implicit HandlerCall 'void (const HandlerCall &)' inline default noexcept-unevaluated 0x56469adfbe18
| `-ParmVarDecl 0x56469adfbf28 <col:7> col:7 'const HandlerCall &'
|-CXXConstructorDecl 0x56469adfbfc8 <col:7> col:7 implicit HandlerCall 'void (HandlerCall &&)' inline default noexcept-unevaluated 0x56469adfbfc8
| `-ParmVarDecl 0x56469adfc0d8 <col:7> col:7 'HandlerCall &&'
|-CXXMethodDecl 0x56469adfc178 <col:7> col:7 implicit operator= 'HandlerCall &(const HandlerCall &)' inline default noexcept-unevaluated 0x56469adfc178
| `-ParmVarDecl 0x56469adfc288 <col:7> col:7 'const HandlerCall &'
|-CXXMethodDecl 0x56469adfc2f8 <col:7> col:7 implicit operator= 'HandlerCall &(HandlerCall &&)' inline default noexcept-unevaluated 0x56469adfc2f8
| `-ParmVarDecl 0x56469adfc408 <col:7> col:7 'HandlerCall &&'
`-CXXDestructorDecl 0x56469adfc490 <col:7> col:7 implicit used ~HandlerCall 'void () noexcept' inline default
  `-CompoundStmt 0x56469af3a998 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HandlerCall = type { %class.Element*, %class.Handler*, %class.String }
  NonVirtualBaseLLVMType:%class.HandlerCall = type { %class.Element*, %class.Handler*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorVeneer
         0 |   class ErrorHandler (primary base)
         0 |     (ErrorHandler vtable pointer)
         8 |     int _nerrors
        16 |   class ErrorHandler * _errh
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class ContextErrorHandler
         0 |   class ErrorVeneer (primary base)
         0 |     class ErrorHandler (primary base)
         0 |       (ErrorHandler vtable pointer)
         8 |       int _nerrors
        16 |     class ErrorHandler * _errh
        24 |   class String _context
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
        48 |   class String _indent
        48 |     struct String::rep_t _r
        48 |       const char * data
        56 |       int length
        64 |       struct String::memo_t * memo
        72 |   class String _context_landmark
        72 |     struct String::rep_t _r
        72 |       const char * data
        80 |       int length
        88 |       struct String::memo_t * memo
        96 |   _Bool _context_printed
           | [sizeof=104, dsize=97, align=8,
           |  nvsize=97, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469acf6d58 <../dummy_inc/click/error.hh:618:1, line:638:1> line:618:7 referenced class ErrorVeneer definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'ErrorHandler'
|-CXXRecordDecl 0x56469acf6eb8 <col:1, col:7> col:7 implicit referenced class ErrorVeneer
|-AccessSpecDecl 0x56469acf6f48 <col:43, col:49> col:43 public
|-CXXConstructorDecl 0x56469acf7058 <line:625:5, line:627:5> line:625:5 used ErrorVeneer 'void (ErrorHandler *)'
| |-ParmVarDecl 0x56469acf6f80 <col:17, col:31> col:31 used errh 'ErrorHandler *'
| |-CXXCtorInitializer 'ErrorHandler'
| | `-CXXConstructExpr 0x56469acf8070 <col:5> 'ErrorHandler' 'void ()'
| |-CXXCtorInitializer Field 0x56469acf7818 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x56469acf8030 <line:626:10> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x56469acf7ff0 <col:10> 'ErrorHandler *' lvalue ParmVar 0x56469acf6f80 'errh' 'ErrorHandler *'
| `-CompoundStmt 0x56469acf80e0 <col:16, line:627:5>
|-CXXMethodDecl 0x56469acf7230 <line:629:5, col:48> col:12 vformat 'String (const char *, __va_list_tag *)'
| |-Overrides: [ 0x56469acf0610 ErrorHandler::vformat 'String (const char *, __va_list_tag *)' ]
| |-ParmVarDecl 0x56469acf7120 <col:20, col:32> col:32 fmt 'const char *'
| `-ParmVarDecl 0x56469acf7198 <col:37, col:45> col:45 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56469acf7380 <line:630:5, col:38> col:12 decorate 'String (const String &)'
| |-Overrides: [ 0x56469acf08b0 ErrorHandler::decorate 'String (const String &)' ]
| `-ParmVarDecl 0x56469acf72f0 <col:21, col:35> col:35 str 'const String &'
|-CXXMethodDecl 0x56469acf75d8 <line:631:5, col:61> col:11 emit 'void *(const String &, void *, bool)'
| |-Overrides: [ 0x56469acf0b50 ErrorHandler::emit 'void *(const String &, void *, bool)' ]
| |-ParmVarDecl 0x56469acf7438 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x56469acf74b8 <col:35, col:41> col:41 user_data 'void *'
| `-ParmVarDecl 0x56469acf7530 <col:52, col:57> col:57 more 'bool'
|-CXXMethodDecl 0x56469acf7738 <line:632:5, col:27> col:10 account 'void (int)'
| |-Overrides: [ 0x56469acf0cb0 ErrorHandler::account 'void (int)' ]
| `-ParmVarDecl 0x56469acf76a8 <col:18, col:22> col:22 level 'int'
|-AccessSpecDecl 0x56469acf77e0 <line:634:3, col:10> col:3 private
|-FieldDecl 0x56469acf7818 <line:636:5, col:19> col:19 _errh 'ErrorHandler *'
|-CXXConstructorDecl 0x56469acf7898 <line:618:7> col:7 implicit constexpr ErrorVeneer 'void (const ErrorVeneer &)' inline default noexcept-unevaluated 0x56469acf7898
| `-ParmVarDecl 0x56469acf79a8 <col:7> col:7 'const ErrorVeneer &'
|-CXXConstructorDecl 0x56469acf7a48 <col:7> col:7 implicit constexpr ErrorVeneer 'void (ErrorVeneer &&)' inline default noexcept-unevaluated 0x56469acf7a48
| `-ParmVarDecl 0x56469acf7b58 <col:7> col:7 'ErrorVeneer &&'
|-CXXMethodDecl 0x56469acf7bf8 <col:7> col:7 implicit operator= 'ErrorVeneer &(const ErrorVeneer &)' inline default noexcept-unevaluated 0x56469acf7bf8
| `-ParmVarDecl 0x56469acf7d08 <col:7> col:7 'const ErrorVeneer &'
|-CXXMethodDecl 0x56469acf7d78 <col:7> col:7 implicit operator= 'ErrorVeneer &(ErrorVeneer &&)' inline default noexcept-unevaluated 0x56469acf7d78
| `-ParmVarDecl 0x56469acf7e88 <col:7> col:7 'ErrorVeneer &&'
`-CXXDestructorDecl 0x56469acf7f10 <col:7> col:7 implicit used ~ErrorVeneer 'void () noexcept' inline default
  |-Overrides: [ 0x56469aced690 ErrorHandler::~ErrorHandler 'void () noexcept' ]
  `-CompoundStmt 0x56469acf9f98 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.ErrorVeneer = type { %class.ErrorHandler.base, %class.ErrorHandler* }
  NonVirtualBaseLLVMType:%class.ErrorVeneer = type { %class.ErrorHandler.base, %class.ErrorHandler* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469acf9fb8 <../dummy_inc/click/error.hh:737:1, line:792:1> line:737:7 referenced class ContextErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'ErrorVeneer'
|-CXXRecordDecl 0x56469acfa118 <col:1, col:7> col:7 implicit referenced class ContextErrorHandler
|-AccessSpecDecl 0x56469acfa1a8 <col:50, col:56> col:50 public
|-CXXConstructorDecl 0x56469acfee60 <line:745:5, col:65> col:5 used ContextErrorHandler 'void (ErrorHandler *, const char *, ...)'
| |-ParmVarDecl 0x56469acfa1e0 <col:25, col:39> col:39 errh 'ErrorHandler *'
| `-ParmVarDecl 0x56469acfa260 <col:45, col:57> col:57 fmt 'const char *'
|-CXXMethodDecl 0x56469acfef68 <line:748:5, line:750:5> line:748:10 context_printed 'bool () const'
| `-CompoundStmt 0x56469ad00008 <col:34, line:750:5>
|   `-ReturnStmt 0x56469acffff8 <line:749:2, col:9>
|     `-ImplicitCastExpr 0x56469acfffe0 <col:9> 'bool' <LValueToRValue>
|       `-MemberExpr 0x56469acfffb0 <col:9> 'const bool' lvalue ->_context_printed 0x56469acff7c8
|         `-CXXThisExpr 0x56469acfffa0 <col:9> 'const ContextErrorHandler *' implicit this
|-CXXMethodDecl 0x56469acff0a8 <line:753:5, line:755:5> line:753:10 set_context_printed 'void (bool)'
| |-ParmVarDecl 0x56469acff018 <col:30, col:35> col:35 used x 'bool'
| `-CompoundStmt 0x56469ad000b8 <col:38, line:755:5>
|   `-BinaryOperator 0x56469ad00098 <line:754:2, col:21> 'bool' lvalue '='
|     |-MemberExpr 0x56469ad00030 <col:2> 'bool' lvalue ->_context_printed 0x56469acff7c8
|     | `-CXXThisExpr 0x56469ad00020 <col:2> 'ContextErrorHandler *' implicit this
|     `-ImplicitCastExpr 0x56469ad00080 <col:21> 'bool' <LValueToRValue>
|       `-DeclRefExpr 0x56469ad00060 <col:21> 'bool' lvalue ParmVar 0x56469acff018 'x' 'bool'
|-CXXMethodDecl 0x56469acff1f0 <line:758:5, line:760:5> line:758:10 set_context 'void (const String &)'
| |-ParmVarDecl 0x56469acff160 <col:22, col:36> col:36 used str 'const String &'
| `-CompoundStmt 0x56469ad00498 <col:41, line:760:5>
|   `-CXXOperatorCallExpr 0x56469ad00460 <line:759:2, col:13> 'String' lvalue
|     |-ImplicitCastExpr 0x56469ad00448 <col:11> 'String &(*)(const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56469ad00428 <col:11> 'String &(const String &)' lvalue CXXMethod 0x56469aa44fd0 'operator=' 'String &(const String &)'
|     |-MemberExpr 0x56469ad000e0 <col:2> 'String' lvalue ->_context 0x56469acff6a8
|     | `-CXXThisExpr 0x56469ad000d0 <col:2> 'ContextErrorHandler *' implicit this
|     `-DeclRefExpr 0x56469ad00110 <col:13> 'const String' lvalue ParmVar 0x56469acff160 'str' 'const String &'
|-CXXMethodDecl 0x56469acff338 <line:767:5, line:769:5> line:767:10 set_indent 'void (const String &)'
| |-ParmVarDecl 0x56469acff2a8 <col:21, col:35> col:35 used str 'const String &'
| `-CompoundStmt 0x56469ad00580 <col:40, line:769:5>
|   `-CXXOperatorCallExpr 0x56469ad00548 <line:768:2, col:12> 'String' lvalue
|     |-ImplicitCastExpr 0x56469ad00530 <col:10> 'String &(*)(const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56469ad00510 <col:10> 'String &(const String &)' lvalue CXXMethod 0x56469aa44fd0 'operator=' 'String &(const String &)'
|     |-MemberExpr 0x56469ad004c0 <col:2> 'String' lvalue ->_indent 0x56469acff708
|     | `-CXXThisExpr 0x56469ad004b0 <col:2> 'ContextErrorHandler *' implicit this
|     `-DeclRefExpr 0x56469ad004f0 <col:12> 'const String' lvalue ParmVar 0x56469acff2a8 'str' 'const String &'
|-CXXMethodDecl 0x56469acff480 <line:779:5, line:781:5> line:779:10 set_context_landmark 'void (const String &)'
| |-ParmVarDecl 0x56469acff3f0 <col:31, col:45> col:45 used str 'const String &'
| `-CompoundStmt 0x56469ad00750 <col:50, line:781:5>
|   `-ExprWithCleanups 0x56469ad00738 <line:780:2, col:44> 'String' lvalue
|     `-CXXOperatorCallExpr 0x56469ad00700 <col:2, col:44> 'String' lvalue
|       |-ImplicitCastExpr 0x56469ad006e8 <col:20> 'String &(*)(String &&)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56469ad00698 <col:20> 'String &(String &&)' lvalue CXXMethod 0x56469aa456d8 'operator=' 'String &(String &&)'
|       |-MemberExpr 0x56469ad005a8 <col:2> 'String' lvalue ->_context_landmark 0x56469acff768
|       | `-CXXThisExpr 0x56469ad00598 <col:2> 'ContextErrorHandler *' implicit this
|       `-MaterializeTemporaryExpr 0x56469ad00680 <col:22, col:44> 'String' xvalue
|         `-CXXBindTemporaryExpr 0x56469ad00660 <col:22, col:44> 'String' (CXXTemporary 0x56469ad00660)
|           `-CallExpr 0x56469ad00630 <col:22, col:44> 'String'
|             |-ImplicitCastExpr 0x56469ad00618 <col:22> 'String (*)(const String &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56469ad005d8 <col:22> 'String (const String &)' lvalue CXXMethod 0x56469acf2a78 'make_landmark_anno' 'String (const String &)'
|             `-DeclRefExpr 0x56469ad005f8 <col:41> 'const String' lvalue ParmVar 0x56469acff3f0 'str' 'const String &'
|-CXXMethodDecl 0x56469acff5c8 <line:783:5, col:38> col:12 decorate 'String (const String &)'
| |-Overrides: [ 0x56469acf7380 ErrorVeneer::decorate 'String (const String &)' ]
| `-ParmVarDecl 0x56469acff538 <col:21, col:35> col:35 str 'const String &'
|-AccessSpecDecl 0x56469acff670 <line:785:3, col:10> col:3 private
|-FieldDecl 0x56469acff6a8 <line:787:5, col:12> col:12 referenced _context 'String'
|-FieldDecl 0x56469acff708 <line:788:5, col:12> col:12 referenced _indent 'String'
|-FieldDecl 0x56469acff768 <line:789:5, col:12> col:12 referenced _context_landmark 'String'
|-FieldDecl 0x56469acff7c8 <line:790:5, col:10> col:10 referenced _context_printed 'bool'
|-CXXConstructorDecl 0x56469acff848 <line:737:7> col:7 implicit ContextErrorHandler 'void (const ContextErrorHandler &)' inline default noexcept-unevaluated 0x56469acff848
| `-ParmVarDecl 0x56469acff958 <col:7> col:7 'const ContextErrorHandler &'
|-CXXConstructorDecl 0x56469acff9f8 <col:7> col:7 implicit ContextErrorHandler 'void (ContextErrorHandler &&)' inline default noexcept-unevaluated 0x56469acff9f8
| `-ParmVarDecl 0x56469acffb08 <col:7> col:7 'ContextErrorHandler &&'
|-CXXMethodDecl 0x56469acffba8 <col:7> col:7 implicit operator= 'ContextErrorHandler &(const ContextErrorHandler &)' inline default noexcept-unevaluated 0x56469acffba8
| `-ParmVarDecl 0x56469acffcb8 <col:7> col:7 'const ContextErrorHandler &'
|-CXXMethodDecl 0x56469acffd28 <col:7> col:7 implicit operator= 'ContextErrorHandler &(ContextErrorHandler &&)' inline default noexcept-unevaluated 0x56469acffd28
| `-ParmVarDecl 0x56469acffe38 <col:7> col:7 'ContextErrorHandler &&'
`-CXXDestructorDecl 0x56469acffec0 <col:7> col:7 implicit used ~ContextErrorHandler 'void () noexcept' inline default
  |-Overrides: [ 0x56469acf7f10 ErrorVeneer::~ErrorVeneer 'void () noexcept' ]
  `-CompoundStmt 0x56469af3b160 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.ContextErrorHandler = type <{ %class.ErrorVeneer, %class.String, %class.String, %class.String, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ContextErrorHandler.base = type <{ %class.ErrorVeneer, %class.String, %class.String, %class.String, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae5c410 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ae5c528 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x56469ae5c5b8 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x56469ae5c7f8 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x56469ae5c5f0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x56469ae5c670 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x56469ae5c6e8 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x56469ae5ca10 <col:81> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x56469ae5c950 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x56469ae5c8c0 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x56469ae5cb68 <col:35, line:1261:5>
|   `-ReturnStmt 0x56469ae5cb58 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x56469ae5cb40 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x56469ae5cb10 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56469ae5caf8 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x56469ae5cad0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x56469ae5cab0 <col:16, col:24> 'String' (CXXTemporary 0x56469ae5cab0)
|               `-CXXConstructExpr 0x56469ae5ca78 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x56469ae5ca60 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x56469ae5ca40 <col:23> 'bool' lvalue ParmVar 0x56469ae5c8c0 'x' 'bool'
|-CXXConstructorDecl 0x56469af3ff38 <line:1257:7> col:7 implicit referenced constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56469af40038 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x56469af40038
| `-ParmVarDecl 0x56469af40148 <col:7> col:7 'const BoolArg &'
|-CXXConstructorDecl 0x56469af401e8 <col:7> col:7 implicit constexpr BoolArg 'void (BoolArg &&)' inline default trivial noexcept-unevaluated 0x56469af401e8
| `-ParmVarDecl 0x56469af402f8 <col:7> col:7 'BoolArg &&'
`-CXXDestructorDecl 0x56469af40398 <col:7> col:7 implicit referenced ~BoolArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac33458 prev 0x56469ac28660 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ac33550 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56469ac33640 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56469ac33768 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56469ac338e8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56469ac33a68 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56469ac33be8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56469ac44a18 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56469ac45288 <col:11>
|-CXXDestructorDecl 0x56469ac44af0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56469ac44c28 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56469ac44c28
| `-ParmVarDecl 0x56469ac44d38 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56469ac44dd8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56469ac44dd8
| `-ParmVarDecl 0x56469ac44ee8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56469ac47ca8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56469ac47db8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56469ac48038 <col:11>
|   `-ReturnStmt 0x56469ac48028 <col:11>
|     `-UnaryOperator 0x56469ac48010 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56469ac48000 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56469ac47e28 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56469ac47e28
  `-ParmVarDecl 0x56469ac47f38 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac33c50 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ac33d68 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56469ac33e08 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56469ac33e70 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56469ac33ed8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56469ac33f40 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56469ac33fa0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56469ac34060 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56469ac340c0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56469ac34120 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56469ac44928 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56469ac33e08 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56469ac45298 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56469ac452f0 <col:12>
|-CXXConstructorDecl 0x56469ac44f58 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56469ac44f58
| `-ParmVarDecl 0x56469ac45068 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56469ac45108 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56469ac45108
| `-ParmVarDecl 0x56469ac45218 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56469ac47390 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ac21d70 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469ac21e88 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56469ac21f18 <col:16, col:22> col:16 public
|-EnumDecl 0x56469ac21f40 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56469ac22040 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56469ac22120 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac22020 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56469ac22000 <col:21> 'int' 28
| `-EnumConstantDecl 0x56469ac220d0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56469ac22138 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac220b0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56469ac22090 <col:22> 'int' 64
|-CXXMethodDecl 0x56469ac22478 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56469ac22160 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ac221e0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56469ac22258 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ac222d0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56469ac22538 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56469ac22738 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56469ac225b0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56469ac22628 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56469ac227e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56469ac22948 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56469ac22858 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56469ac229f0 <col:72> warn_unused_result ""
|-TypedefDecl 0x56469ac22d50 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56469ac22ce0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56469ac22c80 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56469ac22c40 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56469a6f24e0 'void'
|       |-PointerType 0x56469a9a1ef0 'unsigned char *'
|       | `-BuiltinType 0x56469a6f25e0 'unsigned char'
|       |-TypedefType 0x56469a79e4c0 'size_t' sugar
|       | |-Typedef 0x56469a762be0 'size_t'
|       | `-BuiltinType 0x56469a6f2640 'unsigned long'
|       `-PointerType 0x56469a6f2ce0 'void *'
|         `-BuiltinType 0x56469a6f24e0 'void'
|-CXXMethodDecl 0x56469ac231c8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56469ac22dc0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56469ac22e38 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ac22ed0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56469ac22f50 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56469ac3d8c0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56469ac3d8a8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56469ac3d870 <col:58> 'int' 0
| |-ParmVarDecl 0x56469ac22fd0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56469ac3d8e8 <col:76> 'int' 0
| |-ParmVarDecl 0x56469ac23050 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56469ac3d908 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56469ac23298 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56469ac23318 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56469ac233d8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56469ac23478 <col:20>
| `-OptimizeNoneAttr 0x56469ac234d0 <col:30>
|-CXXMethodDecl 0x56469ac23548 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56469ac235e8 <col:20>
| `-OptimizeNoneAttr 0x56469ac23640 <col:30>
|-CXXMethodDecl 0x56469ac236b8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56469ac23758 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56469ac23808 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56469ac238a8 <col:20>
| |-OptimizeNoneAttr 0x56469ac23900 <col:30>
| `-WarnUnusedResultAttr 0x56469ac23928 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56469ac23980 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56469ac23a20 <col:20>
| `-OptimizeNoneAttr 0x56469ac23a78 <col:30>
|-CXXMethodDecl 0x56469ac23ac8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56469ac23b68 <col:20>
| `-OptimizeNoneAttr 0x56469ac23bc0 <col:30>
|-CXXMethodDecl 0x56469ac23c08 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x56469ac23ca8 <col:20>
| `-OptimizeNoneAttr 0x56469ac23d00 <col:30>
|-CXXMethodDecl 0x56469ac23d48 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56469ac23e08 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56469ac23ed0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56469ac23f98 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56469ac24058 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56469ac24178 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56469ac3d9d0 <col:54, line:99:5>
|   `-ReturnStmt 0x56469ac3d9c0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56469ac3d9a8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56469ac3d978 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56469ac34458
|         `-CXXThisExpr 0x56469ac3d968 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56469ac24318 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56469ac24228 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56469ac3da80 <col:67, line:103:5>
|   `-BinaryOperator 0x56469ac3da60 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56469ac3d9f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56469ac34458
|     | `-CXXThisExpr 0x56469ac3d9e8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56469ac3da48 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac3da28 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56469ac24228 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56469ac24410 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56469ac3db00 <col:33, line:107:5>
|   `-ReturnStmt 0x56469ac3daf0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56469ac3dad8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56469ac3daa8 <col:16> 'void *' lvalue ->_destructor_argument 0x56469ac344c0
|         `-CXXThisExpr 0x56469ac3da98 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56469ac244d0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56469ac3e130 <col:25, line:113:5>
|   |-ParenExpr 0x56469ac3de78 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56469ac3de48 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac3dbb8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56469ac3db90 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56469ac3db58 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56469ac3db28 <col:24> '<bound member function type>' ->shared 0x56469ac23548
|   |   |       `-ImplicitCastExpr 0x56469ac3db78 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56469ac3db18 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56469ac3dc18 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac3dbf8 <col:42> 'int' 0
|   |   `-CallExpr 0x56469ac3dda8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56469ac3dd90 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac3dd70 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac3dde8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac3dc88 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56469ac3de00 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac3dcb0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac3de18 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac3dce8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56469ac3de30 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac3dd58 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac3dd40 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac3dd08 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56469ac3e078 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56469ac3dea8 <col:2> 'unsigned char *' lvalue ->_head 0x56469ac34260
|   | | `-CXXThisExpr 0x56469ac3de98 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56469ac3e060 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56469ac3e040 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56469ac3dee8 <col:10> 'unsigned char *' lvalue ->_data 0x56469ac342c8
|   |     | `-CXXThisExpr 0x56469ac3ded8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56469ac3e028 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56469ac3e008 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56469ac3df28 <col:18> 'unsigned char *' lvalue ->_tail 0x56469ac34330
|   |         | `-CXXThisExpr 0x56469ac3df18 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56469ac3dff0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56469ac3dfd0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56469ac3df68 <col:26> 'unsigned char *' lvalue ->_end 0x56469ac34398
|   |             | `-CXXThisExpr 0x56469ac3df58 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56469ac3dfb8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56469ac3df98 <col:33> 'int' 0
|   `-BinaryOperator 0x56469ac3e110 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56469ac3e0a8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56469ac34458
|     | `-CXXThisExpr 0x56469ac3e098 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56469ac3e0f8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56469ac3e0d8 <col:16> 'int' 0
|-CXXMethodDecl 0x56469ac24610 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56469ac24580 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56469ac246b8 <col:20>
| |-OptimizeNoneAttr 0x56469ac24710 <col:30>
| `-WarnUnusedResultAttr 0x56469ac24738 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56469ac24808 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56469ac24778 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56469ac248b0 <col:20>
| |-OptimizeNoneAttr 0x56469ac24908 <col:30>
| `-WarnUnusedResultAttr 0x56469ac24930 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56469ac24a68 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56469ac24970 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56469ac24b10 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56469ac24c10 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56469ac24b80 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56469ac24cb8 <col:20>
| `-OptimizeNoneAttr 0x56469ac24d10 <col:30>
|-CXXMethodDecl 0x56469ac24dd8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56469ac24d48 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56469ac24e80 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56469ac24f80 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56469ac24ef0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56469ac25028 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56469ac25128 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56469ac25098 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56469ac251d0 <col:20>
| `-OptimizeNoneAttr 0x56469ac25228 <col:30>
|-CXXMethodDecl 0x56469ac253b8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56469ac25268 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56469ac252e0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56469ac3d928 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56469ac25468 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56469ac25668 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56469ac254e0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56469ac25558 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac25878 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56469ac25728 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56469ac257a0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac25a88 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56469ac25938 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56469ac259b8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56469ac3d938 <col:39> 'int' 0
|-CXXMethodDecl 0x56469ac25b58 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56469ac25c20 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56469ac25ce8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56469ac25da8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56469ac25e70 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56469ac25fb8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56469ac25f28 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56469ac26188 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56469ac26078 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56469ac260f0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac26258 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56469ac26318 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56469ac263b8 <col:20>
| `-OptimizeNoneAttr 0x56469ac26410 <col:30>
|-CXXMethodDecl 0x56469ac26460 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56469ac26500 <col:20>
| `-OptimizeNoneAttr 0x56469ac26558 <col:30>
|-CXXMethodDecl 0x56469ac265a8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56469ac26668 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56469ac26730 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56469ac267d0 <col:20>
| `-OptimizeNoneAttr 0x56469ac26828 <col:30>
|-CXXMethodDecl 0x56469ac26978 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56469ac26868 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56469ac268e0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac26ac8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56469ac26a38 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac26ba0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56469ac26c60 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56469ac26d00 <col:20>
| `-OptimizeNoneAttr 0x56469ac26d58 <col:30>
|-CXXMethodDecl 0x56469ac26da8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56469ac26e48 <col:20>
| `-OptimizeNoneAttr 0x56469ac26ea0 <col:30>
|-CXXMethodDecl 0x56469ac26ef0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56469ac26fb8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56469ac27058 <col:20>
| `-OptimizeNoneAttr 0x56469ac270b0 <col:30>
|-CXXMethodDecl 0x56469ac270f8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56469ac27218 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56469ac27388 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56469ac272c8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56469ac27478 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56469ac27518 <col:20>
| `-OptimizeNoneAttr 0x56469ac27570 <col:30>
|-CXXMethodDecl 0x56469ac275c0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56469ac27680 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56469ac278b8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56469ac27730 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56469ac277a8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56469ac27968 <col:20>
| `-OptimizeNoneAttr 0x56469ac279c0 <col:30>
|-CXXMethodDecl 0x56469ac27a68 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56469ac27b08 <col:20>
| `-OptimizeNoneAttr 0x56469ac27b60 <col:30>
|-CXXMethodDecl 0x56469ac27bb0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56469ac27c50 <col:20>
| `-OptimizeNoneAttr 0x56469ac27ca8 <col:30>
|-CXXMethodDecl 0x56469ac27cf0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56469ac27d90 <col:20>
| `-OptimizeNoneAttr 0x56469ac27de8 <col:30>
|-CXXMethodDecl 0x56469ac27ee8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56469ac27e20 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56469ac27f90 <col:20>
| `-OptimizeNoneAttr 0x56469ac27fe8 <col:30>
|-CXXMethodDecl 0x56469ac281a8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56469ac28020 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56469ac28098 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56469ac28258 <col:20>
| `-OptimizeNoneAttr 0x56469ac282b0 <col:30>
|-CXXMethodDecl 0x56469ac28358 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56469ac28478 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56469ac28598 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56469ac28638 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56469ac28660 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56469ac28788 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56469ac28828 <col:20>
| `-OptimizeNoneAttr 0x56469ac28880 <col:30>
|-CXXMethodDecl 0x56469ac28928 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56469ac289c8 <col:20>
| `-OptimizeNoneAttr 0x56469ac28a20 <col:30>
|-AccessSpecDecl 0x56469ac28a48 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56469ac28a70 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56469ac28b70 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56469ac28bc0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac28b50 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56469ac28b30 <col:14> 'int' 48
|-CXXMethodDecl 0x56469ac28c28 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56469ac28cc8 <col:20>
| `-OptimizeNoneAttr 0x56469ac28d20 <col:30>
|-CXXMethodDecl 0x56469ac28d98 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56469ac28e38 <col:20>
| `-OptimizeNoneAttr 0x56469ac28e90 <col:30>
|-CXXMethodDecl 0x56469ac28f58 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56469ac28ec8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56469ac290f8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56469ac29298 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56469ac291a8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56469ac29340 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56469ac29440 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56469ac297f0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac29420 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56469ac29400 <col:9> 'int' 0
| |-EnumConstantDecl 0x56469ac294d0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56469ac29808 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac294b0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56469ac29490 <col:14> 'int' 1
| |-EnumConstantDecl 0x56469ac29560 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56469ac29820 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac29540 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56469ac29520 <col:14> 'int' 2
| |-EnumConstantDecl 0x56469ac295f0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56469ac29838 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac295d0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56469ac295b0 <col:14> 'int' 3
| |-EnumConstantDecl 0x56469ac29680 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56469ac29850 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac29660 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56469ac29640 <col:13> 'int' 4
| |-EnumConstantDecl 0x56469ac29710 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56469ac29868 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac296f0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56469ac296d0 <col:13> 'int' 5
| `-EnumConstantDecl 0x56469ac297a0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56469ac29880 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac29780 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56469ac29760 <col:14> 'int' 6
|-CXXMethodDecl 0x56469ac298e8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56469ac29988 <col:20>
| `-OptimizeNoneAttr 0x56469ac299e0 <col:30>
|-CXXMethodDecl 0x56469ac29ad8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56469ac29a18 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56469ac29b80 <col:20>
| `-OptimizeNoneAttr 0x56469ac29bd8 <col:30>
|-CXXMethodDecl 0x56469ac29c48 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56469ac29d70 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56469ac29ee8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56469ac29e20 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56469ac29fb0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56469ac2a078 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56469ac2a1b8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56469ac2a128 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56469ac2a260 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56469ac2a360 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56469ac2a560 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2a340 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56469ac2a320 <col:23> 'int' 0
| |-EnumConstantDecl 0x56469ac2a3f0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56469ac2a578 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2a3d0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56469ac2a3b0 <col:45> 'int' 4
| |-EnumConstantDecl 0x56469ac2a480 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56469ac2a590 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2a460 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56469ac2a440 <col:24> 'int' 0
| `-EnumConstantDecl 0x56469ac2a510 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56469ac2a5a8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac2a4f0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56469ac2a4d0 <col:47> 'int' 16
|-CXXMethodDecl 0x56469ac2a608 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56469ac2a778 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56469ac2a6b8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56469ac2a820 <col:20>
| `-OptimizeNoneAttr 0x56469ac2a878 <col:30>
|-CXXMethodDecl 0x56469ac2a8c8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56469ac3e250 <col:18, col:36>
|   `-ReturnStmt 0x56469ac3e240 <col:20, col:33>
|     `-ImplicitCastExpr 0x56469ac3e228 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56469ac3e208 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56469ac3e1d8 <col:27> '<bound member function type>' ->xanno 0x56469ac28928
|           `-CXXThisExpr 0x56469ac3e1c8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56469ac2a9c0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56469ac3e360 <col:30, col:48>
|   `-ReturnStmt 0x56469ac3e350 <col:32, col:45>
|     `-ImplicitCastExpr 0x56469ac3e338 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56469ac3e318 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56469ac3e2e8 <col:39> '<bound member function type>' ->xanno 0x56469ac28788
|           `-CXXThisExpr 0x56469ac3e2d8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56469ac2aaa8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56469ac3e4f8 <col:24, col:50>
|   `-ReturnStmt 0x56469ac3e4e8 <col:26, col:47>
|     `-UnaryOperator 0x56469ac3e4d0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56469ac3e4b0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56469ac3e498 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56469ac3e448 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56469ac33768
|         |   `-CXXMemberCallExpr 0x56469ac3e428 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56469ac3e3f8 <col:34> '<bound member function type>' ->xanno 0x56469ac28928
|         |       `-CXXThisExpr 0x56469ac3e3e8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56469ac3e478 <col:46> 'int' 0
|-CXXMethodDecl 0x56469ac2abb0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56469ac3e6c8 <col:36, col:62>
|   `-ReturnStmt 0x56469ac3e6b8 <col:38, col:59>
|     `-UnaryOperator 0x56469ac3e6a0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56469ac3e680 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56469ac3e668 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56469ac3e5e0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56469ac33768
|         |   `-CXXMemberCallExpr 0x56469ac3e5c0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56469ac3e590 <col:46> '<bound member function type>' ->xanno 0x56469ac28788
|         |       `-CXXThisExpr 0x56469ac3e580 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56469ac3e610 <col:58> 'int' 0
|-CXXMethodDecl 0x56469ac2acc8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56469ac3e860 <col:26, col:53>
|   `-ReturnStmt 0x56469ac3e850 <col:28, col:50>
|     `-UnaryOperator 0x56469ac3e838 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56469ac3e818 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56469ac3e800 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56469ac3e7b0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56469ac33a68
|         |   `-CXXMemberCallExpr 0x56469ac3e790 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56469ac3e760 <col:36> '<bound member function type>' ->xanno 0x56469ac28928
|         |       `-CXXThisExpr 0x56469ac3e750 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56469ac3e7e0 <col:49> 'int' 0
|-CXXMethodDecl 0x56469ac2ade8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56469ac3ea38 <col:38, col:65>
|   `-ReturnStmt 0x56469ac3ea28 <col:40, col:62>
|     `-UnaryOperator 0x56469ac3ea10 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56469ac3e9f0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56469ac3e9d8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56469ac3e948 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56469ac33a68
|         |   `-CXXMemberCallExpr 0x56469ac3e928 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56469ac3e8f8 <col:48> '<bound member function type>' ->xanno 0x56469ac28788
|         |       `-CXXThisExpr 0x56469ac3e8e8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56469ac3e978 <col:61> 'int' 0
|-CXXMethodDecl 0x56469ac2af98 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56469ac2aea0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56469ac3f108 <col:34, line:463:5>
|   |-ParenExpr 0x56469ac3ef50 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56469ac3ef20 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac3eb88 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac3eb58 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac3eaa8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac3ea90 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac3ea50 <col:23> 'int' lvalue ParmVar 0x56469ac2aea0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac3ea70 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac3eb38 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac3eb08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac3eac8 <col:33> 'int' lvalue ParmVar 0x56469ac2aea0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56469ac3eb20 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56469ac3eae8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56469ac3ebe8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac3ebc8 <col:56> 'int' 0
|   |   `-CallExpr 0x56469ac3ee80 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56469ac3ee68 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac3ee48 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac3eec0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac3ecd8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56469ac3eed8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac3ed08 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac3eef0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac3ed40 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56469ac3ef08 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac3ee30 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac3ee18 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac3edd8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56469ac3f0f8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56469ac3f0e0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56469ac3f0c0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56469ac3f090 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56469ac3f040 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56469ac33768
|         |   `-CXXMemberCallExpr 0x56469ac3f020 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56469ac3eff0 <col:9> '<bound member function type>' ->xanno 0x56469ac28788
|         |       `-CXXThisExpr 0x56469ac3efe0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56469ac3f0a8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56469ac3f070 <col:21> 'int' lvalue ParmVar 0x56469ac2aea0 'i' 'int'
|-CXXMethodDecl 0x56469ac2b1e8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56469ac2b058 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56469ac2b0d0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56469ac3f798 <col:40, line:472:5>
|   |-ParenExpr 0x56469ac3f5b0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56469ac3f580 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac3f260 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac3f230 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac3f180 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac3f168 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac3f128 <col:23> 'int' lvalue ParmVar 0x56469ac2b058 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac3f148 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac3f210 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac3f1e0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac3f1a0 <col:33> 'int' lvalue ParmVar 0x56469ac2b058 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56469ac3f1f8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56469ac3f1c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56469ac3f2c0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac3f2a0 <col:56> 'int' 0
|   |   `-CallExpr 0x56469ac3f4e0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56469ac3f4c8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac3f4a8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac3f520 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac3f330 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56469ac3f538 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac3f360 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac3f550 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac3f398 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56469ac3f568 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac3f490 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac3f478 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac3f438 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56469ac3f778 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56469ac3f720 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56469ac3f6f0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56469ac3f6a0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56469ac33768
|     | |   `-CXXMemberCallExpr 0x56469ac3f680 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56469ac3f650 <col:2> '<bound member function type>' ->xanno 0x56469ac28928
|     | |       `-CXXThisExpr 0x56469ac3f640 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56469ac3f708 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56469ac3f6d0 <col:14> 'int' lvalue ParmVar 0x56469ac2b058 'i' 'int'
|     `-ImplicitCastExpr 0x56469ac3f760 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac3f740 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56469ac2b0d0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56469ac2b3a8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56469ac2b2b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56469ac3ff18 <col:36, line:485:5>
|   |-ParenExpr 0x56469ac3fc80 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac3fc50 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac3f930 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac3f900 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac3f810 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac3f7f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac3f7b8 <col:23> 'int' lvalue ParmVar 0x56469ac2b2b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac3f7d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac3f8e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac3f8c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac3f830 <col:33> 'int' lvalue ParmVar 0x56469ac2b2b0 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac3f8a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac3f890 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac3f850 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac3f870 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56469ac3f990 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac3f970 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac3fbb0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac3fb98 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac3fb78 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac3fbf0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac3fa00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56469ac3fc08 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac3fa38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac3fc20 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac3fa70 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56469ac3fc38 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac3fb60 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac3fb48 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac3fb08 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56469ac3ff08 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56469ac3fef0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56469ac3fed8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56469ac3fea8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56469ac3fe48 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56469ac3fe18 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56469ac3fd90 <col:61, col:70> 'char const[48]' lvalue ->c 0x56469ac33640
|             |   `-CXXMemberCallExpr 0x56469ac3fd70 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56469ac3fd40 <col:61> '<bound member function type>' ->xanno 0x56469ac28788
|             |       `-CXXThisExpr 0x56469ac3fd30 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56469ac3fe30 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56469ac3fdc0 <col:74> 'int' lvalue ParmVar 0x56469ac2b2b0 'i' 'int'
|-CXXMethodDecl 0x56469ac2b5f8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56469ac2b468 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56469ac2b4e0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56469ac40668 <col:42, line:500:5>
|   |-ParenExpr 0x56469ac40400 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac403d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac400b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac40080 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac3ff90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac3ff78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac3ff38 <col:23> 'int' lvalue ParmVar 0x56469ac2b468 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac3ff58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac40060 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac40048 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac3ffb0 <col:33> 'int' lvalue ParmVar 0x56469ac2b468 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac40028 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac40010 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac3ffd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac3fff0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56469ac40110 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac400f0 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac40330 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac40318 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac402f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac40370 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac40180 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56469ac40388 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac401b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac403a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac401f0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56469ac403b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac402e0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac402c8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac40288 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56469ac40648 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56469ac405f8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56469ac405c8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56469ac40570 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56469ac40540 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56469ac404f0 <col:48, col:57> 'char [48]' lvalue ->c 0x56469ac33640
|     |     |   `-CXXMemberCallExpr 0x56469ac404d0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56469ac404a0 <col:48> '<bound member function type>' ->xanno 0x56469ac28928
|     |     |       `-CXXThisExpr 0x56469ac40490 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56469ac40558 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56469ac40520 <col:61> 'int' lvalue ParmVar 0x56469ac2b468 'i' 'int'
|     `-ImplicitCastExpr 0x56469ac40630 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac40610 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56469ac2b4e0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56469ac2b7b8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56469ac2b6c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56469ac40dc8 <col:35, line:513:5>
|   |-ParenExpr 0x56469ac40ad8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac40aa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac40800 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac407d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac406e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac406c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac40688 <col:23> 'int' lvalue ParmVar 0x56469ac2b6c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac406a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac407b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac40798 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac40700 <col:33> 'int' lvalue ParmVar 0x56469ac2b6c0 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac40778 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac40760 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac40720 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac40740 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56469ac40860 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac40840 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac40a08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac409f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac409d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac40a48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac408d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56469ac40a60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac40908 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac40a78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac40940 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56469ac40a90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac409b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac409a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac40960 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56469ac40db8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56469ac40da0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56469ac40d88 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56469ac40d58 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56469ac40cd0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56469ac40ca0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56469ac40c50 <col:60, col:69> 'char const[48]' lvalue ->c 0x56469ac33640
|             |   `-CXXMemberCallExpr 0x56469ac40c30 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56469ac40c00 <col:60> '<bound member function type>' ->xanno 0x56469ac28788
|             |       `-CXXThisExpr 0x56469ac40bf0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56469ac40cb8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56469ac40c80 <col:73> 'int' lvalue ParmVar 0x56469ac2b6c0 'i' 'int'
|-CXXMethodDecl 0x56469ac2ba08 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56469ac2b878 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56469ac2b8f0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56469ac414e8 <col:41, line:528:5>
|   |-ParenExpr 0x56469ac41270 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac41240 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac40f60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac40f30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac40e40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac40e28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac40de8 <col:23> 'int' lvalue ParmVar 0x56469ac2b878 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac40e08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac40f10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac40ef8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac40e60 <col:33> 'int' lvalue ParmVar 0x56469ac2b878 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac40ed8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac40ec0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac40e80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac40ea0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56469ac40fc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac40fa0 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac411a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac41188 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac41168 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac411e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac41030 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56469ac411f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac41068 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac41210 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac410a0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56469ac41228 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac41150 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac41138 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac410f8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56469ac414c8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56469ac41478 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56469ac41448 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56469ac413f0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56469ac413b0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56469ac41360 <col:47, col:56> 'char [48]' lvalue ->c 0x56469ac33640
|     |     |   `-CXXMemberCallExpr 0x56469ac41340 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56469ac41310 <col:47> '<bound member function type>' ->xanno 0x56469ac28928
|     |     |       `-CXXThisExpr 0x56469ac41300 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56469ac413c8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56469ac41390 <col:60> 'int' lvalue ParmVar 0x56469ac2b878 'i' 'int'
|     `-ImplicitCastExpr 0x56469ac414b0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac41490 <col:65> 'int16_t':'short' lvalue ParmVar 0x56469ac2b8f0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56469ac2bbc8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56469ac2bad0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56469ac41bb8 <col:36, line:541:5>
|   |-ParenExpr 0x56469ac41958 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac41928 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac41680 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac41650 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac41560 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac41548 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac41508 <col:23> 'int' lvalue ParmVar 0x56469ac2bad0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac41528 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac41630 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac41618 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac41580 <col:33> 'int' lvalue ParmVar 0x56469ac2bad0 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac415f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac415e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac415a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac415c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56469ac416e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac416c0 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac41888 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac41870 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac41850 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac418c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac41750 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56469ac418e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac41788 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac418f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac417c0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56469ac41910 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac41838 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac41820 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac417e0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56469ac41ba8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56469ac41b90 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56469ac41b78 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56469ac41b48 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56469ac41af0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56469ac41ac0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56469ac41a70 <col:61, col:70> 'char const[48]' lvalue ->c 0x56469ac33640
|             |   `-CXXMemberCallExpr 0x56469ac41a50 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56469ac41a20 <col:61> '<bound member function type>' ->xanno 0x56469ac28788
|             |       `-CXXThisExpr 0x56469ac41a10 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56469ac41ad8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56469ac41aa0 <col:74> 'int' lvalue ParmVar 0x56469ac2bad0 'i' 'int'
|-CXXMethodDecl 0x56469ac2bd98 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56469ac2bc88 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56469ac2bd00 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56469ac2be48 <col:20>
| `-OptimizeNoneAttr 0x56469ac2bea0 <col:30>
|-CXXMethodDecl 0x56469ac2bfd8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56469ac2bee0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56469ac42288 <col:35, line:562:5>
|   |-ParenExpr 0x56469ac42028 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac41ff8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac41d50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac41d20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac41c30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac41c18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac41bd8 <col:23> 'int' lvalue ParmVar 0x56469ac2bee0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac41bf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac41d00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac41ce8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac41c50 <col:33> 'int' lvalue ParmVar 0x56469ac2bee0 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac41cc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac41cb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac41c70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac41c90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56469ac41db0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac41d90 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac41f58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac41f40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac41f20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac41f98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac41e20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56469ac41fb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac41e58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac41fc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac41e90 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56469ac41fe0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac41f08 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac41ef0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac41eb0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56469ac42278 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56469ac42260 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56469ac42248 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56469ac42218 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56469ac421c0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56469ac42190 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56469ac42140 <col:60, col:69> 'char const[48]' lvalue ->c 0x56469ac33640
|             |   `-CXXMemberCallExpr 0x56469ac42120 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56469ac420f0 <col:60> '<bound member function type>' ->xanno 0x56469ac28788
|             |       `-CXXThisExpr 0x56469ac420e0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56469ac421a8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56469ac42170 <col:73> 'int' lvalue ParmVar 0x56469ac2bee0 'i' 'int'
|-CXXMethodDecl 0x56469ac2c1e8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56469ac2c098 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56469ac2c110 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56469ac42968 <col:41, line:577:5>
|   |-ParenExpr 0x56469ac426f8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac426c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac42420 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac423f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac42300 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac422e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac422a8 <col:23> 'int' lvalue ParmVar 0x56469ac2c098 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac422c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac423d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac423b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac42320 <col:33> 'int' lvalue ParmVar 0x56469ac2c098 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac42398 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac42380 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac42340 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac42360 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56469ac42480 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac42460 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac42628 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac42610 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac425f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac42668 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac424f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56469ac42680 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac42528 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac42698 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac42560 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56469ac426b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac425d8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac425c0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac42580 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56469ac42948 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56469ac428f8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56469ac428c8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56469ac42868 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56469ac42838 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56469ac427e8 <col:47, col:56> 'char [48]' lvalue ->c 0x56469ac33640
|     |     |   `-CXXMemberCallExpr 0x56469ac427c8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56469ac42798 <col:47> '<bound member function type>' ->xanno 0x56469ac28928
|     |     |       `-CXXThisExpr 0x56469ac42788 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56469ac42850 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56469ac42818 <col:60> 'int' lvalue ParmVar 0x56469ac2c098 'i' 'int'
|     `-ImplicitCastExpr 0x56469ac42930 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac42910 <col:65> 'int32_t':'int' lvalue ParmVar 0x56469ac2c110 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56469ac2c3a8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56469ac2c2b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56469ac43098 <col:36, line:591:5>
|   |-ParenExpr 0x56469ac42dd8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac42da8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac42b00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac42ad0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac429e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac429c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac42988 <col:23> 'int' lvalue ParmVar 0x56469ac2c2b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac429a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac42ab0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac42a98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac42a00 <col:33> 'int' lvalue ParmVar 0x56469ac2c2b0 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac42a78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac42a60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac42a20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac42a40 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56469ac42b60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac42b40 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac42d08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac42cf0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac42cd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac42d48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac42bd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56469ac42d60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac42c08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac42d78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac42c40 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56469ac42d90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac42cb8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac42ca0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac42c60 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56469ac43088 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56469ac43070 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56469ac43058 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56469ac43028 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56469ac42fa0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56469ac42f70 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56469ac42f20 <col:61, col:70> 'char const[48]' lvalue ->c 0x56469ac33640
|             |   `-CXXMemberCallExpr 0x56469ac42f00 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56469ac42ed0 <col:61> '<bound member function type>' ->xanno 0x56469ac28788
|             |       `-CXXThisExpr 0x56469ac42ec0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56469ac42f88 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56469ac42f50 <col:74> 'int' lvalue ParmVar 0x56469ac2c2b0 'i' 'int'
|-CXXMethodDecl 0x56469ac2c5f8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56469ac2c468 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56469ac2c4e0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56469ac43778 <col:42, line:606:5>
|   |-ParenExpr 0x56469ac43508 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56469ac434d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac43230 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac43200 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac43110 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac430f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac430b8 <col:23> 'int' lvalue ParmVar 0x56469ac2c468 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac430d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac431e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56469ac431c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac43130 <col:33> 'int' lvalue ParmVar 0x56469ac2c468 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac431a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac43190 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac43150 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56469ac43170 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56469ac43290 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac43270 <col:60> 'int' 0
|   |   `-CallExpr 0x56469ac43438 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56469ac43420 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac43400 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac43478 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac43300 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56469ac43490 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac43338 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac434a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac43370 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56469ac434c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac433e8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac433d0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac43390 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56469ac43758 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56469ac43708 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56469ac436d8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56469ac43678 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56469ac43648 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56469ac435f8 <col:48, col:57> 'char [48]' lvalue ->c 0x56469ac33640
|     |     |   `-CXXMemberCallExpr 0x56469ac435d8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56469ac435a8 <col:48> '<bound member function type>' ->xanno 0x56469ac28928
|     |     |       `-CXXThisExpr 0x56469ac43598 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56469ac43660 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56469ac43628 <col:61> 'int' lvalue ParmVar 0x56469ac2c468 'i' 'int'
|     `-ImplicitCastExpr 0x56469ac43740 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56469ac43720 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56469ac2c4e0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56469ac2c790 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56469ac2c6c0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56469ac43fe8 <col:33, line:620:5>
|   |-ParenExpr 0x56469ac43d60 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56469ac43d30 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac43980 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac43950 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac437f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac437d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac43798 <col:23> 'int' lvalue ParmVar 0x56469ac2c6c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac437b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac43930 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56469ac43918 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac43810 <col:33> 'int' lvalue ParmVar 0x56469ac2c6c0 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac438f8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac438e0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac43830 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56469ac438b8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56469ac438a0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56469ac43868 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56469ac439e0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac439c0 <col:79> 'int' 0
|   |   `-CallExpr 0x56469ac43c90 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56469ac43c78 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac43c58 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac43cd0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac43ac8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56469ac43ce8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac43b10 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac43d00 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac43b48 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56469ac43d18 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac43c40 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac43c28 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac43be8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56469ac43fd8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56469ac43fc0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56469ac43fa8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56469ac43f78 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56469ac43ef0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56469ac43ec0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56469ac43e70 <col:67, col:76> 'char const[48]' lvalue ->c 0x56469ac33640
|             |   `-CXXMemberCallExpr 0x56469ac43e50 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56469ac43e20 <col:67> '<bound member function type>' ->xanno 0x56469ac28788
|             |       `-CXXThisExpr 0x56469ac43e10 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56469ac43ed8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56469ac43ea0 <col:80> 'int' lvalue ParmVar 0x56469ac2c6c0 'i' 'int'
|-CXXMethodDecl 0x56469ac2c9a8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56469ac2c850 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56469ac2c8d0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56469ac44810 <col:45, line:635:5>
|   |-ParenExpr 0x56469ac44558 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56469ac44528 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56469ac441f0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56469ac441c0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56469ac44060 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56469ac44048 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56469ac44008 <col:23> 'int' lvalue ParmVar 0x56469ac2c850 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56469ac44028 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56469ac441a0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56469ac44188 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56469ac44080 <col:33> 'int' lvalue ParmVar 0x56469ac2c850 'i' 'int'
|   |   |     `-BinaryOperator 0x56469ac44168 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56469ac44150 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56469ac440a0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56469ac28b70 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56469ac44128 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56469ac44110 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56469ac440d8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56469ac44250 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56469ac44230 <col:79> 'int' 0
|   |   `-CallExpr 0x56469ac44488 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56469ac44470 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56469ac44450 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56469a795220 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56469ac444c8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac442c0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56469ac444e0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56469ac44308 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56469ac444f8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56469ac44340 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56469ac44510 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56469ac44438 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56469ac44420 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56469ac443d8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56469ac447f0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56469ac44758 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56469ac44728 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56469ac446c8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56469ac44698 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56469ac44648 <col:54, col:63> 'char [48]' lvalue ->c 0x56469ac33640
|     |     |   `-CXXMemberCallExpr 0x56469ac44628 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56469ac445f8 <col:54> '<bound member function type>' ->xanno 0x56469ac28928
|     |     |       `-CXXThisExpr 0x56469ac445e8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56469ac446b0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56469ac44678 <col:67> 'int' lvalue ParmVar 0x56469ac2c850 'i' 'int'
|     `-CXXConstCastExpr 0x56469ac447c0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56469ac447a8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56469ac44770 <col:91> 'const void *' lvalue ParmVar 0x56469ac2c8d0 'x' 'const void *'
|-CXXMethodDecl 0x56469ac2ca78 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56469ac44898 <col:34, line:640:5>
|   `-ReturnStmt 0x56469ac44888 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56469ac44870 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56469ac44840 <col:16> 'Packet *' lvalue ->_data_packet 0x56469ac341f8
|         `-CXXThisExpr 0x56469ac44830 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56469ac2cbb8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56469ac2cb28 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469ac3d958 <col:46> 'bool' true
|-CXXMethodDecl 0x56469ac2cd38 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56469ac2cc70 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56469ac2cde0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56469ac2d590 <line:660:22> "" ""
| |-EnumConstantDecl 0x56469ac2cee0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d600 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2cec0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56469ac2cea0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56469ac22040 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56469ac2cf70 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d618 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2cf50 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56469ac2cf30 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56469ac220d0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56469ac2d000 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d630 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2cfe0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56469ac2cfc0 <col:21> 'int' 0
| |-EnumConstantDecl 0x56469ac2d090 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d648 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2d070 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56469ac2d050 <col:19> 'int' 16
| |-EnumConstantDecl 0x56469ac2d120 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d660 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2d100 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56469ac2d0e0 <col:21> 'int' 16
| |-EnumConstantDecl 0x56469ac2d1b0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d678 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2d190 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56469ac2d170 <col:19> 'int' 32
| |-EnumConstantDecl 0x56469ac2d240 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d690 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2d220 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56469ac2d200 <col:19> 'int' EnumConstant 0x56469ac2d090 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56469ac2d2d0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d6a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2d2b0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56469ac2d290 <col:19> 'int' EnumConstant 0x56469ac2d1b0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56469ac2d3a0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d6c0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2d380 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56469ac2d360 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56469ac2d320 <col:23> 'int' EnumConstant 0x56469ac2d2d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56469ac2d340 <col:40> 'int' 2
| |-EnumConstantDecl 0x56469ac2d470 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56469ac2d6d8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56469ac2d450 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56469ac2d430 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56469ac2d3f0 <col:23> 'int' EnumConstant 0x56469ac2d2d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56469ac2d410 <col:40> 'int' 4
| `-EnumConstantDecl 0x56469ac2d540 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56469ac2d6f0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469ac2d520 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56469ac2d500 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56469ac2d4c0 <col:23> 'int' EnumConstant 0x56469ac2d2d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56469ac2d4e0 <col:40> 'int' 8
|-CXXMethodDecl 0x56469ac2d730 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56469ac2d7d0 <col:68> "" ""
|-CXXMethodDecl 0x56469ac2d868 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56469ac2d908 <col:45> "" ""
|-CXXMethodDecl 0x56469ac2d9a0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56469ac2da40 <col:57> "" ""
|-CXXMethodDecl 0x56469ac2dad8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56469ac2db78 <col:45> "" ""
|-CXXMethodDecl 0x56469ac2dc10 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56469ac2dcb0 <col:57> "" ""
|-CXXMethodDecl 0x56469ac2dd40 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56469ac2dde0 <col:51> "" ""
|-CXXMethodDecl 0x56469ac2de70 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56469ac2df10 <col:63> "" ""
|-CXXMethodDecl 0x56469ac2dfa0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56469ac2e040 <col:53> "" ""
|-CXXMethodDecl 0x56469ac2e0d0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56469ac2e170 <col:65> "" ""
|-CXXMethodDecl 0x56469ac2e288 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56469ac2e1f8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56469ac2e330 <col:61> "" ""
|-CXXMethodDecl 0x56469ac2e4c8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56469ac2e3b8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56469ac2e430 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56469ac2e578 <col:67> "" ""
|-CXXMethodDecl 0x56469ac2e690 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56469ac2e600 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56469ac2e738 <col:63> "" ""
|-CXXMethodDecl 0x56469ac2e8d0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56469ac2e7c0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56469ac2e838 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56469ac2e980 <col:69> "" ""
|-CXXMethodDecl 0x56469ac2ea98 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56469ac2ea08 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56469ac2eb40 <col:63> "" ""
|-CXXMethodDecl 0x56469ac31218 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56469ac31108 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56469ac31180 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469ac312c8 <col:69> "" ""
|-CXXMethodDecl 0x56469ac313e0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56469ac31350 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56469ac31488 <col:62> "" ""
|-CXXMethodDecl 0x56469ac31620 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56469ac31510 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56469ac31588 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56469ac316d0 <col:68> "" ""
|-CXXMethodDecl 0x56469ac317e8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56469ac31758 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56469ac31890 <col:63> "" ""
|-CXXMethodDecl 0x56469ac31a28 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56469ac31918 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56469ac31990 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56469ac31ad8 <col:69> "" ""
|-CXXMethodDecl 0x56469ac31b68 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56469ac31c08 <col:64> "" ""
|-CXXMethodDecl 0x56469ac31c98 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56469ac31d38 <col:52> "" ""
|-CXXMethodDecl 0x56469ac31dc8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56469ac31e68 <col:67> "" ""
|-CXXMethodDecl 0x56469ac31ef8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56469ac31f98 <col:55> "" ""
|-CXXMethodDecl 0x56469ac320b0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56469ac32020 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56469ac32158 <col:58> "" ""
|-CXXMethodDecl 0x56469ac322f0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56469ac321e0 <col:33> col:36 'int'
| |-ParmVarDecl 0x56469ac32258 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56469ac323a0 <col:62> "" ""
|-CXXMethodDecl 0x56469ac324b8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56469ac32428 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56469ac32560 <col:58> "" ""
|-CXXMethodDecl 0x56469ac326f8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56469ac325e8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56469ac32660 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56469ac327a8 <col:62> "" ""
|-CXXMethodDecl 0x56469ac328c0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56469ac32830 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56469ac32968 <col:60> "" ""
|-CXXMethodDecl 0x56469ac32b00 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56469ac329f0 <col:34> col:37 'int'
| |-ParmVarDecl 0x56469ac32a68 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56469ac32bb0 <col:64> "" ""
|-CXXMethodDecl 0x56469ac32cc8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56469ac32c38 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56469ac32d70 <col:58> "" ""
|-CXXMethodDecl 0x56469ac32f08 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56469ac32df8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56469ac32e70 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56469ac32fb8 <col:62> "" ""
|-CXXMethodDecl 0x56469ac330d0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56469ac33040 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56469ac33178 <col:59> "" ""
|-CXXMethodDecl 0x56469ac33310 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56469ac33200 <col:33> col:36 'int'
| |-ParmVarDecl 0x56469ac33278 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56469ac333c0 <col:63> "" ""
|-AccessSpecDecl 0x56469ac33430 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56469ac33458 prev 0x56469ac28660 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56469ac33550 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56469ac33640 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56469ac33768 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56469ac338e8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56469ac33a68 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56469ac33be8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56469ac44a18 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56469ac45288 <col:11>
| |-CXXDestructorDecl 0x56469ac44af0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56469ac44c28 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56469ac44c28
| | `-ParmVarDecl 0x56469ac44d38 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56469ac44dd8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56469ac44dd8
| | `-ParmVarDecl 0x56469ac44ee8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56469ac47ca8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56469ac47db8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56469ac48038 <col:11>
| |   `-ReturnStmt 0x56469ac48028 <col:11>
| |     `-UnaryOperator 0x56469ac48010 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56469ac48000 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56469ac47e28 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56469ac47e28
|   `-ParmVarDecl 0x56469ac47f38 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56469ac33c50 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56469ac33d68 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56469ac33e08 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56469ac33e70 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56469ac33ed8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56469ac33f40 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56469ac33fa0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56469ac34060 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56469ac340c0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56469ac34120 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56469ac44928 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56469ac33e08 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56469ac45298 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56469ac452f0 <col:12>
| |-CXXConstructorDecl 0x56469ac44f58 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56469ac44f58
| | `-ParmVarDecl 0x56469ac45068 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56469ac45108 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56469ac45108
| | `-ParmVarDecl 0x56469ac45218 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56469ac47390 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56469ac34198 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56469ac341f8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56469ac34260 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56469ac342c8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56469ac34330 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56469ac34398 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56469ac343f8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56469ac34458 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56469ac344c0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56469ac34548 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56469ac34198 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56469ac448c0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56469ac343f8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56469ac45300 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56469ac45360 <col:21, line:755:5>
|-CXXConstructorDecl 0x56469ac346e8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56469ac34628 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56469ac347e0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56469ac349c8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56469ac348d0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56469ac34c98 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56469ac34a80 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56469ac34af8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56469ac34b70 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac34eb8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56469ac34d68 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56469ac34de0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56469ac3d498 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56469ac34f78 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56469ac34ff0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56469ac35068 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56469ac3d5f0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56469ac3d560 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56469ac3d738 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56469ac3d6a8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56469ac3d830 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class DoubleArg
         0 |   class NumArg (base) (empty)
         0 |   int status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae5b9f8 <../dummy_inc/click/args.hh:1244:1, line:1249:1> line:1244:7 referenced class DoubleArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x56469ae5bb58 <col:1, col:7> col:7 implicit referenced class DoubleArg
|-AccessSpecDecl 0x56469ae5bbe8 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x56469ae5bc70 <line:1245:5, line:1246:5> line:1245:5 used DoubleArg 'void ()'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x56469ae5c060 <col:5> 'NumArg' 'void () noexcept'
| `-CompoundStmt 0x56469ae5c0c8 <col:17, line:1246:5>
|-CXXMethodDecl 0x56469ae5bf08 <line:1247:5, col:86> col:10 used parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x56469ae5bd28 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x56469ae5bda8 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x56469ae5be20 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x56469ae5c040 <col:76> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
|-FieldDecl 0x56469ae5bfd8 <line:1248:5, col:9> col:9 status 'int'
|-CXXConstructorDecl 0x56469afc87b8 <line:1244:7> col:7 implicit constexpr DoubleArg 'void (const DoubleArg &)' inline default trivial noexcept-unevaluated 0x56469afc87b8
| `-ParmVarDecl 0x56469afc88c8 <col:7> col:7 'const DoubleArg &'
|-CXXConstructorDecl 0x56469afc8968 <col:7> col:7 implicit constexpr DoubleArg 'void (DoubleArg &&)' inline default trivial noexcept-unevaluated 0x56469afc8968
| `-ParmVarDecl 0x56469afc8a78 <col:7> col:7 'DoubleArg &&'
`-CXXDestructorDecl 0x56469afc8b18 <col:7> col:7 implicit referenced ~DoubleArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.DoubleArg = type { i32 }
  NonVirtualBaseLLVMType:%class.DoubleArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469add7e50 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469add7f68 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x56469add8010 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x56469add8078 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x56469add80e0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x56469add8190 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x56469add8010 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x56469add9070 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x56469add9028 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x56469add8ff0 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x56469add8fd8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x56469add8f80 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x56469aa4b4a0 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x56469add8078 'len' 'int'
| | `-IntegerLiteral 0x56469add90e8 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x56469add80e0 'cap' 'int'
| | `-IntegerLiteral 0x56469add9150 <col:20> 'int' 0
| `-CompoundStmt 0x56469add91d0 <col:23, line:119:2>
|-CXXConstructorDecl 0x56469add8308 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x56469add8248 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x56469add91e0 <col:37, line:121:2>
|-CXXConstructorDecl 0x56469addb3f8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56469addb508 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x56469add8010 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x56469addce40 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x56469addce10 <col:12> 'unsigned char *const' lvalue .s 0x56469add8010
| |     `-DeclRefExpr 0x56469addcdf0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56469addb508 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x56469add8078 'len' 'int'
| | `-ImplicitCastExpr 0x56469addced0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56469addcea0 <col:12> 'const int' lvalue .len 0x56469add8078
| |     `-DeclRefExpr 0x56469addce80 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56469addb508 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x56469add80e0 'cap' 'int'
| | `-ImplicitCastExpr 0x56469addcf60 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56469addcf30 <col:12> 'const int' lvalue .cap 0x56469add80e0
| |     `-DeclRefExpr 0x56469addcf10 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56469addb508 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x56469addcfb8 <col:12>
|-CXXConstructorDecl 0x56469addb5a8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x56469addb5a8
| `-ParmVarDecl 0x56469addb6b8 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x56469addd270 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469add3600 prev 0x56469acb76d0 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56469add36f8 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x56469add3788 <col:21, col:27> col:21 public
|-TypedefDecl 0x56469add37c8 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56469a6f2fd0 'const char *'
|   `-QualType 0x56469a6f2521 'const char' const
|     `-BuiltinType 0x56469a6f2520 'char'
|-TypedefDecl 0x56469add3838 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x56469a6f31a0 'char *'
|   `-BuiltinType 0x56469a6f2520 'char'
|-TypedefDecl 0x56469add3970 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x56469add38e0 'int (StringAccum::*)() const'
|   |-RecordType 0x56469a9b6b50 'StringAccum'
|   | `-CXXRecord 0x56469add3600 'StringAccum'
|   `-ParenType 0x56469aa254b0 'int () const' sugar
|     `-FunctionProtoType 0x56469a9fa050 'int () const' const cdecl
|       `-BuiltinType 0x56469a6f2580 'int'
|-CXXConstructorDecl 0x56469add3a30 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x56469add3b80 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x56469add3af0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x56469add3cd0 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x56469add3c40 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x56469add3e78 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x56469add3db8 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x56469add4028 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x56469add3f68 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x56469add4120 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x56469add42d8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x56469add4210 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x56469add4458 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x56469add4390 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x56469add4550 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56469add4618 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x56469add46e0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56469add47a8 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x56469add4870 <line:54:5, col:23> col:17 used c_str 'const char *()'
|-CXXConversionDecl 0x56469add49d8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56469add4aa8 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56469add4b68 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56469add4c78 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x56469add4d88 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x56469add4e48 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x56469add4f08 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x56469add5050 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56469add4fc0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56469add51e0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x56469add5110 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x56469add52a8 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56469add53a0 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x56469add5460 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56469add5528 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x56469add55e8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56469add56a8 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56469add5768 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56469add58b8 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x56469add5820 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x56469add5a08 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x56469add5978 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x56469add5b60 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x56469add5ac8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x56469add5cb0 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x56469add5c20 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x56469add5ed0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x56469add5d70 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x56469add5df0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x56469add8ea8 <col:53> 'int' 0
|-CXXMethodDecl 0x56469add6028 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x56469add5f98 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x56469add8ec8 <col:34> 'int' 1
|-CXXMethodDecl 0x56469add6170 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x56469add60e0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56469add62c0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x56469add6230 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x56469add6410 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x56469add6380 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x56469add6560 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56469add64d0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56469add6738 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56469add6620 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56469add66a0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56469add6918 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56469add6800 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x56469add6880 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x56469add6af8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56469add69e0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56469add6a60 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56469add6cd8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56469add6bc0 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x56469add6c40 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x56469add6eb8 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56469add6da0 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56469add6e20 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56469add7218 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x56469add7000 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56469add7080 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56469add8ee8 <col:56> 'int' 10
| `-ParmVarDecl 0x56469add70f8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469add8f08 <col:77> 'bool' true
|-CXXMethodDecl 0x56469add7578 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x56469add7360 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56469add73e0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x56469add8f18 <col:57> 'int' 10
| `-ParmVarDecl 0x56469add7458 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56469add8f38 <col:78> 'bool' true
|-CXXMethodDecl 0x56469add77a0 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x56469add7648 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x56469add76c8 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x56469add7898 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x56469add7a08 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x56469add7948 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x56469add7b58 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x56469add7ac8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x56469add7c00 <col:51> "" ""
|-AccessSpecDecl 0x56469add7c70 <line:106:3, col:10> col:3 private
|-EnumDecl 0x56469add7c98 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x56469add7de8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x56469add7e38 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56469add7dc8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x56469add7d98 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x56469aa2e218 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x56469add7e50 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56469add7f68 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x56469add8010 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x56469add8078 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x56469add80e0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x56469add8190 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x56469add8010 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x56469add9070 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x56469add9028 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x56469add8ff0 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x56469add8fd8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x56469add8f80 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x56469aa4b4a0 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x56469add8078 'len' 'int'
| | | `-IntegerLiteral 0x56469add90e8 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x56469add80e0 'cap' 'int'
| | | `-IntegerLiteral 0x56469add9150 <col:20> 'int' 0
| | `-CompoundStmt 0x56469add91d0 <col:23, line:119:2>
| |-CXXConstructorDecl 0x56469add8308 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x56469add8248 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x56469add91e0 <col:37, line:121:2>
| |-CXXConstructorDecl 0x56469addb3f8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56469addb508 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x56469add8010 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x56469addce40 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x56469addce10 <col:12> 'unsigned char *const' lvalue .s 0x56469add8010
| | |     `-DeclRefExpr 0x56469addcdf0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56469addb508 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x56469add8078 'len' 'int'
| | | `-ImplicitCastExpr 0x56469addced0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56469addcea0 <col:12> 'const int' lvalue .len 0x56469add8078
| | |     `-DeclRefExpr 0x56469addce80 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56469addb508 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x56469add80e0 'cap' 'int'
| | | `-ImplicitCastExpr 0x56469addcf60 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56469addcf30 <col:12> 'const int' lvalue .cap 0x56469add80e0
| | |     `-DeclRefExpr 0x56469addcf10 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56469addb508 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x56469addcfb8 <col:12>
| |-CXXConstructorDecl 0x56469addb5a8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x56469addb5a8
| | `-ParmVarDecl 0x56469addb6b8 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x56469addd270 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x56469add83e0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x56469add84e0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x56469add8448 <col:16> col:19 'int'
|-CXXMethodDecl 0x56469add86c0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x56469add85a0 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x56469add8620 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x56469add88a0 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x56469add8788 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56469add8808 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56469add89f8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x56469add8968 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x56469add8ba0 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x56469add8b10 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x56469add8e68 <line:132:5, col:70> col:25
  `-FunctionDecl 0x56469add8da8 parent 0x56469a6f2488 <col:5, col:70> col:25 used operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x56469add8c58 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x56469add8cd0 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FilenameArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469ae61e20 <../dummy_inc/click/args.hh:1379:1, line:1381:1> line:1379:7 referenced class FilenameArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469ae61f38 <col:1, col:7> col:7 implicit class FilenameArg
|-AccessSpecDecl 0x56469ae61fc8 <col:21, col:27> col:21 public
|-CXXMethodDecl 0x56469ae621c0 <line:1380:5, col:93> col:17 used parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x56469ae62000 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x56469ae62078 <col:42, col:50> col:50 result 'String &'
| `-ParmVarDecl 0x56469ae620f0 <col:58, col:83> col:76 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x56469ae62290 <col:83> 'const ArgContext' lvalue Var 0x56469ae43f00 'blank_args' 'const ArgContext'
|-CXXConstructorDecl 0x56469b033840 <line:1379:7> col:7 implicit referenced constexpr FilenameArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56469b033948 <col:7> col:7 implicit constexpr FilenameArg 'void (const FilenameArg &)' inline default trivial noexcept-unevaluated 0x56469b033948
| `-ParmVarDecl 0x56469b033a58 <col:7> col:7 'const FilenameArg &'
|-CXXConstructorDecl 0x56469b033af8 <col:7> col:7 implicit constexpr FilenameArg 'void (FilenameArg &&)' inline default trivial noexcept-unevaluated 0x56469b033af8
| `-ParmVarDecl 0x56469b033c08 <col:7> col:7 'FilenameArg &&'
`-CXXDestructorDecl 0x56469b033ca8 <col:7> col:7 implicit referenced ~FilenameArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.FilenameArg = type { i8 }
  NonVirtualBaseLLVMType:%class.FilenameArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ad0df50 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x56469b073748 <line:167:18>
|-CXXRecordDecl 0x56469b073808 prev 0x56469ad0df50 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56469b073918 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.2 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.2 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469aca4120 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x56469b095318 <line:167:18>
|-CXXRecordDecl 0x56469b0953d8 prev 0x56469aca4120 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56469b0954e8 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.13 = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.13 = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class String>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class String * _ptr
        24 |   class String _slot
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56469a84e3e8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56469a84e508 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x56469aa605a0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56469aa60680 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x56469aa60680
| `-ParmVarDecl 0x56469aa60768 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x56469aa60808 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x56469aa60808
| `-ParmVarDecl 0x56469aa60918 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x56469abfd600 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469b0a1c28 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x56469b0a2028 prev 0x56469b0a1c28 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x56469b0a2220 <line:852:9, line:854:9> line:852:9 used SlotT 'void (String *)'
| |-ParmVarDecl 0x56469b0a2128 <col:15, col:18> col:18 used ptr 'String *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x56469b0a3168 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x56469b0a23a0 '_ptr' 'String *'
| | `-ImplicitCastExpr 0x56469b0a3128 <line:853:20> 'String *' <LValueToRValue>
| |   `-DeclRefExpr 0x56469b0a30e8 <col:20> 'String *' lvalue ParmVar 0x56469b0a2128 'ptr' 'String *'
| |-CXXCtorInitializer Field 0x56469b0a2400 '_slot' 'String':'String'
| | `-CXXConstructExpr 0x56469b0a31c8 <line:852:9> 'String':'String' 'void ()'
| `-CompoundStmt 0x56469ae43d20 <line:853:25, line:854:9>
|-CXXMethodDecl 0x56469b0a22e0 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x56469ae23900 Slot::store 'void ()' ]
| `-CompoundStmt 0x56469b0a3918 <col:22, line:857:9>
|   `-CallExpr 0x56469b0a38d0 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x56469b0a38b8 <col:13> 'void (*)(String &, const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56469b0a3838 <col:13> 'void (String &, const String &)' lvalue Function 0x56469b0a3718 'assign_consume' 'void (String &, const String &)' (FunctionTemplate 0x56469a9bac58 'assign_consume')
|     |-UnaryOperator 0x56469b0a3360 <col:28, col:29> 'String':'String' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x56469b0a3348 <col:29> 'String *' <LValueToRValue>
|     |   `-MemberExpr 0x56469b0a3318 <col:29> 'String *' lvalue ->_ptr 0x56469b0a23a0
|     |     `-CXXThisExpr 0x56469b0a3308 <col:29> 'Args::SlotT<String> *' implicit this
|     `-ImplicitCastExpr 0x56469b0a3900 <col:35> 'const String':'const String' lvalue <NoOp>
|       `-MemberExpr 0x56469b0a3388 <col:35> 'String':'String' lvalue ->_slot 0x56469b0a2400
|         `-CXXThisExpr 0x56469b0a3378 <col:35> 'Args::SlotT<String> *' implicit this
|-FieldDecl 0x56469b0a23a0 <line:858:9, col:12> col:12 referenced _ptr 'String *'
|-FieldDecl 0x56469b0a2400 <line:859:9, col:11> col:11 referenced _slot 'String':'String'
|-CXXConstructorDecl 0x56469b0a2478 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x56469b0a2478
| `-ParmVarDecl 0x56469b0a2588 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXConstructorDecl 0x56469b0a2628 <col:12> col:12 implicit SlotT 'void (Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x56469b0a2628
| `-ParmVarDecl 0x56469b0a2738 <col:12> col:12 'Args::SlotT<String> &&'
|-CXXMethodDecl 0x56469b0a27d8 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x56469b0a27d8
| `-ParmVarDecl 0x56469b0a28e8 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXMethodDecl 0x56469b0a2958 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x56469b0a2958
| `-ParmVarDecl 0x56469b0a2a68 <col:12> col:12 'Args::SlotT<String> &&'
`-CXXDestructorDecl 0x56469b0a2af0 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x56469ae23800 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x56469b0a3230 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<unsigned int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56469ae57050 <../dummy_inc/click/args.hh:1182:1, col:61> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x56469ae572a8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x56469b0b2678 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x56469b0b2b10 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x56469b0b2af0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x56469b0b2b80 <col:19>
|-CXXConstructorDecl 0x56469b0b2778 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<unsigned int> &)' inline default trivial noexcept-unevaluated 0x56469b0b2778
| `-ParmVarDecl 0x56469b0b2888 <col:19> col:19 'const DefaultArg<unsigned int> &'
|-CXXConstructorDecl 0x56469b0b2928 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<unsigned int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56469b0b2a38 <col:19> col:19 used 'DefaultArg<unsigned int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x56469b0b3740 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x56469b0b3460 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x56469b0b3430 <col:19> 'DefaultArg<unsigned int>' xvalue static_cast<struct DefaultArg<unsigned int> &&> <NoOp>
| |       `-DeclRefExpr 0x56469b0b3400 <col:19> 'DefaultArg<unsigned int>' lvalue ParmVar 0x56469b0b2a38 '' 'DefaultArg<unsigned int> &&'
| `-CompoundStmt 0x56469b0b37b0 <col:19>
`-CXXDestructorDecl 0x56469b0b2bc0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>
