
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f4db48 prev 0x564a88f452d8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88f4dc40 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x564a88f4dcd0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x564a88f4dd48 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x564a88f4de08 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x564a88f4ded0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x564a88f4e048 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x564a88f4df80 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x564a88f4e0f0 <col:24>
| `-OptimizeNoneAttr 0x564a88f4e148 <col:34>
|-CXXMethodDecl 0x564a88f4e1c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x564a88f4e478 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x564a88f4e270 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x564a88f4e2e8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x564a88f4e368 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x564a88f4e530 <line:229:7, col:14> col:7 private
|-FieldDecl 0x564a88f4e568 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x564a88f4e5d0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x564a88f4e658 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x564a88f4e978 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x564a88f4e710 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x564a88f4e788 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x564a88f4e800 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x564a88f4e880 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x564a88f4ea90 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x564a88f553a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x564a88f553a8
| `-ParmVarDecl 0x564a88f554b8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x564a88f55558 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x564a88f55558
| `-ParmVarDecl 0x564a88f55668 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x564a88df5ec0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88be56e8 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88be5808 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x564a88be5898 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x564a88be5968 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x564a88be5a50 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88be6b08 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x564a88be69b0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be6cb8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x564a88be6bc0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x564a88be6e00 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x564a88be6d70 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x564a88be6f48 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x564a88be6eb8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be7090 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x564a88be7000 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be7158 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x564a88be72d8 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x564a88be7210 <col:28> col:31 'int'
|-CXXMethodDecl 0x564a88be73a0 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x564a88be74e8 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x564a88be7458 <col:28> col:31 'int'
|-CXXMethodDecl 0x564a88be7668 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x564a88be75a0 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be77b0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x564a88be7720 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be7878 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x564a88be7ab8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x564a88be7928 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564a88be79a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be7d08 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x564a88be7b78 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564a88be7bf0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88be7db8 <col:86> "" ""
|-CXXMethodDecl 0x564a88be8028 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x564a88be7e98 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x564a88be7f10 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be81d8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x564a88be80e8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x564a88be8388 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x564a88be8290 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x564a88be8658 <line:81:5, col:98> col:28 used compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x564a88be8440 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x564a88be84b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564a88be8530 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be89c0 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x564a88be8720 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x564a88be8798 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564a88be8810 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88be8a78 <col:115> "" ""
|-AccessSpecDecl 0x564a88be8ae8 <line:84:3, col:10> col:3 private
|-FieldDecl 0x564a88be8b20 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88be8fc8 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x564a88be8fc8
| `-ParmVarDecl 0x564a88be90d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x564a88be9178 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x564a88be9178
| `-ParmVarDecl 0x564a88be9288 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x564a88c309d8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564a88f1a0d0 <col:7>
|-CXXConstructorDecl 0x564a88c30ab0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x564a88c30ab0
| `-ParmVarDecl 0x564a88c30bc8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x564a88c30c38 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x564a88c30c38
| `-ParmVarDecl 0x564a88c30d48 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x564a88f1ca40 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88f8e650 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x564a88f8e828 prev 0x564a88f8e650 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564a88f8e8b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x564a88f8e8e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88f904b0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x564a88f90460 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x564a88f8ed90 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x564a88f8ec90 'type'
|     `-TemplateSpecializationType 0x564a88f8ec20 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x564a88f8eb00 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x564a88f8eae0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x564a88f8eac0 <col:24> 'unsigned long' 8
|       `-RecordType 0x564a88f8ec00 'char_array<8>'
|         `-ClassTemplateSpecialization 0x564a88f8eb20 'char_array'
|-TypedefDecl 0x564a88f90568 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x564a88f90530 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x564a88f90510 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x564a88f904b0 'type'
|     `-ElaboratedType 0x564a88f90460 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x564a88f8ed90 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x564a88f8ec90 'type'
|         `-TemplateSpecializationType 0x564a88f8ec20 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x564a88f8eb00 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x564a88f8eae0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x564a88f8eac0 <col:24> 'unsigned long' 8
|           `-RecordType 0x564a88f8ec00 'char_array<8>'
|             `-ClassTemplateSpecialization 0x564a88f8eb20 'char_array'
|-CXXMethodDecl 0x564a88f906e8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x564a88f905f8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x564a88f907d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564a88f908b8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x564a88f90b88 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x564a88f90a90 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x564a88f90dc8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x564a88f90c40 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88f90cb8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564a88f90f98 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x564a88f90e88 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88f90f00 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564a88f910f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x564a88f911c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x564a88f91418 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x564a88f91288 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x564a88f91300 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564a88f91678 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x564a88f914e8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x564a88f91560 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564a88f91838 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x564a88f91748 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564a88f919f8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x564a88f91900 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564a88f91ab0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a88f91b60 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a88f91d98 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x564a88f91c10 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88f91c88 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564a88f92038 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x564a88f91f40 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x564a88f92100 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x564a88f92150 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564a88f921a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88ff9648 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x564a89009fd8 prev 0x564a88ff9648 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a8900aff0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x564a8900afa0 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x564a8900af80 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x564a8900ae30 'type'
|     `-SubstTemplateTypeParmType 0x564a88f8e220 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a88f8dd70 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x564a88f8dc88 'sized_array_memory'
|-FieldDecl 0x564a8900b0f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x564a8900b140 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a8900b178 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-PointerType 0x564a88f32a50 'Element *'
|     `-RecordType 0x564a88f327f0 'Element'
|       `-CXXRecord 0x564a88f3c500 'Element'
|-TypedefDecl 0x564a8900b238 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x564a8900b200 'Element *&'
|   `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88f32a50 'Element *'
|       `-RecordType 0x564a88f327f0 'Element'
|         `-CXXRecord 0x564a88f3c500 'Element'
|-TypedefDecl 0x564a8900b2f8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x564a8900b2c0 'Element *const &'
|   `-QualType 0x564a8900a071 'Element *const' const
|     `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88f32a50 'Element *'
|         `-RecordType 0x564a88f327f0 'Element'
|           `-CXXRecord 0x564a88f3c500 'Element'
|-TypedefDecl 0x564a8900b3b8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x564a8900b380 'Element **'
|   `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88f32a50 'Element *'
|       `-RecordType 0x564a88f327f0 'Element'
|         `-CXXRecord 0x564a88f3c500 'Element'
|-TypedefDecl 0x564a8900b478 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x564a8900b440 'Element *const *'
|   `-QualType 0x564a8900a071 'Element *const' const
|     `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88f32a50 'Element *'
|         `-RecordType 0x564a88f327f0 'Element'
|           `-CXXRecord 0x564a88f3c500 'Element'
|-TypedefDecl 0x564a8900c050 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x564a8900c000 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x564a8900bfe0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x564a8900bf70 'type'
|     `-SubstTemplateTypeParmType 0x564a8900bd30 'Element *' sugar
|       |-TemplateTypeParmType 0x564a88cf2b70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88cf2b20 'T'
|       `-PointerType 0x564a88f32a50 'Element *'
|         `-RecordType 0x564a88f327f0 'Element'
|           `-CXXRecord 0x564a88f3c500 'Element'
|-TypedefDecl 0x564a8900c0b8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x564a8900b2c0 'Element *const &'
|   `-QualType 0x564a8900a071 'Element *const' const
|     `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88f32a50 'Element *'
|         `-RecordType 0x564a88f327f0 'Element'
|           `-CXXRecord 0x564a88f3c500 'Element'
|-TypedefDecl 0x564a8900c110 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8900c178 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x564a8900b380 'Element **'
|   `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88f32a50 'Element *'
|       `-RecordType 0x564a88f327f0 'Element'
|         `-CXXRecord 0x564a88f3c500 'Element'
|-TypedefDecl 0x564a8900c1e0 <line:131:5, col:22> col:22 referenced const_iterator 'Element *const *'
| `-PointerType 0x564a8900b440 'Element *const *'
|   `-QualType 0x564a8900a071 'Element *const' const
|     `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88f32a50 'Element *'
|         `-RecordType 0x564a88f327f0 'Element'
|           `-CXXRecord 0x564a88f3c500 'Element'
|-EnumDecl 0x564a8900c238 <line:134:5> col:5
| `-EnumConstantDecl 0x564a8900c330 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a8900c310 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a8900c3b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a8900c648 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8900c470 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8900c510 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x564a8900c8d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x564a8900c7c0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x564a8900cb98 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x564a8900ca80 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x564a8900ceb0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x564a8900cd90 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x564a8900d1c0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x564a8900d0a0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x564a8900d4b0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8900d2f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8900d370 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x564a8900d608 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x564a8900d6e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8900d740 <col:30> Inherited
|-CXXMethodDecl 0x564a8900d788 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x564a8900d838 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8900d890 <col:30> Inherited
|-CXXMethodDecl 0x564a8900d958 <line:152:5, col:63> col:55 used begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x564a8900da08 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8900da60 <col:30> Inherited
|-CXXMethodDecl 0x564a8900daa8 <line:153:5, col:61> col:55 used end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x564a8900db58 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8900dbb0 <col:30> Inherited
|-CXXMethodDecl 0x564a8900dbf8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x564a8900dca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8900dd00 <col:30> Inherited
|-CXXMethodDecl 0x564a8900dd48 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x564a8900ddf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8900de50 <col:30> Inherited
|-CXXMethodDecl 0x564a8900de78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a8900df28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a8900dfd8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a8900e198 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8900e088 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8900e100 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x564a8900e2e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a8900e258 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8900e498 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x564a8900e3a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a8900e550 <col:20>
| `-OptimizeNoneAttr 0x564a8900e5a8 <col:30>
|-CXXMethodDecl 0x564a8900e6c8 <line:164:5, col:73> col:49 used operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x564a8900e5d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a8900e780 <col:20>
| `-OptimizeNoneAttr 0x564a8900e7d8 <col:30>
|-CXXMethodDecl 0x564a8900e890 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564a8900e800 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8900e9d8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a8900e948 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8900eb08 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x564a8900ec38 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x564a8900ed08 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x564a8900edd8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x564a8900ef18 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564a8900ee88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8900f060 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a8900efd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8900f1a8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x564a8900f118 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a8900f260 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a8900f360 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a8900f2d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a8900f418 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a8900f4d8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x564a8900f5d8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x564a8900f758 <line:180:5, col:48> col:17 used push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x564a8900f698 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x564a8900ff18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a8900f810 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x564a8900fe78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x564a8900fd78 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x564a8900fff8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a89010148 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x564a890100b8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x564a89010200 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a89010448 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a890102c0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x564a89010338 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x564a89010608 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x564a89010518 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x564a89010858 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x564a890106d0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x564a89010748 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x564a89010918 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x564a89010b78 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x564a89010a80 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x564a89010c48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x564a8907aa48 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88c0ccd0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x564a88c0ef70 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x564a88c0f010 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x564a88c0f070 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x564a88c0f0d0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x564a88c0f180 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88c0f490 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88c0f5a8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x564a88c0f650 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x564a88c0f6b8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x564a88c0f748 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x564a88c13980 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564a88c13db8 <col:12>
|-CXXConstructorDecl 0x564a88c13a88 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88c13b98 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x564a88c0f650 'data' 'const char *'
| | `-ImplicitCastExpr 0x564a88c16a70 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x564a88c16a40 <col:12> 'const char *const' lvalue .data 0x564a88c0f650
| |     `-DeclRefExpr 0x564a88c16a20 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c13b98 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x564a88c0f6b8 'length' 'int'
| | `-ImplicitCastExpr 0x564a88c16b00 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x564a88c16ad0 <col:12> 'const int' lvalue .length 0x564a88c0f6b8
| |     `-DeclRefExpr 0x564a88c16ab0 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c13b98 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x564a88c0f748 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x564a88c16b90 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x564a88c16b60 <col:12> 'String::memo_t *const' lvalue .memo 0x564a88c0f748
| |     `-DeclRefExpr 0x564a88c16b40 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c13b98 '' 'const String::rep_t &'
| `-CompoundStmt 0x564a88c16be8 <col:12>
|-CXXConstructorDecl 0x564a88c13c38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x564a88c13c38
| `-ParmVarDecl 0x564a88c13d48 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x564a88c1c1c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564a88c27b28 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88c27c38 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x564a88c28150 <col:12>
|   |-BinaryOperator 0x564a88c27f68 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x564a88c27f20 <col:12> 'const char *' lvalue ->data 0x564a88c0f650
|   | | `-CXXThisExpr 0x564a88c27f10 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x564a88c27f50 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x564a88c27ee0 <col:12> 'const char *const' lvalue .data 0x564a88c0f650
|   |     `-DeclRefExpr 0x564a88c27ec0 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c27c38 '' 'const String::rep_t &'
|   |-BinaryOperator 0x564a88c28030 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x564a88c27fe8 <col:12> 'int' lvalue ->length 0x564a88c0f6b8
|   | | `-CXXThisExpr 0x564a88c27fd8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x564a88c28018 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x564a88c27fa8 <col:12> 'const int' lvalue .length 0x564a88c0f6b8
|   |     `-DeclRefExpr 0x564a88c27f88 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c27c38 '' 'const String::rep_t &'
|   |-BinaryOperator 0x564a88c280f8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x564a88c280b0 <col:12> 'String::memo_t *' lvalue ->memo 0x564a88c0f748
|   | | `-CXXThisExpr 0x564a88c280a0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x564a88c280e0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x564a88c28070 <col:12> 'String::memo_t *const' lvalue .memo 0x564a88c0f748
|   |     `-DeclRefExpr 0x564a88c28050 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c27c38 '' 'const String::rep_t &'
|   `-ReturnStmt 0x564a88c28140 <col:12>
|     `-UnaryOperator 0x564a88c28128 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a88c28118 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x564a88c27ca8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x564a88c27ca8
  `-ParmVarDecl 0x564a88c27db8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88c033e0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88c034f8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x564a88c03588 <col:16, col:22> col:16 public
|-TypedefDecl 0x564a88c035c8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x564a889c4fd0 'const char *'
|   `-QualType 0x564a889c4521 'const char' const
|     `-BuiltinType 0x564a889c4520 'char'
|-TypedefDecl 0x564a88c03650 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x564a88c03620 'String::const_iterator' sugar
|   |-Typedef 0x564a88c035c8 'const_iterator'
|   `-PointerType 0x564a889c4fd0 'const char *'
|     `-QualType 0x564a889c4521 'const char' const
|       `-BuiltinType 0x564a889c4520 'char'
|-TypedefDecl 0x564a88c037f0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x564a88c03760 'int (String::*)() const'
|   |-RecordType 0x564a88c03470 'String'
|   | `-CXXRecord 0x564a88c033e0 'String'
|   `-ParenType 0x564a88c03700 'int () const' sugar
|     `-FunctionProtoType 0x564a88c036d0 'int () const' const cdecl
|       `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88c03858 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x564a88b1e380 'int64_t' sugar
|   |-Typedef 0x564a88a2d390 'int64_t'
|   `-TypedefType 0x564a88a06630 '__int64_t' sugar
|     |-Typedef 0x564a88a06208 '__int64_t'
|     `-BuiltinType 0x564a889c45a0 'long'
|-TypedefDecl 0x564a88c038c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x564a88b1e2a0 'uint64_t' sugar
|   |-Typedef 0x564a88a2d530 'uint64_t'
|   `-TypedefType 0x564a88a066c0 '__uint64_t' sugar
|     |-Typedef 0x564a88a06278 '__uint64_t'
|     `-BuiltinType 0x564a889c4640 'unsigned long'
|-TypedefDecl 0x564a88c03950 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x564a88c03920 'String::intmax_t' sugar
|   |-Typedef 0x564a88c03858 'intmax_t'
|   `-TypedefType 0x564a88b1e380 'int64_t' sugar
|     |-Typedef 0x564a88a2d390 'int64_t'
|     `-TypedefType 0x564a88a06630 '__int64_t' sugar
|       |-Typedef 0x564a88a06208 '__int64_t'
|       `-BuiltinType 0x564a889c45a0 'long'
|-TypedefDecl 0x564a88c039e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x564a88c039b0 'String::uintmax_t' sugar
|   |-Typedef 0x564a88c038c0 'uintmax_t'
|   `-TypedefType 0x564a88b1e2a0 'uint64_t' sugar
|     |-Typedef 0x564a88a2d530 'uint64_t'
|     `-TypedefType 0x564a88a066c0 '__uint64_t' sugar
|       |-Typedef 0x564a88a06278 '__uint64_t'
|       `-BuiltinType 0x564a889c4640 'unsigned long'
|-CXXConstructorDecl 0x564a88c03aa0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x564a88c03c48 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x564a88c03b88 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x564a88c03df8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x564a88c03d38 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x564a88c03f50 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x564a88c03ec0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x564a88c041d0 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x564a88c04018 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x564a88c04098 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x564a88c04428 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x564a88c042d0 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x564a88c04350 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x564a88c04648 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x564a88c044f8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x564a88c04578 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x564a88c04868 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x564a88c04718 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x564a88c04798 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x564a88c049f8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x564a88c04930 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x564a88c04b78 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x564a88c04ab8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x564a88c04d08 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x564a88c04c40 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x564a88c04e60 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x564a88c04dd0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x564a88c04fe8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x564a88c04f28 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x564a88c05178 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x564a88c050b0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x564a88c05308 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x564a88c05240 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x564a88c05498 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x564a88c053d0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x564a88c05628 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x564a88c05560 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x564a88c057b8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x564a88c056f0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x564a88c058b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x564a88c059d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x564a88c05b58 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x564a88c05a90 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x564a88c05ca8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x564a88c05c18 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x564a88c05d50 <col:63> "" ""
|-CXXMethodDecl 0x564a88c05e98 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x564a88c05dd8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x564a88c060a8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x564a88c05f58 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x564a88c05fd8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x564a88c06748 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x564a88c065f0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x564a88c06670 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x564a88c06a28 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x564a88c06808 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x564a88c06888 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x564a88c13450 <col:55> 'int' 10
| `-ParmVarDecl 0x564a88c06900 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564a88c13470 <col:76> 'bool' true
|-CXXMethodDecl 0x564a88c06d08 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x564a88c06af0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x564a88c06b70 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x564a88c13480 <col:56> 'int' 10
| `-ParmVarDecl 0x564a88c06be8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564a88c134a0 <col:77> 'bool' true
|-CXXMethodDecl 0x564a88c06e10 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x564a88c06ed8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x564a88c06fa0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x564a88c07040 <col:20>
| `-OptimizeNoneAttr 0x564a88c07098 <col:30>
|-CXXConversionDecl 0x564a88c07188 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x564a88c07258 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x564a88c07318 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x564a88c07408 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x564a88c074c8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x564a88c07648 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x564a88c07580 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x564a88c07798 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x564a88c07708 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x564a88c07888 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x564a88c07948 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x564a88c07b98 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x564a88c07a00 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x564a88c07a80 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x564a88c07df8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x564a88c07c60 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x564a88c07ce0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x564a88c07ec8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88c080d8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x564a88c07f80 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x564a88c08000 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x564a88c082f8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x564a88c081a0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x564a88c08220 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x564a88c08488 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x564a88c083c0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x564a88c08ad0 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x564a88c08c48 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x564a88c08b80 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x564a88c08e58 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x564a88c08d08 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x564a88c08d88 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x564a88c09070 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x564a88c08f18 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x564a88c08f90 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x564a88c09200 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x564a88c09130 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x564a88c09420 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x564a88c092c0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x564a88c09340 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x564a88c09570 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x564a88c094e0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x564a88c09748 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x564a88c09630 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x564a88c096b0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x564a88c09898 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x564a88c09808 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x564a88c09ab0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x564a88c09950 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x564a88c099d0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x564a88c134b0 <col:39> 'int' 0
|-CXXMethodDecl 0x564a88c09cd0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x564a88c09b70 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x564a88c09bf0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x564a88c134d0 <col:48> 'int' 0
|-CXXMethodDecl 0x564a88c09eb0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x564a88c09d90 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x564a88c09e10 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x564a88c134f0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x564a88c09f80 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x564a88c0a040 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x564a88c0a100 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x564a88c0a1c0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x564a88c0a280 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x564a88c0a428 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x564a88c0a330 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x564a88c0a5a8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x564a88c0a4e0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x564a88c0a728 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x564a88c0a668 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x564a88c0a8a8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x564a88c0a7e0 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x564a88c0a9f0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x564a88c0a960 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x564a88c0aee0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x564a88c0ae50 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x564a88c0b0b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x564a88c0afa0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x564a88c0b020 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x564a88c0b298 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x564a88c0b180 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x564a88c0b200 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x564a88c0b3e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x564a88c0b358 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x564a88c0b5f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x564a88c0b4a8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x564a88c0b528 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x564a88c0b758 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x564a88c0b6c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x564a88c0b8b0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x564a88c0b818 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x564a88c0b958 <col:57> "" ""
|-CXXMethodDecl 0x564a88c0ba68 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x564a88c0b9d8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x564a88c0bbb8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x564a88c0bb28 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x564a88c0bd38 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x564a88c0bc70 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x564a88c0be00 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x564a88c0bec0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x564a88c0bf80 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x564a88c0c020 <col:49> "" ""
|-CXXMethodDecl 0x564a88c0c0b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x564a88c0c170 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x564a88c0c260 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x564a88c0c328 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x564a88c0c3e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x564a88c0c4a8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x564a88c0c5a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x564a88c0c668 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x564a88c0c730 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x564a88c0c908 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x564a88c0c7e8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x564a88c0c868 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x564a88c0cb30 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x564a88c0c9d0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x564a88c0ca50 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x564a88c0cc40 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x564a88c0cca8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x564a88c0ccd0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564a88c0ef70 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x564a88c0f010 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x564a88c0f070 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x564a88c0f0d0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x564a88c0f180 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x564a88c0f1e8 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x564a88c0f428 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x564a88c0f478 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88c0f408 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x564a88c0f318 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x564a88c0f2c0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x564a88c0f300 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x564a88c0f2e0 <col:32> 'int' 8
|-CXXRecordDecl 0x564a88c0f490 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88c0f5a8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x564a88c0f650 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x564a88c0f6b8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x564a88c0f748 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x564a88c13980 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564a88c13db8 <col:12>
| |-CXXConstructorDecl 0x564a88c13a88 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564a88c13b98 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x564a88c0f650 'data' 'const char *'
| | | `-ImplicitCastExpr 0x564a88c16a70 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x564a88c16a40 <col:12> 'const char *const' lvalue .data 0x564a88c0f650
| | |     `-DeclRefExpr 0x564a88c16a20 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c13b98 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x564a88c0f6b8 'length' 'int'
| | | `-ImplicitCastExpr 0x564a88c16b00 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x564a88c16ad0 <col:12> 'const int' lvalue .length 0x564a88c0f6b8
| | |     `-DeclRefExpr 0x564a88c16ab0 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c13b98 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x564a88c0f748 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x564a88c16b90 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x564a88c16b60 <col:12> 'String::memo_t *const' lvalue .memo 0x564a88c0f748
| | |     `-DeclRefExpr 0x564a88c16b40 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c13b98 '' 'const String::rep_t &'
| | `-CompoundStmt 0x564a88c16be8 <col:12>
| |-CXXConstructorDecl 0x564a88c13c38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x564a88c13c38
| | `-ParmVarDecl 0x564a88c13d48 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x564a88c1c1c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x564a88c27b28 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564a88c27c38 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x564a88c28150 <col:12>
| |   |-BinaryOperator 0x564a88c27f68 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x564a88c27f20 <col:12> 'const char *' lvalue ->data 0x564a88c0f650
| |   | | `-CXXThisExpr 0x564a88c27f10 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x564a88c27f50 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x564a88c27ee0 <col:12> 'const char *const' lvalue .data 0x564a88c0f650
| |   |     `-DeclRefExpr 0x564a88c27ec0 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c27c38 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x564a88c28030 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x564a88c27fe8 <col:12> 'int' lvalue ->length 0x564a88c0f6b8
| |   | | `-CXXThisExpr 0x564a88c27fd8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x564a88c28018 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x564a88c27fa8 <col:12> 'const int' lvalue .length 0x564a88c0f6b8
| |   |     `-DeclRefExpr 0x564a88c27f88 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c27c38 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x564a88c280f8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x564a88c280b0 <col:12> 'String::memo_t *' lvalue ->memo 0x564a88c0f748
| |   | | `-CXXThisExpr 0x564a88c280a0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x564a88c280e0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x564a88c28070 <col:12> 'String::memo_t *const' lvalue .memo 0x564a88c0f748
| |   |     `-DeclRefExpr 0x564a88c28050 <col:12> 'const String::rep_t' lvalue ParmVar 0x564a88c27c38 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x564a88c28140 <col:12>
| |     `-UnaryOperator 0x564a88c28128 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x564a88c28118 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x564a88c27ca8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x564a88c27ca8
|   `-ParmVarDecl 0x564a88c27db8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x564a88c0f7c0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x564a88c0fa08 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x564a88c0f828 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x564a88c0f8a8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x564a88c0f920 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x564a88c13940 <col:79, line:261:5>
|   |-BinaryOperator 0x564a88c135b8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x564a88c13550 <col:2, col:5> 'const char *' lvalue .data 0x564a88c0f650
|   | | `-MemberExpr 0x564a88c13520 <col:2> 'String::rep_t' lvalue ->_r 0x564a88c0f7c0
|   | |   `-CXXThisExpr 0x564a88c13510 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x564a88c135a0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x564a88c13580 <col:12> 'const char *' lvalue ParmVar 0x564a88c0f828 'data' 'const char *'
|   |-BinaryOperator 0x564a88c13680 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x564a88c13618 <col:2, col:5> 'int' lvalue .length 0x564a88c0f6b8
|   | | `-MemberExpr 0x564a88c135e8 <col:2> 'String::rep_t' lvalue ->_r 0x564a88c0f7c0
|   | |   `-CXXThisExpr 0x564a88c135d8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x564a88c13668 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564a88c13648 <col:14> 'int' lvalue ParmVar 0x564a88c0f8a8 'length' 'int'
|   `-IfStmt 0x564a88c13928 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x564a88c137a0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x564a88c13788 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x564a88c13768 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x564a88c13748 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x564a88c136e0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x564a88c0f748
|     |       | `-MemberExpr 0x564a88c136b0 <col:7> 'String::rep_t' lvalue ->_r 0x564a88c0f7c0
|     |       |   `-CXXThisExpr 0x564a88c136a0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x564a88c13730 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x564a88c13710 <col:17> 'String::memo_t *' lvalue ParmVar 0x564a88c0f920 'memo' 'String::memo_t *'
|     `-CallExpr 0x564a88c13900 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x564a88c138e8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a88c137f0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x564a88bea038 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x564a88c13858 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x564a88c0f010
|         `-ImplicitCastExpr 0x564a88c13840 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x564a88c13820 <col:27> 'String::memo_t *' lvalue ParmVar 0x564a88c0f920 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x564a88c0fcb8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x564a88c0fad8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x564a88c0fb58 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x564a88c0fbd0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x564a88c0f7c0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x564a88c13dc8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564a88c13f58 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x564a88c13ec0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x564a88c13e30 <col:2> '<bound member function type>' ->assign_memo 0x564a88c0fa08
|     | `-ImplicitCastExpr 0x564a88c13ef8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x564a88c13e20 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x564a88c13f10 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x564a88c13e60 <col:14> 'const char *' lvalue ParmVar 0x564a88c0fad8 'data' 'const char *'
|     |-ImplicitCastExpr 0x564a88c13f28 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x564a88c13e80 <col:20> 'int' lvalue ParmVar 0x564a88c0fb58 'length' 'int'
|     `-ImplicitCastExpr 0x564a88c13f40 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x564a88c13ea0 <col:28> 'String::memo_t *' lvalue ParmVar 0x564a88c0fbd0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x564a88c0fe48 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x564a88c0fd88 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x564a88c141b0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x564a88c14130 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x564a88c13f80 <col:2> '<bound member function type>' ->assign_memo 0x564a88c0fa08
|     | `-CXXThisExpr 0x564a88c13f70 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x564a88c14168 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x564a88c14000 <col:14, col:19> 'const char *' lvalue .data 0x564a88c0f650
|     |   `-MemberExpr 0x564a88c13fd0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x564a88c0f7c0
|     |     `-DeclRefExpr 0x564a88c13fb0 <col:14> 'const String' lvalue ParmVar 0x564a88c0fd88 'x' 'const String &'
|     |-ImplicitCastExpr 0x564a88c14180 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x564a88c14080 <col:25, col:30> 'int' lvalue .length 0x564a88c0f6b8
|     |   `-MemberExpr 0x564a88c14050 <col:25, col:27> 'String::rep_t' lvalue ._r 0x564a88c0f7c0
|     |     `-DeclRefExpr 0x564a88c14030 <col:25> 'const String' lvalue ParmVar 0x564a88c0fd88 'x' 'const String &'
|     `-ImplicitCastExpr 0x564a88c14198 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x564a88c14100 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x564a88c0f748
|         `-MemberExpr 0x564a88c140d0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x564a88c0f7c0
|           `-DeclRefExpr 0x564a88c140b0 <col:38> 'const String' lvalue ParmVar 0x564a88c0fd88 'x' 'const String &'
|-CXXMethodDecl 0x564a88c0ff10 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x564a88c15278 <col:31, line:278:5>
|   `-IfStmt 0x564a88c15260 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x564a88c14250 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x564a88c14238 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x564a88c14208 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x564a88c0f748
|     |     `-MemberExpr 0x564a88c141d8 <col:6> 'String::rep_t' lvalue ->_r 0x564a88c0f7c0
|     |       `-CXXThisExpr 0x564a88c141c8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x564a88c15238 <col:15, line:277:2>
|       |-ParenExpr 0x564a88c147f0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x564a88c147c0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x564a88c14360 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x564a88c14348 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x564a88c14330 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x564a88c142f0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x564a88c0f010
|       |   |       `-ImplicitCastExpr 0x564a88c142d8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x564a88c142a8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x564a88c0f748
|       |   |           `-MemberExpr 0x564a88c14278 <col:27> 'String::rep_t' lvalue ->_r 0x564a88c0f7c0
|       |   |             `-CXXThisExpr 0x564a88c14268 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x564a88c143c0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x564a88c143a0 <col:54> 'int' 0
|       |   `-CallExpr 0x564a88c14720 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x564a88c14708 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x564a88c14690 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x564a88c14760 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x564a88c144a8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x564a88c14778 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x564a88c14558 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x564a88c14790 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x564a88c14590 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x564a88c147a8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x564a88c14678 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x564a88c14660 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x564a88c14628 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x564a88c15158 <line:274:6, line:275:22>
|       | |-CallExpr 0x564a88c14a00 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x564a88c149e8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x564a88c14960 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x564a88bef3d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x564a88c14930 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x564a88c0f010
|       | |   `-ImplicitCastExpr 0x564a88c14918 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x564a88c148e8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x564a88c0f748
|       | |       `-MemberExpr 0x564a88c148b8 <col:40> 'String::rep_t' lvalue ->_r 0x564a88c0f7c0
|       | |         `-CXXThisExpr 0x564a88c148a8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x564a88c14b00 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x564a88c14ae8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x564a88c14a28 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x564a88c10be8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x564a88c15140 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x564a88c14a88 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x564a88c0f748
|       |       `-MemberExpr 0x564a88c14a58 <col:15> 'String::rep_t' lvalue ->_r 0x564a88c0f7c0
|       |         `-CXXThisExpr 0x564a88c14a48 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x564a88c15218 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x564a88c151b0 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x564a88c0f748
|         | `-MemberExpr 0x564a88c15180 <col:6> 'String::rep_t' lvalue ->_r 0x564a88c0f7c0
|         |   `-CXXThisExpr 0x564a88c15170 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x564a88c15200 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x564a88c151e0 <col:16> 'int' 0
|-CXXMethodDecl 0x564a88c101a8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x564a88c0ffc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x564a88c10048 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x564a88c100c0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x564a88c10280 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x564a88c104d0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x564a88c10338 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x564a88c103b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x564a88c10430 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x564a88c106b8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x564a88c105a0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x564a88c10620 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x564a88c107b8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x564a88c15370 <col:41, line:286:5>
|   `-ReturnStmt 0x564a88c15360 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x564a88c15330 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x564a88c152f8 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x564a88c152e0 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x564a88c152c0 <col:46> 'int' 1
|-CXXMethodDecl 0x564a88c10a58 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x564a88c10870 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x564a88c108f0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x564a88c10970 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x564a88c10be8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x564a88c10b20 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x564a88c10cb8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x564a88c10e88 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x564a88c10d70 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x564a88c10df0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x564a88c12b30 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x564a88c12c78 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x564a88c12db8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x564a88c12e30 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x564a88c12ea8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x564a88c12f10 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x564a88c13010 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x564a88c13060 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88c12ff0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x564a88c12fd0 <col:22> 'int' 14
|-CXXMethodDecl 0x564a88c13278 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x564a88c13090 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x564a88c13110 <col:38> col:41 'int'
| `-ParmVarDecl 0x564a88c13190 <col:43> col:46 'int'
|-FriendDecl 0x564a88c13380 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x564a88c13410 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a89014210 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x564a890143e8 prev 0x564a89014210 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564a89014478 <col:46, col:52> col:46 public
|-TypedefDecl 0x564a890144a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a89015e00 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x564a89015db0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x564a89015d90 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x564a890146b8 'type'
|     `-SubstTemplateTypeParmType 0x564a89014680 'String' sugar
|       |-TemplateTypeParmType 0x564a88d128c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d12870 'T'
|       `-RecordType 0x564a88c03470 'String'
|         `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89015eb8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x564a89015e80 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x564a89015e60 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x564a89015e00 'type'
|     `-ElaboratedType 0x564a89015db0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x564a89015d90 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x564a890146b8 'type'
|         `-SubstTemplateTypeParmType 0x564a89014680 'String' sugar
|           |-TemplateTypeParmType 0x564a88d128c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564a88d12870 'T'
|           `-RecordType 0x564a88c03470 'String'
|             `-CXXRecord 0x564a88c033e0 'String'
|-CXXMethodDecl 0x564a89016038 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x564a89015f48 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x564a89016128 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564a89016208 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x564a89016208
|-CXXMethodDecl 0x564a890164d8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x564a890163e0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x564a89016718 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x564a89016590 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a89016608 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x564a890168e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x564a890167d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a89016850 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x564a89016a48 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x564a89016b18 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x564a89016d68 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x564a89016bd8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x564a89016c50 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x564a89016fc8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x564a89016e38 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x564a89016eb0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x564a89017188 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x564a89017098 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x564a89017348 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x564a89017250 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x564a89017400 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a890174b0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a890176e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x564a89017560 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a890175d8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x564a89017988 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x564a89017890 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x564a89017a50 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x564a89017aa0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564a89017af0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88f43790 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x564a89010e98 prev 0x564a88f43790 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a89014180 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x564a89014130 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x564a89014110 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x564a89013fc0 'type'
|     `-SubstTemplateTypeParmType 0x564a89013e50 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x564a88cea4d0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x564a88cea478 'F'
|       `-RecordType 0x564a89013ab0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x564a890139d0 'typed_array_memory'
|-FieldDecl 0x564a89017b40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x564a89017b90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a89017bc8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x564a89010f30 'String' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-RecordType 0x564a88c03470 'String'
|     `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89017c58 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x564a89017c20 'String &'
|   `-SubstTemplateTypeParmType 0x564a89010f30 'String' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88c03470 'String'
|       `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89017ce8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x564a89017cb0 'const String &'
|   `-QualType 0x564a89010f31 'const String' const
|     `-SubstTemplateTypeParmType 0x564a89010f30 'String' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88c03470 'String'
|         `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89017d78 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x564a89017d40 'String *'
|   `-SubstTemplateTypeParmType 0x564a89010f30 'String' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88c03470 'String'
|       `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89017e08 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x564a89017dd0 'const String *'
|   `-QualType 0x564a89010f31 'const String' const
|     `-SubstTemplateTypeParmType 0x564a89010f30 'String' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88c03470 'String'
|         `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89018a60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x564a89018a10 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x564a890189f0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x564a89018928 'type'
|     `-LValueReferenceType 0x564a890188f0 'const String &'
|       `-QualType 0x564a89018691 'const String' const
|         `-SubstTemplateTypeParmType 0x564a89018690 'String' sugar
|           |-TemplateTypeParmType 0x564a88cf2440 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564a88cf23e8 'T'
|           `-RecordType 0x564a88c03470 'String'
|             `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89018ac8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x564a89017cb0 'const String &'
|   `-QualType 0x564a89010f31 'const String' const
|     `-SubstTemplateTypeParmType 0x564a89010f30 'String' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88c03470 'String'
|         `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89018b20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a89018b88 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x564a89017d40 'String *'
|   `-SubstTemplateTypeParmType 0x564a89010f30 'String' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88c03470 'String'
|       `-CXXRecord 0x564a88c033e0 'String'
|-TypedefDecl 0x564a89018bf0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x564a89017dd0 'const String *'
|   `-QualType 0x564a89010f31 'const String' const
|     `-SubstTemplateTypeParmType 0x564a89010f30 'String' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88c03470 'String'
|         `-CXXRecord 0x564a88c033e0 'String'
|-EnumDecl 0x564a89018c48 <line:134:5> col:5
| `-EnumConstantDecl 0x564a89018d40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a89018d20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a89018dc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a89019018 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89018e80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89018f20 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x564a890192d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x564a890191c0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x564a89019598 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x564a89019480 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x564a890198b0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x564a89019790 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x564a89019bc0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x564a89019aa0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x564a89019eb0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89019cf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89019d70 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x564a89019fd8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x564a8901a0b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8901a110 <col:30> Inherited
|-CXXMethodDecl 0x564a8901a158 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x564a8901a208 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8901a260 <col:30> Inherited
|-CXXMethodDecl 0x564a8901a328 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x564a8901a3d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8901a430 <col:30> Inherited
|-CXXMethodDecl 0x564a8901a478 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x564a8901a528 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8901a580 <col:30> Inherited
|-CXXMethodDecl 0x564a8901a5c8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x564a8901a678 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8901a6d0 <col:30> Inherited
|-CXXMethodDecl 0x564a8901a718 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x564a8901a7c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8901a820 <col:30> Inherited
|-CXXMethodDecl 0x564a8901a848 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a8901a8f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a8901a9a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a8901ab68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8901aa58 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8901aad0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x564a8901acb8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a8901ac28 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8901ae68 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x564a8901ad70 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a8901af20 <col:20>
| `-OptimizeNoneAttr 0x564a8901af78 <col:30>
|-CXXMethodDecl 0x564a8901b068 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x564a8901afa0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a8901b120 <col:20>
| `-OptimizeNoneAttr 0x564a8901b178 <col:30>
|-CXXMethodDecl 0x564a8901b230 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a8901b1a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8901b378 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a8901b2e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8901ca50 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x564a8901cb48 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x564a8901cc18 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x564a8901cce8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x564a8901ce28 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a8901cd98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8901cf70 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a8901cee0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8901d0b8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x564a8901d028 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a8901d170 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a8901d270 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a8901d1e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a8901d328 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a8901d3e8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x564a8901d4e8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x564a8901d668 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x564a8901d5a8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x564a8901ddf8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a8901d720 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x564a8901dd58 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x564a8901dc58 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x564a8901ded8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a8901e028 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x564a8901df98 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x564a8901e0e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a8901e328 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8901e1a0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x564a8901e218 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x564a8901e4b8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x564a8901e3f8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x564a8901e6c8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x564a8901e580 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x564a8901e5f8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x564a8901e788 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x564a8901e9e8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x564a8901e8f0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x564a8901eab8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a8901eab8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a890200e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x564a890202b8 prev 0x564a890200e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564a89020348 <col:46, col:52> col:46 public
|-TypedefDecl 0x564a89020370 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a89021f40 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x564a89021ef0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x564a89020820 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x564a89020720 'type'
|     `-TemplateSpecializationType 0x564a890206b0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x564a89020590 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x564a89020570 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x564a89020550 <col:24> 'unsigned long' 4
|       `-RecordType 0x564a89020690 'char_array<4>'
|         `-ClassTemplateSpecialization 0x564a890205b0 'char_array'
|-TypedefDecl 0x564a89021ff8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x564a89021fc0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x564a89021fa0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x564a89021f40 'type'
|     `-ElaboratedType 0x564a89021ef0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x564a89020820 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x564a89020720 'type'
|         `-TemplateSpecializationType 0x564a890206b0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x564a89020590 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x564a89020570 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x564a89020550 <col:24> 'unsigned long' 4
|           `-RecordType 0x564a89020690 'char_array<4>'
|             `-ClassTemplateSpecialization 0x564a890205b0 'char_array'
|-CXXMethodDecl 0x564a89022178 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x564a89022088 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x564a89022268 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564a89022348 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x564a89022348
|-CXXMethodDecl 0x564a89022618 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x564a89022520 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x564a89022858 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x564a890226d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a89022748 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x564a89022a28 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x564a89022918 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a89022990 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x564a89022b88 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x564a89022c58 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x564a89022ea8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x564a89022d18 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x564a89022d90 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x564a89023108 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x564a89022f78 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x564a89022ff0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x564a890232c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x564a890231d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x564a89023488 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x564a89023390 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x564a89023540 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a890235f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a89023828 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x564a890236a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a89023718 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x564a89023ac8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x564a890239d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x564a89023b90 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x564a89023be0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564a89023c30 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a8901ed00 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x564a8901ef08 prev 0x564a8901ed00 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a89020050 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x564a89020000 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x564a8901ffe0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x564a8901fe90 'type'
|     `-SubstTemplateTypeParmType 0x564a8901fcb0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a8901f800 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x564a8901f718 'sized_array_memory'
|-FieldDecl 0x564a89023c80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x564a89023cd0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a89023d08 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x564a8901efa0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a89023d98 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x564a89023d60 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x564a8901efa0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a89023e58 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x564a89023e20 'const unsigned int &'
|   `-QualType 0x564a8901efa1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x564a8901efa0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a89023ee8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x564a89023eb0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x564a8901efa0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a89023f78 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x564a89023f40 'const unsigned int *'
|   `-QualType 0x564a8901efa1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x564a8901efa0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a890267a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x564a89026750 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x564a89026730 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x564a890266b8 'type'
|     `-SubstTemplateTypeParmType 0x564a89024840 'unsigned int' sugar
|       |-TemplateTypeParmType 0x564a88cf2b70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88cf2b20 'T'
|       `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a89026808 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x564a89023e20 'const unsigned int &'
|   `-QualType 0x564a8901efa1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x564a8901efa0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a89026860 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a890268c8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x564a89023eb0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x564a8901efa0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a89026930 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x564a89023f40 'const unsigned int *'
|   `-QualType 0x564a8901efa1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x564a8901efa0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-BuiltinType 0x564a889c4620 'unsigned int'
|-EnumDecl 0x564a89026988 <line:134:5> col:5
| `-EnumConstantDecl 0x564a89026a80 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a89026a60 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a89026b08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a89026d58 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89026bc0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89026c60 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x564a89027018 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x564a89026f00 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x564a890272d8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x564a890271c0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x564a89027620 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x564a89027500 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x564a89027930 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x564a89027810 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x564a89027c20 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89027a68 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89027ae0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x564a89027d48 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x564a89027e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89027e80 <col:30> Inherited
|-CXXMethodDecl 0x564a89027ec8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x564a89027f78 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89027fd0 <col:30> Inherited
|-CXXMethodDecl 0x564a89028068 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x564a89028118 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89028170 <col:30> Inherited
|-CXXMethodDecl 0x564a890281b8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x564a89028268 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890282c0 <col:30> Inherited
|-CXXMethodDecl 0x564a89028308 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x564a890283b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89028410 <col:30> Inherited
|-CXXMethodDecl 0x564a89028458 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x564a89028508 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89028560 <col:30> Inherited
|-CXXMethodDecl 0x564a89028588 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a89028638 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a890286e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a890288a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89028798 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89028810 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x564a890289f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a89028968 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89028ba8 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x564a89028ab0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a89028c60 <col:20>
| `-OptimizeNoneAttr 0x564a89028cb8 <col:30>
|-CXXMethodDecl 0x564a89028dd8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x564a89028ce0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a89028e90 <col:20>
| `-OptimizeNoneAttr 0x564a89028ee8 <col:30>
|-CXXMethodDecl 0x564a89028fa0 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a89028f10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890290e8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a89029058 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89029218 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x564a89029348 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x564a89029418 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x564a890294e8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x564a89029628 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a89029598 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89029770 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a890296e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890298b8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x564a89029828 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a89029970 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a89029a70 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a890299e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a89029b28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a89029be8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x564a89029ce8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x564a89029e68 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x564a89029da8 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x564a8902a628 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a89029f20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x564a8902a588 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x564a8902a488 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x564a8902a708 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a8902a858 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x564a8902a7c8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x564a8902a910 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a8902ab58 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8902a9d0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x564a8902aa48 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x564a8902ad18 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x564a8902ac28 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x564a8902af68 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x564a8902ade0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x564a8902ae58 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x564a8902b028 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a8902b288 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x564a8902b190 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x564a8902b358 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a8902b358

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88fff918 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x564a8902b5b8 prev 0x564a88fff918 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a8902c5d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x564a8902c580 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x564a8902c560 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x564a8902c410 'type'
|     `-SubstTemplateTypeParmType 0x564a8901fcb0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a8901f800 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x564a8901f718 'sized_array_memory'
|-FieldDecl 0x564a8902c6d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x564a8902c720 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a8902c758 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x564a8902b650 'int' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902c7e8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x564a8902c7b0 'int &'
|   `-SubstTemplateTypeParmType 0x564a8902b650 'int' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902c8a8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x564a8902c870 'const int &'
|   `-QualType 0x564a8902b651 'const int' const
|     `-SubstTemplateTypeParmType 0x564a8902b650 'int' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902c938 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x564a8902c900 'int *'
|   `-SubstTemplateTypeParmType 0x564a8902b650 'int' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902c9c8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x564a8902c990 'const int *'
|   `-QualType 0x564a8902b651 'const int' const
|     `-SubstTemplateTypeParmType 0x564a8902b650 'int' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902d5b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x564a8902d560 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x564a8902d540 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x564a8902d4d0 'type'
|     `-SubstTemplateTypeParmType 0x564a8902d290 'int' sugar
|       |-TemplateTypeParmType 0x564a88cf2b70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88cf2b20 'T'
|       `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902d618 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x564a8902c870 'const int &'
|   `-QualType 0x564a8902b651 'const int' const
|     `-SubstTemplateTypeParmType 0x564a8902b650 'int' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902d670 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902d6d8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x564a8902c900 'int *'
|   `-SubstTemplateTypeParmType 0x564a8902b650 'int' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8902d740 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x564a8902c990 'const int *'
|   `-QualType 0x564a8902b651 'const int' const
|     `-SubstTemplateTypeParmType 0x564a8902b650 'int' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-BuiltinType 0x564a889c4580 'int'
|-EnumDecl 0x564a8902d798 <line:134:5> col:5
| `-EnumConstantDecl 0x564a8902d890 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a8902d870 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a8902d918 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a8902db68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8902d9d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8902da70 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x564a8902de28 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x564a8902dd10 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x564a8902e0e8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x564a8902dfd0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x564a8902e400 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x564a8902e2e0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x564a8902fbf0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x564a8902fad0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x564a8902fee0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8902fd28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8902fda0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x564a89030008 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x564a890300e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89030140 <col:30> Inherited
|-CXXMethodDecl 0x564a89030188 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x564a89030238 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89030290 <col:30> Inherited
|-CXXMethodDecl 0x564a89030358 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x564a89030408 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89030460 <col:30> Inherited
|-CXXMethodDecl 0x564a890304a8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x564a89030558 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890305b0 <col:30> Inherited
|-CXXMethodDecl 0x564a890305f8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x564a890306a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89030700 <col:30> Inherited
|-CXXMethodDecl 0x564a89030748 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x564a890307f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89030850 <col:30> Inherited
|-CXXMethodDecl 0x564a89030878 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a89030928 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a890309d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a89030b98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89030a88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89030b00 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x564a89030ce8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a89030c58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89030e98 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x564a89030da0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a89030f50 <col:20>
| `-OptimizeNoneAttr 0x564a89030fa8 <col:30>
|-CXXMethodDecl 0x564a890310c8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x564a89030fd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a89031180 <col:20>
| `-OptimizeNoneAttr 0x564a890311d8 <col:30>
|-CXXMethodDecl 0x564a89031290 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a89031200 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890313d8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a89031348 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89031508 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x564a89031638 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x564a89031708 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x564a890317d8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x564a89031918 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a89031888 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89031a60 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a890319d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89031ba8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x564a89031b18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a89031c60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a89031d60 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a89031cd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a89031e18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a89031ed8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x564a89031fd8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x564a89032158 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x564a89032098 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x564a89032918 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a89032210 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x564a89032878 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x564a89032778 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x564a890329f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a89032b48 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x564a89032ab8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x564a89032c00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a89032e48 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89032cc0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x564a89032d38 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x564a89033008 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x564a89032f18 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x564a89033258 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x564a890330d0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x564a89033148 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x564a89033318 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x564a89033578 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x564a89033480 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x564a89033648 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a89033648

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a89033780 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x564a89033898 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x564a89033938 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x564a89033998 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x564a89033a30 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x564a89033a30
| `-ParmVarDecl 0x564a89033b48 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x564a89033be8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x564a89033be8
| `-ParmVarDecl 0x564a89033cf8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x564a89033d98 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x564a89033d98
| `-ParmVarDecl 0x564a89033ea8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x564a89033f18 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x564a89033f18
| `-ParmVarDecl 0x564a89034028 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x564a890340b0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x564a890340b0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a89035640 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x564a89035818 prev 0x564a89035640 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564a890358a8 <col:46, col:52> col:46 public
|-TypedefDecl 0x564a890358d0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a89037290 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x564a89037240 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x564a89037220 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x564a89035ae8 'type'
|     `-SubstTemplateTypeParmType 0x564a89035ab0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x564a88d128c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d12870 'T'
|       `-RecordType 0x564a89033810 'Router::element_landmark_t'
|         `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a89037348 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x564a89037310 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x564a890372f0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x564a89037290 'type'
|     `-ElaboratedType 0x564a89037240 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x564a89037220 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x564a89035ae8 'type'
|         `-SubstTemplateTypeParmType 0x564a89035ab0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x564a88d128c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564a88d12870 'T'
|           `-RecordType 0x564a89033810 'Router::element_landmark_t'
|             `-CXXRecord 0x564a89033780 'element_landmark_t'
|-CXXMethodDecl 0x564a890374c8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x564a890373d8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x564a890375b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564a89037698 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x564a89037698
|-CXXMethodDecl 0x564a89037968 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x564a89037870 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x564a89039ab8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x564a89037a20 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a890399a0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x564a89039c88 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x564a89039b78 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a89039bf0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x564a89039de8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x564a89039eb8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x564a8903a108 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x564a89039f78 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x564a89039ff0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x564a8903a368 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x564a8903a1d8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x564a8903a250 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x564a8903a528 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x564a8903a438 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x564a8903a6e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x564a8903a5f0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x564a8903a7a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a8903a850 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a8903aa88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x564a8903a900 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a8903a978 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x564a8903ad28 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x564a8903ac30 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x564a8903adf0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x564a8903ae40 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564a8903ae90 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a890341a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x564a890343a8 prev 0x564a890341a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a890355b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x564a89035560 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x564a89035540 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x564a890353f0 'type'
|     `-SubstTemplateTypeParmType 0x564a89035280 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x564a88cea4d0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x564a88cea478 'F'
|       `-RecordType 0x564a89034ee0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x564a89034e00 'typed_array_memory'
|-FieldDecl 0x564a8903aee0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x564a8903af30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a8903af68 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x564a89034440 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-RecordType 0x564a89033810 'Router::element_landmark_t'
|     `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a8903aff8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x564a8903afc0 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x564a89034440 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a89033810 'Router::element_landmark_t'
|       `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a8903b088 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x564a8903b050 'const Router::element_landmark_t &'
|   `-QualType 0x564a89034441 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x564a89034440 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a89033810 'Router::element_landmark_t'
|         `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a8903b118 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x564a8903b0e0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x564a89034440 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a89033810 'Router::element_landmark_t'
|       `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a8903b1a8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x564a8903b170 'const Router::element_landmark_t *'
|   `-QualType 0x564a89034441 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x564a89034440 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a89033810 'Router::element_landmark_t'
|         `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a8903be00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x564a8903bdb0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x564a8903bd90 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x564a8903bcc8 'type'
|     `-LValueReferenceType 0x564a8903bc90 'const Router::element_landmark_t &'
|       `-QualType 0x564a8903ba31 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x564a8903ba30 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x564a88cf2440 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564a88cf23e8 'T'
|           `-RecordType 0x564a89033810 'Router::element_landmark_t'
|             `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a8903be68 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x564a8903b050 'const Router::element_landmark_t &'
|   `-QualType 0x564a89034441 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x564a89034440 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a89033810 'Router::element_landmark_t'
|         `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a8903bec0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8903bf28 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x564a8903b0e0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x564a89034440 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a89033810 'Router::element_landmark_t'
|       `-CXXRecord 0x564a89033780 'element_landmark_t'
|-TypedefDecl 0x564a8903bf90 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x564a8903b170 'const Router::element_landmark_t *'
|   `-QualType 0x564a89034441 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x564a89034440 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a89033810 'Router::element_landmark_t'
|         `-CXXRecord 0x564a89033780 'element_landmark_t'
|-EnumDecl 0x564a8903bfe8 <line:134:5> col:5
| `-EnumConstantDecl 0x564a8903c0e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a8903c0c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a8903c168 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a8903c3f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8903c220 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8903c2c0 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x564a8903c6b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x564a8903c5a0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x564a8903c978 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x564a8903c860 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x564a8903ccc0 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x564a8903cba0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x564a8903cfd0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x564a8903ceb0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x564a8903d2c0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8903d108 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8903d180 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x564a8903d3e8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x564a8903d4c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8903d520 <col:30> Inherited
|-CXXMethodDecl 0x564a8903d568 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x564a8903d618 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8903d670 <col:30> Inherited
|-CXXMethodDecl 0x564a8903d738 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x564a8903d7e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8903d840 <col:30> Inherited
|-CXXMethodDecl 0x564a8903d888 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x564a8903d938 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8903d990 <col:30> Inherited
|-CXXMethodDecl 0x564a8903d9d8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x564a8903da88 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8903dae0 <col:30> Inherited
|-CXXMethodDecl 0x564a8903db28 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x564a8903dbd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8903dc30 <col:30> Inherited
|-CXXMethodDecl 0x564a8903dc58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a8903dd08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a8903ddb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a8903df78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8903de68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8903dee0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x564a8903e0c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a8903e038 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8903e278 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x564a8903e180 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a8903e330 <col:20>
| `-OptimizeNoneAttr 0x564a8903e388 <col:30>
|-CXXMethodDecl 0x564a8903e4a8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x564a8903e3b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a8903e560 <col:20>
| `-OptimizeNoneAttr 0x564a8903e5b8 <col:30>
|-CXXMethodDecl 0x564a8903e670 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a8903e5e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8903e7b8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a8903e728 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8903e8e8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x564a8903ea18 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x564a8903eae8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x564a8903ebb8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x564a8903ecf8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a8903ec68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8903ee40 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a8903edb0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a8903ef88 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x564a8903eef8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a8903f040 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a8903f140 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a8903f0b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a8903f1f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a8903f2b8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x564a8903f3b8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x564a8903f538 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x564a8903f478 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x564a8903fcc8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a8903f5f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x564a8903fc28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x564a8903fb28 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x564a8903fda8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a8903fef8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x564a8903fe68 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x564a8903ffb0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a890401f8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89040070 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x564a890400e8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x564a89040388 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x564a890402c8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x564a89040598 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x564a89040450 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x564a890404c8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x564a89040658 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a890408b8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x564a890407c0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x564a89040988 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a89040988

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88f7f630 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x564a88f7f808 prev 0x564a88f7f630 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564a88f7f898 <col:46, col:52> col:46 public
|-TypedefDecl 0x564a88f7f8c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88f854f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x564a88f854a0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x564a88f83dd0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x564a88f83cd0 'type'
|     `-TemplateSpecializationType 0x564a88f83c60 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x564a88f83b38 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x564a88f83b18 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x564a88f83af8 <col:24> 'unsigned long' 16
|       `-RecordType 0x564a88f83c40 'char_array<16>'
|         `-ClassTemplateSpecialization 0x564a88f83b58 'char_array'
|-TypedefDecl 0x564a88f855a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x564a88f85570 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x564a88f85550 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x564a88f854f0 'type'
|     `-ElaboratedType 0x564a88f854a0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x564a88f83dd0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x564a88f83cd0 'type'
|         `-TemplateSpecializationType 0x564a88f83c60 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x564a88f83b38 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x564a88f83b18 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x564a88f83af8 <col:24> 'unsigned long' 16
|           `-RecordType 0x564a88f83c40 'char_array<16>'
|             `-ClassTemplateSpecialization 0x564a88f83b58 'char_array'
|-CXXMethodDecl 0x564a88f85728 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x564a88f85638 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x564a88f85818 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564a88f858f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x564a88f858f8
|-CXXMethodDecl 0x564a88f85bc8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x564a88f85ad0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x564a88f85e08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x564a88f85c80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88f85cf8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564a88f85fd8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x564a88f85ec8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88f85f40 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564a88f86138 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x564a88f86208 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x564a88f86458 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x564a88f862c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x564a88f86340 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564a88f866b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x564a88f86528 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x564a88f865a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564a88f86878 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x564a88f86788 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564a88f86a38 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x564a88f86940 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564a88f86af0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a88f86ba0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a88f86dd8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x564a88f86c50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88f86cc8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564a88f87078 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x564a88f86f80 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x564a88f87140 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x564a88f87190 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564a88f871e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a890410a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x564a890412a8 prev 0x564a890410a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a89045340 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x564a890452f0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x564a890452d0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x564a89045180 'type'
|     `-SubstTemplateTypeParmType 0x564a88f7f200 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a88f7ed50 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x564a88f7ec68 'sized_array_memory'
|-FieldDecl 0x564a89045440 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x564a89045490 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a890454c8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x564a89041340 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-RecordType 0x564a89003da0 'Router::Connection'
|     `-CXXRecord 0x564a89003d10 'Connection'
|-TypedefDecl 0x564a89045588 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x564a89045550 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x564a89041340 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a89003da0 'Router::Connection'
|       `-CXXRecord 0x564a89003d10 'Connection'
|-TypedefDecl 0x564a89045618 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x564a890455e0 'const Router::Connection &'
|   `-QualType 0x564a89041341 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x564a89041340 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a89003da0 'Router::Connection'
|         `-CXXRecord 0x564a89003d10 'Connection'
|-TypedefDecl 0x564a890456a8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x564a89045670 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x564a89041340 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a89003da0 'Router::Connection'
|       `-CXXRecord 0x564a89003d10 'Connection'
|-TypedefDecl 0x564a89045738 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x564a89045700 'const Router::Connection *'
|   `-QualType 0x564a89041341 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x564a89041340 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a89003da0 'Router::Connection'
|         `-CXXRecord 0x564a89003d10 'Connection'
|-TypedefDecl 0x564a89046390 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x564a89046340 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x564a89046320 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x564a89046258 'type'
|     `-LValueReferenceType 0x564a89046220 'const Router::Connection &'
|       `-QualType 0x564a89045fc1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x564a89045fc0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x564a88cf2440 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564a88cf23e8 'T'
|           `-RecordType 0x564a89003da0 'Router::Connection'
|             `-CXXRecord 0x564a89003d10 'Connection'
|-TypedefDecl 0x564a890463f8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x564a890455e0 'const Router::Connection &'
|   `-QualType 0x564a89041341 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x564a89041340 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a89003da0 'Router::Connection'
|         `-CXXRecord 0x564a89003d10 'Connection'
|-TypedefDecl 0x564a89046450 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a890464b8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x564a89045670 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x564a89041340 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a89003da0 'Router::Connection'
|       `-CXXRecord 0x564a89003d10 'Connection'
|-TypedefDecl 0x564a89046520 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x564a89045700 'const Router::Connection *'
|   `-QualType 0x564a89041341 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x564a89041340 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a89003da0 'Router::Connection'
|         `-CXXRecord 0x564a89003d10 'Connection'
|-EnumDecl 0x564a89046578 <line:134:5> col:5
| `-EnumConstantDecl 0x564a89046670 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a89046650 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a890466f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a89046988 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x564a890467b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89046850 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x564a89046c48 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x564a89046b30 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x564a89046f08 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x564a89046df0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x564a89047250 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x564a89047130 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x564a89047560 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x564a89047440 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x564a89047850 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89047698 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89047710 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x564a890479a8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x564a89047a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89047ae0 <col:30> Inherited
|-CXXMethodDecl 0x564a89047b28 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x564a89047bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89047c30 <col:30> Inherited
|-CXXMethodDecl 0x564a89047cf8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x564a89047da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89047e00 <col:30> Inherited
|-CXXMethodDecl 0x564a89047e48 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x564a89047ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89047f50 <col:30> Inherited
|-CXXMethodDecl 0x564a89047f98 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x564a89048048 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890480a0 <col:30> Inherited
|-CXXMethodDecl 0x564a890480e8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x564a89048198 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890481f0 <col:30> Inherited
|-CXXMethodDecl 0x564a89048218 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a890482c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a89048378 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a89048538 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89048428 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a890484a0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x564a89048688 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a890485f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89048838 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x564a89048740 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a890488f0 <col:20>
| `-OptimizeNoneAttr 0x564a89048948 <col:30>
|-CXXMethodDecl 0x564a89048a68 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x564a89048970 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a89048b20 <col:20>
| `-OptimizeNoneAttr 0x564a89048b78 <col:30>
|-CXXMethodDecl 0x564a89048c30 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a89048ba0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89048d78 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a89048ce8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89048ea8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x564a89048fd8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x564a890490a8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x564a89049178 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x564a890492b8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a89049228 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89049400 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a89049370 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89049548 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x564a890494b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a89049600 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a89049700 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a89049670 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a890497b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a89049878 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x564a89049978 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x564a89049b28 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x564a89049a38 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x564a8904a2e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a89049be0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x564a8904a248 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x564a8904a148 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x564a8904a3c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a8904a518 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x564a8904a488 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x564a8904a5d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a8904a818 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8904a690 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x564a8904a708 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x564a8904a9d8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x564a8904a8e8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x564a8904ac28 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x564a8904aaa0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x564a8904ab18 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x564a8904ace8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a8904af48 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x564a8904ae50 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x564a8904b018 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a8904b018

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88c53c70 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88c53d88 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x564a88c53e18 <col:22, col:28> col:22 public
|-EnumDecl 0x564a88c53e40 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x564a88c53f58 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c53f38 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x564a88c53f20 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x564a88c53f00 <col:14> 'int' 999
| |-EnumConstantDecl 0x564a88c54000 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c53fe0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x564a88c53fc8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x564a88c53fa8 <col:14> 'int' 1
| |-EnumConstantDecl 0x564a88c54090 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c54070 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x564a88c54050 <col:17> 'int' 0
| |-EnumConstantDecl 0x564a88c54120 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c54100 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x564a88c540e0 <col:13> 'int' 1
| |-EnumConstantDecl 0x564a88c541b0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c54190 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x564a88c54170 <col:16> 'int' 2
| |-EnumConstantDecl 0x564a88c54240 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c54220 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x564a88c54200 <col:13> 'int' 3
| |-EnumConstantDecl 0x564a88c542d0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c542b0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x564a88c54290 <col:15> 'int' 4
| |-EnumConstantDecl 0x564a88c54360 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c54340 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x564a88c54320 <col:14> 'int' 5
| |-EnumConstantDecl 0x564a88c543f0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x564a88c543d0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x564a88c543b0 <col:12> 'int' 6
| `-EnumConstantDecl 0x564a88c54480 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x564a88c54460 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x564a88c54440 <col:13> 'int' 7
|-VarDecl 0x564a88c54548 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x564a88c545d0 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x564a88c54658 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x564a88c546e0 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x564a88c54768 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x564a88c547f0 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x564a88c548a0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x564a88c54928 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x564a88c549b0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x564a88c54a38 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x564a88c54ac0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x564a88c54bf0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x564a88c5a238 '_nerrors' 'int'
| | `-IntegerLiteral 0x564a88c5a9c8 <line:128:13> 'int' 0
| `-CompoundStmt 0x564a88c5c770 <col:16, line:129:5>
|-CXXDestructorDecl 0x564a88c54ce0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x564a88c5c780 <col:29, line:132:5>
|-CXXMethodDecl 0x564a88c54e98 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x564a88c54dd0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a88c54f60 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x564a88c55048 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x564a88c5c7d8 <col:44, line:161:5>
|   `-ReturnStmt 0x564a88c5c7c8 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x564a88c5c7b0 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x564a88c5c790 <col:9> 'ErrorHandler *' lvalue Var 0x564a88c5a298 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x564a88c551b8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x564a88c550f8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a88c55280 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x564a88c5c838 <col:43, line:173:5>
|   `-ReturnStmt 0x564a88c5c828 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x564a88c5c810 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x564a88c5c7f0 <col:9> 'ErrorHandler *' lvalue Var 0x564a88c5a310 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x564a88c55338 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x564a88c553b8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x564a88c55500 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x564a88c55438 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x564a88c55650 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x564a88c555c0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x564a88c557a8 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x564a88c55710 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x564a88c55900 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x564a88c55868 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x564a88c55a58 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x564a88c559c0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x564a88c55c70 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x564a88c55b10 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x564a88c55b90 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x564a88c55e48 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x564a88c55d30 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x564a88c55db0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x564a88c56068 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x564a88c55f08 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x564a88c55f88 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x564a88c56248 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x564a88c56128 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x564a88c561a8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x564a88c56428 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x564a88c56308 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x564a88c56388 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x564a88c565b0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x564a88c564e8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x564a88c56780 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x564a88c56668 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x564a88c566e0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x564a88c5ca98 <col:57, line:234:5>
|   `-ReturnStmt 0x564a88c5ca88 <line:233:2, col:41>
|     `-ExprWithCleanups 0x564a88c5ca70 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x564a88c5ca18 <col:9, col:41> 'int'
|         |-MemberExpr 0x564a88c5c9e8 <col:9> '<bound member function type>' ->xmessage 0x564a88c565b0
|         | `-CXXThisExpr 0x564a88c5c9d8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x564a88c5ca58 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x564a88c5ca40 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x564a88c5c9b8 <col:18, col:40> 'String' (CXXTemporary 0x564a88c5c9b8)
|               `-CallExpr 0x564a88c5c980 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x564a88c5c968 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x564a88c5c8d8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x564a88c58a20 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x564a88c5c8f8 <col:31> 'const String' lvalue ParmVar 0x564a88c566e0 'str' 'const String &'
|                 `-DeclRefExpr 0x564a88c5c918 <col:36> 'const String' lvalue ParmVar 0x564a88c56668 'anno' 'const String &'
|-CXXMethodDecl 0x564a88c56b30 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x564a88c568b0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x564a88c56930 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x564a88c56a00 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x564a88c5cd28 <col:68, line:243:5>
|   `-ReturnStmt 0x564a88c5cd18 <line:242:2, col:41>
|     `-ExprWithCleanups 0x564a88c5cd00 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x564a88c5cca0 <col:9, col:41> 'int'
|         |-MemberExpr 0x564a88c5cc70 <col:9> '<bound member function type>' ->xmessage 0x564a88c56780
|         | `-CXXThisExpr 0x564a88c5cc60 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x564a88c5cb38 <col:18> 'const String' lvalue ParmVar 0x564a88c568b0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x564a88c5cce8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x564a88c5ccd0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x564a88c5cc40 <col:24, col:40> 'String' (CXXTemporary 0x564a88c5cc40)
|               `-CXXMemberCallExpr 0x564a88c5cbd8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x564a88c5cb68 <col:24> '<bound member function type>' ->vformat 0x564a88c57d10
|                 | `-CXXThisExpr 0x564a88c5cb58 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x564a88c5cc08 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x564a88c5cb98 <col:32> 'const char *' lvalue ParmVar 0x564a88c56930 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x564a88c5cc20 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x564a88c5cbb8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x564a88c56a00 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564a88c56dd0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x564a88c56bf8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x564a88c56c70 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x564a88c56ce8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x564a88c5d068 <col:23, line:254:5>
|   `-ReturnStmt 0x564a88c5d058 <line:253:2, col:71>
|     `-ExprWithCleanups 0x564a88c5d040 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x564a88c5cfe0 <col:9, col:71> 'int'
|         |-MemberExpr 0x564a88c5cfb0 <col:9> '<bound member function type>' ->xmessage 0x564a88c56780
|         | `-CXXThisExpr 0x564a88c5cfa0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x564a88c5d028 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x564a88c5d010 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x564a88c5cf60 <col:18, col:65> 'String' (CXXTemporary 0x564a88c5cf60)
|         |     `-CallExpr 0x564a88c5cef8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x564a88c5cee0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x564a88c5cdc8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x564a88c58a20 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x564a88c5cde8 <col:31> 'const String' lvalue ParmVar 0x564a88c56c70 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x564a88c5cf40 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x564a88c5cf28 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x564a88c5cec0 <col:37, col:64> 'String' (CXXTemporary 0x564a88c5cec0)
|         |             `-CallExpr 0x564a88c5ce90 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x564a88c5ce78 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x564a88c5ce08 <col:37> 'String (const String &)' lvalue CXXMethod 0x564a88c59078 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x564a88c5ce28 <col:56> 'const String' lvalue ParmVar 0x564a88c56bf8 'landmark' 'const String &'
|         `-DeclRefExpr 0x564a88c5cf80 <col:68> 'const String' lvalue ParmVar 0x564a88c56ce8 'str' 'const String &'
|-CXXMethodDecl 0x564a88c57150 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x564a88c56e98 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x564a88c56f10 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x564a88c56f90 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x564a88c57008 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x564a88c5d320 <col:34, line:267:5>
|   `-ReturnStmt 0x564a88c5d310 <line:266:2, col:51>
|     `-ExprWithCleanups 0x564a88c5d2f8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x564a88c5d290 <col:9, col:51> 'int'
|         |-MemberExpr 0x564a88c5d260 <col:9> '<bound member function type>' ->xmessage 0x564a88c56dd0
|         | `-CXXThisExpr 0x564a88c5d250 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x564a88c5d108 <col:18> 'const String' lvalue ParmVar 0x564a88c56e98 'landmark' 'const String &'
|         |-DeclRefExpr 0x564a88c5d128 <col:28> 'const String' lvalue ParmVar 0x564a88c56f10 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x564a88c5d2e0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x564a88c5d2c8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x564a88c5d230 <col:34, col:50> 'String' (CXXTemporary 0x564a88c5d230)
|               `-CXXMemberCallExpr 0x564a88c5d1c8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x564a88c5d158 <col:34> '<bound member function type>' ->vformat 0x564a88c57d10
|                 | `-CXXThisExpr 0x564a88c5d148 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x564a88c5d1f8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x564a88c5d188 <col:42> 'const char *' lvalue ParmVar 0x564a88c56f90 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x564a88c5d210 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x564a88c5d1a8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x564a88c57008 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564a88c57260 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x564a88c5d3a0 <col:25, line:288:5>
|   `-ReturnStmt 0x564a88c5d390 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x564a88c5d378 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x564a88c5d348 <col:9> 'const int' lvalue ->_nerrors 0x564a88c5a238
|         `-CXXThisExpr 0x564a88c5d338 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x564a88c57470 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x564a88c57318 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x564a88c57398 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x564a88c57758 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x564a88c57538 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x564a88c575b8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x564a88c57630 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564a88c578f0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x564a88c57828 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x564a88c57b38 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x564a88c579b0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x564a88c57a28 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x564a88c5d600 <col:58, line:357:5>
|   `-ReturnStmt 0x564a88c5d5f0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x564a88c5d5d8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x564a88c5d5a8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x564a88c5d590 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x564a88c5d570 <col:9, col:29> 'String' (CXXTemporary 0x564a88c5d570)
|             `-CallExpr 0x564a88c5d500 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x564a88c5d4e8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564a88c5d468 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x564a88c57758 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x564a88c5d408 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x564a88c5d538 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x564a88c5d428 <col:21> 'const char *' lvalue ParmVar 0x564a88c579b0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x564a88c5d550 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x564a88c5d448 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x564a88c57a28 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564a88c57d10 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x564a88c57c00 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x564a88c57c78 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564a88c57e68 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x564a88c57dd8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x564a88c57fe8 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x564a88c57f20 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x564a88c58280 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x564a88c580a0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x564a88c58120 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x564a88c58198 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x564a88c583e0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x564a88c58350 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x564a88c5d718 <col:37, line:441:5>
|   `-IfStmt 0x564a88c5d700 <line:439:2, line:440:8>
|     |-BinaryOperator 0x564a88c5d688 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x564a88c5d658 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x564a88c5d618 <col:6> 'int' lvalue ParmVar 0x564a88c58350 'level' 'int'
|     | `-ImplicitCastExpr 0x564a88c5d670 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x564a88c5d638 <col:15> 'ErrorHandler::Level' EnumConstant 0x564a88c54240 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x564a88c5d6e8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x564a88c5d6b8 <col:8> 'int' lvalue ->_nerrors 0x564a88c5a238
|         `-CXXThisExpr 0x564a88c5d6a8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x564a88c584a8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x564a88c5d7b0 <col:26, line:448:5>
|   `-BinaryOperator 0x564a88c5d790 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x564a88c5d740 <col:2> 'int' lvalue ->_nerrors 0x564a88c5a238
|     | `-CXXThisExpr 0x564a88c5d730 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x564a88c5d770 <col:13> 'int' 0
|-CXXMethodDecl 0x564a88c58670 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x564a88c58560 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x564a88c585d8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x564a88c58a20 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x564a88c58730 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x564a88c587a8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x564a88c58cd8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x564a88c58ae0 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x564a88c58b60 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x564a88c58be0 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x564a88c58d90 <col:59> 0 0
|-CXXMethodDecl 0x564a88c58f28 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x564a88c58e08 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x564a88c58e88 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x564a88c5de20 <col:70, line:534:5>
|   |-DeclStmt 0x564a88c5d920 <line:528:2, col:20>
|   | |-VarDecl 0x564a88c5d7d8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x564a88c5d840 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x564a88c5d878 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x564a88c5d8e0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x564a88c5d9f0 <line:529:2, col:23>
|   | `-VarDecl 0x564a88c5d950 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x564a88c5d9d8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x564a88c5d9b8 <col:18> 'const char *' lvalue ParmVar 0x564a88c58e08 'begin' 'const char *'
|   |-DoStmt 0x564a88c5ddb8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x564a88c5dce8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x564a88c5dcd0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x564a88c5dcb0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x564a88c5da08 <col:6> 'const char *' lvalue Var 0x564a88c5d950 'x' 'const char *'
|   | |     `-CallExpr 0x564a88c5dc00 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x564a88c5dbe8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x564a88c5dba0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x564a88c5a710 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x564a88c5dc68 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x564a88c5dc50 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x564a88c5dac0 <col:20, col:27> 'String' (CXXTemporary 0x564a88c5dac0)
|   | |       |     `-CXXTemporaryObjectExpr 0x564a88c5da88 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x564a88c5dc80 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x564a88c5dae0 <col:30> 'const char *' lvalue Var 0x564a88c5d950 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x564a88c5dc98 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x564a88c5db00 <col:33> 'const char *' lvalue ParmVar 0x564a88c58e88 'end' 'const char *'
|   | |       |-UnaryOperator 0x564a88c5db40 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x564a88c5db20 <col:39> 'String' lvalue Var 0x564a88c5d7d8 'name' 'String'
|   | |       |-UnaryOperator 0x564a88c5db78 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x564a88c5db58 <col:46> 'String' lvalue Var 0x564a88c5d878 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x564a88c5db90 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x564a88c5dda0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x564a88c5dd88 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x564a88c5dd68 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x564a88c5dd38 <col:11> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|   |         `-ImplicitCastExpr 0x564a88c5dd20 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x564a88c5dd00 <col:11> 'String' lvalue Var 0x564a88c5d7d8 'name' 'String'
|   `-ReturnStmt 0x564a88c5de10 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x564a88c5ddf8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x564a88c5ddd8 <col:9> 'const char *' lvalue Var 0x564a88c5d950 'x' 'const char *'
|-CXXMethodDecl 0x564a88c59078 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x564a88c58fe8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x564a88c5e428 <col:55, line:550:5>
|   `-IfStmt 0x564a88c5e400 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x564a88c5e060 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x564a88c5e048 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x564a88c5e030 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x564a88c5e010 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x564a88c5dfe0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|     | |       `-DeclRefExpr 0x564a88c5de80 <col:6> 'const String' lvalue ParmVar 0x564a88c58fe8 'x' 'const String &'
|     | `-BinaryOperator 0x564a88c5dfc0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x564a88c5df90 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x564a88c5df40 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x564a88c5df28 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x564a88c5dee0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x564a88c22110 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x564a88c5dea0 <col:11> 'const String' lvalue ParmVar 0x564a88c58fe8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x564a88c5dec0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x564a88c5dfa8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x564a88c5df78 <col:19> 'char' 123
|     |-ReturnStmt 0x564a88c5e0d0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x564a88c5e0a0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x564a88c5e080 <col:13> 'const String' lvalue ParmVar 0x564a88c58fe8 'x' 'const String &'
|     `-IfStmt 0x564a88c5e3d8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x564a88c5e168 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x564a88c5e150 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x564a88c5e130 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x564a88c5e100 <col:11> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|       |       `-DeclRefExpr 0x564a88c5e0e0 <col:11> 'const String' lvalue ParmVar 0x564a88c58fe8 'x' 'const String &'
|       |-ReturnStmt 0x564a88c5e2f0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x564a88c5e2d8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x564a88c5e2a8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x564a88c5e290 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x564a88c5e270 <col:13, col:29> 'String' (CXXTemporary 0x564a88c5e270)
|       |         `-CallExpr 0x564a88c5e220 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x564a88c5e208 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x564a88c5e180 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x564a88c58670 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x564a88c5e250 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x564a88c5e1a0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x564a88c5e1c0 <col:28> 'const String' lvalue ParmVar 0x564a88c58fe8 'x' 'const String &'
|       `-ReturnStmt 0x564a88c5e3c8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x564a88c5e3b0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x564a88c5e380 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x564a88c5e368 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x564a88c5e348 <col:13, col:20> 'String' (CXXTemporary 0x564a88c5e348)
|                 `-CXXTemporaryObjectExpr 0x564a88c5e310 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x564a88c59278 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x564a88c59130 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x564a88c591a8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564a88c5a9b8 <col:71> 'bool' false
|-CXXRecordDecl 0x564a88c59328 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x564a88c59628 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x564a88c595c0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x564a88c59560 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x564a88c59520 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x564a88c03470 'String'
|       | `-CXXRecord 0x564a88c033e0 'String'
|       |-BuiltinType 0x564a889c4580 'int'
|       `-DecayedType 0x564a88c569d0 '__va_list_tag *' sugar
|         |-TypedefType 0x564a88c569a0 'va_list' sugar
|         | |-Typedef 0x564a88c3a120 'va_list'
|         | `-TypedefType 0x564a88c3a0d0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x564a88c354a8 '__gnuc_va_list'
|         |   `-TypedefType 0x564a88c35410 '__builtin_va_list' sugar
|         |     |-Typedef 0x564a88a05d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x564a88a05ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x564a889c52d0 '__va_list_tag'
|         |         `-CXXRecord 0x564a889c5238 '__va_list_tag'
|         `-PointerType 0x564a88c3fca0 '__va_list_tag *'
|           `-RecordType 0x564a889c52d0 '__va_list_tag'
|             `-CXXRecord 0x564a889c5238 '__va_list_tag'
|-EnumDecl 0x564a88c59680 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x564a88c59780 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59ce0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c59760 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x564a88c59740 <col:16> 'int' 1
| |-EnumConstantDecl 0x564a88c59810 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59cf8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c597f0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x564a88c597d0 <col:21> 'int' 2
| |-EnumConstantDecl 0x564a88c598a0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59d10 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c59880 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x564a88c59860 <col:22> 'int' 4
| |-EnumConstantDecl 0x564a88c59930 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59d28 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c59910 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x564a88c598f0 <col:17> 'int' 8
| |-EnumConstantDecl 0x564a88c599c0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59d40 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c599a0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x564a88c59980 <col:22> 'int' 16
| |-EnumConstantDecl 0x564a88c59a50 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59d58 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c59a30 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x564a88c59a10 <col:19> 'int' 32
| |-EnumConstantDecl 0x564a88c59ae0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59d70 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c59ac0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x564a88c59aa0 <col:17> 'int' 64
| |-EnumConstantDecl 0x564a88c59b70 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59d88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c59b50 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x564a88c59b30 <col:14> 'int' 128
| |-EnumConstantDecl 0x564a88c59c00 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564a88c59da0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88c59be0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x564a88c59bc0 <col:16> 'int' 256
| `-EnumConstantDecl 0x564a88c59c90 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x564a88c59db8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88c59c70 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x564a88c59c50 <col:12> 'int' 1024
|-CXXMethodDecl 0x564a88c59fc8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x564a88c59de0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x564a88c59e80 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x564a88c5a150 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x564a88c5a088 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x564a88c5a1f8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x564a88c5a238 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x564a88c5a298 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x564a88c5a310 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x564a88c5a710 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x564a88c5a388 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x564a88c5a408 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x564a88c5a488 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x564a88c5a500 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x564a88c5a578 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x564a88c5a5f0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x564a88c5a838 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x564a88c5a838
| `-ParmVarDecl 0x564a88c5a948 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x564a88c640b8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x564a88c640b8
  `-ParmVarDecl 0x564a88c641c8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f37a00 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x564a88f37b50 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x564a88f37bd0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x564a88f389c8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x564a88f389c8
| `-ParmVarDecl 0x564a88f38ad8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x564a88f38b78 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x564a88f38b78
| `-ParmVarDecl 0x564a88f38c88 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x564a88f38cf8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x564a88f38cf8
|-CXXMethodDecl 0x564a88f395c8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x564a88f395c8
| `-ParmVarDecl 0x564a88f396d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x564a88f39748 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x564a88f39748
| `-ParmVarDecl 0x564a88f39858 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x564a89066800 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x564a890668e0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f37d00 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x564a88f37e28 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x564a88f37eb0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x564a88f38e28 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x564a88f38e28
| `-ParmVarDecl 0x564a88f38f38 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x564a88f38fd8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x564a88f38fd8
| `-ParmVarDecl 0x564a88f390e8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x564a88f39158 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x564a88f39158
|-CXXMethodDecl 0x564a88f398f8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x564a88f398f8
| `-ParmVarDecl 0x564a88f39a08 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x564a88f39b10 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x564a88f39b10
| `-ParmVarDecl 0x564a88f39c18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x564a89066940 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x564a89066a20 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f33378 prev 0x564a88f328a0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x564a88f33470 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x564a88f33500 <col:17, col:23> col:17 public
|-EnumDecl 0x564a88f33528 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x564a88f33630 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34380 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33610 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x564a88f335f0 <col:11> 'int' 1
| |-EnumConstantDecl 0x564a88f336c0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34398 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f336a0 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x564a88f33680 <col:12> 'int' 2
| |-EnumConstantDecl 0x564a88f33750 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f343b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33730 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x564a88f33710 <col:17> 'int' 4
| |-EnumConstantDecl 0x564a88f337e0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f343c8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f337c0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x564a88f337a0 <col:16> 'int' 0
| |-EnumConstantDecl 0x564a88f33870 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f343e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33850 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x564a88f33830 <col:19> 'int' 32
| |-EnumConstantDecl 0x564a88f33900 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f343f8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f338e0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x564a88f338c0 <col:10> 'int' 64
| |-EnumConstantDecl 0x564a88f33990 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34410 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33970 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x564a88f33950 <col:19> 'int' 128
| |-EnumConstantDecl 0x564a88f33a20 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34428 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33a00 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x564a88f339e0 <col:20> 'int' 256
| |-EnumConstantDecl 0x564a88f33ab0 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34440 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33a90 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x564a88f33a70 <col:17> 'int' 512
| |-EnumConstantDecl 0x564a88f33b40 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34458 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33b20 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x564a88f33b00 <col:15> 'int' 1024
| |-EnumConstantDecl 0x564a88f33bd0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34470 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33bb0 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x564a88f33b90 <col:11> 'int' 2048
| |-EnumConstantDecl 0x564a88f33c60 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34488 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33c40 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x564a88f33c20 <col:16> 'int' 4096
| |-EnumConstantDecl 0x564a88f33cf0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f344a0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33cd0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x564a88f33cb0 <col:13> 'int' 8192
| |-EnumConstantDecl 0x564a88f33d80 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f344b8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33d60 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x564a88f33d40 <col:15> 'int' 16384
| |-EnumConstantDecl 0x564a88f33e50 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x564a88f33e30 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x564a88f33e10 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x564a88f33dd0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x564a88f33df0 <col:20> 'int' 26
| |-EnumConstantDecl 0x564a88f33f20 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x564a88f33f00 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x564a88f33ee0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x564a88f33ea0 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x564a88f33ec0 <col:27> 'int' 27
| |-EnumConstantDecl 0x564a88f33fb0 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f344d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f33f90 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x564a88f33f70 <col:17> 'int' 28
| |-EnumConstantDecl 0x564a88f34080 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x564a88f34060 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x564a88f34040 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x564a88f34000 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x564a88f34020 <col:18> 'int' EnumConstant 0x564a88f33fb0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f34110 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f344e8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f340f0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x564a88f340d0 <col:25> 'int' 8
| |-EnumConstantDecl 0x564a88f341a0 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x564a88f34500 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f34180 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x564a88f34160 <col:26> 'int' 16
| `-EnumConstantDecl 0x564a88f34330 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x564a88f34518 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f34310 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x564a88f342f0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x564a88f342b0 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x564a88f34270 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x564a88f34230 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x564a88f341f0 <col:14> 'int' EnumConstant 0x564a88f33630 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x564a88f34210 <col:23> 'int' EnumConstant 0x564a88f336c0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x564a88f34250 <col:33> 'int' EnumConstant 0x564a88f33750 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x564a88f34290 <col:48> 'int' EnumConstant 0x564a88f34110 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x564a88f342d0 <col:71> 'int' EnumConstant 0x564a88f341a0 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f34578 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x564a88f3a038 <col:39, line:64:5>
|   `-ReturnStmt 0x564a88f3a028 <line:63:2, col:9>
|     `-MemberExpr 0x564a88f39ff8 <col:9> 'const String' lvalue ->_name 0x564a88f379b0
|       `-CXXThisExpr 0x564a88f39fe8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x564a88f34638 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x564a88f3a0b8 <col:35, line:71:5>
|   `-ReturnStmt 0x564a88f3a0a8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x564a88f3a090 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564a88f3a060 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|         `-CXXThisExpr 0x564a88f3a050 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x564a88f34788 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x564a88f346f0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x564a88f3a238 <col:42, line:77:5>
|   `-ReturnStmt 0x564a88f3a228 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x564a88f3a210 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x564a88f3a1e0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x564a88f3a140 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x564a88f3a110 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a88f3a0d0 <col:9> 'int' lvalue ParmVar 0x564a88f346f0 'op' 'int'
|         | `-ImplicitCastExpr 0x564a88f3a128 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x564a88f3a0f0 <col:15> 'Handler::Flags' EnumConstant 0x564a88f336c0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x564a88f3a170 <col:25> 'void *const' lvalue ->_write_user_data 0x564a88f38060
|         | `-CXXThisExpr 0x564a88f3a160 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x564a88f3a1b0 <col:44> 'void *const' lvalue ->_read_user_data 0x564a88f37ff8
|           `-CXXThisExpr 0x564a88f3a1a0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x564a88f34858 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x564a88f3a2b8 <col:41, line:82:5>
|   `-ReturnStmt 0x564a88f3a2a8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x564a88f3a290 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x564a88f3a260 <col:9> 'void *const' lvalue ->_read_user_data 0x564a88f37ff8
|         `-CXXThisExpr 0x564a88f3a250 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x564a88f34920 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x564a88f3a338 <col:42, line:87:5>
|   `-ReturnStmt 0x564a88f3a328 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x564a88f3a310 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x564a88f3a2e0 <col:9> 'void *const' lvalue ->_write_user_data 0x564a88f38060
|         `-CXXThisExpr 0x564a88f3a2d0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x564a88f349e8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x564a88f34a88 <col:52> "" ""
|-CXXMethodDecl 0x564a88f34b20 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x564a88f34bc0 <col:52> "" ""
|-CXXMethodDecl 0x564a88f34c50 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x564a88f3a428 <col:34, line:98:5>
|   `-ReturnStmt 0x564a88f3a418 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x564a88f3a400 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x564a88f3a3e0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x564a88f3a3b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x564a88f3a360 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|         |   `-CXXThisExpr 0x564a88f3a350 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x564a88f3a3c8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x564a88f3a390 <col:18> 'Handler::Flags' EnumConstant 0x564a88f33630 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f34d10 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x564a88f3a518 <col:36, line:104:5>
|   `-ReturnStmt 0x564a88f3a508 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x564a88f3a4f0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x564a88f3a4d0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x564a88f3a4a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x564a88f3a450 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|         |   `-CXXThisExpr 0x564a88f3a440 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x564a88f3a4b8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x564a88f3a480 <col:18> 'Handler::Flags' EnumConstant 0x564a88f33750 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f34dd0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x564a88f3a6f8 <col:38, line:113:5>
|   `-ReturnStmt 0x564a88f3a6e8 <line:112:2, col:49>
|     `-BinaryOperator 0x564a88f3a6c8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x564a88f3a670 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x564a88f3a650 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x564a88f3a620 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x564a88f3a540 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|       |   |   `-CXXThisExpr 0x564a88f3a530 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x564a88f3a638 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x564a88f3a600 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x564a88f3a5e0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x564a88f3a5b0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x564a88f3a570 <col:20> 'Handler::Flags' EnumConstant 0x564a88f33630 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x564a88f3a5c8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x564a88f3a590 <col:29> 'Handler::Flags' EnumConstant 0x564a88f33990 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x564a88f3a6b0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x564a88f3a690 <col:49> 'Handler::Flags' EnumConstant 0x564a88f33630 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f34e90 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x564a88f3a7e8 <col:34, line:118:5>
|   `-ReturnStmt 0x564a88f3a7d8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x564a88f3a7c0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x564a88f3a7a0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x564a88f3a770 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x564a88f3a720 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|         |   `-CXXThisExpr 0x564a88f3a710 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x564a88f3a788 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x564a88f3a750 <col:18> 'Handler::Flags' EnumConstant 0x564a88f336c0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f34f50 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x564a88f3a9c8 <col:39, line:127:5>
|   `-ReturnStmt 0x564a88f3a9b8 <line:126:2, col:51>
|     `-BinaryOperator 0x564a88f3a998 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x564a88f3a940 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x564a88f3a920 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x564a88f3a8f0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x564a88f3a810 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|       |   |   `-CXXThisExpr 0x564a88f3a800 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x564a88f3a908 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x564a88f3a8d0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x564a88f3a8b0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x564a88f3a880 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x564a88f3a840 <col:20> 'Handler::Flags' EnumConstant 0x564a88f336c0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x564a88f3a898 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x564a88f3a860 <col:30> 'Handler::Flags' EnumConstant 0x564a88f33a20 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x564a88f3a980 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x564a88f3a960 <col:51> 'Handler::Flags' EnumConstant 0x564a88f336c0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f35010 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x564a88f3aad0 <col:33, line:132:5>
|   `-ReturnStmt 0x564a88f3aac0 <line:131:2, col:41>
|     `-BinaryOperator 0x564a88f3aaa0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x564a88f3aa20 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x564a88f3a9f0 <col:9> '<bound member function type>' ->read_visible 0x564a88f34dd0
|       |   `-CXXThisExpr 0x564a88f3a9e0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x564a88f3aa80 <col:27, col:41> 'bool'
|         `-MemberExpr 0x564a88f3aa50 <col:27> '<bound member function type>' ->write_visible 0x564a88f34f50
|           `-CXXThisExpr 0x564a88f3aa40 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x564a88f350d0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x564a88f3abe0 <col:51, line:138:5>
|   `-ReturnStmt 0x564a88f3abd0 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x564a88f3abb8 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x564a88f3ab98 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x564a88f3ab78 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x564a88f3ab48 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x564a88f3aaf8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|           |   `-CXXThisExpr 0x564a88f3aae8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x564a88f3ab60 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x564a88f3ab28 <col:26> 'Handler::Flags' EnumConstant 0x564a88f33870 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f35190 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x564a88f3acf0 <col:50, line:144:5>
|   `-ReturnStmt 0x564a88f3ace0 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x564a88f3acc8 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x564a88f3aca8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x564a88f3ac88 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x564a88f3ac58 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x564a88f3ac08 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|           |   `-CXXThisExpr 0x564a88f3abf8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x564a88f3ac70 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x564a88f3ac38 <col:26> 'Handler::Flags' EnumConstant 0x564a88f33870 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f35250 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x564a88f3ade0 <col:29, line:166:5>
|   `-ReturnStmt 0x564a88f3add0 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x564a88f3adb8 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x564a88f3ad98 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x564a88f3ad68 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x564a88f3ad18 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|         |   `-CXXThisExpr 0x564a88f3ad08 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x564a88f3ad80 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x564a88f3ad48 <col:18> 'Handler::Flags' EnumConstant 0x564a88f33900 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f354d8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x564a88f35300 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x564a88f35378 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x564a88f353f0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f356e8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x564a88f355a0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x564a88f35618 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x564a88f39f20 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x564a88f39f00 <col:62> 'int' 0
| `-CompoundStmt 0x564a88f3b080 <col:71, line:188:5>
|   `-ReturnStmt 0x564a88f3b070 <line:187:2, col:36>
|     `-ExprWithCleanups 0x564a88f3b058 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x564a88f3b028 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x564a88f3b010 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x564a88f3aff0 <col:9, col:36> 'String' (CXXTemporary 0x564a88f3aff0)
|             `-CXXMemberCallExpr 0x564a88f3af50 <col:9, col:36> 'String'
|               |-MemberExpr 0x564a88f3af20 <col:9> '<bound member function type>' ->call_read 0x564a88f354d8
|               | `-CXXThisExpr 0x564a88f3af10 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x564a88f3af88 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x564a88f3ae68 <col:19> 'Element *' lvalue ParmVar 0x564a88f355a0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x564a88f3afb8 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x564a88f3afa0 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x564a88f3aed0 <col:22, col:29> 'String' (CXXTemporary 0x564a88f3aed0)
|               |     `-CXXTemporaryObjectExpr 0x564a88f3ae98 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x564a88f3afd0 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x564a88f3aef0 <col:32> 'ErrorHandler *' lvalue ParmVar 0x564a88f35618 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f35980 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x564a88f357a8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x564a88f35820 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x564a88f35898 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f35b28 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x564a88f35a48 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x564a88f35d58 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x564a88f35be0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x564a88f35c58 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x564a88f35e58 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x564a88f3b0e0 <col:50, line:225:5>
|   `-ReturnStmt 0x564a88f3b0d0 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x564a88f3b0b8 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f3b098 <col:9> 'const Handler *' lvalue Var 0x564a88f381f0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x564a88f35ef8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x564a88f36000 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36b90 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f35fe0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x564a88f35fc0 <col:11> 'Handler::Flags' EnumConstant 0x564a88f33630 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36090 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36ba8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36070 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x564a88f36050 <col:12> 'Handler::Flags' EnumConstant 0x564a88f336c0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36120 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36bc0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36100 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x564a88f360e0 <col:17> 'Handler::Flags' EnumConstant 0x564a88f33750 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f361b0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36bd8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36190 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x564a88f36170 <col:16> 'Handler::Flags' EnumConstant 0x564a88f337e0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36240 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36bf0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36220 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x564a88f36200 <col:19> 'Handler::Flags' EnumConstant 0x564a88f33870 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f362d0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36c08 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f362b0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x564a88f36290 <col:10> 'Handler::Flags' EnumConstant 0x564a88f33900 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36360 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36c20 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36340 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x564a88f36320 <col:19> 'Handler::Flags' EnumConstant 0x564a88f33990 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f363f0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36c38 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f363d0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x564a88f363b0 <col:20> 'Handler::Flags' EnumConstant 0x564a88f33a20 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36480 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36c50 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36460 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x564a88f36440 <col:17> 'Handler::Flags' EnumConstant 0x564a88f33ab0 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36510 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36c68 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f364f0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x564a88f364d0 <col:15> 'Handler::Flags' EnumConstant 0x564a88f33b40 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f365a0 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36c80 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36580 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x564a88f36560 <col:11> 'Handler::Flags' EnumConstant 0x564a88f33bd0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36630 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36c98 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36610 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x564a88f365f0 <col:16> 'Handler::Flags' EnumConstant 0x564a88f33c60 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f366c0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36cb0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f366a0 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x564a88f36680 <col:13> 'Handler::Flags' EnumConstant 0x564a88f33cf0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36750 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36cc8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36730 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x564a88f36710 <col:15> 'Handler::Flags' EnumConstant 0x564a88f33d80 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f367e0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36ce0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f367c0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x564a88f367a0 <col:20> 'Handler::Flags' EnumConstant 0x564a88f33e50 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36870 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36cf8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36850 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x564a88f36830 <col:27> 'Handler::Flags' EnumConstant 0x564a88f33f20 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36900 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36d10 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f368e0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x564a88f368c0 <col:22> 'Handler::Flags' EnumConstant 0x564a88f33fb0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36990 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36d28 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36970 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x564a88f36950 <col:18> 'Handler::Flags' EnumConstant 0x564a88f34080 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36a20 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36d40 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36a00 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x564a88f369e0 <col:25> 'Handler::Flags' EnumConstant 0x564a88f34110 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36ab0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x564a88f36d58 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36a90 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x564a88f36a70 <col:26> 'Handler::Flags' EnumConstant 0x564a88f341a0 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x564a88f36b40 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x564a88f36d70 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f36b20 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x564a88f36b00 <col:20> 'Handler::Flags' EnumConstant 0x564a88f34330 'f_special' 'Handler::Flags'
|-EnumDecl 0x564a88f36d88 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x564a88f36e90 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f373f0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36e70 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x564a88f36e50 <col:12> 'Handler::Flags' EnumConstant 0x564a88f33630 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36f20 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f37408 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36f00 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x564a88f36ee0 <col:13> 'Handler::Flags' EnumConstant 0x564a88f336c0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f36fb0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f37420 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f36f90 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x564a88f36f70 <col:15> 'Handler::Flags' EnumConstant 0x564a88f33750 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f37040 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f37438 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f37020 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x564a88f37000 <col:8> 'Handler::Flags' EnumConstant 0x564a88f33900 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f370d0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f37450 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f370b0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x564a88f37090 <col:9> 'Handler::Flags' EnumConstant 0x564a88f33bd0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f37160 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f37468 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f37140 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x564a88f37120 <col:14> 'Handler::Flags' EnumConstant 0x564a88f33c60 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f371f0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f37480 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f371d0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x564a88f371b0 <col:11> 'Handler::Flags' EnumConstant 0x564a88f33cf0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f37280 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f37498 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f37260 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x564a88f37240 <col:13> 'Handler::Flags' EnumConstant 0x564a88f33d80 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x564a88f37310 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x564a88f374b0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f372f0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x564a88f372d0 <col:20> 'Handler::Flags' EnumConstant 0x564a88f33fb0 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x564a88f373a0 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x564a88f374c8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f37380 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x564a88f37360 <col:16> 'Handler::Flags' EnumConstant 0x564a88f34080 'f_user0' 'Handler::Flags'
|-EnumDecl 0x564a88f374e0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x564a88f375a0 <col:25> "" ""
| |-EnumConstantDecl 0x564a88f37650 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x564a88f37730 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f37630 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x564a88f37610 <col:14> 'Handler::Flags' EnumConstant 0x564a88f337e0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x564a88f376e0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x564a88f37748 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f376c0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x564a88f376a0 <col:17> 'Handler::Flags' EnumConstant 0x564a88f33870 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x564a88f378c8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x564a88f37770 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x564a88f377f0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x564a88f3b7a0 <col:70, line:284:5>
|   |-ParenExpr 0x564a88f3b5c0 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x564a88f3b590 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f3b2c0 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f3b290 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x564a88f3b238 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x564a88f3b218 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x564a88f3b1e8 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x564a88f3b108 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x564a88f380c0
|   |   |   |   |   `-CXXThisExpr 0x564a88f3b0f8 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x564a88f3b200 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x564a88f3b1c8 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x564a88f3b1a8 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x564a88f3b178 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x564a88f3b138 <col:34> 'Handler::Flags' EnumConstant 0x564a88f33630 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x564a88f3b190 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x564a88f3b158 <col:43> 'Handler::Flags' EnumConstant 0x564a88f34110 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x564a88f3b278 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x564a88f3b258 <col:69> 'Handler::Flags' EnumConstant 0x564a88f33630 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x564a88f3b320 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f3b300 <col:85> 'int' 0
|   |   `-CallExpr 0x564a88f3b4f0 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x564a88f3b4d8 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f3b4b8 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f3b530 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f3b390 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x564a88f3b548 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f3b3e0 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x564a88f3b560 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f3b418 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x564a88f3b578 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f3b4a0 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f3b488 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f3b438 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x564a88f3b790 <line:283:2, col:38>
|     `-ExprWithCleanups 0x564a88f3b778 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x564a88f3b748 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x564a88f3b730 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x564a88f3b710 <col:9, col:38> 'String' (CXXTemporary 0x564a88f3b710)
|             `-CallExpr 0x564a88f3b6a8 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x564a88f3b690 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x564a88f3b620 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x564a88f37bd0
|               |   `-MemberExpr 0x564a88f3b5f0 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x564a88f37c98
|               |     `-CXXThisExpr 0x564a88f3b5e0 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x564a88f3b6d8 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x564a88f3b650 <col:22> 'Element *' lvalue ParmVar 0x564a88f37770 'e' 'Element *'
|               `-ImplicitCastExpr 0x564a88f3b6f0 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x564a88f3b670 <col:25> 'void *' lvalue ParmVar 0x564a88f377f0 'new_user_data' 'void *'
|-AccessSpecDecl 0x564a88f37978 <line:287:3, col:10> col:3 private
|-FieldDecl 0x564a88f379b0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x564a88f37a00 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x564a88f37b50 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x564a88f37bd0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x564a88f389c8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x564a88f389c8
| | `-ParmVarDecl 0x564a88f38ad8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x564a88f38b78 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x564a88f38b78
| | `-ParmVarDecl 0x564a88f38c88 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x564a88f38cf8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x564a88f38cf8
| |-CXXMethodDecl 0x564a88f395c8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x564a88f395c8
| | `-ParmVarDecl 0x564a88f396d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x564a88f39748 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x564a88f39748
| | `-ParmVarDecl 0x564a88f39858 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x564a89066800 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x564a890668e0 <col:5>
|-FieldDecl 0x564a88f37c98 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x564a88f37d00 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x564a88f37e28 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x564a88f37eb0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x564a88f38e28 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x564a88f38e28
| | `-ParmVarDecl 0x564a88f38f38 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x564a88f38fd8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x564a88f38fd8
| | `-ParmVarDecl 0x564a88f390e8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x564a88f39158 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x564a88f39158
| |-CXXMethodDecl 0x564a88f398f8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x564a88f398f8
| | `-ParmVarDecl 0x564a88f39a08 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x564a88f39b10 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x564a88f39b10
| | `-ParmVarDecl 0x564a88f39c18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x564a89066940 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x564a89066a20 <col:5>
|-FieldDecl 0x564a88f37f78 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x564a88f37ff8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x564a88f38060 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x564a88f380c0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x564a88f38128 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x564a88f38190 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x564a88f381f0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x564a88f38310 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x564a88f38268 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x564a88f39fd0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x564a88f39fb8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x564a88f39fa0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x564a88f39f80 <col:30, col:37> 'String' (CXXTemporary 0x564a88f39f80)
|           `-CXXTemporaryObjectExpr 0x564a88f39f48 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x564a88f384b8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x564a88f383f8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x564a88f38638 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x564a88f38570 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x564a88f387f8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x564a88f38838 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x564a88f38838
| `-ParmVarDecl 0x564a88f38918 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x564a88f39268 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x564a88f39268
| `-ParmVarDecl 0x564a88f39378 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x564a88f39418 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x564a88f39418
| `-ParmVarDecl 0x564a88f39528 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x564a88f39c88 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x564a88f39c88
| `-ParmVarDecl 0x564a88f39d98 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x564a88f39e20 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x564a88f39e20

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a8904bb88 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x564a8904bd98 prev 0x564a8904bb88 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a8904d3d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x564a8904d380 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x564a8904d360 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x564a8904d210 'type'
|     `-SubstTemplateTypeParmType 0x564a88f8e220 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a88f8dd70 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x564a88f8dc88 'sized_array_memory'
|-FieldDecl 0x564a8904d4d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x564a8904d520 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a8904d558 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x564a8904be30 'void *' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-PointerType 0x564a889c4ce0 'void *'
|     `-BuiltinType 0x564a889c44e0 'void'
|-TypedefDecl 0x564a8904d5e8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x564a8904d5b0 'void *&'
|   `-SubstTemplateTypeParmType 0x564a8904be30 'void *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a889c4ce0 'void *'
|       `-BuiltinType 0x564a889c44e0 'void'
|-TypedefDecl 0x564a8904d6a8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x564a8904d670 'void *const &'
|   `-QualType 0x564a8904be31 'void *const' const
|     `-SubstTemplateTypeParmType 0x564a8904be30 'void *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a889c4ce0 'void *'
|         `-BuiltinType 0x564a889c44e0 'void'
|-TypedefDecl 0x564a8904d738 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x564a8904d700 'void **'
|   `-SubstTemplateTypeParmType 0x564a8904be30 'void *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a889c4ce0 'void *'
|       `-BuiltinType 0x564a889c44e0 'void'
|-TypedefDecl 0x564a8904d7c8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x564a8904d790 'void *const *'
|   `-QualType 0x564a8904be31 'void *const' const
|     `-SubstTemplateTypeParmType 0x564a8904be30 'void *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a889c4ce0 'void *'
|         `-BuiltinType 0x564a889c44e0 'void'
|-TypedefDecl 0x564a8904e3b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x564a8904e360 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x564a8904e340 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x564a8904e2d0 'type'
|     `-SubstTemplateTypeParmType 0x564a8904e090 'void *' sugar
|       |-TemplateTypeParmType 0x564a88cf2b70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88cf2b20 'T'
|       `-PointerType 0x564a889c4ce0 'void *'
|         `-BuiltinType 0x564a889c44e0 'void'
|-TypedefDecl 0x564a8904e418 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x564a8904d670 'void *const &'
|   `-QualType 0x564a8904be31 'void *const' const
|     `-SubstTemplateTypeParmType 0x564a8904be30 'void *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a889c4ce0 'void *'
|         `-BuiltinType 0x564a889c44e0 'void'
|-TypedefDecl 0x564a8904e470 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a8904e4d8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x564a8904d700 'void **'
|   `-SubstTemplateTypeParmType 0x564a8904be30 'void *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a889c4ce0 'void *'
|       `-BuiltinType 0x564a889c44e0 'void'
|-TypedefDecl 0x564a8904e540 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x564a8904d790 'void *const *'
|   `-QualType 0x564a8904be31 'void *const' const
|     `-SubstTemplateTypeParmType 0x564a8904be30 'void *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a889c4ce0 'void *'
|         `-BuiltinType 0x564a889c44e0 'void'
|-EnumDecl 0x564a8904e598 <line:134:5> col:5
| `-EnumConstantDecl 0x564a8904e690 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a8904e670 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a8904e718 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a8904e968 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8904e7d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8904e870 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x564a8904ec28 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x564a8904eb10 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x564a8904eee8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x564a8904edd0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x564a8904f230 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x564a8904f110 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x564a8904f540 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x564a8904f420 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x564a8904f830 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a8904f678 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a8904f6f0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x564a8904f988 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x564a8904fa68 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8904fac0 <col:30> Inherited
|-CXXMethodDecl 0x564a8904fb08 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x564a8904fbb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8904fc10 <col:30> Inherited
|-CXXMethodDecl 0x564a8904fcd8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x564a8904fd88 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8904fde0 <col:30> Inherited
|-CXXMethodDecl 0x564a8904fe28 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x564a8904fed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a8904ff30 <col:30> Inherited
|-CXXMethodDecl 0x564a8904ff78 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x564a89050028 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a89050080 <col:30> Inherited
|-CXXMethodDecl 0x564a890500c8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x564a89050178 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890501d0 <col:30> Inherited
|-CXXMethodDecl 0x564a890501f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a890502a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a89050358 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a89050518 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89050408 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a89050480 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x564a89050668 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a890505d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89050818 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x564a89050720 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a890508d0 <col:20>
| `-OptimizeNoneAttr 0x564a89050928 <col:30>
|-CXXMethodDecl 0x564a89050a48 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x564a89050950 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a89050b00 <col:20>
| `-OptimizeNoneAttr 0x564a89050b58 <col:30>
|-CXXMethodDecl 0x564a89050c10 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564a89050b80 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89050d58 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a89050cc8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89050e88 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x564a89050fb8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x564a89051088 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x564a89051158 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x564a89051298 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564a89051208 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890513e0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a89051350 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a89051528 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x564a89051498 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a890515e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a890516e0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a89051650 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a89051798 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a89051858 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x564a89051958 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x564a89051ad8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x564a89051a18 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x564a89052298 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a89051b90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x564a890521f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x564a890520f8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x564a89052378 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a890524c8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x564a89052438 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x564a89052580 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a890527c8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a89052640 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x564a890526b8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x564a89052988 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x564a89052898 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x564a89052bd8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x564a89052a50 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x564a89052ac8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x564a89052c98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a89052ef8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x564a89052e00 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x564a89052fc8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a89052fc8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a890531c0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x564a890532d8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x564a89053368 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x564a89053470 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x564a890534c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a89053450 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x564a89053430 <col:27> 'int' 4096
|-FieldDecl 0x564a890534e8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x564a89053550 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x564a89053748 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x564a890537d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x564a89053998 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x564a89053838 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x564a890538b0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x564a890534e8 'name' 'String'
| | `-CXXConstructExpr 0x564a8905f2a8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x564a8905f268 <col:20> 'const String' lvalue ParmVar 0x564a89053838 'n' 'const String &'
| |-CXXCtorInitializer Field 0x564a89053550 'nsig' 'int'
| | `-IntegerLiteral 0x564a8905f300 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x564a89053748 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x564a8905f3e8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x564a890537d8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x564a8905f3a8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x564a8905f368 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x564a890538b0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x564a8905f678 <col:42, line:289:9>
|   `-CallExpr 0x564a8905f628 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x564a8905f610 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x564a8905f5f0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x564a88bf34e8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x564a8905f660 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x564a8905f538 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x564a8905f518 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x564a8905f500 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564a8905f4b0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x564a89053748
|     |     |   `-CXXThisExpr 0x564a8905f4a0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x564a8905f4e0 <col:25> 'int' 0
|     |-IntegerLiteral 0x564a8905f550 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x564a8905f5d0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x564a8905f5b0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x564a8905f580 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x564a89053748 non_odr_use_unevaluated
|           `-CXXThisExpr 0x564a8905f570 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x564a89053a78 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x564a89053a78
| `-ParmVarDecl 0x564a89053b88 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x564a89053c28 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x564a89053c28
| `-ParmVarDecl 0x564a89053d38 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x564a89053dd8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x564a89053dd8
| `-ParmVarDecl 0x564a89053ee8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x564a89053f58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x564a89053f58
| `-ParmVarDecl 0x564a89054068 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x564a890540f0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x564a890540f0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ff7b50 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88ff7c68 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x564a88ff7cf8 <col:21, col:27> col:21 public
|-EnumDecl 0x564a88ff7d20 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x564a88ff7e38 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x564a88ff7e18 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x564a88ff7e00 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x564a88ff7de0 <col:32> 'int' 1
| `-EnumConstantDecl 0x564a88ff7ee0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x564a88ff7ec0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x564a88ff7ea8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x564a88ff7e88 <col:53> 'int' 1000
|-CXXConstructorDecl 0x564a88ff7f90 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x564a88ff84c8 <col:19, col:21>
|-CXXDestructorDecl 0x564a88ff8080 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x564a88ff84d8 <col:28, col:30>
|-CXXMethodDecl 0x564a88ff8240 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x564a88ff8170 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x564a88ff8348 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x564a88ff8348
  `-ParmVarDecl 0x564a88ff8458 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ff8a80 prev 0x564a88fcf800 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x564a88ff8b78 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x564a88ff8c08 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x564a88ff8c78 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x564a88ff8d38 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x564a88ff8df8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x564a88ff8eb8 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x564a88ff8f78 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x564a88ff9018 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x564a88ff9178 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x564a88ff9158 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x564a88ff9138 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x564a88ff9100 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x564a88ff90e0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x564a88ff9118 <col:42> 'int' 1
|-CXXMethodDecl 0x564a88ff9218 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x564a88ff9388 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x564a88ff92c8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x564a88ff94d0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x564a88ff9440 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x564a88ff9598 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x564a88ff98c0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x564a88ff9988 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x564a88ff9b08 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x564a88ff9a40 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x564a88ff9bd0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x564a88ff9dd8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x564a88ff9c80 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x564a88ff9d00 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x564a88ff9f68 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x564a88ff9ea0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x564a88ffa0b8 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x564a88ffa028 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x564a88ffa208 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x564a88ffa178 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x564a88ffa358 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x564a88ffa2c8 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x564a88ffa568 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x564a88ffa418 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x564a88ffa490 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x564a88ffa778 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x564a88ffa628 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x564a88ffa6a0 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x564a8905bef0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x564a8905bed0 <col:60> 'int' 0
|-CXXMethodDecl 0x564a88ffaa08 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x564a88ffa838 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x564a88ffa8b0 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x564a88ffa928 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x564a8905bf28 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x564a8905bf08 <col:76> 'int' 0
|-CXXMethodDecl 0x564a88ffaca8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x564a88ffaad0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x564a88ffab48 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x564a88ffabc0 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x564a8905bf60 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x564a8905bf40 <col:84> 'int' 0
|-CXXMethodDecl 0x564a88ffcda0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x564a88ffad70 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x564a88ffcb80 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x564a88ffcc00 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x564a88ffcca8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x564a88ffd050 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x564a88ffce70 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x564a88ffcef0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x564a88ffcf68 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x564a88ffd2b8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x564a88ffd118 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x564a88ffd198 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x564a88ffd210 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x564a88ffd770 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x564a88ffd380 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x564a88ffd400 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x564a88ffd4a8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x564a88ffd620 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x564a88ffd830 <col:115> "" ""
|-CXXMethodDecl 0x564a88ffdbf0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x564a88ffd8b0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x564a88ffd930 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x564a88ffd9a8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x564a88ffdaf0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x564a88ffdcb0 <col:113> "" ""
|-CXXMethodDecl 0x564a88ffde00 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x564a88ffdd38 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x564a88ffdfd0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x564a88ffdec0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x564a88ffdf38 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x564a88ffe1d8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x564a88ffe090 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x564a88ffe108 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x564a88ffe5d8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x564a88ffe298 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x564a88ffe310 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x564a88ffe388 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x564a88ffe408 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x564a88ffe480 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a8905bf98 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a8905bf78 <col:137> 'int' 0
|-CXXMethodDecl 0x564a88ffe9e8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x564a88ffe6b0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x564a88ffe728 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x564a88ffe7a0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x564a88ffe820 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x564a88ffe898 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a8905bfd0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a8905bfb0 <col:139> 'int' 0
|-CXXMethodDecl 0x564a88ffee98 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x564a88ffeac0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x564a88ffeb38 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x564a88ffebb0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564a88ffec28 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x564a88ffeca8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x564a8905c008 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x564a8905bfe8 <col:133> 'int' 0
| `-ParmVarDecl 0x564a88ffed28 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x564a8905c040 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x564a8905c020 <col:160> 'int' 0
|-CXXMethodDecl 0x564a88fff230 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x564a88ffef78 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x564a88ffeff0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x564a88fff068 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564a88fff0e0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a8905c078 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a8905c058 <col:116> 'int' 0
|-EnumDecl 0x564a88fff2f0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x564a88fff3f0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x564a88fff440 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88fff3d0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x564a88fff3b0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x564a88fff5c0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x564a88fff468 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x564a88fff4e0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x564a88fff7d8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x564a88fff680 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x564a88fff700 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x564a88fffc38 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x564a88fff898 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x564a88fffb20 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x564a88fffdc0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x564a88fffcf8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x564a88ffff70 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x564a88fffe78 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x564a89000180 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x564a89000028 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x564a890000a8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x564a89000308 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x564a89000240 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x564a89000428 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x564a89000518 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x564a89000688 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x564a890005c8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x564a89000810 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x564a89000740 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x564a89000a18 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x564a890008c8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x564a89000948 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x564a89000b48 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x564a89000c38 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x564a89000cf8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x564a89000ef8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x564a89000da8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x564a89000e20 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x564a8905c128 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x564a8905c110 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x564a8905c0f8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x564a8905c0d8 <col:58, col:65> 'String' (CXXTemporary 0x564a8905c0d8)
|           `-CXXTemporaryObjectExpr 0x564a8905c0a0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x564a890010c8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x564a89000fb8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x564a89001030 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x564a8905c1d8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x564a8905c1c0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x564a8905c1a8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x564a8905c188 <col:71, col:78> 'String' (CXXTemporary 0x564a8905c188)
|           `-CXXTemporaryObjectExpr 0x564a8905c150 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x564a89001298 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x564a89001188 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x564a89001200 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x564a8905c288 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x564a8905c270 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x564a8905c258 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x564a8905c238 <col:71, col:78> 'String' (CXXTemporary 0x564a8905c238)
|           `-CXXTemporaryObjectExpr 0x564a8905c200 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x564a89001468 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x564a89001358 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x564a890013d0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x564a8905c338 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x564a8905c320 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x564a8905c308 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x564a8905c2e8 <col:70, col:77> 'String' (CXXTemporary 0x564a8905c2e8)
|           `-CXXTemporaryObjectExpr 0x564a8905c2b0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x564a890015e8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x564a89001528 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x564a89001808 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x564a890016a0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x564a89001718 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x564a89001908 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x564a89001908
|-CXXMethodDecl 0x564a89001a10 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x564a89001ad0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x564a89001b90 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x564a89001c50 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x564a89001e48 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x564a89001d00 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x564a89001d78 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x564a89002200 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x564a89001f08 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x564a89001f80 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x564a89001ff8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x564a89002070 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x564a890020f0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x564a89002560 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x564a890022e0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x564a89002360 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x564a890023e0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x564a89002460 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x564a89002640 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x564a89002780 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x564a890026f0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x564a890028d0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x564a89002838 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a89002ad8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x564a89002988 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x564a89002a00 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a89002c28 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x564a89002b98 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a89002d70 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x564a89002ce0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x564a89002fb0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x564a89002e30 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x564a89002ed8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x564a89003138 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x564a89003070 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x564a890031e0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a890032f8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x564a890033a0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x564a89003408 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x564a890034c0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x564a8905c360 <col:16, line:150:9>
| |-CXXConstructorDecl 0x564a89003698 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x564a89003580 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x564a89003600 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x564a890033a0 'idx' 'int'
| | | `-ImplicitCastExpr 0x564a8905c3b0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x564a8905c370 <col:19> 'int' lvalue ParmVar 0x564a89003580 'i' 'int'
| | |-CXXCtorInitializer Field 0x564a89003408 'port' 'int'
| | | `-ImplicitCastExpr 0x564a8905c430 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x564a8905c3f0 <col:28> 'int' lvalue ParmVar 0x564a89003600 'p' 'int'
| | `-CompoundStmt 0x564a8905c480 <col:31, line:153:9>
| |-CXXMethodDecl 0x564a89003878 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x564a89003788 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x564a8905c680 <col:46, line:157:9>
| |   `-ReturnStmt 0x564a8905c670 <line:156:13, col:46>
| |     `-BinaryOperator 0x564a8905c650 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x564a8905c550 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x564a8905c520 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x564a8905c4a0 <col:20> 'const int' lvalue ->idx 0x564a890033a0
| |       | |   `-CXXThisExpr 0x564a8905c490 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x564a8905c538 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x564a8905c4f0 <col:27, col:29> 'const int' lvalue .idx 0x564a890033a0
| |       |     `-DeclRefExpr 0x564a8905c4d0 <col:27> 'const Router::Port' lvalue ParmVar 0x564a89003788 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x564a8905c630 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x564a8905c600 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x564a8905c580 <col:36> 'const int' lvalue ->port 0x564a89003408
| |         |   `-CXXThisExpr 0x564a8905c570 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x564a8905c618 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x564a8905c5d0 <col:44, col:46> 'const int' lvalue .port 0x564a89003408
| |             `-DeclRefExpr 0x564a8905c5b0 <col:44> 'const Router::Port' lvalue ParmVar 0x564a89003788 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x564a890039c0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x564a89003930 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x564a8905c888 <col:46, line:160:9>
| |   `-ReturnStmt 0x564a8905c878 <line:159:13, col:46>
| |     `-BinaryOperator 0x564a8905c858 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x564a8905c758 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x564a8905c728 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x564a8905c6a8 <col:20> 'const int' lvalue ->idx 0x564a890033a0
| |       | |   `-CXXThisExpr 0x564a8905c698 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x564a8905c740 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x564a8905c6f8 <col:27, col:29> 'const int' lvalue .idx 0x564a890033a0
| |       |     `-DeclRefExpr 0x564a8905c6d8 <col:27> 'const Router::Port' lvalue ParmVar 0x564a89003930 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x564a8905c838 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x564a8905c808 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x564a8905c788 <col:36> 'const int' lvalue ->port 0x564a89003408
| |         |   `-CXXThisExpr 0x564a8905c778 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x564a8905c820 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x564a8905c7d8 <col:44, col:46> 'const int' lvalue .port 0x564a89003408
| |             `-DeclRefExpr 0x564a8905c7b8 <col:44> 'const Router::Port' lvalue ParmVar 0x564a89003930 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x564a89003b08 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x564a89003a78 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x564a8905cbb0 <col:45, line:163:9>
| |   `-ReturnStmt 0x564a8905cba0 <line:162:13, col:65>
| |     `-BinaryOperator 0x564a8905cb80 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x564a8905c960 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x564a8905c930 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x564a8905c8b0 <col:20> 'const int' lvalue ->idx 0x564a890033a0
| |       | |   `-CXXThisExpr 0x564a8905c8a0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x564a8905c948 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x564a8905c900 <col:26, col:28> 'const int' lvalue .idx 0x564a890033a0
| |       |     `-DeclRefExpr 0x564a8905c8e0 <col:26> 'const Router::Port' lvalue ParmVar 0x564a89003a78 'x' 'const Router::Port &'
| |       `-ParenExpr 0x564a8905cb60 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x564a8905cb40 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x564a8905ca40 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x564a8905ca10 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x564a8905c990 <col:36> 'const int' lvalue ->idx 0x564a890033a0
| |           | |   `-CXXThisExpr 0x564a8905c980 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x564a8905ca28 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x564a8905c9e0 <col:43, col:45> 'const int' lvalue .idx 0x564a890033a0
| |           |     `-DeclRefExpr 0x564a8905c9c0 <col:43> 'const Router::Port' lvalue ParmVar 0x564a89003a78 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x564a8905cb20 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x564a8905caf0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x564a8905ca70 <col:52> 'const int' lvalue ->port 0x564a89003408
| |             |   `-CXXThisExpr 0x564a8905ca60 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x564a8905cb08 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x564a8905cac0 <col:59, col:61> 'const int' lvalue .port 0x564a89003408
| |                 `-DeclRefExpr 0x564a8905caa0 <col:59> 'const Router::Port' lvalue ParmVar 0x564a89003a78 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x564a89003c50 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x564a89003bc0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x564a8905ced8 <col:46, line:166:9>
| |   `-ReturnStmt 0x564a8905cec8 <line:165:13, col:66>
| |     `-BinaryOperator 0x564a8905cea8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x564a8905cc88 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x564a8905cc58 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x564a8905cbd8 <col:20> 'const int' lvalue ->idx 0x564a890033a0
| |       | |   `-CXXThisExpr 0x564a8905cbc8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x564a8905cc70 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x564a8905cc28 <col:26, col:28> 'const int' lvalue .idx 0x564a890033a0
| |       |     `-DeclRefExpr 0x564a8905cc08 <col:26> 'const Router::Port' lvalue ParmVar 0x564a89003bc0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x564a8905ce88 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x564a8905ce68 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x564a8905cd68 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x564a8905cd38 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x564a8905ccb8 <col:36> 'const int' lvalue ->idx 0x564a890033a0
| |           | |   `-CXXThisExpr 0x564a8905cca8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x564a8905cd50 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x564a8905cd08 <col:43, col:45> 'const int' lvalue .idx 0x564a890033a0
| |           |     `-DeclRefExpr 0x564a8905cce8 <col:43> 'const Router::Port' lvalue ParmVar 0x564a89003bc0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x564a8905ce48 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x564a8905ce18 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x564a8905cd98 <col:52> 'const int' lvalue ->port 0x564a89003408
| |             |   `-CXXThisExpr 0x564a8905cd88 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x564a8905ce30 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x564a8905cde8 <col:60, col:62> 'const int' lvalue .port 0x564a89003408
| |                 `-DeclRefExpr 0x564a8905cdc8 <col:60> 'const Router::Port' lvalue ParmVar 0x564a89003bc0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x564a8905cef0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x564a8905cef0
| | `-ParmVarDecl 0x564a8905d008 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x564a8905d0a8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x564a8905d0a8
| | `-ParmVarDecl 0x564a8905d1b8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x564a8905d250 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x564a8905d520 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x564a8905d520
| | `-ParmVarDecl 0x564a8905d628 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x564a8905d698 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x564a8905d7a8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x564a8905dac8 <col:12>
|     |-BinaryOperator 0x564a8905d968 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x564a8905d920 <col:12> 'int' lvalue ->idx 0x564a890033a0
|     | | `-CXXThisExpr 0x564a8905d910 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x564a8905d950 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x564a8905d8e0 <col:12> 'int' xvalue .idx 0x564a890033a0
|     |     `-CXXStaticCastExpr 0x564a8905d8b0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x564a8905d880 <col:12> 'Router::Port' lvalue ParmVar 0x564a8905d7a8 '' 'Router::Port &&'
|     |-BinaryOperator 0x564a8905da70 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x564a8905da28 <col:12> 'int' lvalue ->port 0x564a89003408
|     | | `-CXXThisExpr 0x564a8905da18 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x564a8905da58 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x564a8905d9e8 <col:12> 'int' xvalue .port 0x564a89003408
|     |     `-CXXStaticCastExpr 0x564a8905d9b8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x564a8905d988 <col:12> 'Router::Port' lvalue ParmVar 0x564a8905d7a8 '' 'Router::Port &&'
|     `-ReturnStmt 0x564a8905dab8 <col:12>
|       `-UnaryOperator 0x564a8905daa0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a8905da90 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x564a89003d10 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564a89003e28 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x564a89004018 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x564a890040d0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x564a89004018 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x564a8905d228 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x564a8905d360 <col:22, line:173:9>
| |-CXXConstructorDecl 0x564a89004408 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x564a89004190 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x564a89004210 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x564a89004290 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x564a89004310 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x564a89004018 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x564a8905d370 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x564a8905dda8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x564a8905db98 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x564a8905db60 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x564a8905db48 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x564a8905d830 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x564a8905d698 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x564a8905d440 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x564a8905d428 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x564a8905d3d8 <col:13> 'Router::Port [2]' lvalue ->p 0x564a89004018
| |   |   | |   `-CXXThisExpr 0x564a8905d3c8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x564a8905d408 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x564a8905d818 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x564a8905d4e0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x564a8905d4b0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x564a8905d470 <col:25> 'int' lvalue ParmVar 0x564a89004290 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x564a8905d4c8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x564a8905d490 <col:33> 'int' lvalue ParmVar 0x564a89004310 'to_port' 'int'
| |   `-ExprWithCleanups 0x564a8905dd90 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x564a8905dd58 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x564a8905dd40 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x564a8905dd20 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x564a8905d698 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x564a8905dc28 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x564a8905dc10 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x564a8905dbc0 <col:13> 'Router::Port [2]' lvalue ->p 0x564a89004018
| |       | |   `-CXXThisExpr 0x564a8905dbb0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x564a8905dbf0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x564a8905dd08 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x564a8905dcc8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x564a8905dc98 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x564a8905dc58 <col:25> 'int' lvalue ParmVar 0x564a89004190 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x564a8905dcb0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x564a8905dc78 <col:35> 'int' lvalue ParmVar 0x564a89004210 'from_port' 'int'
| |-CXXMethodDecl 0x564a890045d8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x564a890044e8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x564a8905e368 <col:45, line:182:9>
| |   |-ParenExpr 0x564a8905e248 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x564a8905e218 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x564a8905dee8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x564a8905deb8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x564a8905de20 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x564a8905de08 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x564a8905ddc8 <col:34> 'int' lvalue ParmVar 0x564a890044e8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x564a8905dde8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x564a8905de98 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x564a8905de80 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x564a8905de40 <col:44> 'int' lvalue ParmVar 0x564a890044e8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x564a8905de60 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x564a8905df48 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x564a8905df28 <col:59> 'int' 0
| |   |   `-CallExpr 0x564a8905e178 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x564a8905e160 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x564a8905e140 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x564a8905e1b8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x564a8905dfb8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x564a8905e1d0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x564a8905dfe0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x564a8905e1e8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x564a8905e018 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x564a8905e200 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x564a8905e128 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x564a8905e110 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x564a8905e0b8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x564a8905e358 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x564a8905e338 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x564a8905e308 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x564a8905e278 <col:20> 'Router::Port const[2]' lvalue ->p 0x564a89004018
| |       |   `-CXXThisExpr 0x564a8905e268 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x564a8905e320 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x564a8905e2a8 <col:22> 'int' lvalue ParmVar 0x564a890044e8 'i' 'int'
| |-CXXMethodDecl 0x564a89004788 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x564a89004698 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x564a8905e8e0 <col:33, line:186:9>
| |   |-ParenExpr 0x564a8905e800 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x564a8905e7d0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x564a8905e4a8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x564a8905e478 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x564a8905e3e0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x564a8905e3c8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x564a8905e388 <col:34> 'int' lvalue ParmVar 0x564a89004698 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x564a8905e3a8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x564a8905e458 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x564a8905e440 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x564a8905e400 <col:44> 'int' lvalue ParmVar 0x564a89004698 'i' 'int'
| |   |   |     `-IntegerLiteral 0x564a8905e420 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x564a8905e508 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x564a8905e4e8 <col:59> 'int' 0
| |   |   `-CallExpr 0x564a8905e730 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x564a8905e718 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x564a8905e6f8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x564a8905e770 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x564a8905e578 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x564a8905e788 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x564a8905e5a0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x564a8905e7a0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x564a8905e5d8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x564a8905e7b8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x564a8905e6e0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x564a8905e6c8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x564a8905e678 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x564a8905e8d0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x564a8905e8b0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x564a8905e880 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x564a8905e830 <col:20> 'Router::Port [2]' lvalue ->p 0x564a89004018
| |       |   `-CXXThisExpr 0x564a8905e820 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x564a8905e898 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x564a8905e860 <col:22> 'int' lvalue ParmVar 0x564a89004698 'i' 'int'
| |-CXXMethodDecl 0x564a89004928 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x564a89004868 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x564a8905ecb8 <col:52, line:190:9>
| |   `-ReturnStmt 0x564a8905eca8 <line:189:13, col:51>
| |     `-BinaryOperator 0x564a8905ec88 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x564a8905eaa0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x564a8905ea88 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x564a8905ea40 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x564a89003878 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x564a8905e978 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x564a8905e960 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x564a8905e910 <col:20> 'Router::Port const[2]' lvalue ->p 0x564a89004018
| |       | | |   `-CXXThisExpr 0x564a8905e900 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x564a8905e940 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x564a8905ea20 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x564a8905ea08 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x564a8905e9b8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x564a89004018
| |       |   |   `-DeclRefExpr 0x564a8905e998 <col:28> 'const Router::Connection' lvalue ParmVar 0x564a89004868 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x564a8905e9e8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x564a8905ec50 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x564a8905ec38 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x564a8905ec18 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x564a89003878 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x564a8905eb50 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x564a8905eb38 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x564a8905eae8 <col:38> 'Router::Port const[2]' lvalue ->p 0x564a89004018
| |         | |   `-CXXThisExpr 0x564a8905ead8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x564a8905eb18 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x564a8905ebf8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x564a8905ebe0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x564a8905eb90 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x564a89004018
| |           |   `-DeclRefExpr 0x564a8905eb70 <col:46> 'const Router::Connection' lvalue ParmVar 0x564a89004868 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x564a8905ebc0 <col:50> 'int' 1
| `-CXXMethodDecl 0x564a89004a70 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x564a890049e0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x564a8905f250 <col:51, line:193:9>
|     `-ReturnStmt 0x564a8905f240 <line:192:13, col:69>
|       `-BinaryOperator 0x564a8905f220 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x564a8905ee48 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x564a8905ee30 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x564a8905ee10 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x564a89003b08 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x564a8905ed48 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x564a8905ed30 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x564a8905ece0 <col:20> 'Router::Port const[2]' lvalue ->p 0x564a89004018
|         | | |   `-CXXThisExpr 0x564a8905ecd0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x564a8905ed10 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x564a8905edf0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x564a8905edd8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x564a8905ed88 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x564a89004018
|         |   |   `-DeclRefExpr 0x564a8905ed68 <col:27> 'const Router::Connection' lvalue ParmVar 0x564a890049e0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x564a8905edb8 <col:31> 'int' 0
|         `-ParenExpr 0x564a8905f200 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x564a8905f1e0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x564a8905eff8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x564a8905efe0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x564a8905efc0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x564a89003878 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x564a8905eef8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x564a8905eee0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x564a8905ee90 <col:38> 'Router::Port const[2]' lvalue ->p 0x564a89004018
|             | | |   `-CXXThisExpr 0x564a8905ee80 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x564a8905eec0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x564a8905efa0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x564a8905ef88 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x564a8905ef38 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x564a89004018
|             |   |   `-DeclRefExpr 0x564a8905ef18 <col:46> 'const Router::Connection' lvalue ParmVar 0x564a890049e0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x564a8905ef68 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x564a8905f1a8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x564a8905f190 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564a8905f170 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x564a89003b08 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x564a8905f0a8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x564a8905f090 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x564a8905f040 <col:56> 'Router::Port const[2]' lvalue ->p 0x564a89004018
|               | |   `-CXXThisExpr 0x564a8905f030 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x564a8905f070 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x564a8905f150 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x564a8905f138 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x564a8905f0e8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x564a89004018
|                 |   `-DeclRefExpr 0x564a8905f0c8 <col:63> 'const Router::Connection' lvalue ParmVar 0x564a890049e0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x564a8905f118 <col:67> 'int' 1
|-AccessSpecDecl 0x564a89004b30 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x564a89009430 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x564a890094e0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x564a890095a0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x564a890095f0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x564a89009640 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x564a89009690 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x564a890096e0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x564a89009730 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x564a89009848 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x564a89009828 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x564a89009810 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x564a890097f0 <col:25> 'int' 2
| |-EnumConstantDecl 0x564a890098f0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x564a890098d0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x564a890098b8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x564a89009898 <col:48> 'int' 1
| |-EnumConstantDecl 0x564a89009980 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x564a89009960 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x564a89009940 <col:71> 'int' 0
| |-EnumConstantDecl 0x564a89009a10 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x564a890099f0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x564a890099d0 <col:30> 'int' 1
| `-EnumConstantDecl 0x564a89009aa0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x564a89009a80 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x564a89009a60 <col:50> 'int' 2
|-FieldDecl 0x564a89009b00 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x564a89009b60 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x564a89009bc8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x564a89009c68 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x564a89009c48 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x564a89009c18 <col:30> 'int' 1
|-FieldDecl 0x564a89009d08 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x564a89009ce8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x564a89009cb8 <col:33> 'int' 1
|-FieldDecl 0x564a89009da8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x564a89009d88 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x564a89009d58 <col:32> 'int' 1
|-FieldDecl 0x564a89009e10 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x564a89009e70 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x564a89010d30 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x564a8901eba0 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x564a8901eca0 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x564a8902b440 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x564a89033730 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x564a89033780 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x564a89033898 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x564a89033938 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x564a89033998 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x564a89033a30 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x564a89033a30
| | `-ParmVarDecl 0x564a89033b48 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x564a89033be8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x564a89033be8
| | `-ParmVarDecl 0x564a89033cf8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x564a89033d98 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x564a89033d98
| | `-ParmVarDecl 0x564a89033ea8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x564a89033f18 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x564a89033f18
| | `-ParmVarDecl 0x564a89034028 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x564a890340b0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x564a890340b0
|-FieldDecl 0x564a89040a70 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x564a89040ad0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x564a89040be0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x564a89040f38 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x564a89041040 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x564a8904b100 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x564a8904b210 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x564a8904b310 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x564a8904b420 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x564a8904b530 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x564a8904b640 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x564a8904b750 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x564a8904b7a0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x564a8904b8a0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x564a8904b8f0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a8904b880 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x564a8904b860 <col:29> 'int' 256
|-FieldDecl 0x564a8904b950 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x564a8904b9b8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x564a8904ba20 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x564a8904bb20 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x564a890530b0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x564a89053110 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x564a89053170 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x564a890531c0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x564a890532d8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x564a89053368 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x564a89053470 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x564a890534c0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x564a89053450 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x564a89053430 <col:27> 'int' 4096
| |-FieldDecl 0x564a890534e8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x564a89053550 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x564a89053748 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x564a890537d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x564a89053998 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x564a89053838 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x564a890538b0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x564a890534e8 'name' 'String'
| | | `-CXXConstructExpr 0x564a8905f2a8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x564a8905f268 <col:20> 'const String' lvalue ParmVar 0x564a89053838 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x564a89053550 'nsig' 'int'
| | | `-IntegerLiteral 0x564a8905f300 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x564a89053748 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x564a8905f3e8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x564a890537d8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x564a8905f3a8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x564a8905f368 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x564a890538b0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x564a8905f678 <col:42, line:289:9>
| |   `-CallExpr 0x564a8905f628 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x564a8905f610 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x564a8905f5f0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x564a88bf34e8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x564a8905f660 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x564a8905f538 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x564a8905f518 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x564a8905f500 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x564a8905f4b0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x564a89053748
| |     |     |   `-CXXThisExpr 0x564a8905f4a0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x564a8905f4e0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x564a8905f550 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x564a8905f5d0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x564a8905f5b0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x564a8905f580 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x564a89053748 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x564a8905f570 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x564a89053a78 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x564a89053a78
| | `-ParmVarDecl 0x564a89053b88 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x564a89053c28 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x564a89053c28
| | `-ParmVarDecl 0x564a89053d38 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x564a89053dd8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x564a89053dd8
| | `-ParmVarDecl 0x564a89053ee8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x564a89053f58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x564a89053f58
| | `-ParmVarDecl 0x564a89054068 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x564a890540f0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x564a890540f0
|-FieldDecl 0x564a890541e0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x564a89054240 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x564a890542a0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x564a89054300 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x564a89054360 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x564a89054470 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x564a89054570 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x564a890545d0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x564a89054718 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x564a89054658 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x564a890548c8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x564a890547d8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x564a89054a10 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x564a89054980 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x564a89054db8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x564a89054ac8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x564a89054b40 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x564a89054bc0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x564a89054c38 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x564a89054cb0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564a8905c350 <col:57> 'bool' false
|-CXXMethodDecl 0x564a89059480 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x564a89054e90 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x564a890595d0 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x564a89059538 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x564a89059720 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x564a89059688 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x564a89059878 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x564a890597e0 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x564a89059ba0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x564a89059930 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x564a890599a8 <col:50> col:54 'bool'
| |-ParmVarDecl 0x564a89059a28 <col:56> col:59 'int'
| `-ParmVarDecl 0x564a89059aa0 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x564a89059d08 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x564a89059c70 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x564a89059dd0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x564a89059e90 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x564a8905a090 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x564a89059f40 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x564a89059fb8 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x564a8905a160 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x564a8905a2a8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x564a8905a210 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x564a8905f8b0 <col:42, line:326:5>
|   `-ReturnStmt 0x564a8905f8a0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x564a8905f888 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x564a8905f868 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x564a8905f838 <col:16, col:45> '<bound member function type>' .back 0x564a890317d8
|           `-ArraySubscriptExpr 0x564a8905f7b8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x564a8905f788 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564a8905f6a0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x564a89040f38
|             |   `-CXXThisExpr 0x564a8905f690 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x564a8905f7a0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x564a8905f6d0 <col:38> 'bool' lvalue ParmVar 0x564a8905a210 'isout' 'bool'
|-CXXMethodDecl 0x564a8905a478 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x564a8905a360 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x564a8905a3d8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x564a8905a5d0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x564a8905a538 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x564a8905a878 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x564a8905a688 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x564a8905a700 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x564a8905a780 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x564a8905aa50 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x564a8905a940 <col:30> col:34 'bool'
| `-ParmVarDecl 0x564a8905a9b8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x564a8905abd8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x564a8905ab18 <col:30> col:33 'int'
|-CXXMethodDecl 0x564a8905ae70 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x564a8905ac98 <col:23> col:26 'int'
| |-ParmVarDecl 0x564a8905ad10 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x564a8905ad88 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x564a8905b088 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x564a8905af38 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x564a8905afb0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x564a8905b298 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x564a8905b150 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x564a8905b1c8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x564a8905b418 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x564a8905b358 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x564a8905b618 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x564a8905b4d0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x564a8905b548 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x564a8905b7f0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x564a8905b6d8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x564a8905b758 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x564a8905bad0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x564a8905b8b0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x564a8905b928 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564a8905b9a8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x564a8905ba20 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x564a8905bbb0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x564a8905bc10 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x564a8905be90 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x564a8905bd90 parent 0x564a88f3c500 prev 0x564a88f4f788 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x564a8905bc70 <col:36> col:39 'int'
    `-ParmVarDecl 0x564a8905bcf0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f3c500 prev 0x564a88f3c280 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88f3c5f8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x564a88f3c688 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x564a88f3c6e8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x564a88f3c7d8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x564a88f3c8d8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x564a88f3caa8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x564a88f3c958 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x564a88f3c9d0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x564a88f3cc38 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x564a88f3cb70 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x564a88f3cce0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x564a88f3ce18 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x564a88f3cd50 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x564a88f3cfb8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x564a88f3cef8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x564a88f3d158 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x564a88f3d098 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x564a88f3d200 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x564a88f3d300 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x564a88f3d3e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f3d2e0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x564a88f3d2c0 <col:26> 'int' 1
| `-EnumConstantDecl 0x564a88f3d390 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x564a88f3d3f8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f3d370 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x564a88f3d350 <col:44> 'int' 2
|-CXXMethodDecl 0x564a88f3d540 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x564a88f3d428 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x564a88f3d4a8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x564a88f3d698 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x564a88f3d608 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x564a88f3d8d8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x564a88f3d758 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x564a88f3d7d0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x564a88f3d988 <col:20>
| `-OptimizeNoneAttr 0x564a88f3d9e0 <col:30>
|-CXXMethodDecl 0x564a88f421a0 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x564a88f3da20 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x564a88f42248 <col:20>
| `-OptimizeNoneAttr 0x564a88f422a0 <col:30>
|-CXXMethodDecl 0x564a88f422f0 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x564a88f423b8 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x564a88f42478 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x564a88f42500 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x564a88f42588 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x564a88f42610 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x564a88f42698 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x564a88f42728 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x564a88f427e8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x564a88f42870 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x564a88f428f8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x564a88f42980 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x564a88f42a08 <line:66:5, col:36> col:23 used PULL_TO_PUSH 'const char []' static
|-VarDecl 0x564a88f42a90 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x564a88f42b20 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x564a88f42be0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x564a88f42c70 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x564a88f42dc0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x564a88f42d28 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x564a88f42f50 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x564a88f42e80 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x564a88f431f0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x564a88f43008 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x564a88f43088 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x564a88f43108 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x564a88f432a8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x564a88f433b0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x564a88f43640 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f43390 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x564a88f43370 <col:33> 'int' 0
| |-EnumConstantDecl 0x564a88f43440 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x564a88f43658 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f43420 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x564a88f43400 <col:32> 'int' 20
| |-EnumConstantDecl 0x564a88f434d0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x564a88f43670 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f434b0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x564a88f43490 <col:38> 'int' 90
| |-EnumConstantDecl 0x564a88f43560 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x564a88f43688 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f43540 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x564a88f43520 <col:35> 'int' 100
| `-EnumConstantDecl 0x564a88f435f0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x564a88f436a0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f435d0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x564a88f435b0 <col:32> 'int' 2000
|-CXXMethodDecl 0x564a88f436e0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x564a88f43b20 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x564a88f43990 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x564a88f43a08 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f43bf0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x564a88f43d70 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x564a88f43ca0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f43f78 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x564a88f43e28 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x564a88f43ea0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f44078 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x564a88f44118 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x564a88f441e0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x564a88f44270 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x564a88f444a0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f44250 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x564a88f44230 <col:36> 'int' EnumConstant 0x564a88f441e0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x564a88f442c0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x564a88f44310 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x564a88f44360 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x564a88f443b0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x564a88f44400 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x564a88f44450 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x564a88f44588 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x564a88f444c8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x564a88f44650 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x564a88f44710 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x564a88f447d0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x564a88f44890 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x564a88f449a8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x564a88f44a70 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x564a88f44bf0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x564a88f44b20 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x564a88f44d18 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x564a88f44f18 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x564a88f44dc8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x564a88f44e48 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x564a88f51878 <col:54, line:127:5>
|   |-ParenExpr 0x564a88f51728 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x564a88f516f8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f513e8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x564a88f513c0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x564a88f513a8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x564a88f51390 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x564a88f51360 <col:31> 'Router *' lvalue ->_router 0x564a88f4f240
|   |   |         `-CXXThisExpr 0x564a88f51350 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x564a88f51448 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f51428 <col:48> 'int' 0
|   |   `-CallExpr 0x564a88f51658 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x564a88f51640 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f51620 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f51698 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f514b8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x564a88f516b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f514d8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x564a88f516c8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f51510 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x564a88f516e0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f51608 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f515f0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f515a8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x564a88f517c0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x564a88f51758 <col:9> 'Router *' lvalue ->_router 0x564a88f4f240
|   | | `-CXXThisExpr 0x564a88f51748 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x564a88f517a8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x564a88f51788 <col:19> 'Router *' lvalue ParmVar 0x564a88f44dc8 'r' 'Router *'
|   `-BinaryOperator 0x564a88f51858 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x564a88f517f0 <col:9> 'int' lvalue ->_eindex 0x564a88f4f2a8
|     | `-CXXThisExpr 0x564a88f517e0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x564a88f51840 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f51820 <col:19> 'int' lvalue ParmVar 0x564a88f44e48 'eindex' 'int'
|-CXXMethodDecl 0x564a88f450a0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x564a88f44fd8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x564a88f45170 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x564a88f45238 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x564a88f452d8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x564a88f45528 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x564a88f453a0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x564a88f45420 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x564a88f455d8 <col:20>
| `-OptimizeNoneAttr 0x564a88f45630 <col:30>
|-CXXMethodDecl 0x564a88f45738 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x564a88f45670 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x564a88f457e0 <col:20>
| `-OptimizeNoneAttr 0x564a88f45838 <col:30>
|-CXXMethodDecl 0x564a88f45908 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x564a88f45878 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x564a88f459b0 <col:20>
| `-OptimizeNoneAttr 0x564a88f45a08 <col:30>
|-CXXMethodDecl 0x564a88f45b98 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x564a88f45a40 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x564a88f45ac0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x564a88f45d28 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x564a88f45c60 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x564a88f45e78 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x564a88f45de8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x564a88f45fc8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x564a88f45f38 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x564a88f461b0 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x564a88f46088 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x564a88f46468 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x564a88f46268 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x564a88f462e8 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x564a88f46388 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x564a88f46540 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x564a88f46600 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x564a88f468d0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x564a88f46780 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x564a88f467f8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f469f8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x564a88f46bd0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x564a88f46ab0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x564a88f46b30 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x564a88f46db8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x564a88f46c98 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x564a88f46d18 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x564a88f47128 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x564a88f46e78 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x564a88f46ef0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x564a88f46f70 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x564a88f50e60 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x564a88f50e40 <col:106> 'int' 0
| `-ParmVarDecl 0x564a88f46fe8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a88f50e98 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a88f50e78 <col:126> 'int' 0
|-CXXMethodDecl 0x564a88f474a8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x564a88f471f8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x564a88f47270 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x564a88f472f0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x564a88f47368 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a88f50ed0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a88f50eb0 <col:114> 'int' 0
|-CXXMethodDecl 0x564a88f47838 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x564a88f47580 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x564a88f475f8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x564a88f47678 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x564a88f50ee8 <col:96> 'int' 0
| `-ParmVarDecl 0x564a88f476f0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a88f50f28 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a88f50f08 <col:116> 'int' 0
|-CXXMethodDecl 0x564a88f47bb8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x564a88f47908 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x564a88f47980 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x564a88f47a00 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x564a88f50f60 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x564a88f50f40 <col:109> 'int' 0
| `-ParmVarDecl 0x564a88f47a78 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a88f50f98 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a88f50f78 <col:129> 'int' 0
|-CXXMethodDecl 0x564a88f47f38 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x564a88f47c88 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x564a88f47d00 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x564a88f47d80 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x564a88f47df8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a88f50fd0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a88f50fb0 <col:117> 'int' 0
|-CXXMethodDecl 0x564a88f482c8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x564a88f48010 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f48088 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x564a88f48108 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x564a88f50fe8 <col:99> 'int' 0
| `-ParmVarDecl 0x564a88f48180 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564a88f51028 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564a88f51008 <col:119> 'int' 0
|-CXXMethodDecl 0x564a88f486e8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x564a88f48398 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x564a88f48418 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x564a88f48490 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x564a88f48510 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x564a88f51060 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x564a88f51040 <col:108> 'int' 0
| `-ParmVarDecl 0x564a88f48590 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x564a88f51098 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x564a88f51078 <col:141> 'int' 0
|-CXXMethodDecl 0x564a88f48b08 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x564a88f487c0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x564a88f48840 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x564a88f488b8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x564a88f48938 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x564a88f489b8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x564a88f510b0 <col:121> 'int' 0
|-CXXMethodDecl 0x564a88f48f38 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x564a88f48be8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x564a88f48c68 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x564a88f48ce0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x564a88f48d60 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x564a88f510d0 <col:98> 'int' 0
| `-ParmVarDecl 0x564a88f48de0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x564a88f510f0 <col:123> 'int' 0
|-CXXMethodDecl 0x564a88f49200 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x564a88f49010 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x564a88f49090 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x564a88f49110 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x564a88f51110 <col:80> 'int' 0
|-EnumDecl 0x564a88f492b8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x564a88f493c0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x564a88f49650 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f493a0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x564a88f49380 <col:42> 'int' 1
| |-EnumConstantDecl 0x564a88f49450 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x564a88f49668 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f49430 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x564a88f49410 <col:40> 'int' 2
| |-EnumConstantDecl 0x564a88f494e0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x564a88f49680 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f494c0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x564a88f494a0 <col:44> 'int' 4
| |-EnumConstantDecl 0x564a88f49570 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x564a88f49698 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f49550 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x564a88f49530 <col:36> 'int' 7
| `-EnumConstantDecl 0x564a88f49600 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x564a88f496b0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f495e0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x564a88f495c0 <col:34> 'int' 6
|-CXXMethodDecl 0x564a88f49968 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x564a88f496d8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x564a88f49778 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x564a88f497f8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x564a88f49870 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x564a88f511c8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x564a88f511b0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x564a88f51198 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x564a88f51178 <col:98, col:105> 'String' (CXXTemporary 0x564a88f51178)
|           `-CXXTemporaryObjectExpr 0x564a88f51140 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x564a88f49c08 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x564a88f49a38 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x564a88f49ab0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x564a88f49b28 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x564a88f51278 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x564a88f51260 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x564a88f51248 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x564a88f51228 <col:94, col:101> 'String' (CXXTemporary 0x564a88f51228)
| |         `-CXXTemporaryObjectExpr 0x564a88f511f0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x564a88f51a60 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x564a88f519d8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x564a88f519a8 <col:9> '<bound member function type>' ->add_task_handlers 0x564a88f49968
|     | `-CXXThisExpr 0x564a88f51998 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x564a88f51a18 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x564a88f51918 <col:27> 'Task *' lvalue ParmVar 0x564a88f49a38 'task' 'Task *'
|     |-ImplicitCastExpr 0x564a88f51a30 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x564a88f51938 <col:33> 'NotifierSignal *' lvalue ParmVar 0x564a88f49ab0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x564a88f51a48 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x564a88f51958 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x564a88f49600 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x564a88f51978 <col:62> 'const String' lvalue ParmVar 0x564a88f49b28 'prefix' 'const String &'
|-CXXMethodDecl 0x564a88f49e18 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x564a88f49cd0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x564a88f49d48 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x564a88f51328 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x564a88f51310 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x564a88f512f8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x564a88f512d8 <col:70, col:77> 'String' (CXXTemporary 0x564a88f512d8)
| |         `-CXXTemporaryObjectExpr 0x564a88f512a0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x564a88f51c38 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x564a88f51bb0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x564a88f51b80 <col:9> '<bound member function type>' ->add_task_handlers 0x564a88f49968
|     | `-CXXThisExpr 0x564a88f51b70 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x564a88f51bf0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x564a88f51af0 <col:27> 'Task *' lvalue ParmVar 0x564a88f49cd0 'task' 'Task *'
|     |-ImplicitCastExpr 0x564a88f51c08 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x564a88f51b10 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x564a88f51c20 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x564a88f51b30 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x564a88f49600 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x564a88f51b50 <col:57> 'const String' lvalue ParmVar 0x564a88f49d48 'prefix' 'const String &'
|-CXXMethodDecl 0x564a88f4a0f8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x564a88f49ee0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f49f60 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f49fd8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x564a88f4a3a8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x564a88f4a1c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4a248 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4a2c8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x564a88f4a698 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x564a88f4a478 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4a4f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4a570 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x564a88f4a948 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x564a88f4a768 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4a7e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4a868 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x564a88f4abf8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x564a88f4aa18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4aa98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4ab18 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x564a88f4aea8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x564a88f4acc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4ad48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4adc0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x564a88f4b158 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x564a88f4af78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4aff8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4b078 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x564a88f4b408 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x564a88f4b228 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4b2a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4b328 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x564a88f4b6e8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x564a88f4b4d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4b558 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4b600 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x564a88f4b9c8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x564a88f4b7b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4b838 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4b8e0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x564a88f4bc30 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x564a88f4ba98 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x564a88f4bb18 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x564a88f4bb90 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x564a88f4bed8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x564a88f4bd00 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x564a88f4bd80 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x564a88f4bdf8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x564a88f4c188 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x564a88f4bfa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4c028 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4c0a8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x564a88f4c438 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x564a88f4c258 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4c2d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4c350 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x564a88f4c6e8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x564a88f4c508 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4c588 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4c600 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x564a88f4c9b8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x564a88f4c7b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4c838 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564a88f4c8d8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x564a88f4cce8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x564a88f4ca88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564a88f4cb08 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x564a88f4cb80 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x564a88f4cbf8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564a88f51340 <col:93> 'bool' false
|-CXXMethodDecl 0x564a88f4ced0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x564a88f4cdb8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x564a88f4ce38 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x564a88f4d0a8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x564a88f4cf90 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x564a88f4d010 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x564a88f4d388 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x564a88f4d168 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x564a88f4d1e0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x564a88f4d260 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x564a88f4d2d8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f4d678 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x564a88f4d458 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x564a88f4d4d0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x564a88f4d550 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x564a88f4d5c8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f4d8b0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x564a88f4d750 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x564a88f4d7d0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x564a88f4da98 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x564a88f4d978 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x564a88f4d9f8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x564a88f4db48 prev 0x564a88f452d8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88f4dc40 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x564a88f4dcd0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x564a88f4dd48 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x564a88f4de08 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x564a88f4ded0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x564a88f4e048 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x564a88f4df80 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x564a88f4e0f0 <col:24>
| | `-OptimizeNoneAttr 0x564a88f4e148 <col:34>
| |-CXXMethodDecl 0x564a88f4e1c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x564a88f4e478 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x564a88f4e270 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x564a88f4e2e8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x564a88f4e368 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x564a88f4e530 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x564a88f4e568 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x564a88f4e5d0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x564a88f4e658 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x564a88f4e978 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x564a88f4e710 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x564a88f4e788 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x564a88f4e800 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x564a88f4e880 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x564a88f4ea90 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x564a88f553a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x564a88f553a8
| | `-ParmVarDecl 0x564a88f554b8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x564a88f55558 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x564a88f55558
| | `-ParmVarDecl 0x564a88f55668 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x564a88df5ec0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564a88f4eb08 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x564a88f4eba8 <col:38> "" ""
|-CXXMethodDecl 0x564a88f4ec38 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x564a88f4ecd8 <col:44> "" ""
|-AccessSpecDecl 0x564a88f4ed48 <line:260:3, col:10> col:3 private
|-EnumDecl 0x564a88f4ed70 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x564a88f4ee70 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x564a88f4eec0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f4ee50 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x564a88f4ee30 <col:27> 'int' 4
|-FieldDecl 0x564a88f4ef78 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x564a88f4f128 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x564a88f4f1e0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x564a88f4f240 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x564a88f4f2a8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x564a88f4f3f8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x564a88f4f338 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x564a88f4f5a8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x564a88f4f4b8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x564a88f4f788 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x564a88f4f668 <col:20> col:23 'int'
| `-ParmVarDecl 0x564a88f4f6e8 <col:25> col:28 'int'
|-CXXMethodDecl 0x564a88f4fa30 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x564a88f4f850 <col:23> col:26 'int'
| |-ParmVarDecl 0x564a88f4f8d0 <col:28> col:31 'int'
| `-ParmVarDecl 0x564a88f4f948 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x564a88f4fae8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x564a88f4fbb0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x564a88f4fc00 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x564a88f4fc50 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x564a88f4fe30 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x564a88f4fce0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x564a88f4fd58 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f500d8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x564a88f4fef8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x564a88f4ff78 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x564a88f4fff0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x564a88f502f8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x564a88f501a8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x564a88f50228 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x564a88f50630 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x564a88f503b8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x564a88f50438 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x564a88f504b0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x564a88f50530 <col:57> col:60 'int'
|-CXXMethodDecl 0x564a88f50818 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x564a88f50700 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x564a88f50780 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x564a88f50968 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x564a88f508d8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x564a88f50ce8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x564a88f50a28 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x564a88f50aa8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x564a88f50b20 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x564a88f50ba0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x564a88f50e00 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Storage *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Unqueue2
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   int _burst
       112 |   unsigned int _count
       120 |   class Task _task
       120 |     struct TaskLink (base)
       120 |       struct TaskLink * _prev
       128 |       struct TaskLink * _next
       136 |       unsigned int _pass
       140 |     unsigned int _stride
       144 |     int _tickets
       148 |     union Task::Status _status
       148 |       struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
       148 |         int16_t home_thread_id
       150 |         uint8_t is_scheduled
       151 |         uint8_t is_strong_unscheduled
       148 |       uint32_t status
       152 |     TaskCallback _hook
       160 |     void * _thunk
       168 |     class RouterThread * _thread
       176 |     class Element * _owner
       184 |     union Task::Pending _pending_nextptr
       184 |       class Task * t
       184 |       uintptr_t x
       192 |   class Vector<class Storage *> _queues
       192 |     class vector_memory<class sized_array_memory<8> > vm_
       192 |       vector_memory<class sized_array_memory<8> >::type * l_
       200 |       vector_memory::size_type n_
       204 |       vector_memory::size_type capacity_
       208 |   _Bool _explicit_queues
       216 |   class NotifierSignal _signal
       216 |     union NotifierSignal::vmvalue _v
       216 |       class atomic_uint32_t * v1
       216 |       struct NotifierSignal::vmpair * vm
       224 |     uint32_t _mask
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f707c0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88f708d8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x564a88f709a8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x564a88f70a08 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x564a88f70a70 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x564a88f70af8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x564a88f70d60 <col:16, line:46:5>
|   |-BinaryOperator 0x564a88f70ca8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x564a88f70bc8 <col:9> 'TaskLink *' lvalue ->_prev 0x564a88f709a8
|   | | `-CXXThisExpr 0x564a88f70bb8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x564a88f70c90 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x564a88f70c70 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x564a88f70c08 <col:17> 'TaskLink *' lvalue ->_next 0x564a88f70a08
|   |     | `-CXXThisExpr 0x564a88f70bf8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x564a88f70c58 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x564a88f70c38 <col:25> 'int' 0
|   `-BinaryOperator 0x564a88f70d40 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x564a88f70cd8 <col:9> 'unsigned int' lvalue ->_pass 0x564a88f70a70
|     | `-CXXThisExpr 0x564a88f70cc8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x564a88f70d28 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x564a88f70d08 <col:17> 'int' 0
|-CXXConstructorDecl 0x564a88fea2e8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x564a88fea2e8
| `-ParmVarDecl 0x564a88fea3f8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x564a88fea498 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x564a88fea498
| `-ParmVarDecl 0x564a88fea5a8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x564a88fea798 <col:8> col:8 implicit ~TaskLink 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564a88feaf98 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x564a88feaf98
| `-ParmVarDecl 0x564a88feb0a8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x564a88feb118 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x564a88feb118
  `-ParmVarDecl 0x564a88feb228 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f79b18 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x564a88f79c48 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x564a88f79ca8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x564a88f79d08 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x564a88ff34a8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x564a88ff3580 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x564a88ff3838 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x564a88ff3838
| `-ParmVarDecl 0x564a88ff3948 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x564a88ff39e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x564a88ff39e8
  `-ParmVarDecl 0x564a88ff3af8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f79970 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88f79a88 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x564a88f79b18 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x564a88f79c48 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x564a88f79ca8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x564a88f79d08 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x564a88ff34a8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x564a88ff3580 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x564a88ff3838 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x564a88ff3838
| | `-ParmVarDecl 0x564a88ff3948 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x564a88ff39e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x564a88ff39e8
|   `-ParmVarDecl 0x564a88ff3af8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x564a88f79dc8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x564a88f79e28 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x564a88f79dc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x564a88f79c48 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x564a88f79e80 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x564a88f79dc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x564a88f79ca8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x564a88f79ed8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x564a88f79dc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x564a88f79d08 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x564a88f79f30 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564a88ff33b8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564a88ff3d18 <col:11>
|-CXXConstructorDecl 0x564a88ff3688 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x564a88ff3688
| `-ParmVarDecl 0x564a88ff3798 <col:11> col:11 'const Task::Status &'
|-CXXConstructorDecl 0x564a88ff3b98 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x564a88ff3b98
| `-ParmVarDecl 0x564a88ff3ca8 <col:11> col:11 'Task::Status &&'
`-CXXDestructorDecl 0x564a88df5dc8 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ed8db0 prev 0x564a88ed1010 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88ed8ea8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x564a88ed8f48 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x564a88edf368 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564a88edf748 <col:11>
|-CXXConstructorDecl 0x564a88edf440 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88edf528 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x564a88edfe90 <col:11>
|-CXXConstructorDecl 0x564a88edf5c8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88edf6d8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x564a88ee16e8 <col:11>
|-CXXDestructorDecl 0x564a88ee09f8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564a88f20fd8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88f210e8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x564a88f219b0 <col:11>
|   `-ReturnStmt 0x564a88f219a0 <col:11>
|     `-UnaryOperator 0x564a88f21988 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a88f21978 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x564a88f21158 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x564a88f21268 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x564a88f6eac0 <col:11>
    `-ReturnStmt 0x564a88f6eab0 <col:11>
      `-UnaryOperator 0x564a88f6ea98 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x564a88f6ea88 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88eceb08 prev 0x564a88ece818 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88ecec00 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x564a88ecec90 <col:19, col:25> col:19 public
|-TypedefDecl 0x564a88ececc8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x564a88b1e1c0 'int32_t' sugar
|   |-Typedef 0x564a88a2d328 'int32_t'
|   `-TypedefType 0x564a88a06510 '__int32_t' sugar
|     |-Typedef 0x564a88a06128 '__int32_t'
|     `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88eced30 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x564a88b1e380 'int64_t' sugar
|   |-Typedef 0x564a88a2d390 'int64_t'
|   `-TypedefType 0x564a88a06630 '__int64_t' sugar
|     |-Typedef 0x564a88a06208 '__int64_t'
|     `-BuiltinType 0x564a889c45a0 'long'
|-EnumDecl 0x564a88eced88 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x564a88ecef00 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x564a88eceee0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x564a88eceeb8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x564a88eceea0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x564a88ecee70 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x564a88eceff8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x564a88ecefd8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x564a88ecefb0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x564a88ecef98 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x564a88ecef70 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x564a88ecef50 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x564a88ecf048 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x564a88ecf150 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564a88ed0d60 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ecf130 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x564a88ecf110 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x564a88ecf1e0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564a88ed0d78 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ecf1c0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x564a88ecf1a0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x564a88ecf270 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564a88ed0d90 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ecf250 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x564a88ecf230 <col:25> 'int' 1000
| |-EnumConstantDecl 0x564a88ecf300 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564a88ed0da8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ecf2e0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x564a88ecf2c0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x564a88ed0a50 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564a88ed0dc0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ecf370 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x564a88ecf350 <col:25> 'int' 1000
| |-EnumConstantDecl 0x564a88ed0ae0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564a88ed0dd8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ed0ac0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x564a88ed0aa0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x564a88ed0b70 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564a88ed0df0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ed0b50 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x564a88ed0b30 <col:26> 'int' EnumConstant 0x564a88ecf150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x564a88ed0c40 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564a88ed0e08 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ed0c20 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x564a88ed0c00 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x564a88ed0bc0 <col:27> 'int' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x564a88ed0be0 <col:44> 'int' EnumConstant 0x564a88ed0ae0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x564a88ed0d10 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x564a88ed0e20 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88ed0cf0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x564a88ed0cd0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x564a88ed0c90 <col:27> 'int' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x564a88ed0cb0 <col:44> 'int' EnumConstant 0x564a88ecf300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x564a88ed0e38 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x564a88ed0f40 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x564a88ed0f90 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88ed0f20 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x564a88ed0f00 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x564a88ed0fb8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x564a88b1ddf0 'uninitialized_type'
|   `-CXXRecord 0x564a88b1dd58 'uninitialized_type'
|-CXXRecordDecl 0x564a88ed1010 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x564a88ed1120 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88edf758 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564a88edf878 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x564a88edf830 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x564a88edf7c0 <col:9> '<bound member function type>' ->assign 0x564a88ed6fd8
|     | `-CXXThisExpr 0x564a88edf7b0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x564a88edf7f0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x564a88edf860 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x564a88edf810 <col:19> 'int' 0
|-CXXConstructorDecl 0x564a88ed1368 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed11e0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x564a88ed1258 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564a88edf200 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564a88edf1e0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88edf890 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564a88edf9e0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x564a88edf968 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x564a88edf8f8 <col:9> '<bound member function type>' ->assign 0x564a88ed6fd8
|     | `-CXXThisExpr 0x564a88edf8e8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564a88edf9b0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x564a88edf998 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x564a88edf928 <col:16> 'long' lvalue ParmVar 0x564a88ed11e0 'sec' 'long'
|     `-ImplicitCastExpr 0x564a88edf9c8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564a88edf948 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed1258 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564a88ed15c8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed1438 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x564a88ed14b0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564a88edf238 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564a88edf218 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88edf9f8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564a88edfb30 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x564a88edfad0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x564a88edfa60 <col:9> '<bound member function type>' ->assign 0x564a88ed6fd8
|     | `-CXXThisExpr 0x564a88edfa50 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564a88edfb00 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x564a88edfa90 <col:16> 'int' lvalue ParmVar 0x564a88ed1438 'sec' 'int'
|     `-ImplicitCastExpr 0x564a88edfb18 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564a88edfab0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed14b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564a88ed1828 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed1698 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x564a88ed1710 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564a88edf270 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564a88edf250 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88edfb48 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564a88edfc98 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x564a88edfc20 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x564a88edfbb0 <col:9> '<bound member function type>' ->assign 0x564a88ed6fd8
|     | `-CXXThisExpr 0x564a88edfba0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564a88edfc68 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x564a88edfc50 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x564a88edfbe0 <col:16> 'unsigned long' lvalue ParmVar 0x564a88ed1698 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x564a88edfc80 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564a88edfc00 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed1710 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564a88ed1a88 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed18f8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x564a88ed1970 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564a88edf2a8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564a88edf288 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88edfcb0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564a88edfe00 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x564a88edfd88 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x564a88edfd18 <col:9> '<bound member function type>' ->assign 0x564a88ed6fd8
|     | `-CXXThisExpr 0x564a88edfd08 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564a88edfdd0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x564a88edfdb8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x564a88edfd48 <col:16> 'unsigned int' lvalue ParmVar 0x564a88ed18f8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x564a88edfde8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564a88edfd68 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed1970 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564a88ed1be8 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x564a88ed1b58 <col:31> col:37 'double'
|-CXXConstructorDecl 0x564a88ed1d88 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x564a88ed1cc0 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x564a88ed1fb8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x564a88ed1ec0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x564a88ed2168 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x564a88ed20a8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88edfea0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x564a88edfe18 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x564a88ed20a8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x564a88edff00 <col:19, line:214:5>
|-CXXConstructorDecl 0x564a88ed2338 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x564a88ed2278 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88edff10 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564a88edffc0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x564a88edff98 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x564a88edff68 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x564a88ed2278 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x564a88ed2528 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x564a88ed24a0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x564a88ece8b0 'Timestamp'
|   | `-CXXRecord 0x564a88eceb08 'Timestamp'
|   `-ParenType 0x564a88ed2440 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x564a88ed2410 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x564a88ecee50 'Timestamp::seconds_type' sugar
|         |-Typedef 0x564a88ececc8 'seconds_type'
|         `-TypedefType 0x564a88b1e1c0 'int32_t' sugar
|           |-Typedef 0x564a88a2d328 'int32_t'
|           `-TypedefType 0x564a88a06510 '__int32_t' sugar
|             |-Typedef 0x564a88a06128 '__int32_t'
|             `-BuiltinType 0x564a889c4580 'int'
|-CXXConversionDecl 0x564a88ed2668 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x564a88ed2738 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x564a88ee00c8 <col:37, line:231:5>
|   `-ReturnStmt 0x564a88ee00b8 <line:227:9, col:23>
|     `-BinaryOperator 0x564a88ee0098 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x564a88ee0068 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x564a88ee0018 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x564a88ed8f48
|       |   `-MemberExpr 0x564a88edffe8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x564a88ed9ef8
|       |     `-CXXThisExpr 0x564a88edffd8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x564a88ee0080 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x564a88ee0048 <col:23> 'int' 0
|-CXXMethodDecl 0x564a88ed27f8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x564a88ed28b8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88ed2978 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88ed2a38 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88ed2af8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88ed2c68 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x564a88ed2ba8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x564a88ed2db0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x564a88ed2d20 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88ed2e78 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x564a88ed2f18 <col:54> "" ""
|-CXXMethodDecl 0x564a88ed2fa8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x564a88ed3048 <col:54> "" ""
|-CXXMethodDecl 0x564a88ed30d8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x564a88ed3178 <col:54> "" ""
|-CXXMethodDecl 0x564a88ed3278 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x564a88ed3348 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x564a88ed3478 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x564a88ed3570 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x564a88ed36a8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x564a88ee02e0 <col:39, line:271:5>
|   `-ReturnStmt 0x564a88ee02d0 <line:267:9, col:61>
|     `-CallExpr 0x564a88ee0270 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x564a88ee0258 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a88ee00e0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x564a88eda228 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x564a88ee02a0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x564a88ee0140 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x564a88ed8f48
|       |   `-MemberExpr 0x564a88ee0110 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x564a88ed9ef8
|       |     `-CXXThisExpr 0x564a88ee0100 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x564a88ee02b8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x564a88ee01e0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x564a88ee01b0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x564a88ee0170 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x564a88ee01c8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x564a88ee0190 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0ae0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564a88ed3768 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x564a88ee04a0 <col:39, line:279:5>
|   `-ReturnStmt 0x564a88ee0490 <line:275:9, col:61>
|     `-CallExpr 0x564a88ee0430 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x564a88ee0418 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a88ee02f8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x564a88eda228 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x564a88ee0460 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x564a88ee0358 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x564a88ed8f48
|       |   `-MemberExpr 0x564a88ee0328 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x564a88ed9ef8
|       |     `-CXXThisExpr 0x564a88ee0318 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x564a88ee0478 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x564a88ee03f8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x564a88ee03c8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x564a88ee0388 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x564a88ee03e0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x564a88ee03a8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ecf300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564a88ed3828 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x564a88ee0638 <col:39, line:287:5>
|   `-ReturnStmt 0x564a88ee0628 <line:283:9, col:53>
|     `-BinaryOperator 0x564a88ee0608 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x564a88ee05d8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x564a88ee04f8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x564a88ed8f48
|       |   `-MemberExpr 0x564a88ee04c8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x564a88ed9ef8
|       |     `-CXXThisExpr 0x564a88ee04b8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x564a88ee05f0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x564a88ee05b8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x564a88ee0598 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x564a88ee0568 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564a88ee0528 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ecf150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564a88ee0580 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564a88ee0548 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564a88ed3918 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x564a88ee18d0 <col:40, line:293:5>
|   |-DeclStmt 0x564a88ee0780 <line:291:9, col:48>
|   | `-VarDecl 0x564a88ee0660 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x564a88ee0760 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x564a88ee0708 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x564a88ee06d8 <col:22> '<bound member function type>' ->subsec 0x564a88ed28b8
|   |     |   `-CXXThisExpr 0x564a88ee06c8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x564a88ee0748 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x564a88ee0728 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0c40 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564a88ee18c0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x564a88ee18a8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x564a88ee1878 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564a88ee1860 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x564a88ee1840 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x564a88ee1810 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x564a88ee15a8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x564a88ee1590 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x564a88ee0798 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x564a88ee0660 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x564a88ee17b0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x564a88ee1798 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x564a88ee1768 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x564a88ee15c0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x564a88ee1530 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x564a88ee1518 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x564a88ee14c8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564a88ecea58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x564a88ee1468 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x564a88ee07c8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x564a88ee07b8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x564a88ee14b0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x564a88ee1498 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x564a88ee0c88 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x564a88ee07f0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x564a88ee0880 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x564a88ee0850 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x564a88ee0810 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0c40 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x564a88ee0868 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x564a88ee0830 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x564a88ee0660 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x564a88ee17e0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x564a88ee1578 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x564a88ee1568 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x564a88ed39d8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x564a88ee1e28 <col:40, line:302:5>
|   |-DeclStmt 0x564a88ee1a20 <line:297:9, col:48>
|   | `-VarDecl 0x564a88ee1900 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x564a88ee1a00 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x564a88ee19a8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x564a88ee1978 <col:22> '<bound member function type>' ->subsec 0x564a88ed28b8
|   |     |   `-CXXThisExpr 0x564a88ee1968 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x564a88ee19e8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x564a88ee19c8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0d10 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564a88ee1e18 <line:298:9, col:70>
|     `-ExprWithCleanups 0x564a88ee1e00 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x564a88ee1dd0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564a88ee1db8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x564a88ee1d98 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x564a88ee1d68 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x564a88ee1c90 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x564a88ee1c78 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x564a88ee1a38 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x564a88ee1900 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x564a88ee1d08 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x564a88ee1cf0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x564a88ee1cc0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x564a88ee1ca8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x564a88ee1c18 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x564a88ee1c00 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x564a88ee1be0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564a88ecea58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x564a88ee1b80 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x564a88ee1a68 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x564a88ee1a58 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x564a88ee1bc8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x564a88ee1bb0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x564a88ee1b40 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x564a88ee1a90 <col:39> 'int' 0
|               |               `-BinaryOperator 0x564a88ee1b20 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x564a88ee1af0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x564a88ee1ab0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0d10 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x564a88ee1b08 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x564a88ee1ad0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x564a88ee1900 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x564a88ee1d38 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x564a88ee1c60 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x564a88ee1c50 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x564a88ed3a98 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x564a88ee1eb0 <col:40, line:306:5>
|   `-ReturnStmt 0x564a88ee1ea0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x564a88ee1e70 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x564a88ee1e58 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a88ee1e48 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x564a88ed3c38 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x564a88ed3b48 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x564a88ed3e08 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x564a88ed3d10 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x564a88ed3ef8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x564a88ed4068 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x564a88ed3fa8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x564a88ee1ff8 <col:56, line:320:5>
|   `-ReturnStmt 0x564a88ee1fe8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x564a88ee1fd0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x564a88ee1fa0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564a88ee1f88 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564a88ee1f48 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x564a88ee1f18 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x564a88ee1ed8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564a88ed3fa8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x564a88ee1f30 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x564a88ee1ef8 <col:31> 'int' 0
|-CXXMethodDecl 0x564a88ed42a8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed4120 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed4198 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88ee21c8 <col:72, line:326:5>
|   `-ReturnStmt 0x564a88ee21b8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x564a88ee21a0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x564a88ee2170 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564a88ee2158 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564a88ee2118 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x564a88ee2100 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x564a88ee2020 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564a88ed4120 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x564a88ee20c0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x564a88ee20a8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564a88ee2040 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564a88ed86a0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x564a88ee20e8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x564a88ee2060 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed4198 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88ed4458 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x564a88ed4368 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x564a88eecda0 <col:56, line:337:5>
|   |-DeclStmt 0x564a88eec9d8 <line:329:9, col:51>
|   | `-VarDecl 0x564a88ee21f0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x564a88eec9c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x564a88eec990 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x564a88eec978 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x564a88eec960 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x564a88eec930 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x564a88eec918 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x564a88eec900 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x564a88ee22e0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x564a88eecb90 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x564a88eeca40 <col:9, col:14> 'int64_t':'long' lvalue .x 0x564a88ed8f48
|   | | `-MemberExpr 0x564a88eeca10 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x564a88ed9ef8
|   | |   `-DeclRefExpr 0x564a88eec9f0 <col:9> 'Timestamp' lvalue Var 0x564a88ee21f0 't' 'Timestamp'
|   | `-BinaryOperator 0x564a88eecb70 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x564a88eecb40 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564a88eeca70 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x564a88ed4368 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x564a88eecb58 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x564a88eecb20 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x564a88eecb00 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x564a88eecad0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x564a88eeca90 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x564a88eecae8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x564a88eecab0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0ae0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564a88eecd88 <line:336:9, col:16>
|     `-CXXConstructExpr 0x564a88eecd58 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x564a88eecd40 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x564a88eecd20 <col:16> 'Timestamp' lvalue Var 0x564a88ee21f0 't' 'Timestamp'
|-CXXMethodDecl 0x564a88ed4620 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed4510 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed4588 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eecf58 <col:72, line:343:5>
|   `-ReturnStmt 0x564a88eecf48 <line:342:9, col:51>
|     `-ExprWithCleanups 0x564a88eecf30 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x564a88eecf00 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564a88eecee8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564a88eecea8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x564a88eece90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x564a88eecdd8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564a88ed4510 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x564a88eece50 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x564a88eece38 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564a88eecdf8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564a88ed87e8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x564a88eece78 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x564a88eece18 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed4588 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88ed4770 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x564a88ed46e0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x564a88eed3a0 <col:56, line:354:5>
|   |-DeclStmt 0x564a88eed148 <line:346:9, col:51>
|   | `-VarDecl 0x564a88eecf80 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x564a88eed130 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x564a88eed100 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x564a88eed0e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x564a88eed0d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x564a88eed0a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x564a88eed088 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x564a88eed070 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x564a88eed040 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x564a88eed300 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x564a88eed1b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x564a88ed8f48
|   | | `-MemberExpr 0x564a88eed180 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x564a88ed9ef8
|   | |   `-DeclRefExpr 0x564a88eed160 <col:9> 'Timestamp' lvalue Var 0x564a88eecf80 't' 'Timestamp'
|   | `-BinaryOperator 0x564a88eed2e0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x564a88eed2b0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564a88eed1e0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x564a88ed46e0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x564a88eed2c8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x564a88eed290 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x564a88eed270 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x564a88eed240 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x564a88eed200 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x564a88eed258 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x564a88eed220 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ecf300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564a88eed388 <line:353:9, col:16>
|     `-CXXConstructExpr 0x564a88eed358 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x564a88eed340 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x564a88eed320 <col:16> 'Timestamp' lvalue Var 0x564a88eecf80 't' 'Timestamp'
|-CXXMethodDecl 0x564a88ed4938 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed4828 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed48a0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eed558 <col:72, line:360:5>
|   `-ReturnStmt 0x564a88eed548 <line:359:9, col:51>
|     `-ExprWithCleanups 0x564a88eed530 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x564a88eed500 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564a88eed4e8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564a88eed4a8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x564a88eed490 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x564a88eed3d8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564a88ed4828 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x564a88eed450 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x564a88eed438 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564a88eed3f8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564a88ed8930 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x564a88eed478 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x564a88eed418 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed48a0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88ed6c20 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x564a88ed6b90 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x564a88eed9c8 <col:56, line:371:5>
|   |-DeclStmt 0x564a88eed748 <line:363:9, col:51>
|   | `-VarDecl 0x564a88eed580 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x564a88eed730 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x564a88eed700 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x564a88eed6e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x564a88eed6d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x564a88eed6a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x564a88eed688 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x564a88eed670 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x564a88eed640 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x564a88eed928 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x564a88eed7b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x564a88ed8f48
|   | | `-MemberExpr 0x564a88eed780 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x564a88ed9ef8
|   | |   `-DeclRefExpr 0x564a88eed760 <col:9> 'Timestamp' lvalue Var 0x564a88eed580 't' 'Timestamp'
|   | `-CallExpr 0x564a88eed8c8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x564a88eed8b0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x564a88eed7e0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x564a88eda228 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x564a88eed8f8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564a88eed800 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x564a88ed6b90 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x564a88eed910 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x564a88eed890 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x564a88eed860 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x564a88eed820 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ecf150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x564a88eed878 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x564a88eed840 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564a88eed9b0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x564a88eed980 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x564a88eed968 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x564a88eed948 <col:16> 'Timestamp' lvalue Var 0x564a88eed580 't' 'Timestamp'
|-CXXMethodDecl 0x564a88ed6d18 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x564a88eedb08 <col:39, line:377:5>
|   `-ReturnStmt 0x564a88eedaf8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x564a88eedae0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x564a88eedab0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564a88eeda98 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564a88eeda58 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x564a88eeda00 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x564a88eeda40 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x564a88eeda20 <col:29> 'int' 1
|-CXXMethodDecl 0x564a88ed6dd8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x564a88eedbe8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x564a88eedba0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x564a88eedb30 <col:9> '<bound member function type>' ->assign 0x564a88ed6fd8
|     | `-CXXThisExpr 0x564a88eedb20 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x564a88eedb60 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x564a88eedbd0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x564a88eedb80 <col:19> 'int' 0
|-CXXMethodDecl 0x564a88ed6fd8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed6e88 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed6f00 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564a88edf2e0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564a88edf2c0 <col:60> 'int' 0
| `-CompoundStmt 0x564a88eedde0 <col:63, line:395:5>
|   `-BinaryOperator 0x564a88eeddc0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x564a88eedc40 <col:9, col:12> 'int64_t':'long' lvalue .x 0x564a88ed8f48
|     | `-MemberExpr 0x564a88eedc10 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x564a88ed9ef8
|     |   `-CXXThisExpr 0x564a88eedc00 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x564a88eedda0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x564a88eedd30 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x564a88eedcd0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x564a88eedcb8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x564a88eedca0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x564a88eedc70 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564a88ed6e88 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x564a88eedd18 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x564a88eedcf8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x564a88eedd88 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x564a88eedd70 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x564a88eedd50 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed6f00 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88ed71a8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed7098 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed7110 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eedf38 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x564a88eedef0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x564a88eede08 <col:9> '<bound member function type>' ->assign 0x564a88ed6fd8
|     | `-CXXThisExpr 0x564a88eeddf8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564a88eedf20 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x564a88eede38 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564a88ed7098 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x564a88eedeb0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x564a88eede98 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a88eede58 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564a88ed87e8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x564a88eeded8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564a88eede78 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed7110 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88ed7378 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed7268 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed72e0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eee090 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x564a88eee048 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x564a88eedf60 <col:9> '<bound member function type>' ->assign 0x564a88ed6fd8
|     | `-CXXThisExpr 0x564a88eedf50 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564a88eee078 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x564a88eedf90 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564a88ed7268 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x564a88eee008 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x564a88eedff0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a88eedfb0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564a88ed8930 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x564a88eee030 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564a88eedfd0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed72e0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88ed7548 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed7438 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed74b0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564a88edf318 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564a88edf2f8 <col:57> 'int' 0
| `-DeprecatedAttr 0x564a88ed75f8 <col:75> "" ""
|-CXXMethodDecl 0x564a88ed7788 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed7678 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed76f0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88ed7838 <col:74> "" ""
|-CXXMethodDecl 0x564a88ed79c8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564a88ed78b8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564a88ed7930 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88ed7a78 <col:74> "" ""
|-CXXMethodDecl 0x564a88ed7b08 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x564a88ed7ba8 <col:42> "" ""
|-CXXMethodDecl 0x564a88ed7d50 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x564a88ed7c30 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x564a88ed7cb0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x564a88ed7e20 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x564a88ed7ee0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x564a88ed7f80 <col:20>
| `-OptimizeNoneAttr 0x564a88ed7fd8 <col:30>
|-CXXMethodDecl 0x564a88ed8020 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x564a88ed80e0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x564a88ed81a0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x564a88ed8260 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x564a88ed8320 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x564a88ed83e0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x564a88ed84a0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x564a88ed8560 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x564a88ed86a0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed8610 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eee1d8 <col:58, line:512:5>
|   `-ReturnStmt 0x564a88eee1c8 <line:511:9, col:53>
|     `-BinaryOperator 0x564a88eee1a8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x564a88eee178 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564a88eee0a8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed8610 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564a88eee190 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564a88eee158 <col:23, col:53> 'int'
|           `-BinaryOperator 0x564a88eee138 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x564a88eee108 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564a88eee0c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564a88eee120 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564a88eee0e8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0ae0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564a88ed87e8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed8758 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eee320 <col:58, line:516:5>
|   `-ReturnStmt 0x564a88eee310 <line:515:9, col:53>
|     `-BinaryOperator 0x564a88eee2f0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x564a88eee2c0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564a88eee1f0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed8758 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564a88eee2d8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564a88eee2a0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x564a88eee280 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x564a88eee250 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564a88eee210 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564a88eee268 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564a88eee230 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ecf300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564a88ed8930 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed88a0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eee468 <col:58, line:520:5>
|   `-ReturnStmt 0x564a88eee458 <line:519:9, col:53>
|     `-BinaryOperator 0x564a88eee438 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x564a88eee408 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564a88eee338 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed88a0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564a88eee420 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564a88eee3e8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x564a88eee3c8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x564a88eee398 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564a88eee358 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ecf150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564a88eee3b0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564a88eee378 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564a88ed8a78 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed89e8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eee5b0 <col:60, line:524:5>
|   `-ReturnStmt 0x564a88eee5a0 <line:523:9, col:55>
|     `-BinaryOperator 0x564a88eee580 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x564a88eee550 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564a88eee480 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed89e8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564a88eee568 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564a88eee530 <col:25, col:55> 'int'
|           `-BinaryOperator 0x564a88eee510 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x564a88eee4e0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564a88eee4a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564a88eee4f8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564a88eee4c0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0ae0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564a88ed8bc0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed8b30 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eee6f8 <col:60, line:528:5>
|   `-ReturnStmt 0x564a88eee6e8 <line:527:9, col:55>
|     `-BinaryOperator 0x564a88eee6c8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x564a88eee698 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564a88eee5c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed8b30 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564a88eee6b0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564a88eee678 <col:25, col:55> 'int'
|           `-BinaryOperator 0x564a88eee658 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x564a88eee628 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564a88eee5e8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564a88eee640 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564a88eee608 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ecf300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564a88ed8d08 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564a88ed8c78 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eee840 <col:60, line:532:5>
|   `-ReturnStmt 0x564a88eee830 <line:531:9, col:55>
|     `-BinaryOperator 0x564a88eee810 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x564a88eee7e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564a88eee710 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88ed8c78 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564a88eee7f8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564a88eee7c0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x564a88eee7a0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x564a88eee770 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564a88eee730 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ecf150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564a88eee788 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564a88eee750 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564a88ed0b70 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x564a88ed8db0 prev 0x564a88ed1010 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88ed8ea8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x564a88ed8f48 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x564a88edf368 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564a88edf748 <col:11>
| |-CXXConstructorDecl 0x564a88edf440 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564a88edf528 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x564a88edfe90 <col:11>
| |-CXXConstructorDecl 0x564a88edf5c8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x564a88edf6d8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x564a88ee16e8 <col:11>
| |-CXXDestructorDecl 0x564a88ee09f8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x564a88f20fd8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564a88f210e8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x564a88f219b0 <col:11>
| |   `-ReturnStmt 0x564a88f219a0 <col:11>
| |     `-UnaryOperator 0x564a88f21988 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x564a88f21978 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x564a88f21158 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x564a88f21268 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x564a88f6eac0 <col:11>
|     `-ReturnStmt 0x564a88f6eab0 <col:11>
|       `-UnaryOperator 0x564a88f6ea98 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a88f6ea88 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x564a88ed8fb0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x564a88ed90b0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x564a88ed92b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ed9090 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x564a88ed9070 <col:21> 'int' 0
| |-EnumConstantDecl 0x564a88ed9140 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x564a88ed92c8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ed9120 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x564a88ed9100 <col:23> 'int' 1
| |-EnumConstantDecl 0x564a88ed91d0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x564a88ed92e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ed91b0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x564a88ed9190 <col:23> 'int' 2
| `-EnumConstantDecl 0x564a88ed9260 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x564a88ed92f8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88ed9240 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x564a88ed9220 <col:27> 'int' 3
|-CXXMethodDecl 0x564a88ed9338 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x564a88ed9400 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x564a88ed9608 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x564a88ed94b0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x564a88ed9530 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x564a88edf330 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x564a88ed9818 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x564a88ed96c8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x564a88ed9740 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x564a88ed98e8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x564a88ed99a8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x564a88ed9b18 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x564a88ed9a58 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x564a88ed9be0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x564a88ed9ca0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x564a88ed9d60 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x564a88ed9e20 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x564a88ed9ec0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x564a88ed9ef8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x564a88ed9f68 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x564a88eee858 <col:27, line:684:5>
|-CXXMethodDecl 0x564a88eda028 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x564a88eee868 <col:27, line:696:5>
|-CXXMethodDecl 0x564a88eda228 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x564a88eda0d8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x564a88eda150 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eee9f0 <col:66, line:700:5>
|   `-ReturnStmt 0x564a88eee9e0 <line:699:9, col:31>
|     `-CallExpr 0x564a88eee980 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x564a88eee968 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a88eee918 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x564a88d5d118 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x564a88eee9b0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x564a88eee8d8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x564a88eda0d8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x564a88eee9c8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564a88eee8f8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88eda150 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88eda598 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x564a88eda2e8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x564a88eda360 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x564a88eda3d8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x564a88eda450 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88eeed40 <col:64, line:707:5>
|   |-DeclStmt 0x564a88eeea80 <line:704:9, col:24>
|   | `-VarDecl 0x564a88eeea18 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x564a88eeec90 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x564a88eeea98 <col:9> 'int32_t':'int' lvalue ParmVar 0x564a88eda360 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x564a88eeec78 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x564a88eeec10 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x564a88eeebf8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88eeeb78 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x564a88d63748 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x564a88eeec48 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x564a88eeeb18 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x564a88eda3d8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x564a88eeec60 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x564a88eeeb38 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88eda450 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x564a88eeeb58 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x564a88eeea18 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x564a88eeed20 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x564a88eeecb0 <col:9> 'int32_t':'int' lvalue ParmVar 0x564a88eda2e8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x564a88eeed08 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x564a88eeecf0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x564a88eeecd0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x564a88eeea18 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x564a88eda838 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x564a88eda668 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x564a88eda6e0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x564a88eda758 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x564a88edaad8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x564a88eda900 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x564a88eda978 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x564a88eda9f0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x564a88ede428 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x564a88ede360 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x564a88ede628 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x564a88ede4e0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x564a88ede558 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x564a88ede8f8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x564a88ede838 parent 0x564a889c4488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x564a88ede6e8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x564a88ede760 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x564a88edeb18 <line:718:5, col:72> col:24
| `-FunctionDecl 0x564a88edea58 parent 0x564a889c4488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x564a88ede948 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x564a88ede9c0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x564a88edece0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x564a88edec28 parent 0x564a889c4488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x564a88edeb68 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x564a88edef68 <line:720:5, col:73> col:30
| `-FunctionDecl 0x564a88edeea8 parent 0x564a889c4488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x564a88eded58 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x564a88ededd0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x564a88edf188 <line:721:5, col:73> col:30
| `-FunctionDecl 0x564a88edf0c8 parent 0x564a889c4488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x564a88edefb8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x564a88edf030 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x564a88ee08a0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88ee0988 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88ee13f8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x564a88ee13b0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x564a88ed9ef8
| |     `-DeclRefExpr 0x564a88ee1390 <col:7> 'const Timestamp' lvalue ParmVar 0x564a88ee0988 '' 'const Timestamp &'
| `-CompoundStmt 0x564a88ee1458 <col:7>
|-CXXConstructorDecl 0x564a88ee0b08 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88ee0c18 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x564a88ed9ef8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564a88ee16f8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x564a88ee16a0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x564a88ed9ef8
| |     `-CXXStaticCastExpr 0x564a88ee1670 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x564a88ee1640 <col:7> 'Timestamp' lvalue ParmVar 0x564a88ee0c18 '' 'Timestamp &&'
| `-CompoundStmt 0x564a88ee1758 <col:7>
|-CXXDestructorDecl 0x564a88ee0cc8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564a88f20e30 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88f20f38 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x564a88f21a28 <col:7>
|   |-CXXMemberCallExpr 0x564a88f219c8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x564a88f21908 <col:7> '<bound member function type>' .operator= 0x564a88f20fd8
|   | | `-MemberExpr 0x564a88f21818 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x564a88ed9ef8
|   | |   `-CXXThisExpr 0x564a88f21808 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x564a88f218d8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x564a88ed9ef8
|   |   `-DeclRefExpr 0x564a88f218b8 <col:7> 'const Timestamp' lvalue ParmVar 0x564a88f20f38 '' 'const Timestamp &'
|   `-ReturnStmt 0x564a88f21a18 <col:7>
|     `-UnaryOperator 0x564a88f21a00 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a88f219f0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x564a88f212d8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x564a88f213e8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x564a88f6eb38 <col:7>
    |-CXXMemberCallExpr 0x564a88f6ead8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x564a88f6ea40 <col:7> '<bound member function type>' .operator= 0x564a88f21158
    | | `-MemberExpr 0x564a88f6e910 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x564a88ed9ef8
    | |   `-CXXThisExpr 0x564a88f6e900 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x564a88f6ea10 <col:7> 'Timestamp::rep_t' xvalue ._t 0x564a88ed9ef8
    |   `-CXXStaticCastExpr 0x564a88f6e9e0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x564a88f6e9b0 <col:7> 'Timestamp' lvalue ParmVar 0x564a88f213e8 '' 'Timestamp &&'
    `-ReturnStmt 0x564a88f6eb28 <col:7>
      `-UnaryOperator 0x564a88f6eb10 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x564a88f6eb00 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88f7df48 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x564a88f7e158 prev 0x564a88f7df48 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a88f7f5a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x564a88f7f550 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x564a88f7f530 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x564a88f7f3e0 'type'
|     `-SubstTemplateTypeParmType 0x564a88f7f200 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a88f7ed50 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x564a88f7ec68 'sized_array_memory'
|-FieldDecl 0x564a88f87230 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x564a88f87280 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a88f872b8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x564a88f7e1f0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|     `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-TypedefDecl 0x564a88f87378 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x564a88f87340 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x564a88f7e1f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|       `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-TypedefDecl 0x564a88f87408 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x564a88f873d0 'const TimerSet::heap_element &'
|   `-QualType 0x564a88f7e1f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x564a88f7e1f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|         `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-TypedefDecl 0x564a88f87498 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x564a88f87460 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x564a88f7e1f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|       `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-TypedefDecl 0x564a88f87558 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x564a88f87520 'const TimerSet::heap_element *'
|   `-QualType 0x564a88f7e1f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x564a88f7e1f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|         `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-TypedefDecl 0x564a88f883c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x564a88f88370 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x564a88f88350 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x564a88f88288 'type'
|     `-LValueReferenceType 0x564a88f88250 'const TimerSet::heap_element &'
|       `-QualType 0x564a88f87ff1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x564a88f87ff0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x564a88cf2440 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564a88cf23e8 'T'
|           `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|             `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-TypedefDecl 0x564a88f88428 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x564a88f873d0 'const TimerSet::heap_element &'
|   `-QualType 0x564a88f7e1f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x564a88f7e1f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|         `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-TypedefDecl 0x564a88f88480 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88f884e8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x564a88f87460 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x564a88f7e1f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|       `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-TypedefDecl 0x564a88f88550 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x564a88f87520 'const TimerSet::heap_element *'
|   `-QualType 0x564a88f7e1f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x564a88f7e1f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88f7d150 'TimerSet::heap_element'
|         `-CXXRecord 0x564a88f7d0c0 'heap_element'
|-EnumDecl 0x564a88f885a8 <line:134:5> col:5
| `-EnumConstantDecl 0x564a88f886a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a88f88680 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a88f88728 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a88f889b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88f887e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88f88880 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x564a88f88c78 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x564a88f88b60 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x564a88f88f38 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x564a88f88e20 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x564a88f89280 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x564a88f89160 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x564a88f89590 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x564a88f89470 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x564a88f89880 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88f896c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88f89740 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x564a88f899d8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x564a88f89ab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f89b10 <col:30> Inherited
|-CXXMethodDecl 0x564a88f89b58 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x564a88f89c08 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f89c60 <col:30> Inherited
|-CXXMethodDecl 0x564a88f89d28 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x564a88f89dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f89e30 <col:30> Inherited
|-CXXMethodDecl 0x564a88f89e78 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x564a88f89f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f89f80 <col:30> Inherited
|-CXXMethodDecl 0x564a88f89fc8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x564a88f8a078 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f8a0d0 <col:30> Inherited
|-CXXMethodDecl 0x564a88f8a118 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x564a88f8a1c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f8a220 <col:30> Inherited
|-CXXMethodDecl 0x564a88f8a248 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a88f8a2f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a88f8a3a8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x564a88f8a568 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88f8a458 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88f8a4d0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x564a88f8a6b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a88f8a628 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f8a868 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x564a88f8a770 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a88f8a920 <col:20>
| `-OptimizeNoneAttr 0x564a88f8a978 <col:30>
|-CXXMethodDecl 0x564a88f8aa98 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x564a88f8a9a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a88f8ab50 <col:20>
| `-OptimizeNoneAttr 0x564a88f8aba8 <col:30>
|-CXXMethodDecl 0x564a88f8ac60 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a88f8abd0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f8ada8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a88f8ad18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f8aed8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x564a88f8b008 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x564a88f8b0d8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x564a88f8b1a8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x564a88f8b2e8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a88f8b258 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f8b430 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a88f8b3a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f8b578 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x564a88f8b4e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a88f8b630 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a88f8b730 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a88f8b6a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a88f8b7e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a88f8b8a8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x564a88f8ba50 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x564a88f8bc08 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x564a88f8bb10 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x564a88f8c3f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a88f8bcc0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x564a88f8c358 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x564a88f8c258 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x564a88f8c4d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a88f8c628 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x564a88f8c598 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x564a88f8c6e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a88f8c928 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88f8c7a0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x564a88f8c818 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x564a88f8cae8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x564a88f8c9f8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x564a88f8cd38 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x564a88f8cbb0 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x564a88f8cc28 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x564a88f8cdf8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a88f8d058 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x564a88f8cf60 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x564a88f8d128 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a88f8d128

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88f8d270 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x564a88f8d478 prev 0x564a88f8d270 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a88f8e5c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x564a88f8e570 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x564a88f8e550 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x564a88f8e400 'type'
|     `-SubstTemplateTypeParmType 0x564a88f8e220 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a88f8dd70 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x564a88f8dc88 'sized_array_memory'
|-FieldDecl 0x564a88f921f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x564a88f92240 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a88f92278 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x564a88f8d510 'Timer *' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-PointerType 0x564a88f3d060 'Timer *'
|     `-RecordType 0x564a88f3c1b0 'Timer'
|       `-CXXRecord 0x564a88ec86d8 'Timer'
|-TypedefDecl 0x564a88f92338 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x564a88f92300 'Timer *&'
|   `-SubstTemplateTypeParmType 0x564a88f8d510 'Timer *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88f3d060 'Timer *'
|       `-RecordType 0x564a88f3c1b0 'Timer'
|         `-CXXRecord 0x564a88ec86d8 'Timer'
|-TypedefDecl 0x564a88f923f8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x564a88f923c0 'Timer *const &'
|   `-QualType 0x564a88f8d511 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x564a88f8d510 'Timer *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88f3d060 'Timer *'
|         `-RecordType 0x564a88f3c1b0 'Timer'
|           `-CXXRecord 0x564a88ec86d8 'Timer'
|-TypedefDecl 0x564a88f924b8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x564a88f92480 'Timer **'
|   `-SubstTemplateTypeParmType 0x564a88f8d510 'Timer *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88f3d060 'Timer *'
|       `-RecordType 0x564a88f3c1b0 'Timer'
|         `-CXXRecord 0x564a88ec86d8 'Timer'
|-TypedefDecl 0x564a88f92578 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x564a88f92540 'Timer *const *'
|   `-QualType 0x564a88f8d511 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x564a88f8d510 'Timer *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88f3d060 'Timer *'
|         `-RecordType 0x564a88f3c1b0 'Timer'
|           `-CXXRecord 0x564a88ec86d8 'Timer'
|-TypedefDecl 0x564a88f93150 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x564a88f93100 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x564a88f930e0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x564a88f93070 'type'
|     `-SubstTemplateTypeParmType 0x564a88f92e30 'Timer *' sugar
|       |-TemplateTypeParmType 0x564a88cf2b70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88cf2b20 'T'
|       `-PointerType 0x564a88f3d060 'Timer *'
|         `-RecordType 0x564a88f3c1b0 'Timer'
|           `-CXXRecord 0x564a88ec86d8 'Timer'
|-TypedefDecl 0x564a88f931b8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x564a88f923c0 'Timer *const &'
|   `-QualType 0x564a88f8d511 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x564a88f8d510 'Timer *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88f3d060 'Timer *'
|         `-RecordType 0x564a88f3c1b0 'Timer'
|           `-CXXRecord 0x564a88ec86d8 'Timer'
|-TypedefDecl 0x564a88f93210 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88f93278 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x564a88f92480 'Timer **'
|   `-SubstTemplateTypeParmType 0x564a88f8d510 'Timer *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88f3d060 'Timer *'
|       `-RecordType 0x564a88f3c1b0 'Timer'
|         `-CXXRecord 0x564a88ec86d8 'Timer'
|-TypedefDecl 0x564a88f932e0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x564a88f92540 'Timer *const *'
|   `-QualType 0x564a88f8d511 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x564a88f8d510 'Timer *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88f3d060 'Timer *'
|         `-RecordType 0x564a88f3c1b0 'Timer'
|           `-CXXRecord 0x564a88ec86d8 'Timer'
|-EnumDecl 0x564a88f93338 <line:134:5> col:5
| `-EnumConstantDecl 0x564a88f93430 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a88f93410 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a88f934b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a88f93748 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88f93570 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88f93610 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x564a88f94b60 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x564a88f938f0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x564a88f94e18 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x564a88f94d00 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x564a88f95160 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x564a88f95040 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x564a88f95470 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x564a88f95350 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x564a88f95760 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88f955a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88f95620 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x564a88f958b8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x564a88f95998 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f959f0 <col:30> Inherited
|-CXXMethodDecl 0x564a88f95a38 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x564a88f95ae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f95b40 <col:30> Inherited
|-CXXMethodDecl 0x564a88f95c08 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x564a88f95cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f95d10 <col:30> Inherited
|-CXXMethodDecl 0x564a88f95d58 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x564a88f95e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f95e60 <col:30> Inherited
|-CXXMethodDecl 0x564a88f95ea8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x564a88f95f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f95fb0 <col:30> Inherited
|-CXXMethodDecl 0x564a88f95ff8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x564a88f960a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88f96100 <col:30> Inherited
|-CXXMethodDecl 0x564a88f96128 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a88f961d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a88f96288 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a88f96448 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88f96338 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88f963b0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x564a88f96598 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a88f96508 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f96748 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x564a88f96650 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a88f96800 <col:20>
| `-OptimizeNoneAttr 0x564a88f96858 <col:30>
|-CXXMethodDecl 0x564a88f96978 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x564a88f96880 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a88f96a30 <col:20>
| `-OptimizeNoneAttr 0x564a88f96a88 <col:30>
|-CXXMethodDecl 0x564a88f96b40 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564a88f96ab0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f96c88 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a88f96bf8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f96db8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x564a88f96ee8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x564a88f96fb8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x564a88f97088 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x564a88f971c8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564a88f97138 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f97310 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a88f97280 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88f97458 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x564a88f973c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a88f97510 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a88f97610 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a88f97580 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a88f976c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a88f97788 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x564a88f97888 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x564a88f97a08 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x564a88f97948 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x564a88f981c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a88f97ac0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x564a88f98128 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x564a88f98028 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x564a88f982a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a88f983f8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x564a88f98368 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x564a88f984b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a88f986f8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88f98570 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x564a88f985e8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x564a88f988b8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x564a88f987c8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x564a88f98b08 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x564a88f98980 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x564a88f989f8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x564a88f98bc8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a88f98e28 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x564a88f98d30 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x564a88f98ef8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a88f98ef8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ec5110 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88ec5228 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x564a88ec52b8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x564a88ec5340 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x564a88ec5430 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x564a88ec5530 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x564a88ec55f0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x564a88ec56b0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x564a88ec57d8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x564a88ec57d8
| `-ParmVarDecl 0x564a88ec58e8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x564a88f99ca8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x564a88f99ca8
  `-ParmVarDecl 0x564a88f99db8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f7c240 prev 0x564a88f6c5c8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x564a88f7c338 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x564a88f7c3c8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x564a88f7c450 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x564a88f7c548 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x564a88f9a120 <col:43, col:67>
|   `-ReturnStmt 0x564a88f9a110 <col:45, col:52>
|     `-CXXConstructExpr 0x564a88f9a0e0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x564a88f9a0b0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x564a88f7dd30
|         `-CXXThisExpr 0x564a88f9a0a0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x564a88f7c608 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x564a88f7c810 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x564a88f7c6b8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x564a88f7c730 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x564a88f7c908 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x564a88f7c9d0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x564a88f9a1a0 <col:39, col:67>
|   `-ReturnStmt 0x564a88f9a190 <col:41, col:48>
|     `-ImplicitCastExpr 0x564a88f9a178 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564a88f9a148 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x564a88f7de18
|         `-CXXThisExpr 0x564a88f9a138 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x564a88f7ca98 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x564a88f9a220 <col:35, col:59>
|   `-ReturnStmt 0x564a88f9a210 <col:37, col:44>
|     `-ImplicitCastExpr 0x564a88f9a1f8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564a88f9a1c8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x564a88f7de80
|         `-CXXThisExpr 0x564a88f9a1b8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x564a88f7cbe0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x564a88f7cb50 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x564a88f7cd28 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x564a88f7cc98 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x564a88f7cf28 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x564a88f7cde0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x564a88f7ce58 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x564a88f7cff8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x564a88f7d098 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x564a88f7d0c0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564a88f7d1d8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x564a88f7d278 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x564a88f7d2d8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x564a88f7d408 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x564a88f7d338 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x564a88f7d278 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x564a88f9a2f8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x564a88f9a2a0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x564a88f9a270 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x564a88f69a28
|   |       `-ImplicitCastExpr 0x564a88f9a2c0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x564a88f9a258 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x564a88f9a238 <col:17> 'Timer *' lvalue ParmVar 0x564a88f7d338 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x564a88f7d2d8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x564a88f9a390 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x564a88f9a350 <col:41> 'Timer *' lvalue ParmVar 0x564a88f7d338 't_' 'Timer *'
|   `-CompoundStmt 0x564a88f9a3e0 <col:45, line:44:2>
|-CXXRecordDecl 0x564a88f7d4d0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564a88f7d5e8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x564a88f7d838 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x564a88f7d6b8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x564a88f7d730 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x564a88f9a510 <col:71, line:49:2>
|     `-ReturnStmt 0x564a88f9a500 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x564a88f9a4c8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x564a88f9a4b0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x564a88f9a490 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x564a88efb9c8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x564a88f9a410 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x564a88f7d278
|         | `-DeclRefExpr 0x564a88f9a3f0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x564a88f7d6b8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x564a88f9a460 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x564a88f7d278
|           `-DeclRefExpr 0x564a88f9a440 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x564a88f7d730 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x564a88f7d900 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564a88f7da18 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x564a88f7dc38 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x564a88f7dab8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x564a88f7db30 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x564a88f9a718 <col:63, line:54:2>
|     `-BinaryOperator 0x564a88f9a6f8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x564a88f9a5a8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x564a88f6ba68
|       | `-ImplicitCastExpr 0x564a88f9a590 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x564a88f9a560 <col:6, col:9> 'Timer *' lvalue ->t 0x564a88f7d2d8
|       |     `-ImplicitCastExpr 0x564a88f9a548 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x564a88f9a528 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x564a88f7db30 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x564a88f9a6e0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x564a88f9a6c0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x564a88f9a668 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x564a88f9a648 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x564a88f9a618 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x564a88f9a5d8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x564a88f7db30 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x564a88f9a630 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x564a88f9a5f8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x564a88f7dab8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x564a88f9a6a8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x564a88f9a688 <col:39> 'int' 1
|-FieldDecl 0x564a88f7dd30 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x564a88f7dda0 <col:44, col:53> aligned
|   `-ConstantExpr 0x564a88f7dd80 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x564a88f7dd00 <col:52> 'int' 8
|-FieldDecl 0x564a88f7de18 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x564a88f7de80 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x564a88f7dee8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x564a88f8d210 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x564a88f98fe0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x564a88f99040 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x564a88f990a0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x564a88f99100 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f991f0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x564a88f99160 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x564a88f992b8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x564a88f9ab70 <col:29, line:81:5>
|   `-IfStmt 0x564a88f9ab48 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x564a88f9a800 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x564a88f9a7a0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x564a88f9a770 <col:6, col:18> '<bound member function type>' .size 0x564a88f8a248
|     |     `-ImplicitCastExpr 0x564a88f9a7e8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x564a88f9a740 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x564a88f8d210
|     |         `-CXXThisExpr 0x564a88f9a730 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x564a88f9a9f0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x564a88f9a9d8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x564a88f9a9b8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x564a88f20e30 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x564a88f9a828 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x564a88f7dd30
|     | | `-CXXThisExpr 0x564a88f9a818 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x564a88f9a9a0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x564a88f9a970 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x564a88f7d278
|     |     `-CXXMemberCallExpr 0x564a88f9a948 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x564a88f9a918 <col:22, col:34> '<bound member function type>' .unchecked_at 0x564a88f8b2e8
|     |       | `-MemberExpr 0x564a88f9a868 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x564a88f8d210
|     |       |   `-CXXThisExpr 0x564a88f9a858 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x564a88f9a8f8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x564a88f9ab30 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x564a88f9aaf8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x564a88f9aae0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x564a88f9aac0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x564a88f212d8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x564a88f9aa38 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x564a88f7dd30
|         | `-CXXThisExpr 0x564a88f9aa28 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x564a88f9aaa8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564a88f9aa78 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x564a88f993f8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x564a88f99368 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x564a88f994c0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x564a88f99580 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x564a88f99640 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x564a88f99730 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x564a88f99798 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x564a88f99798
| `-ParmVarDecl 0x564a88f998a8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x564a88f99948 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x564a88f99948
| `-ParmVarDecl 0x564a88f99a58 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x564a88f99af8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x564a88f99af8
| `-ParmVarDecl 0x564a88f99c08 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x564a88f99e28 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x564a88f99e28
| `-ParmVarDecl 0x564a88f99f38 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x564a88f99fc0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x564a88f99fc0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88fd0c68 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x564a88fd0e78 prev 0x564a88fd0c68 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a88fd1f50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x564a88fd1f00 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x564a88fd1ee0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x564a88fd1d90 'type'
|     `-SubstTemplateTypeParmType 0x564a88f8e220 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a88f8dd70 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x564a88f8dc88 'sized_array_memory'
|-FieldDecl 0x564a88fd2050 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x564a88fd20a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a88fd20d8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x564a88fd0f10 'pollfd' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-RecordType 0x564a88fced20 'pollfd'
|     `-CXXRecord 0x564a88fcec90 'pollfd'
|-TypedefDecl 0x564a88fd2198 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x564a88fd2160 'pollfd &'
|   `-SubstTemplateTypeParmType 0x564a88fd0f10 'pollfd' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88fced20 'pollfd'
|       `-CXXRecord 0x564a88fcec90 'pollfd'
|-TypedefDecl 0x564a88fd2258 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x564a88fd2220 'const pollfd &'
|   `-QualType 0x564a88fd0f11 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x564a88fd0f10 'pollfd' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88fced20 'pollfd'
|         `-CXXRecord 0x564a88fcec90 'pollfd'
|-TypedefDecl 0x564a88fd22e8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x564a88fd22b0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x564a88fd0f10 'pollfd' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88fced20 'pollfd'
|       `-CXXRecord 0x564a88fcec90 'pollfd'
|-TypedefDecl 0x564a88fd23a8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x564a88fd2370 'const pollfd *'
|   `-QualType 0x564a88fd0f11 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x564a88fd0f10 'pollfd' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88fced20 'pollfd'
|         `-CXXRecord 0x564a88fcec90 'pollfd'
|-TypedefDecl 0x564a88fd2f80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x564a88fd2f30 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x564a88fd2f10 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x564a88fd2ea0 'type'
|     `-SubstTemplateTypeParmType 0x564a88fd2c60 'pollfd' sugar
|       |-TemplateTypeParmType 0x564a88cf2b70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88cf2b20 'T'
|       `-RecordType 0x564a88fced20 'pollfd'
|         `-CXXRecord 0x564a88fcec90 'pollfd'
|-TypedefDecl 0x564a88fd2fe8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x564a88fd2220 'const pollfd &'
|   `-QualType 0x564a88fd0f11 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x564a88fd0f10 'pollfd' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88fced20 'pollfd'
|         `-CXXRecord 0x564a88fcec90 'pollfd'
|-TypedefDecl 0x564a88fd3040 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88fd30a8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x564a88fd22b0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x564a88fd0f10 'pollfd' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88fced20 'pollfd'
|       `-CXXRecord 0x564a88fcec90 'pollfd'
|-TypedefDecl 0x564a88fd3110 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x564a88fd2370 'const pollfd *'
|   `-QualType 0x564a88fd0f11 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x564a88fd0f10 'pollfd' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88fced20 'pollfd'
|         `-CXXRecord 0x564a88fcec90 'pollfd'
|-EnumDecl 0x564a88fd3168 <line:134:5> col:5
| `-EnumConstantDecl 0x564a88fd3260 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a88fd3240 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a88fd32e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a88fd3578 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88fd33a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88fd3440 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x564a88fd3838 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x564a88fd3720 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x564a88fd3af8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x564a88fd39e0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x564a88fd3e40 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x564a88fd3d20 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x564a88fd4150 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x564a88fd4030 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x564a88fd4440 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88fd4288 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88fd4300 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x564a88fd4598 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x564a88fd4678 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fd46d0 <col:30> Inherited
|-CXXMethodDecl 0x564a88fd4718 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x564a88fd47c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fd4820 <col:30> Inherited
|-CXXMethodDecl 0x564a88fd48e8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x564a88fd4998 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fd49f0 <col:30> Inherited
|-CXXMethodDecl 0x564a88fd4a38 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x564a88fd4ae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fd4b40 <col:30> Inherited
|-CXXMethodDecl 0x564a88fd4b88 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x564a88fd4c38 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fd4c90 <col:30> Inherited
|-CXXMethodDecl 0x564a88fd4cd8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x564a88fd4d88 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fd4de0 <col:30> Inherited
|-CXXMethodDecl 0x564a88fd4e08 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a88fd4eb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a88fd4f68 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a88fd5128 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88fd5018 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88fd5090 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x564a88fd5278 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a88fd51e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fd5428 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x564a88fd5330 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a88fd54e0 <col:20>
| `-OptimizeNoneAttr 0x564a88fd5538 <col:30>
|-CXXMethodDecl 0x564a88fd5658 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x564a88fd5560 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a88fd5710 <col:20>
| `-OptimizeNoneAttr 0x564a88fd5768 <col:30>
|-CXXMethodDecl 0x564a88fd5820 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a88fd5790 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fd5968 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a88fd58d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fd5a98 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x564a88fd5bc8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x564a88fd5c98 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x564a88fd5d68 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x564a88fd5ea8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a88fd5e18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fd5ff0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a88fd5f60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fd6138 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x564a88fd60a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a88fd61f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a88fd62f0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a88fd6260 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a88fd63a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a88fd6468 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x564a88fd6568 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x564a88fd6718 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x564a88fd6628 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x564a88fd6ef8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a88fd67d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x564a88fd6e58 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x564a88fd6d58 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x564a88fd6fd8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a88fd7128 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x564a88fd7098 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x564a88fd71e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a88fd7428 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88fd72a0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x564a88fd7318 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x564a88fd75e8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x564a88fd74f8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x564a88fd7838 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x564a88fd76b0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x564a88fd7728 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x564a88fd78f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a88fd7b58 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x564a88fd7a60 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x564a88fd7c28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a88fd7c28

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88fd9210 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x564a88fd93e8 prev 0x564a88fd9210 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564a88fd9478 <col:46, col:52> col:46 public
|-TypedefDecl 0x564a88fd94a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88fdb070 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x564a88fdb020 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x564a88fd9950 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x564a88fd9850 'type'
|     `-TemplateSpecializationType 0x564a88fd97e0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x564a88fd96c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x564a88fd96a0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x564a88fd9680 <col:24> 'unsigned long' 24
|       `-RecordType 0x564a88fd97c0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x564a88fd96e0 'char_array'
|-TypedefDecl 0x564a88fdb128 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x564a88fdb0f0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x564a88fdb0d0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x564a88fdb070 'type'
|     `-ElaboratedType 0x564a88fdb020 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x564a88fd9950 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x564a88fd9850 'type'
|         `-TemplateSpecializationType 0x564a88fd97e0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x564a88fd96c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x564a88fd96a0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x564a88fd9680 <col:24> 'unsigned long' 24
|           `-RecordType 0x564a88fd97c0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x564a88fd96e0 'char_array'
|-CXXMethodDecl 0x564a88fdb2a8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x564a88fdb1b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x564a88fdb398 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564a88fdb478 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x564a88fdb478
|-CXXMethodDecl 0x564a88fdb748 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x564a88fdb650 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x564a88fdb988 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x564a88fdb800 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88fdb878 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564a88fdbb58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x564a88fdba48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88fdbac0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564a88fdbcb8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x564a88fdbd88 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x564a88fdbfd8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x564a88fdbe48 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x564a88fdbec0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564a88fdc238 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x564a88fdc0a8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x564a88fdc120 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564a88fdc3f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x564a88fdc308 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564a88fdc5b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x564a88fdc4c0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564a88fdc670 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a88fdc720 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a88fdc958 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x564a88fdc7d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564a88fdc848 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564a88fdcbf8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x564a88fdcb00 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x564a88fdccc0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x564a88fdcd10 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564a88fdcd60 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88fd7d70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x564a88fd7f78 prev 0x564a88fd7d70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a88fd9180 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x564a88fd9130 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x564a88fd9110 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x564a88fd8fc0 'type'
|     `-SubstTemplateTypeParmType 0x564a88fd8de0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a88fd8930 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x564a88fd8850 'sized_array_memory'
|-FieldDecl 0x564a88fdcdb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x564a88fdce00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a88fdce38 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x564a88fd8010 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-TypedefDecl 0x564a88fdcef8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x564a88fdcec0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x564a88fd8010 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-TypedefDecl 0x564a88fdcfb8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x564a88fdcf80 'const SelectSet::SelectorInfo &'
|   `-QualType 0x564a88fd8011 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x564a88fd8010 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-TypedefDecl 0x564a88fdd048 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x564a88fdd010 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x564a88fd8010 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-TypedefDecl 0x564a88fdd108 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x564a88fdd0d0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x564a88fd8011 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x564a88fd8010 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-TypedefDecl 0x564a88fddd60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x564a88fddd10 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x564a88fddcf0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x564a88fddc28 'type'
|     `-LValueReferenceType 0x564a88fddbf0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x564a88fdd991 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x564a88fdd990 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x564a88cf2440 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564a88cf23e8 'T'
|           `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-TypedefDecl 0x564a88fdddc8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x564a88fdcf80 'const SelectSet::SelectorInfo &'
|   `-QualType 0x564a88fd8011 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x564a88fd8010 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-TypedefDecl 0x564a88fdde20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a88fdde88 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x564a88fdd010 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x564a88fd8010 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-TypedefDecl 0x564a88fddef0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x564a88fdd0d0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x564a88fd8011 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x564a88fd8010 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-RecordType 0x564a88fd07d0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x564a88fd0740 'SelectorInfo'
|-EnumDecl 0x564a88fddf48 <line:134:5> col:5
| `-EnumConstantDecl 0x564a88fde040 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a88fde020 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a88fde0c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564a88fde358 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88fde180 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88fde220 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x564a88fde618 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x564a88fde500 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x564a88fde8d8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x564a88fde7c0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x564a88fdec50 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x564a88fdeb30 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x564a88fdef60 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x564a88fdee40 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x564a88fdf250 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88fdf098 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88fdf110 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x564a88fdf3a8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x564a88fdf488 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fdf4e0 <col:30> Inherited
|-CXXMethodDecl 0x564a88fdf528 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x564a88fdf5d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fdf630 <col:30> Inherited
|-CXXMethodDecl 0x564a88fdf6f8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x564a88fdf7a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fdf800 <col:30> Inherited
|-CXXMethodDecl 0x564a88fdf848 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x564a88fdf8f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fdf950 <col:30> Inherited
|-CXXMethodDecl 0x564a88fdf998 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x564a88fdfa48 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fdfaa0 <col:30> Inherited
|-CXXMethodDecl 0x564a88fdfae8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x564a88fdfb98 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a88fdfbf0 <col:30> Inherited
|-CXXMethodDecl 0x564a88fdfc18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a88fdfcc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a88fdfd78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a88fdff38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88fdfe28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a88fdfea0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x564a88fe0088 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a88fdfff8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fe0238 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x564a88fe0140 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a88fe02f0 <col:20>
| `-OptimizeNoneAttr 0x564a88fe0348 <col:30>
|-CXXMethodDecl 0x564a88fe0468 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x564a88fe0370 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a88fe0520 <col:20>
| `-OptimizeNoneAttr 0x564a88fe0578 <col:30>
|-CXXMethodDecl 0x564a88fe0630 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a88fe05a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fe0778 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a88fe06e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fe08a8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x564a88fe09d8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x564a88fe0aa8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x564a88fe0b78 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x564a88fe0cb8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x564a88fe0c28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fe0e00 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a88fe0d70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a88fe0f48 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x564a88fe0eb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a88fe1000 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a88fe1100 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a88fe1070 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a88fe11b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a88fe1278 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x564a88fe1378 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x564a88fe1528 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x564a88fe1438 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x564a88fe1ce8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a88fe15e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x564a88fe1c48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x564a88fe1b48 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x564a88fe1dc8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a88fe1f18 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x564a88fe1e88 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x564a88fe1fd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a88fe2218 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x564a88fe2090 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x564a88fe2108 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x564a88fe23d8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x564a88fe22e8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x564a88fe2628 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x564a88fe24a0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x564a88fe2518 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x564a88fe26e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a88fe2948 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x564a88fe2850 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x564a88fe2a18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564a88fe2a18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88fcf920 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88fcfa38 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x564a88fcfac8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x564a88fcfb50 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x564a88fcfc40 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x564a88fcfc40
|-CXXMethodDecl 0x564a88fcfd40 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x564a88fcffe0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x564a88fcfdf8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x564a88fcfe70 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x564a88fcfef0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x564a88fd0250 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x564a88fd00b0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x564a88fd0128 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x564a88fd01a8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x564a88fd03a8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x564a88fd0318 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x564a88fd0470 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x564a88fe40c8 <col:34, line:50:5>
|   |-BinaryOperator 0x564a88fe3a98 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x564a88fe3a58 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x564a88fd0bf8
|   | | `-CXXThisExpr 0x564a88fe3a48 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x564a88fe3a88 <col:23> 'bool' true
|   `-CallExpr 0x564a88fe40a0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x564a88fe4088 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x564a88fe4008 <col:2> 'void (long)' lvalue Function 0x564a88fe3f08 'ignore_result' 'void (long)' (FunctionTemplate 0x564a88be2bf8 'ignore_result')
|     `-CallExpr 0x564a88fe3cb0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x564a88fe3c98 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a88fe3c18 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x564a88fa9e28 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x564a88fe3ce8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x564a88fe3bc0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x564a88fe3ba8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x564a88fe3b58 <col:22> 'int [2]' lvalue ->_wake_pipe 0x564a88fd0b98
|       |   |   `-CXXThisExpr 0x564a88fe3b48 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x564a88fe3b88 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x564a88fe3d18 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x564a88fe3d00 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x564a88fe3be0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x564a88fe3d30 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x564a88fe3bf8 <col:41> 'int' 1
|-CXXMethodDecl 0x564a88fd05b0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x564a88fd0520 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x564a88fd0678 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x564a88fd0718 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x564a88fd0740 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564a88fd0858 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x564a88fd08f8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x564a88fd0958 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x564a88fd09c0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x564a88fd0a70 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x564a88fd08f8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x564a88fe4128 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x564a88fe40e8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x564a88fd0958 'write' 'Element *'
|   | `-ImplicitCastExpr 0x564a88fe41a8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x564a88fe4168 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x564a88fd09c0 'pollfd' 'int'
|   | `-UnaryOperator 0x564a88fe4208 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x564a88fe41e8 <col:35> 'int' 1
|   `-CompoundStmt 0x564a88fe4280 <line:64:2, line:65:2>
|-FieldDecl 0x564a88fd0b98 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x564a88fd0bf8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x564a88fd7d10 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x564a88fe2b00 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x564a88fe2d38 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x564a88fe2b68 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x564a88fe2be0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x564a88fe2c58 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x564a88fe2f20 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x564a88fe2e08 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x564a88fe2e88 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x564a88fe3168 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x564a88fe2fe8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x564a88fe3068 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x564a88fe3378 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x564a88fe3228 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x564a88fe32a0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x564a88fe34c8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x564a88fe3438 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x564a88fe3590 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x564a88fe3650 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x564a88fe3718 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x564a88fe3718
| `-ParmVarDecl 0x564a88fe3828 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x564a88fe38c8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x564a88fe38c8
  `-ParmVarDecl 0x564a88fe39d8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ec4078 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88ec4198 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x564a88ec4228 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x564a88ec42b0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x564a88ec43a0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x564a88ec44a0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x564a88ec4560 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x564a88ec4620 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x564a88ec4708 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x564a88ec4828 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x564a88ec4828
| `-ParmVarDecl 0x564a88ec4938 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x564a88feb2c8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x564a88feb2c8
  `-ParmVarDecl 0x564a88feb3d8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f7a1e8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88f7a308 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x564a88f7a3a8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x564a88f7a408 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x564a88fea8c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x564a88fea8c8
| `-ParmVarDecl 0x564a88fea9d8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x564a88feaa78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x564a88feaa78
| `-ParmVarDecl 0x564a88feab88 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x564a88feabf8 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564a88feb478 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x564a88feb478
| `-ParmVarDecl 0x564a88feb588 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x564a88feb5f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x564a88feb5f8
| `-ParmVarDecl 0x564a88feb708 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x564a88ff3d78 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x564a88ff3e50 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ec5f70 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88ec6088 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x564a88ec6118 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x564a88ec61a0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x564a88ec6260 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-CXXMethodDecl 0x564a88ec6328 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x564a88ec63c8 <col:45> always_inline
|-CXXMethodDecl 0x564a88ec64f8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x564a88ec6430 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x564a88ec65a0 <col:49> always_inline
|-CXXConstructorDecl 0x564a88ec6698 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x564a88ec6698
| `-ParmVarDecl 0x564a88ec67a8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x564a88ec6848 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x564a88ec6848
| `-ParmVarDecl 0x564a88ec6958 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x564a88feace0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x564a88feace0
|-CXXMethodDecl 0x564a88feb7a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x564a88feb7a8
| `-ParmVarDecl 0x564a88feb8b8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x564a88feb928 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x564a88feb928
  `-ParmVarDecl 0x564a88feba38 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88fe46f0 prev 0x564a88fcf890 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x564a88fe47e8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x564a88fe4878 <col:22, col:28> col:22 public
|-EnumDecl 0x564a88fe48a0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x564a88fe49b8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x564a88fe4998 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x564a88fe4980 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x564a88fe4960 <col:32> 'int' 1
| `-EnumConstantDecl 0x564a88fe4a60 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x564a88fe4a40 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x564a88fe4a28 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x564a88fe4a08 <col:53> 'int' 1000
|-CXXMethodDecl 0x564a88fe4b00 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x564a88fe4bc0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x564a88fe4ca8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x564a88febaf8 <col:34, col:52>
|   `-ReturnStmt 0x564a88febae8 <col:36, col:43>
|     `-MemberExpr 0x564a88febab8 <col:43> 'TimerSet' lvalue ->_timers 0x564a88fe6978
|       `-CXXThisExpr 0x564a88febaa8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x564a88fe4d98 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x564a88febb60 <col:46, col:64>
|   `-ReturnStmt 0x564a88febb50 <col:48, col:55>
|     `-MemberExpr 0x564a88febb20 <col:55> 'const TimerSet' lvalue ->_timers 0x564a88fe6978
|       `-CXXThisExpr 0x564a88febb10 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x564a88fe4e88 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x564a88febbc8 <col:36, col:55>
|   `-ReturnStmt 0x564a88febbb8 <col:38, col:45>
|     `-MemberExpr 0x564a88febb88 <col:45> 'SelectSet' lvalue ->_selects 0x564a88fe69d8
|       `-CXXThisExpr 0x564a88febb78 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x564a88fe4f78 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x564a88febc30 <col:48, col:67>
|   `-ReturnStmt 0x564a88febc20 <col:50, col:57>
|     `-MemberExpr 0x564a88febbf0 <col:57> 'const SelectSet' lvalue ->_selects 0x564a88fe69d8
|       `-CXXThisExpr 0x564a88febbe0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x564a88fe5038 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x564a88fe5128 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x564a88fe5298 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x564a88fe51d8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x564a88fe5360 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x564a88fe57a8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x564a88fe5410 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x564a88fe5690 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x564a88fe5878 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x564a88fe5938 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x564a88fe59f8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x564a88fe5b38 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x564a88fe5aa8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x564a88fe5c00 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x564a88fe5cc0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x564a88fe5d80 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x564a88fe5e40 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x564a88fe5f80 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x564a88fe5ef0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x564a88fe6048 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x564a88fe6108 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x564a88fe61a8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x564a88fe6270 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe62c0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe6310 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe6360 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe63b0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe6400 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe6450 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe64a0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe64f0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564a88fe6540 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x564a88fe6590 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x564a88fe6688 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x564a88fe65f8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x564a88fe67d8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x564a88fe6748 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x564a88fe6880 <line:104:3, col:10> col:3 private
|-FieldDecl 0x564a88fe68b8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x564a88fe6918 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x564a88fe6978 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x564a88fe69d8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x564a88fe8ea0 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x564a88fe8f10 <col:40, col:50> aligned
|   `-ConstantExpr 0x564a88fe8ef0 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x564a88fe6a28 <col:48> 'int' 64
|-FieldDecl 0x564a88fe8f80 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x564a88fe8fe0 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x564a88fe90e0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x564a88fe91f0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x564a88fe9250 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x564a88fe92d0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x564a88fe9340 <col:36, col:46> aligned
|   `-ConstantExpr 0x564a88fe9320 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x564a88fe92a0 <col:44> 'int' 64
|-FieldDecl 0x564a88fe93b8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x564a88fe9418 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x564a88fe9468 <line:170:3, col:9> col:3 public
|-FieldDecl 0x564a88fe94a8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x564a88fe9510 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x564a88fe9560 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x564a88fe9708 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x564a88fe9598 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x564a88fe9618 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x564a88fe9808 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x564a88fe9808
|-CXXMethodDecl 0x564a88fe9910 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x564a88fe99d8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x564a88febd28 <col:34, line:217:5>
|   `-ReturnStmt 0x564a88febd18 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x564a88febd00 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564a88febcd0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x564a88f70a70
|         `-ImplicitCastExpr 0x564a88febcb8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x564a88febc88 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x564a88f70a08
|             `-MemberExpr 0x564a88febc58 <col:16> 'const TaskLink' lvalue ->_task_link 0x564a88fe68b8
|               `-CXXThisExpr 0x564a88febc48 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x564a88fe9a98 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x564a88fe9b58 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x564a88fec450 <col:39, line:226:5>
|   |-DeclStmt 0x564a88febf78 <line:223:9, col:68>
|   | `-VarDecl 0x564a88febd50 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x564a88febf30 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x564a88febf00 <col:24, col:38> '<bound member function type>' .compare_swap 0x564a88bf03e0
|   |     | `-MemberExpr 0x564a88febdc8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x564a88fe8f80
|   |     |   `-CXXThisExpr 0x564a88febdb8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x564a88febeb8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x564a88febea0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x564a88febe78 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x564a88febe58 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x564a88febf60 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x564a88febee0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x564a88febfc0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x564a88febf90 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x564a88febd50 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x564a88fec430 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x564a88fec400 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x564a88fec0d8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x564a88fec0a8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x564a88fec090 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x564a88febfe8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x564a88febd50 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x564a88fec068 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x564a88fec050 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x564a88fec028 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x564a88fec008 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x564a88fec138 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x564a88fec118 <col:60> 'int' 0
|       `-CallExpr 0x564a88fec360 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x564a88fec348 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x564a88fec328 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x564a88fec3a0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x564a88fec228 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x564a88fec3b8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x564a88fec258 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x564a88fec3d0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x564a88fec298 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x564a88fec3e8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x564a88fec310 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x564a88fec2f8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x564a88fec2b8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x564a88fe9ca0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x564a88fe9c10 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x564a88fe9d68 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x564a88fe9e28 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x564a88fe9ee8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x564a88fe9fa8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x564a88fea068 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x564a88fea160 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x564a88fea1c0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x564a88fea250 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x564a88fea618 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x564a88fea618
| `-ParmVarDecl 0x564a88fea728 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x564a88feade8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x564a88feade8
  `-ParmVarDecl 0x564a88feaef8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f70d80 prev 0x564a88f3c070 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x564a88f70eb8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x564a88f70f48 <col:33, col:39> col:33 public
|-EnumDecl 0x564a88f70f70 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x564a88f710b0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x564a88f71090 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x564a88f71070 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x564a88f71030 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x564a88f71050 <col:26> 'int' 16
| `-EnumConstantDecl 0x564a88f71180 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x564a88f71160 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x564a88f71140 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x564a88f71100 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x564a88f71120 <col:47> 'int' 31
|-EnumDecl 0x564a88f77a20 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x564a88f77b60 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x564a88f77c80 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f77b40 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x564a88f77b20 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x564a88f77ae0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x564a88f77b00 <col:29> 'int' 15
| `-EnumConstantDecl 0x564a88f77c30 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x564a88f77c98 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f77c10 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x564a88f77bf0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x564a88f77bb0 <col:51> 'int' 1
|         `-IntegerLiteral 0x564a88f77bd0 <col:54> 'int' 10
|-CXXConstructorDecl 0x564a88f77e68 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x564a88f77cc0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x564a88f77d40 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x564a88f77fc0 <line:86:5, col:27> col:12 used Task 'void (Element *)' inline
| `-ParmVarDecl 0x564a88f77f30 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x564a88f780b8 <line:91:5, col:11> col:5 used ~Task 'void () noexcept'
|-CXXMethodDecl 0x564a88f78248 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x564a88f7b348 <col:42, line:100:5>
|   `-ReturnStmt 0x564a88f7b338 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x564a88f7b320 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x564a88f7b2f0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x564a88f7a070
|         `-CXXThisExpr 0x564a88f7b2e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564a88f78310 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x564a88f7b3c8 <col:36, line:105:5>
|   `-ReturnStmt 0x564a88f7b3b8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x564a88f7b3a0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x564a88f7b370 <col:16> 'void *const' lvalue ->_thunk 0x564a88f7a0d8
|         `-CXXThisExpr 0x564a88f7b360 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564a88f783d0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x564a88f7b448 <col:37, line:110:5>
|   `-ReturnStmt 0x564a88f7b438 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x564a88f7b420 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x564a88f7b3f0 <col:16> 'Element *const' lvalue ->_owner 0x564a88f7a198
|         `-CXXThisExpr 0x564a88f7b3e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564a88f78490 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x564a88f78558 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x564a88f78618 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x564a88f786d8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x564a88f7b530 <col:35, line:137:5>
|   `-ReturnStmt 0x564a88f7b520 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x564a88f7b4e8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x564a88f7b4b8 <col:16, col:24> '<bound member function type>' ->router 0x564a88f51ee0
|         `-ImplicitCastExpr 0x564a88f7b508 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x564a88f7b4a0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x564a88f7b470 <col:16> 'Element *const' lvalue ->_owner 0x564a88f7a198
|               `-CXXThisExpr 0x564a88f7b460 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564a88f78798 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x564a88f78958 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x564a88f78848 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x564a88f788c0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x564a88f78b68 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x564a88f78a18 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x564a88f78a90 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x564a88f78c38 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x564a88f7b640 <col:35, line:181:5>
|   `-ReturnStmt 0x564a88f7b630 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x564a88f7b618 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x564a88f7b600 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x564a88f7b5d0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x564a88f79ca8
|           `-MemberExpr 0x564a88f7b588 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564a88f79dc8
|             `-MemberExpr 0x564a88f7b558 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x564a88f79ff8
|               `-CXXThisExpr 0x564a88f7b548 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564a88f78cf8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x564a88f7b758 <col:30, line:192:5>
|   `-BinaryOperator 0x564a88f7b738 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x564a88f7b6e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x564a88f79ca8
|     | `-MemberExpr 0x564a88f7b698 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564a88f79dc8
|     |   `-MemberExpr 0x564a88f7b668 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564a88f79ff8
|     |     `-CXXThisExpr 0x564a88f7b658 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x564a88f7b720 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x564a88f7b710 <col:32> 'bool' false
|-CXXMethodDecl 0x564a88f78db8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x564a88f7baa8 <col:30, line:206:5>
|   |-BinaryOperator 0x564a88f7b850 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x564a88f7b7f8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x564a88f79ca8
|   | | `-MemberExpr 0x564a88f7b7b0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564a88f79dc8
|   | |   `-MemberExpr 0x564a88f7b780 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564a88f79ff8
|   | |     `-CXXThisExpr 0x564a88f7b770 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x564a88f7b838 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x564a88f7b828 <col:32> 'bool' true
|   |-CallExpr 0x564a88f7b8f0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x564a88f7b8d8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564a88f7b8b8 <col:9> 'void ()' lvalue Function 0x564a88ec3c30 'click_fence' 'void ()'
|   `-IfStmt 0x564a88f7ba90 <line:204:9, line:205:32>
|     |-BinaryOperator 0x564a88f7b9d0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x564a88f7b9a0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x564a88f7b950 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x564a88f7a408
|     | |   `-MemberExpr 0x564a88f7b920 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x564a88f7a480
|     | |     `-CXXThisExpr 0x564a88f7b910 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x564a88f7b9b8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x564a88f7b980 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x564a88f7ba50 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x564a88f7ba00 <col:13> '<bound member function type>' ->complete_schedule 0x564a88f7ae80
|       | `-CXXThisExpr 0x564a88f7b9f0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x564a88f7ba78 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x564a88f7ba30 <col:31> 'int' 0
|-CXXMethodDecl 0x564a88f78e78 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x564a88f7bbd0 <col:35, line:240:5>
|   `-BinaryOperator 0x564a88f7bbb0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x564a88f7bb58 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x564a88f79ca8
|     | `-MemberExpr 0x564a88f7bb10 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564a88f79dc8
|     |   `-MemberExpr 0x564a88f7bae0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564a88f79ff8
|     |     `-CXXThisExpr 0x564a88f7bad0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x564a88f7bb98 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x564a88f7bb88 <col:32> 'bool' true
|-CXXMethodDecl 0x564a88f78f38 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x564a88f7bde8 <col:37, line:253:5>
|   |-BinaryOperator 0x564a88f7bcc8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x564a88f7bc70 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x564a88f79ca8
|   | | `-MemberExpr 0x564a88f7bc28 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564a88f79dc8
|   | |   `-MemberExpr 0x564a88f7bbf8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564a88f79ff8
|   | |     `-CXXThisExpr 0x564a88f7bbe8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x564a88f7bcb0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x564a88f7bca0 <col:32> 'bool' false
|   `-BinaryOperator 0x564a88f7bdc8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x564a88f7bd70 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x564a88f79d08
|     | `-MemberExpr 0x564a88f7bd28 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564a88f79dc8
|     |   `-MemberExpr 0x564a88f7bcf8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564a88f79ff8
|     |     `-CXXThisExpr 0x564a88f7bce8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x564a88f7bdb0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x564a88f7bda0 <col:41> 'bool' true
|-CXXMethodDecl 0x564a88f78ff8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x564a88f7bf68 <col:37, line:264:5>
|   |-BinaryOperator 0x564a88f7bee8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x564a88f7be90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x564a88f79d08
|   | | `-MemberExpr 0x564a88f7be48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564a88f79dc8
|   | |   `-MemberExpr 0x564a88f7be18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564a88f79ff8
|   | |     `-CXXThisExpr 0x564a88f7be08 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x564a88f7bed0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x564a88f7bec0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x564a88f7bf48 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x564a88f7bf18 <col:9> '<bound member function type>' ->reschedule 0x564a88f78db8
|       `-CXXThisExpr 0x564a88f7bf08 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x564a88f79140 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x564a88f790b0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x564a88f79210 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x564a88f79358 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x564a88f792c8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x564a88f794a8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x564a88f79418 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x564a88f79570 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x564a88f79630 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x564a88f796d0 <col:53> "" ""
|-CXXMethodDecl 0x564a88f79768 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x564a88f79808 <col:47> "" ""
|-AccessSpecDecl 0x564a88f79878 <line:303:3, col:10> col:3 private
|-FieldDecl 0x564a88f798b8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x564a88f79920 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x564a88f79970 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88f79a88 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x564a88f79b18 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x564a88f79c48 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x564a88f79ca8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x564a88f79d08 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x564a88ff34a8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x564a88ff3580 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x564a88ff3838 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x564a88ff3838
| | | `-ParmVarDecl 0x564a88ff3948 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x564a88ff39e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x564a88ff39e8
| |   `-ParmVarDecl 0x564a88ff3af8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x564a88f79dc8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x564a88f79e28 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x564a88f79dc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x564a88f79c48 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x564a88f79e80 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x564a88f79dc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x564a88f79ca8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x564a88f79ed8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x564a88f79dc8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x564a88f79d08 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x564a88f79f30 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x564a88ff33b8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564a88ff3d18 <col:11>
| |-CXXConstructorDecl 0x564a88ff3688 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x564a88ff3688
| | `-ParmVarDecl 0x564a88ff3798 <col:11> col:11 'const Task::Status &'
| |-CXXConstructorDecl 0x564a88ff3b98 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x564a88ff3b98
| | `-ParmVarDecl 0x564a88ff3ca8 <col:11> col:11 'Task::Status &&'
| `-CXXDestructorDecl 0x564a88df5dc8 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial
|-FieldDecl 0x564a88f79ff8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x564a88f7a070 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x564a88f7a0d8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x564a88f7a138 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x564a88f7a198 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x564a88f7a1e8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88f7a308 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x564a88f7a3a8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x564a88f7a408 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x564a88fea8c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x564a88fea8c8
| | `-ParmVarDecl 0x564a88fea9d8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x564a88feaa78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x564a88feaa78
| | `-ParmVarDecl 0x564a88feab88 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x564a88feabf8 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x564a88feb478 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x564a88feb478
| | `-ParmVarDecl 0x564a88feb588 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x564a88feb5f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x564a88feb5f8
| | `-ParmVarDecl 0x564a88feb708 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x564a88ff3d78 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x564a88ff3e50 <col:11>
|-FieldDecl 0x564a88f7a480 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x564a88f7a5c8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x564a88f7a508 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x564a88f7a778 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x564a88f7a688 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x564a88f7a840 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x564a88f7a900 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x564a88f7a9c0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x564a88f7c078 <col:41, line:355:5>
|   `-ReturnStmt 0x564a88f7c068 <line:354:9, col:38>
|     `-BinaryOperator 0x564a88f7c048 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x564a88f7c018 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x564a88f7bfc8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x564a88f7a408
|       |   `-MemberExpr 0x564a88f7bf98 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x564a88f7a480
|       |     `-CXXThisExpr 0x564a88f7bf88 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x564a88f7c030 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x564a88f7bff8 <col:38> 'int' 0
|-CXXMethodDecl 0x564a88f7aa80 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x564a88f7abc0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x564a88f7ab30 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x564a88f7ad38 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x564a88f7ac78 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x564a88f7ae80 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x564a88f7adf0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x564a88f7af48 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x564a88f7b110 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x564a88f7aff8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x564a88f7b078 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x564a88f7b210 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x564a88f7b2a0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a890aae88 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Storage *'
|-CXXRecordDecl 0x564a890ab098 prev 0x564a890aae88 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564a890ac0b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Storage *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x564a890ac060 'typename array_memory<Storage *>::type' sugar
|   `-TypedefType 0x564a890ac040 'conditional<true, sized_array_memory<8>, typed_array_memory<Storage *> >::type' sugar
|     |-Typedef 0x564a890abef0 'type'
|     `-SubstTemplateTypeParmType 0x564a88f8e220 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x564a88ce9d50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88ce9cf8 'T'
|       `-RecordType 0x564a88f8dd70 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x564a88f8dc88 'sized_array_memory'
|-FieldDecl 0x564a890ac1b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Storage *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x564a890ac200 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564a890ac238 <line:118:5, col:15> col:15 value_type 'Storage *':'Storage *'
| `-SubstTemplateTypeParmType 0x564a890ab130 'Storage *' sugar
|   |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564a88d1e780 'T'
|   `-PointerType 0x564a88ef0e20 'Storage *'
|     `-RecordType 0x564a88ef0a90 'Storage'
|       `-CXXRecord 0x564a88ef0a00 'Storage'
|-TypedefDecl 0x564a890ac2f8 <line:119:5, col:16> col:16 reference 'Storage *&'
| `-LValueReferenceType 0x564a890ac2c0 'Storage *&'
|   `-SubstTemplateTypeParmType 0x564a890ab130 'Storage *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88ef0e20 'Storage *'
|       `-RecordType 0x564a88ef0a90 'Storage'
|         `-CXXRecord 0x564a88ef0a00 'Storage'
|-TypedefDecl 0x564a890ac3b8 <line:120:5, col:22> col:22 const_reference 'Storage *const &'
| `-LValueReferenceType 0x564a890ac380 'Storage *const &'
|   `-QualType 0x564a890ab131 'Storage *const' const
|     `-SubstTemplateTypeParmType 0x564a890ab130 'Storage *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88ef0e20 'Storage *'
|         `-RecordType 0x564a88ef0a90 'Storage'
|           `-CXXRecord 0x564a88ef0a00 'Storage'
|-TypedefDecl 0x564a890ac478 <line:121:5, col:16> col:16 pointer 'Storage **'
| `-PointerType 0x564a890ac440 'Storage **'
|   `-SubstTemplateTypeParmType 0x564a890ab130 'Storage *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88ef0e20 'Storage *'
|       `-RecordType 0x564a88ef0a90 'Storage'
|         `-CXXRecord 0x564a88ef0a00 'Storage'
|-TypedefDecl 0x564a890ac538 <line:122:5, col:22> col:22 const_pointer 'Storage *const *'
| `-PointerType 0x564a890ac500 'Storage *const *'
|   `-QualType 0x564a890ab131 'Storage *const' const
|     `-SubstTemplateTypeParmType 0x564a890ab130 'Storage *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88ef0e20 'Storage *'
|         `-RecordType 0x564a88ef0a90 'Storage'
|           `-CXXRecord 0x564a88ef0a00 'Storage'
|-TypedefDecl 0x564a890ad130 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Storage *>::type':'Storage *'
| `-ElaboratedType 0x564a890ad0e0 'typename fast_argument<Storage *>::type' sugar
|   `-TypedefType 0x564a890ad0c0 'fast_argument<Storage *, false>::type' sugar
|     |-Typedef 0x564a890ad030 'type'
|     `-SubstTemplateTypeParmType 0x564a890acdf0 'Storage *' sugar
|       |-TemplateTypeParmType 0x564a88cf2b70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88cf2b20 'T'
|       `-PointerType 0x564a88ef0e20 'Storage *'
|         `-RecordType 0x564a88ef0a90 'Storage'
|           `-CXXRecord 0x564a88ef0a00 'Storage'
|-TypedefDecl 0x564a890ad198 <line:126:5, col:22> col:22 const_access_type 'Storage *const &'
| `-LValueReferenceType 0x564a890ac380 'Storage *const &'
|   `-QualType 0x564a890ab131 'Storage *const' const
|     `-SubstTemplateTypeParmType 0x564a890ab130 'Storage *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88ef0e20 'Storage *'
|         `-RecordType 0x564a88ef0a90 'Storage'
|           `-CXXRecord 0x564a88ef0a00 'Storage'
|-TypedefDecl 0x564a890ad1f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564a889c4580 'int'
|-TypedefDecl 0x564a890ad258 <line:130:5, col:16> col:16 iterator 'Storage **'
| `-PointerType 0x564a890ac440 'Storage **'
|   `-SubstTemplateTypeParmType 0x564a890ab130 'Storage *' sugar
|     |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564a88d1e780 'T'
|     `-PointerType 0x564a88ef0e20 'Storage *'
|       `-RecordType 0x564a88ef0a90 'Storage'
|         `-CXXRecord 0x564a88ef0a00 'Storage'
|-TypedefDecl 0x564a890ad2c0 <line:131:5, col:22> col:22 const_iterator 'Storage *const *'
| `-PointerType 0x564a890ac500 'Storage *const *'
|   `-QualType 0x564a890ab131 'Storage *const' const
|     `-SubstTemplateTypeParmType 0x564a890ab130 'Storage *' sugar
|       |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564a88d1e780 'T'
|       `-PointerType 0x564a88ef0e20 'Storage *'
|         `-RecordType 0x564a88ef0a90 'Storage'
|           `-CXXRecord 0x564a88ef0a00 'Storage'
|-EnumDecl 0x564a890ad318 <line:134:5> col:5
| `-EnumConstantDecl 0x564a890ad410 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Storage *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564a890ad3f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564a88d1f998 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564a88d1f970 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564a88d1f950 <col:40> 'int' 1
|-CXXConstructorDecl 0x564a890ad498 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x564a890ad728 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Storage *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a890ad550 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a890ad5f0 <col:41, col:61> col:61 v 'Vector<Storage *>::value_argument_type':'Storage *'
|-CXXConstructorDecl 0x564a890ad9e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Storage *> &)' inline
| `-ParmVarDecl 0x564a890ad8d0 <col:19, col:36> col:36 x 'const Vector<Storage *> &'
|-CXXConstructorDecl 0x564a890adca8 <line:141:5, col:32> col:12 Vector 'void (Vector<Storage *> &&)' inline
| `-ParmVarDecl 0x564a890adb90 <col:19, col:31> col:31 x 'Vector<Storage *> &&'
|-CXXMethodDecl 0x564a890adff0 <line:144:5, col:51> col:23 operator= 'Vector<Storage *> &(const Vector<Storage *> &)' inline
| `-ParmVarDecl 0x564a890aded0 <col:33, col:50> col:50 x 'const Vector<Storage *> &'
|-CXXMethodDecl 0x564a890ae300 <line:146:5, col:46> col:23 operator= 'Vector<Storage *> &(Vector<Storage *> &&)' inline
| `-ParmVarDecl 0x564a890ae1e0 <col:33, col:45> col:45 x 'Vector<Storage *> &&'
|-CXXMethodDecl 0x564a890ae5f0 <line:148:5, col:70> col:23 assign 'Vector<Storage *> &(Vector::size_type, Vector<Storage *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a890ae438 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a890ae4b0 <col:43, col:69> col:63 v 'Vector<Storage *>::value_argument_type':'Storage *'
|-CXXMethodDecl 0x564a890ae748 <line:150:5, col:55> col:49 begin 'Vector<Storage *>::iterator ()'
| |-NoInlineAttr 0x564a890ae828 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890ae880 <col:30> Inherited
|-CXXMethodDecl 0x564a890ae8c8 <line:151:5, col:53> col:49 end 'Vector<Storage *>::iterator ()'
| |-NoInlineAttr 0x564a890ae978 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890ae9d0 <col:30> Inherited
|-CXXMethodDecl 0x564a890aea98 <line:152:5, col:63> col:55 begin 'Vector<Storage *>::const_iterator () const'
| |-NoInlineAttr 0x564a890aeb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890aeba0 <col:30> Inherited
|-CXXMethodDecl 0x564a890aebe8 <line:153:5, col:61> col:55 end 'Vector<Storage *>::const_iterator () const'
| |-NoInlineAttr 0x564a890aec98 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890aecf0 <col:30> Inherited
|-CXXMethodDecl 0x564a890aed38 <line:154:5, col:64> col:55 cbegin 'Vector<Storage *>::const_iterator () const'
| |-NoInlineAttr 0x564a890aede8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890aee40 <col:30> Inherited
|-CXXMethodDecl 0x564a890aee88 <line:155:5, col:62> col:55 cend 'Vector<Storage *>::const_iterator () const'
| |-NoInlineAttr 0x564a890aef38 <col:20> Inherited
| `-OptimizeNoneAttr 0x564a890aef90 <col:30> Inherited
|-CXXMethodDecl 0x564a890aefb8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a890af068 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564a890af118 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564a890af2d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Storage *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a890af1c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564a890af240 <col:37, col:63> col:57 v 'Vector<Storage *>::value_argument_type':'Storage *'
|-CXXMethodDecl 0x564a890af428 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564a890af398 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890af5d8 <line:163:5, col:65> col:43 operator[] 'Storage *&(Vector::size_type)'
| |-ParmVarDecl 0x564a890af4e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a890af690 <col:20>
| `-OptimizeNoneAttr 0x564a890af6e8 <col:30>
|-CXXMethodDecl 0x564a890af808 <line:164:5, col:73> col:49 operator[] 'Storage *const &(Vector::size_type) const'
| |-ParmVarDecl 0x564a890af710 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564a890af8c0 <col:20>
| `-OptimizeNoneAttr 0x564a890af918 <col:30>
|-CXXMethodDecl 0x564a890af9d0 <line:165:5, col:29> col:15 at 'Storage *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564a890af940 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890afb18 <line:166:5, col:37> col:21 at 'Storage *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a890afa88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890afc48 <line:167:5, col:21> col:15 front 'Storage *&()' inline
|-CXXMethodDecl 0x564a890afd78 <line:168:5, col:29> col:21 front 'Storage *const &() const' inline
|-CXXMethodDecl 0x564a890afe48 <line:169:5, col:20> col:15 back 'Storage *&()' inline
|-CXXMethodDecl 0x564a890aff18 <line:170:5, col:28> col:21 back 'Storage *const &() const' inline
|-CXXMethodDecl 0x564a890b0058 <line:172:5, col:39> col:15 unchecked_at 'Storage *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564a890affc8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890b01a0 <line:173:5, col:47> col:21 unchecked_at 'Storage *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564a890b0110 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564a890b02e8 <line:174:5, col:59> col:15 at_u 'Storage *&(Vector::size_type)' inline
| |-ParmVarDecl 0x564a890b0258 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a890b03a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564a890b04a0 <line:175:5, col:71> col:21 at_u 'Storage *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564a890b0410 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564a890b0558 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564a890b0618 <line:177:5, col:20> col:15 data 'Storage **()' inline
|-CXXMethodDecl 0x564a890b0718 <line:178:5, col:28> col:21 data 'Storage *const *() const' inline
|-CXXMethodDecl 0x564a890b08c8 <line:180:5, col:48> col:17 push_back 'void (Vector<Storage *>::value_argument_type)' inline
| `-ParmVarDecl 0x564a890b07d8 <col:27, col:47> col:47 v 'Vector<Storage *>::value_argument_type':'Storage *'
|-FunctionTemplateDecl 0x564a890b1088 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564a890b0980 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Storage *>':'fast_argument<Storage *, false>'
| `-CXXMethodDecl 0x564a890b0fe8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Storage *&&)' inline
|   `-ParmVarDecl 0x564a890b0ee8 <col:58, col:62> col:62 v 'Storage *&&'
|-CXXMethodDecl 0x564a890b1168 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564a890b12b8 <line:186:5, col:49> col:17 push_front 'void (Vector<Storage *>::value_argument_type)' inline
| `-ParmVarDecl 0x564a890b1228 <col:28, col:48> col:48 v 'Vector<Storage *>::value_argument_type':'Storage *'
|-CXXMethodDecl 0x564a890b1370 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564a890b15b8 <line:189:5, col:62> col:21 insert 'Vector<Storage *>::iterator (Vector<Storage *>::iterator, Vector<Storage *>::value_argument_type)' inline
| |-ParmVarDecl 0x564a890b1430 <col:28, col:37> col:37 it 'Vector<Storage *>::iterator':'Storage **'
| `-ParmVarDecl 0x564a890b14a8 <col:41, col:61> col:61 v 'Vector<Storage *>::value_argument_type':'Storage *'
|-CXXMethodDecl 0x564a890b1778 <line:190:5, col:38> col:21 erase 'Vector<Storage *>::iterator (Vector<Storage *>::iterator)' inline
| `-ParmVarDecl 0x564a890b1688 <col:27, col:36> col:36 it 'Vector<Storage *>::iterator':'Storage **'
|-CXXMethodDecl 0x564a890b19c8 <line:191:5, col:49> col:21 erase 'Vector<Storage *>::iterator (Vector<Storage *>::iterator, Vector<Storage *>::iterator)' inline
| |-ParmVarDecl 0x564a890b1840 <col:27, col:36> col:36 a 'Vector<Storage *>::iterator':'Storage **'
| `-ParmVarDecl 0x564a890b18b8 <col:39, col:48> col:48 b 'Vector<Storage *>::iterator':'Storage **'
|-CXXMethodDecl 0x564a890b1a88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564a890b1ce8 <line:195:5, col:34> col:17 swap 'void (Vector<Storage *> &)' inline
| `-ParmVarDecl 0x564a890b1bf0 <col:22, col:33> col:33 x 'Vector<Storage *> &'
`-CXXDestructorDecl 0x564a890b1db8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x564a88df5eb0 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.19 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.19 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ef76f8 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88ef7818 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x564a88ef78b8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x564a88ef7918 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x564a890992c8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x564a890992c8

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ef7980 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88ef7a98 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x564a88ef7b38 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x564a88ef7bc8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x564a89097e60 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564a89098298 <col:11>
|-CXXConstructorDecl 0x564a89097f68 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x564a89097f68
| `-ParmVarDecl 0x564a89098078 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x564a89098118 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x564a89098118
| `-ParmVarDecl 0x564a89098228 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x564a89098f90 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ef5690 prev 0x564a88ff8820 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88ef5788 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x564a88ef5818 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x564a88ef5918 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x564a88ef5890 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x564a88f3c260 'NotifierSignal'
|   | `-CXXRecord 0x564a88ef5690 'NotifierSignal'
|   `-ParenType 0x564a89066ef0 'bool () const' sugar
|     `-FunctionProtoType 0x564a88a70b40 'bool () const' const cdecl
|       `-BuiltinType 0x564a889c4500 'bool'
|-CXXConstructorDecl 0x564a88ef59a8 <line:16:5, col:27> col:12 used NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x564a88ef5be8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x564a88ef5a60 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x564a88ef5ad8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564a88ef5d98 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x564a88ef5cd8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x564a88ef5e90 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x564a88ef5fb8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x564a88ef6078 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x564a88ef6138 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x564a88ef61f8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x564a88ef62e8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x564a88ef6458 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x564a88ef65d8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x564a88ef6518 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x564a88ef66a0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x564a88ef6760 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x564a88ef6820 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x564a88ef68e0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x564a88ef6b98 <line:36:5, col:76> col:17
| `-FunctionDecl 0x564a88ef6ad8 parent 0x564a889c4488 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x564a88ef6990 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x564a88ef6a08 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x564a88ef6db8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x564a88ef6cf8 parent 0x564a889c4488 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x564a88ef6be8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x564a88ef6c60 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x564a88ef6ec8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x564a88ef6e08 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x564a88ef7010 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x564a88ef6f80 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x564a88ef72d8 <line:41:5, col:78> col:27
| `-FunctionDecl 0x564a88ef7218 parent 0x564a889c4488 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x564a88ef70c8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x564a88ef7140 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x564a88ef73e8 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x564a88ef7328 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x564a88ef7568 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x564a88ef74a0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x564a88ef7630 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x564a88ef76d0 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x564a88ef76f8 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88ef7818 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x564a88ef78b8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x564a88ef7918 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x564a890992c8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x564a890992c8
|-CXXRecordDecl 0x564a88ef7980 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88ef7a98 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x564a88ef7b38 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x564a88ef7bc8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x564a89097e60 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564a89098298 <col:11>
| |-CXXConstructorDecl 0x564a89097f68 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x564a89097f68
| | `-ParmVarDecl 0x564a89098078 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x564a89098118 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x564a89098118
| | `-ParmVarDecl 0x564a89098228 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x564a89098f90 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x564a88ef7c40 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x564a88ef7ca0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x564a88ef7cf0 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x564a88ef7df0 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x564a88ef7ff0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ef7dd0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x564a88ef7db0 <col:14> 'int' 1
| |-EnumConstantDecl 0x564a88ef7e80 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x564a88ef8008 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ef7e60 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x564a88ef7e40 <col:30> 'int' 2
| |-EnumConstantDecl 0x564a88ef7f10 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x564a88ef8020 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88ef7ef0 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x564a88ef7ed0 <col:52> 'int' 4
| `-EnumConstantDecl 0x564a88ef7fa0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x564a88ef8038 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88ef7f80 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x564a88ef7f60 <col:23> 'int' 8
|-VarDecl 0x564a88ef8060 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x564a88ef8168 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x564a88ef80d8 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x564a88ef8330 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x564a88ef8220 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x564a88ef8298 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x564a88ef8568 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x564a88ef8418 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x564a88ef8490 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a890a9f68 <../elements/standard/unqueue2.hh:43:1, line:68:1> line:43:7 class Unqueue2 definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x564a890aa0c8 <col:1, col:7> col:7 implicit referenced class Unqueue2
|-AccessSpecDecl 0x564a890aa158 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x564a890aa1e0 <line:45:5, col:14> col:5 Unqueue2 'void ()'
|-CXXMethodDecl 0x564a890aa2e0 <line:47:5, col:57> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x564a88f422f0 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x564a890b2778 <col:36, col:57>
|   `-ReturnStmt 0x564a890b2768 <col:38, col:45>
|     `-ImplicitCastExpr 0x564a890b2750 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x564a890b2730 <col:45> 'const char [9]' lvalue "Unqueue2"
|-CXXMethodDecl 0x564a890aa3a8 <line:48:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x564a88f423b8 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x564a890b27d8 <col:36, col:56>
|   `-ReturnStmt 0x564a890b27c8 <col:38, col:45>
|     `-ImplicitCastExpr 0x564a890b27b0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x564a890b2790 <col:45> 'const char []' lvalue Var 0x564a88f42610 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x564a890aa470 <line:49:5, col:59> col:17 processing 'const char *() const'
| |-Overrides: [ 0x564a88f42728 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x564a890b2838 <col:36, col:59>
|   `-ReturnStmt 0x564a890b2828 <col:38, col:45>
|     `-ImplicitCastExpr 0x564a890b2810 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x564a890b27f0 <col:45> 'const char []' lvalue Var 0x564a88f42a08 'PULL_TO_PUSH' 'const char []'
|-CXXMethodDecl 0x564a890aa740 <line:51:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x564a88f43b20 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x564a890aa5f0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x564a890aa668 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x564a890aa898 <line:52:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x564a88f43d70 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x564a890aa800 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x564a890aa960 <line:53:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x564a88f43bf0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x564a890aaaa0 <line:55:5, col:25> col:10 run_task 'bool (Task *)'
| |-Overrides: [ 0x564a88f3cfb8 Element::run_task 'bool (Task *)' ]
| `-ParmVarDecl 0x564a890aaa10 <col:19, col:24> col:25 'Task *'
|-CXXMethodDecl 0x564a890aac70 <line:57:5, col:48> col:19 read_param 'String (Element *, void *)' static
| |-ParmVarDecl 0x564a890aab58 <col:30, col:39> col:39 e 'Element *'
| `-ParmVarDecl 0x564a890aabd8 <col:42, col:47> col:48 'void *'
|-AccessSpecDecl 0x564a890aad20 <line:59:3, col:10> col:3 private
|-FieldDecl 0x564a890aad60 <line:61:5, col:9> col:9 _burst 'int'
|-FieldDecl 0x564a890aadc8 <line:62:5, col:14> col:14 _count 'unsigned int'
|-FieldDecl 0x564a890aae28 <line:63:5, col:10> col:10 _task 'Task'
|-FieldDecl 0x564a890b1ea0 <line:64:5, col:23> col:23 _queues 'Vector<Storage *>':'Vector<Storage *>'
|-FieldDecl 0x564a890b1f00 <line:65:5, col:10> col:10 _explicit_queues 'bool'
|-FieldDecl 0x564a890b1f60 <line:66:5, col:20> col:20 _signal 'NotifierSignal'
|-CXXConstructorDecl 0x564a890b1fd8 <line:43:7> col:7 implicit Unqueue2 'void (const Unqueue2 &)' inline default_delete noexcept-unevaluated 0x564a890b1fd8
| `-ParmVarDecl 0x564a890b20e8 <col:7> col:7 'const Unqueue2 &'
|-CXXConstructorDecl 0x564a890b2188 <col:7> col:7 implicit Unqueue2 'void (Unqueue2 &&)' inline default_delete noexcept-unevaluated 0x564a890b2188
| `-ParmVarDecl 0x564a890b2298 <col:7> col:7 'Unqueue2 &&'
|-CXXMethodDecl 0x564a890b2338 <col:7> col:7 implicit operator= 'Unqueue2 &(const Unqueue2 &)' inline default_delete noexcept-unevaluated 0x564a890b2338
| `-ParmVarDecl 0x564a890b2448 <col:7> col:7 'const Unqueue2 &'
|-CXXMethodDecl 0x564a890b24b8 <col:7> col:7 implicit operator= 'Unqueue2 &(Unqueue2 &&)' inline default_delete noexcept-unevaluated 0x564a890b24b8
| `-ParmVarDecl 0x564a890b25c8 <col:7> col:7 'Unqueue2 &&'
`-CXXDestructorDecl 0x564a890b2650 <col:7> col:7 implicit ~Unqueue2 'void ()' inline default noexcept-unevaluated 0x564a890b2650
  `-Overrides: [ 0x564a88f3c7d8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.Unqueue2 = type { %class.Element.base, i32, i32, %class.Task, %class.Vector.19, i8, [7 x i8], %class.NotifierSignal }
  NonVirtualBaseLLVMType:%class.Unqueue2 = type { %class.Element.base, i32, i32, %class.Task, %class.Vector.19, i8, [7 x i8], %class.NotifierSignal }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a890df3e8 prev 0x564a88f031f8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a890df4e0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x564a890df570 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x564a890df678 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x564a890df5a8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x564a890e0a50 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x564a890e0a30 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x564a890e05c8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x564a890e0ae0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x564a890e0aa0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x564a890df5a8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x564a890e0630 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x564a890e0b60 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x564a890e0b20 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x564a890e0690 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x564a890e0ba0 <col:54> 'bool' false
| `-CompoundStmt 0x564a890e0ca8 <col:61, line:38:5>
|   `-BinaryOperator 0x564a890e0c88 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x564a890e0c20 <col:9> 'const Element *' lvalue ->_context 0x564a890e0568
|     | `-CXXThisExpr 0x564a890e0c10 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x564a890e0c70 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x564a890e0c50 <col:20> 'int' 0
|-CXXConstructorDecl 0x564a890df888 <line:44:5, line:46:5> line:44:5 used ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x564a890df738 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x564a890df7b0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x564a890e0a88 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x564a890e0a68 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x564a890e0568 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x564a890e0d00 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x564a890e0cc0 <col:20> 'const Element *' lvalue ParmVar 0x564a890df738 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x564a890e05c8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x564a890e0d80 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x564a890e0d40 <col:36> 'ErrorHandler *' lvalue ParmVar 0x564a890df7b0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x564a890e0630 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x564a890e0e00 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x564a890e0dc0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x564a890e0690 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x564a890e0e40 <col:73> 'bool' false
| `-CompoundStmt 0x564a890e0eb8 <col:80, line:46:5>
|-CXXMethodDecl 0x564a890df9b8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x564a890e0f30 <col:36, line:51:5>
|   `-ReturnStmt 0x564a890e0f20 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x564a890e0f08 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x564a890e0ed8 <col:16> 'const Element *const' lvalue ->_context 0x564a890e0568
|         `-CXXThisExpr 0x564a890e0ec8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x564a890dfaa8 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x564a890e0fb0 <col:32, line:57:5>
|   `-ReturnStmt 0x564a890e0fa0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x564a890e0f88 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x564a890e0f58 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x564a890e05c8
|         `-CXXThisExpr 0x564a890e0f48 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x564a890dfb68 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x564a890dfcf0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x564a890dfc20 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x564a890dfe40 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x564a890dfdb0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x564a890dff90 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x564a890dff00 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x564a890e0198 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x564a890e0048 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x564a890e00c0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x564a890e0478 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x564a890e0258 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x564a890e02d8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x564a890e0350 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x564a890e0530 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x564a890e0568 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x564a890e05c8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x564a890e0630 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x564a890e0690 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x564a890e06e0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x564a890e06e0
| `-ParmVarDecl 0x564a890e07f8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x564a890e0898 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x564a890e0898
| `-ParmVarDecl 0x564a890e09a8 <col:7> col:7 'const ArgContext &'
|-CXXDestructorDecl 0x564a88df8580 <col:7> col:7 implicit referenced ~ArgContext 'void () noexcept' inline default trivial
`-CXXConstructorDecl 0x564a88dfa978 <col:7> col:7 implicit constexpr ArgContext 'void (ArgContext &&)' inline default trivial noexcept-unevaluated 0x564a88dfa978
  `-ParmVarDecl 0x564a88dfaa88 <col:7> col:7 'ArgContext &&'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a89106008 prev 0x564a890e8198 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a89106100 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x564a891061f0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x564a89123060 <col:16, line:828:9>
|-CXXDestructorDecl 0x564a891062e0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x564a89123070 <col:25, line:830:9>
|-CXXMethodDecl 0x564a891063e0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x564a89106490 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x564a89106538 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x564a89106538
| `-ParmVarDecl 0x564a89106648 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x564a89106e08 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x564a89106e08
  `-ParmVarDecl 0x564a89106f18 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a890e7fa8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x564a890e8108 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x564a890e8198 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x564a890e8250 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x564a890e8358 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x564a890e8288 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x564a891093e8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x564a891093c8 <col:31> 'int' 0
|-CXXConstructorDecl 0x564a890e8678 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x564a890e84f0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x564a890e8568 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x564a89109420 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x564a89109400 <col:59> 'int' 0
|-CXXConstructorDecl 0x564a890e8850 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x564a890e8740 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x564a890e87b8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x564a89109458 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x564a89109438 <col:55> 'int' 0
|-CXXConstructorDecl 0x564a890e8c08 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x564a890e89f0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x564a890e8a68 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x564a890e8ae0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x564a89109490 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x564a89109470 <col:31> 'int' 0
|-CXXConstructorDecl 0x564a890e8dc8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x564a890e8d08 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x564a890e8ec0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x564a890e90a8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x564a890e8fb0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x564a890e9198 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x564a89109840 <col:24, line:291:5>
|   `-ReturnStmt 0x564a89109830 <line:290:9, col:79>
|     `-BinaryOperator 0x564a89109810 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x564a891096e8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x564a89109640 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x564a89109620 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x564a89109518 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x564a89109500 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x564a891094e8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x564a891094b8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x564a89107e30
|       | |   |       `-CXXThisExpr 0x564a891094a8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x564a89109608 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x564a891095f0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x564a891095b8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x564a89109588 <col:28, col:35> '<bound member function type>' ->size 0x564a8901a848
|       | |           `-ImplicitCastExpr 0x564a891095d8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x564a89109570 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x564a89109540 <col:28> 'Vector<String> *const' lvalue ->_conf 0x564a89107e30
|       | |                 `-CXXThisExpr 0x564a89109530 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x564a891096d0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x564a891096b8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x564a891096a0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x564a89109670 <col:47> 'Args::Slot *const' lvalue ->_slots 0x564a89107fa0
|       |         `-CXXThisExpr 0x564a89109660 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x564a891097f0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x564a891097d8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x564a891097c0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x564a89109780 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x564a89109768 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x564a89109718 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x564a89108050
|         |     |   `-CXXThisExpr 0x564a89109708 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x564a89109748 <col:73> 'int' 0
|         `-IntegerLiteral 0x564a891097a0 <col:79> 'int' 0
|-CXXMethodDecl 0x564a890e9258 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x564a89109a18 <col:32, line:296:5>
|   `-ReturnStmt 0x564a89109a08 <line:295:9, col:49>
|     `-BinaryOperator 0x564a891099e8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x564a891098c8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x564a891098b0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x564a89109898 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x564a89109868 <col:17> 'Args::Slot *const' lvalue ->_slots 0x564a89107fa0
|       |       `-CXXThisExpr 0x564a89109858 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x564a891099c8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x564a891099b0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x564a89109998 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x564a89109958 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x564a89109940 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x564a891098f0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x564a89108050
|         |     |   `-CXXThisExpr 0x564a891098e0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x564a89109920 <col:43> 'int' 0
|         `-IntegerLiteral 0x564a89109978 <col:49> 'int' 0
|-CXXMethodDecl 0x564a890e9348 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x564a89109c28 <col:19, line:306:5>
|   |-IfStmt 0x564a89109b48 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x564a89109a88 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x564a89109a70 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x564a89109a40 <col:13> 'Vector<String> *' lvalue ->_conf 0x564a89107e30
|   | |     `-CXXThisExpr 0x564a89109a30 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x564a89109b28 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x564a89109af8 <col:13, col:20> '<bound member function type>' ->clear 0x564a8901e788
|   |     `-ImplicitCastExpr 0x564a89109ae0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x564a89109ab0 <col:13> 'Vector<String> *' lvalue ->_conf 0x564a89107e30
|   |         `-CXXThisExpr 0x564a89109aa0 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x564a89109bd0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x564a89109ba0 <col:9, col:16> '<bound member function type>' .clear 0x564a89033318
|   |   `-MemberExpr 0x564a89109b70 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x564a89107f40
|   |     `-CXXThisExpr 0x564a89109b60 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x564a89109c18 <line:305:9, col:17>
|     `-UnaryOperator 0x564a89109c00 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a89109bf0 <col:17> 'Args *' this
|-CXXMethodDecl 0x564a890e95c8 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x564a890e94d0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x564a890e9748 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x564a890e9680 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x564a890e9ac8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x564a890e97f0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x564a890e9a28 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x564a890e9898 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x564a890e9910 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x564a89109f58 <col:67, line:327:5>
|     |-WhileStmt 0x564a89109f08 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x564a89109d20 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x564a89109c90 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x564a8909e8d0 0x564a89072580 0x564a88efb6b8 0x564a88d4d7c8 0x564a88d4d4a0 0x564a88cde370 0x564a88c31330 0x564a88c30fe0 0x564a88c308d0 0x564a88bf1860
|     | | |-DeclRefExpr 0x564a89109c50 <col:16> 'Iter' lvalue ParmVar 0x564a890e9898 'begin' 'Iter'
|     | | `-DeclRefExpr 0x564a89109c70 <col:25> 'Iter' lvalue ParmVar 0x564a890e9910 'end' 'Iter'
|     | `-CompoundStmt 0x564a89109ee8 <col:30, line:325:9>
|     |   |-CallExpr 0x564a89109e88 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x564a89109d68 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x564a89109e58 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x564a89109de8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|     |   |   `-DeclRefExpr 0x564a89109dc8 <col:24> 'Iter' lvalue ParmVar 0x564a890e9898 'begin' 'Iter'
|     |   `-UnaryOperator 0x564a89109ed0 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x564a89109eb0 <col:15> 'Iter' lvalue ParmVar 0x564a890e9898 'begin' 'Iter'
|     `-ReturnStmt 0x564a89109f48 <line:326:9, col:17>
|       `-UnaryOperator 0x564a89109f30 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a89109f20 <col:17> 'Args *' this
|-CXXMethodDecl 0x564a890e9bd0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x564a890e9b40 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x564a890e9d18 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x564a890e9c88 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x564a890e9de0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x564a8910a038 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x564a89109fd8 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x564a89109f88 <col:9> '<bound member function type>' ->reset_from 0x564a891083c8
|   | | `-CXXThisExpr 0x564a89109f78 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x564a89109fb8 <col:20> 'int' 0
|   `-ReturnStmt 0x564a8910a028 <line:352:9, col:17>
|     `-UnaryOperator 0x564a8910a010 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a8910a000 <col:17> 'Args *' this
|-VarDecl 0x564a890e9e98 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x564a890e9f00 <col:38> 'int' 1
|-VarDecl 0x564a890e9f90 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x564a890e9ff8 <col:39> 'int' 2
|-VarDecl 0x564a890ea088 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x564a890ea0f0 <col:39> 'int' 4
|-VarDecl 0x564a890ea180 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x564a890ea1e8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x564a890ea568 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x564a890ea260 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x564a890ea4c8 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x564a890ea310 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x564a890ea3b8 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x564a8910a190 <col:43, line:371:5>
| |   `-ReturnStmt 0x564a8910a180 <line:370:9, col:34>
| |     `-CallExpr 0x564a8910a148 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x564a8910a068 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x564a8910a0e8 <col:21> 'const char *' lvalue ParmVar 0x564a890ea310 'keyword' 'const char *'
| |       |-IntegerLiteral 0x564a8910a108 <col:30> 'int' 0
| |       `-DeclRefExpr 0x564a8910a128 <col:33> 'T' lvalue ParmVar 0x564a890ea3b8 'x' 'T &'
| `-CXXMethodDecl 0x564a88df9bf8 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x564a88df9a18 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x564a88df9ae8 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x564a890ea898 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x564a890ea5d0 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x564a890ea7f8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x564a890ea680 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ea728 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x564a8910a2e0 <col:45, line:375:5>
|     `-ReturnStmt 0x564a8910a2d0 <line:374:9, col:42>
|       `-CallExpr 0x564a8910a298 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910a1b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910a238 <col:21> 'const char *' lvalue ParmVar 0x564a890ea680 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910a258 <col:30> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int'
|         `-DeclRefExpr 0x564a8910a278 <col:41> 'T' lvalue ParmVar 0x564a890ea728 'x' 'T &'
|-FunctionTemplateDecl 0x564a890eabc8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x564a890ea900 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x564a890eab28 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x564a890ea9b0 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x564a890eaa58 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x564a8910a430 <col:45, line:379:5>
| |   `-ReturnStmt 0x564a8910a420 <line:378:9, col:43>
| |     `-CallExpr 0x564a8910a3e8 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x564a8910a308 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x564a8910a388 <col:21> 'const char *' lvalue ParmVar 0x564a890ea9b0 'keyword' 'const char *'
| |       |-DeclRefExpr 0x564a8910a3a8 <col:30> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int'
| |       `-DeclRefExpr 0x564a8910a3c8 <col:42> 'T' lvalue ParmVar 0x564a890eaa58 'x' 'T &'
| `-CXXMethodDecl 0x564a88df8a08 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, int &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x564a88df8828 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x564a88df88f8 <col:39, col:42> col:42 x 'int &'
|-FunctionTemplateDecl 0x564a890eaef8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x564a890eac30 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x564a890eae58 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x564a890eace0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ead88 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x564a8910a630 <col:46, line:383:5>
|     `-ReturnStmt 0x564a8910a620 <line:382:9, col:55>
|       `-CallExpr 0x564a8910a5e8 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910a458 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910a4d8 <col:21> 'const char *' lvalue ParmVar 0x564a890eace0 'keyword' 'const char *'
|         |-BinaryOperator 0x564a8910a5a8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x564a8910a558 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a8910a538 <col:30> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x564a8910a590 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x564a8910a570 <col:42> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x564a8910a5c8 <col:54> 'T' lvalue ParmVar 0x564a890ead88 'x' 'T &'
|-FunctionTemplateDecl 0x564a890eb2f8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x564a890eaf60 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x564a890eb258 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x564a890eb010 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890eb090 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x564a890eb138 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x564a8910a770 <col:54, line:388:5>
|     |-CallExpr 0x564a8910a6f8 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a8910a648 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x564a8910a688 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x564a8910a698 <col:30> 'const char *' lvalue ParmVar 0x564a890eb010 'keyword' 'const char *'
|     | |-DeclRefExpr 0x564a8910a6b8 <col:39> 'int' lvalue ParmVar 0x564a890eb090 'flags' 'int'
|     | `-DeclRefExpr 0x564a8910a6d8 <col:46> 'T' lvalue ParmVar 0x564a890eb138 'x' 'T &'
|     `-ReturnStmt 0x564a8910a760 <line:387:9, col:17>
|       `-UnaryOperator 0x564a8910a748 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a8910a738 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890eb7a8 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x564a890eb368 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x564a890eb3e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x564a890eb708 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x564a890eb4a8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890eb548 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x564a890eb5e8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x564a8910a8e0 <col:74, line:403:5>
|     `-ReturnStmt 0x564a8910a8d0 <line:402:9, col:56>
|       `-CallExpr 0x564a8910a890 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910a7a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910a810 <col:28> 'const char *' lvalue ParmVar 0x564a890eb4a8 'keyword' 'const char *'
|         |-IntegerLiteral 0x564a8910a830 <col:37> 'int' 0
|         |-DeclRefExpr 0x564a8910a850 <col:40> 'T' lvalue ParmVar 0x564a890eb548 'x' 'T &'
|         `-DeclRefExpr 0x564a8910a870 <col:43> 'const V' lvalue ParmVar 0x564a890eb5e8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x564a890ebc18 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x564a890eb818 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x564a890eb898 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x564a890ebb78 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x564a890eb958 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890eb9f8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x564a890eba98 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x564a8910aa48 <col:76, line:407:5>
|     `-ReturnStmt 0x564a8910aa38 <line:406:9, col:65>
|       `-CallExpr 0x564a8910a9f8 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910a908 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910a978 <col:28> 'const char *' lvalue ParmVar 0x564a890eb958 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910a998 <col:37> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int'
|         |-DeclRefExpr 0x564a8910a9b8 <col:49> 'T' lvalue ParmVar 0x564a890eb9f8 'x' 'T &'
|         `-DeclRefExpr 0x564a8910a9d8 <col:52> 'const V' lvalue ParmVar 0x564a890eba98 'default_value' 'const V &'
|-FunctionTemplateDecl 0x564a890ec168 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x564a890ebc88 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x564a890ebd08 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x564a890ec0c8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x564a890ebdc8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ebe48 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x564a890ebee8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x564a890ebf88 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x564a8910abb0 <col:85, line:412:5>
|     |-CallExpr 0x564a8910ab30 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a8910aa60 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x564a8910aaa0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x564a8910aab0 <col:37> 'const char *' lvalue ParmVar 0x564a890ebdc8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x564a8910aad0 <col:46> 'int' lvalue ParmVar 0x564a890ebe48 'flags' 'int'
|     | |-DeclRefExpr 0x564a8910aaf0 <col:53> 'T' lvalue ParmVar 0x564a890ebee8 'x' 'T &'
|     | `-DeclRefExpr 0x564a8910ab10 <col:56> 'const V' lvalue ParmVar 0x564a890ebf88 'default_value' 'const V &'
|     `-ReturnStmt 0x564a8910aba0 <line:411:9, col:17>
|       `-UnaryOperator 0x564a8910ab88 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a8910ab78 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890ec5f8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x564a890ec1e0 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ec258 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x564a890ec558 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x564a890ec318 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x564a890ec390 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x564a890ec438 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x564a8910ad30 <col:53, line:425:5>
| |   `-ReturnStmt 0x564a8910ad20 <line:424:9, col:42>
| |     `-CallExpr 0x564a8910ace0 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x564a8910abe0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x564a8910ac60 <col:21> 'const char *' lvalue ParmVar 0x564a890ec318 'keyword' 'const char *'
| |       |-IntegerLiteral 0x564a8910ac80 <col:30> 'int' 0
| |       |-DeclRefExpr 0x564a8910aca0 <col:33> 'P' lvalue ParmVar 0x564a890ec390 'parser' 'P'
| |       `-DeclRefExpr 0x564a8910acc0 <col:41> 'T' lvalue ParmVar 0x564a890ec438 'x' 'T &'
| `-CXXMethodDecl 0x564a88df9558 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, AnyArg, String &)'
|   |-TemplateArgument type 'AnyArg'
|   |-TemplateArgument type 'String'
|   |-ParmVarDecl 0x564a88df92c0 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x564a88df9368 <col:37, col:39> col:39 parser 'AnyArg':'AnyArg'
|   `-ParmVarDecl 0x564a88df9438 <col:47, col:50> col:50 x 'String &'
|-FunctionTemplateDecl 0x564a890eca48 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x564a890ec668 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ec6e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890ec9a8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x564a890ec7a8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ec820 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x564a890ec8c8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x564a8910aea8 <col:55, line:429:5>
|     `-ReturnStmt 0x564a8910ae98 <line:428:9, col:50>
|       `-CallExpr 0x564a8910ae58 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910ad58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910add8 <col:21> 'const char *' lvalue ParmVar 0x564a890ec7a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910adf8 <col:30> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int'
|         |-DeclRefExpr 0x564a8910ae18 <col:41> 'P' lvalue ParmVar 0x564a890ec820 'parser' 'P'
|         `-DeclRefExpr 0x564a8910ae38 <col:49> 'T' lvalue ParmVar 0x564a890ec8c8 'x' 'T &'
|-FunctionTemplateDecl 0x564a890ece98 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x564a890ecab8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ecb38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890ecdf8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x564a890ecbf8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ecc70 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x564a890ecd18 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x564a8910b020 <col:55, line:433:5>
|     `-ReturnStmt 0x564a8910b010 <line:432:9, col:51>
|       `-CallExpr 0x564a8910afd0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910aed0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910af50 <col:21> 'const char *' lvalue ParmVar 0x564a890ecbf8 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910af70 <col:30> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int'
|         |-DeclRefExpr 0x564a8910af90 <col:42> 'P' lvalue ParmVar 0x564a890ecc70 'parser' 'P'
|         `-DeclRefExpr 0x564a8910afb0 <col:50> 'T' lvalue ParmVar 0x564a890ecd18 'x' 'T &'
|-FunctionTemplateDecl 0x564a890ed2e8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x564a890ecf08 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ecf88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890ed248 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x564a890ed048 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ed0c0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x564a890ed168 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x564a8910b248 <col:56, line:437:5>
|     `-ReturnStmt 0x564a8910b238 <line:436:9, col:63>
|       `-CallExpr 0x564a8910b1f8 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910b048 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910b0c8 <col:21> 'const char *' lvalue ParmVar 0x564a890ed048 'keyword' 'const char *'
|         |-BinaryOperator 0x564a8910b198 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x564a8910b148 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a8910b128 <col:30> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x564a8910b180 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x564a8910b160 <col:42> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x564a8910b1b8 <col:54> 'P' lvalue ParmVar 0x564a890ed0c0 'parser' 'P'
|         `-DeclRefExpr 0x564a8910b1d8 <col:62> 'T' lvalue ParmVar 0x564a890ed168 'x' 'T &'
|-FunctionTemplateDecl 0x564a890ed818 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x564a890ed358 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ed3d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890ed778 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x564a890ed498 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ed518 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x564a890ed590 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x564a890ed638 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x564a8910b3b0 <col:64, line:442:5>
|     |-CallExpr 0x564a8910b330 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a8910b260 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x564a8910b2a0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x564a8910b2b0 <col:30> 'const char *' lvalue ParmVar 0x564a890ed498 'keyword' 'const char *'
|     | |-DeclRefExpr 0x564a8910b2d0 <col:39> 'int' lvalue ParmVar 0x564a890ed518 'flags' 'int'
|     | |-DeclRefExpr 0x564a8910b2f0 <col:46> 'P' lvalue ParmVar 0x564a890ed590 'parser' 'P'
|     | `-DeclRefExpr 0x564a8910b310 <col:54> 'T' lvalue ParmVar 0x564a890ed638 'x' 'T &'
|     `-ReturnStmt 0x564a8910b3a0 <line:441:9, col:17>
|       `-UnaryOperator 0x564a8910b388 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a8910b378 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890ede18 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x564a890ed890 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ed908 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x564a890ed988 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x564a890edd78 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x564a890eda50 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890edac8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x564a890edb68 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x564a890edc38 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x564a8910b548 <col:84, line:458:5>
|     `-ReturnStmt 0x564a8910b538 <line:457:9, col:64>
|       `-CallExpr 0x564a8910b4f0 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910b3e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910b450 <col:28> 'const char *' lvalue ParmVar 0x564a890eda50 'keyword' 'const char *'
|         |-IntegerLiteral 0x564a8910b470 <col:37> 'int' 0
|         |-DeclRefExpr 0x564a8910b490 <col:40> 'P' lvalue ParmVar 0x564a890edac8 'parser' 'P'
|         |-DeclRefExpr 0x564a8910b4b0 <col:48> 'T' lvalue ParmVar 0x564a890edb68 'x' 'T &'
|         `-DeclRefExpr 0x564a8910b4d0 <col:51> 'const V' lvalue ParmVar 0x564a890edc38 'default_value' 'const V &'
|-FunctionTemplateDecl 0x564a890ee398 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x564a890ede90 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890edf08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x564a890edf88 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x564a890ee2f8 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x564a890ee050 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ee0c8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x564a890ee168 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x564a890ee208 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x564a8910b6d8 <col:86, line:462:5>
|     `-ReturnStmt 0x564a8910b6c8 <line:461:9, col:73>
|       `-CallExpr 0x564a8910b680 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910b570 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910b5e0 <col:28> 'const char *' lvalue ParmVar 0x564a890ee050 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910b600 <col:37> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int'
|         |-DeclRefExpr 0x564a8910b620 <col:49> 'P' lvalue ParmVar 0x564a890ee0c8 'parser' 'P'
|         |-DeclRefExpr 0x564a8910b640 <col:57> 'T' lvalue ParmVar 0x564a890ee168 'x' 'T &'
|         `-DeclRefExpr 0x564a8910b660 <col:60> 'const V' lvalue ParmVar 0x564a890ee208 'default_value' 'const V &'
|-FunctionTemplateDecl 0x564a890ee9f8 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x564a890ee410 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ee488 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x564a890ee508 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x564a890ee958 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x564a890ee5d0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ee650 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x564a890ee6c8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x564a890ee768 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x564a890ee808 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x564a8910b868 <col:95, line:467:5>
|     |-CallExpr 0x564a8910b7e0 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a8910b6f0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x564a8910b730 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x564a8910b740 <col:37> 'const char *' lvalue ParmVar 0x564a890ee5d0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x564a8910b760 <col:46> 'int' lvalue ParmVar 0x564a890ee650 'flags' 'int'
|     | |-DeclRefExpr 0x564a8910b780 <col:53> 'P' lvalue ParmVar 0x564a890ee6c8 'parser' 'P'
|     | |-DeclRefExpr 0x564a8910b7a0 <col:61> 'T' lvalue ParmVar 0x564a890ee768 'x' 'T &'
|     | `-DeclRefExpr 0x564a8910b7c0 <col:64> 'const V' lvalue ParmVar 0x564a890ee808 'default_value' 'const V &'
|     `-ReturnStmt 0x564a8910b858 <line:466:9, col:17>
|       `-UnaryOperator 0x564a8910b840 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a8910b830 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890eefd8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x564a890eea78 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890eeaf8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x564a890eeb78 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x564a890eef38 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x564a890eec40 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890eecb8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x564a890eed58 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x564a890eedf8 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x564a8910ba10 <col:63, line:481:5>
|     `-ReturnStmt 0x564a8910ba00 <line:480:9, col:47>
|       `-CallExpr 0x564a8910b9b8 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910b898 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910b918 <col:21> 'const char *' lvalue ParmVar 0x564a890eec40 'keyword' 'const char *'
|         |-IntegerLiteral 0x564a8910b938 <col:30> 'int' 0
|         |-DeclRefExpr 0x564a8910b958 <col:33> 'P' lvalue ParmVar 0x564a890eecb8 'parser' 'P'
|         |-DeclRefExpr 0x564a8910b978 <col:41> 'T1' lvalue ParmVar 0x564a890eed58 'x1' 'T1 &'
|         `-DeclRefExpr 0x564a8910b998 <col:45> 'T2' lvalue ParmVar 0x564a890eedf8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x564a890ef558 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x564a890ef050 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ef0c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x564a890ef148 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x564a890ef4b8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x564a890ef210 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ef288 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x564a890ef328 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x564a890ef3c8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x564a8910bbb0 <col:65, line:485:5>
|     `-ReturnStmt 0x564a8910bba0 <line:484:9, col:55>
|       `-CallExpr 0x564a8910bb58 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910ba38 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910bab8 <col:21> 'const char *' lvalue ParmVar 0x564a890ef210 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910bad8 <col:30> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int'
|         |-DeclRefExpr 0x564a8910baf8 <col:41> 'P' lvalue ParmVar 0x564a890ef288 'parser' 'P'
|         |-DeclRefExpr 0x564a8910bb18 <col:49> 'T1' lvalue ParmVar 0x564a890ef328 'x1' 'T1 &'
|         `-DeclRefExpr 0x564a8910bb38 <col:53> 'T2' lvalue ParmVar 0x564a890ef3c8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x564a890f4098 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x564a890ef5d0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890ef648 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x564a890ef6c8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x564a890f3ff8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x564a890ef790 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890ef808 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x564a890ef8a8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x564a890f3f00 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x564a8910bd50 <col:65, line:489:5>
|     `-ReturnStmt 0x564a8910bd40 <line:488:9, col:56>
|       `-CallExpr 0x564a8910bcf8 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910bbd8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910bc58 <col:21> 'const char *' lvalue ParmVar 0x564a890ef790 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910bc78 <col:30> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int'
|         |-DeclRefExpr 0x564a8910bc98 <col:42> 'P' lvalue ParmVar 0x564a890ef808 'parser' 'P'
|         |-DeclRefExpr 0x564a8910bcb8 <col:50> 'T1' lvalue ParmVar 0x564a890ef8a8 'x1' 'T1 &'
|         `-DeclRefExpr 0x564a8910bcd8 <col:54> 'T2' lvalue ParmVar 0x564a890f3f00 'x2' 'T2 &'
|-FunctionTemplateDecl 0x564a890f4618 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x564a890f4110 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f4188 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x564a890f4208 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x564a890f4578 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x564a890f42d0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f4348 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f43e8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x564a890f4488 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x564a8910bfa0 <col:66, line:493:5>
|     `-ReturnStmt 0x564a8910bf90 <line:492:9, col:68>
|       `-CallExpr 0x564a8910bf48 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910bd78 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910bdf8 <col:21> 'const char *' lvalue ParmVar 0x564a890f42d0 'keyword' 'const char *'
|         |-BinaryOperator 0x564a8910bec8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x564a8910be78 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a8910be58 <col:30> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x564a8910beb0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x564a8910be90 <col:42> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x564a8910bee8 <col:54> 'P' lvalue ParmVar 0x564a890f4348 'parser' 'P'
|         |-DeclRefExpr 0x564a8910bf08 <col:62> 'T1' lvalue ParmVar 0x564a890f43e8 'x1' 'T1 &'
|         `-DeclRefExpr 0x564a8910bf28 <col:66> 'T2' lvalue ParmVar 0x564a890f4488 'x2' 'T2 &'
|-FunctionTemplateDecl 0x564a890f4c78 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x564a890f4690 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f4708 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x564a890f4788 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x564a890f4bd8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x564a890f4850 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f48d0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x564a890f4948 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f49e8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x564a890f4a88 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x564a8910c130 <col:74, line:498:5>
|     |-CallExpr 0x564a8910c0a8 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a8910bfb8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x564a8910bff8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x564a8910c008 <col:30> 'const char *' lvalue ParmVar 0x564a890f4850 'keyword' 'const char *'
|     | |-DeclRefExpr 0x564a8910c028 <col:39> 'int' lvalue ParmVar 0x564a890f48d0 'flags' 'int'
|     | |-DeclRefExpr 0x564a8910c048 <col:46> 'P' lvalue ParmVar 0x564a890f4948 'parser' 'P'
|     | |-DeclRefExpr 0x564a8910c068 <col:54> 'T1' lvalue ParmVar 0x564a890f49e8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x564a8910c088 <col:58> 'T2' lvalue ParmVar 0x564a890f4a88 'x2' 'T2 &'
|     `-ReturnStmt 0x564a8910c120 <line:497:9, col:17>
|       `-UnaryOperator 0x564a8910c108 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a8910c0f8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890f4fd8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x564a890f4cf8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a890f4f38 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x564a890f4db0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f4e28 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x564a8910c278 <col:52, line:509:5>
|     `-ReturnStmt 0x564a8910c268 <line:508:9, col:44>
|       `-CallExpr 0x564a8910c230 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910c160 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910c1d0 <col:26> 'const char *' lvalue ParmVar 0x564a890f4db0 'keyword' 'const char *'
|         |-IntegerLiteral 0x564a8910c1f0 <col:35> 'int' 0
|         `-DeclRefExpr 0x564a8910c210 <col:38> 'P' lvalue ParmVar 0x564a890f4e28 'parser' 'P'
|-FunctionTemplateDecl 0x564a890f52d8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x564a890f5040 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a890f5238 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x564a890f50f0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f5168 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x564a8910c3b8 <col:54, line:513:5>
|     `-ReturnStmt 0x564a8910c3a8 <line:512:9, col:52>
|       `-CallExpr 0x564a8910c370 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910c2a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910c310 <col:26> 'const char *' lvalue ParmVar 0x564a890f50f0 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910c330 <col:35> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int'
|         `-DeclRefExpr 0x564a8910c350 <col:46> 'P' lvalue ParmVar 0x564a890f5168 'parser' 'P'
|-FunctionTemplateDecl 0x564a890f55d8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x564a890f5340 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a890f5538 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x564a890f53f0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f5468 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x564a8910c4f8 <col:54, line:517:5>
|     `-ReturnStmt 0x564a8910c4e8 <line:516:9, col:53>
|       `-CallExpr 0x564a8910c4b0 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a8910c3e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a8910c450 <col:26> 'const char *' lvalue ParmVar 0x564a890f53f0 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a8910c470 <col:35> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int'
|         `-DeclRefExpr 0x564a8910c490 <col:47> 'P' lvalue ParmVar 0x564a890f5468 'parser' 'P'
|-FunctionTemplateDecl 0x564a890f58d8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x564a890f5640 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a890f5838 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x564a890f56f0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f5768 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x564a891167a8 <col:55, line:521:5>
|     `-ReturnStmt 0x564a89116798 <line:520:9, col:65>
|       `-CallExpr 0x564a89116760 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a891165e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89116650 <col:26> 'const char *' lvalue ParmVar 0x564a890f56f0 'keyword' 'const char *'
|         |-BinaryOperator 0x564a89116720 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x564a891166d0 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a891166b0 <col:35> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x564a89116708 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x564a891166e8 <col:47> 'const int' lvalue Var 0x564a890e9f90 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x564a89116740 <col:59> 'P' lvalue ParmVar 0x564a890f5768 'parser' 'P'
|-FunctionTemplateDecl 0x564a890f5ca8 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x564a890f5940 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a890f5c08 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x564a890f59f0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f5a70 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x564a890f5ae8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x564a891168e8 <col:63, line:526:5>
|     |-CallExpr 0x564a89116870 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a891167c0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x564a89116800 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x564a89116810 <col:35> 'const char *' lvalue ParmVar 0x564a890f59f0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x564a89116830 <col:44> 'int' lvalue ParmVar 0x564a890f5a70 'flags' 'int'
|     | `-DeclRefExpr 0x564a89116850 <col:51> 'P' lvalue ParmVar 0x564a890f5ae8 'parser' 'P'
|     `-ReturnStmt 0x564a891168d8 <line:525:9, col:17>
|       `-UnaryOperator 0x564a891168c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a891168b0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890f60f8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x564a890f5d18 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f5d98 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f6058 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x564a890f5e58 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f5ed0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f5f78 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x564a89116a40 <col:58, line:541:5>
|     `-ReturnStmt 0x564a89116a30 <line:540:9, col:39>
|       `-CallExpr 0x564a891169f8 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89116918 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89116998 <col:21> 'const char *' lvalue ParmVar 0x564a890f5e58 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a891169b8 <col:30> 'P' lvalue ParmVar 0x564a890f5ed0 'parser' 'P'
|         `-DeclRefExpr 0x564a891169d8 <col:38> 'T' lvalue ParmVar 0x564a890f5f78 'x' 'T &'
|-FunctionTemplateDecl 0x564a890f6548 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x564a890f6168 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f61e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f64a8 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x564a890f62a8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f6320 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f63c8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x564a89116b78 <col:60, line:545:5>
|     `-ReturnStmt 0x564a89116b68 <line:544:9, col:41>
|       `-CallExpr 0x564a89116b30 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89116a68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89116ad0 <col:23> 'const char *' lvalue ParmVar 0x564a890f62a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a89116af0 <col:32> 'P' lvalue ParmVar 0x564a890f6320 'parser' 'P'
|         `-DeclRefExpr 0x564a89116b10 <col:40> 'T' lvalue ParmVar 0x564a890f63c8 'x' 'T &'
|-FunctionTemplateDecl 0x564a890f6998 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x564a890f65b8 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f6638 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f68f8 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x564a890f66f8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f6770 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f6818 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x564a89116cb0 <col:60, line:549:5>
|     `-ReturnStmt 0x564a89116ca0 <line:548:9, col:41>
|       `-CallExpr 0x564a89116c68 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89116ba0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89116c08 <col:23> 'const char *' lvalue ParmVar 0x564a890f66f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a89116c28 <col:32> 'P' lvalue ParmVar 0x564a890f6770 'parser' 'P'
|         `-DeclRefExpr 0x564a89116c48 <col:40> 'T' lvalue ParmVar 0x564a890f6818 'x' 'T &'
|-FunctionTemplateDecl 0x564a890f6de8 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x564a890f6a08 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f6a88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f6d48 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x564a890f6b48 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f6bc0 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f6c68 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x564a89116de8 <col:61, line:553:5>
|     `-ReturnStmt 0x564a89116dd8 <line:552:9, col:42>
|       `-CallExpr 0x564a89116da0 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89116cd8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89116d40 <col:24> 'const char *' lvalue ParmVar 0x564a890f6b48 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a89116d60 <col:33> 'P' lvalue ParmVar 0x564a890f6bc0 'parser' 'P'
|         `-DeclRefExpr 0x564a89116d80 <col:41> 'T' lvalue ParmVar 0x564a890f6c68 'x' 'T &'
|-FunctionTemplateDecl 0x564a890f72c8 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x564a890f6e58 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f6ed8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f7228 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x564a890f6f98 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f7018 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x564a890f7090 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f7138 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x564a89116f60 <col:69, line:557:5>
|     `-ReturnStmt 0x564a89116f50 <line:556:9, col:46>
|       `-CallExpr 0x564a89116f10 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89116e10 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89116e90 <col:21> 'const char *' lvalue ParmVar 0x564a890f6f98 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a89116eb0 <col:30> 'int' lvalue ParmVar 0x564a890f7018 'flags' 'int'
|         |-DeclRefExpr 0x564a89116ed0 <col:37> 'P' lvalue ParmVar 0x564a890f7090 'parser' 'P'
|         `-DeclRefExpr 0x564a89116ef0 <col:45> 'T' lvalue ParmVar 0x564a890f7138 'x' 'T &'
|-FunctionTemplateDecl 0x564a890f75d8 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x564a890f7340 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a890f7538 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x564a890f73f0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f7468 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x564a891170a0 <col:56, line:571:5>
|     `-ReturnStmt 0x564a89117090 <line:570:9, col:48>
|       `-CallExpr 0x564a89117058 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89116f88 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89116ff8 <col:30> 'const char *' lvalue ParmVar 0x564a890f73f0 'keyword' 'const char *'
|         |-IntegerLiteral 0x564a89117018 <col:39> 'int' 0
|         `-DeclRefExpr 0x564a89117038 <col:42> 'P' lvalue ParmVar 0x564a890f7468 'parser' 'P'
|-FunctionTemplateDecl 0x564a890f7968 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x564a890f7640 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a890f78c8 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x564a890f76f0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f7770 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x564a890f77e8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x564a89117270 <col:67, line:576:5>
|     |-CallExpr 0x564a891171f8 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a891170b8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x564a891170f8 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x564a89117108 <col:39> 'const char *' lvalue ParmVar 0x564a890f76f0 'keyword' 'const char *'
|     | |-BinaryOperator 0x564a891171b8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x564a89117168 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x564a89117128 <col:48> 'int' lvalue ParmVar 0x564a890f7770 'flags' 'int'
|     | | `-ImplicitCastExpr 0x564a891171a0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x564a89117180 <col:56> 'const int' lvalue Var 0x564a890ea180 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x564a891171d8 <col:68> 'P' lvalue ParmVar 0x564a890f77e8 'parser' 'P'
|     `-ReturnStmt 0x564a89117260 <line:575:9, col:17>
|       `-UnaryOperator 0x564a89117248 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a89117238 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890f7db8 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x564a890f79d8 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f7a58 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f7d18 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x564a890f7b18 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f7b90 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f7c38 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x564a891173e0 <col:62, line:592:5>
|     `-ReturnStmt 0x564a891173d0 <line:591:9, col:51>
|       `-CallExpr 0x564a89117390 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a891172a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89117310 <col:30> 'const char *' lvalue ParmVar 0x564a890f7b18 'keyword' 'const char *'
|         |-IntegerLiteral 0x564a89117330 <col:39> 'int' 0
|         |-DeclRefExpr 0x564a89117350 <col:42> 'P' lvalue ParmVar 0x564a890f7b90 'parser' 'P'
|         `-DeclRefExpr 0x564a89117370 <col:50> 'T' lvalue ParmVar 0x564a890f7c38 'x' 'T &'
|-FunctionTemplateDecl 0x564a890f8298 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x564a890f7e28 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f7ea8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f81f8 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x564a890f7f68 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f7fe8 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x564a890f8060 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f8108 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x564a891175d8 <col:73, line:597:5>
|     |-CallExpr 0x564a89117558 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a891173f8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x564a89117438 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x564a89117448 <col:39> 'const char *' lvalue ParmVar 0x564a890f7f68 'keyword' 'const char *'
|     | |-BinaryOperator 0x564a891174f8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x564a891174a8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x564a89117468 <col:48> 'int' lvalue ParmVar 0x564a890f7fe8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x564a891174e0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x564a891174c0 <col:56> 'const int' lvalue Var 0x564a890ea180 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x564a89117518 <col:68> 'P' lvalue ParmVar 0x564a890f8060 'parser' 'P'
|     | `-DeclRefExpr 0x564a89117538 <col:76> 'T' lvalue ParmVar 0x564a890f8108 'x' 'T &'
|     `-ReturnStmt 0x564a891175c8 <line:596:9, col:17>
|       `-UnaryOperator 0x564a891175b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a891175a0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890f8848 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x564a890f8310 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f8388 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f87a8 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x564a890f8448 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f84c0 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f8680 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x564a89117748 <col:65, line:614:5>
|     `-ReturnStmt 0x564a89117738 <line:613:9, col:46>
|       `-CallExpr 0x564a891176f8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89117608 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89117678 <col:25> 'const char *' lvalue ParmVar 0x564a890f8448 'keyword' 'const char *'
|         |-IntegerLiteral 0x564a89117698 <col:34> 'int' 0
|         |-DeclRefExpr 0x564a891176b8 <col:37> 'P' lvalue ParmVar 0x564a890f84c0 'parser' 'P'
|         `-DeclRefExpr 0x564a891176d8 <col:45> 'Vector<T>' lvalue ParmVar 0x564a890f8680 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x564a890f8c78 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x564a890f88b8 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x564a890f8bd8 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x564a890f8970 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f8ac0 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x564a89117960 <col:55, line:618:5>
|     `-ReturnStmt 0x564a89117950 <line:617:9, col:55>
|       `-CallExpr 0x564a89117910 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89117770 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a891177e0 <col:25> 'const char *' lvalue ParmVar 0x564a890f8970 'keyword' 'const char *'
|         |-IntegerLiteral 0x564a89117800 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x564a891178d0 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x564a891178f0 <col:54> 'Vector<T>' lvalue ParmVar 0x564a890f8ac0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x564a890f9248 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x564a890f8ce0 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f8d58 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f91a8 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x564a890f8e18 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f8e98 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x564a890f8f10 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x564a890f9060 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x564a89117b58 <col:76, line:623:5>
|     |-CallExpr 0x564a89117ad8 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x564a89117978 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x564a891179b8 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x564a891179c8 <col:34> 'const char *' lvalue ParmVar 0x564a890f8e18 'keyword' 'const char *'
|     | |-BinaryOperator 0x564a89117a78 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x564a89117a28 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x564a891179e8 <col:43> 'int' lvalue ParmVar 0x564a890f8e98 'flags' 'int'
|     | | `-ImplicitCastExpr 0x564a89117a60 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x564a89117a40 <col:51> 'const int' lvalue Var 0x564a890ea180 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x564a89117a98 <col:63> 'P' lvalue ParmVar 0x564a890f8f10 'parser' 'P'
|     | `-DeclRefExpr 0x564a89117ab8 <col:71> 'Vector<T>' lvalue ParmVar 0x564a890f9060 'x' 'Vector<T> &'
|     `-ReturnStmt 0x564a89117b48 <line:622:9, col:17>
|       `-UnaryOperator 0x564a89117b30 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a89117b20 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890f9788 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x564a890f92c0 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890f9338 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890f96e8 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x564a890f93f8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890f9478 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x564a890f95c0 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x564a89117dc0 <col:66, line:627:5>
|     `-ReturnStmt 0x564a89117db0 <line:626:9, col:59>
|       `-CallExpr 0x564a89117d70 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x564a89117b88 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x564a89117bf8 <col:25> 'const char *' lvalue ParmVar 0x564a890f93f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x564a89117c18 <col:34> 'int' lvalue ParmVar 0x564a890f9478 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x564a89117d30 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x564a89117d50 <col:58> 'Vector<T>' lvalue ParmVar 0x564a890f95c0 'x' 'Vector<T> &'
|-CXXMethodDecl 0x564a890f9818 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x564a89117e40 <col:25, line:633:5>
|   `-ReturnStmt 0x564a89117e30 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x564a89117e18 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x564a89117de8 <col:16> 'const bool' lvalue ->_status 0x564a89107c98
|         `-CXXThisExpr 0x564a89117dd8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x564a890f9998 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x564a890f98d0 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x564a89117f28 <col:27, line:639:5>
|   |-BinaryOperator 0x564a89117ed0 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x564a89117e58 <col:9> 'bool' lvalue ParmVar 0x564a890f98d0 'x' 'bool &'
|   | `-ImplicitCastExpr 0x564a89117eb8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x564a89117e88 <col:13> 'bool' lvalue ->_status 0x564a89107c98
|   |     `-CXXThisExpr 0x564a89117e78 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x564a89117f18 <line:638:9, col:17>
|     `-UnaryOperator 0x564a89117f00 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a89117ef0 <col:17> 'Args *' this
|-CXXMethodDecl 0x564a890f9b18 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x564a890f9a58 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x564a89118018 <col:39, line:644:5>
|   |-BinaryOperator 0x564a89117fc0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x564a89117f48 <col:9> 'bool' lvalue ParmVar 0x564a890f9a58 'x' 'bool &'
|   | `-ImplicitCastExpr 0x564a89117fa8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x564a89117f78 <col:13> 'const bool' lvalue ->_status 0x564a89107c98
|   |     `-CXXThisExpr 0x564a89117f68 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x564a89118008 <line:643:9, col:17>
|     `-UnaryOperator 0x564a89117ff0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a89117fe0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x564a890f9be0 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x564a891180c0 <col:30, line:651:5>
|   `-ReturnStmt 0x564a891180b0 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x564a89118098 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x564a89118068 <col:16> 'bool' lvalue ->_read_status 0x564a890e0690
|         `-ImplicitCastExpr 0x564a89118048 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x564a89118038 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x564a890f9d28 <line:655:5, line:658:5> line:655:11 used read_status 'Args &(bool &)'
| |-ParmVarDecl 0x564a890f9c98 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x564a891181c8 <col:32, line:658:5>
|   |-BinaryOperator 0x564a89118170 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x564a891180d8 <col:9> 'bool' lvalue ParmVar 0x564a890f9c98 'x' 'bool &'
|   | `-ImplicitCastExpr 0x564a89118158 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x564a89118128 <col:13> 'bool' lvalue ->_read_status 0x564a890e0690
|   |     `-ImplicitCastExpr 0x564a89118108 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x564a891180f8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x564a891181b8 <line:657:9, col:17>
|     `-UnaryOperator 0x564a891181a0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a89118190 <col:17> 'Args *' this
|-CXXMethodDecl 0x564a890f9e78 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x564a890f9de8 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x564a891182d8 <col:44, line:663:5>
|   |-BinaryOperator 0x564a89118280 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x564a891181e8 <col:9> 'bool' lvalue ParmVar 0x564a890f9de8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x564a89118268 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x564a89118238 <col:13> 'bool' lvalue ->_read_status 0x564a890e0690
|   |     `-ImplicitCastExpr 0x564a89118218 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x564a89118208 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x564a891182c8 <line:662:9, col:17>
|     `-UnaryOperator 0x564a891182b0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a891182a0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x564a890f9f40 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x564a890fa008 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x564a890fa0d0 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x564a890fa198 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x564a890fa4a8 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x564a890fa238 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x564a890fa408 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x564a890fa318 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x564a89118698 <col:19, line:706:5>
|     `-IfStmt 0x564a89118670 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x564a891183d8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x564a891185a0 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x564a89118570 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x564a89118530 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x564a89118430 <col:42> '<bound member function type>' ->simple_slot 0x564a89109050
|       |     | `-CXXThisExpr 0x564a89118420 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x564a891184d0 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x564a89118480 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x564a89073290 0x564a88d4f4d8
|       |     | `-DeclRefExpr 0x564a89118460 <col:55> 'T' lvalue ParmVar 0x564a890fa318 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x564a89118510 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x564a89118660 <line:705:13, col:34>
|         `-CallExpr 0x564a89118638 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x564a891185c0 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x564a89118618 <col:33> 'T' lvalue ParmVar 0x564a890fa318 'x' 'T &'
|-FunctionTemplateDecl 0x564a890fa778 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x564a890fa508 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x564a890fa6d8 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x564a890fa5e8 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x564a89118a70 <col:31, line:717:5>
|     |-DeclStmt 0x564a891187d8 <line:713:9, col:23>
|     | `-VarDecl 0x564a891186c0 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x564a891187b0 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x564a89118738 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x564a89118790 <col:21> 'T' lvalue ParmVar 0x564a890fa5e8 'x' 'T &'
|     |-IfStmt 0x564a89118a20 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x564a891188c8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x564a89118a00 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x564a891189a0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x564a89118930 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|     |   | `-DeclRefExpr 0x564a89118910 <col:14> 'T *' lvalue Var 0x564a891186c0 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x564a891189e0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x564a89118a58 <line:716:9, col:16>
|       `-DeclRefExpr 0x564a89118a38 <col:16> 'T *' lvalue Var 0x564a891186c0 's' 'T *'
|-FunctionTemplateDecl 0x564a890fab88 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x564a890fa7d8 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x564a890fa858 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x564a890faae8 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x564a890fa938 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x564a890fa9d8 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x564a89118d80 <col:37, line:726:5>
|     |-IfStmt 0x564a89118d10 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x564a89118d30 <line:723:13, col:26>
|     | | `-VarDecl 0x564a89118ad8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x564a89118bc8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x564a89118b50 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x564a89118ba8 <col:25> 'T' lvalue ParmVar 0x564a890fa938 'x' 'T &'
|     | |-DeclRefExpr 0x564a89118bf0 <col:16> 'T *' lvalue Var 0x564a89118ad8 's' 'T *'
|     | `-BinaryOperator 0x564a89118cf0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x564a89118ca0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x564a89118c30 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|     |   | `-DeclRefExpr 0x564a89118c10 <col:14> 'T *' lvalue Var 0x564a89118ad8 's' 'T *'
|     |   `-DeclRefExpr 0x564a89118cd0 <col:18> 'const V' lvalue ParmVar 0x564a890fa9d8 'value' 'const V &'
|     `-ReturnStmt 0x564a89118d70 <line:725:9, col:17>
|       `-UnaryOperator 0x564a89118d58 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564a89118d48 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x564a890faf88 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x564a890fabf0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x564a890faee8 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x564a890faca0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890fad20 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x564a890fadc8 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x564a89119ba0 <col:65, line:737:5>
|     |-DeclStmt 0x564a89118e18 <line:732:9, col:26>
|     | `-VarDecl 0x564a89118db0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x564a89119b68 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x564a89119b88 <line:733:13, col:58>
|       | `-VarDecl 0x564a89118e40 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x564a89119020 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x564a89118ff0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x564a89118fd8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x564a89118fb8 <col:26, col:58> 'String' (CXXTemporary 0x564a89118fb8)
|       |           `-CXXMemberCallExpr 0x564a89118f48 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x564a89118eb8 <col:26> '<bound member function type>' ->find 0x564a89108698
|       |             | `-CXXThisExpr 0x564a89118ea8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x564a89118f80 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x564a89118ee8 <col:31> 'const char *' lvalue ParmVar 0x564a890faca0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x564a89118f98 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x564a89118f08 <col:40> 'int' lvalue ParmVar 0x564a890fad20 'flags' 'int'
|       |             `-DeclRefExpr 0x564a89118f28 <col:47> 'Args::Slot *' lvalue Var 0x564a89118db0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x564a891190d8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x564a891190c0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x564a891190a0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x564a89119070 <col:20> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|       |       `-ImplicitCastExpr 0x564a89119058 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x564a89119038 <col:20> 'String' lvalue Var 0x564a89118e40 'str' 'String'
|       `-CompoundStmt 0x564a89119b48 <col:61, line:736:9>
|         |-DeclStmt 0x564a89119590 <line:734:13, col:76>
|         | `-VarDecl 0x564a89119128 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x564a89119560 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x564a891194d0 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x564a89119518 <col:60> 'T' lvalue ParmVar 0x564a890fadc8 'variable' 'T &'
|         |     `-UnaryOperator 0x564a89119548 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x564a89119538 <col:71> 'Args *' this
|         `-CallExpr 0x564a89119b18 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x564a891195b8 <col:13> '<bound member function type>' ->postparse 0x564a891088a8
|           | `-CXXThisExpr 0x564a891195a8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x564a89119ad8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x564a891195e8 <col:23> 'T *' lvalue Var 0x564a89119128 's' 'T *'
|           | `-CallExpr 0x564a89119a98 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x564a89119870 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x564a89119970 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x564a89119990 <col:86> 'String' lvalue Var 0x564a89118e40 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x564a89119a40 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x564a891199d0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|           |   | `-DeclRefExpr 0x564a891199b0 <col:92> 'T *' lvalue Var 0x564a89119128 's' 'T *'
|           |   `-UnaryOperator 0x564a89119a80 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x564a89119a70 <col:96> 'Args *' this
|           `-DeclRefExpr 0x564a89119af8 <col:103> 'Args::Slot *' lvalue Var 0x564a89118db0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x564a890fb4d8 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x564a890faff8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x564a890fb078 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x564a890fb438 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x564a890fb138 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890fb1b8 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x564a890fb258 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x564a890fb2f8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x564a8911aa40 <col:88, line:745:5>
|     |-DeclStmt 0x564a89119c38 <line:741:9, col:26>
|     | `-VarDecl 0x564a89119bd0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x564a89119e58 <line:742:9, col:55>
|     | `-VarDecl 0x564a89119c60 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x564a89119e40 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x564a89119e10 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x564a89119df8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x564a89119dd8 <col:22, col:54> 'String' (CXXTemporary 0x564a89119dd8)
|     |           `-CXXMemberCallExpr 0x564a89119d68 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x564a89119cd8 <col:22> '<bound member function type>' ->find 0x564a89108698
|     |             | `-CXXThisExpr 0x564a89119cc8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x564a89119da0 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x564a89119d08 <col:27> 'const char *' lvalue ParmVar 0x564a890fb138 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x564a89119db8 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x564a89119d28 <col:36> 'int' lvalue ParmVar 0x564a890fb1b8 'flags' 'int'
|     |             `-DeclRefExpr 0x564a89119d48 <col:43> 'Args::Slot *' lvalue Var 0x564a89119bd0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x564a8911a230 <line:743:9, col:72>
|     | `-VarDecl 0x564a89119ea8 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x564a8911a200 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x564a8911a170 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x564a8911a1b8 <col:56> 'T' lvalue ParmVar 0x564a890fb258 'variable' 'T &'
|     |     `-UnaryOperator 0x564a8911a1e8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x564a8911a1d8 <col:67> 'Args *' this
|     `-CallExpr 0x564a8911aa10 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x564a8911a258 <col:9> '<bound member function type>' ->postparse 0x564a891088a8
|       | `-CXXThisExpr 0x564a8911a248 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x564a8911a9d0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x564a8911a288 <col:19> 'T *' lvalue Var 0x564a89119ea8 's' 'T *'
|       | `-ParenExpr 0x564a8911a9b0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x564a8911a980 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x564a8911a968 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x564a8911a950 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x564a8911a930 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x564a8911a900 <col:25> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|       |     |       `-ImplicitCastExpr 0x564a8911a8e8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x564a8911a2a8 <col:25> 'String' lvalue Var 0x564a89119c60 'str' 'String'
|       |     |-CallExpr 0x564a8911a758 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x564a8911a530 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x564a8911a630 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x564a8911a650 <col:89> 'String' lvalue Var 0x564a89119c60 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x564a8911a700 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x564a8911a690 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|       |     | | `-DeclRefExpr 0x564a8911a670 <col:95> 'T *' lvalue Var 0x564a89119ea8 's' 'T *'
|       |     | `-UnaryOperator 0x564a8911a740 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x564a8911a730 <col:99> 'Args *' this
|       |     `-ParenExpr 0x564a8911a8c8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x564a8911a8a8 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x564a8911a878 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x564a8911a828 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x564a8911a7b8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|       |         | | `-DeclRefExpr 0x564a8911a798 <col:109> 'T *' lvalue Var 0x564a89119ea8 's' 'T *'
|       |         | `-DeclRefExpr 0x564a8911a858 <col:113> 'const V' lvalue ParmVar 0x564a890fb2f8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x564a8911a898 <col:120> 'bool' true
|       `-DeclRefExpr 0x564a8911a9f0 <col:128> 'Args::Slot *' lvalue Var 0x564a89119bd0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x564a890fba08 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x564a890fb550 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a890fb5c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a890fb968 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x564a890fb688 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890fb708 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x564a890fb780 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x564a890fb828 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x564a8911b638 <col:75, line:754:5>
|     |-DeclStmt 0x564a8911aae8 <line:749:9, col:26>
|     | `-VarDecl 0x564a8911aa80 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x564a8911b600 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x564a8911b620 <line:750:13, col:58>
|       | `-VarDecl 0x564a8911ab10 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x564a8911acf0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x564a8911acc0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x564a8911aca8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x564a8911ac88 <col:26, col:58> 'String' (CXXTemporary 0x564a8911ac88)
|       |           `-CXXMemberCallExpr 0x564a8911ac18 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x564a8911ab88 <col:26> '<bound member function type>' ->find 0x564a89108698
|       |             | `-CXXThisExpr 0x564a8911ab78 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x564a8911ac50 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x564a8911abb8 <col:31> 'const char *' lvalue ParmVar 0x564a890fb688 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x564a8911ac68 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x564a8911abd8 <col:40> 'int' lvalue ParmVar 0x564a890fb708 'flags' 'int'
|       |             `-DeclRefExpr 0x564a8911abf8 <col:47> 'Args::Slot *' lvalue Var 0x564a8911aa80 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x564a8911ada8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x564a8911ad90 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x564a8911ad70 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x564a8911ad40 <col:20> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|       |       `-ImplicitCastExpr 0x564a8911ad28 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x564a8911ad08 <col:20> 'String' lvalue Var 0x564a8911ab10 'str' 'String'
|       `-CompoundStmt 0x564a8911b5e0 <col:61, line:753:9>
|         |-DeclStmt 0x564a8911b180 <line:751:13, col:63>
|         | `-VarDecl 0x564a8911adf8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x564a8911b150 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x564a8911b0c0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x564a8911b108 <col:47> 'T' lvalue ParmVar 0x564a890fb828 'variable' 'T &'
|         |     `-UnaryOperator 0x564a8911b138 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x564a8911b128 <col:58> 'Args *' this
|         `-CallExpr 0x564a8911b5b0 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x564a8911b1a8 <col:13> '<bound member function type>' ->postparse 0x564a891088a8
|           | `-CXXThisExpr 0x564a8911b198 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x564a8911b570 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x564a8911b1d8 <col:23> 'T *' lvalue Var 0x564a8911adf8 's' 'T *'
|           | `-CallExpr 0x564a8911b530 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x564a8911b3c0 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x564a8911b408 <col:56> 'P' lvalue ParmVar 0x564a890fb780 'parser' 'P'
|           |   |-DeclRefExpr 0x564a8911b428 <col:64> 'String' lvalue Var 0x564a8911ab10 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x564a8911b4d8 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x564a8911b468 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|           |   | `-DeclRefExpr 0x564a8911b448 <col:70> 'T *' lvalue Var 0x564a8911adf8 's' 'T *'
|           |   `-UnaryOperator 0x564a8911b518 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x564a8911b508 <col:74> 'Args *' this
|           `-DeclRefExpr 0x564a8911b590 <col:81> 'Args::Slot *' lvalue Var 0x564a8911aa80 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x564a891046a8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x564a890fba80 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x564a890fbaf8 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x564a890fbb78 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x564a89104608 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x564a890fbc40 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a890fbcc0 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x564a890fbd38 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x564a890fbdd8 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x564a890fbe78 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x564a8911c3c8 <col:98, line:762:5>
|     |-DeclStmt 0x564a8911b6d0 <line:758:9, col:26>
|     | `-VarDecl 0x564a8911b668 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x564a8911b8f0 <line:759:9, col:55>
|     | `-VarDecl 0x564a8911b6f8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x564a8911b8d8 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x564a8911b8a8 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x564a8911b890 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x564a8911b870 <col:22, col:54> 'String' (CXXTemporary 0x564a8911b870)
|     |           `-CXXMemberCallExpr 0x564a8911b800 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x564a8911b770 <col:22> '<bound member function type>' ->find 0x564a89108698
|     |             | `-CXXThisExpr 0x564a8911b760 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x564a8911b838 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x564a8911b7a0 <col:27> 'const char *' lvalue ParmVar 0x564a890fbc40 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x564a8911b850 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x564a8911b7c0 <col:36> 'int' lvalue ParmVar 0x564a890fbcc0 'flags' 'int'
|     |             `-DeclRefExpr 0x564a8911b7e0 <col:43> 'Args::Slot *' lvalue Var 0x564a8911b668 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x564a8911bd10 <line:760:9, col:59>
|     | `-VarDecl 0x564a8911b948 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x564a8911bce0 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x564a8911bc50 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x564a8911bc98 <col:43> 'T' lvalue ParmVar 0x564a890fbdd8 'variable' 'T &'
|     |     `-UnaryOperator 0x564a8911bcc8 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x564a8911bcb8 <col:54> 'Args *' this
|     `-CallExpr 0x564a8911c398 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x564a8911bd38 <col:9> '<bound member function type>' ->postparse 0x564a891088a8
|       | `-CXXThisExpr 0x564a8911bd28 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x564a8911c358 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x564a8911bd68 <col:19> 'T *' lvalue Var 0x564a8911b948 's' 'T *'
|       | `-ParenExpr 0x564a8911c338 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x564a8911c308 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x564a8911c2f0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x564a8911c2d8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x564a8911c2b8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x564a8911c288 <col:25> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|       |     |       `-ImplicitCastExpr 0x564a8911c270 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x564a8911bd88 <col:25> 'String' lvalue Var 0x564a8911b6f8 'str' 'String'
|       |     |-CallExpr 0x564a8911c0e0 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x564a8911bf70 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x564a8911bfb8 <col:59> 'P' lvalue ParmVar 0x564a890fbd38 'parser' 'P'
|       |     | |-DeclRefExpr 0x564a8911bfd8 <col:67> 'String' lvalue Var 0x564a8911b6f8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x564a8911c088 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x564a8911c018 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|       |     | | `-DeclRefExpr 0x564a8911bff8 <col:73> 'T *' lvalue Var 0x564a8911b948 's' 'T *'
|       |     | `-UnaryOperator 0x564a8911c0c8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x564a8911c0b8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x564a8911c250 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x564a8911c230 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x564a8911c200 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x564a8911c1b0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x564a8911c140 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|       |         | | `-DeclRefExpr 0x564a8911c120 <col:87> 'T *' lvalue Var 0x564a8911b948 's' 'T *'
|       |         | `-DeclRefExpr 0x564a8911c1e0 <col:91> 'const V' lvalue ParmVar 0x564a890fbe78 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x564a8911c220 <col:98> 'bool' true
|       `-DeclRefExpr 0x564a8911c378 <col:106> 'Args::Slot *' lvalue Var 0x564a8911b668 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x564a89104d18 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x564a89104728 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a891047a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x564a89104828 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x564a89104c78 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x564a891048f0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a89104970 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x564a891049e8 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x564a89104a88 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x564a89104b28 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x564a8911d3a8 <col:60, line:773:5>
|     |-DeclStmt 0x564a8911c470 <line:767:9, col:26>
|     | `-VarDecl 0x564a8911c408 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x564a8911d370 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x564a8911d390 <line:768:13, col:58>
|       | `-VarDecl 0x564a8911c498 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x564a8911c678 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x564a8911c648 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x564a8911c630 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x564a8911c610 <col:26, col:58> 'String' (CXXTemporary 0x564a8911c610)
|       |           `-CXXMemberCallExpr 0x564a8911c5a0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x564a8911c510 <col:26> '<bound member function type>' ->find 0x564a89108698
|       |             | `-CXXThisExpr 0x564a8911c500 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x564a8911c5d8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x564a8911c540 <col:31> 'const char *' lvalue ParmVar 0x564a891048f0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x564a8911c5f0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x564a8911c560 <col:40> 'int' lvalue ParmVar 0x564a89104970 'flags' 'int'
|       |             `-DeclRefExpr 0x564a8911c580 <col:47> 'Args::Slot *' lvalue Var 0x564a8911c408 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x564a8911c730 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x564a8911c718 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x564a8911c6f8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x564a8911c6c8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|       |       `-ImplicitCastExpr 0x564a8911c6b0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x564a8911c690 <col:20> 'String' lvalue Var 0x564a8911c498 'str' 'String'
|       `-CompoundStmt 0x564a8911d348 <col:61, line:772:9>
|         |-DeclStmt 0x564a8911ca70 <line:769:13, col:66>
|         | `-VarDecl 0x564a8911c788 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x564a8911ca40 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x564a8911c9b0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x564a8911c9f8 <col:49> 'T1' lvalue ParmVar 0x564a89104a88 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x564a8911ca28 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x564a8911ca18 <col:61> 'Args *' this
|         |-DeclStmt 0x564a8911cde0 <line:770:13, col:66>
|         | `-VarDecl 0x564a8911caf8 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x564a8911cdb0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x564a8911cd20 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x564a8911cd68 <col:49> 'T2' lvalue ParmVar 0x564a89104b28 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x564a8911cd98 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x564a8911cd88 <col:61> 'Args *' this
|         `-CallExpr 0x564a8911d318 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x564a8911ce08 <col:13> '<bound member function type>' ->postparse 0x564a891088a8
|           | `-CXXThisExpr 0x564a8911cdf8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x564a8911d2d8 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x564a8911ce78 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x564a8911ce38 <col:23> 'T1 *' lvalue Var 0x564a8911c788 's1' 'T1 *'
|           | | `-DeclRefExpr 0x564a8911ce58 <col:29> 'T2 *' lvalue Var 0x564a8911caf8 's2' 'T2 *'
|           | `-CallExpr 0x564a8911d290 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x564a8911d060 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x564a8911d0a8 <col:63> 'P' lvalue ParmVar 0x564a891049e8 'parser' 'P'
|           |   |-DeclRefExpr 0x564a8911d0c8 <col:71> 'String' lvalue Var 0x564a8911c498 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x564a8911d178 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x564a8911d108 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|           |   | `-DeclRefExpr 0x564a8911d0e8 <col:77> 'T1 *' lvalue Var 0x564a8911c788 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x564a8911d238 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x564a8911d1c8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|           |   | `-DeclRefExpr 0x564a8911d1a8 <col:82> 'T2 *' lvalue Var 0x564a8911caf8 's2' 'T2 *'
|           |   `-UnaryOperator 0x564a8911d278 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x564a8911d268 <col:87> 'Args *' this
|           `-DeclRefExpr 0x564a8911d2f8 <col:94> 'Args::Slot *' lvalue Var 0x564a8911c408 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x564a89105108 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x564a89104d98 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a89105068 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x564a89104e50 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a89104ed0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x564a89104f48 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x564a8911d8c0 <col:67, line:780:5>
|     |-DeclStmt 0x564a8911d440 <line:777:9, col:26>
|     | `-VarDecl 0x564a8911d3d8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x564a8911d888 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x564a8911d8a8 <line:778:13, col:58>
|       | `-VarDecl 0x564a8911d468 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x564a8911d648 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x564a8911d618 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x564a8911d600 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x564a8911d5e0 <col:26, col:58> 'String' (CXXTemporary 0x564a8911d5e0)
|       |           `-CXXMemberCallExpr 0x564a8911d570 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x564a8911d4e0 <col:26> '<bound member function type>' ->find 0x564a89108698
|       |             | `-CXXThisExpr 0x564a8911d4d0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x564a8911d5a8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x564a8911d510 <col:31> 'const char *' lvalue ParmVar 0x564a89104e50 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x564a8911d5c0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x564a8911d530 <col:40> 'int' lvalue ParmVar 0x564a89104ed0 'flags' 'int'
|       |             `-DeclRefExpr 0x564a8911d550 <col:47> 'Args::Slot *' lvalue Var 0x564a8911d3d8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x564a8911d700 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x564a8911d6e8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x564a8911d6c8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x564a8911d698 <col:20> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|       |       `-ImplicitCastExpr 0x564a8911d680 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x564a8911d660 <col:20> 'String' lvalue Var 0x564a8911d468 'str' 'String'
|       `-CallExpr 0x564a8911d858 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x564a8911d728 <col:13> '<bound member function type>' ->postparse 0x564a891088a8
|         | `-CXXThisExpr 0x564a8911d718 <col:13> 'Args *' implicit this
|         |-CallExpr 0x564a8911d808 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x564a8911d778 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x564a8911d758 <col:23> 'P' lvalue ParmVar 0x564a89104f48 'parser' 'P'
|         | |-DeclRefExpr 0x564a8911d7c0 <col:36> 'String' lvalue Var 0x564a8911d468 'str' 'String'
|         | `-UnaryOperator 0x564a8911d7f0 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x564a8911d7e0 <col:42> 'Args *' this
|         `-DeclRefExpr 0x564a8911d838 <col:49> 'Args::Slot *' lvalue Var 0x564a8911d3d8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x564a891054a8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x564a89105178 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x564a89105408 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x564a89105230 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a891052b0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x564a89105328 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x564a8911e230 <col:71, line:792:5>
|     |-DeclStmt 0x564a8911d958 <line:784:9, col:26>
|     | `-VarDecl 0x564a8911d8f0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x564a8911da28 <line:785:9, col:29>
|     | `-VarDecl 0x564a8911d988 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x564a8911da10 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x564a8911d9f0 <col:28> 'int' 1
|     |-WhileStmt 0x564a8911e0e0 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x564a8911e100 <line:786:16, col:61>
|     | | `-VarDecl 0x564a8911da50 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x564a8911dc30 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x564a8911dc00 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x564a8911dbe8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x564a8911dbc8 <col:29, col:61> 'String' (CXXTemporary 0x564a8911dbc8)
|     | |           `-CXXMemberCallExpr 0x564a8911db58 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x564a8911dac8 <col:29> '<bound member function type>' ->find 0x564a89108698
|     | |             | `-CXXThisExpr 0x564a8911dab8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x564a8911db90 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x564a8911daf8 <col:34> 'const char *' lvalue ParmVar 0x564a89105230 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x564a8911dba8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x564a8911db18 <col:43> 'int' lvalue ParmVar 0x564a891052b0 'flags' 'int'
|     | |             `-DeclRefExpr 0x564a8911db38 <col:50> 'Args::Slot *' lvalue Var 0x564a8911d8f0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x564a8911dce8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x564a8911dcd0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x564a8911dcb0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x564a8911dc80 <col:23> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|     | |       `-ImplicitCastExpr 0x564a8911dc68 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x564a8911dc48 <col:23> 'String' lvalue Var 0x564a8911da50 'str' 'String'
|     | `-CompoundStmt 0x564a8911e0b8 <col:64, line:790:9>
|     |   |-CallExpr 0x564a8911de40 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x564a8911dd10 <col:13> '<bound member function type>' ->postparse 0x564a891088a8
|     |   | | `-CXXThisExpr 0x564a8911dd00 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x564a8911ddf0 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x564a8911dd60 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x564a8911dd40 <col:23> 'P' lvalue ParmVar 0x564a89105328 'parser' 'P'
|     |   | | |-DeclRefExpr 0x564a8911dda8 <col:36> 'String' lvalue Var 0x564a8911da50 'str' 'String'
|     |   | | `-UnaryOperator 0x564a8911ddd8 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x564a8911ddc8 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x564a8911de20 <col:49> 'Args::Slot *' lvalue Var 0x564a8911d8f0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x564a8911dfd8 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x564a8911de70 <col:13> 'int' lvalue Var 0x564a8911d988 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x564a8911dfc0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x564a8911dfa0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x564a8911df08 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x564a8911dee8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x564a8911ded0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x564a8911de90 <col:28> 'int' lvalue Var 0x564a8911d988 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x564a8911deb0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x564a8911df88 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x564a8911df58 <col:49> 'bool' lvalue ->_read_status 0x564a890e0690
|     |   |         `-ImplicitCastExpr 0x564a8911df38 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x564a8911df28 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x564a8911e088 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x564a8911dff8 <col:13> 'int' lvalue ParmVar 0x564a891052b0 'flags' 'int'
|     |     `-UnaryOperator 0x564a8911e070 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x564a8911e058 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x564a8911e038 <col:23> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x564a8911e210 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x564a8911e148 <col:9> 'bool' lvalue ->_read_status 0x564a890e0690
|       | `-ImplicitCastExpr 0x564a8911e128 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x564a8911e118 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x564a8911e1f0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x564a8911e1d0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x564a8911e1b8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x564a8911e178 <col:25> 'int' lvalue Var 0x564a8911d988 'read_status' 'int'
|           `-IntegerLiteral 0x564a8911e198 <col:40> 'int' 1
|-FunctionTemplateDecl 0x564a89105988 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x564a89105518 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a89105598 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a891058e8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x564a89105658 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a891056d8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x564a89105750 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x564a891057f8 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x564a89122220 <col:84, line:805:5>
|     |-DeclStmt 0x564a8911e2d8 <line:796:9, col:26>
|     | `-VarDecl 0x564a8911e270 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x564a8911e3a8 <line:797:9, col:29>
|     | `-VarDecl 0x564a8911e308 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x564a8911e390 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x564a8911e370 <col:28> 'int' 1
|     |-DeclStmt 0x564a89121748 <line:798:9, col:71>
|     | `-VarDecl 0x564a8911e3f8 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x564a89121718 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x564a89121688 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x564a891216d0 <col:55> 'T' lvalue ParmVar 0x564a891057f8 'variable' 'T &'
|     |     `-UnaryOperator 0x564a89121700 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x564a891216f0 <col:66> 'Args *' this
|     |-WhileStmt 0x564a891220d0 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x564a891220f0 <line:799:16, col:61>
|     | | `-VarDecl 0x564a89121770 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x564a89121950 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x564a89121920 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x564a89121908 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x564a891218e8 <col:29, col:61> 'String' (CXXTemporary 0x564a891218e8)
|     | |           `-CXXMemberCallExpr 0x564a89121878 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x564a891217e8 <col:29> '<bound member function type>' ->find 0x564a89108698
|     | |             | `-CXXThisExpr 0x564a891217d8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x564a891218b0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x564a89121818 <col:34> 'const char *' lvalue ParmVar 0x564a89105658 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x564a891218c8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x564a89121838 <col:43> 'int' lvalue ParmVar 0x564a891056d8 'flags' 'int'
|     | |             `-DeclRefExpr 0x564a89121858 <col:50> 'Args::Slot *' lvalue Var 0x564a8911e270 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x564a89121a08 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x564a891219f0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x564a891219d0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x564a891219a0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|     | |       `-ImplicitCastExpr 0x564a89121988 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x564a89121968 <col:23> 'String' lvalue Var 0x564a89121770 'str' 'String'
|     | `-CompoundStmt 0x564a891220a8 <col:64, line:803:9>
|     |   |-CallExpr 0x564a89121e30 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x564a89121a30 <col:13> '<bound member function type>' ->postparse 0x564a891088a8
|     |   | | `-CXXThisExpr 0x564a89121a20 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x564a89121df0 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x564a89121a60 <col:23> 'T *' lvalue Var 0x564a8911e3f8 's' 'T *'
|     |   | | `-CallExpr 0x564a89121db0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x564a89121c40 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x564a89121c88 <col:56> 'P' lvalue ParmVar 0x564a89105750 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x564a89121ca8 <col:64> 'String' lvalue Var 0x564a89121770 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x564a89121d58 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x564a89121ce8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|     |   | |   | `-DeclRefExpr 0x564a89121cc8 <col:70> 'T *' lvalue Var 0x564a8911e3f8 's' 'T *'
|     |   | |   `-UnaryOperator 0x564a89121d98 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x564a89121d88 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x564a89121e10 <col:81> 'Args::Slot *' lvalue Var 0x564a8911e270 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x564a89121fc8 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x564a89121e60 <col:13> 'int' lvalue Var 0x564a8911e308 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x564a89121fb0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x564a89121f90 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x564a89121ef8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x564a89121ed8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x564a89121ec0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x564a89121e80 <col:28> 'int' lvalue Var 0x564a8911e308 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x564a89121ea0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x564a89121f78 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x564a89121f48 <col:49> 'bool' lvalue ->_read_status 0x564a890e0690
|     |   |         `-ImplicitCastExpr 0x564a89121f28 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x564a89121f18 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x564a89122078 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x564a89121fe8 <col:13> 'int' lvalue ParmVar 0x564a891056d8 'flags' 'int'
|     |     `-UnaryOperator 0x564a89122060 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x564a89122048 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x564a89122028 <col:23> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x564a89122200 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x564a89122138 <col:9> 'bool' lvalue ->_read_status 0x564a890e0690
|       | `-ImplicitCastExpr 0x564a89122118 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x564a89122108 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x564a891221e0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x564a891221c0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x564a891221a8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x564a89122168 <col:25> 'int' lvalue Var 0x564a8911e308 'read_status' 'int'
|           `-IntegerLiteral 0x564a89122188 <col:40> 'int' 1
|-FunctionTemplateDecl 0x564a89105f68 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x564a89105a00 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x564a89105a78 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x564a89105ec8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x564a89105b38 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x564a89105bb8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x564a89105c30 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x564a89105d80 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x564a89123028 <col:87, line:821:5>
|     |-DeclStmt 0x564a891222d0 <line:809:9, col:26>
|     | `-VarDecl 0x564a89122268 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x564a891223a0 <line:810:9, col:29>
|     | `-VarDecl 0x564a89122300 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x564a89122388 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x564a89122368 <col:28> 'int' 1
|     |-DeclStmt 0x564a891225e8 <line:811:9, col:38>
|     | `-VarDecl 0x564a891224d0 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x564a891225c0 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x564a89122548 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x564a891225a0 <col:29> 'Vector<T>' lvalue ParmVar 0x564a89105d80 'variable' 'Vector<T> &'
|     |-WhileStmt 0x564a89122ed8 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x564a89122ef8 <line:812:16, col:61>
|     | | `-VarDecl 0x564a89122610 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x564a891227f0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x564a891227c0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x564a891227a8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x564a89122788 <col:29, col:61> 'String' (CXXTemporary 0x564a89122788)
|     | |           `-CXXMemberCallExpr 0x564a89122718 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x564a89122688 <col:29> '<bound member function type>' ->find 0x564a89108698
|     | |             | `-CXXThisExpr 0x564a89122678 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x564a89122750 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x564a891226b8 <col:34> 'const char *' lvalue ParmVar 0x564a89105b38 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x564a89122768 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x564a891226d8 <col:43> 'int' lvalue ParmVar 0x564a89105bb8 'flags' 'int'
|     | |             `-DeclRefExpr 0x564a891226f8 <col:50> 'Args::Slot *' lvalue Var 0x564a89122268 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x564a891228a8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x564a89122890 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x564a89122870 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x564a89122840 <col:23> '<bound member function type>' .operator int (String::*)() const 0x564a88c07188
|     | |       `-ImplicitCastExpr 0x564a89122828 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x564a89122808 <col:23> 'String' lvalue Var 0x564a89122610 'str' 'String'
|     | `-CompoundStmt 0x564a89122ea0 <col:64, line:819:9>
|     |   |-DeclStmt 0x564a89122968 <line:813:13, col:23>
|     |   | `-VarDecl 0x564a891228d0 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x564a89122948 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x564a89122ae8 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x564a89122990 <col:13> '<bound member function type>' ->postparse 0x564a891088a8
|     |   | | `-CXXThisExpr 0x564a89122980 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x564a89122a90 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x564a891229e0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x564a891229c0 <col:23> 'P' lvalue ParmVar 0x564a89105c30 'parser' 'P'
|     |   | | |-DeclRefExpr 0x564a89122a28 <col:36> 'String' lvalue Var 0x564a89122610 'str' 'String'
|     |   | | |-DeclRefExpr 0x564a89122a48 <col:41> 'T' lvalue Var 0x564a891228d0 'sx' 'T'
|     |   | | `-UnaryOperator 0x564a89122a78 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x564a89122a68 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x564a89122ac8 <col:53> 'Args::Slot *' lvalue Var 0x564a89122268 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x564a89122c40 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x564a89122b78 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x564a89122b48 <col:17> 'bool' lvalue ->_read_status 0x564a890e0690
|     |   | |   `-ImplicitCastExpr 0x564a89122b28 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x564a89122b18 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x564a89122c18 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x564a89122bb0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x564a89122b90 <col:17> 'Vector<T> *' lvalue Var 0x564a891224d0 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x564a89122bf8 <col:30> 'T' lvalue Var 0x564a891228d0 'sx' 'T'
|     |   |-BinaryOperator 0x564a89122dc0 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x564a89122c58 <col:13> 'int' lvalue Var 0x564a89122300 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x564a89122da8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x564a89122d88 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x564a89122cf0 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x564a89122cd0 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x564a89122cb8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x564a89122c78 <col:28> 'int' lvalue Var 0x564a89122300 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x564a89122c98 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x564a89122d70 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x564a89122d40 <col:49> 'bool' lvalue ->_read_status 0x564a890e0690
|     |   |         `-ImplicitCastExpr 0x564a89122d20 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x564a89122d10 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x564a89122e70 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x564a89122de0 <col:13> 'int' lvalue ParmVar 0x564a89105bb8 'flags' 'int'
|     |     `-UnaryOperator 0x564a89122e58 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x564a89122e40 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x564a89122e20 <col:23> 'const int' lvalue Var 0x564a890e9e98 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x564a89123008 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x564a89122f40 <col:9> 'bool' lvalue ->_read_status 0x564a890e0690
|       | `-ImplicitCastExpr 0x564a89122f20 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x564a89122f10 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x564a89122fe8 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x564a89122fc8 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x564a89122fb0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x564a89122f70 <col:25> 'int' lvalue Var 0x564a89122300 'read_status' 'int'
|           `-IntegerLiteral 0x564a89122f90 <col:40> 'int' 1
|-AccessSpecDecl 0x564a89105fe0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x564a89106008 prev 0x564a890e8198 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x564a89106100 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x564a891061f0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x564a89123060 <col:16, line:828:9>
| |-CXXDestructorDecl 0x564a891062e0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x564a89123070 <col:25, line:830:9>
| |-CXXMethodDecl 0x564a891063e0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x564a89106490 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x564a89106538 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x564a89106538
| | `-ParmVarDecl 0x564a89106648 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x564a89106e08 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x564a89106e08
|   `-ParmVarDecl 0x564a89106f18 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x564a891066b8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x564a89106818 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x564a89106a10 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x564a891068c0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x564a89106938 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x564a89123250 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x564a89106cc8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x564a891230c0 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x564a89123080 <col:20> 'void *' lvalue ParmVar 0x564a891068c0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x564a89106d30 '_slot' 'char *'
| | | `-CXXNewExpr 0x564a89123148 <col:32, col:45> 'char *' array Function 0x564a88b1bd58 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x564a89123130 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x564a89123100 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x564a89106938 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x564a89106d90 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x564a89123210 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x564a891231d0 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x564a89106938 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x564a891232d0 <col:61, line:838:9>
| |-CXXDestructorDecl 0x564a89106b10 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x564a891062e0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x564a89123358 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x564a89123338 <line:840:13, col:22> 'void' array Function 0x564a88b1c0b8 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x564a89123320 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x564a891232f0 <col:22> 'char *' lvalue ->_slot 0x564a89106d30
| |         `-CXXThisExpr 0x564a891232e0 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x564a89106c10 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x564a891063e0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x564a89123548 <col:22, line:844:9>
| |   `-CallExpr 0x564a891234b0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x564a89123498 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x564a89123478 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x564a88bf29b8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x564a891234e8 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x564a891233c8 <col:20> 'void *' lvalue ->_ptr 0x564a89106cc8
| |     |   `-CXXThisExpr 0x564a891233b8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x564a89123518 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x564a89123500 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x564a89123408 <col:26> 'char *' lvalue ->_slot 0x564a89106d30
| |     |     `-CXXThisExpr 0x564a891233f8 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x564a89123530 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x564a89123448 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x564a89106d90
| |         `-CXXThisExpr 0x564a89123438 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x564a89106cc8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x564a89106d30 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x564a89106d90 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x564a89106f88 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x564a89106f88
| | `-ParmVarDecl 0x564a89107098 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x564a89107138 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x564a89107138
|   `-ParmVarDecl 0x564a89107248 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x564a891073e8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x564a891072b8 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x564a89107358 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x564a89107680 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x564a89107878 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x564a89107748 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x564a891079f8 '_ptr' 'T *'
|   | | `-ParenListExpr 0x564a89123580 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x564a89123560 <col:20> 'T *' lvalue ParmVar 0x564a89107748 'ptr' 'T *'
|   | `-CompoundStmt 0x564a891235d0 <col:25, line:854:9>
|   |-CXXMethodDecl 0x564a89107948 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x564a891063e0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x564a89123788 <col:22, line:857:9>
|   |   `-CallExpr 0x564a89123758 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x564a891235e0 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x564a890742d8 0x564a88d34f38 0x564a88be3a28
|   |     |-CXXOperatorCallExpr 0x564a891236e8 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x564a89123678 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x564a88f00860 0x564a88f003d8 0x564a88f00008 0x564a88effc28 0x564a88eff848 0x564a88eff478
|   |     | `-MemberExpr 0x564a89123648 <col:29> 'T *' lvalue ->_ptr 0x564a891079f8
|   |     |   `-CXXThisExpr 0x564a89123638 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x564a89123728 <col:35> 'T' lvalue ->_slot 0x564a89107a58
|   |       `-CXXThisExpr 0x564a89123718 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x564a891079f8 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x564a89107a58 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x564a89107ac0 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x564a89107bc0 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x564a89107c10 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a89107ba0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x564a89107b80 <col:31> 'int' 48
|-FieldDecl 0x564a89107c38 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x564a89107c98 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x564a89107cf8 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x564a89107e30 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x564a89107f40 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x564a89107fa0 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x564a89108050 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x564a89108278 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x564a89108180 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x564a891083c8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x564a89108338 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x564a89108698 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x564a89108488 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x564a89108508 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x564a891085b0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x564a891088a8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x564a89108760 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x564a891087d8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x564a89108978 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x564a89108ac8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x564a89108a30 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x564a89108e28 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x564a89108b88 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x564a89108c08 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x564a89108c88 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x564a89108d38 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x564a89109050 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x564a89108f00 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x564a89108f78 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x564a89109368 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x564a89109100 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x564a891092c8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x564a891091d8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AnyArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a8913cbe0 <../dummy_inc/click/args.hh:1326:1, line:1338:1> line:1326:7 referenced class AnyArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a8913ccf8 <col:1, col:7> col:7 implicit class AnyArg
|-AccessSpecDecl 0x564a8913cd88 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x564a8913cf38 <line:1327:5, line:1329:5> line:1327:17 parse 'bool (const String &, const ArgContext &)' static
| |-ParmVarDecl 0x564a8913cdc0 <col:23, col:36> col:37 'const String &'
| |-ParmVarDecl 0x564a8913ce38 <col:39, col:60> col:58 'const ArgContext &' cinit
| | `-DeclRefExpr 0x564a8913d648 <col:60> 'const ArgContext' lvalue Var 0x564a891237b0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x564a8913d6c8 <col:72, line:1329:5>
|   `-ReturnStmt 0x564a8913d6b8 <line:1328:9, col:16>
|     `-CXXBoolLiteralExpr 0x564a8913d6a8 <col:16> 'bool' true
|-CXXMethodDecl 0x564a8913d1c8 <line:1330:5, line:1333:5> line:1330:17 parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x564a8913cff8 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x564a8913d070 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x564a8913d0e8 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x564a8913d668 <col:79> 'const ArgContext' lvalue Var 0x564a891237b0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x564a8913d7b0 <col:91, line:1333:5>
|   |-CXXOperatorCallExpr 0x564a8913d758 <line:1331:9, col:18> 'String' lvalue
|   | |-ImplicitCastExpr 0x564a8913d740 <col:16> 'String &(*)(const String &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564a8913d720 <col:16> 'String &(const String &)' lvalue CXXMethod 0x564a88c24f00 'operator=' 'String &(const String &)'
|   | |-DeclRefExpr 0x564a8913d6e0 <col:9> 'String' lvalue ParmVar 0x564a8913d070 'result' 'String &'
|   | `-DeclRefExpr 0x564a8913d700 <col:18> 'const String' lvalue ParmVar 0x564a8913cff8 'str' 'const String &'
|   `-ReturnStmt 0x564a8913d7a0 <line:1332:9, col:16>
|     `-CXXBoolLiteralExpr 0x564a8913d790 <col:16> 'bool' true
|-CXXMethodDecl 0x564a8913d578 <line:1334:5, line:1337:5> line:1334:17 parse 'bool (const String &, Vector<String> &, const ArgContext &)' static
| |-ParmVarDecl 0x564a8913d290 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x564a8913d3e0 <col:42, col:58> col:58 used result 'Vector<String> &'
| |-ParmVarDecl 0x564a8913d458 <col:66, col:87> col:85 'const ArgContext &' cinit
| | `-DeclRefExpr 0x564a8913d688 <col:87> 'const ArgContext' lvalue Var 0x564a891237b0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x564a8913d8e8 <col:99, line:1337:5>
|   |-CXXMemberCallExpr 0x564a8913d8a0 <line:1335:9, col:29> 'void'
|   | |-MemberExpr 0x564a8913d870 <col:9, col:16> '<bound member function type>' .push_back 0x564a8901d668
|   | | `-DeclRefExpr 0x564a8913d7d0 <col:9> 'Vector<String>':'Vector<String>' lvalue ParmVar 0x564a8913d3e0 'result' 'Vector<String> &'
|   | `-DeclRefExpr 0x564a8913d850 <col:26> 'const String' lvalue ParmVar 0x564a8913d290 'str' 'const String &'
|   `-ReturnStmt 0x564a8913d8d8 <line:1336:9, col:16>
|     `-CXXBoolLiteralExpr 0x564a8913d8c8 <col:16> 'bool' true
|-CXXConstructorDecl 0x564a88df8c68 <line:1326:7> col:7 implicit referenced constexpr AnyArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x564a88df8d68 <col:7> col:7 implicit constexpr AnyArg 'void (const AnyArg &)' inline default trivial noexcept-unevaluated 0x564a88df8d68
| `-ParmVarDecl 0x564a88df8e78 <col:7> col:7 'const AnyArg &'
|-CXXConstructorDecl 0x564a88df8f18 <col:7> col:7 implicit used constexpr AnyArg 'void (AnyArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88df9028 <col:7> col:7 'AnyArg &&'
| `-CompoundStmt 0x564a88df9760 <col:7>
`-CXXDestructorDecl 0x564a88df90c8 <col:7> col:7 implicit referenced ~AnyArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.AnyArg = type { i8 }
  NonVirtualBaseLLVMType:%class.AnyArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Storage
         0 |   Storage::index_type _capacity
         4 |   volatile Storage::index_type _head
         8 |   volatile Storage::index_type _tail
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ef0a00 <../dummy_inc/click/standard/storage.hh:9:1, line:54:1> line:9:7 referenced class Storage definition
|-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x564a88ef0b18 <col:1, col:7> col:7 implicit referenced class Storage
|-AccessSpecDecl 0x564a88ef0ba8 <col:17, col:23> col:17 public
|-TypedefDecl 0x564a88ef0be0 <line:11:5, col:22> col:22 referenced index_type 'uint32_t':'unsigned int'
| `-TypedefType 0x564a88b1e0e0 'uint32_t' sugar
|   |-Typedef 0x564a88a2d4c8 'uint32_t'
|   `-TypedefType 0x564a88a065a0 '__uint32_t' sugar
|     |-Typedef 0x564a88a06198 '__uint32_t'
|     `-BuiltinType 0x564a889c4620 'unsigned int'
|-TypedefDecl 0x564a88ef0c48 <line:12:5, col:21> col:21 referenced signed_index_type 'int32_t':'int'
| `-TypedefType 0x564a88b1e1c0 'int32_t' sugar
|   |-Typedef 0x564a88a2d328 'int32_t'
|   `-TypedefType 0x564a88a06510 '__int32_t' sugar
|     |-Typedef 0x564a88a06128 '__int32_t'
|     `-BuiltinType 0x564a889c4580 'int'
|-VarDecl 0x564a88ef0cd0 <line:13:5, col:59> col:29 referenced invalid_index 'const Storage::index_type':'const unsigned int' static cinit
| `-CStyleCastExpr 0x564a88ef0d98 <col:45, col:59> 'Storage::index_type':'unsigned int' <NoOp>
|   `-ImplicitCastExpr 0x564a88ef0d80 <col:58, col:59> 'Storage::index_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|     `-UnaryOperator 0x564a88ef0d58 <col:58, col:59> 'int' prefix '-'
|       `-IntegerLiteral 0x564a88ef0d38 <col:59> 'int' 1
|-CXXConstructorDecl 0x564a88ef0e80 <line:15:5, col:38> col:5 Storage 'void ()'
| |-CXXCtorInitializer Field 0x564a88ef26d0 '_head' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x564a88ef27d8 <col:23> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564a88ef2798 <col:23> 'int' 0
| |-CXXCtorInitializer Field 0x564a88ef2730 '_tail' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x564a88ef2858 <col:33> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564a88ef2818 <col:33> 'int' 0
| `-CompoundStmt 0x564a88ef28a8 <col:36, col:38>
|-CXXConversionDecl 0x564a88ef0f88 <line:17:5, col:52> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x564a88ef2998 <col:27, col:52>
|   `-ReturnStmt 0x564a88ef2988 <col:29, col:45>
|     `-BinaryOperator 0x564a88ef2968 <col:36, col:45> 'bool' '!='
|       |-ImplicitCastExpr 0x564a88ef2938 <col:36> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x564a88ef28c8 <col:36> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x564a88ef26d0
|       |   `-CXXThisExpr 0x564a88ef28b8 <col:36> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x564a88ef2950 <col:45> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x564a88ef2908 <col:45> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x564a88ef2730
|           `-CXXThisExpr 0x564a88ef28f8 <col:45> 'const Storage *' implicit this
|-CXXMethodDecl 0x564a88ef1058 <line:18:5, col:49> col:10 empty 'bool () const'
| `-CompoundStmt 0x564a88ef2a90 <col:24, col:49>
|   `-ReturnStmt 0x564a88ef2a80 <col:26, col:42>
|     `-BinaryOperator 0x564a88ef2a60 <col:33, col:42> 'bool' '=='
|       |-ImplicitCastExpr 0x564a88ef2a30 <col:33> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x564a88ef29c0 <col:33> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x564a88ef26d0
|       |   `-CXXThisExpr 0x564a88ef29b0 <col:33> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x564a88ef2a48 <col:42> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x564a88ef2a00 <col:42> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x564a88ef2730
|           `-CXXThisExpr 0x564a88ef29f0 <col:42> 'const Storage *' implicit this
|-CXXMethodDecl 0x564a88ef1120 <line:19:5, col:16> col:9 size 'int () const'
|-CXXMethodDecl 0x564a88ef1360 <line:20:5, col:48> col:9 used size 'int (Storage::index_type, Storage::index_type) const'
| |-ParmVarDecl 0x564a88ef11d0 <col:14, col:25> col:25 head 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x564a88ef1248 <col:31, col:42> col:42 tail 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x564a88ef1438 <line:21:5, col:46> col:9 capacity 'int () const'
| `-CompoundStmt 0x564a88ef2b28 <col:26, col:46>
|   `-ReturnStmt 0x564a88ef2b18 <col:28, col:35>
|     `-ImplicitCastExpr 0x564a88ef2b00 <col:35> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x564a88ef2ae8 <col:35> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x564a88ef2ab8 <col:35> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x564a88ef2648
|           `-CXXThisExpr 0x564a88ef2aa8 <col:35> 'const Storage *' implicit this
|-CXXMethodDecl 0x564a88ef1528 <line:23:5, col:45> col:16 head 'Storage::index_type () const'
| `-CompoundStmt 0x564a88ef2ba8 <col:29, col:45>
|   `-ReturnStmt 0x564a88ef2b98 <col:31, col:38>
|     `-ImplicitCastExpr 0x564a88ef2b80 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564a88ef2b50 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x564a88ef26d0
|         `-CXXThisExpr 0x564a88ef2b40 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x564a88ef15e8 <line:24:5, col:45> col:16 tail 'Storage::index_type () const'
| `-CompoundStmt 0x564a88ef2c28 <col:29, col:45>
|   `-ReturnStmt 0x564a88ef2c18 <col:31, col:38>
|     `-ImplicitCastExpr 0x564a88ef2c00 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564a88ef2bd0 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x564a88ef2730
|         `-CXXThisExpr 0x564a88ef2bc0 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x564a88ef1788 <line:26:5, line:28:5> line:26:16 used next_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x564a88ef1698 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x564a88ef2e18 <col:43, line:28:5>
|   `-ReturnStmt 0x564a88ef2e08 <line:27:2, col:32>
|     `-ParenExpr 0x564a88ef2de8 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x564a88ef2db8 <col:10, col:31> 'unsigned int'
|         |-BinaryOperator 0x564a88ef2cd0 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x564a88ef2ca0 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a88ef2c40 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x564a88ef1698 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x564a88ef2cb8 <col:13> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         |   `-MemberExpr 0x564a88ef2c70 <col:13> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x564a88ef2648
|         |     `-CXXThisExpr 0x564a88ef2c60 <col:13> 'const Storage *' implicit this
|         |-BinaryOperator 0x564a88ef2d60 <col:25, col:27> 'unsigned int' '+'
|         | |-ImplicitCastExpr 0x564a88ef2d30 <col:25> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a88ef2cf0 <col:25> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x564a88ef1698 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x564a88ef2d48 <col:27> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x564a88ef2d10 <col:27> 'int' 1
|         `-ImplicitCastExpr 0x564a88ef2da0 <col:31> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x564a88ef2d80 <col:31> 'int' 0
|-CXXMethodDecl 0x564a88ef18d0 <line:29:5, line:31:5> line:29:16 prev_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x564a88ef1840 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x564a88ef3008 <col:43, line:31:5>
|   `-ReturnStmt 0x564a88ef2ff8 <line:30:2, col:32>
|     `-ParenExpr 0x564a88ef2fd8 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x564a88ef2fa8 <col:10, col:23> 'unsigned int'
|         |-BinaryOperator 0x564a88ef2ea0 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x564a88ef2e70 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a88ef2e30 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x564a88ef1840 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x564a88ef2e88 <col:13> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x564a88ef2e50 <col:13> 'int' 0
|         |-BinaryOperator 0x564a88ef2f30 <col:17, col:19> 'unsigned int' '-'
|         | |-ImplicitCastExpr 0x564a88ef2f00 <col:17> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x564a88ef2ec0 <col:17> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x564a88ef1840 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x564a88ef2f18 <col:19> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x564a88ef2ee0 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x564a88ef2f90 <col:23> 'Storage::index_type':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x564a88ef2f60 <col:23> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x564a88ef2648
|             `-CXXThisExpr 0x564a88ef2f50 <col:23> 'const Storage *' implicit this
|-CXXMethodDecl 0x564a88ef1a48 <line:34:5, col:54> col:10 set_capacity 'void (Storage::index_type)'
| |-ParmVarDecl 0x564a88ef1988 <col:23, col:34> col:34 used c 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x564a88ef30b8 <col:37, col:54>
|   `-BinaryOperator 0x564a88ef3098 <col:39, col:51> 'Storage::index_type':'unsigned int' lvalue '='
|     |-MemberExpr 0x564a88ef3030 <col:39> 'Storage::index_type':'unsigned int' lvalue ->_capacity 0x564a88ef2648
|     | `-CXXThisExpr 0x564a88ef3020 <col:39> 'Storage *' implicit this
|     `-ImplicitCastExpr 0x564a88ef3080 <col:51> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564a88ef3060 <col:51> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x564a88ef1988 'c' 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x564a88ef1b90 <line:35:5, col:38> col:17 set_head 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x564a88ef1b00 <col:26, col:37> col:37 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x564a88ef1cd8 <line:36:5, col:38> col:17 set_tail 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x564a88ef1c48 <col:26, col:37> col:37 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x564a88ef1e20 <line:37:5, col:46> col:17 set_head_release 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x564a88ef1d90 <col:34, col:45> col:45 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x564a88ef1f68 <line:38:5, col:46> col:17 set_tail_acquire 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x564a88ef1ed8 <col:34, col:45> col:45 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x564a88ef2058 <line:39:5, col:43> col:23 reserve_tail_atomic 'Storage::index_type ()' inline
|-CXXMethodDecl 0x564a88ef22f8 <line:41:5, line:43:35> line:41:24 packet_memory_barrier 'void (Packet *volatile &, volatile Storage::index_type &)' static inline
| |-ParmVarDecl 0x564a88ef2140 <col:46, col:64> col:64 packet 'Packet *volatile &'
| |-ParmVarDecl 0x564a88ef21e8 <line:42:46, col:67> col:67 index 'volatile Storage::index_type &'
| `-DeprecatedAttr 0x564a88ef23a8 <line:43:24> "" ""
|-CXXMethodDecl 0x564a88ef24f8 <line:44:5, line:45:35> line:44:17 packet_memory_barrier 'void (Packet *volatile &)' inline
| |-ParmVarDecl 0x564a88ef2430 <col:39, col:57> col:57 packet 'Packet *volatile &'
| `-DeprecatedAttr 0x564a88ef25a0 <line:45:24> "" ""
|-AccessSpecDecl 0x564a88ef2610 <line:47:3, col:12> col:3 protected
|-FieldDecl 0x564a88ef2648 <line:48:5, col:16> col:16 referenced _capacity 'Storage::index_type':'unsigned int'
|-AccessSpecDecl 0x564a88ef2698 <line:50:3, col:10> col:3 private
|-FieldDecl 0x564a88ef26d0 <line:51:5, col:25> col:25 referenced _head 'volatile Storage::index_type':'volatile unsigned int'
`-FieldDecl 0x564a88ef2730 <line:52:5, col:25> col:25 referenced _tail 'volatile Storage::index_type':'volatile unsigned int'

Layout: <CGRecordLayout
  LLVMType:%class.Storage = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.Storage = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ElementCastArg
         0 |   const char * type
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a891401e0 <../dummy_inc/click/args.hh:1396:1, line:1405:1> line:1396:7 referenced class ElementCastArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a891402f8 <col:1, col:7> col:7 implicit referenced class ElementCastArg
|-AccessSpecDecl 0x564a89140388 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x564a89140498 <line:1397:5, line:1399:5> line:1397:5 used ElementCastArg 'void (const char *)'
| |-ParmVarDecl 0x564a891403c8 <col:20, col:32> col:32 used t 'const char *'
| |-CXXCtorInitializer Field 0x564a89140c20 'type' 'const char *'
| | `-ImplicitCastExpr 0x564a89140cc8 <line:1398:16> 'const char *' <LValueToRValue>
| |   `-DeclRefExpr 0x564a89140c88 <col:16> 'const char *' lvalue ParmVar 0x564a891403c8 't' 'const char *'
| `-CompoundStmt 0x564a89140d10 <col:19, line:1399:5>
|-CXXMethodDecl 0x564a891406f0 <line:1400:5, col:75> col:10 referenced parse 'bool (const String &, Element *&, const ArgContext &)'
| |-ParmVarDecl 0x564a89140558 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x564a891405d8 <col:35, col:45> col:45 result 'Element *&'
| `-ParmVarDecl 0x564a89140650 <col:53, col:71> col:71 args 'const ArgContext &'
|-FunctionTemplateDecl 0x564a89140b98 <line:1401:5, line:1403:5> line:1401:31 parse
| |-TemplateTypeParmDecl 0x564a891407a8 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x564a89140af8 <col:26, line:1403:5> line:1401:31 parse 'bool (const String &, T *&, const ArgContext &)'
| | |-ParmVarDecl 0x564a89140858 <col:37, col:51> col:51 referenced str 'const String &'
| | |-ParmVarDecl 0x564a89140960 <col:56, col:60> col:60 referenced result 'T *&'
| | |-ParmVarDecl 0x564a891409d8 <col:68, col:86> col:86 referenced args 'const ArgContext &'
| | `-CompoundStmt 0x564a891412e0 <col:92, line:1403:5>
| |   `-ReturnStmt 0x564a891412d0 <line:1402:9, col:69>
| |     `-CXXMemberCallExpr 0x564a89141298 <col:16, col:69> 'bool'
| |       |-MemberExpr 0x564a89141268 <col:16> '<bound member function type>' ->parse 0x564a891406f0
| |       | `-CXXThisExpr 0x564a89141258 <col:16> 'ElementCastArg *' implicit this
| |       |-DeclRefExpr 0x564a89140d90 <col:22> 'const String' lvalue ParmVar 0x564a89140858 'str' 'const String &'
| |       |-CXXReinterpretCastExpr 0x564a89140de8 <col:27, col:62> 'Element *' lvalue reinterpret_cast<class Element *&> <Dependent>
| |       | `-DeclRefExpr 0x564a89140db0 <col:56> 'T *' lvalue ParmVar 0x564a89140960 'result' 'T *&'
| |       `-DeclRefExpr 0x564a89140e18 <col:65> 'const ArgContext' lvalue ParmVar 0x564a891409d8 'args' 'const ArgContext &'
| |-CXXMethodDecl 0x564a89141148 <line:1401:26, col:90> col:31 parse 'bool (const String &, Element *&, const ArgContext &)'
| | |-TemplateArgument type 'Element'
| | |-ParmVarDecl 0x564a89140ef0 <col:37, col:51> col:51 str 'const String &'
| | |-ParmVarDecl 0x564a89141000 <col:56, col:60> col:60 result 'Element *&'
| | `-ParmVarDecl 0x564a89141068 <col:68, col:86> col:86 args 'const ArgContext &'
| `-CXXMethodDecl 0x564a88dfadb8 <col:26, line:1403:5> line:1401:31 used parse 'bool (const String &, Storage *&, const ArgContext &)'
|   |-TemplateArgument type 'Storage'
|   |-ParmVarDecl 0x564a88dfab20 <col:37, col:51> col:51 str 'const String &'
|   |-ParmVarDecl 0x564a88dfac30 <col:56, col:60> col:60 result 'Storage *&'
|   `-ParmVarDecl 0x564a88dfac98 <col:68, col:86> col:86 args 'const ArgContext &'
|-FieldDecl 0x564a89140c20 <line:1404:5, col:17> col:17 type 'const char *'
|-CXXConstructorDecl 0x564a88dfa328 <line:1396:7> col:7 implicit constexpr ElementCastArg 'void (const ElementCastArg &)' inline default trivial noexcept-unevaluated 0x564a88dfa328
| `-ParmVarDecl 0x564a88dfa438 <col:7> col:7 'const ElementCastArg &'
|-CXXConstructorDecl 0x564a88dfa4d8 <col:7> col:7 implicit constexpr ElementCastArg 'void (ElementCastArg &&)' inline default trivial noexcept-unevaluated 0x564a88dfa4d8
| `-ParmVarDecl 0x564a88dfa5e8 <col:7> col:7 'ElementCastArg &&'
`-CXXDestructorDecl 0x564a88dfa6a0 <col:7> col:7 implicit referenced ~ElementCastArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ElementCastArg = type { i8* }
  NonVirtualBaseLLVMType:%class.ElementCastArg = type { i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class RouterVisitor
         0 |   (RouterVisitor vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Bitvector
         0 |   int _max
         8 |   Bitvector::word_type * _data
        16 |   Bitvector::word_type [2] _f
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class ElementTracker
         0 |   class RouterVisitor (primary base)
         0 |     (RouterVisitor vtable pointer)
         8 |   class Bitvector _reached
         8 |     int _max
        16 |     Bitvector::word_type * _data
        24 |     Bitvector::word_type [2] _f
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class ElementCastTracker
         0 |   class ElementTracker (primary base)
         0 |     class RouterVisitor (primary base)
         0 |       (RouterVisitor vtable pointer)
         8 |     class Bitvector _reached
         8 |       int _max
        16 |       Bitvector::word_type * _data
        24 |       Bitvector::word_type [2] _f
        32 |     class Vector<class Element *> _elements
        32 |       class vector_memory<class sized_array_memory<8> > vm_
        32 |         vector_memory<class sized_array_memory<8> >::type * l_
        40 |         vector_memory::size_type n_
        44 |         vector_memory::size_type capacity_
        48 |   class String _name
        48 |     struct String::rep_t _r
        48 |       const char * data
        56 |       int length
        64 |       struct String::memo_t * memo
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a89076620 prev 0x564a88ff8630 <../dummy_inc/click/routervisitor.hh:15:1, line:53:1> line:15:7 referenced class RouterVisitor definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a89076718 <col:1, col:7> col:7 implicit referenced class RouterVisitor
|-AccessSpecDecl 0x564a890767a8 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x564a89076808 <line:18:5, line:19:5> line:18:5 RouterVisitor 'void ()'
| `-CompoundStmt 0x564a89077028 <col:21, line:19:5>
|-CXXDestructorDecl 0x564a890768f8 <line:22:5, line:23:5> line:22:13 used ~RouterVisitor 'void () noexcept' virtual
| `-CompoundStmt 0x564a89077038 <col:30, line:23:5>
|-CXXMethodDecl 0x564a89076d78 <line:50:5, line:51:54> line:50:18 visit 'bool (Element *, bool, int, Element *, int, int)' virtual
| |-ParmVarDecl 0x564a890769f0 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x564a89076a68 <col:36, col:41> col:41 isoutput 'bool'
| |-ParmVarDecl 0x564a89076ae8 <col:51, col:55> col:55 port 'int'
| |-ParmVarDecl 0x564a89076b60 <line:51:10, col:19> col:19 from_e 'Element *'
| |-ParmVarDecl 0x564a89076be0 <col:27, col:31> col:31 from_port 'int'
| `-ParmVarDecl 0x564a89076c60 <col:42, col:46> col:46 distance 'int'
|-CXXMethodDecl 0x564a89076ea8 <line:15:7> col:7 implicit operator= 'RouterVisitor &(const RouterVisitor &)' inline default noexcept-unevaluated 0x564a89076ea8
| `-ParmVarDecl 0x564a89076fb8 <col:7> col:7 'const RouterVisitor &'
`-CXXConstructorDecl 0x564a89078088 <col:7> col:7 implicit constexpr RouterVisitor 'void (const RouterVisitor &)' inline default noexcept-unevaluated 0x564a89078088
  `-ParmVarDecl 0x564a89078198 <col:7> col:7 'const RouterVisitor &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterVisitor = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.RouterVisitor = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a89066c70 prev 0x564a88f3c3a0 <../dummy_inc/click/bitvector.hh:20:1, line:95:1> line:20:7 referenced class Bitvector definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a89066d68 <col:1, col:7> col:7 implicit referenced class Bitvector
|-AccessSpecDecl 0x564a89066df8 <line:21:3, col:9> col:3 public
|-CXXRecordDecl 0x564a89066e20 <line:23:5, col:11> col:11 referenced class Bit
|-TypedefDecl 0x564a89066fd8 <line:24:5, col:56> col:31 referenced unspecified_bool_type 'bool (Bitvector::*)() const'
| `-MemberPointerType 0x564a89066f50 'bool (Bitvector::*)() const'
|   |-RecordType 0x564a88f3c430 'Bitvector'
|   | `-CXXRecord 0x564a89066c70 'Bitvector'
|   `-ParenType 0x564a89066ef0 'bool () const' sugar
|     `-FunctionProtoType 0x564a88a70b40 'bool () const' const cdecl
|       `-BuiltinType 0x564a889c4500 'bool'
|-TypedefDecl 0x564a89067040 <line:26:5, col:22> col:22 referenced word_type 'uint32_t':'unsigned int'
| `-TypedefType 0x564a88b1e0e0 'uint32_t' sugar
|   |-Typedef 0x564a88a2d4c8 'uint32_t'
|   `-TypedefType 0x564a88a065a0 '__uint32_t' sugar
|     |-Typedef 0x564a88a06198 '__uint32_t'
|     `-BuiltinType 0x564a889c4620 'unsigned int'
|-EnumDecl 0x564a89067098 <line:27:5, col:47> col:5
| |-EnumConstantDecl 0x564a890671a0 <col:12, col:20> col:12 referenced wbits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
| | `-ImplicitCastExpr 0x564a89067310 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a89067180 <col:20> 'int' Int: 32
| |     `-IntegerLiteral 0x564a89067160 <col:20> 'int' 32
| |-EnumConstantDecl 0x564a89067230 <col:24, col:33> col:24 referenced wshift 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
| | `-ImplicitCastExpr 0x564a89067328 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a89067210 <col:33> 'int' Int: 5
| |     `-IntegerLiteral 0x564a890671f0 <col:33> 'int' 5
| `-EnumConstantDecl 0x564a890672c0 <col:36, col:44> col:36 referenced wmask 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|   `-ImplicitCastExpr 0x564a89067340 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a890672a0 <col:44> 'int' Int: 31
|       `-IntegerLiteral 0x564a89067280 <col:44> 'int' 31
|-CXXConstructorDecl 0x564a89067390 <line:29:5, col:22> col:12 Bitvector 'void ()' inline
|-CXXConstructorDecl 0x564a890674e0 <line:30:5, col:36> col:21 Bitvector 'void (int)' inline
| `-ParmVarDecl 0x564a89067450 <col:31, col:35> col:35 n 'int'
|-CXXConstructorDecl 0x564a89067630 <line:31:5, col:39> col:21 Bitvector 'void (bool)' inline
| `-ParmVarDecl 0x564a890675a0 <col:31, col:36> col:36 bit 'bool'
|-CXXConstructorDecl 0x564a89067848 <line:32:5, col:37> col:12 Bitvector 'void (int, bool)' inline
| |-ParmVarDecl 0x564a890676f8 <col:22, col:26> col:26 n 'int'
| `-ParmVarDecl 0x564a89067770 <col:29, col:34> col:34 bit 'bool'
|-CXXConstructorDecl 0x564a890679f8 <line:33:5, col:40> col:12 used Bitvector 'void (const Bitvector &)' inline
| `-ParmVarDecl 0x564a89067938 <col:22, col:39> col:39 x 'const Bitvector &'
|-CXXDestructorDecl 0x564a89067af0 <line:34:5, col:23> col:12 used ~Bitvector 'void () noexcept' inline
|-CXXMethodDecl 0x564a89067c20 <line:36:5, col:23> col:16 used size 'int () const' inline
|-CXXMethodDecl 0x564a89067d98 <line:37:5, col:32> col:16 used operator[] 'Bitvector::Bit (int)' inline
| `-ParmVarDecl 0x564a89067cd8 <col:27, col:31> col:31 i 'int'
|-CXXMethodDecl 0x564a89067ee8 <line:38:5, col:35> col:17 used operator[] 'bool (int) const' inline
| `-ParmVarDecl 0x564a89067e58 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x564a89068038 <line:39:5, col:31> col:16 force_bit 'Bitvector::Bit (int)' inline
| `-ParmVarDecl 0x564a89067fa8 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x564a89068108 <line:41:5, col:28> col:16 used word_size 'int () const' inline
|-CXXMethodDecl 0x564a890681d0 <line:42:5, col:27> col:16 max_word 'int () const' inline
|-CXXMethodDecl 0x564a89068308 <line:43:5, col:29> col:23 words 'Bitvector::word_type *()' inline
|-CXXMethodDecl 0x564a89068428 <line:44:5, col:37> col:29 used words 'const Bitvector::word_type *() const' inline
|-CXXMethodDecl 0x564a890684e8 <line:46:5, col:17> col:10 used zero 'bool () const'
|-CXXConversionDecl 0x564a89068658 <line:47:5, col:45> col:12 operator bool (Bitvector::*)() const 'Bitvector::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x564a89068728 <line:48:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x564a89068958 <line:50:5, col:38> col:16 used assign 'Bitvector &(int, bool)'
| |-ParmVarDecl 0x564a890687e0 <col:23, col:27> col:27 n 'int'
| `-ParmVarDecl 0x564a89068858 <col:30, col:35> col:35 bit 'bool'
|-CXXMethodDecl 0x564a89068ad8 <line:51:5, col:44> col:16 operator= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x564a89068a18 <col:26, col:43> col:43 x 'const Bitvector &'
|-CXXMethodDecl 0x564a89068ba0 <line:52:5, col:16> col:10 used clear 'void ()'
|-CXXMethodDecl 0x564a89068ce8 <line:53:5, col:22> col:10 used resize 'void (int)'
| `-ParmVarDecl 0x564a89068c58 <col:17, col:21> col:21 n 'int'
|-FriendDecl 0x564a89068fa8 <line:55:5, col:73> col:24
| `-FunctionDecl 0x564a89068ee8 parent 0x564a889c4488 <col:5, col:73> col:24 used operator== 'bool (const Bitvector &, const Bitvector &)' inline
|   |-ParmVarDecl 0x564a89068da0 <col:35, col:52> col:52 a 'const Bitvector &'
|   `-ParmVarDecl 0x564a89068e18 <col:55, col:72> col:72 b 'const Bitvector &'
|-FriendDecl 0x564a890691c8 <line:56:5, col:73> col:24
| `-FunctionDecl 0x564a89069108 parent 0x564a889c4488 <col:5, col:73> col:24 operator!= 'bool (const Bitvector &, const Bitvector &)' inline
|   |-ParmVarDecl 0x564a89068ff8 <col:35, col:52> col:52 a 'const Bitvector &'
|   `-ParmVarDecl 0x564a89069070 <col:55, col:72> col:72 b 'const Bitvector &'
|-CXXMethodDecl 0x564a890692d8 <line:57:5, col:51> col:10 nonzero_intersection 'bool (const Bitvector &) const'
| `-ParmVarDecl 0x564a89069218 <col:31, col:48> col:48 x 'const Bitvector &'
|-CXXMethodDecl 0x564a890693c8 <line:59:5, col:34> col:22 used operator~ 'Bitvector () const' inline
|-FriendDecl 0x564a89069688 <line:60:5, col:70> col:29
| `-FunctionDecl 0x564a890695c8 parent 0x564a889c4488 <col:5, col:70> col:29 used operator& 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x564a89069478 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x564a890694f0 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x564a890698a8 <line:61:5, col:70> col:29
| `-FunctionDecl 0x564a890697e8 parent 0x564a889c4488 <col:5, col:70> col:29 operator| 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x564a890696d8 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x564a89069750 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x564a89069ac8 <line:62:5, col:70> col:29
| `-FunctionDecl 0x564a89069a08 parent 0x564a889c4488 <col:5, col:70> col:29 operator^ 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x564a890698f8 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x564a89069970 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x564a89069ce8 <line:63:5, col:70> col:29
| `-FunctionDecl 0x564a89069c28 parent 0x564a889c4488 <col:5, col:70> col:29 operator- 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x564a89069b18 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x564a89069b90 <col:52, col:69> col:69 b 'const Bitvector &'
|-CXXMethodDecl 0x564a89069d48 <line:65:5, col:15> col:10 used flip 'void ()'
|-CXXMethodDecl 0x564a89069e08 <line:66:5, col:24> col:17 negate 'void ()' inline
|-CXXMethodDecl 0x564a89069f48 <line:67:5, col:45> col:16 used operator&= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x564a89069eb8 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x564a8906a090 <line:68:5, col:45> col:16 used operator|= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x564a8906a000 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x564a8906a1d8 <line:69:5, col:45> col:16 used operator^= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x564a8906a148 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x564a8906a320 <line:70:5, col:52> col:23 operator-= 'Bitvector &(const Bitvector &)' inline
| `-ParmVarDecl 0x564a8906a290 <col:34, col:51> col:51 x 'const Bitvector &'
|-CXXMethodDecl 0x564a8906a528 <line:71:5, col:50> col:10 offset_or 'void (const Bitvector &, int)'
| |-ParmVarDecl 0x564a8906a3d8 <col:20, col:37> col:37 x 'const Bitvector &'
| `-ParmVarDecl 0x564a8906a458 <col:40, col:44> col:44 offset 'int'
|-CXXMethodDecl 0x564a8906a738 <line:72:5, col:70> col:10 or_with_difference 'void (const Bitvector &, Bitvector &)'
| |-ParmVarDecl 0x564a8906a5e8 <col:29, col:46> col:46 x 'const Bitvector &'
| `-ParmVarDecl 0x564a8906a660 <col:49, col:60> col:60 difference 'Bitvector &'
|-CXXMethodDecl 0x564a8906a8b8 <line:74:5, col:27> col:10 used swap 'void (Bitvector &)'
| `-ParmVarDecl 0x564a8906a7f8 <col:15, col:26> col:26 x 'Bitvector &'
|-TypedefDecl 0x564a8906a970 <line:77:5, col:23> col:23 data_word_type 'Bitvector::word_type':'unsigned int'
| |-TypedefType 0x564a89068270 'Bitvector::word_type' sugar
| | |-Typedef 0x564a89067040 'word_type'
| | `-TypedefType 0x564a88b1e0e0 'uint32_t' sugar
| |   |-Typedef 0x564a88a2d4c8 'uint32_t'
| |   `-TypedefType 0x564a88a065a0 '__uint32_t' sugar
| |     |-Typedef 0x564a88a06198 '__uint32_t'
| |     `-BuiltinType 0x564a889c4620 'unsigned int'
| `-DeprecatedAttr 0x564a8906a9c8 <col:53> "" ""
|-EnumDecl 0x564a8906aa38 <line:78:5, col:35> col:5
| `-EnumConstantDecl 0x564a8906ab40 <col:12, col:29> col:12 data_word_bits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:78:5)'
|   `-ImplicitCastExpr 0x564a8906ab90 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a8906ab20 <col:29> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' Int: 32
|       `-DeclRefExpr 0x564a8906ab00 <col:29> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' EnumConstant 0x564a890671a0 'wbits' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|-CXXMethodDecl 0x564a8906abc8 <line:79:5, col:62> col:23 data_words 'Bitvector::word_type *()' inline
| `-DeprecatedAttr 0x564a8906ac68 <col:51> "" ""
|-CXXMethodDecl 0x564a8906acf8 <line:80:5, col:74> col:29 data_words 'const Bitvector::word_type *() const' inline
| `-DeprecatedAttr 0x564a8906ad98 <col:63> "" ""
|-AccessSpecDecl 0x564a8906ae08 <line:83:3, col:10> col:3 private
|-EnumDecl 0x564a8906ae30 <line:85:5, col:54> col:5
| |-EnumConstantDecl 0x564a8906af30 <col:12, col:22> col:12 referenced ninline 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
| | `-ImplicitCastExpr 0x564a8906b068 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a8906af10 <col:22> 'int' Int: 2
| |     `-IntegerLiteral 0x564a8906aef0 <col:22> 'int' 2
| `-EnumConstantDecl 0x564a8906b018 <col:25, col:48> col:25 referenced inlinebits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
|   `-ImplicitCastExpr 0x564a8906b080 <col:38, col:48> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a8906aff8 <col:38, col:48> 'int' Int: 64
|       `-BinaryOperator 0x564a8906afd8 <col:38, col:48> 'int' '*'
|         |-DeclRefExpr 0x564a8906af80 <col:38> 'int' EnumConstant 0x564a8906af30 'ninline' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
|         `-ImplicitCastExpr 0x564a8906afc0 <col:48> 'int' <IntegralCast>
|           `-DeclRefExpr 0x564a8906afa0 <col:48> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' EnumConstant 0x564a890671a0 'wbits' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|-FieldDecl 0x564a8906b0b0 <line:87:5, col:9> col:9 referenced _max 'int'
|-FieldDecl 0x564a8906b110 <line:88:5, col:16> col:16 referenced _data 'Bitvector::word_type *'
|-FieldDecl 0x564a8906b1f8 <line:89:5, col:25> col:15 referenced _f 'Bitvector::word_type [2]'
|-CXXMethodDecl 0x564a8906b2e8 <line:91:5, col:51> col:10 used finish_copy_constructor 'void (const Bitvector &)'
| `-ParmVarDecl 0x564a8906b258 <col:34, col:50> col:51 'const Bitvector &'
|-CXXMethodDecl 0x564a8906b3b0 <line:92:5, col:28> col:17 clear_last 'void ()' inline
`-CXXMethodDecl 0x564a8906b578 <line:93:5, col:31> col:10 hard_resize 'void (int, bool)'
  |-ParmVarDecl 0x564a8906b468 <col:22> col:25 'int'
  `-ParmVarDecl 0x564a8906b4e0 <col:27> col:31 'bool'

Layout: <CGRecordLayout
  LLVMType:%class.Bitvector = type { i32, i32*, [2 x i32] }
  NonVirtualBaseLLVMType:%class.Bitvector = type { i32, i32*, [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a89077048 <../dummy_inc/click/routervisitor.hh:64:1, line:120:1> line:64:7 referenced class ElementTracker definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'RouterVisitor'
|-CXXRecordDecl 0x564a890771a8 <col:1, col:7> col:7 implicit referenced class ElementTracker
|-AccessSpecDecl 0x564a89077238 <col:47, col:53> col:47 public
|-CXXConstructorDecl 0x564a89077348 <line:68:5, col:34> col:5 used ElementTracker 'void (Router *)'
| `-ParmVarDecl 0x564a89077270 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x564a89077550 <line:71:5, line:73:5> line:71:30 elements 'const Vector<Element *> &() const'
| `-CompoundStmt 0x564a890789b0 <col:47, line:73:5>
|   `-ReturnStmt 0x564a890789a0 <line:72:2, col:9>
|     `-MemberExpr 0x564a89078970 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x564a89078010
|       `-CXXThisExpr 0x564a89078960 <col:9> 'const ElementTracker *' implicit this
|-CXXMethodDecl 0x564a89077618 <line:75:5, line:77:5> line:75:9 size 'int () const'
| `-CompoundStmt 0x564a89078a68 <col:22, line:77:5>
|   `-ReturnStmt 0x564a89078a58 <line:76:2, col:24>
|     `-CXXMemberCallExpr 0x564a89078a38 <col:9, col:24> 'Vector::size_type':'int'
|       `-MemberExpr 0x564a89078a08 <col:9, col:19> '<bound member function type>' .size 0x564a8900de78
|         `-MemberExpr 0x564a890789d8 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x564a89078010
|           `-CXXThisExpr 0x564a890789c8 <col:9> 'const ElementTracker *' implicit this
|-CXXMethodDecl 0x564a89077760 <line:81:5, line:83:5> line:81:14 operator[] 'Element *(int) const'
| |-ParmVarDecl 0x564a890776d0 <col:25, col:29> col:29 used i 'int'
| `-CompoundStmt 0x564a89078bf0 <col:38, line:83:5>
|   `-ReturnStmt 0x564a89078be0 <line:82:2, col:20>
|     `-ImplicitCastExpr 0x564a89078bc8 <col:9, col:20> 'Element *':'Element *' <LValueToRValue>
|       `-CXXOperatorCallExpr 0x564a89078b90 <col:9, col:20> 'Element *const':'Element *const' lvalue
|         |-ImplicitCastExpr 0x564a89078b78 <col:18, col:20> 'Element *const &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x564a89078af8 <col:18, col:20> 'Element *const &(Vector::size_type) const' lvalue CXXMethod 0x564a8900e6c8 'operator[]' 'Element *const &(Vector::size_type) const'
|         |-MemberExpr 0x564a89078a90 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x564a89078010
|         | `-CXXThisExpr 0x564a89078a80 <col:9> 'const ElementTracker *' implicit this
|         `-ImplicitCastExpr 0x564a89078ae0 <col:19> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x564a89078ac0 <col:19> 'int' lvalue ParmVar 0x564a890776d0 'i' 'int'
|-TypedefDecl 0x564a89077930 <line:86:5, col:47> col:47 referenced const_iterator 'Vector<Element *>::const_iterator':'Element *const *'
| `-ElaboratedType 0x564a890778c0 'Vector<Element *>::const_iterator' sugar
|   `-TypedefType 0x564a8900d8c0 'Vector<Element *>::const_iterator' sugar
|     |-Typedef 0x564a8900c1e0 'const_iterator'
|     `-PointerType 0x564a8900b440 'Element *const *'
|       `-QualType 0x564a8900a071 'Element *const' const
|         `-SubstTemplateTypeParmType 0x564a8900a070 'Element *' sugar
|           |-TemplateTypeParmType 0x564a88d1e7d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564a88d1e780 'T'
|           `-PointerType 0x564a88f32a50 'Element *'
|             `-RecordType 0x564a88f327f0 'Element'
|               `-CXXRecord 0x564a88f3c500 'Element'
|-CXXMethodDecl 0x564a890779f8 <line:88:5, line:90:5> line:88:20 used begin 'ElementTracker::const_iterator () const'
| `-CompoundStmt 0x564a89078d08 <col:34, line:90:5>
|   `-ReturnStmt 0x564a89078cf8 <line:89:2, col:25>
|     `-CXXMemberCallExpr 0x564a89078cd8 <col:9, col:25> 'Vector<Element *>::const_iterator':'Element *const *'
|       `-MemberExpr 0x564a89078ca8 <col:9, col:19> '<bound member function type>' .begin 0x564a8900d958
|         `-MemberExpr 0x564a89078c18 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x564a89078010
|           `-CXXThisExpr 0x564a89078c08 <col:9> 'const ElementTracker *' implicit this
|-CXXMethodDecl 0x564a89077ab8 <line:92:5, line:94:5> line:92:20 used end 'ElementTracker::const_iterator () const'
| `-CompoundStmt 0x564a89078e20 <col:32, line:94:5>
|   `-ReturnStmt 0x564a89078e10 <line:93:2, col:23>
|     `-CXXMemberCallExpr 0x564a89078df0 <col:9, col:23> 'Vector<Element *>::const_iterator':'Element *const *'
|       `-MemberExpr 0x564a89078dc0 <col:9, col:19> '<bound member function type>' .end 0x564a8900daa8
|         `-MemberExpr 0x564a89078d30 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x564a89078010
|           `-CXXThisExpr 0x564a89078d20 <col:9> 'const ElementTracker *' implicit this
|-CXXMethodDecl 0x564a89077c28 <line:97:5, line:99:5> line:97:10 contains 'bool (const Element *) const'
| |-ParmVarDecl 0x564a89077b68 <col:19, col:34> col:34 used e 'const Element *'
| `-CompoundStmt 0x564a89079008 <col:43, line:99:5>
|   `-ReturnStmt 0x564a89078ff8 <line:98:2, col:29>
|     `-CXXOperatorCallExpr 0x564a89078fc0 <col:9, col:29> 'bool'
|       |-ImplicitCastExpr 0x564a89078fa8 <col:17, col:29> 'bool (*)(int) const' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a89078f60 <col:17, col:29> 'bool (int) const' lvalue CXXMethod 0x564a8906fba0 'operator[]' 'bool (int) const'
|       |-MemberExpr 0x564a89078e48 <col:9> 'const Bitvector' lvalue ->_reached 0x564a89077f10
|       | `-CXXThisExpr 0x564a89078e38 <col:9> 'const ElementTracker *' implicit this
|       `-CXXMemberCallExpr 0x564a89078f40 <col:18, col:28> 'int'
|         `-MemberExpr 0x564a89078f10 <col:18, col:21> '<bound member function type>' ->eindex 0x564a88f52080
|           `-ImplicitCastExpr 0x564a89078e98 <col:18> 'const Element *' <LValueToRValue>
|             `-DeclRefExpr 0x564a89078e78 <col:18> 'const Element *' lvalue ParmVar 0x564a89077b68 'e' 'const Element *'
|-CXXMethodDecl 0x564a89077d70 <line:102:5, line:107:5> line:102:10 insert 'void (Element *)'
| |-ParmVarDecl 0x564a89077ce0 <col:17, col:26> col:26 used e 'Element *'
| `-CompoundStmt 0x564a89079718 <col:29, line:107:5>
|   `-IfStmt 0x564a89079700 <line:103:2, line:106:2>
|     |-ExprWithCleanups 0x564a890792d8 <line:103:6, col:27> 'bool'
|     | `-UnaryOperator 0x564a890792c0 <col:6, col:27> 'bool' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x564a890792a8 <col:7, col:27> 'bool' <UserDefinedConversion>
|     |     `-CXXMemberCallExpr 0x564a89079288 <col:7, col:27> 'bool'
|     |       `-MemberExpr 0x564a89079258 <col:7, col:27> '<bound member function type>' .operator bool 0x564a8906bbf8
|     |         `-ImplicitCastExpr 0x564a89079240 <col:7, col:27> 'const Bitvector::Bit' lvalue <NoOp>
|     |           `-MaterializeTemporaryExpr 0x564a89079228 <col:7, col:27> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|     |             `-CXXOperatorCallExpr 0x564a890791f0 <col:7, col:27> 'Bitvector::Bit':'Bitvector::Bit'
|     |               |-ImplicitCastExpr 0x564a890791d8 <col:15, col:27> 'Bitvector::Bit (*)(int)' <FunctionToPointerDecay>
|     |               | `-DeclRefExpr 0x564a89079160 <col:15, col:27> 'Bitvector::Bit (int)' lvalue CXXMethod 0x564a8906ef28 'operator[]' 'Bitvector::Bit (int)'
|     |               |-MemberExpr 0x564a89079030 <col:7> 'Bitvector' lvalue ->_reached 0x564a89077f10
|     |               | `-CXXThisExpr 0x564a89079020 <col:7> 'ElementTracker *' implicit this
|     |               `-CXXMemberCallExpr 0x564a89079128 <col:16, col:26> 'int'
|     |                 `-MemberExpr 0x564a890790f8 <col:16, col:19> '<bound member function type>' ->eindex 0x564a88f52080
|     |                   `-ImplicitCastExpr 0x564a89079148 <col:16> 'const Element *' <NoOp>
|     |                     `-ImplicitCastExpr 0x564a89079080 <col:16> 'Element *' <LValueToRValue>
|     |                       `-DeclRefExpr 0x564a89079060 <col:16> 'Element *' lvalue ParmVar 0x564a89077ce0 'e' 'Element *'
|     `-CompoundStmt 0x564a890796e0 <col:30, line:106:2>
|       |-ExprWithCleanups 0x564a89079598 <line:104:6, col:30> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       | `-CXXOperatorCallExpr 0x564a89079560 <col:6, col:30> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       |   |-ImplicitCastExpr 0x564a89079548 <col:28> 'Bitvector::Bit &(*)(bool)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x564a890794c8 <col:28> 'Bitvector::Bit &(bool)' lvalue CXXMethod 0x564a89074cf0 'operator=' 'Bitvector::Bit &(bool)'
|       |   |-MaterializeTemporaryExpr 0x564a890794b0 <col:6, col:26> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       |   | `-CXXOperatorCallExpr 0x564a89079468 <col:6, col:26> 'Bitvector::Bit':'Bitvector::Bit'
|       |   |   |-ImplicitCastExpr 0x564a89079450 <col:14, col:26> 'Bitvector::Bit (*)(int)' <FunctionToPointerDecay>
|       |   |   | `-DeclRefExpr 0x564a89079430 <col:14, col:26> 'Bitvector::Bit (int)' lvalue CXXMethod 0x564a8906ef28 'operator[]' 'Bitvector::Bit (int)'
|       |   |   |-MemberExpr 0x564a89079300 <col:6> 'Bitvector' lvalue ->_reached 0x564a89077f10
|       |   |   | `-CXXThisExpr 0x564a890792f0 <col:6> 'ElementTracker *' implicit this
|       |   |   `-CXXMemberCallExpr 0x564a890793f8 <col:15, col:25> 'int'
|       |   |     `-MemberExpr 0x564a890793c8 <col:15, col:18> '<bound member function type>' ->eindex 0x564a88f52080
|       |   |       `-ImplicitCastExpr 0x564a89079418 <col:15> 'const Element *' <NoOp>
|       |   |         `-ImplicitCastExpr 0x564a89079350 <col:15> 'Element *' <LValueToRValue>
|       |   |           `-DeclRefExpr 0x564a89079330 <col:15> 'Element *' lvalue ParmVar 0x564a89077ce0 'e' 'Element *'
|       |   `-CXXBoolLiteralExpr 0x564a890794a0 <col:30> 'bool' true
|       `-CXXMemberCallExpr 0x564a890796a0 <line:105:6, col:27> 'void'
|         |-MemberExpr 0x564a89079670 <col:6, col:16> '<bound member function type>' .push_back 0x564a8900f758
|         | `-MemberExpr 0x564a890795c0 <col:6> 'Vector<Element *>':'Vector<Element *>' lvalue ->_elements 0x564a89078010
|         |   `-CXXThisExpr 0x564a890795b0 <col:6> 'ElementTracker *' implicit this
|         `-ImplicitCastExpr 0x564a890796c8 <col:26> 'Element *' <LValueToRValue>
|           `-DeclRefExpr 0x564a89079650 <col:26> 'Element *' lvalue ParmVar 0x564a89077ce0 'e' 'Element *'
|-CXXMethodDecl 0x564a89077e38 <line:110:5, line:113:5> line:110:10 clear 'void ()'
| `-CompoundStmt 0x564a89079850 <col:18, line:113:5>
|   |-CXXMemberCallExpr 0x564a890797a0 <line:111:2, col:17> 'void'
|   | `-MemberExpr 0x564a89079770 <col:2, col:11> '<bound member function type>' .clear 0x564a89068ba0
|   |   `-MemberExpr 0x564a89079740 <col:2> 'Bitvector' lvalue ->_reached 0x564a89077f10
|   |     `-CXXThisExpr 0x564a89079730 <col:2> 'ElementTracker *' implicit this
|   `-CXXMemberCallExpr 0x564a89079830 <line:112:2, col:18> 'void'
|     `-MemberExpr 0x564a89079800 <col:2, col:12> '<bound member function type>' .clear 0x564a89010918
|       `-MemberExpr 0x564a890797d0 <col:2> 'Vector<Element *>':'Vector<Element *>' lvalue ->_elements 0x564a89078010
|         `-CXXThisExpr 0x564a890797c0 <col:2> 'ElementTracker *' implicit this
|-AccessSpecDecl 0x564a89077ed8 <line:115:3, col:10> col:3 private
|-FieldDecl 0x564a89077f10 <line:117:5, col:15> col:15 referenced _reached 'Bitvector'
|-FieldDecl 0x564a89078010 <line:118:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-CXXConstructorDecl 0x564a89078208 <line:64:7> col:7 implicit ElementTracker 'void (const ElementTracker &)' inline default noexcept-unevaluated 0x564a89078208
| `-ParmVarDecl 0x564a89078318 <col:7> col:7 'const ElementTracker &'
|-CXXConstructorDecl 0x564a890783b8 <col:7> col:7 implicit ElementTracker 'void (ElementTracker &&)' inline default noexcept-unevaluated 0x564a890783b8
| `-ParmVarDecl 0x564a890784c8 <col:7> col:7 'ElementTracker &&'
|-CXXMethodDecl 0x564a89078568 <col:7> col:7 implicit operator= 'ElementTracker &(const ElementTracker &)' inline default noexcept-unevaluated 0x564a89078568
| `-ParmVarDecl 0x564a89078678 <col:7> col:7 'const ElementTracker &'
|-CXXMethodDecl 0x564a890786e8 <col:7> col:7 implicit operator= 'ElementTracker &(ElementTracker &&)' inline default noexcept-unevaluated 0x564a890786e8
| `-ParmVarDecl 0x564a890787f8 <col:7> col:7 'ElementTracker &&'
`-CXXDestructorDecl 0x564a89078880 <col:7> col:7 implicit used ~ElementTracker 'void () noexcept' inline default
  |-Overrides: [ 0x564a890768f8 RouterVisitor::~RouterVisitor 'void () noexcept' ]
  `-CompoundStmt 0x564a8907aa58 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.ElementTracker = type { %class.RouterVisitor, %class.Bitvector, %class.Vector }
  NonVirtualBaseLLVMType:%class.ElementTracker = type { %class.RouterVisitor, %class.Bitvector, %class.Vector }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a89079870 <../dummy_inc/click/routervisitor.hh:139:1, line:155:1> line:139:7 referenced class ElementCastTracker definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'ElementTracker'
|-CXXRecordDecl 0x564a890799c8 <col:1, col:7> col:7 implicit referenced class ElementCastTracker
|-AccessSpecDecl 0x564a89079a58 <col:52, col:58> col:52 public
|-CXXConstructorDecl 0x564a89079c18 <line:144:5, line:146:5> line:144:5 used ElementCastTracker 'void (Router *, const String &)'
| |-ParmVarDecl 0x564a89079a90 <col:24, col:32> col:32 used router 'Router *'
| |-ParmVarDecl 0x564a89079b08 <col:40, col:54> col:54 used name 'const String &'
| |-CXXCtorInitializer 'ElementTracker'
| | `-CXXConstructExpr 0x564a8907a948 <line:145:4, col:25> 'ElementTracker' 'void (Router *)'
| |   `-ImplicitCastExpr 0x564a8907a930 <col:19> 'Router *' <LValueToRValue>
| |     `-DeclRefExpr 0x564a8907a8e0 <col:19> 'Router *' lvalue ParmVar 0x564a89079a90 'router' 'Router *'
| |-CXXCtorInitializer Field 0x564a8907a110 '_name' 'String'
| | `-CXXConstructExpr 0x564a8907a9e0 <col:28, col:38> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x564a8907a9a0 <col:34> 'const String' lvalue ParmVar 0x564a89079b08 'name' 'const String &'
| `-CompoundStmt 0x564a8907aa68 <col:40, line:146:5>
|-CXXMethodDecl 0x564a8907a008 <line:148:5, line:149:53> line:148:10 visit 'bool (Element *, bool, int, Element *, int, int)'
| |-Overrides: [ 0x564a89076d78 RouterVisitor::visit 'bool (Element *, bool, int, Element *, int, int)' ]
| |-ParmVarDecl 0x564a89079ce0 <col:16, col:25> col:25 e 'Element *'
| |-ParmVarDecl 0x564a89079d58 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x564a89079dd8 <col:43, col:47> col:47 port 'int'
| |-ParmVarDecl 0x564a89079e50 <line:149:9, col:18> col:18 from_e 'Element *'
| |-ParmVarDecl 0x564a89079ed0 <col:26, col:30> col:30 from_port 'int'
| `-ParmVarDecl 0x564a89079f50 <col:41, col:45> col:45 distance 'int'
|-AccessSpecDecl 0x564a8907a0d8 <line:151:3, col:10> col:3 private
|-FieldDecl 0x564a8907a110 <line:153:5, col:12> col:12 _name 'String'
|-CXXConstructorDecl 0x564a8907a188 <line:139:7> col:7 implicit ElementCastTracker 'void (const ElementCastTracker &)' inline default noexcept-unevaluated 0x564a8907a188
| `-ParmVarDecl 0x564a8907a298 <col:7> col:7 'const ElementCastTracker &'
|-CXXConstructorDecl 0x564a8907a338 <col:7> col:7 implicit ElementCastTracker 'void (ElementCastTracker &&)' inline default noexcept-unevaluated 0x564a8907a338
| `-ParmVarDecl 0x564a8907a448 <col:7> col:7 'ElementCastTracker &&'
|-CXXMethodDecl 0x564a8907a4e8 <col:7> col:7 implicit operator= 'ElementCastTracker &(const ElementCastTracker &)' inline default noexcept-unevaluated 0x564a8907a4e8
| `-ParmVarDecl 0x564a8907a5f8 <col:7> col:7 'const ElementCastTracker &'
|-CXXMethodDecl 0x564a8907a668 <col:7> col:7 implicit operator= 'ElementCastTracker &(ElementCastTracker &&)' inline default noexcept-unevaluated 0x564a8907a668
| `-ParmVarDecl 0x564a8907a778 <col:7> col:7 'ElementCastTracker &&'
`-CXXDestructorDecl 0x564a8907a800 <col:7> col:7 implicit used ~ElementCastTracker 'void () noexcept' inline default
  |-Overrides: [ 0x564a89078880 ElementTracker::~ElementTracker 'void () noexcept' ]
  `-CompoundStmt 0x564a89155f08 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.ElementCastTracker = type { %class.ElementTracker, %class.String }
  NonVirtualBaseLLVMType:%class.ElementCastTracker = type { %class.ElementTracker, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88bde178 prev 0x564a88f0b440 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88bde270 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x564a88bde360 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x564a88bde488 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x564a88bde608 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x564a88bde788 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x564a88bde908 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x564a88f1a238 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564a88f1aaa8 <col:11>
|-CXXDestructorDecl 0x564a88f1a310 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x564a88f1a448 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x564a88f1a448
| `-ParmVarDecl 0x564a88f1a558 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x564a88f1a5f8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x564a88f1a5f8
| `-ParmVarDecl 0x564a88f1a708 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x564a88f1d438 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x564a88f1d548 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x564a88f1d7c8 <col:11>
|   `-ReturnStmt 0x564a88f1d7b8 <col:11>
|     `-UnaryOperator 0x564a88f1d7a0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564a88f1d790 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x564a88f1d5b8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x564a88f1d5b8
  `-ParmVarDecl 0x564a88f1d6c8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88bde970 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a88bdea88 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x564a88bdeb28 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x564a88bdeb90 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x564a88bdebf8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x564a88bdec60 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x564a88f0e950 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x564a88f0ea10 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x564a88f0ea70 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x564a88f0ead0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x564a88f1a148 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x564a88bdeb28 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x564a88f1aab8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x564a88f1ab10 <col:12>
|-CXXConstructorDecl 0x564a88f1a778 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x564a88f1a778
| `-ParmVarDecl 0x564a88f1a888 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x564a88f1a928 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x564a88f1a928
| `-ParmVarDecl 0x564a88f1aa38 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x564a88f1cb20 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f04b30 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88f04c48 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x564a88f04cd8 <col:16, col:22> col:16 public
|-EnumDecl 0x564a88f04d00 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x564a88f04e00 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x564a88f04ee0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f04de0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x564a88f04dc0 <col:21> 'int' 28
| `-EnumConstantDecl 0x564a88f04e90 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x564a88f04ef8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f04e70 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x564a88f04e50 <col:22> 'int' 64
|-CXXMethodDecl 0x564a88f05238 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x564a88f04f20 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564a88f04fa0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x564a88f05018 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564a88f05090 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564a88f052f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x564a88f054f8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x564a88f05370 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x564a88f053e8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564a88f055a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x564a88f05708 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x564a88f05618 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564a88f057b0 <col:72> warn_unused_result ""
|-TypedefDecl 0x564a88f05ae0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x564a88f05a70 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x564a88f05a10 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x564a88f059d0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x564a889c44e0 'void'
|       |-PointerType 0x564a88c1bef0 'unsigned char *'
|       | `-BuiltinType 0x564a889c45e0 'unsigned char'
|       |-TypedefType 0x564a88a6de00 'size_t' sugar
|       | |-Typedef 0x564a88a34be0 'size_t'
|       | `-BuiltinType 0x564a889c4640 'unsigned long'
|       `-PointerType 0x564a889c4ce0 'void *'
|         `-BuiltinType 0x564a889c44e0 'void'
|-CXXMethodDecl 0x564a88f05f58 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x564a88f05b50 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x564a88f05bc8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564a88f05c60 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x564a88f05ce0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x564a88f0ff60 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x564a88f0ff48 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x564a88f0ff10 <col:58> 'int' 0
| |-ParmVarDecl 0x564a88f05d60 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x564a88f0ff88 <col:76> 'int' 0
| |-ParmVarDecl 0x564a88f05de0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x564a88f0ffa8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x564a88f06028 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x564a88f060a8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x564a88f06168 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x564a88f06208 <col:20>
| `-OptimizeNoneAttr 0x564a88f06260 <col:30>
|-CXXMethodDecl 0x564a88f062d8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x564a88f06378 <col:20>
| `-OptimizeNoneAttr 0x564a88f063d0 <col:30>
|-CXXMethodDecl 0x564a88f06448 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x564a88f064e8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x564a88f06598 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x564a88f06638 <col:20>
| |-OptimizeNoneAttr 0x564a88f06690 <col:30>
| `-WarnUnusedResultAttr 0x564a88f066b8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x564a88f06710 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x564a88f067b0 <col:20>
| `-OptimizeNoneAttr 0x564a88f06808 <col:30>
|-CXXMethodDecl 0x564a88f06858 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x564a88f068f8 <col:20>
| `-OptimizeNoneAttr 0x564a88f06950 <col:30>
|-CXXMethodDecl 0x564a88f06998 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x564a88f06a38 <col:20>
| `-OptimizeNoneAttr 0x564a88f06a90 <col:30>
|-CXXMethodDecl 0x564a88f06ad8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88f06b98 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88f06c60 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x564a88f06d28 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x564a88f06de8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88f06f08 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x564a88f10070 <col:54, line:99:5>
|   `-ReturnStmt 0x564a88f10060 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x564a88f10048 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x564a88f10018 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x564a88f0ee08
|         `-CXXThisExpr 0x564a88f10008 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x564a88f070a8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x564a88f06fb8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x564a88f10120 <col:67, line:103:5>
|   `-BinaryOperator 0x564a88f10100 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x564a88f10098 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x564a88f0ee08
|     | `-CXXThisExpr 0x564a88f10088 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x564a88f100e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f100c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x564a88f06fb8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x564a88f071a0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x564a88f101a0 <col:33, line:107:5>
|   `-ReturnStmt 0x564a88f10190 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x564a88f10178 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x564a88f10148 <col:16> 'void *' lvalue ->_destructor_argument 0x564a88f0ee70
|         `-CXXThisExpr 0x564a88f10138 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x564a88f07260 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x564a88f107d0 <col:25, line:113:5>
|   |-ParenExpr 0x564a88f10518 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x564a88f104e8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f10258 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x564a88f10230 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x564a88f101f8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x564a88f101c8 <col:24> '<bound member function type>' ->shared 0x564a88f062d8
|   |   |       `-ImplicitCastExpr 0x564a88f10218 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x564a88f101b8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x564a88f102b8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f10298 <col:42> 'int' 0
|   |   `-CallExpr 0x564a88f10448 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x564a88f10430 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f10410 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f10488 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f10328 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x564a88f104a0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f10350 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f104b8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f10388 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x564a88f104d0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f103f8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f103e0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f103a8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x564a88f10718 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x564a88f10548 <col:2> 'unsigned char *' lvalue ->_head 0x564a88f0ec10
|   | | `-CXXThisExpr 0x564a88f10538 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x564a88f10700 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x564a88f106e0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x564a88f10588 <col:10> 'unsigned char *' lvalue ->_data 0x564a88f0ec78
|   |     | `-CXXThisExpr 0x564a88f10578 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x564a88f106c8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x564a88f106a8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x564a88f105c8 <col:18> 'unsigned char *' lvalue ->_tail 0x564a88f0ece0
|   |         | `-CXXThisExpr 0x564a88f105b8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x564a88f10690 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x564a88f10670 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x564a88f10608 <col:26> 'unsigned char *' lvalue ->_end 0x564a88f0ed48
|   |             | `-CXXThisExpr 0x564a88f105f8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x564a88f10658 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x564a88f10638 <col:33> 'int' 0
|   `-BinaryOperator 0x564a88f107b0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x564a88f10748 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x564a88f0ee08
|     | `-CXXThisExpr 0x564a88f10738 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x564a88f10798 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x564a88f10778 <col:16> 'int' 0
|-CXXMethodDecl 0x564a88f073a0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x564a88f07310 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564a88f07448 <col:20>
| |-OptimizeNoneAttr 0x564a88f074a0 <col:30>
| `-WarnUnusedResultAttr 0x564a88f074c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x564a88f07598 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x564a88f07508 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564a88f07640 <col:20>
| |-OptimizeNoneAttr 0x564a88f07698 <col:30>
| `-WarnUnusedResultAttr 0x564a88f076c0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x564a88f077f8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x564a88f07700 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564a88f078a0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x564a88f079a0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x564a88f07910 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564a88f07a48 <col:20>
| `-OptimizeNoneAttr 0x564a88f07aa0 <col:30>
|-CXXMethodDecl 0x564a88f07b68 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x564a88f07ad8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564a88f07c10 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x564a88f07d10 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x564a88f07c80 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564a88f07db8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x564a88f07eb8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x564a88f07e28 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564a88f07f60 <col:20>
| `-OptimizeNoneAttr 0x564a88f07fb8 <col:30>
|-CXXMethodDecl 0x564a88f08148 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x564a88f07ff8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x564a88f08070 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x564a88f0ffc8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x564a88f081f8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x564a88f083f8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x564a88f08270 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x564a88f082e8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f08608 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x564a88f084b8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564a88f08530 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f08880 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x564a88f086c8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x564a88f08748 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x564a88f0ffd8 <col:39> 'int' 0
|-CXXMethodDecl 0x564a88f08950 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x564a88f08a18 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x564a88f08ae0 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x564a88f08ba0 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88f08c68 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x564a88f08db0 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x564a88f08d20 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x564a88f08f80 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x564a88f08e70 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x564a88f08ee8 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f09050 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x564a88f09110 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x564a88f091b0 <col:20>
| `-OptimizeNoneAttr 0x564a88f09208 <col:30>
|-CXXMethodDecl 0x564a88f09258 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x564a88f092f8 <col:20>
| `-OptimizeNoneAttr 0x564a88f09350 <col:30>
|-CXXMethodDecl 0x564a88f093a0 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x564a88f09460 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88f09528 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x564a88f095c8 <col:20>
| `-OptimizeNoneAttr 0x564a88f09620 <col:30>
|-CXXMethodDecl 0x564a88f09770 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x564a88f09660 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x564a88f096d8 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f098c0 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x564a88f09830 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f09988 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x564a88f09a48 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x564a88f09ae8 <col:20>
| `-OptimizeNoneAttr 0x564a88f09b40 <col:30>
|-CXXMethodDecl 0x564a88f09b90 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x564a88f09c30 <col:20>
| `-OptimizeNoneAttr 0x564a88f09c88 <col:30>
|-CXXMethodDecl 0x564a88f09cd8 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x564a88f09da0 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x564a88f09e40 <col:20>
| `-OptimizeNoneAttr 0x564a88f09e98 <col:30>
|-CXXMethodDecl 0x564a88f09ee0 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x564a88f09ff8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x564a88f0a168 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x564a88f0a0a8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x564a88f0a258 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x564a88f0a2f8 <col:20>
| `-OptimizeNoneAttr 0x564a88f0a350 <col:30>
|-CXXMethodDecl 0x564a88f0a3a0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x564a88f0a460 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x564a88f0a698 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x564a88f0a510 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x564a88f0a588 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564a88f0a748 <col:20>
| `-OptimizeNoneAttr 0x564a88f0a7a0 <col:30>
|-CXXMethodDecl 0x564a88f0a848 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x564a88f0a8e8 <col:20>
| `-OptimizeNoneAttr 0x564a88f0a940 <col:30>
|-CXXMethodDecl 0x564a88f0a990 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x564a88f0aa30 <col:20>
| `-OptimizeNoneAttr 0x564a88f0aa88 <col:30>
|-CXXMethodDecl 0x564a88f0aad0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x564a88f0ab70 <col:20>
| `-OptimizeNoneAttr 0x564a88f0abc8 <col:30>
|-CXXMethodDecl 0x564a88f0acc8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x564a88f0ac00 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x564a88f0ad70 <col:20>
| `-OptimizeNoneAttr 0x564a88f0adc8 <col:30>
|-CXXMethodDecl 0x564a88f0af88 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x564a88f0ae00 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x564a88f0ae78 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564a88f0b038 <col:20>
| `-OptimizeNoneAttr 0x564a88f0b090 <col:30>
|-CXXMethodDecl 0x564a88f0b138 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x564a88f0b258 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x564a88f0b378 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x564a88f0b418 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x564a88f0b440 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x564a88f0b568 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x564a88f0b608 <col:20>
| `-OptimizeNoneAttr 0x564a88f0b660 <col:30>
|-CXXMethodDecl 0x564a88f0b708 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x564a88f0b7a8 <col:20>
| `-OptimizeNoneAttr 0x564a88f0b800 <col:30>
|-AccessSpecDecl 0x564a88f0b828 <line:344:3, col:9> col:3 public
|-EnumDecl 0x564a88f0b850 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x564a88f0b950 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x564a88f0b9a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f0b930 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x564a88f0b910 <col:14> 'int' 48
|-CXXMethodDecl 0x564a88f0ba08 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x564a88f0baa8 <col:20>
| `-OptimizeNoneAttr 0x564a88f0bb00 <col:30>
|-CXXMethodDecl 0x564a88f0bb78 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x564a88f0bc18 <col:20>
| `-OptimizeNoneAttr 0x564a88f0bc70 <col:30>
|-CXXMethodDecl 0x564a88f0bd38 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x564a88f0bca8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x564a88f0bed8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x564a88f0c078 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x564a88f0bf88 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x564a88f0c120 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x564a88f0c220 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564a88f0c5d0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f0c200 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x564a88f0c1e0 <col:9> 'int' 0
| |-EnumConstantDecl 0x564a88f0c2b0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564a88f0c5e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f0c290 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x564a88f0c270 <col:14> 'int' 1
| |-EnumConstantDecl 0x564a88f0c340 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564a88f0c600 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f0c320 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x564a88f0c300 <col:14> 'int' 2
| |-EnumConstantDecl 0x564a88f0c3d0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564a88f0c618 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f0c3b0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x564a88f0c390 <col:14> 'int' 3
| |-EnumConstantDecl 0x564a88f0c460 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564a88f0c630 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f0c440 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x564a88f0c420 <col:13> 'int' 4
| |-EnumConstantDecl 0x564a88f0c4f0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564a88f0c648 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88f0c4d0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x564a88f0c4b0 <col:13> 'int' 5
| `-EnumConstantDecl 0x564a88f0c580 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x564a88f0c660 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f0c560 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x564a88f0c540 <col:14> 'int' 6
|-CXXMethodDecl 0x564a88f0c6c8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x564a88f0c768 <col:20>
| `-OptimizeNoneAttr 0x564a88f0c7c0 <col:30>
|-CXXMethodDecl 0x564a88bcfb88 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x564a88f0c7f8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x564a88bcfc30 <col:20>
| `-OptimizeNoneAttr 0x564a88bcfc88 <col:30>
|-CXXMethodDecl 0x564a88bcfcf8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x564a88bcfe20 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x564a88bcff98 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x564a88bcfed0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x564a88bd0060 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x564a88bd0128 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x564a88bd0268 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x564a88bd01d8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x564a88bd0310 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x564a88bd0410 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x564a88bd0610 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd03f0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x564a88bd03d0 <col:23> 'int' 0
| |-EnumConstantDecl 0x564a88bd04a0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x564a88bd0628 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd0480 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x564a88bd0460 <col:45> 'int' 4
| |-EnumConstantDecl 0x564a88bd0530 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x564a88bd0640 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd0510 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x564a88bd04f0 <col:24> 'int' 0
| `-EnumConstantDecl 0x564a88bd05c0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x564a88bd0658 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88bd05a0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x564a88bd0580 <col:47> 'int' 16
|-CXXMethodDecl 0x564a88bd06b8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x564a88bd0828 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x564a88bd0768 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x564a88bd08d0 <col:20>
| `-OptimizeNoneAttr 0x564a88bd0928 <col:30>
|-CXXMethodDecl 0x564a88bd0978 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x564a88f108f0 <col:18, col:36>
|   `-ReturnStmt 0x564a88f108e0 <col:20, col:33>
|     `-ImplicitCastExpr 0x564a88f108c8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x564a88f108a8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x564a88f10878 <col:27> '<bound member function type>' ->xanno 0x564a88f0b708
|           `-CXXThisExpr 0x564a88f10868 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x564a88bd0a70 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x564a88f10a00 <col:30, col:48>
|   `-ReturnStmt 0x564a88f109f0 <col:32, col:45>
|     `-ImplicitCastExpr 0x564a88f109d8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x564a88f109b8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x564a88f10988 <col:39> '<bound member function type>' ->xanno 0x564a88f0b568
|           `-CXXThisExpr 0x564a88f10978 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x564a88bd0b58 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x564a88f10b98 <col:24, col:50>
|   `-ReturnStmt 0x564a88f10b88 <col:26, col:47>
|     `-UnaryOperator 0x564a88f10b70 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x564a88f10b50 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x564a88f10b38 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564a88f10ae8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x564a88bde488
|         |   `-CXXMemberCallExpr 0x564a88f10ac8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x564a88f10a98 <col:34> '<bound member function type>' ->xanno 0x564a88f0b708
|         |       `-CXXThisExpr 0x564a88f10a88 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x564a88f10b18 <col:46> 'int' 0
|-CXXMethodDecl 0x564a88bd0c48 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x564a88f10d68 <col:36, col:62>
|   `-ReturnStmt 0x564a88f10d58 <col:38, col:59>
|     `-UnaryOperator 0x564a88f10d40 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x564a88f10d20 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x564a88f10d08 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564a88f10c80 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x564a88bde488
|         |   `-CXXMemberCallExpr 0x564a88f10c60 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x564a88f10c30 <col:46> '<bound member function type>' ->xanno 0x564a88f0b568
|         |       `-CXXThisExpr 0x564a88f10c20 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x564a88f10cb0 <col:58> 'int' 0
|-CXXMethodDecl 0x564a88bd0d68 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x564a88f10f00 <col:26, col:53>
|   `-ReturnStmt 0x564a88f10ef0 <col:28, col:50>
|     `-UnaryOperator 0x564a88f10ed8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x564a88f10eb8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x564a88f10ea0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564a88f10e50 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x564a88bde788
|         |   `-CXXMemberCallExpr 0x564a88f10e30 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x564a88f10e00 <col:36> '<bound member function type>' ->xanno 0x564a88f0b708
|         |       `-CXXThisExpr 0x564a88f10df0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x564a88f10e80 <col:49> 'int' 0
|-CXXMethodDecl 0x564a88bd0e88 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x564a88f110d8 <col:38, col:65>
|   `-ReturnStmt 0x564a88f110c8 <col:40, col:62>
|     `-UnaryOperator 0x564a88f110b0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x564a88f11090 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x564a88f11078 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564a88f10fe8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x564a88bde788
|         |   `-CXXMemberCallExpr 0x564a88f10fc8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x564a88f10f98 <col:48> '<bound member function type>' ->xanno 0x564a88f0b568
|         |       `-CXXThisExpr 0x564a88f10f88 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x564a88f11018 <col:61> 'int' 0
|-CXXMethodDecl 0x564a88bd1038 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x564a88bd0f40 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x564a88f117a8 <col:34, line:463:5>
|   |-ParenExpr 0x564a88f115f0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x564a88f115c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f11228 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f111f8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f11148 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f11130 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f110f0 <col:23> 'int' lvalue ParmVar 0x564a88bd0f40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f11110 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f111d8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f111a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f11168 <col:33> 'int' lvalue ParmVar 0x564a88bd0f40 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x564a88f111c0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x564a88f11188 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x564a88f11288 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f11268 <col:56> 'int' 0
|   |   `-CallExpr 0x564a88f11520 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x564a88f11508 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f114e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f11560 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f11378 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x564a88f11578 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f113a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f11590 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f113e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x564a88f115a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f114d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f114b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f11478 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x564a88f11798 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x564a88f11780 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x564a88f11760 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x564a88f11730 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564a88f116e0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x564a88bde488
|         |   `-CXXMemberCallExpr 0x564a88f116c0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x564a88f11690 <col:9> '<bound member function type>' ->xanno 0x564a88f0b568
|         |       `-CXXThisExpr 0x564a88f11680 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x564a88f11748 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x564a88f11710 <col:21> 'int' lvalue ParmVar 0x564a88bd0f40 'i' 'int'
|-CXXMethodDecl 0x564a88bd1288 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x564a88bd10f8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x564a88bd1170 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x564a88f11e38 <col:40, line:472:5>
|   |-ParenExpr 0x564a88f11c50 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x564a88f11c20 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f11900 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f118d0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f11820 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f11808 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f117c8 <col:23> 'int' lvalue ParmVar 0x564a88bd10f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f117e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f118b0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f11880 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f11840 <col:33> 'int' lvalue ParmVar 0x564a88bd10f8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x564a88f11898 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x564a88f11860 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x564a88f11960 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f11940 <col:56> 'int' 0
|   |   `-CallExpr 0x564a88f11b80 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x564a88f11b68 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f11b48 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f11bc0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f119d0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x564a88f11bd8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f11a00 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f11bf0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f11a38 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x564a88f11c08 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f11b30 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f11b18 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f11ad8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x564a88f11e18 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x564a88f11dc0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x564a88f11d90 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x564a88f11d40 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x564a88bde488
|     | |   `-CXXMemberCallExpr 0x564a88f11d20 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x564a88f11cf0 <col:2> '<bound member function type>' ->xanno 0x564a88f0b708
|     | |       `-CXXThisExpr 0x564a88f11ce0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x564a88f11da8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x564a88f11d70 <col:14> 'int' lvalue ParmVar 0x564a88bd10f8 'i' 'int'
|     `-ImplicitCastExpr 0x564a88f11e00 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f11de0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x564a88bd1170 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x564a88bd1448 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x564a88bd1350 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x564a88f125b8 <col:36, line:485:5>
|   |-ParenExpr 0x564a88f12320 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f122f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f11fd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f11fa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f11eb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f11e98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f11e58 <col:23> 'int' lvalue ParmVar 0x564a88bd1350 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f11e78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f11f80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f11f68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f11ed0 <col:33> 'int' lvalue ParmVar 0x564a88bd1350 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f11f48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f11f30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f11ef0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f11f10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x564a88f12030 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f12010 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f12250 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f12238 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f12218 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f12290 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f120a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x564a88f122a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f120d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f122c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f12110 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x564a88f122d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f12200 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f121e8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f121a8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x564a88f125a8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x564a88f12590 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x564a88f12578 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564a88f12548 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x564a88f124e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x564a88f124b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564a88f12430 <col:61, col:70> 'char const[48]' lvalue ->c 0x564a88bde360
|             |   `-CXXMemberCallExpr 0x564a88f12410 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564a88f123e0 <col:61> '<bound member function type>' ->xanno 0x564a88f0b568
|             |       `-CXXThisExpr 0x564a88f123d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564a88f124d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564a88f12460 <col:74> 'int' lvalue ParmVar 0x564a88bd1350 'i' 'int'
|-CXXMethodDecl 0x564a88bd1698 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x564a88bd1508 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564a88bd1580 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x564a88f15e68 <col:42, line:500:5>
|   |-ParenExpr 0x564a88f15bf8 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f15bc8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f12750 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f12720 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f12630 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f12618 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f125d8 <col:23> 'int' lvalue ParmVar 0x564a88bd1508 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f125f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f12700 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f126e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f12650 <col:33> 'int' lvalue ParmVar 0x564a88bd1508 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f126c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f126b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f12670 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f12690 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x564a88f127b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f12790 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f15b28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f15b10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f15af0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f15b68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f12820 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x564a88f15b80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f12858 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f15b98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f12890 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x564a88f15bb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f15ad8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f15ac0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f15a80 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x564a88f15e48 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x564a88f15df8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564a88f15dc8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x564a88f15d68 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564a88f15d38 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564a88f15ce8 <col:48, col:57> 'char [48]' lvalue ->c 0x564a88bde360
|     |     |   `-CXXMemberCallExpr 0x564a88f15cc8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564a88f15c98 <col:48> '<bound member function type>' ->xanno 0x564a88f0b708
|     |     |       `-CXXThisExpr 0x564a88f15c88 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564a88f15d50 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564a88f15d18 <col:61> 'int' lvalue ParmVar 0x564a88bd1508 'i' 'int'
|     `-ImplicitCastExpr 0x564a88f15e30 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f15e10 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x564a88bd1580 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x564a88bd1858 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x564a88bd1760 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x564a88f165c8 <col:35, line:513:5>
|   |-ParenExpr 0x564a88f162d8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f162a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f16000 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f15fd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f15ee0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f15ec8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f15e88 <col:23> 'int' lvalue ParmVar 0x564a88bd1760 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f15ea8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f15fb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f15f98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f15f00 <col:33> 'int' lvalue ParmVar 0x564a88bd1760 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f15f78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f15f60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f15f20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f15f40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x564a88f16060 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f16040 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f16208 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f161f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f161d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f16248 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f160d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x564a88f16260 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f16108 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f16278 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f16140 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x564a88f16290 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f161b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f161a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f16160 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x564a88f165b8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x564a88f165a0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x564a88f16588 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564a88f16558 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x564a88f164d0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x564a88f164a0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564a88f16450 <col:60, col:69> 'char const[48]' lvalue ->c 0x564a88bde360
|             |   `-CXXMemberCallExpr 0x564a88f16430 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564a88f16400 <col:60> '<bound member function type>' ->xanno 0x564a88f0b568
|             |       `-CXXThisExpr 0x564a88f163f0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564a88f164b8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564a88f16480 <col:73> 'int' lvalue ParmVar 0x564a88bd1760 'i' 'int'
|-CXXMethodDecl 0x564a88bd1aa8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x564a88bd1918 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564a88bd1990 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x564a88f16cd8 <col:41, line:528:5>
|   |-ParenExpr 0x564a88f16a70 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f16a40 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f16760 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f16730 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f16640 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f16628 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f165e8 <col:23> 'int' lvalue ParmVar 0x564a88bd1918 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f16608 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f16710 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f166f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f16660 <col:33> 'int' lvalue ParmVar 0x564a88bd1918 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f166d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f166c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f16680 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f166a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x564a88f167c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f167a0 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f169a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f16988 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f16968 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f169e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f16830 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x564a88f169f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f16868 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f16a10 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f168a0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x564a88f16a28 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f16950 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f16938 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f168f8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x564a88f16cb8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x564a88f16c68 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564a88f16c38 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x564a88f16be0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564a88f16bb0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564a88f16b60 <col:47, col:56> 'char [48]' lvalue ->c 0x564a88bde360
|     |     |   `-CXXMemberCallExpr 0x564a88f16b40 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564a88f16b10 <col:47> '<bound member function type>' ->xanno 0x564a88f0b708
|     |     |       `-CXXThisExpr 0x564a88f16b00 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564a88f16bc8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564a88f16b90 <col:60> 'int' lvalue ParmVar 0x564a88bd1918 'i' 'int'
|     `-ImplicitCastExpr 0x564a88f16ca0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f16c80 <col:65> 'int16_t':'short' lvalue ParmVar 0x564a88bd1990 'x' 'int16_t':'short'
|-CXXMethodDecl 0x564a88bd1c68 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x564a88bd1b70 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x564a88f173a8 <col:36, line:541:5>
|   |-ParenExpr 0x564a88f17148 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f17118 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f16e70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f16e40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f16d50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f16d38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f16cf8 <col:23> 'int' lvalue ParmVar 0x564a88bd1b70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f16d18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f16e20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f16e08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f16d70 <col:33> 'int' lvalue ParmVar 0x564a88bd1b70 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f16de8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f16dd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f16d90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f16db0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x564a88f16ed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f16eb0 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f17078 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f17060 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f17040 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f170b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f16f40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x564a88f170d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f16f78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f170e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f16fb0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x564a88f17100 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f17028 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f17010 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f16fd0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x564a88f17398 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x564a88f17380 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x564a88f17368 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564a88f17338 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x564a88f172e0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x564a88f172b0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564a88f17260 <col:61, col:70> 'char const[48]' lvalue ->c 0x564a88bde360
|             |   `-CXXMemberCallExpr 0x564a88f17240 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564a88f17210 <col:61> '<bound member function type>' ->xanno 0x564a88f0b568
|             |       `-CXXThisExpr 0x564a88f17200 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564a88f172c8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564a88f17290 <col:74> 'int' lvalue ParmVar 0x564a88bd1b70 'i' 'int'
|-CXXMethodDecl 0x564a88bd1e38 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x564a88bd1d28 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x564a88bd1da0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564a88bd1ee8 <col:20>
| `-OptimizeNoneAttr 0x564a88bd1f40 <col:30>
|-CXXMethodDecl 0x564a88bd2078 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x564a88bd1f80 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x564a88f17a78 <col:35, line:562:5>
|   |-ParenExpr 0x564a88f17818 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f177e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f17540 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f17510 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f17420 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f17408 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f173c8 <col:23> 'int' lvalue ParmVar 0x564a88bd1f80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f173e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f174f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f174d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f17440 <col:33> 'int' lvalue ParmVar 0x564a88bd1f80 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f174b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f174a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f17460 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f17480 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x564a88f175a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f17580 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f17748 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f17730 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f17710 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f17788 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f17610 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x564a88f177a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f17648 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f177b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f17680 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x564a88f177d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f176f8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f176e0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f176a0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x564a88f17a68 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x564a88f17a50 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x564a88f17a38 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564a88f17a08 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x564a88f179b0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x564a88f17980 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564a88f17930 <col:60, col:69> 'char const[48]' lvalue ->c 0x564a88bde360
|             |   `-CXXMemberCallExpr 0x564a88f17910 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564a88f178e0 <col:60> '<bound member function type>' ->xanno 0x564a88f0b568
|             |       `-CXXThisExpr 0x564a88f178d0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564a88f17998 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564a88f17960 <col:73> 'int' lvalue ParmVar 0x564a88bd1f80 'i' 'int'
|-CXXMethodDecl 0x564a88bd2288 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x564a88bd2138 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564a88bd21b0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x564a88f18158 <col:41, line:577:5>
|   |-ParenExpr 0x564a88f17ee8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f17eb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f17c10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f17be0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f17af0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f17ad8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f17a98 <col:23> 'int' lvalue ParmVar 0x564a88bd2138 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f17ab8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f17bc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f17ba8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f17b10 <col:33> 'int' lvalue ParmVar 0x564a88bd2138 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f17b88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f17b70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f17b30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f17b50 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x564a88f17c70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f17c50 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f17e18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f17e00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f17de0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f17e58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f17ce0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x564a88f17e70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f17d18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f17e88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f17d50 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x564a88f17ea0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f17dc8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f17db0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f17d70 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x564a88f18138 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x564a88f180e8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564a88f180b8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x564a88f18058 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564a88f18028 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564a88f17fd8 <col:47, col:56> 'char [48]' lvalue ->c 0x564a88bde360
|     |     |   `-CXXMemberCallExpr 0x564a88f17fb8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564a88f17f88 <col:47> '<bound member function type>' ->xanno 0x564a88f0b708
|     |     |       `-CXXThisExpr 0x564a88f17f78 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564a88f18040 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564a88f18008 <col:60> 'int' lvalue ParmVar 0x564a88bd2138 'i' 'int'
|     `-ImplicitCastExpr 0x564a88f18120 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f18100 <col:65> 'int32_t':'int' lvalue ParmVar 0x564a88bd21b0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x564a88bd2448 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x564a88bd2350 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x564a88f18888 <col:36, line:591:5>
|   |-ParenExpr 0x564a88f185c8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f18598 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f182f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f182c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f181d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f181b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f18178 <col:23> 'int' lvalue ParmVar 0x564a88bd2350 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f18198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f182a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f18288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f181f0 <col:33> 'int' lvalue ParmVar 0x564a88bd2350 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f18268 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f18250 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f18210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f18230 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x564a88f18350 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f18330 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f184f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f184e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f184c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f18538 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f183c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x564a88f18550 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f183f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f18568 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f18430 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x564a88f18580 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f184a8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f18490 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f18450 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x564a88f18878 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x564a88f18860 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x564a88f18848 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564a88f18818 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x564a88f18790 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x564a88f18760 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564a88f18710 <col:61, col:70> 'char const[48]' lvalue ->c 0x564a88bde360
|             |   `-CXXMemberCallExpr 0x564a88f186f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564a88f186c0 <col:61> '<bound member function type>' ->xanno 0x564a88f0b568
|             |       `-CXXThisExpr 0x564a88f186b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564a88f18778 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564a88f18740 <col:74> 'int' lvalue ParmVar 0x564a88bd2350 'i' 'int'
|-CXXMethodDecl 0x564a88bd2698 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x564a88bd2508 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564a88bd2580 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x564a88f18f68 <col:42, line:606:5>
|   |-ParenExpr 0x564a88f18cf8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x564a88f18cc8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f18a20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f189f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f18900 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f188e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f188a8 <col:23> 'int' lvalue ParmVar 0x564a88bd2508 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f188c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f189d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564a88f189b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f18920 <col:33> 'int' lvalue ParmVar 0x564a88bd2508 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f18998 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f18980 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f18940 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564a88f18960 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x564a88f18a80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f18a60 <col:60> 'int' 0
|   |   `-CallExpr 0x564a88f18c28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564a88f18c10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f18bf0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f18c68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f18af0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x564a88f18c80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f18b28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f18c98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f18b60 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x564a88f18cb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f18bd8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f18bc0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f18b80 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x564a88f18f48 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x564a88f18ef8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564a88f18ec8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x564a88f18e68 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564a88f18e38 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564a88f18de8 <col:48, col:57> 'char [48]' lvalue ->c 0x564a88bde360
|     |     |   `-CXXMemberCallExpr 0x564a88f18dc8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564a88f18d98 <col:48> '<bound member function type>' ->xanno 0x564a88f0b708
|     |     |       `-CXXThisExpr 0x564a88f18d88 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564a88f18e50 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564a88f18e18 <col:61> 'int' lvalue ParmVar 0x564a88bd2508 'i' 'int'
|     `-ImplicitCastExpr 0x564a88f18f30 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f18f10 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x564a88bd2580 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x564a88bd2830 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x564a88bd2760 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x564a88f197d8 <col:33, line:620:5>
|   |-ParenExpr 0x564a88f19550 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x564a88f19520 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f19170 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f19140 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f18fe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f18fc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f18f88 <col:23> 'int' lvalue ParmVar 0x564a88bd2760 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f18fa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f19120 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x564a88f19108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f19000 <col:33> 'int' lvalue ParmVar 0x564a88bd2760 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f190e8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f190d0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f19020 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x564a88f190a8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x564a88f19090 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x564a88f19058 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x564a88f191d0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f191b0 <col:79> 'int' 0
|   |   `-CallExpr 0x564a88f19480 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x564a88f19468 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f19448 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f194c0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f192b8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x564a88f194d8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f19300 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f194f0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f19338 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x564a88f19508 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f19430 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f19418 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f193d8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x564a88f197c8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x564a88f197b0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x564a88f19798 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564a88f19768 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x564a88f196e0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x564a88f196b0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564a88f19660 <col:67, col:76> 'char const[48]' lvalue ->c 0x564a88bde360
|             |   `-CXXMemberCallExpr 0x564a88f19640 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564a88f19610 <col:67> '<bound member function type>' ->xanno 0x564a88f0b568
|             |       `-CXXThisExpr 0x564a88f19600 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564a88f196c8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564a88f19690 <col:80> 'int' lvalue ParmVar 0x564a88bd2760 'i' 'int'
|-CXXMethodDecl 0x564a88bd2a48 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x564a88bd28f0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564a88bd2970 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x564a88f1a030 <col:45, line:635:5>
|   |-ParenExpr 0x564a88f19d78 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x564a88f19d48 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x564a88f199e0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564a88f199b0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564a88f19850 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564a88f19838 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564a88f197f8 <col:23> 'int' lvalue ParmVar 0x564a88bd28f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564a88f19818 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564a88f19990 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x564a88f19978 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564a88f19870 <col:33> 'int' lvalue ParmVar 0x564a88bd28f0 'i' 'int'
|   |   |     `-BinaryOperator 0x564a88f19958 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564a88f19940 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564a88f19890 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564a88f0b950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x564a88f19918 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x564a88f19900 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x564a88f198c8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x564a88f19a40 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564a88f19a20 <col:79> 'int' 0
|   |   `-CallExpr 0x564a88f19ca8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x564a88f19c90 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564a88f19c70 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564a88a64b60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564a88f19ce8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f19ad8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x564a88f19d00 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564a88f19b20 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564a88f19d18 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564a88f19b58 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x564a88f19d30 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564a88f19c58 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564a88f19c40 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564a88f19bf8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x564a88f1a010 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x564a88f19f78 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564a88f19f48 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x564a88f19ee8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564a88f19eb8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564a88f19e68 <col:54, col:63> 'char [48]' lvalue ->c 0x564a88bde360
|     |     |   `-CXXMemberCallExpr 0x564a88f19e48 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564a88f19e18 <col:54> '<bound member function type>' ->xanno 0x564a88f0b708
|     |     |       `-CXXThisExpr 0x564a88f19e08 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564a88f19ed0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564a88f19e98 <col:67> 'int' lvalue ParmVar 0x564a88bd28f0 'i' 'int'
|     `-CXXConstCastExpr 0x564a88f19fe0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x564a88f19fc8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x564a88f19f90 <col:91> 'const void *' lvalue ParmVar 0x564a88bd2970 'x' 'const void *'
|-CXXMethodDecl 0x564a88bd2b18 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x564a88f1a0b8 <col:34, line:640:5>
|   `-ReturnStmt 0x564a88f1a0a8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x564a88f1a090 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x564a88f1a060 <col:16> 'Packet *' lvalue ->_data_packet 0x564a88f0eba8
|         `-CXXThisExpr 0x564a88f1a050 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x564a88bd2c58 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x564a88bd2bc8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564a88f0fff8 <col:46> 'bool' true
|-CXXMethodDecl 0x564a88bd2dd8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x564a88bd2d10 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x564a88bd2e80 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x564a88bd3630 <line:660:22> "" ""
| |-EnumConstantDecl 0x564a88bd2f80 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd36a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd2f60 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x564a88bd2f40 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x564a88f04e00 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x564a88bd3010 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd36b8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd2ff0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x564a88bd2fd0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x564a88f04e90 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x564a88bd30a0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd36d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd3080 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x564a88bd3060 <col:21> 'int' 0
| |-EnumConstantDecl 0x564a88bd3130 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd36e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd3110 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x564a88bd30f0 <col:19> 'int' 16
| |-EnumConstantDecl 0x564a88bd31c0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd3700 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd31a0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x564a88bd3180 <col:21> 'int' 16
| |-EnumConstantDecl 0x564a88bd3250 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd3718 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd3230 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x564a88bd3210 <col:19> 'int' 32
| |-EnumConstantDecl 0x564a88bd32e0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd3730 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd32c0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x564a88bd32a0 <col:19> 'int' EnumConstant 0x564a88bd3130 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x564a88bd3370 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd3748 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd3350 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x564a88bd3330 <col:19> 'int' EnumConstant 0x564a88bd3250 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x564a88bd3440 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd3760 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd3420 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x564a88bd3400 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x564a88bd33c0 <col:23> 'int' EnumConstant 0x564a88bd3370 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x564a88bd33e0 <col:40> 'int' 2
| |-EnumConstantDecl 0x564a88bd3510 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564a88bd3778 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a88bd34f0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x564a88bd34d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x564a88bd3490 <col:23> 'int' EnumConstant 0x564a88bd3370 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x564a88bd34b0 <col:40> 'int' 4
| `-EnumConstantDecl 0x564a88bd35e0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x564a88bd3790 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88bd35c0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x564a88bd35a0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x564a88bd3560 <col:23> 'int' EnumConstant 0x564a88bd3370 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x564a88bd3580 <col:40> 'int' 8
|-CXXMethodDecl 0x564a88bd37d0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x564a88bd3870 <col:68> "" ""
|-CXXMethodDecl 0x564a88bd3908 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x564a88bd39a8 <col:45> "" ""
|-CXXMethodDecl 0x564a88bd3a40 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x564a88bd3ae0 <col:57> "" ""
|-CXXMethodDecl 0x564a88bdad38 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x564a88bdadd8 <col:45> "" ""
|-CXXMethodDecl 0x564a88bdae70 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x564a88bdaf10 <col:57> "" ""
|-CXXMethodDecl 0x564a88bdafa0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x564a88bdb040 <col:51> "" ""
|-CXXMethodDecl 0x564a88bdb0d0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x564a88bdb170 <col:63> "" ""
|-CXXMethodDecl 0x564a88bdb200 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x564a88bdb2a0 <col:53> "" ""
|-CXXMethodDecl 0x564a88bdb330 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x564a88bdb3d0 <col:65> "" ""
|-CXXMethodDecl 0x564a88bdb4e8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x564a88bdb458 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x564a88bdb590 <col:61> "" ""
|-CXXMethodDecl 0x564a88bdb728 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x564a88bdb618 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x564a88bdb690 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x564a88bdb7d8 <col:67> "" ""
|-CXXMethodDecl 0x564a88bdb8f0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x564a88bdb860 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x564a88bdb998 <col:63> "" ""
|-CXXMethodDecl 0x564a88bdbb30 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x564a88bdba20 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x564a88bdba98 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x564a88bdbbe0 <col:69> "" ""
|-CXXMethodDecl 0x564a88bdbcf8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x564a88bdbc68 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x564a88bdbda0 <col:63> "" ""
|-CXXMethodDecl 0x564a88bdbf38 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x564a88bdbe28 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x564a88bdbea0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88bdbfe8 <col:69> "" ""
|-CXXMethodDecl 0x564a88bdc100 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x564a88bdc070 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x564a88bdc1a8 <col:62> "" ""
|-CXXMethodDecl 0x564a88bdc340 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x564a88bdc230 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x564a88bdc2a8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x564a88bdc3f0 <col:68> "" ""
|-CXXMethodDecl 0x564a88bdc508 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x564a88bdc478 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x564a88bdc5b0 <col:63> "" ""
|-CXXMethodDecl 0x564a88bdc748 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x564a88bdc638 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x564a88bdc6b0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x564a88bdc7f8 <col:69> "" ""
|-CXXMethodDecl 0x564a88bdc888 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x564a88bdc928 <col:64> "" ""
|-CXXMethodDecl 0x564a88bdc9b8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x564a88bdca58 <col:52> "" ""
|-CXXMethodDecl 0x564a88bdcae8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x564a88bdcb88 <col:67> "" ""
|-CXXMethodDecl 0x564a88bdcc18 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x564a88bdccb8 <col:55> "" ""
|-CXXMethodDecl 0x564a88bdcdd0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x564a88bdcd40 <col:32> col:35 'int'
| `-DeprecatedAttr 0x564a88bdce78 <col:58> "" ""
|-CXXMethodDecl 0x564a88bdd010 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x564a88bdcf00 <col:33> col:36 'int'
| |-ParmVarDecl 0x564a88bdcf78 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x564a88bdd0c0 <col:62> "" ""
|-CXXMethodDecl 0x564a88bdd1d8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x564a88bdd148 <col:32> col:35 'int'
| `-DeprecatedAttr 0x564a88bdd280 <col:58> "" ""
|-CXXMethodDecl 0x564a88bdd418 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x564a88bdd308 <col:33> col:36 'int'
| |-ParmVarDecl 0x564a88bdd380 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x564a88bdd4c8 <col:62> "" ""
|-CXXMethodDecl 0x564a88bdd5e0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x564a88bdd550 <col:34> col:37 'int'
| `-DeprecatedAttr 0x564a88bdd688 <col:60> "" ""
|-CXXMethodDecl 0x564a88bdd820 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x564a88bdd710 <col:34> col:37 'int'
| |-ParmVarDecl 0x564a88bdd788 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x564a88bdd8d0 <col:64> "" ""
|-CXXMethodDecl 0x564a88bdd9e8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x564a88bdd958 <col:32> col:35 'int'
| `-DeprecatedAttr 0x564a88bdda90 <col:58> "" ""
|-CXXMethodDecl 0x564a88bddc28 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x564a88bddb18 <col:33> col:36 'int'
| |-ParmVarDecl 0x564a88bddb90 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x564a88bddcd8 <col:62> "" ""
|-CXXMethodDecl 0x564a88bdddf0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x564a88bddd60 <col:33> col:36 'int'
| `-DeprecatedAttr 0x564a88bdde98 <col:59> "" ""
|-CXXMethodDecl 0x564a88bde030 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x564a88bddf20 <col:33> col:36 'int'
| |-ParmVarDecl 0x564a88bddf98 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88bde0e0 <col:63> "" ""
|-AccessSpecDecl 0x564a88bde150 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x564a88bde178 prev 0x564a88f0b440 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88bde270 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x564a88bde360 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x564a88bde488 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x564a88bde608 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x564a88bde788 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x564a88bde908 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x564a88f1a238 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564a88f1aaa8 <col:11>
| |-CXXDestructorDecl 0x564a88f1a310 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x564a88f1a448 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x564a88f1a448
| | `-ParmVarDecl 0x564a88f1a558 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x564a88f1a5f8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x564a88f1a5f8
| | `-ParmVarDecl 0x564a88f1a708 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x564a88f1d438 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564a88f1d548 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x564a88f1d7c8 <col:11>
| |   `-ReturnStmt 0x564a88f1d7b8 <col:11>
| |     `-UnaryOperator 0x564a88f1d7a0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x564a88f1d790 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x564a88f1d5b8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x564a88f1d5b8
|   `-ParmVarDecl 0x564a88f1d6c8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x564a88bde970 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564a88bdea88 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x564a88bdeb28 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x564a88bdeb90 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x564a88bdebf8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x564a88bdec60 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x564a88f0e950 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x564a88f0ea10 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x564a88f0ea70 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x564a88f0ead0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x564a88f1a148 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x564a88bdeb28 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x564a88f1aab8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x564a88f1ab10 <col:12>
| |-CXXConstructorDecl 0x564a88f1a778 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x564a88f1a778
| | `-ParmVarDecl 0x564a88f1a888 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x564a88f1a928 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x564a88f1a928
| | `-ParmVarDecl 0x564a88f1aa38 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x564a88f1cb20 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x564a88f0eb48 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x564a88f0eba8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x564a88f0ec10 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x564a88f0ec78 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x564a88f0ece0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x564a88f0ed48 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x564a88f0eda8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x564a88f0ee08 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x564a88f0ee70 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x564a88f0eef8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x564a88f0eb48 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x564a88f1a0e0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x564a88f0eda8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x564a88f1ab20 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x564a88f1ab80 <col:21, line:755:5>
|-CXXConstructorDecl 0x564a88f0f098 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x564a88f0efd8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x564a88f0f190 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x564a88f0f378 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x564a88f0f280 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x564a88f0f648 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x564a88f0f430 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564a88f0f4a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564a88f0f520 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f0f868 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x564a88f0f718 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x564a88f0f790 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x564a88f0fb38 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x564a88f0f928 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x564a88f0f9a0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x564a88f0fa18 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x564a88f0fc90 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x564a88f0fc00 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f0fdd8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x564a88f0fd48 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x564a88f0fed0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88f6bb18 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x564a88f6bc48 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x564a88f6c738 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.20 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ec86d8 prev 0x564a88f3c120 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564a88ec87d0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x564a88ec8860 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x564a88ec88c0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x564a88ec8968 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x564a88ec8a88 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x564a88ec8c28 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x564a88ec8b68 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x564a88ec8e78 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x564a88ec8ce8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x564a88ec8d68 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x564a88ec9008 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x564a88ec8f40 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x564a88ec9188 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x564a88ec90c8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x564a88ec9338 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x564a88ec9278 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x564a88ec9430 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x564a88f6c910 <col:21, line:58:5>
|   `-IfStmt 0x564a88f6c8f8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x564a88f6c860 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x564a88f6c830 <col:6> '<bound member function type>' ->scheduled 0x564a88f69968
|     |   `-ImplicitCastExpr 0x564a88f6c880 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x564a88f6c820 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x564a88f6c8d8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x564a88f6c8a8 <col:6> '<bound member function type>' ->unschedule 0x564a88f6afc0
|         `-CXXThisExpr 0x564a88f6c898 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x564a88f69210 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x564a88f6cab0 <col:26, line:65:5>
|   |-BinaryOperator 0x564a88f6c9d0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x564a88f6c968 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x564a88f6bc48
|   | | `-MemberExpr 0x564a88f6c938 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x564a88f6bd08
|   | |   `-CXXThisExpr 0x564a88f6c928 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x564a88f6c9b8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564a88f6c998 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x564a88f6c168 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x564a88f6ca90 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x564a88f6ca00 <col:2> 'void *' lvalue ->_thunk 0x564a88f6bd88
|     | `-CXXThisExpr 0x564a88f6c9f0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x564a88f6ca68 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x564a88f6ca30 <col:20> 'int' 1
|-CXXMethodDecl 0x564a88f69350 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x564a88f692c0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x564a88f6cc10 <col:52, line:71:5>
|   |-CStyleCastExpr 0x564a88f6cb00 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x564a88f6cad0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x564a88f692c0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x564a88f6cbf0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x564a88f6cbc0 <col:2> '<bound member function type>' ->assign 0x564a88f69210
|       `-CXXThisExpr 0x564a88f6cbb0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x564a88f69520 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x564a88f69408 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x564a88f69488 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x564a88f6cd90 <col:58, line:79:5>
|   |-BinaryOperator 0x564a88f6ccd8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x564a88f6cc70 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x564a88f6bc48
|   | | `-MemberExpr 0x564a88f6cc40 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x564a88f6bd08
|   | |   `-CXXThisExpr 0x564a88f6cc30 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x564a88f6ccc0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x564a88f6cca0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x564a88f69408 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x564a88f6cd70 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x564a88f6cd08 <col:2> 'void *' lvalue ->_thunk 0x564a88f6bd88
|     | `-CXXThisExpr 0x564a88f6ccf8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x564a88f6cd58 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x564a88f6cd38 <col:11> 'void *' lvalue ParmVar 0x564a88f69488 'user_data' 'void *'
|-CXXMethodDecl 0x564a88f69670 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x564a88f695e0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x564a88f6cf28 <col:35, line:87:5>
|   |-BinaryOperator 0x564a88f6ce58 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x564a88f6cdf0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x564a88f6bc48
|   | | `-MemberExpr 0x564a88f6cdc0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x564a88f6bd08
|   | |   `-CXXThisExpr 0x564a88f6cdb0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x564a88f6ce40 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564a88f6ce20 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x564a88f6c340 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x564a88f6cf08 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x564a88f6ce88 <col:2> 'void *' lvalue ->_thunk 0x564a88f6bd88
|     | `-CXXThisExpr 0x564a88f6ce78 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x564a88f6cef0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x564a88f6ced8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x564a88f6ceb8 <col:11> 'Element *' lvalue ParmVar 0x564a88f695e0 'element' 'Element *'
|-CXXMethodDecl 0x564a88f697b8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x564a88f69728 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x564a88f6d0c0 <col:29, line:94:5>
|   |-BinaryOperator 0x564a88f6cff0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x564a88f6cf88 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x564a88f6bc48
|   | | `-MemberExpr 0x564a88f6cf58 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x564a88f6bd08
|   | |   `-CXXThisExpr 0x564a88f6cf48 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x564a88f6cfd8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564a88f6cfb8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x564a88f6c518 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x564a88f6d0a0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x564a88f6d020 <col:2> 'void *' lvalue ->_thunk 0x564a88f6bd88
|     | `-CXXThisExpr 0x564a88f6d010 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x564a88f6d088 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x564a88f6d070 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x564a88f6d050 <col:11> 'Task *' lvalue ParmVar 0x564a88f69728 'task' 'Task *'
|-CXXMethodDecl 0x564a88f698a8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x564a88f6d1a0 <col:37, line:100:5>
|   `-ReturnStmt 0x564a88f6d190 <line:99:2, col:19>
|     `-BinaryOperator 0x564a88f6d170 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x564a88f6d140 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x564a88f6d0f0 <col:9> 'Element *const' lvalue ->_owner 0x564a88f6bde8
|       |   `-CXXThisExpr 0x564a88f6d0e0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x564a88f6d158 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x564a88f6d120 <col:19> 'int' 0
|-CXXMethodDecl 0x564a88f69968 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x564a88f6d260 <col:35, line:105:5>
|   `-ReturnStmt 0x564a88f6d250 <line:104:2, col:23>
|     `-BinaryOperator 0x564a88f6d230 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x564a88f6d218 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x564a88f6d1c8 <col:9> 'const int' lvalue ->_schedpos1 0x564a88f6ba68
|       |   `-CXXThisExpr 0x564a88f6d1b8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x564a88f6d1f8 <col:23> 'int' 0
|-CXXMethodDecl 0x564a88f69a28 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x564a88f6d2c8 <col:51, line:118:5>
|   `-ReturnStmt 0x564a88f6d2b8 <line:117:2, col:9>
|     `-MemberExpr 0x564a88f6d288 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|       `-CXXThisExpr 0x564a88f6d278 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x564a88f69ae8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x564a88f6d820 <col:37, line:136:5>
|   `-IfStmt 0x564a88f6d7f8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x564a88f6d388 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x564a88f6d370 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x564a88f6d350 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x564a88f6d320 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x564a88ed2668
|     |       `-MemberExpr 0x564a88f6d2f0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|     |         `-CXXThisExpr 0x564a88f6d2e0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x564a88f6d768 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x564a88f6d750 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x564a88f6d720 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x564a88f6d708 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x564a88f6d6d0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x564a88f6d6b8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x564a88f6d698 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564a88efdf50 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x564a88f6d638 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x564a88f6d620 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x564a88f6d548 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x564a88f6d530 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x564a88f6d510 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564a88efdc08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x564a88f6d4b0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x564a88f6d3b0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|     |         |     |   `-CXXThisExpr 0x564a88f6d3a0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x564a88f6d4f8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x564a88f6d4e0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x564a88f6d490 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x564a88f6d478 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x564a88f6d418 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x564a88d49770 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x564a88f6d680 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x564a88f6d668 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x564a88f6d600 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x564a88f6d5e8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x564a88f6d5b8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x564a88d4a440 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x564a88f6d7e8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x564a88f6d7b8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x564a88f6d788 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|           `-CXXThisExpr 0x564a88f6d778 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x564a88f69ba8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x564a88f6d908 <col:35, line:141:5>
|   `-ReturnStmt 0x564a88f6d8f8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x564a88f6d8c0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x564a88f6d890 <col:9, col:17> '<bound member function type>' ->router 0x564a88f51ee0
|         `-ImplicitCastExpr 0x564a88f6d8e0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x564a88f6d878 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x564a88f6d848 <col:9> 'Element *const' lvalue ->_owner 0x564a88f6bde8
|               `-CXXThisExpr 0x564a88f6d838 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x564a88f69c68 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x564a88f6d988 <col:37, line:146:5>
|   `-ReturnStmt 0x564a88f6d978 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x564a88f6d960 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x564a88f6d930 <col:9> 'Element *const' lvalue ->_owner 0x564a88f6bde8
|         `-CXXThisExpr 0x564a88f6d920 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x564a88f69d28 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x564a88f6da08 <col:41, line:151:5>
|   `-ReturnStmt 0x564a88f6d9f8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x564a88f6d9e0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x564a88f6d9b0 <col:9> 'RouterThread *const' lvalue ->_thread 0x564a88f6be48
|         `-CXXThisExpr 0x564a88f6d9a0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x564a88f69df0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x564a88f69fe8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x564a88f69ea0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x564a88f69f18 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564a88f6c728 <col:50> 'bool' false
|-CXXMethodDecl 0x564a88f6a168 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x564a88f6a0a8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x564a88f6a2b0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x564a88f6a220 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x564a88f6a3f8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x564a88f6a368 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x564a88f6a540 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x564a88f6a4b0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x564a88f6a688 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x564a88f6a5f8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x564a88f6a750 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x564a88f6db70 <col:32, line:223:5>
|   `-ExprWithCleanups 0x564a88f6db58 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x564a88f6db00 <col:2, col:47> 'void'
|       |-MemberExpr 0x564a88f6da30 <col:2> '<bound member function type>' ->schedule_at_steady 0x564a88f6a2b0
|       | `-CXXThisExpr 0x564a88f6da20 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564a88f6db40 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564a88f6db28 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x564a88f6dae0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x564a88f6dac8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x564a88f6da98 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x564a88d4a440 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x564a88f6a890 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x564a88f6a800 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x564a88f6a9d8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x564a88f6a948 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88f6dcf8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x564a88f6dce0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x564a88f6dc88 <col:2, col:40> 'void'
|       |-MemberExpr 0x564a88f6db98 <col:2> '<bound member function type>' ->schedule_after 0x564a88f6a890
|       | `-CXXThisExpr 0x564a88f6db88 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564a88f6dcc8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564a88f6dcb0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x564a88f6dc48 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x564a88f6dc18 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x564a88f6dbd8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88f6a948 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x564a88f6dc30 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x564a88f6dbf8 <col:38> 'int' 0
|-CXXMethodDecl 0x564a88f6ab20 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x564a88f6aa90 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88f6df68 <col:58, line:249:5>
|   `-ExprWithCleanups 0x564a88f6df50 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x564a88f6def8 <col:2, col:49> 'void'
|       |-MemberExpr 0x564a88f6dd20 <col:2> '<bound member function type>' ->schedule_after 0x564a88f6a890
|       | `-CXXThisExpr 0x564a88f6dd10 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564a88f6df38 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564a88f6df20 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x564a88f6dea0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x564a88f6de88 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x564a88f6ddf8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x564a88ed4458 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x564a88f6dee0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x564a88f6dec8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x564a88f6ddd8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88f6aa90 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f6ac68 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x564a88f6abd8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x564a88f6e148 <col:58, line:261:5>
|   `-ExprWithCleanups 0x564a88f6e130 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x564a88f6e0d8 <col:2, col:38> 'void'
|       |-MemberExpr 0x564a88f6df90 <col:2> '<bound member function type>' ->schedule_at_steady 0x564a88f6a2b0
|       | `-CXXThisExpr 0x564a88f6df80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564a88f6e118 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564a88f6e100 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x564a88f6e0a0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x564a88f6e088 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x564a88f6e068 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564a88efdc08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x564a88f6e038 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x564a88f6e020 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x564a88f6dfd0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|             |     `-CXXThisExpr 0x564a88f6dfc0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x564a88f6e000 <col:33> 'const Timestamp' lvalue ParmVar 0x564a88f6abd8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x564a88f6adb0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x564a88f6ad20 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88f6e420 <col:58, line:270:5>
|   `-ExprWithCleanups 0x564a88f6e408 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x564a88f6e3b0 <col:2, col:79> 'void'
|       |-MemberExpr 0x564a88f6e170 <col:2> '<bound member function type>' ->schedule_at_steady 0x564a88f6a2b0
|       | `-CXXThisExpr 0x564a88f6e160 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564a88f6e3f0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564a88f6e3d8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x564a88f6e370 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x564a88f6e2a8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x564a88f6e290 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x564a88f6e220 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x564a88f6e1f0 <col:31, col:41> '<bound member function type>' .sec 0x564a88d4bf38
|             | |     `-ImplicitCastExpr 0x564a88f6e240 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x564a88f6e1c0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|             | |         `-CXXThisExpr 0x564a88f6e1b0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x564a88f6e278 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x564a88f6e258 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88f6ad20 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x564a88f6e338 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x564a88f6e308 <col:60, col:70> '<bound member function type>' .subsec 0x564a88d4c630
|                 `-ImplicitCastExpr 0x564a88f6e358 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x564a88f6e2d8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|                     `-CXXThisExpr 0x564a88f6e2c8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x564a88f6aef8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x564a88f6ae68 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564a88f6e758 <col:60, line:279:5>
|   `-ExprWithCleanups 0x564a88f6e740 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x564a88f6e6e8 <col:2, col:65> 'void'
|       |-MemberExpr 0x564a88f6e448 <col:2> '<bound member function type>' ->schedule_at_steady 0x564a88f6a2b0
|       | `-CXXThisExpr 0x564a88f6e438 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564a88f6e728 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564a88f6e710 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x564a88f6e6b0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x564a88f6e698 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x564a88f6e678 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564a88efdc08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x564a88f6e618 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x564a88f6e600 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x564a88f6e488 <col:21> 'Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|             |     `-CXXThisExpr 0x564a88f6e478 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x564a88f6e660 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x564a88f6e648 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x564a88f6e5a8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x564a88f6e590 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x564a88f6e560 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x564a88ed4458 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x564a88f6e5e8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x564a88f6e5d0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x564a88f6e540 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x564a88f6ae68 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564a88f6afc0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x564a88f6b080 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x564a88f6ec20 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x564a88f6e7b0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x564a88f6e780 <col:2> '<bound member function type>' ->unschedule 0x564a88f6afc0
|   |   `-CXXThisExpr 0x564a88f6e770 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x564a88f6ec08 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x564a88f6ebd0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x564a88f6ebb8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564a88f6e868 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x564a88f212d8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x564a88f6e7e0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x564a88f6bac8
|       | `-CXXThisExpr 0x564a88f6e7d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564a88f6e850 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x564a88f6e820 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x564a88f6b140 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x564a88f6ef78 <col:42, line:310:5>
|   |-IfStmt 0x564a88f6edc0 <line:306:2, line:307:23>
|   | |-CallExpr 0x564a88f6ecf0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x564a88f6ecd8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x564a88f6ec78 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x564a88eef740 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x564a88f6edb0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x564a88f6ed98 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x564a88f6ed68 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x564a88f6ed50 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x564a88f6ed20 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x564a88f6ef68 <line:309:2, col:33>
|     `-ExprWithCleanups 0x564a88f6ef50 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x564a88f6ef20 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564a88f6ef08 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x564a88f6eec8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x564a88f6eeb0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x564a88f6ee80 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x564a88ed4770 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x564a88f6eef0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x564a88f6ee60 <col:30> 'int' 500
|-CXXMethodDecl 0x564a88f6b280 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x564a88f6b1f0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88f6b328 <col:69> "" ""
|-CXXMethodDecl 0x564a88f6b438 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x564a88f6b3a8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88f6b4e0 <col:70> "" ""
|-CXXMethodDecl 0x564a88f6b5f0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x564a88f6b560 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88f6b698 <col:71> "" ""
|-CXXMethodDecl 0x564a88f6b7a8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x564a88f6b718 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564a88f6b850 <col:72> "" ""
|-EnumDecl 0x564a88f6b8c0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x564a88f6b9c0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x564a88f6ba10 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564a88f6b9a0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x564a88f6b980 <col:25> 'int' 1
|-AccessSpecDecl 0x564a88f6ba28 <line:339:3, col:10> col:3 private
|-FieldDecl 0x564a88f6ba68 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x564a88f6bac8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x564a88f6bb18 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x564a88f6bc48 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x564a88f6c738 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x564a88f6bd08 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x564a88f6bd88 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x564a88f6bde8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x564a88f6be48 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x564a88f6bf98 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x564a88f6bea8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x564a88f6c168 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x564a88f6c050 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x564a88f6c0d0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x564a88f6c340 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x564a88f6c228 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x564a88f6c2a8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x564a88f6c518 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x564a88f6c400 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x564a88f6c480 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x564a88f6c6e8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88f83b58 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x564a89159d08 <line:167:18>
|-CXXRecordDecl 0x564a89159dc8 prev 0x564a88f83b58 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x564a89159ed8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a88f8eb20 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x564a8915ab70 <line:167:18>
|-CXXRecordDecl 0x564a8915ac30 prev 0x564a88f8eb20 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x564a8915ad40 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class String>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class String * _ptr
        24 |   class String _slot
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a88ef8618 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x564a88ef8738 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x564a88ef87c8 <col:18, col:24> col:18 public
|-EnumDecl 0x564a89091b60 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x564a89091c60 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x564a89091d50 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a89091c40 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x564a89091c20 <col:35> 'int' 0
| |-EnumConstantDecl 0x564a89091cb0 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x564a89091d00 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x564a89091f98 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x564a89091f30 'void (*)(void *, Notifier *)'
|   `-ParenType 0x564a89091ed0 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x564a89091e90 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x564a889c44e0 'void'
|       |-PointerType 0x564a889c4ce0 'void *'
|       | `-BuiltinType 0x564a889c44e0 'void'
|       `-PointerType 0x564a89091df0 'Notifier *'
|         `-RecordType 0x564a88ef86b0 'Notifier'
|           `-CXXRecord 0x564a88ef8618 'Notifier'
|-CXXConstructorDecl 0x564a890920d8 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x564a89092000 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x564a89096068 <col:35> 'Notifier::SearchOp' EnumConstant 0x564a89091c60 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x564a890922e8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x564a89092198 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x564a89092210 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x564a89096088 <col:65> 'Notifier::SearchOp' EnumConstant 0x564a89091c60 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x564a890923e8 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x564a89092518 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x564a89096148 <col:37, line:85:5>
|   `-ReturnStmt 0x564a89096138 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x564a89096118 <col:9, col:29> 'bool'
|       `-MemberExpr 0x564a890960e8 <col:9, col:17> '<bound member function type>' .initialized 0x564a88ef68e0
|         `-MemberExpr 0x564a890960b8 <col:9> 'const NotifierSignal' lvalue ->_signal 0x564a89095a88
|           `-CXXThisExpr 0x564a890960a8 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x564a89092720 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x564a890925d0 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x564a89092648 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x564a89092818 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x564a89092908 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x564a890929c8 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x564a89092b08 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x564a89092a78 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x564a89092bd0 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x564a89092c90 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x564a89092f00 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x564a89092d60 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x564a89092de0 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x564a89093158 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x564a89092fc0 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x564a89093040 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x564a890932e0 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x564a89093218 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x564a89093428 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x564a89093398 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x564a890935b0 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x564a890934e0 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x564a89093728 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x564a89093668 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x564a890937f0 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x564a89093878 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x564a89093a48 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x564a890938f0 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x564a89093970 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x564a89093ce8 <line:109:5, col:88> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x564a89093b08 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564a89093b88 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x564a89093c00 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x564a89093f88 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x564a89093db0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564a89093e30 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x564a89093ea8 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x564a89094308 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x564a89094050 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x564a890940d0 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x564a89094148 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x564a890941c8 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x564a890944f0 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x564a890943d8 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x564a89094458 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x564a89094748 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x564a890945b0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x564a89094630 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x564a890946a8 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x564a890949a8 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x564a89094810 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x564a89094890 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x564a89094908 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x564a89094c90 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x564a89094a70 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x564a89094af0 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x564a89094b68 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x564a89094be8 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x564a89094f48 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x564a89094d60 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564a89094de0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x564a89094e60 <col:78> col:81 'int'
| `-DeprecatedAttr 0x564a89095000 <col:98> "" ""
|-CXXMethodDecl 0x564a890952e8 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x564a89095080 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564a89095100 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x564a89095180 <col:78> col:81 'int'
| |-ParmVarDecl 0x564a890951f8 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x564a890953a8 <col:110> "" ""
|-CXXMethodDecl 0x564a890955c8 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x564a89095428 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x564a890954a8 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x564a89095528 <col:79> col:82 'int'
| `-DeprecatedAttr 0x564a89095680 <col:99> "" ""
|-CXXMethodDecl 0x564a89095920 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x564a89095700 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x564a89095780 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x564a89095800 <col:79> col:82 'int'
| |-ParmVarDecl 0x564a89095878 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x564a890959e0 <col:111> "" ""
|-AccessSpecDecl 0x564a89095a50 <line:123:3, col:10> col:3 private
|-FieldDecl 0x564a89095a88 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x564a89095ae8 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x564a89095c60 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x564a89095b50 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x564a89095bc8 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x564a89095d38 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x564a89095d38
| `-ParmVarDecl 0x564a89095e48 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x564a89095ee8 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x564a89095ee8
  `-ParmVarDecl 0x564a89095ff8 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a8912bf00 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a8912c018 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x564a8912c0a8 <col:16, col:22> col:16 public
|-EnumDecl 0x564a8912c0d0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x564a8912c1d0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x564a8912c420 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a8912c1b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x564a8912c190 <col:21> 'int' 0
| |-EnumConstantDecl 0x564a8912c260 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x564a8912c438 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a8912c240 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x564a8912c220 <col:24> 'int' 22
| |-EnumConstantDecl 0x564a8912c2f0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x564a8912c450 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a8912c2d0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x564a8912c2b0 <col:24> 'int' 34
| |-EnumConstantDecl 0x564a8912c380 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x564a8912c468 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564a8912c360 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x564a8912c340 <col:25> 'int' 95
| `-EnumConstantDecl 0x564a8912c3d0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x564a8912dde0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564a8912e218 <col:7>
|-CXXConstructorDecl 0x564a8912dee8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x564a8912dee8
| `-ParmVarDecl 0x564a8912dff8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x564a8912e098 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564a8912e1a8 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x564a891a2b90 <col:7>
`-CXXDestructorDecl 0x564a89130328 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a8912c498 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x564a8912c5f8 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x564a8912c688 <col:32, col:38> col:32 public
|-TypedefDecl 0x564a8912c6c0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x564a88b1e0e0 'uint32_t' sugar
|   |-Typedef 0x564a88a2d4c8 'uint32_t'
|   `-TypedefType 0x564a88a065a0 '__uint32_t' sugar
|     |-Typedef 0x564a88a06198 '__uint32_t'
|     `-BuiltinType 0x564a889c4620 'unsigned int'
|-CXXConstructorDecl 0x564a8912c808 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x564a8912c730 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x564a8912dce8 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x564a8912e228 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x564a8912d5a0 'base' 'int'
| | `-ImplicitCastExpr 0x564a8912dd88 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x564a8912dd48 <col:16> 'int' lvalue ParmVar 0x564a8912c730 'b' 'int'
| `-CompoundStmt 0x564a8912e298 <col:19, line:1046:5>
|-CXXMethodDecl 0x564a8912cd00 <line:1048:5, line:1050:50> line:1048:17 used parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x564a8912c8d0 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x564a8912c950 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x564a8912c9c8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x564a8912ca48 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x564a8912cb08 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x564a8912cb88 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x564a8912d158 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x564a8912cdd0 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x564a8912d0b8 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x564a8912ce78 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x564a8912cf18 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x564a8912cf90 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x564a8912dd08 <col:82> 'const ArgContext' lvalue Var 0x564a891237b0 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x564a8912f1d8 <col:94, line:1067:5>
| |   |-DeclStmt 0x564a8912e428 <line:1054:9, col:64>
| |   | `-VarDecl 0x564a8912e2b8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x564a8912e3e0 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x564a8912e648 <line:1055:9, col:91>
| |   | `-VarDecl 0x564a8912e458 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x564a8912e620 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x564a8912e600 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x564a8912e5b0 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x564a8912e590 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x564a8912e538 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x564a8912e4e8 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x564a8912e518 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x564a8912e578 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x564a8912e558 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x564a8912e5e0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x564a8912e7a8 <line:1056:9, col:27>
| |   | `-VarDecl 0x564a8912e740 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x564a8912ec00 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x564a8912eb30 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x564a8912eaa0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x564a8909e8d0 0x564a89072580 0x564a88efb6b8 0x564a88d4d7c8 0x564a88d4d4a0 0x564a88cde370 0x564a88c31330 0x564a88c30fe0 0x564a88c308d0 0x564a88bf1860
| |   | | |-CallExpr 0x564a8912e9e0 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x564a8912e7d0 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x564a8912e880 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x564a8912e850 <col:19, col:23> '<bound member function type>' .begin 0x564a88c214f8
| |   | | | |   `-DeclRefExpr 0x564a8912e830 <col:19> 'const String' lvalue ParmVar 0x564a8912ce78 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x564a8912e8f0 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x564a8912e8c0 <col:32, col:36> '<bound member function type>' .end 0x564a88c21710
| |   | | | |   `-DeclRefExpr 0x564a8912e8a0 <col:32> 'const String' lvalue ParmVar 0x564a8912ce78 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x564a8912e910 <col:43> 'const bool' lvalue Var 0x564a8912e2b8 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x564a8912e978 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x564a8912e958 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x564a8912e9a0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x564a8912e740 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x564a8912e9c0 <col:73> 'const int' lvalue Var 0x564a8912e458 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x564a8912ea80 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x564a8912ea50 <col:16, col:20> '<bound member function type>' .end 0x564a88c21710
| |   | |     `-DeclRefExpr 0x564a8912ea30 <col:16> 'const String' lvalue ParmVar 0x564a8912ce78 'str' 'const String &'
| |   | `-BinaryOperator 0x564a8912ebe0 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x564a8912eb78 <col:13> 'int' lvalue ->status 0x564a8912d608
| |   |   | `-CXXThisExpr 0x564a8912eb68 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x564a8912ebc8 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x564a8912eba8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x564a8912c260 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x564a8912ee50 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x564a8912ed38 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x564a8912ed20 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x564a8912ed08 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x564a8912ec28 <col:13> 'int' lvalue ->status 0x564a8912d608
| |   | | |     `-CXXThisExpr 0x564a8912ec18 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x564a8912ece8 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x564a8912ecb8 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x564a8912ec68 <col:23> 'int' lvalue ->status 0x564a8912d608
| |   | |   |   `-CXXThisExpr 0x564a8912ec58 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x564a8912ecd0 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x564a8912ec98 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x564a8912c2f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x564a8912ee30 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x564a8912edd0 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x564a8912ed78 <col:13, col:18> '<bound member function type>' .error 0x564a890dfcf0
| |   |   | | `-DeclRefExpr 0x564a8912ed58 <col:13> 'const ArgContext' lvalue ParmVar 0x564a8912cf90 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x564a8912edf8 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x564a8912eda8 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x564a8912ee20 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x564a8912ee10 <col:20> 'bool' false
| |   |-DeclStmt 0x564a8912f028 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x564a8912efd0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x564a8912ef60 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x564a8912f188 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x564a8912f040 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x564a88d0bf38
| |   | |-DeclRefExpr 0x564a8912f088 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x564a8912e740 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x564a8912f158 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x564a8912f0d0 <col:64> 'V' lvalue ParmVar 0x564a8912cf18 'result' 'V &'
| |   `-ReturnStmt 0x564a8912f1c8 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x564a8912f1b8 <col:16> 'bool' true
| `-CXXMethodDecl 0x564a891a6338 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x564a891a6110 <col:27, col:41> col:41 used str 'const String &'
|   |-ParmVarDecl 0x564a891a61e8 <col:46, col:49> col:49 used result 'int &'
|   |-ParmVarDecl 0x564a891a6250 <col:57, col:82> col:75 used args 'const ArgContext &'
|   `-CompoundStmt 0x564a891a80e0 <col:94, line:1067:5>
|     |-DeclStmt 0x564a891a6b48 <line:1054:9, col:64>
|     | `-VarDecl 0x564a891a6968 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-ImplicitCastExpr 0x564a891a6ad8 <col:36, col:55> 'bool' <LValueToRValue>
|     |     `-DeclRefExpr 0x564a891a6aa8 <col:36, col:55> 'const bool' lvalue Var 0x564a88cff758 'is_signed' 'const bool' non_odr_use_constant
|     |-DeclStmt 0x564a891a6d28 <line:1055:9, col:91>
|     | `-VarDecl 0x564a891a6b60 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x564a891a6ca8 <col:31, col:90> 'int' functional cast to int <NoOp>
|     |     `-ImplicitCastExpr 0x564a891a6c90 <col:35, col:89> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-BinaryOperator 0x564a891a6c70 <col:35, col:89> 'unsigned long' '/'
|     |         |-ParenExpr 0x564a891a6c50 <col:35, col:69> 'unsigned long'
|     |         | `-BinaryOperator 0x564a891a6c30 <col:36, col:68> 'unsigned long' '-'
|     |         |   |-BinaryOperator 0x564a891a6bf8 <col:36, col:64> 'unsigned long' '+'
|     |         |   | |-UnaryExprOrTypeTraitExpr 0x564a891a6bd8 <col:36, col:44> 'unsigned long' sizeof 'int':'int'
|     |         |   | `-UnaryExprOrTypeTraitExpr 0x564a8912e518 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |         |   `-ImplicitCastExpr 0x564a891a6c18 <col:68> 'unsigned long' <IntegralCast>
|     |         |     `-IntegerLiteral 0x564a8912e558 <col:68> 'int' 1
|     |         `-UnaryExprOrTypeTraitExpr 0x564a8912e5e0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x564a891a6ec0 <line:1056:9, col:27>
|     | `-VarDecl 0x564a891a6e58 <col:9, col:26> col:19 used x 'IntArg::limb_type [1]'
|     |-IfStmt 0x564a891a7358 <line:1057:9, line:1059:22>
|     | |-BinaryOperator 0x564a891a7300 <line:1057:13, line:1058:24> 'bool' '!='
|     | | |-CXXMemberCallExpr 0x564a891a71b8 <line:1057:13, col:78> 'const char *'
|     | | | |-MemberExpr 0x564a891a7188 <col:13> '<bound member function type>' ->parse 0x564a8912cd00
|     | | | | `-CXXThisExpr 0x564a891a7178 <col:13> 'IntArg *' implicit this
|     | | | |-CXXMemberCallExpr 0x564a891a7018 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x564a891a6fe8 <col:19, col:23> '<bound member function type>' .begin 0x564a88c214f8
|     | | | |   `-DeclRefExpr 0x564a891a6fc8 <col:19> 'const String' lvalue ParmVar 0x564a891a6110 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x564a891a7088 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x564a891a7058 <col:32, col:36> '<bound member function type>' .end 0x564a88c21710
|     | | | |   `-DeclRefExpr 0x564a891a7038 <col:32> 'const String' lvalue ParmVar 0x564a891a6110 'str' 'const String &'
|     | | | |-ImplicitCastExpr 0x564a891a7228 <col:43> 'bool' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x564a891a7208 <col:43> 'const bool' lvalue Var 0x564a891a6968 'is_signed' 'const bool' non_odr_use_constant
|     | | | |-CXXFunctionalCastExpr 0x564a891a7110 <col:54, col:67> 'int' functional cast to int <NoOp>
|     | | | | `-ImplicitCastExpr 0x564a891a70f8 <col:58, col:66> 'int' <IntegralCast> part_of_explicit_cast
|     | | | |   `-UnaryExprOrTypeTraitExpr 0x564a891a70d8 <col:58, col:66> 'unsigned long' sizeof 'int':'int'
|     | | | |-ImplicitCastExpr 0x564a891a7240 <col:70> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | | | | `-DeclRefExpr 0x564a891a7138 <col:70> 'IntArg::limb_type [1]' lvalue Var 0x564a891a6e58 'x' 'IntArg::limb_type [1]'
|     | | | `-ImplicitCastExpr 0x564a891a7278 <col:73> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x564a891a7258 <col:73> 'const int' lvalue Var 0x564a891a6b60 'nlimb' 'const int' non_odr_use_constant
|     | | `-CXXMemberCallExpr 0x564a891a72e0 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x564a891a72b0 <col:16, col:20> '<bound member function type>' .end 0x564a88c21710
|     | |     `-DeclRefExpr 0x564a891a7290 <col:16> 'const String' lvalue ParmVar 0x564a891a6110 'str' 'const String &'
|     | `-BinaryOperator 0x564a891a7338 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x564a8912eb78 <col:13> 'int' lvalue ->status 0x564a8912d608
|     |   | `-CXXThisExpr 0x564a8912eb68 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x564a891a7320 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x564a8912eba8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x564a8912c260 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x564a891a74d0 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x564a891a73f0 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x564a891a73d8 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x564a891a73c0 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x564a8912ec28 <col:13> 'int' lvalue ->status 0x564a8912d608
|     | | |     `-CXXThisExpr 0x564a8912ec18 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x564a891a73a0 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x564a891a7370 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x564a8912ec68 <col:23> 'int' lvalue ->status 0x564a8912d608
|     | |   |   `-CXXThisExpr 0x564a8912ec58 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x564a891a7388 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x564a8912ec98 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x564a8912c2f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x564a891a74b0 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x564a891a7460 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x564a891a7430 <col:13, col:18> '<bound member function type>' .error 0x564a890dfcf0
|     |   | | `-DeclRefExpr 0x564a891a7410 <col:13> 'const ArgContext' lvalue ParmVar 0x564a891a6250 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x564a891a7488 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x564a8912eda8 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x564a891a74a0 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x564a8912ee10 <col:20> 'bool' false
|     |-DeclStmt 0x564a891a7a18 <line:1064:9, col:64>
|     | `-TypedefDecl 0x564a891a79c0 <col:9, col:49> col:49 unsigned_v_type 'typename make_unsigned<int>::type':'unsigned int'
|     |   `-ElaboratedType 0x564a891a7970 'typename make_unsigned<int>::type' sugar
|     |     `-TypedefType 0x564a891a7950 'make_unsigned<int>::type' sugar
|     |       |-Typedef 0x564a891a78e0 'type'
|     |       `-ElaboratedType 0x564a891a7890 'typename integer_traits<int>::unsigned_type' sugar
|     |         `-TypedefType 0x564a891a7870 'integer_traits<int>::unsigned_type' sugar
|     |           |-Typedef 0x564a88cff8b0 'unsigned_type'
|     |           `-BuiltinType 0x564a889c4620 'unsigned int'
|     |-CallExpr 0x564a891a8070 <line:1065:9, col:71> 'void'
|     | |-ImplicitCastExpr 0x564a891a8058 <col:9> 'void (*)(const unsigned int *, unsigned int &)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x564a891a7fd8 <col:9> 'void (const unsigned int *, unsigned int &)' lvalue Function 0x564a891a7eb8 'extract_integer' 'void (const unsigned int *, unsigned int &)' (FunctionTemplate 0x564a88d0bf38 'extract_integer')
|     | |-ImplicitCastExpr 0x564a891a80b8 <col:25> 'const unsigned int *' <NoOp>
|     | | `-ImplicitCastExpr 0x564a891a80a0 <col:25> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | |   `-DeclRefExpr 0x564a891a7a78 <col:25> 'IntArg::limb_type [1]' lvalue Var 0x564a891a6e58 'x' 'IntArg::limb_type [1]'
|     | `-CXXReinterpretCastExpr 0x564a891a7b48 <col:28, col:70> 'unsigned_v_type':'unsigned int' lvalue reinterpret_cast<unsigned_v_type &> <LValueBitCast>
|     |   `-DeclRefExpr 0x564a891a7af8 <col:64> 'int':'int' lvalue ParmVar 0x564a891a61e8 'result' 'int &'
|     `-ReturnStmt 0x564a891a80d0 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x564a8912f1b8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x564a8912d518 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x564a8912d1c8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x564a8912d478 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x564a8912d278 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x564a8912d318 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x564a8912d390 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x564a8912dd28 <col:71> 'const ArgContext' lvalue Var 0x564a891237b0 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x564a8912f948 <col:83, line:1083:5>
| |   |-DeclStmt 0x564a8912f2a0 <line:1071:9, col:12>
| |   | `-VarDecl 0x564a8912f238 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x564a8912f920 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x564a8912f530 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x564a8912f3b8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x564a8912f380 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x564a8912f2c8 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x564a8912f320 <col:31> 'const String' lvalue ParmVar 0x564a8912d278 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x564a8912f340 <col:36> 'V' lvalue Var 0x564a8912f238 'x' 'V'
| |     | |   `-DeclRefExpr 0x564a8912f360 <col:39> 'const ArgContext' lvalue ParmVar 0x564a8912d390 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x564a8912f510 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x564a8912f4f0 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x564a8912f4d8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x564a8912f4c0 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x564a8912f3e0 <col:17> 'int' lvalue ->status 0x564a8912d608
| |     |     |     `-CXXThisExpr 0x564a8912f3d0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x564a8912f4a0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x564a8912f470 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x564a8912f420 <col:27> 'int' lvalue ->status 0x564a8912d608
| |     |       |   `-CXXThisExpr 0x564a8912f410 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x564a8912f488 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x564a8912f450 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x564a8912c2f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x564a8912f560 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x564a8912f550 <col:20> 'bool' false
| |     `-IfStmt 0x564a8912f8f8 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x564a8912f600 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x564a8912f5d0 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x564a8912f580 <col:18> 'int' lvalue ->status 0x564a8912d608
| |       | |   `-CXXThisExpr 0x564a8912f570 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x564a8912f5e8 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x564a8912f5b0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x564a8912c2f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x564a8912f838 <col:42, line:1079:9>
| |       | |-CallExpr 0x564a8912f7e0 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x564a8912f630 <line:1076:13> '<bound member function type>' ->range_error 0x564a8912dc18
| |       | | | `-CXXThisExpr 0x564a8912f620 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x564a8912f660 <col:25> 'const ArgContext' lvalue ParmVar 0x564a8912d390 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x564a8912f740 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x564a8912f7b8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x564a8912f798 <col:43> 'V' lvalue Var 0x564a8912f238 'x' 'V'
| |       | `-ReturnStmt 0x564a8912f828 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x564a8912f818 <col:20> 'bool' false
| |       `-CompoundStmt 0x564a8912f8d8 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x564a8912f898 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x564a8912f858 <col:13> 'V' lvalue ParmVar 0x564a8912d318 'result' 'V &'
| |         | `-DeclRefExpr 0x564a8912f878 <col:22> 'V' lvalue Var 0x564a8912f238 'x' 'V'
| |         `-ReturnStmt 0x564a8912f8c8 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x564a8912f8b8 <col:20> 'bool' true
| `-CXXMethodDecl 0x564a891a5cf8 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x564a891a5ad0 <col:16, col:30> col:30 used str 'const String &'
|   |-ParmVarDecl 0x564a891a5ba8 <col:35, col:38> col:38 used result 'int &'
|   |-ParmVarDecl 0x564a891a5c10 <col:46, col:71> col:64 used args 'const ArgContext &'
|   `-CompoundStmt 0x564a891a6948 <col:83, line:1083:5>
|     |-DeclStmt 0x564a891a5f80 <line:1071:9, col:12>
|     | `-VarDecl 0x564a891a5f18 <col:9, col:11> col:11 used x 'int':'int'
|     `-IfStmt 0x564a891a6920 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x564a891a65b0 <line:1072:13, line:1073:49> 'bool' '||'
|       | |-UnaryOperator 0x564a891a64d8 <line:1072:13, col:43> 'bool' prefix '!' cannot overflow
|       | | `-CXXMemberCallExpr 0x564a891a64a0 <col:14, col:43> 'bool'
|       | |   |-MemberExpr 0x564a891a6458 <col:14> '<bound member function type>' ->parse_saturating 0x564a891a6338
|       | |   | `-CXXThisExpr 0x564a891a6448 <col:14> 'IntArg *' implicit this
|       | |   |-DeclRefExpr 0x564a891a5ff0 <col:31> 'const String' lvalue ParmVar 0x564a891a5ad0 'str' 'const String &'
|       | |   |-DeclRefExpr 0x564a891a6010 <col:36> 'int':'int' lvalue Var 0x564a891a5f18 'x' 'int':'int'
|       | |   `-DeclRefExpr 0x564a891a6030 <col:39> 'const ArgContext' lvalue ParmVar 0x564a891a5c10 'args' 'const ArgContext &'
|       | `-ParenExpr 0x564a891a6590 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x564a891a6570 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x564a891a6558 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x564a891a6540 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x564a8912f3e0 <col:17> 'int' lvalue ->status 0x564a8912d608
|       |     |     `-CXXThisExpr 0x564a8912f3d0 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x564a891a6520 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x564a891a64f0 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x564a8912f420 <col:27> 'int' lvalue ->status 0x564a8912d608
|       |       |   `-CXXThisExpr 0x564a8912f410 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x564a891a6508 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x564a8912f450 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x564a8912c2f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x564a891a65d0 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x564a8912f550 <col:20> 'bool' false
|       `-IfStmt 0x564a891a68f8 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x564a891a6610 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x564a891a65e0 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x564a8912f580 <col:18> 'int' lvalue ->status 0x564a8912d608
|         | |   `-CXXThisExpr 0x564a8912f570 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x564a891a65f8 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x564a8912f5b0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x564a8912c2f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x564a891a6830 <col:42, line:1079:9>
|         | |-CXXMemberCallExpr 0x564a891a67a0 <line:1076:13, line:1077:45> 'void'
|         | | |-MemberExpr 0x564a8912f630 <line:1076:13> '<bound member function type>' ->range_error 0x564a8912dc18
|         | | | `-CXXThisExpr 0x564a8912f620 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x564a891a6630 <col:25> 'const ArgContext' lvalue ParmVar 0x564a891a5c10 'args' 'const ArgContext &'
|         | | |-ImplicitCastExpr 0x564a891a6808 <col:31, col:50> 'bool' <LValueToRValue>
|         | | | `-DeclRefExpr 0x564a891a67d8 <col:31, col:50> 'const bool' lvalue Var 0x564a88cff758 'is_signed' 'const bool' non_odr_use_constant
|         | | `-CXXFunctionalCastExpr 0x564a891a6778 <line:1077:25, col:44> 'click_int_large_t':'long long' functional cast to click_int_large_t <NoOp>
|         | |   `-ImplicitCastExpr 0x564a891a6760 <col:43> 'click_int_large_t':'long long' <IntegralCast> part_of_explicit_cast
|         | |     `-ImplicitCastExpr 0x564a891a6748 <col:43> 'int':'int' <LValueToRValue> part_of_explicit_cast
|         | |       `-DeclRefExpr 0x564a891a6728 <col:43> 'int':'int' lvalue Var 0x564a891a5f18 'x' 'int':'int'
|         | `-ReturnStmt 0x564a891a6820 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x564a8912f818 <col:20> 'bool' false
|         `-CompoundStmt 0x564a891a68d8 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x564a891a68a8 <line:1080:13, col:22> 'int':'int' lvalue '='
|           | |-DeclRefExpr 0x564a891a6850 <col:13> 'int':'int' lvalue ParmVar 0x564a891a5ba8 'result' 'int &'
|           | `-ImplicitCastExpr 0x564a891a6890 <col:22> 'int':'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x564a891a6870 <col:22> 'int':'int' lvalue Var 0x564a891a5f18 'x' 'int':'int'
|           `-ReturnStmt 0x564a891a68c8 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x564a8912f8b8 <col:20> 'bool' true
|-FieldDecl 0x564a8912d5a0 <line:1085:5, col:9> col:9 referenced base 'int'
|-FieldDecl 0x564a8912d608 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x564a8912d658 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x564a8912d910 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x564a8912d698 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x564a8912d718 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x564a8912d790 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x564a8912d810 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x564a8912dc18 <line:1092:5, line:1093:45> line:1092:10 used range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x564a8912d9e0 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x564a8912da58 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x564a8912daf0 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x564a891301a8 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x564a891301a8
| `-ParmVarDecl 0x564a891302b8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x564a89130438 <col:7> col:7 implicit used constexpr IntArg 'void (IntArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564a89130548 <col:7> col:7 used 'IntArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x564a891a2ba0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x564a891a2b70 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x564a891a2b40 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x564a891a2b10 <col:7> 'IntArg' lvalue ParmVar 0x564a89130548 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x564a8912d5a0 'base' 'int'
| | `-ImplicitCastExpr 0x564a891a2c98 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x564a891a2c68 <col:7> 'int' xvalue .base 0x564a8912d5a0
| |     `-CXXStaticCastExpr 0x564a891a2c38 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x564a891a2c08 <col:7> 'IntArg' lvalue ParmVar 0x564a89130548 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x564a8912d608 'status' 'int'
| | `-ImplicitCastExpr 0x564a891a2d68 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x564a891a2d38 <col:7> 'int' xvalue .status 0x564a8912d608
| |     `-CXXStaticCastExpr 0x564a891a2d08 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x564a891a2cd8 <col:7> 'IntArg' lvalue ParmVar 0x564a89130548 '' 'IntArg &&'
| `-CompoundStmt 0x564a891a2dc0 <col:7>
`-CXXDestructorDecl 0x564a891a1080 <col:7> col:7 implicit ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a89134a90 <../dummy_inc/click/args.hh:1183:1, col:52> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x564a89134ce8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x564a891a0fa8 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x564a891a21a0 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x564a891a2180 <<invalid sloc>> 'int'
| `-CompoundStmt 0x564a891a2210 <col:19>
|-CXXConstructorDecl 0x564a891a1188 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<int> &)' inline default trivial noexcept-unevaluated 0x564a891a1188
| `-ParmVarDecl 0x564a891a1298 <col:19> col:19 'const DefaultArg<int> &'
|-CXXConstructorDecl 0x564a891a1338 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564a891a20c8 <col:19> col:19 used 'DefaultArg<int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x564a891a2dd0 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x564a891a2af0 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x564a891a2ac0 <col:19> 'DefaultArg<int>' xvalue static_cast<struct DefaultArg<int> &&> <NoOp>
| |       `-DeclRefExpr 0x564a891a2a90 <col:19> 'DefaultArg<int>' lvalue ParmVar 0x564a891a20c8 '' 'DefaultArg<int> &&'
| `-CompoundStmt 0x564a891a2e40 <col:19>
`-CXXDestructorDecl 0x564a891a2250 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a891b3718 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x564a891b3b20 prev 0x564a891b3718 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x564a891b3d10 <line:852:9, line:854:9> line:852:9 used SlotT 'void (String *)'
| |-ParmVarDecl 0x564a891b3c18 <col:15, col:18> col:18 used ptr 'String *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x564a891b4c60 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x564a891b3e90 '_ptr' 'String *'
| | `-ImplicitCastExpr 0x564a891b4c20 <line:853:20> 'String *' <LValueToRValue>
| |   `-DeclRefExpr 0x564a891b4be0 <col:20> 'String *' lvalue ParmVar 0x564a891b3c18 'ptr' 'String *'
| |-CXXCtorInitializer Field 0x564a891b3ef0 '_slot' 'String':'String'
| | `-CXXConstructExpr 0x564a891b4cc0 <line:852:9> 'String':'String' 'void ()'
| `-CompoundStmt 0x564a891235d0 <line:853:25, line:854:9>
|-CXXMethodDecl 0x564a891b3dd0 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x564a891063e0 Slot::store 'void ()' ]
| `-CompoundStmt 0x564a891b5388 <col:22, line:857:9>
|   `-CallExpr 0x564a891b5340 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x564a891b5328 <col:13> 'void (*)(String &, const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x564a891b52a8 <col:13> 'void (String &, const String &)' lvalue Function 0x564a891b5188 'assign_consume' 'void (String &, const String &)' (FunctionTemplate 0x564a88be3a28 'assign_consume')
|     |-UnaryOperator 0x564a891b4e58 <col:28, col:29> 'String':'String' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x564a891b4e40 <col:29> 'String *' <LValueToRValue>
|     |   `-MemberExpr 0x564a891b4e10 <col:29> 'String *' lvalue ->_ptr 0x564a891b3e90
|     |     `-CXXThisExpr 0x564a891b4e00 <col:29> 'Args::SlotT<String> *' implicit this
|     `-ImplicitCastExpr 0x564a891b5370 <col:35> 'const String':'const String' lvalue <NoOp>
|       `-MemberExpr 0x564a891b4e80 <col:35> 'String':'String' lvalue ->_slot 0x564a891b3ef0
|         `-CXXThisExpr 0x564a891b4e70 <col:35> 'Args::SlotT<String> *' implicit this
|-FieldDecl 0x564a891b3e90 <line:858:9, col:12> col:12 referenced _ptr 'String *'
|-FieldDecl 0x564a891b3ef0 <line:859:9, col:11> col:11 referenced _slot 'String':'String'
|-CXXConstructorDecl 0x564a891b3f68 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x564a891b3f68
| `-ParmVarDecl 0x564a891b4078 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXConstructorDecl 0x564a891b4118 <col:12> col:12 implicit SlotT 'void (Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x564a891b4118
| `-ParmVarDecl 0x564a891b4228 <col:12> col:12 'Args::SlotT<String> &&'
|-CXXMethodDecl 0x564a891b42c8 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x564a891b42c8
| `-ParmVarDecl 0x564a891b43d8 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXMethodDecl 0x564a891b4448 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x564a891b4448
| `-ParmVarDecl 0x564a891b4558 <col:12> col:12 'Args::SlotT<String> &&'
`-CXXDestructorDecl 0x564a891b45e0 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x564a891062e0 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x564a891b4d28 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564a89139b70 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564a89139c88 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x564a89139d18 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x564a89139f58 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x564a89139d50 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x564a89139dd0 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x564a89139e48 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x564a8913a170 <col:81> 'const ArgContext' lvalue Var 0x564a891237b0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x564a8913a0b0 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x564a8913a020 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x564a8913a2c8 <col:35, line:1261:5>
|   `-ReturnStmt 0x564a8913a2b8 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x564a8913a2a0 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x564a8913a270 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x564a8913a258 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x564a8913a230 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x564a8913a210 <col:16, col:24> 'String' (CXXTemporary 0x564a8913a210)
|               `-CXXConstructExpr 0x564a8913a1d8 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x564a8913a1c0 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x564a8913a1a0 <col:23> 'bool' lvalue ParmVar 0x564a8913a020 'x' 'bool'
|-CXXConstructorDecl 0x564a891bc9b8 <line:1257:7> col:7 implicit constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x564a891bca90 <col:7> col:7 implicit ~BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x564a891bcbc8 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x564a891bcbc8
| `-ParmVarDecl 0x564a891bccd8 <col:7> col:7 'const BoolArg &'
`-CXXConstructorDecl 0x564a891bcd78 <col:7> col:7 implicit used constexpr BoolArg 'void (BoolArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x564a891bce88 <col:7> col:7 'BoolArg &&'
  `-CompoundStmt 0x564a891bdae0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564a8913a308 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x564a8913a568 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x564a891bc8c8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x564a891bcef8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x564a891bcef8
| `-ParmVarDecl 0x564a891bd008 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x564a891bd0a8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564a891bd1b8 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x564a891bdaf0 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x564a891bdac0 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x564a891bda90 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x564a891bda60 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x564a891bd1b8 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x564a891bdb60 <col:19>
`-CXXDestructorDecl 0x564a891bd258 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.21 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.21 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
