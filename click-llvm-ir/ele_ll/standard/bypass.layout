
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddfebb28 prev 0x55b9ddfe32c8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9ddfebc20 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55b9ddfebcb0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55b9ddfebd28 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55b9ddfebde8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55b9ddfebeb0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55b9ddfec028 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55b9ddfebf60 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55b9ddfec0d0 <col:24>
| `-OptimizeNoneAttr 0x55b9ddfec128 <col:34>
|-CXXMethodDecl 0x55b9ddfec170 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55b9ddfec428 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55b9ddfec220 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55b9ddfec298 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55b9ddfec318 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55b9ddfec4e0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55b9ddfec518 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55b9ddfec580 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55b9ddfec608 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55b9ddfec928 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55b9ddfec6c0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55b9ddfec738 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55b9ddfec7b0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55b9ddfec830 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55b9ddfeca40 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55b9ddff43b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55b9ddff43b8
| `-ParmVarDecl 0x55b9ddff44c8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55b9ddff4568 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55b9ddff4568
| `-ParmVarDecl 0x55b9ddff4678 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55b9de1c7ee0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddd9d5f0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9ddd9d708 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55b9ddd9d798 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55b9ddd9d868 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55b9ddd9d950 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddd9db68 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b9ddd9da10 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9dd18 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55b9ddd9dc20 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b9ddd9de60 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55b9ddd9ddd0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b9ddd9dfa8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b9ddd9df18 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9e0f0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b9ddd9e060 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9e1b8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55b9ddd9e300 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55b9ddd9e270 <col:28> col:31 'int'
|-CXXMethodDecl 0x55b9ddd9e3c8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55b9ddd9e510 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55b9ddd9e480 <col:28> col:31 'int'
|-CXXMethodDecl 0x55b9ddd9e688 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55b9ddd9e5c8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9e7d0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55b9ddd9e740 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9e898 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55b9ddd9ea58 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddd9e948 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b9ddd9e9c0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9eca8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddd9eb18 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b9ddd9eb90 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9ddd9ed58 <col:86> "" ""
|-CXXMethodDecl 0x55b9ddd9efc8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddd9ee38 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55b9ddd9eeb0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9f178 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55b9ddd9f088 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55b9ddd9f328 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55b9ddd9f230 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55b9ddd9f5f8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddd9f3e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55b9ddd9f458 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b9ddd9f4d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9f8d8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddd9f6c0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55b9ddd9f738 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b9ddd9f7b0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9ddd9f990 <col:115> "" ""
|-AccessSpecDecl 0x55b9ddd9fa00 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55b9ddd9fa38 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddd9ff40 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55b9ddd9ff40
| `-ParmVarDecl 0x55b9ddda0048 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55b9ddda00e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55b9ddda00e8
| `-ParmVarDecl 0x55b9ddda01f8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55b9dddd5828 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b9ddfc8630 <col:7>
|-CXXConstructorDecl 0x55b9dddd5900 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55b9dddd5900
| `-ParmVarDecl 0x55b9dddd5a18 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55b9dddd5a88 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55b9dddd5a88
| `-ParmVarDecl 0x55b9dddd5b98 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55b9ddfcb030 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9ddf62330 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55b9ddf62508 prev 0x55b9ddf62330 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b9ddf62598 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b9ddf625c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9ddf64190 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55b9ddf64140 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55b9ddf62a70 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55b9ddf62970 'type'
|     `-TemplateSpecializationType 0x55b9ddf62900 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b9ddf627e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55b9ddf627c0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b9ddf627a0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55b9ddf628e0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55b9ddf62800 'char_array'
|-TypedefDecl 0x55b9ddf64248 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55b9ddf64210 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55b9ddf641f0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55b9ddf64190 'type'
|     `-ElaboratedType 0x55b9ddf64140 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55b9ddf62a70 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55b9ddf62970 'type'
|         `-TemplateSpecializationType 0x55b9ddf62900 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b9ddf627e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55b9ddf627c0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b9ddf627a0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55b9ddf628e0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55b9ddf62800 'char_array'
|-CXXMethodDecl 0x55b9ddf643c8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55b9ddf642d8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55b9ddf644b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b9ddf64598 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55b9ddf64868 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55b9ddf64770 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55b9ddf64aa8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55b9ddf64920 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9ddf64998 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b9ddf64c78 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55b9ddf64b68 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9ddf64be0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b9ddf64dd8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55b9ddf64ea8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55b9ddf650f8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55b9ddf64f68 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55b9ddf64fe0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b9ddf65358 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55b9ddf651c8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55b9ddf65240 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b9ddf65518 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55b9ddf65428 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b9ddf656d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55b9ddf655e0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b9ddf65790 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9ddf65840 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9ddf65a78 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55b9ddf658f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9ddf65968 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b9ddf65d18 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55b9ddf65c20 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55b9ddf65de0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55b9ddf65e30 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b9ddf65e80 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9ddf60878 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55b9ddf60f20 prev 0x55b9ddf60878 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9ddf622a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b9ddf62250 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55b9ddf62230 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55b9ddf620e0 'type'
|     `-SubstTemplateTypeParmType 0x55b9ddf61f00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9ddf61a50 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b9ddf61968 'sized_array_memory'
|-FieldDecl 0x55b9ddf65ed0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b9ddf65f20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9ddf65f58 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55b9ddf60fb0 'Element *' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-PointerType 0x55b9ddfd5070 'Element *'
|     `-RecordType 0x55b9ddfd4df0 'Element'
|       `-CXXRecord 0x55b9ddfdeb40 'Element'
|-TypedefDecl 0x55b9ddf66018 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55b9ddf65fe0 'Element *&'
|   `-SubstTemplateTypeParmType 0x55b9ddf60fb0 'Element *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9ddfd5070 'Element *'
|       `-RecordType 0x55b9ddfd4df0 'Element'
|         `-CXXRecord 0x55b9ddfdeb40 'Element'
|-TypedefDecl 0x55b9ddf660d8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55b9ddf660a0 'Element *const &'
|   `-QualType 0x55b9ddf60fb1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55b9ddf60fb0 'Element *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9ddfd5070 'Element *'
|         `-RecordType 0x55b9ddfd4df0 'Element'
|           `-CXXRecord 0x55b9ddfdeb40 'Element'
|-TypedefDecl 0x55b9ddf66198 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55b9ddf66160 'Element **'
|   `-SubstTemplateTypeParmType 0x55b9ddf60fb0 'Element *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9ddfd5070 'Element *'
|       `-RecordType 0x55b9ddfd4df0 'Element'
|         `-CXXRecord 0x55b9ddfdeb40 'Element'
|-TypedefDecl 0x55b9ddf66258 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55b9ddf66220 'Element *const *'
|   `-QualType 0x55b9ddf60fb1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55b9ddf60fb0 'Element *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9ddfd5070 'Element *'
|         `-RecordType 0x55b9ddfd4df0 'Element'
|           `-CXXRecord 0x55b9ddfdeb40 'Element'
|-TypedefDecl 0x55b9de01ba60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55b9de01ba10 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55b9de01b9f0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55b9de01b980 'type'
|     `-SubstTemplateTypeParmType 0x55b9de01b740 'Element *' sugar
|       |-TemplateTypeParmType 0x55b9ddd4dc20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd4dbd0 'T'
|       `-PointerType 0x55b9ddfd5070 'Element *'
|         `-RecordType 0x55b9ddfd4df0 'Element'
|           `-CXXRecord 0x55b9ddfdeb40 'Element'
|-TypedefDecl 0x55b9de01bac8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55b9ddf660a0 'Element *const &'
|   `-QualType 0x55b9ddf60fb1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55b9ddf60fb0 'Element *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9ddfd5070 'Element *'
|         `-RecordType 0x55b9ddfd4df0 'Element'
|           `-CXXRecord 0x55b9ddfdeb40 'Element'
|-TypedefDecl 0x55b9de01bb20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de01bb88 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55b9ddf66160 'Element **'
|   `-SubstTemplateTypeParmType 0x55b9ddf60fb0 'Element *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9ddfd5070 'Element *'
|       `-RecordType 0x55b9ddfd4df0 'Element'
|         `-CXXRecord 0x55b9ddfdeb40 'Element'
|-TypedefDecl 0x55b9de01bbf0 <line:131:5, col:22> col:22 referenced const_iterator 'Element *const *'
| `-PointerType 0x55b9ddf66220 'Element *const *'
|   `-QualType 0x55b9ddf60fb1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55b9ddf60fb0 'Element *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9ddfd5070 'Element *'
|         `-RecordType 0x55b9ddfd4df0 'Element'
|           `-CXXRecord 0x55b9ddfdeb40 'Element'
|-EnumDecl 0x55b9de01bc48 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de01bd40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de01bd20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de01bdc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de01c058 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de01be80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de01bf20 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55b9de01c2e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55b9de01c1d0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55b9de01c5a8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55b9de01c490 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55b9de01c8f0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55b9de01c7d0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55b9de01cc00 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55b9de01cae0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55b9de01cef0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de01cd38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de01cdb0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55b9de01d048 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55b9de01d128 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de01d180 <col:30> Inherited
|-CXXMethodDecl 0x55b9de01d1c8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55b9de01d278 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de01d2d0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de01d398 <line:152:5, col:63> col:55 used begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de01d448 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de01d4a0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de01d4e8 <line:153:5, col:61> col:55 used end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de01d598 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de01d5f0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de01d638 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de01d6e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de01d740 <col:30> Inherited
|-CXXMethodDecl 0x55b9de01d788 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de01d838 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de01d890 <col:30> Inherited
|-CXXMethodDecl 0x55b9de01d8b8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de01d968 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de01da18 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de01dbd8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de01dac8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de01db40 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55b9de01dd28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de01dc98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de01ded8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55b9de01dde0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de01df90 <col:20>
| `-OptimizeNoneAttr 0x55b9de01dfe8 <col:30>
|-CXXMethodDecl 0x55b9de01e108 <line:164:5, col:73> col:49 used operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de01e010 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de01e1c0 <col:20>
| `-OptimizeNoneAttr 0x55b9de01e218 <col:30>
|-CXXMethodDecl 0x55b9de01e2d0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de01e240 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de01e418 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de01e388 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de01e548 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55b9de01e678 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55b9de01e748 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55b9de01e818 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55b9de01e958 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de01e8c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de01eaa0 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de01ea10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de01ebe8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de01eb58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de01eca0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de01eda0 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de01ed10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de01ee58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de01ef18 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55b9de01f018 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55b9de01f1c8 <line:180:5, col:48> col:17 used push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de01f0d8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55b9de01f9b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de01f280 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55b9de01f918 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55b9de01f818 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55b9de01fa98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de01fbe8 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de01fb58 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55b9de01fca0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de01fee8 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de01fd60 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55b9de01fdd8 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55b9de0200a8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55b9de01ffb8 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55b9de0202f8 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55b9de020170 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55b9de0201e8 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55b9de0203b8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55b9de020618 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55b9de020520 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55b9de0206e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55b9de027d08 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9dddb19d0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b9dddb1ae8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55b9dddb1b88 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55b9dddb1be8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55b9dddb1c48 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55b9dddb1cf8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9dddb2000 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9dddb2118 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55b9dddb21c0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55b9dddb2228 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55b9dddb22b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55b9dddb8350 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b9dddb8788 <col:12>
|-CXXConstructorDecl 0x55b9dddb8458 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9dddb8568 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b9dddb21c0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55b9dddbad10 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55b9dddbace0 <col:12> 'const char *const' lvalue .data 0x55b9dddb21c0
| |     `-DeclRefExpr 0x55b9dddbacc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddb8568 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b9dddb2228 'length' 'int'
| | `-ImplicitCastExpr 0x55b9dddbada0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55b9dddbad70 <col:12> 'const int' lvalue .length 0x55b9dddb2228
| |     `-DeclRefExpr 0x55b9dddbad50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddb8568 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b9dddb22b8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55b9dddbae30 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55b9dddbae00 <col:12> 'String::memo_t *const' lvalue .memo 0x55b9dddb22b8
| |     `-DeclRefExpr 0x55b9dddbade0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddb8568 '' 'const String::rep_t &'
| `-CompoundStmt 0x55b9dddbae88 <col:12>
|-CXXConstructorDecl 0x55b9dddb8608 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b9dddb8608
| `-ParmVarDecl 0x55b9dddb8718 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55b9dddbdc70 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b9dddc9688 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9dddc9798 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55b9dddc9cb0 <col:12>
|   |-BinaryOperator 0x55b9dddc9ac8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55b9dddc9a80 <col:12> 'const char *' lvalue ->data 0x55b9dddb21c0
|   | | `-CXXThisExpr 0x55b9dddc9a70 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b9dddc9ab0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55b9dddc9a40 <col:12> 'const char *const' lvalue .data 0x55b9dddb21c0
|   |     `-DeclRefExpr 0x55b9dddc9a20 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddc9798 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55b9dddc9b90 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55b9dddc9b48 <col:12> 'int' lvalue ->length 0x55b9dddb2228
|   | | `-CXXThisExpr 0x55b9dddc9b38 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b9dddc9b78 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55b9dddc9b08 <col:12> 'const int' lvalue .length 0x55b9dddb2228
|   |     `-DeclRefExpr 0x55b9dddc9ae8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddc9798 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55b9dddc9c58 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55b9dddc9c10 <col:12> 'String::memo_t *' lvalue ->memo 0x55b9dddb22b8
|   | | `-CXXThisExpr 0x55b9dddc9c00 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b9dddc9c40 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55b9dddc9bd0 <col:12> 'String::memo_t *const' lvalue .memo 0x55b9dddb22b8
|   |     `-DeclRefExpr 0x55b9dddc9bb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddc9798 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55b9dddc9ca0 <col:12>
|     `-UnaryOperator 0x55b9dddc9c88 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9dddc9c78 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55b9dddc9808 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b9dddc9808
  `-ParmVarDecl 0x55b9dddc9918 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddda8f40 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9ddda9058 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55b9ddda90e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55b9ddda9128 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55b9dda79fd0 'const char *'
|   `-QualType 0x55b9dda79521 'const char' const
|     `-BuiltinType 0x55b9dda79520 'char'
|-TypedefDecl 0x55b9ddda91b0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55b9ddda9180 'String::const_iterator' sugar
|   |-Typedef 0x55b9ddda9128 'const_iterator'
|   `-PointerType 0x55b9dda79fd0 'const char *'
|     `-QualType 0x55b9dda79521 'const char' const
|       `-BuiltinType 0x55b9dda79520 'char'
|-TypedefDecl 0x55b9ddda9320 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55b9ddda9290 'int (String::*)() const'
|   |-RecordType 0x55b9ddda8fd0 'String'
|   | `-CXXRecord 0x55b9ddda8f40 'String'
|   `-ParenType 0x55b9ddda9230 'int () const' sugar
|     `-FunctionProtoType 0x55b9ddd7ddd0 'int () const' const cdecl
|       `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9ddda9388 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55b9ddbd29b0 'int64_t' sugar
|   |-Typedef 0x55b9ddae2390 'int64_t'
|   `-TypedefType 0x55b9ddabb630 '__int64_t' sugar
|     |-Typedef 0x55b9ddabb208 '__int64_t'
|     `-BuiltinType 0x55b9dda795a0 'long'
|-TypedefDecl 0x55b9ddda93f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55b9ddbd28d0 'uint64_t' sugar
|   |-Typedef 0x55b9ddae2530 'uint64_t'
|   `-TypedefType 0x55b9ddabb6c0 '__uint64_t' sugar
|     |-Typedef 0x55b9ddabb278 '__uint64_t'
|     `-BuiltinType 0x55b9dda79640 'unsigned long'
|-TypedefDecl 0x55b9ddda9480 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55b9ddda9450 'String::intmax_t' sugar
|   |-Typedef 0x55b9ddda9388 'intmax_t'
|   `-TypedefType 0x55b9ddbd29b0 'int64_t' sugar
|     |-Typedef 0x55b9ddae2390 'int64_t'
|     `-TypedefType 0x55b9ddabb630 '__int64_t' sugar
|       |-Typedef 0x55b9ddabb208 '__int64_t'
|       `-BuiltinType 0x55b9dda795a0 'long'
|-TypedefDecl 0x55b9ddda9510 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55b9ddda94e0 'String::uintmax_t' sugar
|   |-Typedef 0x55b9ddda93f0 'uintmax_t'
|   `-TypedefType 0x55b9ddbd28d0 'uint64_t' sugar
|     |-Typedef 0x55b9ddae2530 'uint64_t'
|     `-TypedefType 0x55b9ddabb6c0 '__uint64_t' sugar
|       |-Typedef 0x55b9ddabb278 '__uint64_t'
|       `-BuiltinType 0x55b9dda79640 'unsigned long'
|-CXXConstructorDecl 0x55b9ddda95d0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55b9ddda9778 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55b9ddda96b8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55b9ddda9928 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55b9ddda9868 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55b9ddda9a80 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55b9ddda99f0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55b9ddda9c98 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b9ddda9b48 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55b9ddda9bc8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55b9ddda9eb8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55b9ddda9d68 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55b9ddda9de8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55b9dddaa0d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b9ddda9f88 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55b9dddaa008 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55b9dddaa2f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55b9dddaa1a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55b9dddaa228 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55b9dddaa488 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55b9dddaa3c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55b9dddaa608 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55b9dddaa548 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55b9dddaa798 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55b9dddaa6d0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55b9dddaa8f0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55b9dddaa860 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55b9dddaaa48 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55b9dddaa9b8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55b9dddaaba0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55b9dddaab10 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55b9dddaad28 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55b9dddaac68 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55b9dddaaeb8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55b9dddaadf0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55b9dddab048 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55b9dddaaf80 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55b9dddab1d8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55b9dddab110 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55b9dddab2d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55b9dddab3f8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55b9dddab578 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55b9dddab4b0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55b9dddab6c8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55b9dddab638 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55b9dddab780 <col:63> "" ""
|-CXXMethodDecl 0x55b9dddab8c8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55b9dddab808 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55b9dddabad8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55b9dddab988 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55b9dddaba08 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55b9dddabcf8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55b9dddabba0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55b9dddabc20 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55b9dddabfd8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55b9dddabdb8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55b9dddabe38 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55b9dddb7e20 <col:55> 'int' 10
| `-ParmVarDecl 0x55b9dddabeb0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9dddb7e40 <col:76> 'bool' true
|-CXXMethodDecl 0x55b9dddac2b8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55b9dddac0a0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55b9dddac120 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55b9dddb7e50 <col:56> 'int' 10
| `-ParmVarDecl 0x55b9dddac198 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9dddb7e70 <col:77> 'bool' true
|-CXXMethodDecl 0x55b9dddac3c0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55b9dddac488 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55b9dddac550 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55b9dddac5f0 <col:20>
| `-OptimizeNoneAttr 0x55b9dddac648 <col:30>
|-CXXConversionDecl 0x55b9dddac738 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b9dddac808 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55b9dddac8c8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55b9dddac9b8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55b9dddaca78 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55b9dddacbf8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55b9dddacb30 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55b9dddacd48 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55b9dddaccb8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55b9dddace38 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55b9dddacef8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55b9dddad148 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55b9dddacfb0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55b9dddad030 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55b9dddad3a8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55b9dddad210 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55b9dddad290 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55b9dddad478 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9dddad688 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55b9dddad530 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55b9dddad5b0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55b9dddad8a8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55b9dddad750 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55b9dddad7d0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55b9dddada38 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55b9dddad970 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55b9dddadb28 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55b9dddadc98 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55b9dddadbd8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b9dddadea8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55b9dddadd58 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b9dddaddd8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b9dddae0c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55b9dddadf68 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55b9dddadfe0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55b9dddae250 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55b9dddae180 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b9dddae470 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55b9dddae310 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55b9dddae390 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55b9dddae5c0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55b9dddae530 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55b9dddae798 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55b9dddae680 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b9dddae700 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55b9dddae8e8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55b9dddae858 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55b9dddaeb00 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55b9dddae9a0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55b9dddaea20 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55b9dddb7e80 <col:39> 'int' 0
|-CXXMethodDecl 0x55b9dddaed20 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55b9dddaebc0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55b9dddaec40 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55b9dddb7ea0 <col:48> 'int' 0
|-CXXMethodDecl 0x55b9dddaef00 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55b9dddaede0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55b9dddaee60 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55b9dddb7ec0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55b9dddaefd0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55b9dddaf090 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55b9dddaf150 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55b9dddaf210 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55b9dddaf2d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55b9dddaf478 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55b9dddaf380 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55b9dddaf5f8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55b9dddaf530 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55b9dddaf7d0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55b9dddaf6b8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55b9dddaf948 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55b9dddaf888 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55b9dddafa90 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55b9dddafa00 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b9dddafbe0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55b9dddafb50 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55b9dddafdb8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b9dddafca0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b9dddafd20 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b9dddaff98 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b9dddafe80 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55b9dddaff00 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55b9dddb00e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55b9dddb0058 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55b9dddb02f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55b9dddb01a8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55b9dddb0228 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55b9dddb0458 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55b9dddb03c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55b9dddb05b0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55b9dddb0518 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55b9dddb0658 <col:57> "" ""
|-CXXMethodDecl 0x55b9dddb0768 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55b9dddb06d8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55b9dddb08b8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55b9dddb0828 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55b9dddb0a38 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55b9dddb0970 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55b9dddb0b00 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55b9dddb0bc0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55b9dddb0c80 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55b9dddb0d20 <col:49> "" ""
|-CXXMethodDecl 0x55b9dddb0db0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55b9dddb0e70 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55b9dddb0f60 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55b9dddb1028 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55b9dddb10e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55b9dddb11a8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55b9dddb12a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55b9dddb1368 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55b9dddb1430 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55b9dddb1608 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55b9dddb14e8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55b9dddb1568 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55b9dddb1830 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55b9dddb16d0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55b9dddb1750 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55b9dddb1940 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55b9dddb19a8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55b9dddb19d0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b9dddb1ae8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55b9dddb1b88 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55b9dddb1be8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55b9dddb1c48 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55b9dddb1cf8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55b9dddb1d60 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55b9dddb1f98 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55b9dddb1fe8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9dddb1f78 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55b9dddb1e88 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55b9dddb1e30 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55b9dddb1e70 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55b9dddb1e50 <col:32> 'int' 8
|-CXXRecordDecl 0x55b9dddb2000 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b9dddb2118 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55b9dddb21c0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55b9dddb2228 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55b9dddb22b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55b9dddb8350 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b9dddb8788 <col:12>
| |-CXXConstructorDecl 0x55b9dddb8458 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b9dddb8568 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b9dddb21c0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55b9dddbad10 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55b9dddbace0 <col:12> 'const char *const' lvalue .data 0x55b9dddb21c0
| | |     `-DeclRefExpr 0x55b9dddbacc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddb8568 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b9dddb2228 'length' 'int'
| | | `-ImplicitCastExpr 0x55b9dddbada0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55b9dddbad70 <col:12> 'const int' lvalue .length 0x55b9dddb2228
| | |     `-DeclRefExpr 0x55b9dddbad50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddb8568 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b9dddb22b8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55b9dddbae30 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55b9dddbae00 <col:12> 'String::memo_t *const' lvalue .memo 0x55b9dddb22b8
| | |     `-DeclRefExpr 0x55b9dddbade0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddb8568 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55b9dddbae88 <col:12>
| |-CXXConstructorDecl 0x55b9dddb8608 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b9dddb8608
| | `-ParmVarDecl 0x55b9dddb8718 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55b9dddbdc70 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b9dddc9688 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b9dddc9798 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55b9dddc9cb0 <col:12>
| |   |-BinaryOperator 0x55b9dddc9ac8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55b9dddc9a80 <col:12> 'const char *' lvalue ->data 0x55b9dddb21c0
| |   | | `-CXXThisExpr 0x55b9dddc9a70 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b9dddc9ab0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55b9dddc9a40 <col:12> 'const char *const' lvalue .data 0x55b9dddb21c0
| |   |     `-DeclRefExpr 0x55b9dddc9a20 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddc9798 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55b9dddc9b90 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55b9dddc9b48 <col:12> 'int' lvalue ->length 0x55b9dddb2228
| |   | | `-CXXThisExpr 0x55b9dddc9b38 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b9dddc9b78 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55b9dddc9b08 <col:12> 'const int' lvalue .length 0x55b9dddb2228
| |   |     `-DeclRefExpr 0x55b9dddc9ae8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddc9798 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55b9dddc9c58 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55b9dddc9c10 <col:12> 'String::memo_t *' lvalue ->memo 0x55b9dddb22b8
| |   | | `-CXXThisExpr 0x55b9dddc9c00 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b9dddc9c40 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55b9dddc9bd0 <col:12> 'String::memo_t *const' lvalue .memo 0x55b9dddb22b8
| |   |     `-DeclRefExpr 0x55b9dddc9bb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b9dddc9798 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55b9dddc9ca0 <col:12>
| |     `-UnaryOperator 0x55b9dddc9c88 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b9dddc9c78 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55b9dddc9808 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b9dddc9808
|   `-ParmVarDecl 0x55b9dddc9918 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55b9dddb2330 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55b9dddb2578 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55b9dddb2398 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55b9dddb2418 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55b9dddb2490 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55b9dddb8310 <col:79, line:261:5>
|   |-BinaryOperator 0x55b9dddb7f88 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55b9dddb7f20 <col:2, col:5> 'const char *' lvalue .data 0x55b9dddb21c0
|   | | `-MemberExpr 0x55b9dddb7ef0 <col:2> 'String::rep_t' lvalue ->_r 0x55b9dddb2330
|   | |   `-CXXThisExpr 0x55b9dddb7ee0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55b9dddb7f70 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b9dddb7f50 <col:12> 'const char *' lvalue ParmVar 0x55b9dddb2398 'data' 'const char *'
|   |-BinaryOperator 0x55b9dddb8050 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55b9dddb7fe8 <col:2, col:5> 'int' lvalue .length 0x55b9dddb2228
|   | | `-MemberExpr 0x55b9dddb7fb8 <col:2> 'String::rep_t' lvalue ->_r 0x55b9dddb2330
|   | |   `-CXXThisExpr 0x55b9dddb7fa8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55b9dddb8038 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b9dddb8018 <col:14> 'int' lvalue ParmVar 0x55b9dddb2418 'length' 'int'
|   `-IfStmt 0x55b9dddb82f8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55b9dddb8170 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b9dddb8158 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55b9dddb8138 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55b9dddb8118 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55b9dddb80b0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55b9dddb22b8
|     |       | `-MemberExpr 0x55b9dddb8080 <col:7> 'String::rep_t' lvalue ->_r 0x55b9dddb2330
|     |       |   `-CXXThisExpr 0x55b9dddb8070 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55b9dddb8100 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b9dddb80e0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55b9dddb2490 'memo' 'String::memo_t *'
|     `-CallExpr 0x55b9dddb82d0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55b9dddb82b8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b9dddb81c0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55b9ddda0fa8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55b9dddb8228 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b9dddb1b88
|         `-ImplicitCastExpr 0x55b9dddb8210 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55b9dddb81f0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55b9dddb2490 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55b9dddb2828 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55b9dddb2648 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55b9dddb26c8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55b9dddb2740 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55b9dddb2330 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55b9dddb8798 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b9dddb8928 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55b9dddb8890 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55b9dddb8800 <col:2> '<bound member function type>' ->assign_memo 0x55b9dddb2578
|     | `-ImplicitCastExpr 0x55b9dddb88c8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55b9dddb87f0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55b9dddb88e0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9dddb8830 <col:14> 'const char *' lvalue ParmVar 0x55b9dddb2648 'data' 'const char *'
|     |-ImplicitCastExpr 0x55b9dddb88f8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9dddb8850 <col:20> 'int' lvalue ParmVar 0x55b9dddb26c8 'length' 'int'
|     `-ImplicitCastExpr 0x55b9dddb8910 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55b9dddb8870 <col:28> 'String::memo_t *' lvalue ParmVar 0x55b9dddb2740 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55b9dddb29b8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55b9dddb28f8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55b9dddb8b80 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55b9dddb8b00 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55b9dddb8950 <col:2> '<bound member function type>' ->assign_memo 0x55b9dddb2578
|     | `-CXXThisExpr 0x55b9dddb8940 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55b9dddb8b38 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55b9dddb89d0 <col:14, col:19> 'const char *' lvalue .data 0x55b9dddb21c0
|     |   `-MemberExpr 0x55b9dddb89a0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55b9dddb2330
|     |     `-DeclRefExpr 0x55b9dddb8980 <col:14> 'const String' lvalue ParmVar 0x55b9dddb28f8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55b9dddb8b50 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55b9dddb8a50 <col:25, col:30> 'int' lvalue .length 0x55b9dddb2228
|     |   `-MemberExpr 0x55b9dddb8a20 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55b9dddb2330
|     |     `-DeclRefExpr 0x55b9dddb8a00 <col:25> 'const String' lvalue ParmVar 0x55b9dddb28f8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55b9dddb8b68 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55b9dddb8ad0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55b9dddb22b8
|         `-MemberExpr 0x55b9dddb8aa0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55b9dddb2330
|           `-DeclRefExpr 0x55b9dddb8a80 <col:38> 'const String' lvalue ParmVar 0x55b9dddb28f8 'x' 'const String &'
|-CXXMethodDecl 0x55b9dddb2a80 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55b9dddb9540 <col:31, line:278:5>
|   `-IfStmt 0x55b9dddb9528 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55b9dddb8c20 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b9dddb8c08 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55b9dddb8bd8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55b9dddb22b8
|     |     `-MemberExpr 0x55b9dddb8ba8 <col:6> 'String::rep_t' lvalue ->_r 0x55b9dddb2330
|     |       `-CXXThisExpr 0x55b9dddb8b98 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55b9dddb9500 <col:15, line:277:2>
|       |-ParenExpr 0x55b9dddb90d0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55b9dddb90a0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55b9dddb8d30 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55b9dddb8d18 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55b9dddb8d00 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55b9dddb8cc0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b9dddb1b88
|       |   |       `-ImplicitCastExpr 0x55b9dddb8ca8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55b9dddb8c78 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55b9dddb22b8
|       |   |           `-MemberExpr 0x55b9dddb8c48 <col:27> 'String::rep_t' lvalue ->_r 0x55b9dddb2330
|       |   |             `-CXXThisExpr 0x55b9dddb8c38 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55b9dddb8d90 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55b9dddb8d70 <col:54> 'int' 0
|       |   `-CallExpr 0x55b9dddb9000 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55b9dddb8fe8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55b9dddb8f68 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55b9dddb9040 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55b9dddb8e78 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55b9dddb9058 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55b9dddb8ea8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55b9dddb9070 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55b9dddb8ee0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55b9dddb9088 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55b9dddb8f50 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55b9dddb8f38 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55b9dddb8f00 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55b9dddb9420 <line:274:6, line:275:22>
|       | |-CallExpr 0x55b9dddb92e0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55b9dddb92c8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55b9dddb9240 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55b9ddda23f0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55b9dddb9210 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b9dddb1b88
|       | |   `-ImplicitCastExpr 0x55b9dddb91f8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55b9dddb91c8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55b9dddb22b8
|       | |       `-MemberExpr 0x55b9dddb9198 <col:40> 'String::rep_t' lvalue ->_r 0x55b9dddb2330
|       | |         `-CXXThisExpr 0x55b9dddb9188 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55b9dddb93e0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55b9dddb93c8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55b9dddb9308 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55b9dddb7260 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55b9dddb9408 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55b9dddb9368 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55b9dddb22b8
|       |       `-MemberExpr 0x55b9dddb9338 <col:15> 'String::rep_t' lvalue ->_r 0x55b9dddb2330
|       |         `-CXXThisExpr 0x55b9dddb9328 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55b9dddb94e0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55b9dddb9478 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55b9dddb22b8
|         | `-MemberExpr 0x55b9dddb9448 <col:6> 'String::rep_t' lvalue ->_r 0x55b9dddb2330
|         |   `-CXXThisExpr 0x55b9dddb9438 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55b9dddb94c8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55b9dddb94a8 <col:16> 'int' 0
|-CXXMethodDecl 0x55b9dddb2d18 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55b9dddb2b38 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55b9dddb2bb8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55b9dddb2c30 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55b9dddb2df0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55b9dddb3040 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55b9dddb2ea8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55b9dddb2f28 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55b9dddb2fa0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55b9dddb3228 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55b9dddb3110 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55b9dddb3190 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55b9dddb3328 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55b9dddb9618 <col:41, line:286:5>
|   `-ReturnStmt 0x55b9dddb9608 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55b9dddb95d8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55b9dddb95a0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55b9dddb9588 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55b9dddb9568 <col:46> 'int' 1
|-CXXMethodDecl 0x55b9dddb35c8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55b9dddb33e0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55b9dddb3460 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55b9dddb34e0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55b9dddb7260 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55b9dddb3690 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55b9dddb7330 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55b9dddb7500 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55b9dddb73e8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b9dddb7468 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55b9dddb75c0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55b9dddb7688 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55b9dddb7788 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55b9dddb7800 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55b9dddb7878 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55b9dddb78e0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55b9dddb79e0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55b9dddb7a30 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9dddb79c0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55b9dddb79a0 <col:22> 'int' 14
|-CXXMethodDecl 0x55b9dddb7c48 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55b9dddb7a60 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55b9dddb7ae0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55b9dddb7b60 <col:43> col:46 'int'
|-FriendDecl 0x55b9dddb7d50 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55b9dddb7de0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de0de390 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55b9de0de568 prev 0x55b9de0de390 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b9de0de5f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b9de0de620 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0dff80 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55b9de0dff30 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55b9de0dff10 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55b9de0de838 'type'
|     `-SubstTemplateTypeParmType 0x55b9de0de800 'String' sugar
|       |-TemplateTypeParmType 0x55b9ddd6d7f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd6d7a0 'T'
|       `-RecordType 0x55b9ddda8fd0 'String'
|         `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e0038 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55b9de0e0000 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55b9de0dffe0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55b9de0dff80 'type'
|     `-ElaboratedType 0x55b9de0dff30 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55b9de0dff10 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55b9de0de838 'type'
|         `-SubstTemplateTypeParmType 0x55b9de0de800 'String' sugar
|           |-TemplateTypeParmType 0x55b9ddd6d7f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b9ddd6d7a0 'T'
|           `-RecordType 0x55b9ddda8fd0 'String'
|             `-CXXRecord 0x55b9ddda8f40 'String'
|-CXXMethodDecl 0x55b9de0e01b8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55b9de0e00c8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55b9de0e02a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b9de0e0388 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b9de0e0388
|-CXXMethodDecl 0x55b9de0e0658 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55b9de0e0560 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55b9de0e0898 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b9de0e0710 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0e0788 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b9de0e0a68 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b9de0e0958 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0e09d0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b9de0e0bc8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55b9de0e0c98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55b9de0e0ee8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b9de0e0d58 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55b9de0e0dd0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b9de0e1148 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55b9de0e0fb8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55b9de0e1030 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b9de0e1308 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55b9de0e1218 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b9de0e14c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55b9de0e13d0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b9de0e1580 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de0e1630 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de0e1868 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b9de0e16e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0e1758 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b9de0e1b08 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55b9de0e1a10 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55b9de0e1bd0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55b9de0e1c20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b9de0e1c70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9ddfe1780 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55b9de0dd138 prev 0x55b9ddfe1780 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de0de300 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55b9de0de2b0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55b9de0de290 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55b9de0de140 'type'
|     `-SubstTemplateTypeParmType 0x55b9de0ddfd0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55b9ddd435a0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55b9ddd43548 'F'
|       `-RecordType 0x55b9de0ddc30 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55b9de0ddb50 'typed_array_memory'
|-FieldDecl 0x55b9de0e1cc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55b9de0e1d10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de0e1d48 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55b9de0dd1d0 'String' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-RecordType 0x55b9ddda8fd0 'String'
|     `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e1dd8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55b9de0e1da0 'String &'
|   `-SubstTemplateTypeParmType 0x55b9de0dd1d0 'String' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9ddda8fd0 'String'
|       `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e1e68 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55b9de0e1e30 'const String &'
|   `-QualType 0x55b9de0dd1d1 'const String' const
|     `-SubstTemplateTypeParmType 0x55b9de0dd1d0 'String' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9ddda8fd0 'String'
|         `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e1ef8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55b9de0e1ec0 'String *'
|   `-SubstTemplateTypeParmType 0x55b9de0dd1d0 'String' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9ddda8fd0 'String'
|       `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e1f88 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55b9de0e1f50 'const String *'
|   `-QualType 0x55b9de0dd1d1 'const String' const
|     `-SubstTemplateTypeParmType 0x55b9de0dd1d0 'String' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9ddda8fd0 'String'
|         `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e2be0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55b9de0e2b90 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55b9de0e2b70 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55b9de0e2aa8 'type'
|     `-LValueReferenceType 0x55b9de0e2a70 'const String &'
|       `-QualType 0x55b9de0e2811 'const String' const
|         `-SubstTemplateTypeParmType 0x55b9de0e2810 'String' sugar
|           |-TemplateTypeParmType 0x55b9ddd4d4f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b9ddd4d498 'T'
|           `-RecordType 0x55b9ddda8fd0 'String'
|             `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e2c48 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55b9de0e1e30 'const String &'
|   `-QualType 0x55b9de0dd1d1 'const String' const
|     `-SubstTemplateTypeParmType 0x55b9de0dd1d0 'String' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9ddda8fd0 'String'
|         `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e2ca0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0e2d08 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55b9de0e1ec0 'String *'
|   `-SubstTemplateTypeParmType 0x55b9de0dd1d0 'String' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9ddda8fd0 'String'
|       `-CXXRecord 0x55b9ddda8f40 'String'
|-TypedefDecl 0x55b9de0e2d70 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55b9de0e1f50 'const String *'
|   `-QualType 0x55b9de0dd1d1 'const String' const
|     `-SubstTemplateTypeParmType 0x55b9de0dd1d0 'String' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9ddda8fd0 'String'
|         `-CXXRecord 0x55b9ddda8f40 'String'
|-EnumDecl 0x55b9de0e2dc8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de0e2ec0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de0e2ea0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de0e2f48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de0e6788 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0e3000 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0e30a0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55b9de0e6a48 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55b9de0e6930 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55b9de0e6d08 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55b9de0e6bf0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55b9de0e7020 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55b9de0e6f00 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55b9de0e7330 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55b9de0e7210 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55b9de0e7620 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0e7468 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0e74e0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b9de0e7748 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55b9de0e7828 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0e7880 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0e78c8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55b9de0e7978 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0e79d0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0e7a98 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0e7b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0e7ba0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0e7be8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0e7c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0e7cf0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0e7d38 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0e7de8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0e7e40 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0e7e88 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0e7f38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0e7f90 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0e7fb8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0e8068 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0e8118 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de0e82d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0e81c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0e8240 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b9de0e8428 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0e8398 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0e85d8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55b9de0e84e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0e8690 <col:20>
| `-OptimizeNoneAttr 0x55b9de0e86e8 <col:30>
|-CXXMethodDecl 0x55b9de0e87d8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de0e8710 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0e8890 <col:20>
| `-OptimizeNoneAttr 0x55b9de0e88e8 <col:30>
|-CXXMethodDecl 0x55b9de0e89a0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0e8910 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0e8ae8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0e8a58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0e8c18 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55b9de0e8d18 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55b9de0e8de8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55b9de0e8eb8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55b9de0e8ff8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0e8f68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0e9140 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0e90b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0e9288 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de0e91f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0e9340 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de0e9440 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de0e93b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0e94f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de0e95b8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55b9de0e96b8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55b9de0e9838 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0e9778 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55b9de0e9fc8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de0e98f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55b9de0e9f28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55b9de0e9e28 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55b9de0ea0a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de0ea1f8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0ea168 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b9de0ea2b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de0ea4f8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0ea370 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55b9de0ea3e8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b9de0ea688 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55b9de0ea5c8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55b9de0ea898 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55b9de0ea750 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55b9de0ea7c8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55b9de0ea958 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55b9de0eabb8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55b9de0eaac0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55b9de0eac88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de0eac88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de02c3c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55b9de02c598 prev 0x55b9de02c3c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b9de02c628 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b9de02c650 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de02e220 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55b9de02e1d0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55b9de02cb00 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55b9de02ca00 'type'
|     `-TemplateSpecializationType 0x55b9de02c990 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b9de02c870 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55b9de02c850 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b9de02c830 <col:24> 'unsigned long' 4
|       `-RecordType 0x55b9de02c970 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55b9de02c890 'char_array'
|-TypedefDecl 0x55b9de02e2d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55b9de02e2a0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55b9de02e280 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55b9de02e220 'type'
|     `-ElaboratedType 0x55b9de02e1d0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55b9de02cb00 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55b9de02ca00 'type'
|         `-TemplateSpecializationType 0x55b9de02c990 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b9de02c870 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55b9de02c850 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b9de02c830 <col:24> 'unsigned long' 4
|           `-RecordType 0x55b9de02c970 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55b9de02c890 'char_array'
|-CXXMethodDecl 0x55b9de02e458 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55b9de02e368 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55b9de02e548 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b9de02e628 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b9de02e628
|-CXXMethodDecl 0x55b9de02e8f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55b9de02e800 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55b9de02eb38 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55b9de02e9b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de02ea28 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b9de02ed08 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55b9de02ebf8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de02ec70 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b9de02ee68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55b9de02ef38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55b9de02f188 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55b9de02eff8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55b9de02f070 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b9de02f3e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55b9de02f258 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55b9de02f2d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b9de02f5a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55b9de02f4b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b9de02f768 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55b9de02f670 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b9de02f820 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de02f8d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de033b68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55b9de02f980 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de033a50 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b9de033e08 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55b9de033d10 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55b9de033ed0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55b9de033f20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b9de033f70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de0eaed0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55b9de0eb0d8 prev 0x55b9de0eaed0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de0ec0f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55b9de0ec0a0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55b9de0ec080 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55b9de0ebf30 'type'
|     `-SubstTemplateTypeParmType 0x55b9de02bf90 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9de02bae0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55b9de02b9f8 'sized_array_memory'
|-FieldDecl 0x55b9de0ec1f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55b9de0ec240 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de0ec278 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55b9de0eb170 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-BuiltinType 0x55b9dda79620 'unsigned int'
|-TypedefDecl 0x55b9de0ec308 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55b9de0ec2d0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55b9de0eb170 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-BuiltinType 0x55b9dda79620 'unsigned int'
|-TypedefDecl 0x55b9de0ec3c8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55b9de0ec390 'const unsigned int &'
|   `-QualType 0x55b9de0eb171 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55b9de0eb170 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-BuiltinType 0x55b9dda79620 'unsigned int'
|-TypedefDecl 0x55b9de0ec458 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55b9de0ec420 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55b9de0eb170 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-BuiltinType 0x55b9dda79620 'unsigned int'
|-TypedefDecl 0x55b9de0ec4e8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55b9de0ec4b0 'const unsigned int *'
|   `-QualType 0x55b9de0eb171 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55b9de0eb170 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-BuiltinType 0x55b9dda79620 'unsigned int'
|-TypedefDecl 0x55b9de0ed0d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55b9de0ed080 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55b9de0ed060 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55b9de0ecff0 'type'
|     `-SubstTemplateTypeParmType 0x55b9de0ecdb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b9ddd4dc20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd4dbd0 'T'
|       `-BuiltinType 0x55b9dda79620 'unsigned int'
|-TypedefDecl 0x55b9de0ed138 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55b9de0ec390 'const unsigned int &'
|   `-QualType 0x55b9de0eb171 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55b9de0eb170 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-BuiltinType 0x55b9dda79620 'unsigned int'
|-TypedefDecl 0x55b9de0ed190 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0ed1f8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55b9de0ec420 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55b9de0eb170 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-BuiltinType 0x55b9dda79620 'unsigned int'
|-TypedefDecl 0x55b9de0ed260 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55b9de0ec4b0 'const unsigned int *'
|   `-QualType 0x55b9de0eb171 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55b9de0eb170 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-BuiltinType 0x55b9dda79620 'unsigned int'
|-EnumDecl 0x55b9de0ed2b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de0ed3b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de0ed390 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de0ed438 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de0ed688 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0ed4f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0ed590 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55b9de0ed948 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55b9de0ed830 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55b9de0edc08 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55b9de0edaf0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55b9de0edf50 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55b9de0ede30 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55b9de0ee260 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55b9de0ee140 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55b9de0ee550 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0ee398 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0ee410 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55b9de0efbd0 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55b9de0efca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0efd00 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0efd48 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55b9de0efdf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0efe50 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0efee8 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0eff98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0efff0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0f0038 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0f00e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0f0140 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0f0188 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0f0238 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0f0290 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0f02d8 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0f0388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0f03e0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0f0408 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0f04b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0f0568 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de0f0728 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0f0618 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0f0690 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55b9de0f0878 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0f07e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0f0a28 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55b9de0f0930 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0f0ae0 <col:20>
| `-OptimizeNoneAttr 0x55b9de0f0b38 <col:30>
|-CXXMethodDecl 0x55b9de0f0c58 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de0f0b60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0f0d10 <col:20>
| `-OptimizeNoneAttr 0x55b9de0f0d68 <col:30>
|-CXXMethodDecl 0x55b9de0f0e20 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0f0d90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0f0f68 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0f0ed8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0f1098 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55b9de0f11c8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55b9de0f1298 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55b9de0f1368 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55b9de0f14a8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0f1418 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0f15f0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0f1560 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0f1738 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de0f16a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0f17f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de0f18f0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de0f1860 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0f19a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de0f1a68 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55b9de0f1b68 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55b9de0f1ce8 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0f1c28 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55b9de0f24a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de0f1da0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55b9de0f2408 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55b9de0f2308 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55b9de0f2588 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de0f26d8 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0f2648 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55b9de0f2790 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de0f29d8 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0f2850 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55b9de0f28c8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55b9de0f2b98 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55b9de0f2aa8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55b9de0f2de8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55b9de0f2c60 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55b9de0f2cd8 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55b9de0f2ea8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de0f3108 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55b9de0f3010 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55b9de0f31d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de0f31d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de02afd8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55b9de02b1e8 prev 0x55b9de02afd8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de02c330 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55b9de02c2e0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55b9de02c2c0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55b9de02c170 'type'
|     `-SubstTemplateTypeParmType 0x55b9de02bf90 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9de02bae0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55b9de02b9f8 'sized_array_memory'
|-FieldDecl 0x55b9de033fc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55b9de034010 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de034048 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55b9de02b280 'int' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0340d8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55b9de0340a0 'int &'
|   `-SubstTemplateTypeParmType 0x55b9de02b280 'int' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de034198 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55b9de034160 'const int &'
|   `-QualType 0x55b9de02b281 'const int' const
|     `-SubstTemplateTypeParmType 0x55b9de02b280 'int' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de034228 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55b9de0341f0 'int *'
|   `-SubstTemplateTypeParmType 0x55b9de02b280 'int' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0342b8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55b9de034280 'const int *'
|   `-QualType 0x55b9de02b281 'const int' const
|     `-SubstTemplateTypeParmType 0x55b9de02b280 'int' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de034ea0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55b9de034e50 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55b9de034e30 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55b9de034dc0 'type'
|     `-SubstTemplateTypeParmType 0x55b9de034b80 'int' sugar
|       |-TemplateTypeParmType 0x55b9ddd4dc20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd4dbd0 'T'
|       `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de034f08 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55b9de034160 'const int &'
|   `-QualType 0x55b9de02b281 'const int' const
|     `-SubstTemplateTypeParmType 0x55b9de02b280 'int' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de034f60 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de034fc8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55b9de0341f0 'int *'
|   `-SubstTemplateTypeParmType 0x55b9de02b280 'int' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de035030 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55b9de034280 'const int *'
|   `-QualType 0x55b9de02b281 'const int' const
|     `-SubstTemplateTypeParmType 0x55b9de02b280 'int' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-BuiltinType 0x55b9dda79580 'int'
|-EnumDecl 0x55b9de035088 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de035180 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de035160 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de035208 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de035458 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0352c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de035360 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55b9de035718 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55b9de035600 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55b9de0359d8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55b9de0358c0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55b9de035d20 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55b9de035c00 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55b9de036030 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55b9de035f10 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55b9de036320 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de036168 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0361e0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55b9de036448 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55b9de036528 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de036580 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0365c8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55b9de036678 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0366d0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de036798 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55b9de036848 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0368a0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0368e8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55b9de036998 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0369f0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de036a38 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55b9de036ae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de036b40 <col:30> Inherited
|-CXXMethodDecl 0x55b9de036b88 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55b9de036c38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de036c90 <col:30> Inherited
|-CXXMethodDecl 0x55b9de036cb8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de036d68 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de036e18 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de036fd8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de036ec8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de036f40 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55b9de037128 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de037098 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0372d8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55b9de0371e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de037390 <col:20>
| `-OptimizeNoneAttr 0x55b9de0373e8 <col:30>
|-CXXMethodDecl 0x55b9de037508 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de037410 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0375c0 <col:20>
| `-OptimizeNoneAttr 0x55b9de037618 <col:30>
|-CXXMethodDecl 0x55b9de0376d0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de037640 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de037818 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de037788 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de037948 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55b9de037a78 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55b9de037b48 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55b9de037c18 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55b9de037d58 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de037cc8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de037ea0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de037e10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de037fe8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de037f58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0380a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de0381a0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de038110 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de038258 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de038318 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55b9de038418 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55b9de038598 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0384d8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55b9de038d58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de038650 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55b9de038cb8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55b9de038bb8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55b9de038e38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de038f88 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de038ef8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55b9de039040 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de039288 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de039100 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55b9de039178 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55b9de039448 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55b9de039358 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55b9de039698 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55b9de039510 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55b9de039588 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55b9de039758 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55b9de0399b8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55b9de0398c0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55b9de039a88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de039a88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de0f3420 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55b9de0f3538 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55b9de0f35d8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55b9de0f3638 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55b9de0f36d0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55b9de0f36d0
| `-ParmVarDecl 0x55b9de0f37e8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55b9de0f3888 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55b9de0f3888
| `-ParmVarDecl 0x55b9de0f3998 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55b9de0f3a38 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55b9de0f3a38
| `-ParmVarDecl 0x55b9de0f3b48 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b9de0f3bb8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55b9de0f3bb8
| `-ParmVarDecl 0x55b9de0f3cc8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55b9de0f3d50 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55b9de0f3d50

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de0f52e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55b9de0f54b8 prev 0x55b9de0f52e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b9de0f5548 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b9de0f5570 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0f6f30 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55b9de0f6ee0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55b9de0f6ec0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55b9de0f5788 'type'
|     `-SubstTemplateTypeParmType 0x55b9de0f5750 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b9ddd6d7f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd6d7a0 'T'
|       `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0f6fe8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55b9de0f6fb0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55b9de0f6f90 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55b9de0f6f30 'type'
|     `-ElaboratedType 0x55b9de0f6ee0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55b9de0f6ec0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55b9de0f5788 'type'
|         `-SubstTemplateTypeParmType 0x55b9de0f5750 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55b9ddd6d7f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b9ddd6d7a0 'T'
|           `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|             `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-CXXMethodDecl 0x55b9de0f7168 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55b9de0f7078 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55b9de0f7258 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b9de0f7338 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b9de0f7338
|-CXXMethodDecl 0x55b9de0f7608 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55b9de0f7510 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55b9de0f7848 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55b9de0f76c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0f7738 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b9de0f7a18 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55b9de0f7908 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0f7980 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b9de0f9ab0 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55b9de0f9b80 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55b9de0f9dc8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55b9de0f9c40 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55b9de0f9cb8 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b9de0fa028 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55b9de0f9e98 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55b9de0f9f10 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b9de0fa1e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55b9de0fa0f8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b9de0fa3a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55b9de0fa2b0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b9de0fa460 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de0fa510 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de0fa748 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55b9de0fa5c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0fa638 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b9de0fa9e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55b9de0fa8f0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55b9de0faab0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55b9de0fab00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b9de0fab50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de0f3e40 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55b9de0f4048 prev 0x55b9de0f3e40 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de0f5250 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55b9de0f5200 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55b9de0f51e0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55b9de0f5090 'type'
|     `-SubstTemplateTypeParmType 0x55b9de0f4f20 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55b9ddd435a0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55b9ddd43548 'F'
|       `-RecordType 0x55b9de0f4b80 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55b9de0f4aa0 'typed_array_memory'
|-FieldDecl 0x55b9de0faba0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55b9de0fabf0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de0fac28 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55b9de0f40e0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|     `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0facb8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55b9de0fac80 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55b9de0f40e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|       `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0fad48 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55b9de0fad10 'const Router::element_landmark_t &'
|   `-QualType 0x55b9de0f40e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55b9de0f40e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0fadd8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55b9de0fada0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55b9de0f40e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|       `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0fae68 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55b9de0fae30 'const Router::element_landmark_t *'
|   `-QualType 0x55b9de0f40e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55b9de0f40e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0fbac0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55b9de0fba70 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55b9de0fba50 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55b9de0fb988 'type'
|     `-LValueReferenceType 0x55b9de0fb950 'const Router::element_landmark_t &'
|       `-QualType 0x55b9de0fb6f1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55b9de0fb6f0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55b9ddd4d4f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b9ddd4d498 'T'
|           `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|             `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0fbb28 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55b9de0fad10 'const Router::element_landmark_t &'
|   `-QualType 0x55b9de0f40e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55b9de0f40e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0fbb80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0fbbe8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55b9de0fada0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55b9de0f40e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|       `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-TypedefDecl 0x55b9de0fbc50 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55b9de0fae30 'const Router::element_landmark_t *'
|   `-QualType 0x55b9de0f40e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55b9de0f40e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0f34b0 'Router::element_landmark_t'
|         `-CXXRecord 0x55b9de0f3420 'element_landmark_t'
|-EnumDecl 0x55b9de0fbca8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de0fbda0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de0fbd80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de0fbe28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de0fc0b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0fbee0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0fbf80 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55b9de0fc378 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55b9de0fc260 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55b9de0fc638 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55b9de0fc520 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55b9de0fc980 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55b9de0fc860 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55b9de0fcc90 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55b9de0fcb70 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55b9de0fcf80 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0fcdc8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0fce40 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b9de0fd0a8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55b9de0fd188 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0fd1e0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0fd228 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55b9de0fd2d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0fd330 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0fd3f8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0fd4a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0fd500 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0fd548 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0fd5f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0fd650 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0fd698 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0fd748 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0fd7a0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0fd7e8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0fd898 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0fd8f0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0fd918 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0fd9c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0fda78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de0fdc38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0fdb28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0fdba0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b9de0fdd88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0fdcf8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0fdf38 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55b9de0fde40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0fdff0 <col:20>
| `-OptimizeNoneAttr 0x55b9de0fe048 <col:30>
|-CXXMethodDecl 0x55b9de0fe168 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de0fe070 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0fe220 <col:20>
| `-OptimizeNoneAttr 0x55b9de0fe278 <col:30>
|-CXXMethodDecl 0x55b9de0fe330 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0fe2a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0fe478 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0fe3e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0fe5a8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55b9de0fe6d8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55b9de0fe7a8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55b9de0fe878 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55b9de0fe9b8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0fe928 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0feb00 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0fea70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0fec48 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de0febb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0fed00 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de0fee00 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de0fed70 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0feeb8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de0fef78 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55b9de0ff078 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55b9de0ff1f8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0ff138 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55b9de0ff988 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de0ff2b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55b9de0ff8e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55b9de0ff7e8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55b9de0ffa68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de0ffbb8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0ffb28 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b9de0ffc70 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de0ffeb8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0ffd30 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55b9de0ffda8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b9de100048 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55b9de0fff88 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55b9de100258 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55b9de100110 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55b9de100188 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55b9de100318 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de100578 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55b9de100480 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55b9de100648 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de100648

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de05b200 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55b9de05b3d8 prev 0x55b9de05b200 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b9de05b468 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b9de05b490 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de05d060 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55b9de05d010 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55b9de05b940 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55b9de05b840 'type'
|     `-TemplateSpecializationType 0x55b9de05b7d0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b9de05b6b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55b9de05b690 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b9de05b670 <col:24> 'unsigned long' 16
|       `-RecordType 0x55b9de05b7b0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55b9de05b6d0 'char_array'
|-TypedefDecl 0x55b9de05d118 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55b9de05d0e0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55b9de05d0c0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55b9de05d060 'type'
|     `-ElaboratedType 0x55b9de05d010 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55b9de05b940 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55b9de05b840 'type'
|         `-TemplateSpecializationType 0x55b9de05b7d0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b9de05b6b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55b9de05b690 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b9de05b670 <col:24> 'unsigned long' 16
|           `-RecordType 0x55b9de05b7b0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55b9de05b6d0 'char_array'
|-CXXMethodDecl 0x55b9de05d298 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55b9de05d1a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55b9de05d388 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b9de05d468 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b9de05d468
|-CXXMethodDecl 0x55b9de05d738 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55b9de05d640 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55b9de05d978 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55b9de05d7f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de05d868 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b9de05db48 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55b9de05da38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de05dab0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b9de05dca8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55b9de05dd78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55b9de05f028 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55b9de05de38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55b9de05ef10 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b9de05f288 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55b9de05f0f8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55b9de05f170 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b9de05f448 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55b9de05f358 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b9de05f608 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55b9de05f510 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b9de05f6c0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de05f770 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de05f9a8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55b9de05f820 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de05f898 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b9de05fc48 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55b9de05fb50 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55b9de05fd10 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55b9de05fd60 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b9de05fdb0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de100d60 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55b9de100f68 prev 0x55b9de100d60 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de105010 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55b9de104fc0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55b9de104fa0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55b9de104e50 'type'
|     `-SubstTemplateTypeParmType 0x55b9de05add0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9de05a920 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55b9de05a838 'sized_array_memory'
|-FieldDecl 0x55b9de105110 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55b9de105160 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de105198 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55b9de101000 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-RecordType 0x55b9de0db6d0 'Router::Connection'
|     `-CXXRecord 0x55b9de0db640 'Connection'
|-TypedefDecl 0x55b9de105258 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55b9de105220 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55b9de101000 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0db6d0 'Router::Connection'
|       `-CXXRecord 0x55b9de0db640 'Connection'
|-TypedefDecl 0x55b9de1052e8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55b9de1052b0 'const Router::Connection &'
|   `-QualType 0x55b9de101001 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55b9de101000 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0db6d0 'Router::Connection'
|         `-CXXRecord 0x55b9de0db640 'Connection'
|-TypedefDecl 0x55b9de105378 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55b9de105340 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55b9de101000 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0db6d0 'Router::Connection'
|       `-CXXRecord 0x55b9de0db640 'Connection'
|-TypedefDecl 0x55b9de105408 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55b9de1053d0 'const Router::Connection *'
|   `-QualType 0x55b9de101001 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55b9de101000 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0db6d0 'Router::Connection'
|         `-CXXRecord 0x55b9de0db640 'Connection'
|-TypedefDecl 0x55b9de106060 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55b9de106010 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55b9de105ff0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55b9de105f28 'type'
|     `-LValueReferenceType 0x55b9de105ef0 'const Router::Connection &'
|       `-QualType 0x55b9de105c91 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55b9de105c90 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55b9ddd4d4f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b9ddd4d498 'T'
|           `-RecordType 0x55b9de0db6d0 'Router::Connection'
|             `-CXXRecord 0x55b9de0db640 'Connection'
|-TypedefDecl 0x55b9de1060c8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55b9de1052b0 'const Router::Connection &'
|   `-QualType 0x55b9de101001 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55b9de101000 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0db6d0 'Router::Connection'
|         `-CXXRecord 0x55b9de0db640 'Connection'
|-TypedefDecl 0x55b9de106120 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de106188 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55b9de105340 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55b9de101000 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0db6d0 'Router::Connection'
|       `-CXXRecord 0x55b9de0db640 'Connection'
|-TypedefDecl 0x55b9de1061f0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55b9de1053d0 'const Router::Connection *'
|   `-QualType 0x55b9de101001 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55b9de101000 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0db6d0 'Router::Connection'
|         `-CXXRecord 0x55b9de0db640 'Connection'
|-EnumDecl 0x55b9de106248 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de106340 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de106320 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de1063c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de106658 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de106480 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de106520 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55b9de106918 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55b9de106800 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55b9de106bd8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55b9de106ac0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55b9de106f20 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55b9de106e00 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55b9de107230 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55b9de107110 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55b9de107520 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de107368 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de1073e0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55b9de107678 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55b9de107758 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de1077b0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de1077f8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55b9de1078a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de107900 <col:30> Inherited
|-CXXMethodDecl 0x55b9de1079c8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55b9de107a78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de107ad0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de107b18 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55b9de107bc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de107c20 <col:30> Inherited
|-CXXMethodDecl 0x55b9de107c68 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55b9de107d18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de107d70 <col:30> Inherited
|-CXXMethodDecl 0x55b9de107db8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55b9de107e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de107ec0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de107ee8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de107f98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de108048 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de108208 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de1080f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de108170 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55b9de108358 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de1082c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de108508 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55b9de108410 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de1085c0 <col:20>
| `-OptimizeNoneAttr 0x55b9de108618 <col:30>
|-CXXMethodDecl 0x55b9de108738 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de108640 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de1087f0 <col:20>
| `-OptimizeNoneAttr 0x55b9de108848 <col:30>
|-CXXMethodDecl 0x55b9de108900 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de108870 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de108a48 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de1089b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de108b78 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55b9de108ca8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55b9de108d78 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55b9de108e48 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55b9de108f88 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de108ef8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de1090d0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de109040 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de109218 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de109188 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de1092d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de1093d0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de109340 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de109488 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de109548 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55b9de109648 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55b9de1097f8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de109708 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55b9de109fb8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de1098b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55b9de109f18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55b9de109e18 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55b9de10a098 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de10a1e8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de10a158 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55b9de10a2a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de10a4e8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de10a360 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55b9de10a3d8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55b9de10a6a8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55b9de10a5b8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55b9de10a8f8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55b9de10a770 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55b9de10a7e8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55b9de10a9b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de10ac18 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55b9de10ab20 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55b9de10ace8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de10ace8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de1b73c8 prev 0x55b9de14beb8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9de1b74c0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55b9de1b7550 <col:22, col:28> col:22 public
|-EnumDecl 0x55b9de1b7578 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55b9de1b7698 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b7678 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55b9de1b7660 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b9de1b7640 <col:14> 'int' 999
| |-EnumConstantDecl 0x55b9de1b7740 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b7720 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55b9de1b7708 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b9de1b76e8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55b9de1b77d0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b77b0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55b9de1b7790 <col:17> 'int' 0
| |-EnumConstantDecl 0x55b9de1b7860 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b7840 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55b9de1b7820 <col:13> 'int' 1
| |-EnumConstantDecl 0x55b9de1b78f0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b78d0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55b9de1b78b0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55b9de1b7980 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b7960 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55b9de1b7940 <col:13> 'int' 3
| |-EnumConstantDecl 0x55b9de1b7a10 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b79f0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55b9de1b79d0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55b9de1b7aa0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b7a80 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55b9de1b7a60 <col:14> 'int' 5
| |-EnumConstantDecl 0x55b9de1b7b30 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b9de1b7b10 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55b9de1b7af0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55b9de1b7bc0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55b9de1b7ba0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55b9de1b7b80 <col:13> 'int' 7
|-VarDecl 0x55b9de1b7c30 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55b9de1b7cb8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55b9de1b7d40 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55b9de1b7dc8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55b9de1b7e50 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55b9de1b7ed8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55b9de1b7f60 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55b9de1b7fe8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55b9de1b8070 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55b9de1b80f8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55b9de1b8180 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55b9de1b8280 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55b9de1bd598 '_nerrors' 'int'
| | `-IntegerLiteral 0x55b9de1bdd28 <line:128:13> 'int' 0
| `-CompoundStmt 0x55b9de1bdd98 <col:16, line:129:5>
|-CXXDestructorDecl 0x55b9de1b8370 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55b9de1bdda8 <col:29, line:132:5>
|-CXXMethodDecl 0x55b9de1b8528 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55b9de1b8460 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de1b85f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b9de1b86d8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55b9de1bde00 <col:44, line:161:5>
|   `-ReturnStmt 0x55b9de1bddf0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55b9de1bddd8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55b9de1bddb8 <col:9> 'ErrorHandler *' lvalue Var 0x55b9de1bd5f8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de1b8818 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55b9de1b8788 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de1b88e0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55b9de1bde60 <col:43, line:173:5>
|   `-ReturnStmt 0x55b9de1bde50 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55b9de1bde38 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55b9de1bde18 <col:9> 'ErrorHandler *' lvalue Var 0x55b9de1bd670 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55b9de1b8998 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55b9de1b8a18 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55b9de1b8b28 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55b9de1b8a98 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b8c78 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55b9de1b8be8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b8dd0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55b9de1b8d38 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b8f28 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55b9de1b8e90 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b9080 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55b9de1b8fe8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b9290 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b9de1b9138 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55b9de1b91b8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b9468 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b9de1b9350 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55b9de1b93d0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b9688 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b9de1b9528 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55b9de1b95a8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b9868 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b9de1b9748 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55b9de1b97c8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b9a48 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b9de1b9928 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55b9de1b99a8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1b9c00 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55b9de1b9b08 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55b9de1b9dd0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55b9de1b9cb8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55b9de1b9d30 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55b9de1be0b8 <col:57, line:234:5>
|   `-ReturnStmt 0x55b9de1be0a8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55b9de1be090 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55b9de1be038 <col:9, col:41> 'int'
|         |-MemberExpr 0x55b9de1be008 <col:9> '<bound member function type>' ->xmessage 0x55b9de1b9c00
|         | `-CXXThisExpr 0x55b9de1bdff8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55b9de1be078 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b9de1be060 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b9de1bdfd8 <col:18, col:40> 'String' (CXXTemporary 0x55b9de1bdfd8)
|               `-CallExpr 0x55b9de1bdfa0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55b9de1bdf88 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55b9de1bdf00 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55b9de1bbdc8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55b9de1bdf20 <col:31> 'const String' lvalue ParmVar 0x55b9de1b9d30 'str' 'const String &'
|                 `-DeclRefExpr 0x55b9de1bdf40 <col:36> 'const String' lvalue ParmVar 0x55b9de1b9cb8 'anno' 'const String &'
|-CXXMethodDecl 0x55b9de1ba0b0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55b9de1b9e90 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55b9de1b9f10 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55b9de1b9f88 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b9de1be348 <col:68, line:243:5>
|   `-ReturnStmt 0x55b9de1be338 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55b9de1be320 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55b9de1be2c0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55b9de1be290 <col:9> '<bound member function type>' ->xmessage 0x55b9de1b9dd0
|         | `-CXXThisExpr 0x55b9de1be280 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55b9de1be158 <col:18> 'const String' lvalue ParmVar 0x55b9de1b9e90 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55b9de1be308 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b9de1be2f0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b9de1be260 <col:24, col:40> 'String' (CXXTemporary 0x55b9de1be260)
|               `-CXXMemberCallExpr 0x55b9de1be1f8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55b9de1be188 <col:24> '<bound member function type>' ->vformat 0x55b9de1bb290
|                 | `-CXXThisExpr 0x55b9de1be178 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55b9de1be228 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55b9de1be1b8 <col:32> 'const char *' lvalue ParmVar 0x55b9de1b9f10 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55b9de1be240 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55b9de1be1d8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b9de1b9f88 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b9de1ba350 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55b9de1ba178 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55b9de1ba1f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55b9de1ba268 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55b9de1be688 <col:23, line:254:5>
|   `-ReturnStmt 0x55b9de1be678 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55b9de1be660 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55b9de1be600 <col:9, col:71> 'int'
|         |-MemberExpr 0x55b9de1be5d0 <col:9> '<bound member function type>' ->xmessage 0x55b9de1b9dd0
|         | `-CXXThisExpr 0x55b9de1be5c0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55b9de1be648 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55b9de1be630 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55b9de1be580 <col:18, col:65> 'String' (CXXTemporary 0x55b9de1be580)
|         |     `-CallExpr 0x55b9de1be518 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55b9de1be500 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55b9de1be3e8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55b9de1bbdc8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55b9de1be408 <col:31> 'const String' lvalue ParmVar 0x55b9de1ba1f0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55b9de1be560 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55b9de1be548 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55b9de1be4e0 <col:37, col:64> 'String' (CXXTemporary 0x55b9de1be4e0)
|         |             `-CallExpr 0x55b9de1be4b0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55b9de1be498 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55b9de1be428 <col:37> 'String (const String &)' lvalue CXXMethod 0x55b9de1bc418 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55b9de1be448 <col:56> 'const String' lvalue ParmVar 0x55b9de1ba178 'landmark' 'const String &'
|         `-DeclRefExpr 0x55b9de1be5a0 <col:68> 'const String' lvalue ParmVar 0x55b9de1ba268 'str' 'const String &'
|-CXXMethodDecl 0x55b9de1ba6d0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55b9de1ba418 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55b9de1ba490 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55b9de1ba510 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55b9de1ba588 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b9de1be940 <col:34, line:267:5>
|   `-ReturnStmt 0x55b9de1be930 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55b9de1be918 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55b9de1be8b0 <col:9, col:51> 'int'
|         |-MemberExpr 0x55b9de1be880 <col:9> '<bound member function type>' ->xmessage 0x55b9de1ba350
|         | `-CXXThisExpr 0x55b9de1be870 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55b9de1be728 <col:18> 'const String' lvalue ParmVar 0x55b9de1ba418 'landmark' 'const String &'
|         |-DeclRefExpr 0x55b9de1be748 <col:28> 'const String' lvalue ParmVar 0x55b9de1ba490 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55b9de1be900 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b9de1be8e8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b9de1be850 <col:34, col:50> 'String' (CXXTemporary 0x55b9de1be850)
|               `-CXXMemberCallExpr 0x55b9de1be7e8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55b9de1be778 <col:34> '<bound member function type>' ->vformat 0x55b9de1bb290
|                 | `-CXXThisExpr 0x55b9de1be768 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55b9de1be818 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55b9de1be7a8 <col:42> 'const char *' lvalue ParmVar 0x55b9de1ba510 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55b9de1be830 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55b9de1be7c8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b9de1ba588 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b9de1ba7e0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55b9de1be9c0 <col:25, line:288:5>
|   `-ReturnStmt 0x55b9de1be9b0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55b9de1be998 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55b9de1be968 <col:9> 'const int' lvalue ->_nerrors 0x55b9de1bd598
|         `-CXXThisExpr 0x55b9de1be958 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55b9de1ba9f0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55b9de1ba898 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55b9de1ba918 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1bacd8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55b9de1baab8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55b9de1bab38 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55b9de1babb0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b9de1bae70 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55b9de1bada8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1bb0b8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55b9de1baf30 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55b9de1bafa8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b9de1bec20 <col:58, line:357:5>
|   `-ReturnStmt 0x55b9de1bec10 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55b9de1bebf8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55b9de1bebc8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b9de1bebb0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55b9de1beb90 <col:9, col:29> 'String' (CXXTemporary 0x55b9de1beb90)
|             `-CallExpr 0x55b9de1beb20 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55b9de1beb08 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b9de1bea88 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55b9de1bacd8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55b9de1bea28 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55b9de1beb58 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55b9de1bea48 <col:21> 'const char *' lvalue ParmVar 0x55b9de1baf30 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55b9de1beb70 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55b9de1bea68 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b9de1bafa8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b9de1bb290 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55b9de1bb180 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55b9de1bb1f8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b9de1bb3e8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55b9de1bb358 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55b9de1bb530 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55b9de1bb4a0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55b9de1bb7d0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55b9de1bb5e8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55b9de1bb668 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55b9de1bb6e0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55b9de1bb930 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55b9de1bb8a0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55b9de1bed38 <col:37, line:441:5>
|   `-IfStmt 0x55b9de1bed20 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55b9de1beca8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55b9de1bec78 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55b9de1bec38 <col:6> 'int' lvalue ParmVar 0x55b9de1bb8a0 'level' 'int'
|     | `-ImplicitCastExpr 0x55b9de1bec90 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55b9de1bec58 <col:15> 'ErrorHandler::Level' EnumConstant 0x55b9de1b7980 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55b9de1bed08 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55b9de1becd8 <col:8> 'int' lvalue ->_nerrors 0x55b9de1bd598
|         `-CXXThisExpr 0x55b9de1becc8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55b9de1bb9f8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55b9de1bedd0 <col:26, line:448:5>
|   `-BinaryOperator 0x55b9de1bedb0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55b9de1bed60 <col:2> 'int' lvalue ->_nerrors 0x55b9de1bd598
|     | `-CXXThisExpr 0x55b9de1bed50 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55b9de1bed90 <col:13> 'int' 0
|-CXXMethodDecl 0x55b9de1bbbc0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55b9de1bbab0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55b9de1bbb28 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55b9de1bbdc8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55b9de1bbc80 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55b9de1bbcf8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55b9de1bc078 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55b9de1bbe88 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55b9de1bbf08 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55b9de1bbf88 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55b9de1bc130 <col:59> 0 0
|-CXXMethodDecl 0x55b9de1bc2c8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55b9de1bc1a8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55b9de1bc228 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55b9de1bf440 <col:70, line:534:5>
|   |-DeclStmt 0x55b9de1bef40 <line:528:2, col:20>
|   | |-VarDecl 0x55b9de1bedf8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55b9de1bee60 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55b9de1bee98 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55b9de1bef00 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55b9de1bf010 <line:529:2, col:23>
|   | `-VarDecl 0x55b9de1bef70 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55b9de1beff8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b9de1befd8 <col:18> 'const char *' lvalue ParmVar 0x55b9de1bc1a8 'begin' 'const char *'
|   |-DoStmt 0x55b9de1bf3d8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55b9de1bf308 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55b9de1bf2f0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55b9de1bf2d0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55b9de1bf028 <col:6> 'const char *' lvalue Var 0x55b9de1bef70 'x' 'const char *'
|   | |     `-CallExpr 0x55b9de1bf220 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55b9de1bf208 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55b9de1bf1c0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55b9de1bda70 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55b9de1bf288 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55b9de1bf270 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55b9de1bf0e0 <col:20, col:27> 'String' (CXXTemporary 0x55b9de1bf0e0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55b9de1bf0a8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55b9de1bf2a0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55b9de1bf100 <col:30> 'const char *' lvalue Var 0x55b9de1bef70 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55b9de1bf2b8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55b9de1bf120 <col:33> 'const char *' lvalue ParmVar 0x55b9de1bc228 'end' 'const char *'
|   | |       |-UnaryOperator 0x55b9de1bf160 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55b9de1bf140 <col:39> 'String' lvalue Var 0x55b9de1bedf8 'name' 'String'
|   | |       |-UnaryOperator 0x55b9de1bf198 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55b9de1bf178 <col:46> 'String' lvalue Var 0x55b9de1bee98 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55b9de1bf1b0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55b9de1bf3c0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55b9de1bf3a8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55b9de1bf388 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55b9de1bf358 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|   |         `-ImplicitCastExpr 0x55b9de1bf340 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55b9de1bf320 <col:11> 'String' lvalue Var 0x55b9de1bedf8 'name' 'String'
|   `-ReturnStmt 0x55b9de1bf430 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55b9de1bf418 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55b9de1bf3f8 <col:9> 'const char *' lvalue Var 0x55b9de1bef70 'x' 'const char *'
|-CXXMethodDecl 0x55b9de1bc418 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55b9de1bc388 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55b9de1bfa48 <col:55, line:550:5>
|   `-IfStmt 0x55b9de1bfa20 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55b9de1bf680 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55b9de1bf668 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b9de1bf650 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b9de1bf630 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b9de1bf600 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|     | |       `-DeclRefExpr 0x55b9de1bf4a0 <col:6> 'const String' lvalue ParmVar 0x55b9de1bc388 'x' 'const String &'
|     | `-BinaryOperator 0x55b9de1bf5e0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55b9de1bf5b0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55b9de1bf560 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55b9de1bf548 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55b9de1bf500 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55b9dddc5f70 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55b9de1bf4c0 <col:11> 'const String' lvalue ParmVar 0x55b9de1bc388 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55b9de1bf4e0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55b9de1bf5c8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55b9de1bf598 <col:19> 'char' 123
|     |-ReturnStmt 0x55b9de1bf6f0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55b9de1bf6c0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55b9de1bf6a0 <col:13> 'const String' lvalue ParmVar 0x55b9de1bc388 'x' 'const String &'
|     `-IfStmt 0x55b9de1bf9f8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55b9de1bf788 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b9de1bf770 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b9de1bf750 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b9de1bf720 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|       |       `-DeclRefExpr 0x55b9de1bf700 <col:11> 'const String' lvalue ParmVar 0x55b9de1bc388 'x' 'const String &'
|       |-ReturnStmt 0x55b9de1bf910 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55b9de1bf8f8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55b9de1bf8c8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55b9de1bf8b0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55b9de1bf890 <col:13, col:29> 'String' (CXXTemporary 0x55b9de1bf890)
|       |         `-CallExpr 0x55b9de1bf840 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55b9de1bf828 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55b9de1bf7a0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55b9de1bbbc0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55b9de1bf870 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55b9de1bf7c0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55b9de1bf7e0 <col:28> 'const String' lvalue ParmVar 0x55b9de1bc388 'x' 'const String &'
|       `-ReturnStmt 0x55b9de1bf9e8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55b9de1bf9d0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55b9de1bf9a0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55b9de1bf988 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55b9de1bf968 <col:13, col:20> 'String' (CXXTemporary 0x55b9de1bf968)
|                 `-CXXTemporaryObjectExpr 0x55b9de1bf930 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55b9de1bc5e0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55b9de1bc4d0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55b9de1bc548 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9de1bdd18 <col:71> 'bool' false
|-CXXRecordDecl 0x55b9de1bc690 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55b9de1bc988 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55b9de1bc920 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55b9de1bc8c0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55b9de1bc880 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55b9ddda8fd0 'String'
|       | `-CXXRecord 0x55b9ddda8f40 'String'
|       |-BuiltinType 0x55b9dda79580 'int'
|       `-DecayedType 0x55b9de15cf00 '__va_list_tag *' sugar
|         |-TypedefType 0x55b9de15ced0 'va_list' sugar
|         | |-Typedef 0x55b9ddc9b090 'va_list'
|         | `-TypedefType 0x55b9ddc9b040 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55b9ddbd2c68 '__gnuc_va_list'
|         |   `-TypedefType 0x55b9ddbd2bd0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55b9ddabad38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55b9ddabace0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55b9dda7a2d0 '__va_list_tag'
|         |         `-CXXRecord 0x55b9dda7a238 '__va_list_tag'
|         `-PointerType 0x55b9ddca0930 '__va_list_tag *'
|           `-RecordType 0x55b9dda7a2d0 '__va_list_tag'
|             `-CXXRecord 0x55b9dda7a238 '__va_list_tag'
|-EnumDecl 0x55b9de1bc9e0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55b9de1bcae0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd040 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bcac0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55b9de1bcaa0 <col:16> 'int' 1
| |-EnumConstantDecl 0x55b9de1bcb70 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd058 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bcb50 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55b9de1bcb30 <col:21> 'int' 2
| |-EnumConstantDecl 0x55b9de1bcc00 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd070 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bcbe0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55b9de1bcbc0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55b9de1bcc90 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd088 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bcc70 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55b9de1bcc50 <col:17> 'int' 8
| |-EnumConstantDecl 0x55b9de1bcd20 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd0a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bcd00 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55b9de1bcce0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55b9de1bcdb0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd0b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bcd90 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b9de1bcd70 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b9de1bce40 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd0d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bce20 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55b9de1bce00 <col:17> 'int' 64
| |-EnumConstantDecl 0x55b9de1bced0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd0e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bceb0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55b9de1bce90 <col:14> 'int' 128
| |-EnumConstantDecl 0x55b9de1bcf60 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b9de1bd100 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de1bcf40 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55b9de1bcf20 <col:16> 'int' 256
| `-EnumConstantDecl 0x55b9de1bcff0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55b9de1bd118 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9de1bcfd0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55b9de1bcfb0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55b9de1bd328 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55b9de1bd140 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55b9de1bd1e0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55b9de1bd4b0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55b9de1bd3e8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55b9de1bd558 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55b9de1bd598 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55b9de1bd5f8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55b9de1bd670 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55b9de1bda70 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55b9de1bd6e8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55b9de1bd768 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55b9de1bd7e8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55b9de1bd860 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55b9de1bd8d8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55b9de1bd950 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55b9de1bdb98 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55b9de1bdb98
| `-ParmVarDecl 0x55b9de1bdca8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55b9de1bfda8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55b9de1bfda8
  `-ParmVarDecl 0x55b9de1bfeb8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddfda0a0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b9ddfda1f0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55b9ddfda270 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55b9ddfdb068 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55b9ddfdb068
| `-ParmVarDecl 0x55b9ddfdb178 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55b9ddfdb218 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55b9ddfdb218
| `-ParmVarDecl 0x55b9ddfdb328 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55b9ddfdb398 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b9ddfdb398
|-CXXMethodDecl 0x55b9ddfdbc68 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55b9ddfdbc68
| `-ParmVarDecl 0x55b9ddfdbd78 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55b9ddfdbde8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55b9ddfdbde8
| `-ParmVarDecl 0x55b9ddfdbef8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55b9de1254e0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55b9de1255c0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddfda3a0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b9ddfda4c8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55b9ddfda550 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55b9ddfdb4c8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55b9ddfdb4c8
| `-ParmVarDecl 0x55b9ddfdb5d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55b9ddfdb678 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55b9ddfdb678
| `-ParmVarDecl 0x55b9ddfdb788 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55b9ddfdb7f8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b9ddfdb7f8
|-CXXMethodDecl 0x55b9ddfdbf98 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55b9ddfdbf98
| `-ParmVarDecl 0x55b9ddfdc0a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55b9ddfdc118 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55b9ddfdc118
| `-ParmVarDecl 0x55b9ddfdc228 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55b9de125620 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55b9de125700 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddfd5a28 prev 0x55b9ddfd4ec0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55b9ddfd5b20 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55b9ddfd5bb0 <col:17, col:23> col:17 public
|-EnumDecl 0x55b9ddfd5bd8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55b9ddfd5ce0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6a30 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd5cc0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55b9ddfd5ca0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55b9ddfd5d70 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6a48 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd5d50 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55b9ddfd5d30 <col:12> 'int' 2
| |-EnumConstantDecl 0x55b9ddfd5e00 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6a60 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd5de0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55b9ddfd5dc0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55b9ddfd5e90 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6a78 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd5e70 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55b9ddfd5e50 <col:16> 'int' 0
| |-EnumConstantDecl 0x55b9ddfd5f20 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6a90 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd5f00 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b9ddfd5ee0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b9ddfd5fb0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6aa8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd5f90 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55b9ddfd5f70 <col:10> 'int' 64
| |-EnumConstantDecl 0x55b9ddfd6040 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6ac0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd6020 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55b9ddfd6000 <col:19> 'int' 128
| |-EnumConstantDecl 0x55b9ddfd60d0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6ad8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd60b0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55b9ddfd6090 <col:20> 'int' 256
| |-EnumConstantDecl 0x55b9ddfd6160 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6af0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd6140 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55b9ddfd6120 <col:17> 'int' 512
| |-EnumConstantDecl 0x55b9ddfd61f0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6b08 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd61d0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55b9ddfd61b0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55b9ddfd6280 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6b20 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd6260 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55b9ddfd6240 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55b9ddfd6310 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6b38 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd62f0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55b9ddfd62d0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55b9ddfd63a0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6b50 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd6380 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55b9ddfd6360 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55b9ddfd6430 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6b68 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd6410 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55b9ddfd63f0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55b9ddfd6500 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55b9ddfd64e0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55b9ddfd64c0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55b9ddfd6480 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55b9ddfd64a0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55b9ddfd65d0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55b9ddfd65b0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55b9ddfd6590 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55b9ddfd6550 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55b9ddfd6570 <col:27> 'int' 27
| |-EnumConstantDecl 0x55b9ddfd6660 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6b80 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd6640 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55b9ddfd6620 <col:17> 'int' 28
| |-EnumConstantDecl 0x55b9ddfd6730 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55b9ddfd6710 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55b9ddfd66f0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55b9ddfd66b0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55b9ddfd66d0 <col:18> 'int' EnumConstant 0x55b9ddfd6660 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd67c0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6b98 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd67a0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55b9ddfd6780 <col:25> 'int' 8
| |-EnumConstantDecl 0x55b9ddfd6850 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b9ddfd6bb0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd6830 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55b9ddfd6810 <col:26> 'int' 16
| `-EnumConstantDecl 0x55b9ddfd69e0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55b9ddfd6bc8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfd69c0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55b9ddfd69a0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55b9ddfd6960 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55b9ddfd6920 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55b9ddfd68e0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55b9ddfd68a0 <col:14> 'int' EnumConstant 0x55b9ddfd5ce0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55b9ddfd68c0 <col:23> 'int' EnumConstant 0x55b9ddfd5d70 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55b9ddfd6900 <col:33> 'int' EnumConstant 0x55b9ddfd5e00 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55b9ddfd6940 <col:48> 'int' EnumConstant 0x55b9ddfd67c0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55b9ddfd6980 <col:71> 'int' EnumConstant 0x55b9ddfd6850 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd6c28 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55b9ddfdc648 <col:39, line:64:5>
|   `-ReturnStmt 0x55b9ddfdc638 <line:63:2, col:9>
|     `-MemberExpr 0x55b9ddfdc608 <col:9> 'const String' lvalue ->_name 0x55b9ddfda050
|       `-CXXThisExpr 0x55b9ddfdc5f8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b9ddfd6ce8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55b9ddfdc6c8 <col:35, line:71:5>
|   `-ReturnStmt 0x55b9ddfdc6b8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55b9ddfdc6a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b9ddfdc670 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|         `-CXXThisExpr 0x55b9ddfdc660 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b9ddfd6e38 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55b9ddfd6da0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55b9ddfdc848 <col:42, line:77:5>
|   `-ReturnStmt 0x55b9ddfdc838 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55b9ddfdc820 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55b9ddfdc7f0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55b9ddfdc750 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55b9ddfdc720 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b9ddfdc6e0 <col:9> 'int' lvalue ParmVar 0x55b9ddfd6da0 'op' 'int'
|         | `-ImplicitCastExpr 0x55b9ddfdc738 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55b9ddfdc700 <col:15> 'Handler::Flags' EnumConstant 0x55b9ddfd5d70 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55b9ddfdc780 <col:25> 'void *const' lvalue ->_write_user_data 0x55b9ddfda700
|         | `-CXXThisExpr 0x55b9ddfdc770 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55b9ddfdc7c0 <col:44> 'void *const' lvalue ->_read_user_data 0x55b9ddfda698
|           `-CXXThisExpr 0x55b9ddfdc7b0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b9ddfd6f08 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55b9ddfdc8c8 <col:41, line:82:5>
|   `-ReturnStmt 0x55b9ddfdc8b8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55b9ddfdc8a0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b9ddfdc870 <col:9> 'void *const' lvalue ->_read_user_data 0x55b9ddfda698
|         `-CXXThisExpr 0x55b9ddfdc860 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b9ddfd6fd0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55b9ddfdc948 <col:42, line:87:5>
|   `-ReturnStmt 0x55b9ddfdc938 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55b9ddfdc920 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b9ddfdc8f0 <col:9> 'void *const' lvalue ->_write_user_data 0x55b9ddfda700
|         `-CXXThisExpr 0x55b9ddfdc8e0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b9ddfd7098 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55b9ddfd7138 <col:52> "" ""
|-CXXMethodDecl 0x55b9ddfd71d0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55b9ddfd7270 <col:52> "" ""
|-CXXMethodDecl 0x55b9ddfd7300 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdca38 <col:34, line:98:5>
|   `-ReturnStmt 0x55b9ddfdca28 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55b9ddfdca10 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b9ddfdc9f0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55b9ddfdc9c0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55b9ddfdc970 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|         |   `-CXXThisExpr 0x55b9ddfdc960 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55b9ddfdc9d8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55b9ddfdc9a0 <col:18> 'Handler::Flags' EnumConstant 0x55b9ddfd5ce0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd73c0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdcb28 <col:36, line:104:5>
|   `-ReturnStmt 0x55b9ddfdcb18 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55b9ddfdcb00 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b9ddfdcae0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55b9ddfdcab0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55b9ddfdca60 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|         |   `-CXXThisExpr 0x55b9ddfdca50 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55b9ddfdcac8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55b9ddfdca90 <col:18> 'Handler::Flags' EnumConstant 0x55b9ddfd5e00 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd7480 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdcd08 <col:38, line:113:5>
|   `-ReturnStmt 0x55b9ddfdccf8 <line:112:2, col:49>
|     `-BinaryOperator 0x55b9ddfdccd8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55b9ddfdcc80 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55b9ddfdcc60 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55b9ddfdcc30 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55b9ddfdcb50 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|       |   |   `-CXXThisExpr 0x55b9ddfdcb40 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55b9ddfdcc48 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55b9ddfdcc10 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55b9ddfdcbf0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55b9ddfdcbc0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55b9ddfdcb80 <col:20> 'Handler::Flags' EnumConstant 0x55b9ddfd5ce0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55b9ddfdcbd8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55b9ddfdcba0 <col:29> 'Handler::Flags' EnumConstant 0x55b9ddfd6040 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55b9ddfdccc0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55b9ddfdcca0 <col:49> 'Handler::Flags' EnumConstant 0x55b9ddfd5ce0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd7540 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdcdf8 <col:34, line:118:5>
|   `-ReturnStmt 0x55b9ddfdcde8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55b9ddfdcdd0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b9ddfdcdb0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55b9ddfdcd80 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55b9ddfdcd30 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|         |   `-CXXThisExpr 0x55b9ddfdcd20 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55b9ddfdcd98 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55b9ddfdcd60 <col:18> 'Handler::Flags' EnumConstant 0x55b9ddfd5d70 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd7600 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdcfd8 <col:39, line:127:5>
|   `-ReturnStmt 0x55b9ddfdcfc8 <line:126:2, col:51>
|     `-BinaryOperator 0x55b9ddfdcfa8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55b9ddfdcf50 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55b9ddfdcf30 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55b9ddfdcf00 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55b9ddfdce20 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|       |   |   `-CXXThisExpr 0x55b9ddfdce10 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55b9ddfdcf18 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55b9ddfdcee0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55b9ddfdcec0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55b9ddfdce90 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55b9ddfdce50 <col:20> 'Handler::Flags' EnumConstant 0x55b9ddfd5d70 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55b9ddfdcea8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55b9ddfdce70 <col:30> 'Handler::Flags' EnumConstant 0x55b9ddfd60d0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55b9ddfdcf90 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55b9ddfdcf70 <col:51> 'Handler::Flags' EnumConstant 0x55b9ddfd5d70 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd76c0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdd0e0 <col:33, line:132:5>
|   `-ReturnStmt 0x55b9ddfdd0d0 <line:131:2, col:41>
|     `-BinaryOperator 0x55b9ddfdd0b0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55b9ddfdd030 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55b9ddfdd000 <col:9> '<bound member function type>' ->read_visible 0x55b9ddfd7480
|       |   `-CXXThisExpr 0x55b9ddfdcff0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55b9ddfdd090 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55b9ddfdd060 <col:27> '<bound member function type>' ->write_visible 0x55b9ddfd7600
|           `-CXXThisExpr 0x55b9ddfdd050 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b9ddfd7780 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdd218 <col:51, line:138:5>
|   `-ReturnStmt 0x55b9ddfdd208 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55b9ddfdd1f0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55b9ddfdd1d0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55b9ddfdd188 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55b9ddfdd158 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55b9ddfdd108 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|           |   `-CXXThisExpr 0x55b9ddfdd0f8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55b9ddfdd170 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55b9ddfdd138 <col:26> 'Handler::Flags' EnumConstant 0x55b9ddfd5f20 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd7840 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdd328 <col:50, line:144:5>
|   `-ReturnStmt 0x55b9ddfdd318 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55b9ddfdd300 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55b9ddfdd2e0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55b9ddfdd2c0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55b9ddfdd290 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55b9ddfdd240 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|           |   `-CXXThisExpr 0x55b9ddfdd230 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55b9ddfdd2a8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55b9ddfdd270 <col:26> 'Handler::Flags' EnumConstant 0x55b9ddfd5f20 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd7900 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55b9ddfdd418 <col:29, line:166:5>
|   `-ReturnStmt 0x55b9ddfdd408 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55b9ddfdd3f0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b9ddfdd3d0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55b9ddfdd3a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55b9ddfdd350 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|         |   `-CXXThisExpr 0x55b9ddfdd340 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55b9ddfdd3b8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55b9ddfdd380 <col:18> 'Handler::Flags' EnumConstant 0x55b9ddfd5fb0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd7b88 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55b9ddfd79b0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55b9ddfd7a28 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55b9ddfd7aa0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfd7d98 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55b9ddfd7c50 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55b9ddfd7cc8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55b9ddfdc530 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9ddfdc510 <col:62> 'int' 0
| `-CompoundStmt 0x55b9ddfdd6b8 <col:71, line:188:5>
|   `-ReturnStmt 0x55b9ddfdd6a8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55b9ddfdd690 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55b9ddfdd660 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddfdd648 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55b9ddfdd628 <col:9, col:36> 'String' (CXXTemporary 0x55b9ddfdd628)
|             `-CXXMemberCallExpr 0x55b9ddfdd588 <col:9, col:36> 'String'
|               |-MemberExpr 0x55b9ddfdd558 <col:9> '<bound member function type>' ->call_read 0x55b9ddfd7b88
|               | `-CXXThisExpr 0x55b9ddfdd548 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55b9ddfdd5c0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55b9ddfdd4a0 <col:19> 'Element *' lvalue ParmVar 0x55b9ddfd7c50 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55b9ddfdd5f0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55b9ddfdd5d8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55b9ddfdd508 <col:22, col:29> 'String' (CXXTemporary 0x55b9ddfdd508)
|               |     `-CXXTemporaryObjectExpr 0x55b9ddfdd4d0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55b9ddfdd608 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55b9ddfdd528 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55b9ddfd7cc8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfd8030 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55b9ddfd7e58 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55b9ddfd7ed0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55b9ddfd7f48 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfd81b8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55b9ddfd80f8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55b9ddfd83e8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55b9ddfd8270 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55b9ddfd82e8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55b9ddfd84e8 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55b9ddfdd718 <col:50, line:225:5>
|   `-ReturnStmt 0x55b9ddfdd708 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55b9ddfdd6f0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddfdd6d0 <col:9> 'const Handler *' lvalue Var 0x55b9ddfda890 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55b9ddfd8588 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55b9ddfd8690 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9230 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8670 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55b9ddfd8650 <col:11> 'Handler::Flags' EnumConstant 0x55b9ddfd5ce0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8720 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9248 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8700 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55b9ddfd86e0 <col:12> 'Handler::Flags' EnumConstant 0x55b9ddfd5d70 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd87b0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9260 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8790 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55b9ddfd8770 <col:17> 'Handler::Flags' EnumConstant 0x55b9ddfd5e00 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8840 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9278 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8820 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55b9ddfd8800 <col:16> 'Handler::Flags' EnumConstant 0x55b9ddfd5e90 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd88d0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9290 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd88b0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55b9ddfd8890 <col:19> 'Handler::Flags' EnumConstant 0x55b9ddfd5f20 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8960 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd92a8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8940 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55b9ddfd8920 <col:10> 'Handler::Flags' EnumConstant 0x55b9ddfd5fb0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd89f0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd92c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd89d0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55b9ddfd89b0 <col:19> 'Handler::Flags' EnumConstant 0x55b9ddfd6040 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8a80 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd92d8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8a60 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55b9ddfd8a40 <col:20> 'Handler::Flags' EnumConstant 0x55b9ddfd60d0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8b10 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd92f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8af0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55b9ddfd8ad0 <col:17> 'Handler::Flags' EnumConstant 0x55b9ddfd6160 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8ba0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9308 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8b80 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55b9ddfd8b60 <col:15> 'Handler::Flags' EnumConstant 0x55b9ddfd61f0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8c30 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9320 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8c10 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55b9ddfd8bf0 <col:11> 'Handler::Flags' EnumConstant 0x55b9ddfd6280 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8cc0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9338 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8ca0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55b9ddfd8c80 <col:16> 'Handler::Flags' EnumConstant 0x55b9ddfd6310 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8d50 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9350 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8d30 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55b9ddfd8d10 <col:13> 'Handler::Flags' EnumConstant 0x55b9ddfd63a0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8de0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9368 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8dc0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55b9ddfd8da0 <col:15> 'Handler::Flags' EnumConstant 0x55b9ddfd6430 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8e70 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9380 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8e50 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55b9ddfd8e30 <col:20> 'Handler::Flags' EnumConstant 0x55b9ddfd6500 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8f00 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9398 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8ee0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55b9ddfd8ec0 <col:27> 'Handler::Flags' EnumConstant 0x55b9ddfd65d0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd8f90 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd93b0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd8f70 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55b9ddfd8f50 <col:22> 'Handler::Flags' EnumConstant 0x55b9ddfd6660 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd9020 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd93c8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9000 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55b9ddfd8fe0 <col:18> 'Handler::Flags' EnumConstant 0x55b9ddfd6730 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd90b0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd93e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9090 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55b9ddfd9070 <col:25> 'Handler::Flags' EnumConstant 0x55b9ddfd67c0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd9140 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b9ddfd93f8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9120 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55b9ddfd9100 <col:26> 'Handler::Flags' EnumConstant 0x55b9ddfd6850 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55b9ddfd91e0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55b9ddfd9410 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfd91c0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55b9ddfd9190 <col:20> 'Handler::Flags' EnumConstant 0x55b9ddfd69e0 'f_special' 'Handler::Flags'
|-EnumDecl 0x55b9ddfd9428 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55b9ddfd9530 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9a90 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9510 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55b9ddfd94f0 <col:12> 'Handler::Flags' EnumConstant 0x55b9ddfd5ce0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd95c0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9aa8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd95a0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55b9ddfd9580 <col:13> 'Handler::Flags' EnumConstant 0x55b9ddfd5d70 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd9650 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9ac0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9630 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55b9ddfd9610 <col:15> 'Handler::Flags' EnumConstant 0x55b9ddfd5e00 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd96e0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9ad8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd96c0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55b9ddfd96a0 <col:8> 'Handler::Flags' EnumConstant 0x55b9ddfd5fb0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd9770 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9af0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9750 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55b9ddfd9730 <col:9> 'Handler::Flags' EnumConstant 0x55b9ddfd6280 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd9800 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9b08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd97e0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55b9ddfd97c0 <col:14> 'Handler::Flags' EnumConstant 0x55b9ddfd6310 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd9890 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9b20 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9870 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55b9ddfd9850 <col:11> 'Handler::Flags' EnumConstant 0x55b9ddfd63a0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd9920 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9b38 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9900 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55b9ddfd98e0 <col:13> 'Handler::Flags' EnumConstant 0x55b9ddfd6430 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55b9ddfd99b0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b9ddfd9b50 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9990 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55b9ddfd9970 <col:20> 'Handler::Flags' EnumConstant 0x55b9ddfd6660 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55b9ddfd9a40 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55b9ddfd9b68 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfd9a20 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55b9ddfd9a00 <col:16> 'Handler::Flags' EnumConstant 0x55b9ddfd6730 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55b9ddfd9b80 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55b9ddfd9c40 <col:25> "" ""
| |-EnumConstantDecl 0x55b9ddfd9cf0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55b9ddfd9dd0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfd9cd0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55b9ddfd9cb0 <col:14> 'Handler::Flags' EnumConstant 0x55b9ddfd5e90 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55b9ddfd9d80 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55b9ddfd9de8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfd9d60 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55b9ddfd9d40 <col:17> 'Handler::Flags' EnumConstant 0x55b9ddfd5f20 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55b9ddfd9f68 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55b9ddfd9e10 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55b9ddfd9e90 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55b9ddfdddd8 <col:70, line:284:5>
|   |-ParenExpr 0x55b9ddfddbf8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55b9ddfddbc8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfdd8f8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfdd8c8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55b9ddfdd870 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55b9ddfdd850 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55b9ddfdd820 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55b9ddfdd740 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b9ddfda760
|   |   |   |   |   `-CXXThisExpr 0x55b9ddfdd730 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55b9ddfdd838 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55b9ddfdd800 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55b9ddfdd7e0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55b9ddfdd7b0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55b9ddfdd770 <col:34> 'Handler::Flags' EnumConstant 0x55b9ddfd5ce0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55b9ddfdd7c8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55b9ddfdd790 <col:43> 'Handler::Flags' EnumConstant 0x55b9ddfd67c0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55b9ddfdd8b0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55b9ddfdd890 <col:69> 'Handler::Flags' EnumConstant 0x55b9ddfd5ce0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55b9ddfdd958 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfdd938 <col:85> 'int' 0
|   |   `-CallExpr 0x55b9ddfddb28 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfddb10 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfddaf0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfddb68 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfdd9c8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55b9ddfddb80 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfdda18 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfddb98 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfdda50 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55b9ddfddbb0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfddad8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfddac0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfdda70 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55b9ddfdddc8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55b9ddfdddb0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55b9ddfddd80 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddfddd68 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55b9ddfddd48 <col:9, col:38> 'String' (CXXTemporary 0x55b9ddfddd48)
|             `-CallExpr 0x55b9ddfddce0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55b9ddfddcc8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55b9ddfddc58 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55b9ddfda270
|               |   `-MemberExpr 0x55b9ddfddc28 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55b9ddfda338
|               |     `-CXXThisExpr 0x55b9ddfddc18 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55b9ddfddd10 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55b9ddfddc88 <col:22> 'Element *' lvalue ParmVar 0x55b9ddfd9e10 'e' 'Element *'
|               `-ImplicitCastExpr 0x55b9ddfddd28 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55b9ddfddca8 <col:25> 'void *' lvalue ParmVar 0x55b9ddfd9e90 'new_user_data' 'void *'
|-AccessSpecDecl 0x55b9ddfda018 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55b9ddfda050 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55b9ddfda0a0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b9ddfda1f0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55b9ddfda270 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55b9ddfdb068 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55b9ddfdb068
| | `-ParmVarDecl 0x55b9ddfdb178 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55b9ddfdb218 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55b9ddfdb218
| | `-ParmVarDecl 0x55b9ddfdb328 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55b9ddfdb398 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b9ddfdb398
| |-CXXMethodDecl 0x55b9ddfdbc68 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55b9ddfdbc68
| | `-ParmVarDecl 0x55b9ddfdbd78 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55b9ddfdbde8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55b9ddfdbde8
| | `-ParmVarDecl 0x55b9ddfdbef8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55b9de1254e0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55b9de1255c0 <col:5>
|-FieldDecl 0x55b9ddfda338 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55b9ddfda3a0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b9ddfda4c8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55b9ddfda550 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55b9ddfdb4c8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55b9ddfdb4c8
| | `-ParmVarDecl 0x55b9ddfdb5d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55b9ddfdb678 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55b9ddfdb678
| | `-ParmVarDecl 0x55b9ddfdb788 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55b9ddfdb7f8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b9ddfdb7f8
| |-CXXMethodDecl 0x55b9ddfdbf98 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55b9ddfdbf98
| | `-ParmVarDecl 0x55b9ddfdc0a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55b9ddfdc118 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55b9ddfdc118
| | `-ParmVarDecl 0x55b9ddfdc228 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55b9de125620 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55b9de125700 <col:5>
|-FieldDecl 0x55b9ddfda618 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55b9ddfda698 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55b9ddfda700 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55b9ddfda760 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55b9ddfda7c8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55b9ddfda830 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55b9ddfda890 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55b9ddfda9b0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55b9ddfda908 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55b9ddfdc5e0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b9ddfdc5c8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b9ddfdc5b0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b9ddfdc590 <col:30, col:37> 'String' (CXXTemporary 0x55b9ddfdc590)
|           `-CXXTemporaryObjectExpr 0x55b9ddfdc558 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55b9ddfdab58 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55b9ddfdaa98 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55b9ddfdacd8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55b9ddfdac10 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55b9ddfdae98 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55b9ddfdaed8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55b9ddfdaed8
| `-ParmVarDecl 0x55b9ddfdafb8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55b9ddfdb908 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55b9ddfdb908
| `-ParmVarDecl 0x55b9ddfdba18 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55b9ddfdbab8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55b9ddfdbab8
| `-ParmVarDecl 0x55b9ddfdbbc8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55b9ddfdc298 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55b9ddfdc298
| `-ParmVarDecl 0x55b9ddfdc3a8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55b9ddfdc430 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55b9ddfdc430

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de10b858 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55b9de10ba68 prev 0x55b9de10b858 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de10d0f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b9de10d0a0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55b9de10ca10 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55b9de10c8c0 'type'
|     `-SubstTemplateTypeParmType 0x55b9ddf61f00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9ddf61a50 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b9ddf61968 'sized_array_memory'
|-FieldDecl 0x55b9de10d1f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b9de10d240 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de10d278 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55b9de10bb00 'void *' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-PointerType 0x55b9dda79ce0 'void *'
|     `-BuiltinType 0x55b9dda794e0 'void'
|-TypedefDecl 0x55b9de10d308 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55b9de10d2d0 'void *&'
|   `-SubstTemplateTypeParmType 0x55b9de10bb00 'void *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9dda79ce0 'void *'
|       `-BuiltinType 0x55b9dda794e0 'void'
|-TypedefDecl 0x55b9de10d3c8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55b9de10d390 'void *const &'
|   `-QualType 0x55b9de10bb01 'void *const' const
|     `-SubstTemplateTypeParmType 0x55b9de10bb00 'void *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9dda79ce0 'void *'
|         `-BuiltinType 0x55b9dda794e0 'void'
|-TypedefDecl 0x55b9de10d458 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55b9de10d420 'void **'
|   `-SubstTemplateTypeParmType 0x55b9de10bb00 'void *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9dda79ce0 'void *'
|       `-BuiltinType 0x55b9dda794e0 'void'
|-TypedefDecl 0x55b9de10d4e8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55b9de10d4b0 'void *const *'
|   `-QualType 0x55b9de10bb01 'void *const' const
|     `-SubstTemplateTypeParmType 0x55b9de10bb00 'void *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9dda79ce0 'void *'
|         `-BuiltinType 0x55b9dda794e0 'void'
|-TypedefDecl 0x55b9de10e0d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55b9de10e080 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55b9de10e060 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55b9de10dff0 'type'
|     `-SubstTemplateTypeParmType 0x55b9de10ddb0 'void *' sugar
|       |-TemplateTypeParmType 0x55b9ddd4dc20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd4dbd0 'T'
|       `-PointerType 0x55b9dda79ce0 'void *'
|         `-BuiltinType 0x55b9dda794e0 'void'
|-TypedefDecl 0x55b9de10e138 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55b9de10d390 'void *const &'
|   `-QualType 0x55b9de10bb01 'void *const' const
|     `-SubstTemplateTypeParmType 0x55b9de10bb00 'void *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9dda79ce0 'void *'
|         `-BuiltinType 0x55b9dda794e0 'void'
|-TypedefDecl 0x55b9de10e190 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de10e1f8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55b9de10d420 'void **'
|   `-SubstTemplateTypeParmType 0x55b9de10bb00 'void *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9dda79ce0 'void *'
|       `-BuiltinType 0x55b9dda794e0 'void'
|-TypedefDecl 0x55b9de10e260 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55b9de10d4b0 'void *const *'
|   `-QualType 0x55b9de10bb01 'void *const' const
|     `-SubstTemplateTypeParmType 0x55b9de10bb00 'void *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9dda79ce0 'void *'
|         `-BuiltinType 0x55b9dda794e0 'void'
|-EnumDecl 0x55b9de10e2b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de10e3b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de10e390 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de10e438 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de10e688 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de10e4f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de10e590 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55b9de10e948 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55b9de10e830 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55b9de10ec08 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55b9de10eaf0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55b9de10ef50 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55b9de10ee30 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55b9de10f260 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55b9de10f140 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55b9de10f550 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de10f398 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de10f410 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55b9de10f6a8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55b9de10f788 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de10f7e0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de10f828 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55b9de10f8d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de10f930 <col:30> Inherited
|-CXXMethodDecl 0x55b9de10f9f8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de10faa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de10fb00 <col:30> Inherited
|-CXXMethodDecl 0x55b9de10fb48 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de10fbf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de10fc50 <col:30> Inherited
|-CXXMethodDecl 0x55b9de10fc98 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de10fd48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de10fda0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de10fde8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de10fe98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de10fef0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de10ff18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de10ffc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de110078 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de110238 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de110128 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de1101a0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55b9de110388 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de1102f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de110538 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55b9de110440 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de1105f0 <col:20>
| `-OptimizeNoneAttr 0x55b9de110648 <col:30>
|-CXXMethodDecl 0x55b9de110768 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de110670 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de110820 <col:20>
| `-OptimizeNoneAttr 0x55b9de110878 <col:30>
|-CXXMethodDecl 0x55b9de110930 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de1108a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de110a78 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de1109e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de110ba8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55b9de110cd8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55b9de110da8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55b9de110e78 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55b9de110fb8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de110f28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de111100 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de111070 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de111248 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de1111b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de111300 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de111400 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de111370 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de1114b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de111578 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55b9de111678 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55b9de1117f8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de111738 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55b9de111fb8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de1118b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55b9de111f18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55b9de111e18 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55b9de112098 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de1121e8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de112158 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55b9de1122a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de1124e8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de112360 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55b9de1123d8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55b9de1126a8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55b9de1125b8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55b9de1128f8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55b9de112770 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55b9de1127e8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55b9de1129b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de112c18 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55b9de112b20 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55b9de112ce8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de112ce8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de112ee0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55b9de112ff8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55b9de113088 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55b9de113190 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55b9de1131e0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9de113170 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55b9de113150 <col:27> 'int' 4096
|-FieldDecl 0x55b9de113208 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55b9de113270 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55b9de113468 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55b9de1134f8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55b9de1136b8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55b9de113558 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55b9de1135d0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55b9de113208 'name' 'String'
| | `-CXXConstructExpr 0x55b9de11ffc8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55b9de11ff88 <col:20> 'const String' lvalue ParmVar 0x55b9de113558 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55b9de113270 'nsig' 'int'
| | `-IntegerLiteral 0x55b9de120020 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55b9de113468 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55b9de120108 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55b9de1134f8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55b9de1200c8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b9de120088 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55b9de1135d0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55b9de120398 <col:42, line:289:9>
|   `-CallExpr 0x55b9de120348 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55b9de120330 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55b9de120310 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55b9ddcdd4d8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55b9de120380 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55b9de120258 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55b9de120238 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55b9de120220 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b9de1201d0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55b9de113468
|     |     |   `-CXXThisExpr 0x55b9de1201c0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55b9de120200 <col:25> 'int' 0
|     |-IntegerLiteral 0x55b9de120270 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55b9de1202f0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55b9de1202d0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55b9de1202a0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55b9de113468 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55b9de120290 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55b9de113798 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55b9de113798
| `-ParmVarDecl 0x55b9de1138a8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55b9de113948 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55b9de113948
| `-ParmVarDecl 0x55b9de113a58 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55b9de113af8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55b9de113af8
| `-ParmVarDecl 0x55b9de113c08 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55b9de113c78 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55b9de113c78
| `-ParmVarDecl 0x55b9de113d88 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55b9de113e10 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55b9de113e10

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de0d14f0 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9de0d1608 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55b9de0d1698 <col:21, col:27> col:21 public
|-EnumDecl 0x55b9de0d16c0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55b9de0d17d8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55b9de0d17b8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55b9de0d17a0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b9de0d1780 <col:32> 'int' 1
| `-EnumConstantDecl 0x55b9de0d1880 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55b9de0d1860 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55b9de0d1848 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55b9de0d1828 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55b9de0d1930 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55b9de0d1e68 <col:19, col:21>
|-CXXDestructorDecl 0x55b9de0d1a20 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55b9de0d1e78 <col:28, col:30>
|-CXXMethodDecl 0x55b9de0d1be0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55b9de0d1b10 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55b9de0d1ce8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55b9de0d1ce8
  `-ParmVarDecl 0x55b9de0d1df8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de0d2400 prev 0x55b9de0ad610 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55b9de0d24f8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55b9de0d2588 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55b9de0d25f8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55b9de0d26b8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55b9de0d2778 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55b9de0d2838 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55b9de0d28f8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55b9de0d2998 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55b9de0d2af8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55b9de0d2ad8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55b9de0d2ab8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55b9de0d2a80 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55b9de0d2a60 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55b9de0d2a98 <col:42> 'int' 1
|-CXXMethodDecl 0x55b9de0d2b98 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55b9de0d2d08 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55b9de0d2c48 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b9de0d2e50 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55b9de0d2dc0 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55b9de0d2f18 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55b9de0d3110 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55b9de0d31d8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55b9de0d3320 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55b9de0d3290 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55b9de0d33e8 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55b9de0d35e8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55b9de0d3498 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55b9de0d3518 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55b9de0d3778 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55b9de0d36b0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55b9de0d38c8 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55b9de0d3838 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55b9de0d3a18 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55b9de0d3988 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55b9de0d3b68 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55b9de0d3ad8 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55b9de0d3d78 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55b9de0d3c28 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55b9de0d3ca0 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55b9de0d3f88 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55b9de0d3e38 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55b9de0d3eb0 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b9de11cc10 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b9de11cbf0 <col:60> 'int' 0
|-CXXMethodDecl 0x55b9de0d4218 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55b9de0d4048 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55b9de0d40c0 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55b9de0d4138 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b9de11cc48 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b9de11cc28 <col:76> 'int' 0
|-CXXMethodDecl 0x55b9de0d44b8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55b9de0d42e0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55b9de0d4358 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55b9de0d43d0 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b9de11cc80 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b9de11cc60 <col:84> 'int' 0
|-CXXMethodDecl 0x55b9de0d47f0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55b9de0d4580 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55b9de0d45f8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55b9de0d4678 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55b9de0d46f0 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55b9de0d4aa0 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55b9de0d48c0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55b9de0d4940 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55b9de0d49b8 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55b9de0d4d08 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55b9de0d4b68 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55b9de0d4be8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55b9de0d4c60 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55b9de0d5190 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55b9de0d4dd0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55b9de0d4e50 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55b9de0d4ef8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55b9de0d5040 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55b9de0d5250 <col:115> "" ""
|-CXXMethodDecl 0x55b9de0d5610 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55b9de0d52d0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55b9de0d5350 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55b9de0d53c8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55b9de0d5510 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55b9de0d56d0 <col:113> "" ""
|-CXXMethodDecl 0x55b9de0d5820 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55b9de0d5758 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55b9de0d59f0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55b9de0d58e0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55b9de0d5958 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55b9de0d5bf8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55b9de0d5ab0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55b9de0d5b28 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55b9de0d5ff8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55b9de0d5cb8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55b9de0d5d30 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55b9de0d5da8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b9de0d5e28 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55b9de0d5ea0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9de11ccb8 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9de11cc98 <col:137> 'int' 0
|-CXXMethodDecl 0x55b9de0d6408 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55b9de0d60d0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55b9de0d6148 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55b9de0d61c0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9de0d6240 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55b9de0d62b8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9de11ccf0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9de11ccd0 <col:139> 'int' 0
|-CXXMethodDecl 0x55b9de0d68b8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55b9de0d64e0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55b9de0d6558 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55b9de0d65d0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b9de0d6648 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9de0d66c8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55b9de11cd28 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9de11cd08 <col:133> 'int' 0
| `-ParmVarDecl 0x55b9de0d6748 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55b9de11cd60 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55b9de11cd40 <col:160> 'int' 0
|-CXXMethodDecl 0x55b9de0d6c50 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55b9de0d6998 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55b9de0d6a10 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55b9de0d6a88 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b9de0d6b00 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9de11cd98 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9de11cd78 <col:116> 'int' 0
|-EnumDecl 0x55b9de0d6d10 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55b9de0d6e10 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55b9de0d6e60 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9de0d6df0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55b9de0d6dd0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55b9de0d6fe0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55b9de0d6e88 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55b9de0d6f00 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55b9de0d71f8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55b9de0d70a0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55b9de0d7120 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55b9de0d7528 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55b9de0d72b8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55b9de0d7410 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55b9de0d76b0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55b9de0d75e8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55b9de0d7860 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55b9de0d7768 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55b9de0d7a70 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55b9de0d7918 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55b9de0d7998 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55b9de0d7bf8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55b9de0d7b30 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55b9de0d7d18 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55b9de0d7e08 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55b9de0d7f78 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55b9de0d7eb8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55b9de0d8100 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55b9de0d8030 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55b9de0d8308 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55b9de0d81b8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55b9de0d8238 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55b9de0d8438 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55b9de0d8528 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55b9de0d85e8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55b9de0d87e8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55b9de0d8698 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55b9de0d8710 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55b9de11ce48 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b9de11ce30 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b9de11ce18 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b9de11cdf8 <col:58, col:65> 'String' (CXXTemporary 0x55b9de11cdf8)
|           `-CXXTemporaryObjectExpr 0x55b9de11cdc0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55b9de0d89b8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55b9de0d88a8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55b9de0d8920 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55b9de11cef8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b9de11cee0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b9de11cec8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b9de11cea8 <col:71, col:78> 'String' (CXXTemporary 0x55b9de11cea8)
|           `-CXXTemporaryObjectExpr 0x55b9de11ce70 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55b9de0d8b88 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55b9de0d8a78 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55b9de0d8af0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55b9de11cfa8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b9de11cf90 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b9de11cf78 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b9de11cf58 <col:71, col:78> 'String' (CXXTemporary 0x55b9de11cf58)
|           `-CXXTemporaryObjectExpr 0x55b9de11cf20 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55b9de0d8d58 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55b9de0d8c48 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55b9de0d8cc0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55b9de11d058 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b9de11d040 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b9de11d028 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b9de11d008 <col:70, col:77> 'String' (CXXTemporary 0x55b9de11d008)
|           `-CXXTemporaryObjectExpr 0x55b9de11cfd0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55b9de0d8ed8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55b9de0d8e18 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55b9de0d90f8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55b9de0d8f90 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55b9de0d9008 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55b9de0d91f8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55b9de0d91f8
|-CXXMethodDecl 0x55b9de0d9300 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55b9de0d93c0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b9de0d9480 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55b9de0d9540 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55b9de0d9738 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55b9de0d95f0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55b9de0d9668 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55b9de0d9af0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55b9de0d97f8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55b9de0d9870 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55b9de0d98e8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55b9de0d9960 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55b9de0d99e0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55b9de0d9e50 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55b9de0d9bd0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55b9de0d9c50 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55b9de0d9cd0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55b9de0d9d50 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55b9de0d9f30 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55b9de0da070 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55b9de0d9fe0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55b9de0da1c0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b9de0da128 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de0da3c8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55b9de0da278 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55b9de0da2f0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de0da548 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55b9de0da488 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de0da690 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55b9de0da600 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55b9de0da8d0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55b9de0da750 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55b9de0da7f8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55b9de0daa58 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55b9de0da990 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55b9de0dab00 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b9de0dac18 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55b9de0dacc0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55b9de0dad28 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55b9de0dade0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55b9de11d080 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55b9de0dafb8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55b9de0daea0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55b9de0daf20 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55b9de0dacc0 'idx' 'int'
| | | `-ImplicitCastExpr 0x55b9de11d0d0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b9de11d090 <col:19> 'int' lvalue ParmVar 0x55b9de0daea0 'i' 'int'
| | |-CXXCtorInitializer Field 0x55b9de0dad28 'port' 'int'
| | | `-ImplicitCastExpr 0x55b9de11d150 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b9de11d110 <col:28> 'int' lvalue ParmVar 0x55b9de0daf20 'p' 'int'
| | `-CompoundStmt 0x55b9de11d1a0 <col:31, line:153:9>
| |-CXXMethodDecl 0x55b9de0db1a8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55b9de0db0a8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55b9de11d3a0 <col:46, line:157:9>
| |   `-ReturnStmt 0x55b9de11d390 <line:156:13, col:46>
| |     `-BinaryOperator 0x55b9de11d370 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55b9de11d270 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55b9de11d240 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55b9de11d1c0 <col:20> 'const int' lvalue ->idx 0x55b9de0dacc0
| |       | |   `-CXXThisExpr 0x55b9de11d1b0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55b9de11d258 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55b9de11d210 <col:27, col:29> 'const int' lvalue .idx 0x55b9de0dacc0
| |       |     `-DeclRefExpr 0x55b9de11d1f0 <col:27> 'const Router::Port' lvalue ParmVar 0x55b9de0db0a8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55b9de11d350 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55b9de11d320 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55b9de11d2a0 <col:36> 'const int' lvalue ->port 0x55b9de0dad28
| |         |   `-CXXThisExpr 0x55b9de11d290 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55b9de11d338 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55b9de11d2f0 <col:44, col:46> 'const int' lvalue .port 0x55b9de0dad28
| |             `-DeclRefExpr 0x55b9de11d2d0 <col:44> 'const Router::Port' lvalue ParmVar 0x55b9de0db0a8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55b9de0db2f0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55b9de0db260 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55b9de11d5a8 <col:46, line:160:9>
| |   `-ReturnStmt 0x55b9de11d598 <line:159:13, col:46>
| |     `-BinaryOperator 0x55b9de11d578 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55b9de11d478 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55b9de11d448 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55b9de11d3c8 <col:20> 'const int' lvalue ->idx 0x55b9de0dacc0
| |       | |   `-CXXThisExpr 0x55b9de11d3b8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55b9de11d460 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55b9de11d418 <col:27, col:29> 'const int' lvalue .idx 0x55b9de0dacc0
| |       |     `-DeclRefExpr 0x55b9de11d3f8 <col:27> 'const Router::Port' lvalue ParmVar 0x55b9de0db260 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55b9de11d558 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55b9de11d528 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55b9de11d4a8 <col:36> 'const int' lvalue ->port 0x55b9de0dad28
| |         |   `-CXXThisExpr 0x55b9de11d498 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55b9de11d540 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55b9de11d4f8 <col:44, col:46> 'const int' lvalue .port 0x55b9de0dad28
| |             `-DeclRefExpr 0x55b9de11d4d8 <col:44> 'const Router::Port' lvalue ParmVar 0x55b9de0db260 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55b9de0db438 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55b9de0db3a8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55b9de11d8d0 <col:45, line:163:9>
| |   `-ReturnStmt 0x55b9de11d8c0 <line:162:13, col:65>
| |     `-BinaryOperator 0x55b9de11d8a0 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55b9de11d680 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55b9de11d650 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55b9de11d5d0 <col:20> 'const int' lvalue ->idx 0x55b9de0dacc0
| |       | |   `-CXXThisExpr 0x55b9de11d5c0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55b9de11d668 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55b9de11d620 <col:26, col:28> 'const int' lvalue .idx 0x55b9de0dacc0
| |       |     `-DeclRefExpr 0x55b9de11d600 <col:26> 'const Router::Port' lvalue ParmVar 0x55b9de0db3a8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55b9de11d880 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55b9de11d860 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55b9de11d760 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55b9de11d730 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55b9de11d6b0 <col:36> 'const int' lvalue ->idx 0x55b9de0dacc0
| |           | |   `-CXXThisExpr 0x55b9de11d6a0 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55b9de11d748 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55b9de11d700 <col:43, col:45> 'const int' lvalue .idx 0x55b9de0dacc0
| |           |     `-DeclRefExpr 0x55b9de11d6e0 <col:43> 'const Router::Port' lvalue ParmVar 0x55b9de0db3a8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55b9de11d840 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55b9de11d810 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55b9de11d790 <col:52> 'const int' lvalue ->port 0x55b9de0dad28
| |             |   `-CXXThisExpr 0x55b9de11d780 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55b9de11d828 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55b9de11d7e0 <col:59, col:61> 'const int' lvalue .port 0x55b9de0dad28
| |                 `-DeclRefExpr 0x55b9de11d7c0 <col:59> 'const Router::Port' lvalue ParmVar 0x55b9de0db3a8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55b9de0db580 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55b9de0db4f0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55b9de11dbf8 <col:46, line:166:9>
| |   `-ReturnStmt 0x55b9de11dbe8 <line:165:13, col:66>
| |     `-BinaryOperator 0x55b9de11dbc8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55b9de11d9a8 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55b9de11d978 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55b9de11d8f8 <col:20> 'const int' lvalue ->idx 0x55b9de0dacc0
| |       | |   `-CXXThisExpr 0x55b9de11d8e8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55b9de11d990 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55b9de11d948 <col:26, col:28> 'const int' lvalue .idx 0x55b9de0dacc0
| |       |     `-DeclRefExpr 0x55b9de11d928 <col:26> 'const Router::Port' lvalue ParmVar 0x55b9de0db4f0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55b9de11dba8 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55b9de11db88 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55b9de11da88 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55b9de11da58 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55b9de11d9d8 <col:36> 'const int' lvalue ->idx 0x55b9de0dacc0
| |           | |   `-CXXThisExpr 0x55b9de11d9c8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55b9de11da70 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55b9de11da28 <col:43, col:45> 'const int' lvalue .idx 0x55b9de0dacc0
| |           |     `-DeclRefExpr 0x55b9de11da08 <col:43> 'const Router::Port' lvalue ParmVar 0x55b9de0db4f0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55b9de11db68 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55b9de11db38 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55b9de11dab8 <col:52> 'const int' lvalue ->port 0x55b9de0dad28
| |             |   `-CXXThisExpr 0x55b9de11daa8 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55b9de11db50 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55b9de11db08 <col:60, col:62> 'const int' lvalue .port 0x55b9de0dad28
| |                 `-DeclRefExpr 0x55b9de11dae8 <col:60> 'const Router::Port' lvalue ParmVar 0x55b9de0db4f0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55b9de11dc10 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55b9de11dc10
| | `-ParmVarDecl 0x55b9de11dd28 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55b9de11ddc8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55b9de11ddc8
| | `-ParmVarDecl 0x55b9de11ded8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55b9de11df70 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b9de11e240 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55b9de11e240
| | `-ParmVarDecl 0x55b9de11e348 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55b9de11e3b8 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55b9de11e4c8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55b9de11e7e8 <col:12>
|     |-BinaryOperator 0x55b9de11e688 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55b9de11e640 <col:12> 'int' lvalue ->idx 0x55b9de0dacc0
|     | | `-CXXThisExpr 0x55b9de11e630 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55b9de11e670 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55b9de11e600 <col:12> 'int' xvalue .idx 0x55b9de0dacc0
|     |     `-CXXStaticCastExpr 0x55b9de11e5d0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55b9de11e5a0 <col:12> 'Router::Port' lvalue ParmVar 0x55b9de11e4c8 '' 'Router::Port &&'
|     |-BinaryOperator 0x55b9de11e790 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55b9de11e748 <col:12> 'int' lvalue ->port 0x55b9de0dad28
|     | | `-CXXThisExpr 0x55b9de11e738 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55b9de11e778 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55b9de11e708 <col:12> 'int' xvalue .port 0x55b9de0dad28
|     |     `-CXXStaticCastExpr 0x55b9de11e6d8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55b9de11e6a8 <col:12> 'Router::Port' lvalue ParmVar 0x55b9de11e4c8 '' 'Router::Port &&'
|     `-ReturnStmt 0x55b9de11e7d8 <col:12>
|       `-UnaryOperator 0x55b9de11e7c0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de11e7b0 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55b9de0db640 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b9de0db758 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55b9de0db948 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55b9de0dba00 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55b9de0db948 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55b9de11df48 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55b9de11e080 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55b9de0dbd38 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55b9de0dbac0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55b9de0dbb40 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55b9de0dbbc0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55b9de0dbc40 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55b9de0db948 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55b9de11e090 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55b9de11eac8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55b9de11e8b8 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55b9de11e880 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55b9de11e868 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55b9de11e550 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55b9de11e3b8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55b9de11e160 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55b9de11e148 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55b9de11e0f8 <col:13> 'Router::Port [2]' lvalue ->p 0x55b9de0db948
| |   |   | |   `-CXXThisExpr 0x55b9de11e0e8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55b9de11e128 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55b9de11e538 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55b9de11e200 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55b9de11e1d0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55b9de11e190 <col:25> 'int' lvalue ParmVar 0x55b9de0dbbc0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55b9de11e1e8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55b9de11e1b0 <col:33> 'int' lvalue ParmVar 0x55b9de0dbc40 'to_port' 'int'
| |   `-ExprWithCleanups 0x55b9de11eab0 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55b9de11ea78 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55b9de11ea60 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55b9de11ea40 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55b9de11e3b8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55b9de11e948 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55b9de11e930 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55b9de11e8e0 <col:13> 'Router::Port [2]' lvalue ->p 0x55b9de0db948
| |       | |   `-CXXThisExpr 0x55b9de11e8d0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55b9de11e910 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55b9de11ea28 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55b9de11e9e8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55b9de11e9b8 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55b9de11e978 <col:25> 'int' lvalue ParmVar 0x55b9de0dbac0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55b9de11e9d0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55b9de11e998 <col:35> 'int' lvalue ParmVar 0x55b9de0dbb40 'from_port' 'int'
| |-CXXMethodDecl 0x55b9de0dbf08 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55b9de0dbe18 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55b9de11f088 <col:45, line:182:9>
| |   |-ParenExpr 0x55b9de11ef68 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55b9de11ef38 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55b9de11ec08 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55b9de11ebd8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55b9de11eb40 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55b9de11eb28 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55b9de11eae8 <col:34> 'int' lvalue ParmVar 0x55b9de0dbe18 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55b9de11eb08 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55b9de11ebb8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55b9de11eba0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55b9de11eb60 <col:44> 'int' lvalue ParmVar 0x55b9de0dbe18 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55b9de11eb80 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55b9de11ec68 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55b9de11ec48 <col:59> 'int' 0
| |   |   `-CallExpr 0x55b9de11ee98 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55b9de11ee80 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55b9de11ee60 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55b9de11eed8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55b9de11ecd8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55b9de11eef0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55b9de11ed00 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55b9de11ef08 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55b9de11ed38 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55b9de11ef20 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55b9de11ee48 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55b9de11ee30 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55b9de11edd8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55b9de11f078 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55b9de11f058 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55b9de11f028 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55b9de11ef98 <col:20> 'Router::Port const[2]' lvalue ->p 0x55b9de0db948
| |       |   `-CXXThisExpr 0x55b9de11ef88 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55b9de11f040 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55b9de11efc8 <col:22> 'int' lvalue ParmVar 0x55b9de0dbe18 'i' 'int'
| |-CXXMethodDecl 0x55b9de0dc0b8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55b9de0dbfc8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55b9de11f600 <col:33, line:186:9>
| |   |-ParenExpr 0x55b9de11f520 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55b9de11f4f0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55b9de11f1c8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55b9de11f198 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55b9de11f100 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55b9de11f0e8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55b9de11f0a8 <col:34> 'int' lvalue ParmVar 0x55b9de0dbfc8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55b9de11f0c8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55b9de11f178 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55b9de11f160 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55b9de11f120 <col:44> 'int' lvalue ParmVar 0x55b9de0dbfc8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55b9de11f140 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55b9de11f228 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55b9de11f208 <col:59> 'int' 0
| |   |   `-CallExpr 0x55b9de11f450 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55b9de11f438 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55b9de11f418 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55b9de11f490 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55b9de11f298 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55b9de11f4a8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55b9de11f2c0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55b9de11f4c0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55b9de11f2f8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55b9de11f4d8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55b9de11f400 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55b9de11f3e8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55b9de11f398 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55b9de11f5f0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55b9de11f5d0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55b9de11f5a0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55b9de11f550 <col:20> 'Router::Port [2]' lvalue ->p 0x55b9de0db948
| |       |   `-CXXThisExpr 0x55b9de11f540 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55b9de11f5b8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55b9de11f580 <col:22> 'int' lvalue ParmVar 0x55b9de0dbfc8 'i' 'int'
| |-CXXMethodDecl 0x55b9de0dc258 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55b9de0dc198 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55b9de11f9d8 <col:52, line:190:9>
| |   `-ReturnStmt 0x55b9de11f9c8 <line:189:13, col:51>
| |     `-BinaryOperator 0x55b9de11f9a8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55b9de11f7c0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55b9de11f7a8 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55b9de11f760 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b9de0db1a8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55b9de11f698 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55b9de11f680 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55b9de11f630 <col:20> 'Router::Port const[2]' lvalue ->p 0x55b9de0db948
| |       | | |   `-CXXThisExpr 0x55b9de11f620 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55b9de11f660 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55b9de11f740 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55b9de11f728 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55b9de11f6d8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55b9de0db948
| |       |   |   `-DeclRefExpr 0x55b9de11f6b8 <col:28> 'const Router::Connection' lvalue ParmVar 0x55b9de0dc198 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55b9de11f708 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55b9de11f970 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55b9de11f958 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55b9de11f938 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b9de0db1a8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55b9de11f870 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55b9de11f858 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55b9de11f808 <col:38> 'Router::Port const[2]' lvalue ->p 0x55b9de0db948
| |         | |   `-CXXThisExpr 0x55b9de11f7f8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55b9de11f838 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55b9de11f918 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55b9de11f900 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55b9de11f8b0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55b9de0db948
| |           |   `-DeclRefExpr 0x55b9de11f890 <col:46> 'const Router::Connection' lvalue ParmVar 0x55b9de0dc198 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55b9de11f8e0 <col:50> 'int' 1
| `-CXXMethodDecl 0x55b9de0dc3a0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55b9de0dc310 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55b9de11ff70 <col:51, line:193:9>
|     `-ReturnStmt 0x55b9de11ff60 <line:192:13, col:69>
|       `-BinaryOperator 0x55b9de11ff40 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55b9de11fb68 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55b9de11fb50 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55b9de11fb30 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b9de0db438 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55b9de11fa68 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55b9de11fa50 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55b9de11fa00 <col:20> 'Router::Port const[2]' lvalue ->p 0x55b9de0db948
|         | | |   `-CXXThisExpr 0x55b9de11f9f0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55b9de11fa30 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55b9de11fb10 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55b9de11faf8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55b9de11faa8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55b9de0db948
|         |   |   `-DeclRefExpr 0x55b9de11fa88 <col:27> 'const Router::Connection' lvalue ParmVar 0x55b9de0dc310 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55b9de11fad8 <col:31> 'int' 0
|         `-ParenExpr 0x55b9de11ff20 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55b9de11ff00 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55b9de11fd18 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55b9de11fd00 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55b9de11fce0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b9de0db1a8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55b9de11fc18 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55b9de11fc00 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55b9de11fbb0 <col:38> 'Router::Port const[2]' lvalue ->p 0x55b9de0db948
|             | | |   `-CXXThisExpr 0x55b9de11fba0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55b9de11fbe0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55b9de11fcc0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55b9de11fca8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55b9de11fc58 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55b9de0db948
|             |   |   `-DeclRefExpr 0x55b9de11fc38 <col:46> 'const Router::Connection' lvalue ParmVar 0x55b9de0dc310 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55b9de11fc88 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55b9de11fec8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55b9de11feb0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b9de11fe90 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b9de0db438 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55b9de11fdc8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55b9de11fdb0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55b9de11fd60 <col:56> 'Router::Port const[2]' lvalue ->p 0x55b9de0db948
|               | |   `-CXXThisExpr 0x55b9de11fd50 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55b9de11fd90 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55b9de11fe70 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55b9de11fe58 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55b9de11fe08 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55b9de0db948
|                 |   `-DeclRefExpr 0x55b9de11fde8 <col:63> 'const Router::Connection' lvalue ParmVar 0x55b9de0dc310 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55b9de11fe38 <col:67> 'int' 1
|-AccessSpecDecl 0x55b9de0dc460 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55b9de0dc488 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55b9de0dc540 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55b9de0dc600 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55b9de0dc650 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55b9de0dc6a0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55b9de0dc6f0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55b9de0dc740 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55b9de0dc790 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55b9de0dc8a8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55b9de0dc888 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55b9de0dc870 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b9de0dc850 <col:25> 'int' 2
| |-EnumConstantDecl 0x55b9de0dc950 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55b9de0dc930 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55b9de0dc918 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b9de0dc8f8 <col:48> 'int' 1
| |-EnumConstantDecl 0x55b9de0dc9e0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55b9de0dc9c0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55b9de0dc9a0 <col:71> 'int' 0
| |-EnumConstantDecl 0x55b9de0dca70 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55b9de0dca50 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55b9de0dca30 <col:30> 'int' 1
| `-EnumConstantDecl 0x55b9de0dcb00 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55b9de0dcae0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55b9de0dcac0 <col:50> 'int' 2
|-FieldDecl 0x55b9de0dcb60 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55b9de0dcbc0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55b9de0dcc28 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55b9de0dccc8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55b9de0dcca8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55b9de0dcc78 <col:30> 'int' 1
|-FieldDecl 0x55b9de0dcd68 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55b9de0dcd48 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55b9de0dcd18 <col:33> 'int' 1
|-FieldDecl 0x55b9de0dce08 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55b9de0dcde8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55b9de0dcdb8 <col:32> 'int' 1
|-FieldDecl 0x55b9de0dce70 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55b9de0dced0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55b9de0dcfd0 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55b9de0ead70 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b9de0eae70 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b9de0f32c0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55b9de0f33d0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55b9de0f3420 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55b9de0f3538 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55b9de0f35d8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55b9de0f3638 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55b9de0f36d0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55b9de0f36d0
| | `-ParmVarDecl 0x55b9de0f37e8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55b9de0f3888 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55b9de0f3888
| | `-ParmVarDecl 0x55b9de0f3998 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55b9de0f3a38 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55b9de0f3a38
| | `-ParmVarDecl 0x55b9de0f3b48 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55b9de0f3bb8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55b9de0f3bb8
| | `-ParmVarDecl 0x55b9de0f3cc8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55b9de0f3d50 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55b9de0f3d50
|-FieldDecl 0x55b9de100730 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55b9de100790 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55b9de1008a0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55b9de100bf8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55b9de100d00 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b9de10add0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55b9de10aee0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55b9de10afe0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b9de10b0f0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b9de10b200 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b9de10b310 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b9de10b420 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55b9de10b470 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55b9de10b570 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55b9de10b5c0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9de10b550 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55b9de10b530 <col:29> 'int' 256
|-FieldDecl 0x55b9de10b620 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55b9de10b688 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55b9de10b6f0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55b9de10b7f0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b9de112dd0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55b9de112e30 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55b9de112e90 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55b9de112ee0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55b9de112ff8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55b9de113088 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55b9de113190 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55b9de1131e0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55b9de113170 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55b9de113150 <col:27> 'int' 4096
| |-FieldDecl 0x55b9de113208 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55b9de113270 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55b9de113468 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55b9de1134f8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55b9de1136b8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55b9de113558 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55b9de1135d0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55b9de113208 'name' 'String'
| | | `-CXXConstructExpr 0x55b9de11ffc8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55b9de11ff88 <col:20> 'const String' lvalue ParmVar 0x55b9de113558 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55b9de113270 'nsig' 'int'
| | | `-IntegerLiteral 0x55b9de120020 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55b9de113468 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55b9de120108 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55b9de1134f8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55b9de1200c8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b9de120088 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55b9de1135d0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55b9de120398 <col:42, line:289:9>
| |   `-CallExpr 0x55b9de120348 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55b9de120330 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55b9de120310 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55b9ddcdd4d8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55b9de120380 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55b9de120258 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55b9de120238 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55b9de120220 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55b9de1201d0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55b9de113468
| |     |     |   `-CXXThisExpr 0x55b9de1201c0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55b9de120200 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55b9de120270 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55b9de1202f0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55b9de1202d0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55b9de1202a0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55b9de113468 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55b9de120290 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55b9de113798 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55b9de113798
| | `-ParmVarDecl 0x55b9de1138a8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55b9de113948 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55b9de113948
| | `-ParmVarDecl 0x55b9de113a58 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55b9de113af8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55b9de113af8
| | `-ParmVarDecl 0x55b9de113c08 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55b9de113c78 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55b9de113c78
| | `-ParmVarDecl 0x55b9de113d88 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55b9de113e10 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55b9de113e10
|-FieldDecl 0x55b9de113f00 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55b9de113f60 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55b9de113fc0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55b9de114020 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55b9de114080 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55b9de114190 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b9de114290 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b9de1142f0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55b9de114438 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55b9de114378 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55b9de1145e8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55b9de1144f8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55b9de114730 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55b9de1146a0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55b9de114ad8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55b9de1147e8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55b9de114860 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55b9de1148e0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55b9de114958 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55b9de1149d0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9de11d070 <col:57> 'bool' false
|-CXXMethodDecl 0x55b9de114c48 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b9de114bb0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de114d98 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b9de114d00 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de114ee8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b9de114e50 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de11a5a0 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55b9de114fa8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55b9de11a8c0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55b9de11a658 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55b9de11a6d0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55b9de11a750 <col:56> col:59 'int'
| `-ParmVarDecl 0x55b9de11a7c8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de11aa28 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b9de11a990 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de11aaf0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55b9de11abb0 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55b9de11adb0 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55b9de11ac60 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55b9de11acd8 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55b9de11ae80 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55b9de11afc8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55b9de11af30 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55b9de1205d0 <col:42, line:326:5>
|   `-ReturnStmt 0x55b9de1205c0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55b9de1205a8 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55b9de120588 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55b9de120558 <col:16, col:45> '<bound member function type>' .back 0x55b9de037c18
|           `-ArraySubscriptExpr 0x55b9de1204d8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55b9de1204a8 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b9de1203c0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55b9de100bf8
|             |   `-CXXThisExpr 0x55b9de1203b0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55b9de1204c0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55b9de1203f0 <col:38> 'bool' lvalue ParmVar 0x55b9de11af30 'isout' 'bool'
|-CXXMethodDecl 0x55b9de11b198 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55b9de11b080 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55b9de11b0f8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55b9de11b2f0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55b9de11b258 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55b9de11b598 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55b9de11b3a8 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55b9de11b420 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55b9de11b4a0 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55b9de11b770 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55b9de11b660 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55b9de11b6d8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55b9de11b8f8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55b9de11b838 <col:30> col:33 'int'
|-CXXMethodDecl 0x55b9de11bb90 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55b9de11b9b8 <col:23> col:26 'int'
| |-ParmVarDecl 0x55b9de11ba30 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55b9de11baa8 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55b9de11bda8 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55b9de11bc58 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55b9de11bcd0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55b9de11bfb8 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55b9de11be70 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55b9de11bee8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55b9de11c138 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55b9de11c078 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55b9de11c338 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55b9de11c1f0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55b9de11c268 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55b9de11c510 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b9de11c3f8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55b9de11c478 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55b9de11c7f0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b9de11c5d0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55b9de11c648 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55b9de11c6c8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55b9de11c740 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55b9de11c8d0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55b9de11c930 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55b9de11cbb0 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55b9de11cab0 parent 0x55b9ddfdeb40 prev 0x55b9ddfee768 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55b9de11c990 <col:36> col:39 'int'
    `-ParmVarDecl 0x55b9de11ca10 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddfdeb40 prev 0x55b9ddfde8c0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9ddfdec38 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55b9ddfdecc8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55b9ddfded28 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55b9ddfdee18 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55b9ddfdef18 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55b9ddfdf0e8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55b9ddfdef98 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55b9ddfdf010 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55b9ddfdf278 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55b9ddfdf1b0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55b9ddfdf320 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfdf458 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55b9ddfdf390 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55b9ddfdf5f8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55b9ddfdf538 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55b9ddfdf798 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55b9ddfdf6d8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55b9ddfdf840 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55b9ddfdf940 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55b9ddfdfa20 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfdf920 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55b9ddfdf900 <col:26> 'int' 1
| `-EnumConstantDecl 0x55b9ddfdf9d0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55b9ddfdfa38 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfdf9b0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55b9ddfdf990 <col:44> 'int' 2
|-CXXMethodDecl 0x55b9ddfdfb80 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55b9ddfdfa68 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55b9ddfdfae8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55b9ddfdfcd8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55b9ddfdfc48 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55b9ddfdff18 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55b9ddfdfd98 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55b9ddfdfe10 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55b9ddfdffc8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfe0020 <col:30>
|-CXXMethodDecl 0x55b9ddfe0128 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55b9ddfe0060 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55b9ddfe01d0 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfe0228 <col:30>
|-CXXMethodDecl 0x55b9ddfe0278 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55b9ddfe0340 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55b9ddfe0458 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55b9ddfe04e0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55b9ddfe0568 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55b9ddfe05f0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55b9ddfe0678 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55b9ddfe0708 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55b9ddfe07c8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55b9ddfe0850 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55b9ddfe08d8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55b9ddfe0960 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55b9ddfe09e8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55b9ddfe0a70 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55b9ddfe0b00 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55b9ddfe0bc0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55b9ddfe0c50 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55b9ddfe0da0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55b9ddfe0d08 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55b9ddfe0f30 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55b9ddfe0e60 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55b9ddfe11e0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55b9ddfe0fe8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55b9ddfe1068 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55b9ddfe10e8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55b9ddfe1298 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55b9ddfe13a0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b9ddfe1630 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe1380 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55b9ddfe1360 <col:33> 'int' 0
| |-EnumConstantDecl 0x55b9ddfe1430 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b9ddfe1648 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe1410 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55b9ddfe13f0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55b9ddfe14c0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b9ddfe1660 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe14a0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55b9ddfe1480 <col:38> 'int' 90
| |-EnumConstantDecl 0x55b9ddfe1550 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b9ddfe1678 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe1530 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55b9ddfe1510 <col:35> 'int' 100
| `-EnumConstantDecl 0x55b9ddfe15e0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55b9ddfe1690 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfe15c0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55b9ddfe15a0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55b9ddfe16d0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55b9ddfe1b10 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b9ddfe1980 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55b9ddfe19f8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfe1be0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55b9ddfe1d60 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55b9ddfe1c90 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfe1f68 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b9ddfe1e18 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55b9ddfe1e90 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfe2068 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55b9ddfe2108 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55b9ddfe21d0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b9ddfe2260 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55b9ddfe2490 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe2240 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55b9ddfe2220 <col:36> 'int' EnumConstant 0x55b9ddfe21d0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b9ddfe22b0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b9ddfe2300 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b9ddfe2350 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b9ddfe23a0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b9ddfe23f0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55b9ddfe2440 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55b9ddfe2578 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55b9ddfe24b8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55b9ddfe2640 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55b9ddfe2700 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55b9ddfe27c0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55b9ddfe2880 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55b9ddfe2998 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55b9ddfe2a60 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55b9ddfe2be0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55b9ddfe2b10 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55b9ddfe2d08 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55b9ddfe2f08 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55b9ddfe2db8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55b9ddfe2e38 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55b9ddff0858 <col:54, line:127:5>
|   |-ParenExpr 0x55b9ddff0708 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55b9ddff06d8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddff03c8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55b9ddff03a0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55b9ddff0388 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55b9ddff0370 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55b9ddff0340 <col:31> 'Router *' lvalue ->_router 0x55b9ddfee220
|   |   |         `-CXXThisExpr 0x55b9ddff0330 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b9ddff0428 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddff0408 <col:48> 'int' 0
|   |   `-CallExpr 0x55b9ddff0638 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddff0620 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddff0600 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddff0678 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddff0498 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55b9ddff0690 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddff04b8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55b9ddff06a8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddff04f0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55b9ddff06c0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddff05e8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddff05d0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddff0588 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55b9ddff07a0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55b9ddff0738 <col:9> 'Router *' lvalue ->_router 0x55b9ddfee220
|   | | `-CXXThisExpr 0x55b9ddff0728 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55b9ddff0788 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b9ddff0768 <col:19> 'Router *' lvalue ParmVar 0x55b9ddfe2db8 'r' 'Router *'
|   `-BinaryOperator 0x55b9ddff0838 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55b9ddff07d0 <col:9> 'int' lvalue ->_eindex 0x55b9ddfee288
|     | `-CXXThisExpr 0x55b9ddff07c0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55b9ddff0820 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddff0800 <col:19> 'int' lvalue ParmVar 0x55b9ddfe2e38 'eindex' 'int'
|-CXXMethodDecl 0x55b9ddfe3090 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55b9ddfe2fc8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55b9ddfe3160 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55b9ddfe3228 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55b9ddfe32c8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55b9ddfe3518 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55b9ddfe3390 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55b9ddfe3410 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55b9ddfe35c8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfe3620 <col:30>
|-CXXMethodDecl 0x55b9ddfe3728 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55b9ddfe3660 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55b9ddfe37d0 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfe3828 <col:30>
|-CXXMethodDecl 0x55b9ddfe38f8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55b9ddfe3868 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55b9ddfe39a0 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfe39f8 <col:30>
|-CXXMethodDecl 0x55b9ddfe3b88 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55b9ddfe3a30 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55b9ddfe3ab0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55b9ddfe3d18 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55b9ddfe3c50 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55b9ddfe3e68 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55b9ddfe3dd8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55b9ddfe3fb8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55b9ddfe3f28 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55b9ddfe4108 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55b9ddfe4078 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55b9ddfe43c8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55b9ddfe41c0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55b9ddfe4240 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55b9ddfe42e8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55b9ddfe44a0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55b9ddfe4560 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55b9ddfe4830 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b9ddfe46e0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55b9ddfe4758 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfe4958 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55b9ddfe4b30 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55b9ddfe4a10 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55b9ddfe4a90 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55b9ddfe4d18 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55b9ddfe4bf8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55b9ddfe4c78 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55b9ddfe5088 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55b9ddfe4dd8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b9ddfe4e50 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b9ddfe4ed0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b9ddfefe40 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9ddfefe20 <col:106> 'int' 0
| `-ParmVarDecl 0x55b9ddfe4f48 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9ddfefe78 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9ddfefe58 <col:126> 'int' 0
|-CXXMethodDecl 0x55b9ddfe5428 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b9ddfe5158 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b9ddfe51f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b9ddfe5270 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55b9ddfe52e8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9ddfefeb0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9ddfefe90 <col:114> 'int' 0
|-CXXMethodDecl 0x55b9ddfe57b8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b9ddfe5500 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe5578 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b9ddfe55f8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55b9ddfefec8 <col:96> 'int' 0
| `-ParmVarDecl 0x55b9ddfe5670 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9ddfeff08 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9ddfefee8 <col:116> 'int' 0
|-CXXMethodDecl 0x55b9ddfe5b38 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55b9ddfe5888 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55b9ddfe5900 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9ddfe5980 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b9ddfeff40 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9ddfeff20 <col:109> 'int' 0
| `-ParmVarDecl 0x55b9ddfe59f8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9ddfeff78 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9ddfeff58 <col:129> 'int' 0
|-CXXMethodDecl 0x55b9ddfe5eb8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b9ddfe5c08 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55b9ddfe5c80 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9ddfe5d00 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55b9ddfe5d78 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9ddfeffb0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9ddfeff90 <col:117> 'int' 0
|-CXXMethodDecl 0x55b9ddfe6248 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b9ddfe5f90 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe6008 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9ddfe6088 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55b9ddfeffc8 <col:99> 'int' 0
| `-ParmVarDecl 0x55b9ddfe6100 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b9ddff0008 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b9ddfeffe8 <col:119> 'int' 0
|-CXXMethodDecl 0x55b9ddfe6668 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55b9ddfe6318 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55b9ddfe6398 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55b9ddfe6410 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9ddfe6490 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b9ddff0040 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9ddff0020 <col:108> 'int' 0
| `-ParmVarDecl 0x55b9ddfe6510 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55b9ddff0078 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55b9ddff0058 <col:141> 'int' 0
|-CXXMethodDecl 0x55b9ddfe6a88 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55b9ddfe6740 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55b9ddfe67c0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55b9ddfe6838 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9ddfe68b8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55b9ddfe6938 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55b9ddff0090 <col:121> 'int' 0
|-CXXMethodDecl 0x55b9ddfe6eb8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55b9ddfe6b68 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe6be8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55b9ddfe6c60 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9ddfe6ce0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55b9ddff00b0 <col:98> 'int' 0
| `-ParmVarDecl 0x55b9ddfe6d60 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55b9ddff00d0 <col:123> 'int' 0
|-CXXMethodDecl 0x55b9ddfe7180 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55b9ddfe6f90 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b9ddfe7010 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55b9ddfe7090 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55b9ddff00f0 <col:80> 'int' 0
|-EnumDecl 0x55b9ddfe7238 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55b9ddfe7340 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b9ddfe75d0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe7320 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55b9ddfe7300 <col:42> 'int' 1
| |-EnumConstantDecl 0x55b9ddfe73d0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b9ddfe75e8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe73b0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55b9ddfe7390 <col:40> 'int' 2
| |-EnumConstantDecl 0x55b9ddfe7460 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b9ddfe7600 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe7440 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55b9ddfe7420 <col:44> 'int' 4
| |-EnumConstantDecl 0x55b9ddfe74f0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b9ddfe7618 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfe74d0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55b9ddfe74b0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55b9ddfe7580 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55b9ddfe7630 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfe7560 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55b9ddfe7540 <col:34> 'int' 6
|-CXXMethodDecl 0x55b9ddfe78e8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55b9ddfe7658 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55b9ddfe76f8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55b9ddfe7778 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55b9ddfe77f0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55b9ddff01a8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b9ddff0190 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b9ddff0178 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b9ddff0158 <col:98, col:105> 'String' (CXXTemporary 0x55b9ddff0158)
|           `-CXXTemporaryObjectExpr 0x55b9ddff0120 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55b9ddfe7b88 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55b9ddfe79b8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55b9ddfe7a30 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55b9ddfe7aa8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55b9ddff0258 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55b9ddff0240 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55b9ddff0228 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55b9ddff0208 <col:94, col:101> 'String' (CXXTemporary 0x55b9ddff0208)
| |         `-CXXTemporaryObjectExpr 0x55b9ddff01d0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55b9ddff0a40 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55b9ddff09b8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55b9ddff0988 <col:9> '<bound member function type>' ->add_task_handlers 0x55b9ddfe78e8
|     | `-CXXThisExpr 0x55b9ddff0978 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55b9ddff09f8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9ddff08f8 <col:27> 'Task *' lvalue ParmVar 0x55b9ddfe79b8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55b9ddff0a10 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9ddff0918 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55b9ddfe7a30 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55b9ddff0a28 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55b9ddff0938 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55b9ddfe7580 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55b9ddff0958 <col:62> 'const String' lvalue ParmVar 0x55b9ddfe7aa8 'prefix' 'const String &'
|-CXXMethodDecl 0x55b9ddfe7d98 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55b9ddfe7c50 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55b9ddfe7cc8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55b9ddff0308 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55b9ddff02f0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55b9ddff02d8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55b9ddff02b8 <col:70, col:77> 'String' (CXXTemporary 0x55b9ddff02b8)
| |         `-CXXTemporaryObjectExpr 0x55b9ddff0280 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55b9ddff0c18 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55b9ddff0b90 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55b9ddff0b60 <col:9> '<bound member function type>' ->add_task_handlers 0x55b9ddfe78e8
|     | `-CXXThisExpr 0x55b9ddff0b50 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55b9ddff0bd0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9ddff0ad0 <col:27> 'Task *' lvalue ParmVar 0x55b9ddfe7c50 'task' 'Task *'
|     |-ImplicitCastExpr 0x55b9ddff0be8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55b9ddff0af0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55b9ddff0c00 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55b9ddff0b10 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55b9ddfe7580 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55b9ddff0b30 <col:57> 'const String' lvalue ParmVar 0x55b9ddfe7cc8 'prefix' 'const String &'
|-CXXMethodDecl 0x55b9ddfe8078 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55b9ddfe7e60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe7ee0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe7f58 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55b9ddfe8328 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55b9ddfe8148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe81c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe8248 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55b9ddfe8618 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55b9ddfe83f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe8478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe84f0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55b9ddfe88c8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55b9ddfe86e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe8768 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe87e8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55b9ddfe8b78 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55b9ddfe8998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe8a18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe8a98 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55b9ddfe8e28 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55b9ddfe8c48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe8cc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe8d40 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55b9ddfe90d8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55b9ddfe8ef8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe8f78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe8ff8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55b9ddfe93e8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55b9ddfe9200 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe9280 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe9300 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55b9ddfe96c8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55b9ddfe94b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe9538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe95e0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55b9ddfe99a8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55b9ddfe9798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe9818 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfe98c0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55b9ddfe9c10 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55b9ddfe9a78 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe9af8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55b9ddfe9b70 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55b9ddfe9eb8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55b9ddfe9ce0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55b9ddfe9d60 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55b9ddfe9dd8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55b9ddfea168 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55b9ddfe9f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfea008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfea088 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55b9ddfea418 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55b9ddfea238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfea2b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfea330 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55b9ddfea6c8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55b9ddfea4e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfea568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfea5e0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55b9ddfea998 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55b9ddfea798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfea818 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b9ddfea8b8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55b9ddfeacc8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55b9ddfeaa68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b9ddfeaae8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55b9ddfeab60 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55b9ddfeabd8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9ddff0320 <col:93> 'bool' false
|-CXXMethodDecl 0x55b9ddfeaeb0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b9ddfead98 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55b9ddfeae18 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55b9ddfeb088 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b9ddfeaf70 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55b9ddfeaff0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55b9ddfeb368 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b9ddfeb148 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55b9ddfeb1c0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55b9ddfeb240 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55b9ddfeb2b8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfeb658 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b9ddfeb438 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55b9ddfeb4b0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55b9ddfeb530 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55b9ddfeb5a8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfeb890 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55b9ddfeb730 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55b9ddfeb7b0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55b9ddfeba78 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55b9ddfeb958 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55b9ddfeb9d8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55b9ddfebb28 prev 0x55b9ddfe32c8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b9ddfebc20 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55b9ddfebcb0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55b9ddfebd28 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55b9ddfebde8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55b9ddfebeb0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55b9ddfec028 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55b9ddfebf60 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55b9ddfec0d0 <col:24>
| | `-OptimizeNoneAttr 0x55b9ddfec128 <col:34>
| |-CXXMethodDecl 0x55b9ddfec170 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55b9ddfec428 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55b9ddfec220 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55b9ddfec298 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55b9ddfec318 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55b9ddfec4e0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55b9ddfec518 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55b9ddfec580 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55b9ddfec608 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55b9ddfec928 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55b9ddfec6c0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55b9ddfec738 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55b9ddfec7b0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55b9ddfec830 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55b9ddfeca40 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55b9ddff43b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55b9ddff43b8
| | `-ParmVarDecl 0x55b9ddff44c8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55b9ddff4568 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55b9ddff4568
| | `-ParmVarDecl 0x55b9ddff4678 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55b9de1c7ee0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b9ddfecab8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55b9ddfecb58 <col:38> "" ""
|-CXXMethodDecl 0x55b9ddfecbe8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55b9ddfecc88 <col:44> "" ""
|-AccessSpecDecl 0x55b9ddfeccf8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55b9ddfecd20 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55b9ddfece20 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55b9ddfece70 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfece00 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55b9ddfecde0 <col:27> 'int' 4
|-FieldDecl 0x55b9ddfecf28 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55b9ddfed0d8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55b9ddfed190 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55b9ddfee220 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55b9ddfee288 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55b9ddfee3d8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55b9ddfee318 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55b9ddfee588 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55b9ddfee498 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55b9ddfee768 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55b9ddfee648 <col:20> col:23 'int'
| `-ParmVarDecl 0x55b9ddfee6c8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55b9ddfeea10 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55b9ddfee830 <col:23> col:26 'int'
| |-ParmVarDecl 0x55b9ddfee8b0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55b9ddfee928 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55b9ddfeeac8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55b9ddfeeb90 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55b9ddfeebe0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55b9ddfeec30 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55b9ddfeee10 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55b9ddfeecc0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55b9ddfeed38 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfef0b8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55b9ddfeeed8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55b9ddfeef58 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55b9ddfeefd0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55b9ddfef2d8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55b9ddfef188 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55b9ddfef208 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55b9ddfef610 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55b9ddfef398 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55b9ddfef418 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55b9ddfef490 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55b9ddfef510 <col:57> col:60 'int'
|-CXXMethodDecl 0x55b9ddfef7f8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b9ddfef6e0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55b9ddfef760 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55b9ddfef948 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55b9ddfef8b8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55b9ddfefcc8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55b9ddfefa08 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55b9ddfefa88 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55b9ddfefb00 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55b9ddfefb80 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55b9ddfefde0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Bypass
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   _Bool _active
       109 |   _Bool _inline
           | [sizeof=112, dsize=110, align=8,
           |  nvsize=110, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de028d90 <../elements/standard/bypass.hh:80:1, line:123:1> line:80:7 class Bypass definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55b9de028ee8 <col:1, col:7> col:7 implicit referenced class Bypass
|-AccessSpecDecl 0x55b9de028f78 <col:33, col:39> col:33 public
|-CXXConstructorDecl 0x55b9de029000 <line:82:5, col:12> col:5 Bypass 'void ()'
|-CXXMethodDecl 0x55b9de029100 <line:84:5, col:55> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55b9ddfe0278 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55b9de03b708 <col:36, col:55>
|   `-ReturnStmt 0x55b9de03b6f8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55b9de03b6e0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b9de03b6c0 <col:45> 'const char [7]' lvalue "Bypass"
|-CXXMethodDecl 0x55b9de0291c8 <line:85:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55b9ddfe0340 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55b9de03b768 <col:36, col:56>
|   `-ReturnStmt 0x55b9de03b758 <col:38, col:45>
|     `-ImplicitCastExpr 0x55b9de03b740 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b9de03b720 <col:45> 'const char [8]' lvalue "1-2/1-2"
|-CXXMethodDecl 0x55b9de029290 <line:86:5, col:56> col:17 flow_code 'const char *() const'
| |-Overrides: [ 0x55b9ddfe0b00 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x55b9de03b7c8 <col:35, col:56>
|   `-ReturnStmt 0x55b9de03b7b8 <col:37, col:44>
|     `-ImplicitCastExpr 0x55b9de03b7a0 <col:44> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b9de03b780 <col:44> 'const char [9]' lvalue "xy/[xy]x"
|-CXXMethodDecl 0x55b9de0293e0 <line:87:5, col:32> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55b9ddfe0f30 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55b9de029348 <col:16, col:28> col:28 name 'const char *'
|-CXXMethodDecl 0x55b9de0296c0 <line:89:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55b9ddfe1b10 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55b9de029570 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55b9de0295e8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de029818 <line:90:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55b9ddfe1d60 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55b9de029780 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b9de0298e0 <line:91:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55b9ddfe1be0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55b9de029aa8 <line:93:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55b9ddfdf0e8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55b9de029998 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x55b9de029a10 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x55b9de029c00 <line:94:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55b9ddfdf278 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55b9de029b70 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x55b9de029ca8 <line:96:3, col:10> col:3 private
|-CXXRecordDecl 0x55b9de029cd0 <line:97:5, line:104:5> line:97:12 struct Locator definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-public 'RouterVisitor'
| |-CXXRecordDecl 0x55b9de029e28 <col:5, col:12> col:12 implicit referenced struct Locator
| |-FieldDecl 0x55b9de029ec8 <line:98:9, col:18> col:18 _e 'Element *'
| |-FieldDecl 0x55b9de029f30 <line:99:9, col:13> col:13 _port 'int'
| |-FieldDecl 0x55b9de029f98 <line:100:9, col:13> col:13 _from_port 'int'
| |-CXXConstructorDecl 0x55b9de02a0d8 <line:101:9, col:30> col:9 Locator 'void (int)'
| | `-ParmVarDecl 0x55b9de02a000 <col:17, col:21> col:21 from_port 'int'
| |-CXXMethodDecl 0x55b9de02a4c0 <line:102:9, line:103:64> line:102:14 visit 'bool (Element *, bool, int, Element *, int, int)'
| | |-Overrides: [ 0x55b9ddf601b8 RouterVisitor::visit 'bool (Element *, bool, int, Element *, int, int)' ]
| | |-ParmVarDecl 0x55b9de02a198 <col:20, col:29> col:29 e 'Element *'
| | |-ParmVarDecl 0x55b9de02a210 <col:32, col:37> col:37 isoutput 'bool'
| | |-ParmVarDecl 0x55b9de02a290 <col:47, col:51> col:51 port 'int'
| | |-ParmVarDecl 0x55b9de02a308 <line:103:20, col:29> col:29 from_e 'Element *'
| | |-ParmVarDecl 0x55b9de02a388 <col:37, col:41> col:41 from_port 'int'
| | `-ParmVarDecl 0x55b9de02a408 <col:52, col:56> col:56 distance 'int'
| |-CXXConstructorDecl 0x55b9de02a5b8 <line:97:12> col:12 implicit constexpr Locator 'void (const Bypass::Locator &)' inline default noexcept-unevaluated 0x55b9de02a5b8
| | `-ParmVarDecl 0x55b9de02a6c8 <col:12> col:12 'const Bypass::Locator &'
| |-CXXConstructorDecl 0x55b9de02a768 <col:12> col:12 implicit constexpr Locator 'void (Bypass::Locator &&)' inline default noexcept-unevaluated 0x55b9de02a768
| | `-ParmVarDecl 0x55b9de02a878 <col:12> col:12 'Bypass::Locator &&'
| |-CXXMethodDecl 0x55b9de02a918 <col:12> col:12 implicit operator= 'Bypass::Locator &(const Bypass::Locator &)' inline default noexcept-unevaluated 0x55b9de02a918
| | `-ParmVarDecl 0x55b9de02aa28 <col:12> col:12 'const Bypass::Locator &'
| |-CXXMethodDecl 0x55b9de02aa98 <col:12> col:12 implicit operator= 'Bypass::Locator &(Bypass::Locator &&)' inline default noexcept-unevaluated 0x55b9de02aa98
| | `-ParmVarDecl 0x55b9de02aba8 <col:12> col:12 'Bypass::Locator &&'
| `-CXXDestructorDecl 0x55b9de02ac30 <col:12> col:12 implicit ~Locator 'void ()' inline default noexcept-unevaluated 0x55b9de02ac30
|   `-Overrides: [ 0x55b9ddf5fd40 RouterVisitor::~RouterVisitor 'void () noexcept' ]
|-CXXRecordDecl 0x55b9de02ad10 <line:106:5, line:113:5> line:106:12 struct Assigner definition
| |-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-public 'RouterVisitor'
| |-CXXRecordDecl 0x55b9de02ae68 <col:5, col:12> col:12 implicit referenced struct Assigner
| |-FieldDecl 0x55b9de02af08 <line:107:9, col:18> col:18 _e 'Element *'
| |-FieldDecl 0x55b9de02af70 <line:108:9, col:13> col:13 _port 'int'
| |-FieldDecl 0x55b9de039b70 <line:109:9, col:21> col:21 _interesting 'Vector<int>':'Vector<int>'
| |-CXXConstructorDecl 0x55b9de039d68 <line:110:9, col:38> col:9 Assigner 'void (Element *, int)'
| | |-ParmVarDecl 0x55b9de039bd0 <col:18, col:27> col:27 e 'Element *'
| | `-ParmVarDecl 0x55b9de039c50 <col:30, col:34> col:34 port 'int'
| |-CXXMethodDecl 0x55b9de03a158 <line:111:9, line:112:64> line:111:14 visit 'bool (Element *, bool, int, Element *, int, int)'
| | |-Overrides: [ 0x55b9ddf601b8 RouterVisitor::visit 'bool (Element *, bool, int, Element *, int, int)' ]
| | |-ParmVarDecl 0x55b9de039e30 <col:20, col:29> col:29 e 'Element *'
| | |-ParmVarDecl 0x55b9de039ea8 <col:32, col:37> col:37 isoutput 'bool'
| | |-ParmVarDecl 0x55b9de039f28 <col:47, col:51> col:51 port 'int'
| | |-ParmVarDecl 0x55b9de039fa0 <line:112:20, col:29> col:29 from_e 'Element *'
| | |-ParmVarDecl 0x55b9de03a020 <col:37, col:41> col:41 from_port 'int'
| | `-ParmVarDecl 0x55b9de03a0a0 <col:52, col:56> col:56 distance 'int'
| |-CXXConstructorDecl 0x55b9de03a258 <line:106:12> col:12 implicit Assigner 'void (const Bypass::Assigner &)' inline default noexcept-unevaluated 0x55b9de03a258
| | `-ParmVarDecl 0x55b9de03a368 <col:12> col:12 'const Bypass::Assigner &'
| |-CXXConstructorDecl 0x55b9de03a408 <col:12> col:12 implicit Assigner 'void (Bypass::Assigner &&)' inline default noexcept-unevaluated 0x55b9de03a408
| | `-ParmVarDecl 0x55b9de03a518 <col:12> col:12 'Bypass::Assigner &&'
| |-CXXMethodDecl 0x55b9de03a5b8 <col:12> col:12 implicit operator= 'Bypass::Assigner &(const Bypass::Assigner &)' inline default noexcept-unevaluated 0x55b9de03a5b8
| | `-ParmVarDecl 0x55b9de03a6c8 <col:12> col:12 'const Bypass::Assigner &'
| |-CXXMethodDecl 0x55b9de03a738 <col:12> col:12 implicit operator= 'Bypass::Assigner &(Bypass::Assigner &&)' inline default noexcept-unevaluated 0x55b9de03a738
| | `-ParmVarDecl 0x55b9de03a848 <col:12> col:12 'Bypass::Assigner &&'
| `-CXXDestructorDecl 0x55b9de03a8d0 <col:12> col:12 implicit ~Assigner 'void ()' inline default noexcept-unevaluated 0x55b9de03a8d0
|   `-Overrides: [ 0x55b9ddf5fd40 RouterVisitor::~RouterVisitor 'void () noexcept' ]
|-FieldDecl 0x55b9de03a9c0 <line:115:5, col:10> col:10 _active 'bool'
|-FieldDecl 0x55b9de03aa20 <line:116:5, col:10> col:10 _inline 'bool'
|-CXXMethodDecl 0x55b9de03aa90 <line:118:5, col:14> col:10 fix 'void ()'
|-CXXMethodDecl 0x55b9de03ad60 <line:119:5, col:94> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b9de03ab40 <col:30, col:44> col:44 s 'const String &'
| |-ParmVarDecl 0x55b9de03abb8 <col:47, col:56> col:56 e 'Element *'
| |-ParmVarDecl 0x55b9de03ac38 <col:59, col:65> col:65 user_data 'void *'
| `-ParmVarDecl 0x55b9de03acb0 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-FriendDecl 0x55b9de03ae70 <line:120:5, col:19> col:12 'struct Locator':'Bypass::Locator'
|-FriendDecl 0x55b9de03af00 <line:121:5, col:19> col:12 'struct Assigner':'Bypass::Assigner'
|-CXXConstructorDecl 0x55b9de03af68 <line:80:7> col:7 implicit Bypass 'void (const Bypass &)' inline default_delete noexcept-unevaluated 0x55b9de03af68
| `-ParmVarDecl 0x55b9de03b078 <col:7> col:7 'const Bypass &'
|-CXXConstructorDecl 0x55b9de03b118 <col:7> col:7 implicit Bypass 'void (Bypass &&)' inline default_delete noexcept-unevaluated 0x55b9de03b118
| `-ParmVarDecl 0x55b9de03b228 <col:7> col:7 'Bypass &&'
|-CXXMethodDecl 0x55b9de03b2c8 <col:7> col:7 implicit operator= 'Bypass &(const Bypass &)' inline default_delete noexcept-unevaluated 0x55b9de03b2c8
| `-ParmVarDecl 0x55b9de03b3d8 <col:7> col:7 'const Bypass &'
|-CXXMethodDecl 0x55b9de03b448 <col:7> col:7 implicit operator= 'Bypass &(Bypass &&)' inline default_delete noexcept-unevaluated 0x55b9de03b448
| `-ParmVarDecl 0x55b9de03b558 <col:7> col:7 'Bypass &&'
`-CXXDestructorDecl 0x55b9de03b5e0 <col:7> col:7 implicit ~Bypass 'void ()' inline default noexcept-unevaluated 0x55b9de03b5e0
  `-Overrides: [ 0x55b9ddfdee18 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.Bypass = type { %class.Element.base, i8, i8, [2 x i8] }
  NonVirtualBaseLLVMType:%class.Bypass.base = type { %class.Element.base, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de14bf48 prev 0x55b9ddfa4228 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9de14c040 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55b9de14c0d0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55b9de14c1d8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55b9de14c108 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55b9de15d630 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9de15d610 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55b9de15d1a8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55b9de15d6c0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b9de15d680 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55b9de14c108 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55b9de15d210 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55b9de15d740 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9de15d700 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55b9de15d270 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55b9de15d780 <col:54> 'bool' false
| `-CompoundStmt 0x55b9de15d888 <col:61, line:38:5>
|   `-BinaryOperator 0x55b9de15d868 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55b9de15d800 <col:9> 'const Element *' lvalue ->_context 0x55b9de15d148
|     | `-CXXThisExpr 0x55b9de15d7f0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55b9de15d850 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55b9de15d830 <col:20> 'int' 0
|-CXXConstructorDecl 0x55b9de14c3e8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9de14c298 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55b9de14c310 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55b9de15d668 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9de15d648 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55b9de15d148 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55b9de15d8e0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b9de15d8a0 <col:20> 'const Element *' lvalue ParmVar 0x55b9de14c298 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55b9de15d1a8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55b9de15d960 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b9de15d920 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55b9de14c310 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55b9de15d210 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55b9de15d9e0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55b9de15d9a0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55b9de15d270 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55b9de15da20 <col:73> 'bool' false
| `-CompoundStmt 0x55b9de15da98 <col:80, line:46:5>
|-CXXMethodDecl 0x55b9de14c518 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55b9de15db10 <col:36, line:51:5>
|   `-ReturnStmt 0x55b9de15db00 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55b9de15dae8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55b9de15dab8 <col:16> 'const Element *const' lvalue ->_context 0x55b9de15d148
|         `-CXXThisExpr 0x55b9de15daa8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55b9de14c608 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55b9de15db90 <col:32, line:57:5>
|   `-ReturnStmt 0x55b9de15db80 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55b9de15db68 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55b9de15db38 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55b9de15d1a8
|         `-CXXThisExpr 0x55b9de15db28 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55b9de14c6c8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55b9de14c850 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b9de14c780 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55b9de14c9a0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b9de14c910 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b9de15cb28 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b9de14ca60 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b9de15cd28 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55b9de15cbe0 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55b9de15cc58 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55b9de15d058 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55b9de15cde8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55b9de15ce68 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55b9de15cf30 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55b9de15d110 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55b9de15d148 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55b9de15d1a8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55b9de15d210 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55b9de15d270 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55b9de15d2c0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55b9de15d2c0
| `-ParmVarDecl 0x55b9de15d3d8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55b9de15d478 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55b9de15d478
| `-ParmVarDecl 0x55b9de15d588 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55b9de1c99c8 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de176a28 prev 0x55b9de162ab8 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9de176b20 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55b9de176c10 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55b9de196ca0 <col:16, line:828:9>
|-CXXDestructorDecl 0x55b9de176d00 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55b9de196cb0 <col:25, line:830:9>
|-CXXMethodDecl 0x55b9de176e00 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55b9de176eb0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55b9de176f58 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55b9de176f58
| `-ParmVarDecl 0x55b9de177068 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55b9de183988 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55b9de183988
  `-ParmVarDecl 0x55b9de183a98 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de1628c8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55b9de162a28 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55b9de162ab8 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55b9de162b70 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55b9de162c78 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55b9de162ba8 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b9de185f68 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b9de185f48 <col:31> 'int' 0
|-CXXConstructorDecl 0x55b9de162f98 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55b9de162e10 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55b9de162e88 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b9de185fa0 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b9de185f80 <col:59> 'int' 0
|-CXXConstructorDecl 0x55b9de163170 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9de163060 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55b9de1630d8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b9de185fd8 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b9de185fb8 <col:55> 'int' 0
|-CXXConstructorDecl 0x55b9de163528 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55b9de163310 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55b9de163388 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55b9de163400 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b9de186010 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b9de185ff0 <col:31> 'int' 0
|-CXXConstructorDecl 0x55b9de1636e8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55b9de163628 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55b9de1637e0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55b9de1639c8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55b9de1638d0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55b9de163ab8 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55b9de1863c0 <col:24, line:291:5>
|   `-ReturnStmt 0x55b9de1863b0 <line:290:9, col:79>
|     `-BinaryOperator 0x55b9de186390 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55b9de186268 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55b9de1861c0 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55b9de1861a0 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55b9de186098 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55b9de186080 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55b9de186068 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55b9de186038 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55b9de1849b0
|       | |   |       `-CXXThisExpr 0x55b9de186028 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55b9de186188 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55b9de186170 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55b9de186138 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55b9de186108 <col:28, col:35> '<bound member function type>' ->size 0x55b9de0e7fb8
|       | |           `-ImplicitCastExpr 0x55b9de186158 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55b9de1860f0 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55b9de1860c0 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55b9de1849b0
|       | |                 `-CXXThisExpr 0x55b9de1860b0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55b9de186250 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55b9de186238 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55b9de186220 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55b9de1861f0 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55b9de184b20
|       |         `-CXXThisExpr 0x55b9de1861e0 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55b9de186370 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55b9de186358 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55b9de186340 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55b9de186300 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55b9de1862e8 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55b9de186298 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55b9de184bd0
|         |     |   `-CXXThisExpr 0x55b9de186288 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55b9de1862c8 <col:73> 'int' 0
|         `-IntegerLiteral 0x55b9de186320 <col:79> 'int' 0
|-CXXMethodDecl 0x55b9de163b78 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55b9de186598 <col:32, line:296:5>
|   `-ReturnStmt 0x55b9de186588 <line:295:9, col:49>
|     `-BinaryOperator 0x55b9de186568 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55b9de186448 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55b9de186430 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55b9de186418 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55b9de1863e8 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55b9de184b20
|       |       `-CXXThisExpr 0x55b9de1863d8 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55b9de186548 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55b9de186530 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55b9de186518 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55b9de1864d8 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55b9de1864c0 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55b9de186470 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55b9de184bd0
|         |     |   `-CXXThisExpr 0x55b9de186460 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55b9de1864a0 <col:43> 'int' 0
|         `-IntegerLiteral 0x55b9de1864f8 <col:49> 'int' 0
|-CXXMethodDecl 0x55b9de163c68 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55b9de1867a8 <col:19, line:306:5>
|   |-IfStmt 0x55b9de1866c8 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55b9de186608 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55b9de1865f0 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55b9de1865c0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55b9de1849b0
|   | |     `-CXXThisExpr 0x55b9de1865b0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55b9de1866a8 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55b9de186678 <col:13, col:20> '<bound member function type>' ->clear 0x55b9de0ea958
|   |     `-ImplicitCastExpr 0x55b9de186660 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55b9de186630 <col:13> 'Vector<String> *' lvalue ->_conf 0x55b9de1849b0
|   |         `-CXXThisExpr 0x55b9de186620 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55b9de186750 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55b9de186720 <col:9, col:16> '<bound member function type>' .clear 0x55b9de039758
|   |   `-MemberExpr 0x55b9de1866f0 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55b9de184ac0
|   |     `-CXXThisExpr 0x55b9de1866e0 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55b9de186798 <line:305:9, col:17>
|     `-UnaryOperator 0x55b9de186780 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9de186770 <col:17> 'Args *' this
|-CXXMethodDecl 0x55b9de163ee8 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55b9de163df0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55b9de164068 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55b9de163fa0 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55b9de1643e8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55b9de164110 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55b9de164348 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55b9de1641b8 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55b9de164230 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55b9de186ad0 <col:67, line:327:5>
|     |-WhileStmt 0x55b9de186a80 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55b9de186898 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55b9de186810 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55b9de002eb0 0x55b9ddf9c6f8 0x55b9ddde5cd8 0x55b9ddde59b0 0x55b9dddd6180 0x55b9dddd5e30 0x55b9dddd5720 0x55b9ddda8090 0x55b9ddd35560
|     | | |-DeclRefExpr 0x55b9de1867d0 <col:16> 'Iter' lvalue ParmVar 0x55b9de1641b8 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55b9de1867f0 <col:25> 'Iter' lvalue ParmVar 0x55b9de164230 'end' 'Iter'
|     | `-CompoundStmt 0x55b9de186a60 <col:30, line:325:9>
|     |   |-CallExpr 0x55b9de186a00 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55b9de1868e0 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55b9de1869d0 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55b9de186960 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|     |   |   `-DeclRefExpr 0x55b9de186940 <col:24> 'Iter' lvalue ParmVar 0x55b9de1641b8 'begin' 'Iter'
|     |   `-UnaryOperator 0x55b9de186a48 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55b9de186a28 <col:15> 'Iter' lvalue ParmVar 0x55b9de1641b8 'begin' 'Iter'
|     `-ReturnStmt 0x55b9de186ac0 <line:326:9, col:17>
|       `-UnaryOperator 0x55b9de186aa8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de186a98 <col:17> 'Args *' this
|-CXXMethodDecl 0x55b9de1644f0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55b9de164460 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55b9de164638 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55b9de1645a8 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55b9de164700 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55b9de186bb0 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55b9de186b50 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55b9de186b00 <col:9> '<bound member function type>' ->reset_from 0x55b9de184f48
|   | | `-CXXThisExpr 0x55b9de186af0 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55b9de186b30 <col:20> 'int' 0
|   `-ReturnStmt 0x55b9de186ba0 <line:352:9, col:17>
|     `-UnaryOperator 0x55b9de186b88 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9de186b78 <col:17> 'Args *' this
|-VarDecl 0x55b9de1647b8 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55b9de164820 <col:38> 'int' 1
|-VarDecl 0x55b9de1648b0 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55b9de164918 <col:39> 'int' 2
|-VarDecl 0x55b9de1649a8 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55b9de164a10 <col:39> 'int' 4
|-VarDecl 0x55b9de164b10 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55b9de164b78 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55b9de164ef8 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55b9de164bf0 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55b9de164e58 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55b9de164ca0 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55b9de164d48 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55b9de186d08 <col:43, line:371:5>
| |   `-ReturnStmt 0x55b9de186cf8 <line:370:9, col:34>
| |     `-CallExpr 0x55b9de186cc0 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55b9de186be0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55b9de186c60 <col:21> 'const char *' lvalue ParmVar 0x55b9de164ca0 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55b9de186c80 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55b9de186ca0 <col:33> 'T' lvalue ParmVar 0x55b9de164d48 'x' 'T &'
| `-CXXMethodDecl 0x55b9de1d0d88 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x55b9de1d0be8 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55b9de1d0cb8 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x55b9de165228 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55b9de164f60 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b9de165188 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55b9de165010 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1650b8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55b9de186e58 <col:45, line:375:5>
|     `-ReturnStmt 0x55b9de186e48 <line:374:9, col:42>
|       `-CallExpr 0x55b9de186e10 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de186d30 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de186db0 <col:21> 'const char *' lvalue ParmVar 0x55b9de165010 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de186dd0 <col:30> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int'
|         `-DeclRefExpr 0x55b9de186df0 <col:41> 'T' lvalue ParmVar 0x55b9de1650b8 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de165558 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55b9de165290 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55b9de1654b8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55b9de165340 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55b9de1653e8 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x55b9de186fa8 <col:45, line:379:5>
| |   `-ReturnStmt 0x55b9de186f98 <line:378:9, col:43>
| |     `-CallExpr 0x55b9de186f60 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55b9de186e80 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55b9de186f00 <col:21> 'const char *' lvalue ParmVar 0x55b9de165340 'keyword' 'const char *'
| |       |-DeclRefExpr 0x55b9de186f20 <col:30> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int'
| |       `-DeclRefExpr 0x55b9de186f40 <col:42> 'T' lvalue ParmVar 0x55b9de1653e8 'x' 'T &'
| `-CXXMethodDecl 0x55b9de1d08b8 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x55b9de1d06d0 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x55b9de1d07a8 <col:39, col:42> col:42 x 'bool &'
|-FunctionTemplateDecl 0x55b9de165888 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55b9de1655c0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b9de1657e8 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55b9de165670 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de165718 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55b9de1871a8 <col:46, line:383:5>
|     `-ReturnStmt 0x55b9de187198 <line:382:9, col:55>
|       `-CallExpr 0x55b9de187160 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de186fd0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de187050 <col:21> 'const char *' lvalue ParmVar 0x55b9de165670 'keyword' 'const char *'
|         |-BinaryOperator 0x55b9de187120 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55b9de1870d0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b9de1870b0 <col:30> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55b9de187108 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55b9de1870e8 <col:42> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55b9de187140 <col:54> 'T' lvalue ParmVar 0x55b9de165718 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de165c88 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55b9de1658f0 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b9de165be8 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55b9de1659a0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de165a20 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de165ac8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55b9de1872e8 <col:54, line:388:5>
|     |-CallExpr 0x55b9de187270 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de1871c0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55b9de187200 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55b9de187210 <col:30> 'const char *' lvalue ParmVar 0x55b9de1659a0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b9de187230 <col:39> 'int' lvalue ParmVar 0x55b9de165a20 'flags' 'int'
|     | `-DeclRefExpr 0x55b9de187250 <col:46> 'T' lvalue ParmVar 0x55b9de165ac8 'x' 'T &'
|     `-ReturnStmt 0x55b9de1872d8 <line:387:9, col:17>
|       `-UnaryOperator 0x55b9de1872c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de1872b0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de166138 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55b9de165cf8 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b9de165d78 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b9de166098 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55b9de165e38 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de165ed8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55b9de165f78 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b9de187458 <col:74, line:403:5>
|     `-ReturnStmt 0x55b9de187448 <line:402:9, col:56>
|       `-CallExpr 0x55b9de187408 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de187318 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de187388 <col:28> 'const char *' lvalue ParmVar 0x55b9de165e38 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de1873a8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55b9de1873c8 <col:40> 'T' lvalue ParmVar 0x55b9de165ed8 'x' 'T &'
|         `-DeclRefExpr 0x55b9de1873e8 <col:43> 'const V' lvalue ParmVar 0x55b9de165f78 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55b9de1665a8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55b9de1661a8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b9de166228 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b9de166508 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55b9de1662e8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de166388 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55b9de166428 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b9de1875c0 <col:76, line:407:5>
|     `-ReturnStmt 0x55b9de1875b0 <line:406:9, col:65>
|       `-CallExpr 0x55b9de187570 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de187480 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de1874f0 <col:28> 'const char *' lvalue ParmVar 0x55b9de1662e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de187510 <col:37> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int'
|         |-DeclRefExpr 0x55b9de187530 <col:49> 'T' lvalue ParmVar 0x55b9de166388 'x' 'T &'
|         `-DeclRefExpr 0x55b9de187550 <col:52> 'const V' lvalue ParmVar 0x55b9de166428 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55b9de166af8 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55b9de166618 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b9de166698 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b9de166a58 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55b9de166758 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1667d8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de166878 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55b9de166918 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b9de187728 <col:85, line:412:5>
|     |-CallExpr 0x55b9de1876a8 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de1875d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55b9de187618 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55b9de187628 <col:37> 'const char *' lvalue ParmVar 0x55b9de166758 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b9de187648 <col:46> 'int' lvalue ParmVar 0x55b9de1667d8 'flags' 'int'
|     | |-DeclRefExpr 0x55b9de187668 <col:53> 'T' lvalue ParmVar 0x55b9de166878 'x' 'T &'
|     | `-DeclRefExpr 0x55b9de187688 <col:56> 'const V' lvalue ParmVar 0x55b9de166918 'default_value' 'const V &'
|     `-ReturnStmt 0x55b9de187718 <line:411:9, col:17>
|       `-UnaryOperator 0x55b9de187700 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de1876f0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de166f88 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55b9de166b70 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de166be8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de166ee8 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de166ca8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de166d20 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de166dc8 <col:47, col:50> col:50 referenced x 'T &'
|   `-CompoundStmt 0x55b9de1878a8 <col:53, line:425:5>
|     `-ReturnStmt 0x55b9de187898 <line:424:9, col:42>
|       `-CallExpr 0x55b9de187858 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de187758 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de1877d8 <col:21> 'const char *' lvalue ParmVar 0x55b9de166ca8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de1877f8 <col:30> 'int' 0
|         |-DeclRefExpr 0x55b9de187818 <col:33> 'P' lvalue ParmVar 0x55b9de166d20 'parser' 'P'
|         `-DeclRefExpr 0x55b9de187838 <col:41> 'T' lvalue ParmVar 0x55b9de166dc8 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de1673d8 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55b9de166ff8 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de167078 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de167338 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de167138 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1671b0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de167258 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55b9de187a20 <col:55, line:429:5>
|     `-ReturnStmt 0x55b9de187a10 <line:428:9, col:50>
|       `-CallExpr 0x55b9de1879d0 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de1878d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de187950 <col:21> 'const char *' lvalue ParmVar 0x55b9de167138 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de187970 <col:30> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int'
|         |-DeclRefExpr 0x55b9de187990 <col:41> 'P' lvalue ParmVar 0x55b9de1671b0 'parser' 'P'
|         `-DeclRefExpr 0x55b9de1879b0 <col:49> 'T' lvalue ParmVar 0x55b9de167258 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de167828 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55b9de167448 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de1674c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de167788 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de167588 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de167600 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de1676a8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55b9de187b98 <col:55, line:433:5>
|     `-ReturnStmt 0x55b9de187b88 <line:432:9, col:51>
|       `-CallExpr 0x55b9de187b48 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de187a48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de187ac8 <col:21> 'const char *' lvalue ParmVar 0x55b9de167588 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de187ae8 <col:30> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int'
|         |-DeclRefExpr 0x55b9de187b08 <col:42> 'P' lvalue ParmVar 0x55b9de167600 'parser' 'P'
|         `-DeclRefExpr 0x55b9de187b28 <col:50> 'T' lvalue ParmVar 0x55b9de1676a8 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de167c78 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55b9de167898 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de167918 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de167bd8 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de1679d8 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de167a50 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de167af8 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55b9de187dc0 <col:56, line:437:5>
|     `-ReturnStmt 0x55b9de187db0 <line:436:9, col:63>
|       `-CallExpr 0x55b9de187d70 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de187bc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de187c40 <col:21> 'const char *' lvalue ParmVar 0x55b9de1679d8 'keyword' 'const char *'
|         |-BinaryOperator 0x55b9de187d10 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55b9de187cc0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b9de187ca0 <col:30> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55b9de187cf8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55b9de187cd8 <col:42> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55b9de187d30 <col:54> 'P' lvalue ParmVar 0x55b9de167a50 'parser' 'P'
|         `-DeclRefExpr 0x55b9de187d50 <col:62> 'T' lvalue ParmVar 0x55b9de167af8 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de1681a8 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55b9de167ce8 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de167d68 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de168108 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b9de167e28 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de167ea8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de167f20 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de167fc8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55b9de187f28 <col:64, line:442:5>
|     |-CallExpr 0x55b9de187ea8 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de187dd8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55b9de187e18 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55b9de187e28 <col:30> 'const char *' lvalue ParmVar 0x55b9de167e28 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b9de187e48 <col:39> 'int' lvalue ParmVar 0x55b9de167ea8 'flags' 'int'
|     | |-DeclRefExpr 0x55b9de187e68 <col:46> 'P' lvalue ParmVar 0x55b9de167f20 'parser' 'P'
|     | `-DeclRefExpr 0x55b9de187e88 <col:54> 'T' lvalue ParmVar 0x55b9de167fc8 'x' 'T &'
|     `-ReturnStmt 0x55b9de187f18 <line:441:9, col:17>
|       `-UnaryOperator 0x55b9de187f00 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de187ef0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de1687a8 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55b9de168220 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de168298 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55b9de168318 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55b9de168708 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55b9de1683e0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de168458 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de1684f8 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55b9de1685c8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b9de1880c0 <col:84, line:458:5>
|     `-ReturnStmt 0x55b9de1880b0 <line:457:9, col:64>
|       `-CallExpr 0x55b9de188068 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de187f58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de187fc8 <col:28> 'const char *' lvalue ParmVar 0x55b9de1683e0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de187fe8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55b9de188008 <col:40> 'P' lvalue ParmVar 0x55b9de168458 'parser' 'P'
|         |-DeclRefExpr 0x55b9de188028 <col:48> 'T' lvalue ParmVar 0x55b9de1684f8 'x' 'T &'
|         `-DeclRefExpr 0x55b9de188048 <col:51> 'const V' lvalue ParmVar 0x55b9de1685c8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55b9de168d28 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55b9de168820 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de168898 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55b9de168918 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55b9de168c88 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55b9de1689e0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de168a58 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de168af8 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55b9de168b98 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b9de188250 <col:86, line:462:5>
|     `-ReturnStmt 0x55b9de188240 <line:461:9, col:73>
|       `-CallExpr 0x55b9de1881f8 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de1880e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de188158 <col:28> 'const char *' lvalue ParmVar 0x55b9de1689e0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de188178 <col:37> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int'
|         |-DeclRefExpr 0x55b9de188198 <col:49> 'P' lvalue ParmVar 0x55b9de168a58 'parser' 'P'
|         |-DeclRefExpr 0x55b9de1881b8 <col:57> 'T' lvalue ParmVar 0x55b9de168af8 'x' 'T &'
|         `-DeclRefExpr 0x55b9de1881d8 <col:60> 'const V' lvalue ParmVar 0x55b9de168b98 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55b9de169388 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55b9de168da0 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de168e18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55b9de168e98 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55b9de1692e8 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55b9de168f60 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de168fe0 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de169058 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de1690f8 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55b9de169198 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b9de1883e0 <col:95, line:467:5>
|     |-CallExpr 0x55b9de188358 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de188268 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55b9de1882a8 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55b9de1882b8 <col:37> 'const char *' lvalue ParmVar 0x55b9de168f60 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b9de1882d8 <col:46> 'int' lvalue ParmVar 0x55b9de168fe0 'flags' 'int'
|     | |-DeclRefExpr 0x55b9de1882f8 <col:53> 'P' lvalue ParmVar 0x55b9de169058 'parser' 'P'
|     | |-DeclRefExpr 0x55b9de188318 <col:61> 'T' lvalue ParmVar 0x55b9de1690f8 'x' 'T &'
|     | `-DeclRefExpr 0x55b9de188338 <col:64> 'const V' lvalue ParmVar 0x55b9de169198 'default_value' 'const V &'
|     `-ReturnStmt 0x55b9de1883d0 <line:466:9, col:17>
|       `-UnaryOperator 0x55b9de1883b8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de1883a8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de169968 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55b9de169408 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de169488 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b9de169508 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b9de1698c8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b9de1695d0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de169648 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de1696e8 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b9de169788 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b9de188588 <col:63, line:481:5>
|     `-ReturnStmt 0x55b9de188578 <line:480:9, col:47>
|       `-CallExpr 0x55b9de188530 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de188410 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de188490 <col:21> 'const char *' lvalue ParmVar 0x55b9de1695d0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de1884b0 <col:30> 'int' 0
|         |-DeclRefExpr 0x55b9de1884d0 <col:33> 'P' lvalue ParmVar 0x55b9de169648 'parser' 'P'
|         |-DeclRefExpr 0x55b9de1884f0 <col:41> 'T1' lvalue ParmVar 0x55b9de1696e8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55b9de188510 <col:45> 'T2' lvalue ParmVar 0x55b9de169788 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55b9de169ee8 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55b9de1699e0 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de169a58 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b9de169ad8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b9de169e48 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b9de169ba0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de169c18 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de169cb8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b9de169d58 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b9de188728 <col:65, line:485:5>
|     `-ReturnStmt 0x55b9de188718 <line:484:9, col:55>
|       `-CallExpr 0x55b9de1886d0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de1885b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de188630 <col:21> 'const char *' lvalue ParmVar 0x55b9de169ba0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de188650 <col:30> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int'
|         |-DeclRefExpr 0x55b9de188670 <col:41> 'P' lvalue ParmVar 0x55b9de169c18 'parser' 'P'
|         |-DeclRefExpr 0x55b9de188690 <col:49> 'T1' lvalue ParmVar 0x55b9de169cb8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55b9de1886b0 <col:53> 'T2' lvalue ParmVar 0x55b9de169d58 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55b9de16a468 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55b9de169f60 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de169fd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b9de16a058 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b9de16a3c8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b9de16a120 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16a198 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de16a238 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b9de16a2d8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b9de1888c8 <col:65, line:489:5>
|     `-ReturnStmt 0x55b9de1888b8 <line:488:9, col:56>
|       `-CallExpr 0x55b9de188870 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de188750 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de1887d0 <col:21> 'const char *' lvalue ParmVar 0x55b9de16a120 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de1887f0 <col:30> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int'
|         |-DeclRefExpr 0x55b9de188810 <col:42> 'P' lvalue ParmVar 0x55b9de16a198 'parser' 'P'
|         |-DeclRefExpr 0x55b9de188830 <col:50> 'T1' lvalue ParmVar 0x55b9de16a238 'x1' 'T1 &'
|         `-DeclRefExpr 0x55b9de188850 <col:54> 'T2' lvalue ParmVar 0x55b9de16a2d8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55b9de16a9e8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55b9de16a4e0 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de16a558 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b9de16a5d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b9de16a948 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b9de16a6a0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16a718 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de16a7b8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b9de16a858 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b9de188b18 <col:66, line:493:5>
|     `-ReturnStmt 0x55b9de188b08 <line:492:9, col:68>
|       `-CallExpr 0x55b9de188ac0 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de1888f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de188970 <col:21> 'const char *' lvalue ParmVar 0x55b9de16a6a0 'keyword' 'const char *'
|         |-BinaryOperator 0x55b9de188a40 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55b9de1889f0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b9de1889d0 <col:30> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55b9de188a28 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55b9de188a08 <col:42> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55b9de188a60 <col:54> 'P' lvalue ParmVar 0x55b9de16a718 'parser' 'P'
|         |-DeclRefExpr 0x55b9de188a80 <col:62> 'T1' lvalue ParmVar 0x55b9de16a7b8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55b9de188aa0 <col:66> 'T2' lvalue ParmVar 0x55b9de16a858 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55b9de16b048 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55b9de16aa60 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de16aad8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b9de16ab58 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b9de16afa8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b9de16ac20 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16aca0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de16ad18 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de16adb8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b9de16ae58 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b9de188ca8 <col:74, line:498:5>
|     |-CallExpr 0x55b9de188c20 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de188b30 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55b9de188b70 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55b9de188b80 <col:30> 'const char *' lvalue ParmVar 0x55b9de16ac20 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b9de188ba0 <col:39> 'int' lvalue ParmVar 0x55b9de16aca0 'flags' 'int'
|     | |-DeclRefExpr 0x55b9de188bc0 <col:46> 'P' lvalue ParmVar 0x55b9de16ad18 'parser' 'P'
|     | |-DeclRefExpr 0x55b9de188be0 <col:54> 'T1' lvalue ParmVar 0x55b9de16adb8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55b9de188c00 <col:58> 'T2' lvalue ParmVar 0x55b9de16ae58 'x2' 'T2 &'
|     `-ReturnStmt 0x55b9de188c98 <line:497:9, col:17>
|       `-UnaryOperator 0x55b9de188c80 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de188c70 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de16b3a8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55b9de16b0c8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de16b308 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b9de16b180 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16b1f8 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55b9de188df0 <col:52, line:509:5>
|     `-ReturnStmt 0x55b9de188de0 <line:508:9, col:44>
|       `-CallExpr 0x55b9de188da8 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de188cd8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de188d48 <col:26> 'const char *' lvalue ParmVar 0x55b9de16b180 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de188d68 <col:35> 'int' 0
|         `-DeclRefExpr 0x55b9de188d88 <col:38> 'P' lvalue ParmVar 0x55b9de16b1f8 'parser' 'P'
|-FunctionTemplateDecl 0x55b9de16b6a8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55b9de16b410 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de16b608 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b9de16b4c0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16b538 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55b9de188f30 <col:54, line:513:5>
|     `-ReturnStmt 0x55b9de188f20 <line:512:9, col:52>
|       `-CallExpr 0x55b9de188ee8 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de188e18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de188e88 <col:26> 'const char *' lvalue ParmVar 0x55b9de16b4c0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de188ea8 <col:35> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int'
|         `-DeclRefExpr 0x55b9de188ec8 <col:46> 'P' lvalue ParmVar 0x55b9de16b538 'parser' 'P'
|-FunctionTemplateDecl 0x55b9de16b9a8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55b9de16b710 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de16b908 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b9de16b7c0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16b838 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55b9de189070 <col:54, line:517:5>
|     `-ReturnStmt 0x55b9de189060 <line:516:9, col:53>
|       `-CallExpr 0x55b9de189028 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de188f58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de188fc8 <col:26> 'const char *' lvalue ParmVar 0x55b9de16b7c0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de188fe8 <col:35> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int'
|         `-DeclRefExpr 0x55b9de189008 <col:47> 'P' lvalue ParmVar 0x55b9de16b838 'parser' 'P'
|-FunctionTemplateDecl 0x55b9de16bca8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55b9de16ba10 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de16bc08 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b9de16bac0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16bb38 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55b9de189260 <col:55, line:521:5>
|     `-ReturnStmt 0x55b9de189250 <line:520:9, col:65>
|       `-CallExpr 0x55b9de189218 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de189098 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de189108 <col:26> 'const char *' lvalue ParmVar 0x55b9de16bac0 'keyword' 'const char *'
|         |-BinaryOperator 0x55b9de1891d8 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55b9de189188 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b9de189168 <col:35> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55b9de1891c0 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55b9de1891a0 <col:47> 'const int' lvalue Var 0x55b9de1648b0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55b9de1891f8 <col:59> 'P' lvalue ParmVar 0x55b9de16bb38 'parser' 'P'
|-FunctionTemplateDecl 0x55b9de16c078 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55b9de16bd10 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de16bfd8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55b9de16bdc0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16be40 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de16beb8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55b9de1893a0 <col:63, line:526:5>
|     |-CallExpr 0x55b9de189328 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de189278 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55b9de1892b8 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55b9de1892c8 <col:35> 'const char *' lvalue ParmVar 0x55b9de16bdc0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b9de1892e8 <col:44> 'int' lvalue ParmVar 0x55b9de16be40 'flags' 'int'
|     | `-DeclRefExpr 0x55b9de189308 <col:51> 'P' lvalue ParmVar 0x55b9de16beb8 'parser' 'P'
|     `-ReturnStmt 0x55b9de189390 <line:525:9, col:17>
|       `-UnaryOperator 0x55b9de189378 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de189368 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de16c4c8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55b9de16c0e8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de16c168 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de16c428 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de16c228 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16c2a0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de16c348 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55b9de1894f8 <col:58, line:541:5>
|     `-ReturnStmt 0x55b9de1894e8 <line:540:9, col:39>
|       `-CallExpr 0x55b9de1894b0 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de1893d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de189450 <col:21> 'const char *' lvalue ParmVar 0x55b9de16c228 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de189470 <col:30> 'P' lvalue ParmVar 0x55b9de16c2a0 'parser' 'P'
|         `-DeclRefExpr 0x55b9de189490 <col:38> 'T' lvalue ParmVar 0x55b9de16c348 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de16c918 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55b9de16c538 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de16c5b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de16c878 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de16c678 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16c6f0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de16c798 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55b9de189630 <col:60, line:545:5>
|     `-ReturnStmt 0x55b9de189620 <line:544:9, col:41>
|       `-CallExpr 0x55b9de1895e8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de189520 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de189588 <col:23> 'const char *' lvalue ParmVar 0x55b9de16c678 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de1895a8 <col:32> 'P' lvalue ParmVar 0x55b9de16c6f0 'parser' 'P'
|         `-DeclRefExpr 0x55b9de1895c8 <col:40> 'T' lvalue ParmVar 0x55b9de16c798 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de16f9f8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55b9de16c988 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de16ca08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de16f958 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de16f760 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16f7d8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de16f878 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55b9de189768 <col:60, line:549:5>
|     `-ReturnStmt 0x55b9de189758 <line:548:9, col:41>
|       `-CallExpr 0x55b9de189720 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de189658 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de1896c0 <col:23> 'const char *' lvalue ParmVar 0x55b9de16f760 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de1896e0 <col:32> 'P' lvalue ParmVar 0x55b9de16f7d8 'parser' 'P'
|         `-DeclRefExpr 0x55b9de189700 <col:40> 'T' lvalue ParmVar 0x55b9de16f878 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de16fe48 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55b9de16fa68 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de16fae8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de16fda8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de16fba8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de16fc20 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de16fcc8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55b9de1898a0 <col:61, line:553:5>
|     `-ReturnStmt 0x55b9de189890 <line:552:9, col:42>
|       `-CallExpr 0x55b9de189858 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de189790 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de1897f8 <col:24> 'const char *' lvalue ParmVar 0x55b9de16fba8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de189818 <col:33> 'P' lvalue ParmVar 0x55b9de16fc20 'parser' 'P'
|         `-DeclRefExpr 0x55b9de189838 <col:41> 'T' lvalue ParmVar 0x55b9de16fcc8 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de170328 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55b9de16feb8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de16ff38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de170288 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b9de16fff8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de170078 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de1700f0 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de170198 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55b9de189a18 <col:69, line:557:5>
|     `-ReturnStmt 0x55b9de189a08 <line:556:9, col:46>
|       `-CallExpr 0x55b9de1899c8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de1898c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de189948 <col:21> 'const char *' lvalue ParmVar 0x55b9de16fff8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de189968 <col:30> 'int' lvalue ParmVar 0x55b9de170078 'flags' 'int'
|         |-DeclRefExpr 0x55b9de189988 <col:37> 'P' lvalue ParmVar 0x55b9de1700f0 'parser' 'P'
|         `-DeclRefExpr 0x55b9de1899a8 <col:45> 'T' lvalue ParmVar 0x55b9de170198 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de170638 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55b9de1703a0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de170598 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b9de170450 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1704c8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55b9de189b58 <col:56, line:571:5>
|     `-ReturnStmt 0x55b9de189b48 <line:570:9, col:48>
|       `-CallExpr 0x55b9de189b10 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de189a40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de189ab0 <col:30> 'const char *' lvalue ParmVar 0x55b9de170450 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de189ad0 <col:39> 'int' 0
|         `-DeclRefExpr 0x55b9de189af0 <col:42> 'P' lvalue ParmVar 0x55b9de1704c8 'parser' 'P'
|-FunctionTemplateDecl 0x55b9de1709c8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55b9de1706a0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de170928 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55b9de170750 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1707d0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de170848 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55b9de189d28 <col:67, line:576:5>
|     |-CallExpr 0x55b9de189cb0 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de189b70 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55b9de189bb0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55b9de189bc0 <col:39> 'const char *' lvalue ParmVar 0x55b9de170750 'keyword' 'const char *'
|     | |-BinaryOperator 0x55b9de189c70 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55b9de189c20 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55b9de189be0 <col:48> 'int' lvalue ParmVar 0x55b9de1707d0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55b9de189c58 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55b9de189c38 <col:56> 'const int' lvalue Var 0x55b9de164b10 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55b9de189c90 <col:68> 'P' lvalue ParmVar 0x55b9de170848 'parser' 'P'
|     `-ReturnStmt 0x55b9de189d18 <line:575:9, col:17>
|       `-UnaryOperator 0x55b9de189d00 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de189cf0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de170e18 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55b9de170a38 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de170ab8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de170d78 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b9de170b78 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de170bf0 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de170c98 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55b9de189e98 <col:62, line:592:5>
|     `-ReturnStmt 0x55b9de189e88 <line:591:9, col:51>
|       `-CallExpr 0x55b9de189e48 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de189d58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de189dc8 <col:30> 'const char *' lvalue ParmVar 0x55b9de170b78 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de189de8 <col:39> 'int' 0
|         |-DeclRefExpr 0x55b9de189e08 <col:42> 'P' lvalue ParmVar 0x55b9de170bf0 'parser' 'P'
|         `-DeclRefExpr 0x55b9de189e28 <col:50> 'T' lvalue ParmVar 0x55b9de170c98 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de1712f8 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55b9de170e88 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de170f08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de171258 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b9de170fc8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de171048 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de1710c0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de171168 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55b9de18a090 <col:73, line:597:5>
|     |-CallExpr 0x55b9de18a010 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de189eb0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55b9de189ef0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55b9de189f00 <col:39> 'const char *' lvalue ParmVar 0x55b9de170fc8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55b9de189fb0 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55b9de189f60 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55b9de189f20 <col:48> 'int' lvalue ParmVar 0x55b9de171048 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55b9de189f98 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55b9de189f78 <col:56> 'const int' lvalue Var 0x55b9de164b10 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55b9de189fd0 <col:68> 'P' lvalue ParmVar 0x55b9de1710c0 'parser' 'P'
|     | `-DeclRefExpr 0x55b9de189ff0 <col:76> 'T' lvalue ParmVar 0x55b9de171168 'x' 'T &'
|     `-ReturnStmt 0x55b9de18a080 <line:596:9, col:17>
|       `-UnaryOperator 0x55b9de18a068 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de18a058 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de1718a8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55b9de171370 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de1713e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de171808 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55b9de1714a8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de171520 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de1716e0 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55b9de18a200 <col:65, line:614:5>
|     `-ReturnStmt 0x55b9de18a1f0 <line:613:9, col:46>
|       `-CallExpr 0x55b9de18a1b0 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de18a0c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de18a130 <col:25> 'const char *' lvalue ParmVar 0x55b9de1714a8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de18a150 <col:34> 'int' 0
|         |-DeclRefExpr 0x55b9de18a170 <col:37> 'P' lvalue ParmVar 0x55b9de171520 'parser' 'P'
|         `-DeclRefExpr 0x55b9de18a190 <col:45> 'Vector<T>' lvalue ParmVar 0x55b9de1716e0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55b9de171cd8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55b9de171918 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b9de171c38 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55b9de1719d0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de171b20 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55b9de18a420 <col:55, line:618:5>
|     `-ReturnStmt 0x55b9de18a410 <line:617:9, col:55>
|       `-CallExpr 0x55b9de18a3d0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de18a228 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de18a298 <col:25> 'const char *' lvalue ParmVar 0x55b9de1719d0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b9de18a2b8 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55b9de18a390 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55b9de18a3b0 <col:54> 'Vector<T>' lvalue ParmVar 0x55b9de171b20 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55b9de1722a8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55b9de171d40 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de171db8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de172208 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55b9de171e78 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de171ef8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de171f70 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de1720c0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55b9de18a618 <col:76, line:623:5>
|     |-CallExpr 0x55b9de18a598 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b9de18a438 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55b9de18a478 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55b9de18a488 <col:34> 'const char *' lvalue ParmVar 0x55b9de171e78 'keyword' 'const char *'
|     | |-BinaryOperator 0x55b9de18a538 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55b9de18a4e8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55b9de18a4a8 <col:43> 'int' lvalue ParmVar 0x55b9de171ef8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55b9de18a520 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55b9de18a500 <col:51> 'const int' lvalue Var 0x55b9de164b10 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55b9de18a558 <col:63> 'P' lvalue ParmVar 0x55b9de171f70 'parser' 'P'
|     | `-DeclRefExpr 0x55b9de18a578 <col:71> 'Vector<T>' lvalue ParmVar 0x55b9de1720c0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55b9de18a608 <line:622:9, col:17>
|       `-UnaryOperator 0x55b9de18a5f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de18a5e0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de1727e8 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55b9de172320 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de172398 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de172748 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55b9de172458 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1724d8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de172620 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55b9de18a880 <col:66, line:627:5>
|     `-ReturnStmt 0x55b9de18a870 <line:626:9, col:59>
|       `-CallExpr 0x55b9de18a830 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b9de18a648 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b9de18a6b8 <col:25> 'const char *' lvalue ParmVar 0x55b9de172458 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b9de18a6d8 <col:34> 'int' lvalue ParmVar 0x55b9de1724d8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55b9de18a7f0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55b9de18a810 <col:58> 'Vector<T>' lvalue ParmVar 0x55b9de172620 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55b9de172878 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55b9de18a900 <col:25, line:633:5>
|   `-ReturnStmt 0x55b9de18a8f0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55b9de18a8d8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55b9de18a8a8 <col:16> 'const bool' lvalue ->_status 0x55b9de184818
|         `-CXXThisExpr 0x55b9de18a898 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55b9de1729f8 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55b9de172930 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55b9de18a9e8 <col:27, line:639:5>
|   |-BinaryOperator 0x55b9de18a990 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55b9de18a918 <col:9> 'bool' lvalue ParmVar 0x55b9de172930 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55b9de18a978 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b9de18a948 <col:13> 'bool' lvalue ->_status 0x55b9de184818
|   |     `-CXXThisExpr 0x55b9de18a938 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55b9de18a9d8 <line:638:9, col:17>
|     `-UnaryOperator 0x55b9de18a9c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9de18a9b0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55b9de172b78 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55b9de172ab8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55b9de18aad8 <col:39, line:644:5>
|   |-BinaryOperator 0x55b9de18aa80 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55b9de18aa08 <col:9> 'bool' lvalue ParmVar 0x55b9de172ab8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55b9de18aa68 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b9de18aa38 <col:13> 'const bool' lvalue ->_status 0x55b9de184818
|   |     `-CXXThisExpr 0x55b9de18aa28 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55b9de18aac8 <line:643:9, col:17>
|     `-UnaryOperator 0x55b9de18aab0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9de18aaa0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55b9de172c40 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55b9de18ab80 <col:30, line:651:5>
|   `-ReturnStmt 0x55b9de18ab70 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55b9de18ab58 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55b9de18ab28 <col:16> 'bool' lvalue ->_read_status 0x55b9de15d270
|         `-ImplicitCastExpr 0x55b9de18ab08 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55b9de18aaf8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55b9de172d88 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55b9de172cf8 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55b9de18ac88 <col:32, line:658:5>
|   |-BinaryOperator 0x55b9de18ac30 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55b9de18ab98 <col:9> 'bool' lvalue ParmVar 0x55b9de172cf8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55b9de18ac18 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b9de18abe8 <col:13> 'bool' lvalue ->_read_status 0x55b9de15d270
|   |     `-ImplicitCastExpr 0x55b9de18abc8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55b9de18abb8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55b9de18ac78 <line:657:9, col:17>
|     `-UnaryOperator 0x55b9de18ac60 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9de18ac50 <col:17> 'Args *' this
|-CXXMethodDecl 0x55b9de172ed8 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55b9de172e48 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55b9de18ad98 <col:44, line:663:5>
|   |-BinaryOperator 0x55b9de18ad40 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55b9de18aca8 <col:9> 'bool' lvalue ParmVar 0x55b9de172e48 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55b9de18ad28 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b9de18acf8 <col:13> 'bool' lvalue ->_read_status 0x55b9de15d270
|   |     `-ImplicitCastExpr 0x55b9de18acd8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55b9de18acc8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55b9de18ad88 <line:662:9, col:17>
|     `-UnaryOperator 0x55b9de18ad70 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9de18ad60 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55b9de172fa0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55b9de173068 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55b9de173130 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55b9de1731f8 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55b9de173508 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55b9de173298 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b9de173468 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55b9de173378 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55b9de18b158 <col:19, line:706:5>
|     `-IfStmt 0x55b9de18b130 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55b9de18ae98 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55b9de18b060 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55b9de18b030 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55b9de18aff0 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55b9de18aef0 <col:42> '<bound member function type>' ->simple_slot 0x55b9de185bd0
|       |     | `-CXXThisExpr 0x55b9de18aee0 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55b9de18af90 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55b9de18af40 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55b9de003bc0 0x55b9dddea778
|       |     | `-DeclRefExpr 0x55b9de18af20 <col:55> 'T' lvalue ParmVar 0x55b9de173378 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55b9de18afd0 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55b9de18b120 <line:705:13, col:34>
|         `-CallExpr 0x55b9de18b0f8 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55b9de18b080 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55b9de18b0d8 <col:33> 'T' lvalue ParmVar 0x55b9de173378 'x' 'T &'
|-FunctionTemplateDecl 0x55b9de1737d8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55b9de173568 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b9de173738 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55b9de173648 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55b9de18b530 <col:31, line:717:5>
|     |-DeclStmt 0x55b9de18b298 <line:713:9, col:23>
|     | `-VarDecl 0x55b9de18b180 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55b9de18b270 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55b9de18b1f8 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55b9de18b250 <col:21> 'T' lvalue ParmVar 0x55b9de173648 'x' 'T &'
|     |-IfStmt 0x55b9de18b4e0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55b9de18b388 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55b9de18b4c0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55b9de18b460 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55b9de18b3f0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|     |   | `-DeclRefExpr 0x55b9de18b3d0 <col:14> 'T *' lvalue Var 0x55b9de18b180 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55b9de18b4a0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55b9de18b518 <line:716:9, col:16>
|       `-DeclRefExpr 0x55b9de18b4f8 <col:16> 'T *' lvalue Var 0x55b9de18b180 's' 'T *'
|-FunctionTemplateDecl 0x55b9de173be8 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55b9de173838 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b9de1738b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b9de173b48 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55b9de173998 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55b9de173a38 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55b9de18b840 <col:37, line:726:5>
|     |-IfStmt 0x55b9de18b7d0 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55b9de18b7f0 <line:723:13, col:26>
|     | | `-VarDecl 0x55b9de18b598 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55b9de18b688 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55b9de18b610 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55b9de18b668 <col:25> 'T' lvalue ParmVar 0x55b9de173998 'x' 'T &'
|     | |-DeclRefExpr 0x55b9de18b6b0 <col:16> 'T *' lvalue Var 0x55b9de18b598 's' 'T *'
|     | `-BinaryOperator 0x55b9de18b7b0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55b9de18b760 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55b9de18b6f0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|     |   | `-DeclRefExpr 0x55b9de18b6d0 <col:14> 'T *' lvalue Var 0x55b9de18b598 's' 'T *'
|     |   `-DeclRefExpr 0x55b9de18b790 <col:18> 'const V' lvalue ParmVar 0x55b9de173a38 'value' 'const V &'
|     `-ReturnStmt 0x55b9de18b830 <line:725:9, col:17>
|       `-UnaryOperator 0x55b9de18b818 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de18b808 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b9de173fe8 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55b9de173c50 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b9de173f48 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55b9de173d00 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de173d80 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de173e28 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55b9de190840 <col:65, line:737:5>
|     |-DeclStmt 0x55b9de18fab8 <line:732:9, col:26>
|     | `-VarDecl 0x55b9de18fa50 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55b9de190808 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55b9de190828 <line:733:13, col:58>
|       | `-VarDecl 0x55b9de18fae0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55b9de18fcc0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55b9de18fc90 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55b9de18fc78 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55b9de18fc58 <col:26, col:58> 'String' (CXXTemporary 0x55b9de18fc58)
|       |           `-CXXMemberCallExpr 0x55b9de18fbe8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55b9de18fb58 <col:26> '<bound member function type>' ->find 0x55b9de185218
|       |             | `-CXXThisExpr 0x55b9de18fb48 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55b9de18fc20 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b9de18fb88 <col:31> 'const char *' lvalue ParmVar 0x55b9de173d00 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55b9de18fc38 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b9de18fba8 <col:40> 'int' lvalue ParmVar 0x55b9de173d80 'flags' 'int'
|       |             `-DeclRefExpr 0x55b9de18fbc8 <col:47> 'Args::Slot *' lvalue Var 0x55b9de18fa50 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55b9de18fd78 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b9de18fd60 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b9de18fd40 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b9de18fd10 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|       |       `-ImplicitCastExpr 0x55b9de18fcf8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55b9de18fcd8 <col:20> 'String' lvalue Var 0x55b9de18fae0 'str' 'String'
|       `-CompoundStmt 0x55b9de1907e8 <col:61, line:736:9>
|         |-DeclStmt 0x55b9de190230 <line:734:13, col:76>
|         | `-VarDecl 0x55b9de18fdc8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55b9de190200 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55b9de190170 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55b9de1901b8 <col:60> 'T' lvalue ParmVar 0x55b9de173e28 'variable' 'T &'
|         |     `-UnaryOperator 0x55b9de1901e8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55b9de1901d8 <col:71> 'Args *' this
|         `-CallExpr 0x55b9de1907b8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55b9de190258 <col:13> '<bound member function type>' ->postparse 0x55b9de185428
|           | `-CXXThisExpr 0x55b9de190248 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55b9de190778 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55b9de190288 <col:23> 'T *' lvalue Var 0x55b9de18fdc8 's' 'T *'
|           | `-CallExpr 0x55b9de190738 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55b9de190510 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55b9de190610 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55b9de190630 <col:86> 'String' lvalue Var 0x55b9de18fae0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55b9de1906e0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55b9de190670 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|           |   | `-DeclRefExpr 0x55b9de190650 <col:92> 'T *' lvalue Var 0x55b9de18fdc8 's' 'T *'
|           |   `-UnaryOperator 0x55b9de190720 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55b9de190710 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55b9de190798 <col:103> 'Args::Slot *' lvalue Var 0x55b9de18fa50 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b9de174538 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55b9de174058 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b9de1740d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b9de174498 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55b9de174198 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de174218 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de1742b8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55b9de174358 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55b9de1916e0 <col:88, line:745:5>
|     |-DeclStmt 0x55b9de1908d8 <line:741:9, col:26>
|     | `-VarDecl 0x55b9de190870 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b9de190af8 <line:742:9, col:55>
|     | `-VarDecl 0x55b9de190900 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55b9de190ae0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55b9de190ab0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55b9de190a98 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55b9de190a78 <col:22, col:54> 'String' (CXXTemporary 0x55b9de190a78)
|     |           `-CXXMemberCallExpr 0x55b9de190a08 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55b9de190978 <col:22> '<bound member function type>' ->find 0x55b9de185218
|     |             | `-CXXThisExpr 0x55b9de190968 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55b9de190a40 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55b9de1909a8 <col:27> 'const char *' lvalue ParmVar 0x55b9de174198 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55b9de190a58 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55b9de1909c8 <col:36> 'int' lvalue ParmVar 0x55b9de174218 'flags' 'int'
|     |             `-DeclRefExpr 0x55b9de1909e8 <col:43> 'Args::Slot *' lvalue Var 0x55b9de190870 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55b9de190ed0 <line:743:9, col:72>
|     | `-VarDecl 0x55b9de190b48 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55b9de190ea0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55b9de190e10 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55b9de190e58 <col:56> 'T' lvalue ParmVar 0x55b9de1742b8 'variable' 'T &'
|     |     `-UnaryOperator 0x55b9de190e88 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55b9de190e78 <col:67> 'Args *' this
|     `-CallExpr 0x55b9de1916b0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55b9de190ef8 <col:9> '<bound member function type>' ->postparse 0x55b9de185428
|       | `-CXXThisExpr 0x55b9de190ee8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55b9de191670 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55b9de190f28 <col:19> 'T *' lvalue Var 0x55b9de190b48 's' 'T *'
|       | `-ParenExpr 0x55b9de191650 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55b9de191620 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55b9de191608 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55b9de1915f0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55b9de1915d0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55b9de1915a0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|       |     |       `-ImplicitCastExpr 0x55b9de191588 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55b9de190f48 <col:25> 'String' lvalue Var 0x55b9de190900 'str' 'String'
|       |     |-CallExpr 0x55b9de1913f8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55b9de1911d0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55b9de1912d0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55b9de1912f0 <col:89> 'String' lvalue Var 0x55b9de190900 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55b9de1913a0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55b9de191330 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|       |     | | `-DeclRefExpr 0x55b9de191310 <col:95> 'T *' lvalue Var 0x55b9de190b48 's' 'T *'
|       |     | `-UnaryOperator 0x55b9de1913e0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55b9de1913d0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55b9de191568 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55b9de191548 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55b9de191518 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55b9de1914c8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55b9de191458 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|       |         | | `-DeclRefExpr 0x55b9de191438 <col:109> 'T *' lvalue Var 0x55b9de190b48 's' 'T *'
|       |         | `-DeclRefExpr 0x55b9de1914f8 <col:113> 'const V' lvalue ParmVar 0x55b9de174358 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55b9de191538 <col:120> 'bool' true
|       `-DeclRefExpr 0x55b9de191690 <col:128> 'Args::Slot *' lvalue Var 0x55b9de190870 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b9de174a68 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55b9de1745b0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de174628 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de1749c8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b9de1746e8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de174768 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de1747e0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de174888 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55b9de1922d8 <col:75, line:754:5>
|     |-DeclStmt 0x55b9de191788 <line:749:9, col:26>
|     | `-VarDecl 0x55b9de191720 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55b9de1922a0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55b9de1922c0 <line:750:13, col:58>
|       | `-VarDecl 0x55b9de1917b0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55b9de191990 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55b9de191960 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55b9de191948 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55b9de191928 <col:26, col:58> 'String' (CXXTemporary 0x55b9de191928)
|       |           `-CXXMemberCallExpr 0x55b9de1918b8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55b9de191828 <col:26> '<bound member function type>' ->find 0x55b9de185218
|       |             | `-CXXThisExpr 0x55b9de191818 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55b9de1918f0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b9de191858 <col:31> 'const char *' lvalue ParmVar 0x55b9de1746e8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55b9de191908 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b9de191878 <col:40> 'int' lvalue ParmVar 0x55b9de174768 'flags' 'int'
|       |             `-DeclRefExpr 0x55b9de191898 <col:47> 'Args::Slot *' lvalue Var 0x55b9de191720 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55b9de191a48 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b9de191a30 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b9de191a10 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b9de1919e0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|       |       `-ImplicitCastExpr 0x55b9de1919c8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55b9de1919a8 <col:20> 'String' lvalue Var 0x55b9de1917b0 'str' 'String'
|       `-CompoundStmt 0x55b9de192280 <col:61, line:753:9>
|         |-DeclStmt 0x55b9de191e20 <line:751:13, col:63>
|         | `-VarDecl 0x55b9de191a98 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55b9de191df0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55b9de191d60 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55b9de191da8 <col:47> 'T' lvalue ParmVar 0x55b9de174888 'variable' 'T &'
|         |     `-UnaryOperator 0x55b9de191dd8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55b9de191dc8 <col:58> 'Args *' this
|         `-CallExpr 0x55b9de192250 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55b9de191e48 <col:13> '<bound member function type>' ->postparse 0x55b9de185428
|           | `-CXXThisExpr 0x55b9de191e38 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55b9de192210 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55b9de191e78 <col:23> 'T *' lvalue Var 0x55b9de191a98 's' 'T *'
|           | `-CallExpr 0x55b9de1921d0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55b9de192060 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55b9de1920a8 <col:56> 'P' lvalue ParmVar 0x55b9de1747e0 'parser' 'P'
|           |   |-DeclRefExpr 0x55b9de1920c8 <col:64> 'String' lvalue Var 0x55b9de1917b0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55b9de192178 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55b9de192108 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|           |   | `-DeclRefExpr 0x55b9de1920e8 <col:70> 'T *' lvalue Var 0x55b9de191a98 's' 'T *'
|           |   `-UnaryOperator 0x55b9de1921b8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55b9de1921a8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55b9de192230 <col:81> 'Args::Slot *' lvalue Var 0x55b9de191720 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b9de1750c8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55b9de174ae0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b9de174b58 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55b9de174bd8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55b9de175028 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55b9de174ca0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de174d20 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de174d98 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de174e38 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55b9de174ed8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55b9de193068 <col:98, line:762:5>
|     |-DeclStmt 0x55b9de192370 <line:758:9, col:26>
|     | `-VarDecl 0x55b9de192308 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b9de192590 <line:759:9, col:55>
|     | `-VarDecl 0x55b9de192398 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55b9de192578 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55b9de192548 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55b9de192530 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55b9de192510 <col:22, col:54> 'String' (CXXTemporary 0x55b9de192510)
|     |           `-CXXMemberCallExpr 0x55b9de1924a0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55b9de192410 <col:22> '<bound member function type>' ->find 0x55b9de185218
|     |             | `-CXXThisExpr 0x55b9de192400 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55b9de1924d8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55b9de192440 <col:27> 'const char *' lvalue ParmVar 0x55b9de174ca0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55b9de1924f0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55b9de192460 <col:36> 'int' lvalue ParmVar 0x55b9de174d20 'flags' 'int'
|     |             `-DeclRefExpr 0x55b9de192480 <col:43> 'Args::Slot *' lvalue Var 0x55b9de192308 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55b9de1929b0 <line:760:9, col:59>
|     | `-VarDecl 0x55b9de1925e8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55b9de192980 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55b9de1928f0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55b9de192938 <col:43> 'T' lvalue ParmVar 0x55b9de174e38 'variable' 'T &'
|     |     `-UnaryOperator 0x55b9de192968 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55b9de192958 <col:54> 'Args *' this
|     `-CallExpr 0x55b9de193038 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55b9de1929d8 <col:9> '<bound member function type>' ->postparse 0x55b9de185428
|       | `-CXXThisExpr 0x55b9de1929c8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55b9de192ff8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55b9de192a08 <col:19> 'T *' lvalue Var 0x55b9de1925e8 's' 'T *'
|       | `-ParenExpr 0x55b9de192fd8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55b9de192fa8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55b9de192f90 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55b9de192f78 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55b9de192f58 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55b9de192f28 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|       |     |       `-ImplicitCastExpr 0x55b9de192f10 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55b9de192a28 <col:25> 'String' lvalue Var 0x55b9de192398 'str' 'String'
|       |     |-CallExpr 0x55b9de192d80 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55b9de192c10 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55b9de192c58 <col:59> 'P' lvalue ParmVar 0x55b9de174d98 'parser' 'P'
|       |     | |-DeclRefExpr 0x55b9de192c78 <col:67> 'String' lvalue Var 0x55b9de192398 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55b9de192d28 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55b9de192cb8 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|       |     | | `-DeclRefExpr 0x55b9de192c98 <col:73> 'T *' lvalue Var 0x55b9de1925e8 's' 'T *'
|       |     | `-UnaryOperator 0x55b9de192d68 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55b9de192d58 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55b9de192ef0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55b9de192ed0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55b9de192ea0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55b9de192e50 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55b9de192de0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|       |         | | `-DeclRefExpr 0x55b9de192dc0 <col:87> 'T *' lvalue Var 0x55b9de1925e8 's' 'T *'
|       |         | `-DeclRefExpr 0x55b9de192e80 <col:91> 'const V' lvalue ParmVar 0x55b9de174ed8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55b9de192ec0 <col:98> 'bool' true
|       `-DeclRefExpr 0x55b9de193018 <col:106> 'Args::Slot *' lvalue Var 0x55b9de192308 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b9de175738 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55b9de175148 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de1751c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b9de175248 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b9de175698 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b9de175310 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de175390 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de175408 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de1754a8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55b9de175548 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55b9de194048 <col:60, line:773:5>
|     |-DeclStmt 0x55b9de193110 <line:767:9, col:26>
|     | `-VarDecl 0x55b9de1930a8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55b9de194010 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55b9de194030 <line:768:13, col:58>
|       | `-VarDecl 0x55b9de193138 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55b9de193318 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55b9de1932e8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55b9de1932d0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55b9de1932b0 <col:26, col:58> 'String' (CXXTemporary 0x55b9de1932b0)
|       |           `-CXXMemberCallExpr 0x55b9de193240 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55b9de1931b0 <col:26> '<bound member function type>' ->find 0x55b9de185218
|       |             | `-CXXThisExpr 0x55b9de1931a0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55b9de193278 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b9de1931e0 <col:31> 'const char *' lvalue ParmVar 0x55b9de175310 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55b9de193290 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b9de193200 <col:40> 'int' lvalue ParmVar 0x55b9de175390 'flags' 'int'
|       |             `-DeclRefExpr 0x55b9de193220 <col:47> 'Args::Slot *' lvalue Var 0x55b9de1930a8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55b9de1933d0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b9de1933b8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b9de193398 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b9de193368 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|       |       `-ImplicitCastExpr 0x55b9de193350 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55b9de193330 <col:20> 'String' lvalue Var 0x55b9de193138 'str' 'String'
|       `-CompoundStmt 0x55b9de193fe8 <col:61, line:772:9>
|         |-DeclStmt 0x55b9de193710 <line:769:13, col:66>
|         | `-VarDecl 0x55b9de193428 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55b9de1936e0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55b9de193650 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55b9de193698 <col:49> 'T1' lvalue ParmVar 0x55b9de1754a8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55b9de1936c8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55b9de1936b8 <col:61> 'Args *' this
|         |-DeclStmt 0x55b9de193a80 <line:770:13, col:66>
|         | `-VarDecl 0x55b9de193798 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55b9de193a50 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55b9de1939c0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55b9de193a08 <col:49> 'T2' lvalue ParmVar 0x55b9de175548 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55b9de193a38 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55b9de193a28 <col:61> 'Args *' this
|         `-CallExpr 0x55b9de193fb8 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55b9de193aa8 <col:13> '<bound member function type>' ->postparse 0x55b9de185428
|           | `-CXXThisExpr 0x55b9de193a98 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55b9de193f78 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55b9de193b18 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55b9de193ad8 <col:23> 'T1 *' lvalue Var 0x55b9de193428 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55b9de193af8 <col:29> 'T2 *' lvalue Var 0x55b9de193798 's2' 'T2 *'
|           | `-CallExpr 0x55b9de193f30 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55b9de193d00 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55b9de193d48 <col:63> 'P' lvalue ParmVar 0x55b9de175408 'parser' 'P'
|           |   |-DeclRefExpr 0x55b9de193d68 <col:71> 'String' lvalue Var 0x55b9de193138 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55b9de193e18 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55b9de193da8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|           |   | `-DeclRefExpr 0x55b9de193d88 <col:77> 'T1 *' lvalue Var 0x55b9de193428 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55b9de193ed8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55b9de193e68 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|           |   | `-DeclRefExpr 0x55b9de193e48 <col:82> 'T2 *' lvalue Var 0x55b9de193798 's2' 'T2 *'
|           |   `-UnaryOperator 0x55b9de193f18 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55b9de193f08 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55b9de193f98 <col:94> 'Args::Slot *' lvalue Var 0x55b9de1930a8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b9de175b28 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55b9de1757b8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de175a88 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55b9de175870 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1758f0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de175968 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55b9de194560 <col:67, line:780:5>
|     |-DeclStmt 0x55b9de1940e0 <line:777:9, col:26>
|     | `-VarDecl 0x55b9de194078 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55b9de194528 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55b9de194548 <line:778:13, col:58>
|       | `-VarDecl 0x55b9de194108 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55b9de1942e8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55b9de1942b8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55b9de1942a0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55b9de194280 <col:26, col:58> 'String' (CXXTemporary 0x55b9de194280)
|       |           `-CXXMemberCallExpr 0x55b9de194210 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55b9de194180 <col:26> '<bound member function type>' ->find 0x55b9de185218
|       |             | `-CXXThisExpr 0x55b9de194170 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55b9de194248 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b9de1941b0 <col:31> 'const char *' lvalue ParmVar 0x55b9de175870 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55b9de194260 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b9de1941d0 <col:40> 'int' lvalue ParmVar 0x55b9de1758f0 'flags' 'int'
|       |             `-DeclRefExpr 0x55b9de1941f0 <col:47> 'Args::Slot *' lvalue Var 0x55b9de194078 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55b9de1943a0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b9de194388 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b9de194368 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b9de194338 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|       |       `-ImplicitCastExpr 0x55b9de194320 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55b9de194300 <col:20> 'String' lvalue Var 0x55b9de194108 'str' 'String'
|       `-CallExpr 0x55b9de1944f8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55b9de1943c8 <col:13> '<bound member function type>' ->postparse 0x55b9de185428
|         | `-CXXThisExpr 0x55b9de1943b8 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55b9de1944a8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55b9de194418 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55b9de1943f8 <col:23> 'P' lvalue ParmVar 0x55b9de175968 'parser' 'P'
|         | |-DeclRefExpr 0x55b9de194460 <col:36> 'String' lvalue Var 0x55b9de194108 'str' 'String'
|         | `-UnaryOperator 0x55b9de194490 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55b9de194480 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55b9de1944d8 <col:49> 'Args::Slot *' lvalue Var 0x55b9de194078 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b9de175ec8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55b9de175b98 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b9de175e28 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55b9de175c50 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de175cd0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de175d48 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55b9de194ed0 <col:71, line:792:5>
|     |-DeclStmt 0x55b9de1945f8 <line:784:9, col:26>
|     | `-VarDecl 0x55b9de194590 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b9de1946c8 <line:785:9, col:29>
|     | `-VarDecl 0x55b9de194628 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55b9de1946b0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55b9de194690 <col:28> 'int' 1
|     |-WhileStmt 0x55b9de194d80 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55b9de194da0 <line:786:16, col:61>
|     | | `-VarDecl 0x55b9de1946f0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55b9de1948d0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55b9de1948a0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55b9de194888 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55b9de194868 <col:29, col:61> 'String' (CXXTemporary 0x55b9de194868)
|     | |           `-CXXMemberCallExpr 0x55b9de1947f8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55b9de194768 <col:29> '<bound member function type>' ->find 0x55b9de185218
|     | |             | `-CXXThisExpr 0x55b9de194758 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55b9de194830 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b9de194798 <col:34> 'const char *' lvalue ParmVar 0x55b9de175c50 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55b9de194848 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b9de1947b8 <col:43> 'int' lvalue ParmVar 0x55b9de175cd0 'flags' 'int'
|     | |             `-DeclRefExpr 0x55b9de1947d8 <col:50> 'Args::Slot *' lvalue Var 0x55b9de194590 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55b9de194988 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b9de194970 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b9de194950 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b9de194920 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|     | |       `-ImplicitCastExpr 0x55b9de194908 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55b9de1948e8 <col:23> 'String' lvalue Var 0x55b9de1946f0 'str' 'String'
|     | `-CompoundStmt 0x55b9de194d58 <col:64, line:790:9>
|     |   |-CallExpr 0x55b9de194ae0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55b9de1949b0 <col:13> '<bound member function type>' ->postparse 0x55b9de185428
|     |   | | `-CXXThisExpr 0x55b9de1949a0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55b9de194a90 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55b9de194a00 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55b9de1949e0 <col:23> 'P' lvalue ParmVar 0x55b9de175d48 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55b9de194a48 <col:36> 'String' lvalue Var 0x55b9de1946f0 'str' 'String'
|     |   | | `-UnaryOperator 0x55b9de194a78 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55b9de194a68 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55b9de194ac0 <col:49> 'Args::Slot *' lvalue Var 0x55b9de194590 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55b9de194c78 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55b9de194b10 <col:13> 'int' lvalue Var 0x55b9de194628 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55b9de194c60 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55b9de194c40 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55b9de194ba8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55b9de194b88 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55b9de194b70 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55b9de194b30 <col:28> 'int' lvalue Var 0x55b9de194628 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55b9de194b50 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55b9de194c28 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55b9de194bf8 <col:49> 'bool' lvalue ->_read_status 0x55b9de15d270
|     |   |         `-ImplicitCastExpr 0x55b9de194bd8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55b9de194bc8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55b9de194d28 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55b9de194c98 <col:13> 'int' lvalue ParmVar 0x55b9de175cd0 'flags' 'int'
|     |     `-UnaryOperator 0x55b9de194d10 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55b9de194cf8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b9de194cd8 <col:23> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55b9de194eb0 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55b9de194de8 <col:9> 'bool' lvalue ->_read_status 0x55b9de15d270
|       | `-ImplicitCastExpr 0x55b9de194dc8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55b9de194db8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55b9de194e90 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55b9de194e70 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55b9de194e58 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55b9de194e18 <col:25> 'int' lvalue Var 0x55b9de194628 'read_status' 'int'
|           `-IntegerLiteral 0x55b9de194e38 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55b9de1763a8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55b9de175f38 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de175fb8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de176308 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b9de176078 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1760f8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de176170 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de176218 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55b9de195e60 <col:84, line:805:5>
|     |-DeclStmt 0x55b9de194f78 <line:796:9, col:26>
|     | `-VarDecl 0x55b9de194f10 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b9de195048 <line:797:9, col:29>
|     | `-VarDecl 0x55b9de194fa8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55b9de195030 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55b9de195010 <col:28> 'int' 1
|     |-DeclStmt 0x55b9de195380 <line:798:9, col:71>
|     | `-VarDecl 0x55b9de195098 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55b9de195350 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55b9de1952c0 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55b9de195308 <col:55> 'T' lvalue ParmVar 0x55b9de176218 'variable' 'T &'
|     |     `-UnaryOperator 0x55b9de195338 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55b9de195328 <col:66> 'Args *' this
|     |-WhileStmt 0x55b9de195d10 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55b9de195d30 <line:799:16, col:61>
|     | | `-VarDecl 0x55b9de1953a8 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55b9de195588 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55b9de195558 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55b9de195540 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55b9de195520 <col:29, col:61> 'String' (CXXTemporary 0x55b9de195520)
|     | |           `-CXXMemberCallExpr 0x55b9de1954b0 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55b9de195420 <col:29> '<bound member function type>' ->find 0x55b9de185218
|     | |             | `-CXXThisExpr 0x55b9de195410 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55b9de1954e8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b9de195450 <col:34> 'const char *' lvalue ParmVar 0x55b9de176078 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55b9de195500 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b9de195470 <col:43> 'int' lvalue ParmVar 0x55b9de1760f8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55b9de195490 <col:50> 'Args::Slot *' lvalue Var 0x55b9de194f10 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55b9de195640 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b9de195628 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b9de195608 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b9de1955d8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|     | |       `-ImplicitCastExpr 0x55b9de1955c0 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55b9de1955a0 <col:23> 'String' lvalue Var 0x55b9de1953a8 'str' 'String'
|     | `-CompoundStmt 0x55b9de195ce8 <col:64, line:803:9>
|     |   |-CallExpr 0x55b9de195a70 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55b9de195668 <col:13> '<bound member function type>' ->postparse 0x55b9de185428
|     |   | | `-CXXThisExpr 0x55b9de195658 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55b9de195a30 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55b9de195698 <col:23> 'T *' lvalue Var 0x55b9de195098 's' 'T *'
|     |   | | `-CallExpr 0x55b9de1959f0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55b9de195880 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55b9de1958c8 <col:56> 'P' lvalue ParmVar 0x55b9de176170 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55b9de1958e8 <col:64> 'String' lvalue Var 0x55b9de1953a8 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55b9de195998 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55b9de195928 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|     |   | |   | `-DeclRefExpr 0x55b9de195908 <col:70> 'T *' lvalue Var 0x55b9de195098 's' 'T *'
|     |   | |   `-UnaryOperator 0x55b9de1959d8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55b9de1959c8 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55b9de195a50 <col:81> 'Args::Slot *' lvalue Var 0x55b9de194f10 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55b9de195c08 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55b9de195aa0 <col:13> 'int' lvalue Var 0x55b9de194fa8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55b9de195bf0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55b9de195bd0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55b9de195b38 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55b9de195b18 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55b9de195b00 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55b9de195ac0 <col:28> 'int' lvalue Var 0x55b9de194fa8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55b9de195ae0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55b9de195bb8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55b9de195b88 <col:49> 'bool' lvalue ->_read_status 0x55b9de15d270
|     |   |         `-ImplicitCastExpr 0x55b9de195b68 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55b9de195b58 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55b9de195cb8 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55b9de195c28 <col:13> 'int' lvalue ParmVar 0x55b9de1760f8 'flags' 'int'
|     |     `-UnaryOperator 0x55b9de195ca0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55b9de195c88 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b9de195c68 <col:23> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55b9de195e40 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55b9de195d78 <col:9> 'bool' lvalue ->_read_status 0x55b9de15d270
|       | `-ImplicitCastExpr 0x55b9de195d58 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55b9de195d48 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55b9de195e20 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55b9de195e00 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55b9de195de8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55b9de195da8 <col:25> 'int' lvalue Var 0x55b9de194fa8 'read_status' 'int'
|           `-IntegerLiteral 0x55b9de195dc8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55b9de176988 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55b9de176420 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b9de176498 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b9de1768e8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55b9de176558 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b9de1765d8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55b9de176650 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55b9de1767a0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55b9de196c68 <col:87, line:821:5>
|     |-DeclStmt 0x55b9de195f10 <line:809:9, col:26>
|     | `-VarDecl 0x55b9de195ea8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b9de195fe0 <line:810:9, col:29>
|     | `-VarDecl 0x55b9de195f40 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55b9de195fc8 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55b9de195fa8 <col:28> 'int' 1
|     |-DeclStmt 0x55b9de196228 <line:811:9, col:38>
|     | `-VarDecl 0x55b9de196110 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55b9de196200 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55b9de196188 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55b9de1961e0 <col:29> 'Vector<T>' lvalue ParmVar 0x55b9de1767a0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55b9de196b18 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55b9de196b38 <line:812:16, col:61>
|     | | `-VarDecl 0x55b9de196250 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55b9de196430 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55b9de196400 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55b9de1963e8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55b9de1963c8 <col:29, col:61> 'String' (CXXTemporary 0x55b9de1963c8)
|     | |           `-CXXMemberCallExpr 0x55b9de196358 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55b9de1962c8 <col:29> '<bound member function type>' ->find 0x55b9de185218
|     | |             | `-CXXThisExpr 0x55b9de1962b8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55b9de196390 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b9de1962f8 <col:34> 'const char *' lvalue ParmVar 0x55b9de176558 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55b9de1963a8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b9de196318 <col:43> 'int' lvalue ParmVar 0x55b9de1765d8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55b9de196338 <col:50> 'Args::Slot *' lvalue Var 0x55b9de195ea8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55b9de1964e8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b9de1964d0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b9de1964b0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b9de196480 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55b9dddac738
|     | |       `-ImplicitCastExpr 0x55b9de196468 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55b9de196448 <col:23> 'String' lvalue Var 0x55b9de196250 'str' 'String'
|     | `-CompoundStmt 0x55b9de196ae0 <col:64, line:819:9>
|     |   |-DeclStmt 0x55b9de1965a8 <line:813:13, col:23>
|     |   | `-VarDecl 0x55b9de196510 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55b9de196588 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55b9de196728 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55b9de1965d0 <col:13> '<bound member function type>' ->postparse 0x55b9de185428
|     |   | | `-CXXThisExpr 0x55b9de1965c0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55b9de1966d0 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55b9de196620 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55b9de196600 <col:23> 'P' lvalue ParmVar 0x55b9de176650 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55b9de196668 <col:36> 'String' lvalue Var 0x55b9de196250 'str' 'String'
|     |   | | |-DeclRefExpr 0x55b9de196688 <col:41> 'T' lvalue Var 0x55b9de196510 'sx' 'T'
|     |   | | `-UnaryOperator 0x55b9de1966b8 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55b9de1966a8 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55b9de196708 <col:53> 'Args::Slot *' lvalue Var 0x55b9de195ea8 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55b9de196880 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55b9de1967b8 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55b9de196788 <col:17> 'bool' lvalue ->_read_status 0x55b9de15d270
|     |   | |   `-ImplicitCastExpr 0x55b9de196768 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55b9de196758 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55b9de196858 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55b9de1967f0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55b9de1967d0 <col:17> 'Vector<T> *' lvalue Var 0x55b9de196110 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55b9de196838 <col:30> 'T' lvalue Var 0x55b9de196510 'sx' 'T'
|     |   |-BinaryOperator 0x55b9de196a00 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55b9de196898 <col:13> 'int' lvalue Var 0x55b9de195f40 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55b9de1969e8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55b9de1969c8 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55b9de196930 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55b9de196910 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55b9de1968f8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55b9de1968b8 <col:28> 'int' lvalue Var 0x55b9de195f40 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55b9de1968d8 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55b9de1969b0 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55b9de196980 <col:49> 'bool' lvalue ->_read_status 0x55b9de15d270
|     |   |         `-ImplicitCastExpr 0x55b9de196960 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55b9de196950 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55b9de196ab0 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55b9de196a20 <col:13> 'int' lvalue ParmVar 0x55b9de1765d8 'flags' 'int'
|     |     `-UnaryOperator 0x55b9de196a98 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55b9de196a80 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b9de196a60 <col:23> 'const int' lvalue Var 0x55b9de1647b8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55b9de196c48 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55b9de196b80 <col:9> 'bool' lvalue ->_read_status 0x55b9de15d270
|       | `-ImplicitCastExpr 0x55b9de196b60 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55b9de196b50 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55b9de196c28 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55b9de196c08 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55b9de196bf0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55b9de196bb0 <col:25> 'int' lvalue Var 0x55b9de195f40 'read_status' 'int'
|           `-IntegerLiteral 0x55b9de196bd0 <col:40> 'int' 1
|-AccessSpecDecl 0x55b9de176a00 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55b9de176a28 prev 0x55b9de162ab8 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55b9de176b20 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55b9de176c10 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55b9de196ca0 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55b9de176d00 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55b9de196cb0 <col:25, line:830:9>
| |-CXXMethodDecl 0x55b9de176e00 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55b9de176eb0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55b9de176f58 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55b9de176f58
| | `-ParmVarDecl 0x55b9de177068 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55b9de183988 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55b9de183988
|   `-ParmVarDecl 0x55b9de183a98 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55b9de1770d8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55b9de177238 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55b9de177430 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55b9de1772e0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55b9de177358 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55b9de196e90 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55b9de1776e8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55b9de196d00 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b9de196cc0 <col:20> 'void *' lvalue ParmVar 0x55b9de1772e0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55b9de1838b0 '_slot' 'char *'
| | | `-CXXNewExpr 0x55b9de196d88 <col:32, col:45> 'char *' array Function 0x55b9ddbd03b8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55b9de196d70 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55b9de196d40 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55b9de177358 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55b9de183910 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55b9de196e50 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b9de196e10 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55b9de177358 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55b9de196f10 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55b9de177530 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55b9de176d00 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55b9de196f98 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55b9de196f78 <line:840:13, col:22> 'void' array Function 0x55b9ddbd0718 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55b9de196f60 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55b9de196f30 <col:22> 'char *' lvalue ->_slot 0x55b9de1838b0
| |         `-CXXThisExpr 0x55b9de196f20 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55b9de177630 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55b9de176e00 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55b9de197188 <col:22, line:844:9>
| |   `-CallExpr 0x55b9de1970f0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55b9de1970d8 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55b9de1970b8 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55b9ddcdc198 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55b9de197128 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55b9de197008 <col:20> 'void *' lvalue ->_ptr 0x55b9de1776e8
| |     |   `-CXXThisExpr 0x55b9de196ff8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55b9de197158 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55b9de197140 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55b9de197048 <col:26> 'char *' lvalue ->_slot 0x55b9de1838b0
| |     |     `-CXXThisExpr 0x55b9de197038 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55b9de197170 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55b9de197088 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55b9de183910
| |         `-CXXThisExpr 0x55b9de197078 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55b9de1776e8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55b9de1838b0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55b9de183910 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55b9de183b08 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55b9de183b08
| | `-ParmVarDecl 0x55b9de183c18 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55b9de183cb8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55b9de183cb8
|   `-ParmVarDecl 0x55b9de183dc8 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55b9de183f68 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55b9de183e38 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55b9de183ed8 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55b9de184200 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55b9de1843f8 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55b9de1842c8 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55b9de184578 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55b9de1971c0 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55b9de1971a0 <col:20> 'T *' lvalue ParmVar 0x55b9de1842c8 'ptr' 'T *'
|   | `-CompoundStmt 0x55b9de197210 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55b9de1844c8 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55b9de176e00 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55b9de1973c8 <col:22, line:857:9>
|   |   `-CallExpr 0x55b9de197398 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55b9de197220 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55b9de004be8 0x55b9ddd948c8 0x55b9ddd3ebf8
|   |     |-CXXOperatorCallExpr 0x55b9de197328 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55b9de1972b8 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b9ddfa1878 0x55b9ddfa1498 0x55b9ddfa10c8 0x55b9ddfa0ce8 0x55b9ddfa0908 0x55b9ddfa0538
|   |     | `-MemberExpr 0x55b9de197288 <col:29> 'T *' lvalue ->_ptr 0x55b9de184578
|   |     |   `-CXXThisExpr 0x55b9de197278 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55b9de197368 <col:35> 'T' lvalue ->_slot 0x55b9de1845d8
|   |       `-CXXThisExpr 0x55b9de197358 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55b9de184578 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55b9de1845d8 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55b9de184640 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55b9de184740 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55b9de184790 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9de184720 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55b9de184700 <col:31> 'int' 48
|-FieldDecl 0x55b9de1847b8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55b9de184818 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55b9de184878 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55b9de1849b0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55b9de184ac0 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b9de184b20 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55b9de184bd0 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55b9de184df8 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55b9de184d00 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55b9de184f48 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55b9de184eb8 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55b9de185218 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55b9de185008 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55b9de185088 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55b9de185130 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55b9de185428 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55b9de1852e0 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55b9de185358 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55b9de1854f8 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55b9de185648 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55b9de1855b0 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55b9de1859a8 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55b9de185708 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55b9de185788 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55b9de185808 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55b9de1858b8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55b9de185bd0 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55b9de185a80 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55b9de185af8 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55b9de185ee8 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55b9de185c80 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55b9de185e48 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55b9de185d58 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddfb71d8 prev 0x55b9ddfac3e0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9ddfb72d0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55b9ddfb73c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55b9ddfb74e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55b9ddfb7668 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55b9ddfb77e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55b9ddfb7968 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55b9ddfc8798 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b9ddfc9008 <col:11>
|-CXXDestructorDecl 0x55b9ddfc8870 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b9ddfc89a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55b9ddfc89a8
| `-ParmVarDecl 0x55b9ddfc8ab8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55b9ddfc8b58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b9ddfc8b58
| `-ParmVarDecl 0x55b9ddfc8c68 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55b9ddfcba28 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9ddfcbb38 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55b9ddfcbdb8 <col:11>
|   `-ReturnStmt 0x55b9ddfcbda8 <col:11>
|     `-UnaryOperator 0x55b9ddfcbd90 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9ddfcbd80 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55b9ddfcbba8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b9ddfcbba8
  `-ParmVarDecl 0x55b9ddfcbcb8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddfb79d0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9ddfb7ae8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55b9ddfb7b88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55b9ddfb7bf0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55b9ddfb7c58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55b9ddfb7cc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55b9ddfb7d20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55b9ddfb7de0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55b9ddfb7e40 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55b9ddfb7ea0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55b9ddfc86a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55b9ddfb7b88 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55b9ddfc9018 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55b9ddfc9070 <col:12>
|-CXXConstructorDecl 0x55b9ddfc8cd8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55b9ddfc8cd8
| `-ParmVarDecl 0x55b9ddfc8de8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55b9ddfc8e88 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55b9ddfc8e88
| `-ParmVarDecl 0x55b9ddfc8f98 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55b9ddfcb110 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddfa5af0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9ddfa5c08 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55b9ddfa5c98 <col:16, col:22> col:16 public
|-EnumDecl 0x55b9ddfa5cc0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55b9ddfa5dc0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55b9ddfa5ea0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfa5da0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55b9ddfa5d80 <col:21> 'int' 28
| `-EnumConstantDecl 0x55b9ddfa5e50 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55b9ddfa5eb8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfa5e30 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55b9ddfa5e10 <col:22> 'int' 64
|-CXXMethodDecl 0x55b9ddfa61f8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55b9ddfa5ee0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b9ddfa5f60 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55b9ddfa5fd8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b9ddfa6050 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b9ddfa62b8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa64b8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddfa6330 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55b9ddfa63a8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b9ddfa6568 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa66c8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddfa65d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b9ddfa6770 <col:72> warn_unused_result ""
|-TypedefDecl 0x55b9ddfa6ad0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55b9ddfa6a60 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55b9ddfa6a00 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55b9ddfa69c0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55b9dda794e0 'void'
|       |-PointerType 0x55b9ddd25e90 'unsigned char *'
|       | `-BuiltinType 0x55b9dda795e0 'unsigned char'
|       |-TypedefType 0x55b9ddb22460 'size_t' sugar
|       | |-Typedef 0x55b9ddae9be0 'size_t'
|       | `-BuiltinType 0x55b9dda79640 'unsigned long'
|       `-PointerType 0x55b9dda79ce0 'void *'
|         `-BuiltinType 0x55b9dda794e0 'void'
|-CXXMethodDecl 0x55b9ddfa6f48 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55b9ddfa6b40 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55b9ddfa6bb8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b9ddfa6c50 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55b9ddfa6cd0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55b9ddfc1640 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55b9ddfc1628 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55b9ddfc15f0 <col:58> 'int' 0
| |-ParmVarDecl 0x55b9ddfa6d50 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55b9ddfc1668 <col:76> 'int' 0
| |-ParmVarDecl 0x55b9ddfa6dd0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55b9ddfc1688 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55b9ddfa7018 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa7098 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b9ddfa7158 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55b9ddfa71f8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfa7250 <col:30>
|-CXXMethodDecl 0x55b9ddfa72c8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55b9ddfa7368 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfa73c0 <col:30>
|-CXXMethodDecl 0x55b9ddfa7438 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55b9ddfa74d8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa7588 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55b9ddfa7628 <col:20>
| |-OptimizeNoneAttr 0x55b9ddfa7680 <col:30>
| `-WarnUnusedResultAttr 0x55b9ddfa76a8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa7700 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55b9ddfa77a0 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfa77f8 <col:30>
|-CXXMethodDecl 0x55b9ddfa7848 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55b9ddfa78e8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfa7940 <col:30>
|-CXXMethodDecl 0x55b9ddfa7988 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55b9ddfa7a28 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfa7a80 <col:30>
|-CXXMethodDecl 0x55b9ddfa7ac8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddfa7b88 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddfa7c50 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b9ddfa7d18 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b9ddfa7dd8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddfa7ef8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55b9ddfc1750 <col:54, line:99:5>
|   `-ReturnStmt 0x55b9ddfc1740 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55b9ddfc1728 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55b9ddfc16f8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b9ddfb81d8
|         `-CXXThisExpr 0x55b9ddfc16e8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55b9ddfa8098 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55b9ddfa7fa8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55b9ddfc1800 <col:67, line:103:5>
|   `-BinaryOperator 0x55b9ddfc17e0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55b9ddfc1778 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b9ddfb81d8
|     | `-CXXThisExpr 0x55b9ddfc1768 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55b9ddfc17c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddfc17a8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55b9ddfa7fa8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55b9ddfa8190 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55b9ddfc1880 <col:33, line:107:5>
|   `-ReturnStmt 0x55b9ddfc1870 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55b9ddfc1858 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b9ddfc1828 <col:16> 'void *' lvalue ->_destructor_argument 0x55b9ddfb8240
|         `-CXXThisExpr 0x55b9ddfc1818 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55b9ddfa8250 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55b9ddfc1eb0 <col:25, line:113:5>
|   |-ParenExpr 0x55b9ddfc1bf8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55b9ddfc1bc8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc1938 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55b9ddfc1910 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55b9ddfc18d8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55b9ddfc18a8 <col:24> '<bound member function type>' ->shared 0x55b9ddfa72c8
|   |   |       `-ImplicitCastExpr 0x55b9ddfc18f8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55b9ddfc1898 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc1998 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc1978 <col:42> 'int' 0
|   |   `-CallExpr 0x55b9ddfc1b28 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc1b10 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc1af0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc1b68 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc1a08 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55b9ddfc1b80 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc1a30 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc1b98 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc1a68 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55b9ddfc1bb0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc1ad8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc1ac0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc1a88 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55b9ddfc1df8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55b9ddfc1c28 <col:2> 'unsigned char *' lvalue ->_head 0x55b9ddfb7fe0
|   | | `-CXXThisExpr 0x55b9ddfc1c18 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55b9ddfc1de0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55b9ddfc1dc0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55b9ddfc1c68 <col:10> 'unsigned char *' lvalue ->_data 0x55b9ddfb8048
|   |     | `-CXXThisExpr 0x55b9ddfc1c58 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55b9ddfc1da8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55b9ddfc1d88 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55b9ddfc1ca8 <col:18> 'unsigned char *' lvalue ->_tail 0x55b9ddfb80b0
|   |         | `-CXXThisExpr 0x55b9ddfc1c98 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55b9ddfc1d70 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55b9ddfc1d50 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55b9ddfc1ce8 <col:26> 'unsigned char *' lvalue ->_end 0x55b9ddfb8118
|   |             | `-CXXThisExpr 0x55b9ddfc1cd8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55b9ddfc1d38 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55b9ddfc1d18 <col:33> 'int' 0
|   `-BinaryOperator 0x55b9ddfc1e90 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55b9ddfc1e28 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b9ddfb81d8
|     | `-CXXThisExpr 0x55b9ddfc1e18 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55b9ddfc1e78 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55b9ddfc1e58 <col:16> 'int' 0
|-CXXMethodDecl 0x55b9ddfa8390 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b9ddfa8300 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b9ddfa8438 <col:20>
| |-OptimizeNoneAttr 0x55b9ddfa8490 <col:30>
| `-WarnUnusedResultAttr 0x55b9ddfa84b8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa8588 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b9ddfa84f8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b9ddfa8630 <col:20>
| |-OptimizeNoneAttr 0x55b9ddfa8688 <col:30>
| `-WarnUnusedResultAttr 0x55b9ddfa86b0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa87e8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55b9ddfa86f0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b9ddfa8890 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa8990 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55b9ddfa8900 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b9ddfa8a38 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfa8a90 <col:30>
|-CXXMethodDecl 0x55b9ddfa8b58 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b9ddfa8ac8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b9ddfa8c00 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa8d00 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55b9ddfa8c70 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b9ddfa8da8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa8ea8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55b9ddfa8e18 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b9ddfa8f50 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfa8fa8 <col:30>
|-CXXMethodDecl 0x55b9ddfa9138 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55b9ddfa8fe8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55b9ddfa9060 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55b9ddfc16a8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55b9ddfa91e8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55b9ddfa93e8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddfa9260 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55b9ddfa92d8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddfa95f8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddfa94a8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b9ddfa9520 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddfa9808 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55b9ddfa96b8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55b9ddfa9738 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55b9ddfc16b8 <col:39> 'int' 0
|-CXXMethodDecl 0x55b9ddfa98d8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55b9ddfa99a0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b9ddfa9a68 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b9ddfa9b28 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddfa9bf0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55b9ddfa9d38 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55b9ddfa9ca8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55b9ddfa9f08 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddfa9df8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55b9ddfa9e70 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddfa9fd8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55b9ddfaa098 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55b9ddfaa138 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfaa190 <col:30>
|-CXXMethodDecl 0x55b9ddfaa1e0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55b9ddfaa280 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfaa2d8 <col:30>
|-CXXMethodDecl 0x55b9ddfaa328 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b9ddfaa3e8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddfaa4b0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55b9ddfaa550 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfaa5a8 <col:30>
|-CXXMethodDecl 0x55b9ddfaa6f8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddfaa5e8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55b9ddfaa660 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddfaa848 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55b9ddfaa7b8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddfaa920 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55b9ddfaa9e0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55b9ddfaaa80 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfaaad8 <col:30>
|-CXXMethodDecl 0x55b9ddfaab28 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55b9ddfaabc8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfaac20 <col:30>
|-CXXMethodDecl 0x55b9ddfaac70 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b9ddfaad38 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55b9ddfaadd8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfaae30 <col:30>
|-CXXMethodDecl 0x55b9ddfaae78 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55b9ddfaaf98 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55b9ddfab108 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55b9ddfab048 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55b9ddfab1f8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55b9ddfab298 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfab2f0 <col:30>
|-CXXMethodDecl 0x55b9ddfab340 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b9ddfab400 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddfab638 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55b9ddfab4b0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55b9ddfab528 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b9ddfab6e8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfab740 <col:30>
|-CXXMethodDecl 0x55b9ddfab7e8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55b9ddfab888 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfab8e0 <col:30>
|-CXXMethodDecl 0x55b9ddfab930 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55b9ddfab9d0 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfaba28 <col:30>
|-CXXMethodDecl 0x55b9ddfaba70 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55b9ddfabb10 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfabb68 <col:30>
|-CXXMethodDecl 0x55b9ddfabc68 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55b9ddfabba0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55b9ddfabd10 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfabd68 <col:30>
|-CXXMethodDecl 0x55b9ddfabf28 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55b9ddfabda0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55b9ddfabe18 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b9ddfabfd8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfac030 <col:30>
|-CXXMethodDecl 0x55b9ddfac0d8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55b9ddfac1f8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55b9ddfac318 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55b9ddfac3b8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55b9ddfac3e0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55b9ddfac508 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55b9ddfac5a8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfac600 <col:30>
|-CXXMethodDecl 0x55b9ddfac6a8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55b9ddfac748 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfac7a0 <col:30>
|-AccessSpecDecl 0x55b9ddfac7c8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55b9ddfac7f0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55b9ddfac8f0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55b9ddfac940 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfac8d0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55b9ddfac8b0 <col:14> 'int' 48
|-CXXMethodDecl 0x55b9ddfac9a8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55b9ddfaca48 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfacaa0 <col:30>
|-CXXMethodDecl 0x55b9ddfacb18 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55b9ddfacbb8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfacc10 <col:30>
|-CXXMethodDecl 0x55b9ddfaccd8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b9ddfacc48 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55b9ddface78 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55b9ddfad018 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55b9ddfacf28 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55b9ddfad0c0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55b9ddfad1c0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b9ddfad570 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfad1a0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55b9ddfad180 <col:9> 'int' 0
| |-EnumConstantDecl 0x55b9ddfad250 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b9ddfad588 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfad230 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55b9ddfad210 <col:14> 'int' 1
| |-EnumConstantDecl 0x55b9ddfad2e0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b9ddfad5a0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfad2c0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55b9ddfad2a0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55b9ddfad370 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b9ddfad5b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfad350 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55b9ddfad330 <col:14> 'int' 3
| |-EnumConstantDecl 0x55b9ddfad400 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b9ddfad5d0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfad3e0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55b9ddfad3c0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55b9ddfad490 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b9ddfad5e8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfad470 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55b9ddfad450 <col:13> 'int' 5
| `-EnumConstantDecl 0x55b9ddfad520 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55b9ddfad600 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfad500 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55b9ddfad4e0 <col:14> 'int' 6
|-CXXMethodDecl 0x55b9ddfad668 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55b9ddfad708 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfad760 <col:30>
|-CXXMethodDecl 0x55b9ddfad858 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55b9ddfad798 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55b9ddfad900 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfad958 <col:30>
|-CXXMethodDecl 0x55b9ddfad9c8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55b9ddfadaf0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55b9ddfadc68 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55b9ddfadba0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55b9ddfadd30 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55b9ddfaddf8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55b9ddfadf38 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55b9ddfadea8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55b9ddfadfe0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55b9ddfae0e0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b9ddfae2e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfae0c0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55b9ddfae0a0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55b9ddfae170 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b9ddfae2f8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfae150 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55b9ddfae130 <col:45> 'int' 4
| |-EnumConstantDecl 0x55b9ddfae200 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b9ddfae310 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfae1e0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55b9ddfae1c0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55b9ddfae290 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55b9ddfae328 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfae270 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55b9ddfae250 <col:47> 'int' 16
|-CXXMethodDecl 0x55b9ddfae388 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55b9ddfae4f8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55b9ddfae438 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55b9ddfae5a0 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfae5f8 <col:30>
|-CXXMethodDecl 0x55b9ddfae648 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55b9ddfc1fd0 <col:18, col:36>
|   `-ReturnStmt 0x55b9ddfc1fc0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55b9ddfc1fa8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55b9ddfc1f88 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55b9ddfc1f58 <col:27> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|           `-CXXThisExpr 0x55b9ddfc1f48 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55b9ddfae740 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55b9ddfc20e0 <col:30, col:48>
|   `-ReturnStmt 0x55b9ddfc20d0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55b9ddfc20b8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55b9ddfc2098 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55b9ddfc2068 <col:39> '<bound member function type>' ->xanno 0x55b9ddfac508
|           `-CXXThisExpr 0x55b9ddfc2058 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55b9ddfae828 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55b9ddfc2278 <col:24, col:50>
|   `-ReturnStmt 0x55b9ddfc2268 <col:26, col:47>
|     `-UnaryOperator 0x55b9ddfc2250 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b9ddfc2230 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b9ddfc2218 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b9ddfc21c8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55b9ddfb74e8
|         |   `-CXXMemberCallExpr 0x55b9ddfc21a8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55b9ddfc2178 <col:34> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|         |       `-CXXThisExpr 0x55b9ddfc2168 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55b9ddfc21f8 <col:46> 'int' 0
|-CXXMethodDecl 0x55b9ddfae930 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55b9ddfc2448 <col:36, col:62>
|   `-ReturnStmt 0x55b9ddfc2438 <col:38, col:59>
|     `-UnaryOperator 0x55b9ddfc2420 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b9ddfc2400 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b9ddfc23e8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b9ddfc2360 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55b9ddfb74e8
|         |   `-CXXMemberCallExpr 0x55b9ddfc2340 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b9ddfc2310 <col:46> '<bound member function type>' ->xanno 0x55b9ddfac508
|         |       `-CXXThisExpr 0x55b9ddfc2300 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55b9ddfc2390 <col:58> 'int' 0
|-CXXMethodDecl 0x55b9ddfaea48 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55b9ddfc25e0 <col:26, col:53>
|   `-ReturnStmt 0x55b9ddfc25d0 <col:28, col:50>
|     `-UnaryOperator 0x55b9ddfc25b8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b9ddfc2598 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b9ddfc2580 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b9ddfc2530 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55b9ddfb77e8
|         |   `-CXXMemberCallExpr 0x55b9ddfc2510 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55b9ddfc24e0 <col:36> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|         |       `-CXXThisExpr 0x55b9ddfc24d0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55b9ddfc2560 <col:49> 'int' 0
|-CXXMethodDecl 0x55b9ddfaeb68 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55b9ddfc27b8 <col:38, col:65>
|   `-ReturnStmt 0x55b9ddfc27a8 <col:40, col:62>
|     `-UnaryOperator 0x55b9ddfc2790 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b9ddfc2770 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b9ddfc2758 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b9ddfc26c8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55b9ddfb77e8
|         |   `-CXXMemberCallExpr 0x55b9ddfc26a8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b9ddfc2678 <col:48> '<bound member function type>' ->xanno 0x55b9ddfac508
|         |       `-CXXThisExpr 0x55b9ddfc2668 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55b9ddfc26f8 <col:61> 'int' 0
|-CXXMethodDecl 0x55b9ddfaed18 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55b9ddfaec20 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55b9ddfc2e88 <col:34, line:463:5>
|   |-ParenExpr 0x55b9ddfc2cd0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55b9ddfc2ca0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc2908 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc28d8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc2828 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc2810 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc27d0 <col:23> 'int' lvalue ParmVar 0x55b9ddfaec20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc27f0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc28b8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc2888 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc2848 <col:33> 'int' lvalue ParmVar 0x55b9ddfaec20 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55b9ddfc28a0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55b9ddfc2868 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc2968 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc2948 <col:56> 'int' 0
|   |   `-CallExpr 0x55b9ddfc2c00 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc2be8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc2bc8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc2c40 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc2a58 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55b9ddfc2c58 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc2a88 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc2c70 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc2ac0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55b9ddfc2c88 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc2bb0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc2b98 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc2b58 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55b9ddfc2e78 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55b9ddfc2e60 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55b9ddfc2e40 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b9ddfc2e10 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b9ddfc2dc0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55b9ddfb74e8
|         |   `-CXXMemberCallExpr 0x55b9ddfc2da0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b9ddfc2d70 <col:9> '<bound member function type>' ->xanno 0x55b9ddfac508
|         |       `-CXXThisExpr 0x55b9ddfc2d60 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55b9ddfc2e28 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55b9ddfc2df0 <col:21> 'int' lvalue ParmVar 0x55b9ddfaec20 'i' 'int'
|-CXXMethodDecl 0x55b9ddfaef68 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55b9ddfaedd8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55b9ddfaee50 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55b9ddfc3518 <col:40, line:472:5>
|   |-ParenExpr 0x55b9ddfc3330 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55b9ddfc3300 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc2fe0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc2fb0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc2f00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc2ee8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc2ea8 <col:23> 'int' lvalue ParmVar 0x55b9ddfaedd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc2ec8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc2f90 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc2f60 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc2f20 <col:33> 'int' lvalue ParmVar 0x55b9ddfaedd8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55b9ddfc2f78 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55b9ddfc2f40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc3040 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc3020 <col:56> 'int' 0
|   |   `-CallExpr 0x55b9ddfc3260 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc3248 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc3228 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc32a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc30b0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55b9ddfc32b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc30e0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc32d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc3118 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55b9ddfc32e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc3210 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc31f8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc31b8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55b9ddfc34f8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55b9ddfc34a0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55b9ddfc3470 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55b9ddfc3420 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55b9ddfb74e8
|     | |   `-CXXMemberCallExpr 0x55b9ddfc3400 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55b9ddfc33d0 <col:2> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|     | |       `-CXXThisExpr 0x55b9ddfc33c0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55b9ddfc3488 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b9ddfc3450 <col:14> 'int' lvalue ParmVar 0x55b9ddfaedd8 'i' 'int'
|     `-ImplicitCastExpr 0x55b9ddfc34e0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddfc34c0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55b9ddfaee50 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55b9ddfaf128 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55b9ddfaf030 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b9ddfc3c98 <col:36, line:485:5>
|   |-ParenExpr 0x55b9ddfc3a00 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc39d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc36b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc3680 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc3590 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc3578 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc3538 <col:23> 'int' lvalue ParmVar 0x55b9ddfaf030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc3558 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc3660 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc3648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc35b0 <col:33> 'int' lvalue ParmVar 0x55b9ddfaf030 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc3628 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc3610 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc35d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc35f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc3710 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc36f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc3930 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc3918 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc38f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc3970 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc3780 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b9ddfc3988 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc37b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc39a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc37f0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55b9ddfc39b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc38e0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc38c8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc3888 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55b9ddfc3c88 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55b9ddfc3c70 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55b9ddfc3c58 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b9ddfc3c28 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55b9ddfc3bc8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b9ddfc3b98 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b9ddfc3b10 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b9ddfb73c0
|             |   `-CXXMemberCallExpr 0x55b9ddfc3af0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b9ddfc3ac0 <col:61> '<bound member function type>' ->xanno 0x55b9ddfac508
|             |       `-CXXThisExpr 0x55b9ddfc3ab0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b9ddfc3bb0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b9ddfc3b40 <col:74> 'int' lvalue ParmVar 0x55b9ddfaf030 'i' 'int'
|-CXXMethodDecl 0x55b9ddfaf378 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55b9ddfaf1e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b9ddfaf260 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55b9ddfc43e8 <col:42, line:500:5>
|   |-ParenExpr 0x55b9ddfc4180 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc4150 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc3e30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc3e00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc3d10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc3cf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc3cb8 <col:23> 'int' lvalue ParmVar 0x55b9ddfaf1e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc3cd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc3de0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc3dc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc3d30 <col:33> 'int' lvalue ParmVar 0x55b9ddfaf1e8 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc3da8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc3d90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc3d50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc3d70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc3e90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc3e70 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc40b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc4098 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc4078 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc40f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc3f00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b9ddfc4108 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc3f38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc4120 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc3f70 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55b9ddfc4138 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc4060 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc4048 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc4008 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55b9ddfc43c8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55b9ddfc4378 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b9ddfc4348 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55b9ddfc42f0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b9ddfc42c0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b9ddfc4270 <col:48, col:57> 'char [48]' lvalue ->c 0x55b9ddfb73c0
|     |     |   `-CXXMemberCallExpr 0x55b9ddfc4250 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b9ddfc4220 <col:48> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|     |     |       `-CXXThisExpr 0x55b9ddfc4210 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b9ddfc42d8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b9ddfc42a0 <col:61> 'int' lvalue ParmVar 0x55b9ddfaf1e8 'i' 'int'
|     `-ImplicitCastExpr 0x55b9ddfc43b0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddfc4390 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b9ddfaf260 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b9ddfaf538 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55b9ddfaf440 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55b9ddfc4b48 <col:35, line:513:5>
|   |-ParenExpr 0x55b9ddfc4858 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc4828 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc4580 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc4550 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc4460 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc4448 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc4408 <col:23> 'int' lvalue ParmVar 0x55b9ddfaf440 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc4428 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc4530 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc4518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc4480 <col:33> 'int' lvalue ParmVar 0x55b9ddfaf440 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc44f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc44e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc44a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc44c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc45e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc45c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc4788 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc4770 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc4750 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc47c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc4650 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b9ddfc47e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc4688 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc47f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc46c0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55b9ddfc4810 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc4738 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc4720 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc46e0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55b9ddfc4b38 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55b9ddfc4b20 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55b9ddfc4b08 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b9ddfc4ad8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55b9ddfc4a50 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b9ddfc4a20 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b9ddfc49d0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55b9ddfb73c0
|             |   `-CXXMemberCallExpr 0x55b9ddfc49b0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b9ddfc4980 <col:60> '<bound member function type>' ->xanno 0x55b9ddfac508
|             |       `-CXXThisExpr 0x55b9ddfc4970 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b9ddfc4a38 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b9ddfc4a00 <col:73> 'int' lvalue ParmVar 0x55b9ddfaf440 'i' 'int'
|-CXXMethodDecl 0x55b9ddfaf788 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55b9ddfaf5f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b9ddfaf670 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55b9ddfc5268 <col:41, line:528:5>
|   |-ParenExpr 0x55b9ddfc4ff0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc4fc0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc4ce0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc4cb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc4bc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc4ba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc4b68 <col:23> 'int' lvalue ParmVar 0x55b9ddfaf5f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc4b88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc4c90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc4c78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc4be0 <col:33> 'int' lvalue ParmVar 0x55b9ddfaf5f8 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc4c58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc4c40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc4c00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc4c20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc4d40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc4d20 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc4f20 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc4f08 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc4ee8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc4f60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc4db0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b9ddfc4f78 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc4de8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc4f90 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc4e20 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55b9ddfc4fa8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc4ed0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc4eb8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc4e78 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55b9ddfc5248 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55b9ddfc51f8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b9ddfc51c8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55b9ddfc5170 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b9ddfc5130 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b9ddfc50e0 <col:47, col:56> 'char [48]' lvalue ->c 0x55b9ddfb73c0
|     |     |   `-CXXMemberCallExpr 0x55b9ddfc50c0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b9ddfc5090 <col:47> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|     |     |       `-CXXThisExpr 0x55b9ddfc5080 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b9ddfc5148 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b9ddfc5110 <col:60> 'int' lvalue ParmVar 0x55b9ddfaf5f8 'i' 'int'
|     `-ImplicitCastExpr 0x55b9ddfc5230 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddfc5210 <col:65> 'int16_t':'short' lvalue ParmVar 0x55b9ddfaf670 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55b9ddfaf948 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55b9ddfaf850 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b9ddfc5938 <col:36, line:541:5>
|   |-ParenExpr 0x55b9ddfc56d8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc56a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc5400 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc53d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc52e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc52c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc5288 <col:23> 'int' lvalue ParmVar 0x55b9ddfaf850 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc52a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc53b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc5398 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc5300 <col:33> 'int' lvalue ParmVar 0x55b9ddfaf850 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc5378 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc5360 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc5320 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc5340 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc5460 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc5440 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc5608 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc55f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc55d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc5648 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc54d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b9ddfc5660 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc5508 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc5678 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc5540 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55b9ddfc5690 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc55b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc55a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc5560 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55b9ddfc5928 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55b9ddfc5910 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55b9ddfc58f8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b9ddfc58c8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55b9ddfc5870 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b9ddfc5840 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b9ddfc57f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b9ddfb73c0
|             |   `-CXXMemberCallExpr 0x55b9ddfc57d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b9ddfc57a0 <col:61> '<bound member function type>' ->xanno 0x55b9ddfac508
|             |       `-CXXThisExpr 0x55b9ddfc5790 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b9ddfc5858 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b9ddfc5820 <col:74> 'int' lvalue ParmVar 0x55b9ddfaf850 'i' 'int'
|-CXXMethodDecl 0x55b9ddfafb18 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55b9ddfafa08 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55b9ddfafa80 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b9ddfafbc8 <col:20>
| `-OptimizeNoneAttr 0x55b9ddfafc20 <col:30>
|-CXXMethodDecl 0x55b9ddfafd58 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55b9ddfafc60 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55b9ddfc6008 <col:35, line:562:5>
|   |-ParenExpr 0x55b9ddfc5da8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc5d78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc5ad0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc5aa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc59b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc5998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc5958 <col:23> 'int' lvalue ParmVar 0x55b9ddfafc60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc5978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc5a80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc5a68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc59d0 <col:33> 'int' lvalue ParmVar 0x55b9ddfafc60 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc5a48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc5a30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc59f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc5a10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc5b30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc5b10 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc5cd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc5cc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc5ca0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc5d18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc5ba0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b9ddfc5d30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc5bd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc5d48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc5c10 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55b9ddfc5d60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc5c88 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc5c70 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc5c30 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55b9ddfc5ff8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55b9ddfc5fe0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55b9ddfc5fc8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b9ddfc5f98 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55b9ddfc5f40 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b9ddfc5f10 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b9ddfc5ec0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55b9ddfb73c0
|             |   `-CXXMemberCallExpr 0x55b9ddfc5ea0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b9ddfc5e70 <col:60> '<bound member function type>' ->xanno 0x55b9ddfac508
|             |       `-CXXThisExpr 0x55b9ddfc5e60 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b9ddfc5f28 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b9ddfc5ef0 <col:73> 'int' lvalue ParmVar 0x55b9ddfafc60 'i' 'int'
|-CXXMethodDecl 0x55b9ddfaff68 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55b9ddfafe18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b9ddfafe90 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55b9ddfc66e8 <col:41, line:577:5>
|   |-ParenExpr 0x55b9ddfc6478 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc6448 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc61a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc6170 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc6080 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc6068 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc6028 <col:23> 'int' lvalue ParmVar 0x55b9ddfafe18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc6048 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc6150 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc6138 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc60a0 <col:33> 'int' lvalue ParmVar 0x55b9ddfafe18 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc6118 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc6100 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc60c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc60e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc6200 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc61e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc63a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc6390 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc6370 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc63e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc6270 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b9ddfc6400 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc62a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc6418 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc62e0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55b9ddfc6430 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc6358 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc6340 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc6300 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55b9ddfc66c8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55b9ddfc6678 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b9ddfc6648 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55b9ddfc65e8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b9ddfc65b8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b9ddfc6568 <col:47, col:56> 'char [48]' lvalue ->c 0x55b9ddfb73c0
|     |     |   `-CXXMemberCallExpr 0x55b9ddfc6548 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b9ddfc6518 <col:47> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|     |     |       `-CXXThisExpr 0x55b9ddfc6508 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b9ddfc65d0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b9ddfc6598 <col:60> 'int' lvalue ParmVar 0x55b9ddfafe18 'i' 'int'
|     `-ImplicitCastExpr 0x55b9ddfc66b0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddfc6690 <col:65> 'int32_t':'int' lvalue ParmVar 0x55b9ddfafe90 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55b9ddfb0128 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55b9ddfb0030 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b9ddfc6e18 <col:36, line:591:5>
|   |-ParenExpr 0x55b9ddfc6b58 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc6b28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc6880 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc6850 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc6760 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc6748 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc6708 <col:23> 'int' lvalue ParmVar 0x55b9ddfb0030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc6728 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc6830 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc6818 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc6780 <col:33> 'int' lvalue ParmVar 0x55b9ddfb0030 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc67f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc67e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc67a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc67c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc68e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc68c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc6a88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc6a70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc6a50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc6ac8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc6950 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55b9ddfc6ae0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc6988 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc6af8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc69c0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55b9ddfc6b10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc6a38 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc6a20 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc69e0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55b9ddfc6e08 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55b9ddfc6df0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55b9ddfc6dd8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b9ddfc6da8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55b9ddfc6d20 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b9ddfc6cf0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b9ddfc6ca0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b9ddfb73c0
|             |   `-CXXMemberCallExpr 0x55b9ddfc6c80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b9ddfc6c50 <col:61> '<bound member function type>' ->xanno 0x55b9ddfac508
|             |       `-CXXThisExpr 0x55b9ddfc6c40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b9ddfc6d08 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b9ddfc6cd0 <col:74> 'int' lvalue ParmVar 0x55b9ddfb0030 'i' 'int'
|-CXXMethodDecl 0x55b9ddfb0378 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55b9ddfb01e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b9ddfb0260 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55b9ddfc74f8 <col:42, line:606:5>
|   |-ParenExpr 0x55b9ddfc7288 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b9ddfc7258 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc6fb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc6f80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc6e90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc6e78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc6e38 <col:23> 'int' lvalue ParmVar 0x55b9ddfb01e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc6e58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc6f60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b9ddfc6f48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc6eb0 <col:33> 'int' lvalue ParmVar 0x55b9ddfb01e8 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc6f28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc6f10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc6ed0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b9ddfc6ef0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc7010 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc6ff0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b9ddfc71b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc71a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc7180 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc71f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc7080 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55b9ddfc7210 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc70b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc7228 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc70f0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55b9ddfc7240 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc7168 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc7150 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc7110 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55b9ddfc74d8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55b9ddfc7488 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b9ddfc7458 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55b9ddfc73f8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b9ddfc73c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b9ddfc7378 <col:48, col:57> 'char [48]' lvalue ->c 0x55b9ddfb73c0
|     |     |   `-CXXMemberCallExpr 0x55b9ddfc7358 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b9ddfc7328 <col:48> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|     |     |       `-CXXThisExpr 0x55b9ddfc7318 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b9ddfc73e0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b9ddfc73a8 <col:61> 'int' lvalue ParmVar 0x55b9ddfb01e8 'i' 'int'
|     `-ImplicitCastExpr 0x55b9ddfc74c0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddfc74a0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55b9ddfb0260 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55b9ddfb0510 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55b9ddfb0440 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55b9ddfc7d68 <col:33, line:620:5>
|   |-ParenExpr 0x55b9ddfc7ae0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55b9ddfc7ab0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc7700 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc76d0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc7570 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc7558 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc7518 <col:23> 'int' lvalue ParmVar 0x55b9ddfb0440 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc7538 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc76b0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55b9ddfc7698 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc7590 <col:33> 'int' lvalue ParmVar 0x55b9ddfb0440 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc7678 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc7660 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc75b0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55b9ddfc7638 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55b9ddfc7620 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55b9ddfc75e8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc7760 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc7740 <col:79> 'int' 0
|   |   `-CallExpr 0x55b9ddfc7a10 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc79f8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc79d8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc7a50 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc7848 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55b9ddfc7a68 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc7890 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc7a80 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc78c8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55b9ddfc7a98 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc79c0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc79a8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc7968 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55b9ddfc7d58 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55b9ddfc7d40 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55b9ddfc7d28 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b9ddfc7cf8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55b9ddfc7c70 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b9ddfc7c40 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b9ddfc7bf0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55b9ddfb73c0
|             |   `-CXXMemberCallExpr 0x55b9ddfc7bd0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b9ddfc7ba0 <col:67> '<bound member function type>' ->xanno 0x55b9ddfac508
|             |       `-CXXThisExpr 0x55b9ddfc7b90 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b9ddfc7c58 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b9ddfc7c20 <col:80> 'int' lvalue ParmVar 0x55b9ddfb0440 'i' 'int'
|-CXXMethodDecl 0x55b9ddfb0728 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55b9ddfb05d0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b9ddfb0650 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55b9ddfc8590 <col:45, line:635:5>
|   |-ParenExpr 0x55b9ddfc82d8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55b9ddfc82a8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55b9ddfc7f70 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b9ddfc7f40 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b9ddfc7de0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b9ddfc7dc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b9ddfc7d88 <col:23> 'int' lvalue ParmVar 0x55b9ddfb05d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b9ddfc7da8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b9ddfc7f20 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55b9ddfc7f08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b9ddfc7e00 <col:33> 'int' lvalue ParmVar 0x55b9ddfb05d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b9ddfc7ee8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b9ddfc7ed0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b9ddfc7e20 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b9ddfac8f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55b9ddfc7ea8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55b9ddfc7e90 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55b9ddfc7e58 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55b9ddfc7fd0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b9ddfc7fb0 <col:79> 'int' 0
|   |   `-CallExpr 0x55b9ddfc8208 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55b9ddfc81f0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddfc81d0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b9ddfc8248 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc8040 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55b9ddfc8260 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b9ddfc8088 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b9ddfc8278 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b9ddfc80c0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55b9ddfc8290 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b9ddfc81b8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b9ddfc81a0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b9ddfc8158 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55b9ddfc8570 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55b9ddfc84d8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b9ddfc84a8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55b9ddfc8448 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b9ddfc8418 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b9ddfc83c8 <col:54, col:63> 'char [48]' lvalue ->c 0x55b9ddfb73c0
|     |     |   `-CXXMemberCallExpr 0x55b9ddfc83a8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b9ddfc8378 <col:54> '<bound member function type>' ->xanno 0x55b9ddfac6a8
|     |     |       `-CXXThisExpr 0x55b9ddfc8368 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b9ddfc8430 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b9ddfc83f8 <col:67> 'int' lvalue ParmVar 0x55b9ddfb05d0 'i' 'int'
|     `-CXXConstCastExpr 0x55b9ddfc8540 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55b9ddfc8528 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55b9ddfc84f0 <col:91> 'const void *' lvalue ParmVar 0x55b9ddfb0650 'x' 'const void *'
|-CXXMethodDecl 0x55b9ddfb07f8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55b9ddfc8618 <col:34, line:640:5>
|   `-ReturnStmt 0x55b9ddfc8608 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55b9ddfc85f0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55b9ddfc85c0 <col:16> 'Packet *' lvalue ->_data_packet 0x55b9ddfb7f78
|         `-CXXThisExpr 0x55b9ddfc85b0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55b9ddfb0938 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55b9ddfb08a8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9ddfc16d8 <col:46> 'bool' true
|-CXXMethodDecl 0x55b9ddfb0ab8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55b9ddfb09f0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55b9ddfb0b60 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55b9ddfb1310 <line:660:22> "" ""
| |-EnumConstantDecl 0x55b9ddfb0c60 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb1380 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb0c40 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55b9ddfb0c20 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55b9ddfa5dc0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55b9ddfb0cf0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb1398 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb0cd0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55b9ddfb0cb0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55b9ddfa5e50 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55b9ddfb0d80 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb13b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb0d60 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55b9ddfb0d40 <col:21> 'int' 0
| |-EnumConstantDecl 0x55b9ddfb0e10 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb13c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb0df0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55b9ddfb0dd0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55b9ddfb0ea0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb13e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb0e80 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55b9ddfb0e60 <col:21> 'int' 16
| |-EnumConstantDecl 0x55b9ddfb0f30 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb13f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb0f10 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b9ddfb0ef0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b9ddfb0fc0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb1410 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb0fa0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55b9ddfb0f80 <col:19> 'int' EnumConstant 0x55b9ddfb0e10 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55b9ddfb1050 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb1428 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb1030 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55b9ddfb1010 <col:19> 'int' EnumConstant 0x55b9ddfb0f30 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55b9ddfb1120 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb1440 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb1100 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55b9ddfb10e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55b9ddfb10a0 <col:23> 'int' EnumConstant 0x55b9ddfb1050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55b9ddfb10c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55b9ddfb11f0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b9ddfb1458 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddfb11d0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55b9ddfb11b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55b9ddfb1170 <col:23> 'int' EnumConstant 0x55b9ddfb1050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55b9ddfb1190 <col:40> 'int' 4
| `-EnumConstantDecl 0x55b9ddfb12c0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55b9ddfb1470 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddfb12a0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55b9ddfb1280 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55b9ddfb1240 <col:23> 'int' EnumConstant 0x55b9ddfb1050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55b9ddfb1260 <col:40> 'int' 8
|-CXXMethodDecl 0x55b9ddfb14b0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55b9ddfb1550 <col:68> "" ""
|-CXXMethodDecl 0x55b9ddfb15e8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55b9ddfb1688 <col:45> "" ""
|-CXXMethodDecl 0x55b9ddfb1720 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55b9ddfb17c0 <col:57> "" ""
|-CXXMethodDecl 0x55b9ddfb1858 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55b9ddfb18f8 <col:45> "" ""
|-CXXMethodDecl 0x55b9ddfb1990 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55b9ddfb1a30 <col:57> "" ""
|-CXXMethodDecl 0x55b9ddfb1ac0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55b9ddfb1b60 <col:51> "" ""
|-CXXMethodDecl 0x55b9ddfb1bf0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55b9ddfb1c90 <col:63> "" ""
|-CXXMethodDecl 0x55b9ddfb1d20 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55b9ddfb1dc0 <col:53> "" ""
|-CXXMethodDecl 0x55b9ddfb1e50 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55b9ddfb1ef0 <col:65> "" ""
|-CXXMethodDecl 0x55b9ddfb2008 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb1f78 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55b9ddfb20b0 <col:61> "" ""
|-CXXMethodDecl 0x55b9ddfb2248 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55b9ddfb2138 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55b9ddfb21b0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55b9ddfb22f8 <col:67> "" ""
|-CXXMethodDecl 0x55b9ddfb2410 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb2380 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b9ddfb24b8 <col:63> "" ""
|-CXXMethodDecl 0x55b9ddfb2650 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55b9ddfb2540 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b9ddfb25b8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55b9ddfb2700 <col:69> "" ""
|-CXXMethodDecl 0x55b9ddfb2818 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb2788 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b9ddfb28c0 <col:63> "" ""
|-CXXMethodDecl 0x55b9ddfb4f98 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddfb4e88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b9ddfb4f00 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9ddfb5048 <col:69> "" ""
|-CXXMethodDecl 0x55b9ddfb5160 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb50d0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55b9ddfb5208 <col:62> "" ""
|-CXXMethodDecl 0x55b9ddfb53a0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55b9ddfb5290 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b9ddfb5308 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55b9ddfb5450 <col:68> "" ""
|-CXXMethodDecl 0x55b9ddfb5568 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb54d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b9ddfb5610 <col:63> "" ""
|-CXXMethodDecl 0x55b9ddfb57a8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55b9ddfb5698 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b9ddfb5710 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55b9ddfb5858 <col:69> "" ""
|-CXXMethodDecl 0x55b9ddfb58e8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55b9ddfb5988 <col:64> "" ""
|-CXXMethodDecl 0x55b9ddfb5a18 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55b9ddfb5ab8 <col:52> "" ""
|-CXXMethodDecl 0x55b9ddfb5b48 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55b9ddfb5be8 <col:67> "" ""
|-CXXMethodDecl 0x55b9ddfb5c78 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55b9ddfb5d18 <col:55> "" ""
|-CXXMethodDecl 0x55b9ddfb5e30 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb5da0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b9ddfb5ed8 <col:58> "" ""
|-CXXMethodDecl 0x55b9ddfb6070 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55b9ddfb5f60 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b9ddfb5fd8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55b9ddfb6120 <col:62> "" ""
|-CXXMethodDecl 0x55b9ddfb6238 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb61a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b9ddfb62e0 <col:58> "" ""
|-CXXMethodDecl 0x55b9ddfb6478 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55b9ddfb6368 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b9ddfb63e0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55b9ddfb6528 <col:62> "" ""
|-CXXMethodDecl 0x55b9ddfb6640 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb65b0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55b9ddfb66e8 <col:60> "" ""
|-CXXMethodDecl 0x55b9ddfb6880 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55b9ddfb6770 <col:34> col:37 'int'
| |-ParmVarDecl 0x55b9ddfb67e8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55b9ddfb6930 <col:64> "" ""
|-CXXMethodDecl 0x55b9ddfb6a48 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb69b8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b9ddfb6af0 <col:58> "" ""
|-CXXMethodDecl 0x55b9ddfb6c88 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55b9ddfb6b78 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b9ddfb6bf0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55b9ddfb6d38 <col:62> "" ""
|-CXXMethodDecl 0x55b9ddfb6e50 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55b9ddfb6dc0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55b9ddfb6ef8 <col:59> "" ""
|-CXXMethodDecl 0x55b9ddfb7090 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddfb6f80 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b9ddfb6ff8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9ddfb7140 <col:63> "" ""
|-AccessSpecDecl 0x55b9ddfb71b0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55b9ddfb71d8 prev 0x55b9ddfac3e0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b9ddfb72d0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55b9ddfb73c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55b9ddfb74e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55b9ddfb7668 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55b9ddfb77e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55b9ddfb7968 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55b9ddfc8798 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b9ddfc9008 <col:11>
| |-CXXDestructorDecl 0x55b9ddfc8870 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55b9ddfc89a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55b9ddfc89a8
| | `-ParmVarDecl 0x55b9ddfc8ab8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55b9ddfc8b58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b9ddfc8b58
| | `-ParmVarDecl 0x55b9ddfc8c68 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55b9ddfcba28 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b9ddfcbb38 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55b9ddfcbdb8 <col:11>
| |   `-ReturnStmt 0x55b9ddfcbda8 <col:11>
| |     `-UnaryOperator 0x55b9ddfcbd90 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b9ddfcbd80 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55b9ddfcbba8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b9ddfcbba8
|   `-ParmVarDecl 0x55b9ddfcbcb8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55b9ddfb79d0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b9ddfb7ae8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55b9ddfb7b88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55b9ddfb7bf0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55b9ddfb7c58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55b9ddfb7cc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55b9ddfb7d20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55b9ddfb7de0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55b9ddfb7e40 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55b9ddfb7ea0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55b9ddfc86a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55b9ddfb7b88 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55b9ddfc9018 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55b9ddfc9070 <col:12>
| |-CXXConstructorDecl 0x55b9ddfc8cd8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55b9ddfc8cd8
| | `-ParmVarDecl 0x55b9ddfc8de8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55b9ddfc8e88 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55b9ddfc8e88
| | `-ParmVarDecl 0x55b9ddfc8f98 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55b9ddfcb110 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55b9ddfb7f18 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55b9ddfb7f78 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55b9ddfb7fe0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55b9ddfb8048 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55b9ddfb80b0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55b9ddfb8118 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55b9ddfb8178 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55b9ddfb81d8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55b9ddfb8240 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55b9ddfb82c8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55b9ddfb7f18 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55b9ddfc8640 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55b9ddfb8178 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55b9ddfc9080 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55b9ddfc90e0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55b9ddfb8468 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55b9ddfb83a8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55b9ddfb8560 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55b9ddfb8748 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55b9ddfb8650 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55b9ddfb8a18 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55b9ddfb8800 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b9ddfb8878 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b9ddfb88f0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddfb8c38 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55b9ddfb8ae8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55b9ddfb8b60 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55b9ddfc1218 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55b9ddfb8cf8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55b9ddfb8d70 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55b9ddfb8de8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55b9ddfc1370 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55b9ddfc12e0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddfc14b8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55b9ddfc1428 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55b9ddfc15b0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class RouterVisitor
         0 |   (RouterVisitor vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddf5fa20 <../dummy_inc/click/routervisitor.hh:15:1, line:53:1> line:15:7 referenced class RouterVisitor definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9ddf5fb38 <col:1, col:7> col:7 implicit referenced class RouterVisitor
|-AccessSpecDecl 0x55b9ddf5fbc8 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55b9ddf5fc50 <line:18:5, line:19:5> line:18:5 used RouterVisitor 'void ()'
| `-CompoundStmt 0x55b9ddf60468 <col:21, line:19:5>
|-CXXDestructorDecl 0x55b9ddf5fd40 <line:22:5, line:23:5> line:22:13 used ~RouterVisitor 'void () noexcept' virtual
| `-CompoundStmt 0x55b9ddf60478 <col:30, line:23:5>
|-CXXMethodDecl 0x55b9ddf601b8 <line:50:5, line:51:54> line:50:18 visit 'bool (Element *, bool, int, Element *, int, int)' virtual
| |-ParmVarDecl 0x55b9ddf5fe30 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55b9ddf5fea8 <col:36, col:41> col:41 isoutput 'bool'
| |-ParmVarDecl 0x55b9ddf5ff28 <col:51, col:55> col:55 port 'int'
| |-ParmVarDecl 0x55b9ddf5ffa0 <line:51:10, col:19> col:19 from_e 'Element *'
| |-ParmVarDecl 0x55b9ddf60020 <col:27, col:31> col:31 from_port 'int'
| `-ParmVarDecl 0x55b9ddf600a0 <col:42, col:46> col:46 distance 'int'
|-CXXMethodDecl 0x55b9ddf602e8 <line:15:7> col:7 implicit operator= 'RouterVisitor &(const RouterVisitor &)' inline default noexcept-unevaluated 0x55b9ddf602e8
| `-ParmVarDecl 0x55b9ddf603f8 <col:7> col:7 'const RouterVisitor &'
`-CXXConstructorDecl 0x55b9de020f98 <col:7> col:7 implicit constexpr RouterVisitor 'void (const RouterVisitor &)' inline default noexcept-unevaluated 0x55b9de020f98
  `-ParmVarDecl 0x55b9de0210a8 <col:7> col:7 'const RouterVisitor &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterVisitor = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.RouterVisitor = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Bypass::Locator
         0 |   class RouterVisitor (primary base)
         0 |     (RouterVisitor vtable pointer)
         8 |   class Element * _e
        16 |   int _port
        20 |   int _from_port
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de029cd0 <../elements/standard/bypass.hh:97:5, line:104:5> line:97:12 struct Locator definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'RouterVisitor'
|-CXXRecordDecl 0x55b9de029e28 <col:5, col:12> col:12 implicit referenced struct Locator
|-FieldDecl 0x55b9de029ec8 <line:98:9, col:18> col:18 _e 'Element *'
|-FieldDecl 0x55b9de029f30 <line:99:9, col:13> col:13 _port 'int'
|-FieldDecl 0x55b9de029f98 <line:100:9, col:13> col:13 _from_port 'int'
|-CXXConstructorDecl 0x55b9de02a0d8 <line:101:9, col:30> col:9 Locator 'void (int)'
| `-ParmVarDecl 0x55b9de02a000 <col:17, col:21> col:21 from_port 'int'
|-CXXMethodDecl 0x55b9de02a4c0 <line:102:9, line:103:64> line:102:14 visit 'bool (Element *, bool, int, Element *, int, int)'
| |-Overrides: [ 0x55b9ddf601b8 RouterVisitor::visit 'bool (Element *, bool, int, Element *, int, int)' ]
| |-ParmVarDecl 0x55b9de02a198 <col:20, col:29> col:29 e 'Element *'
| |-ParmVarDecl 0x55b9de02a210 <col:32, col:37> col:37 isoutput 'bool'
| |-ParmVarDecl 0x55b9de02a290 <col:47, col:51> col:51 port 'int'
| |-ParmVarDecl 0x55b9de02a308 <line:103:20, col:29> col:29 from_e 'Element *'
| |-ParmVarDecl 0x55b9de02a388 <col:37, col:41> col:41 from_port 'int'
| `-ParmVarDecl 0x55b9de02a408 <col:52, col:56> col:56 distance 'int'
|-CXXConstructorDecl 0x55b9de02a5b8 <line:97:12> col:12 implicit constexpr Locator 'void (const Bypass::Locator &)' inline default noexcept-unevaluated 0x55b9de02a5b8
| `-ParmVarDecl 0x55b9de02a6c8 <col:12> col:12 'const Bypass::Locator &'
|-CXXConstructorDecl 0x55b9de02a768 <col:12> col:12 implicit constexpr Locator 'void (Bypass::Locator &&)' inline default noexcept-unevaluated 0x55b9de02a768
| `-ParmVarDecl 0x55b9de02a878 <col:12> col:12 'Bypass::Locator &&'
|-CXXMethodDecl 0x55b9de02a918 <col:12> col:12 implicit operator= 'Bypass::Locator &(const Bypass::Locator &)' inline default noexcept-unevaluated 0x55b9de02a918
| `-ParmVarDecl 0x55b9de02aa28 <col:12> col:12 'const Bypass::Locator &'
|-CXXMethodDecl 0x55b9de02aa98 <col:12> col:12 implicit operator= 'Bypass::Locator &(Bypass::Locator &&)' inline default noexcept-unevaluated 0x55b9de02aa98
| `-ParmVarDecl 0x55b9de02aba8 <col:12> col:12 'Bypass::Locator &&'
`-CXXDestructorDecl 0x55b9de02ac30 <col:12> col:12 implicit ~Locator 'void ()' inline default noexcept-unevaluated 0x55b9de02ac30
  `-Overrides: [ 0x55b9ddf5fd40 RouterVisitor::~RouterVisitor 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%"struct.Bypass::Locator" = type { %class.RouterVisitor, %class.Element*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.Bypass::Locator" = type { %class.RouterVisitor, %class.Element*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Bypass::Assigner
         0 |   class RouterVisitor (primary base)
         0 |     (RouterVisitor vtable pointer)
         8 |   class Element * _e
        16 |   int _port
        24 |   class Vector<int> _interesting
        24 |     class vector_memory<class sized_array_memory<4> > vm_
        24 |       vector_memory<class sized_array_memory<4> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de02ad10 <../elements/standard/bypass.hh:106:5, line:113:5> line:106:12 struct Assigner definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'RouterVisitor'
|-CXXRecordDecl 0x55b9de02ae68 <col:5, col:12> col:12 implicit referenced struct Assigner
|-FieldDecl 0x55b9de02af08 <line:107:9, col:18> col:18 _e 'Element *'
|-FieldDecl 0x55b9de02af70 <line:108:9, col:13> col:13 _port 'int'
|-FieldDecl 0x55b9de039b70 <line:109:9, col:21> col:21 _interesting 'Vector<int>':'Vector<int>'
|-CXXConstructorDecl 0x55b9de039d68 <line:110:9, col:38> col:9 Assigner 'void (Element *, int)'
| |-ParmVarDecl 0x55b9de039bd0 <col:18, col:27> col:27 e 'Element *'
| `-ParmVarDecl 0x55b9de039c50 <col:30, col:34> col:34 port 'int'
|-CXXMethodDecl 0x55b9de03a158 <line:111:9, line:112:64> line:111:14 visit 'bool (Element *, bool, int, Element *, int, int)'
| |-Overrides: [ 0x55b9ddf601b8 RouterVisitor::visit 'bool (Element *, bool, int, Element *, int, int)' ]
| |-ParmVarDecl 0x55b9de039e30 <col:20, col:29> col:29 e 'Element *'
| |-ParmVarDecl 0x55b9de039ea8 <col:32, col:37> col:37 isoutput 'bool'
| |-ParmVarDecl 0x55b9de039f28 <col:47, col:51> col:51 port 'int'
| |-ParmVarDecl 0x55b9de039fa0 <line:112:20, col:29> col:29 from_e 'Element *'
| |-ParmVarDecl 0x55b9de03a020 <col:37, col:41> col:41 from_port 'int'
| `-ParmVarDecl 0x55b9de03a0a0 <col:52, col:56> col:56 distance 'int'
|-CXXConstructorDecl 0x55b9de03a258 <line:106:12> col:12 implicit Assigner 'void (const Bypass::Assigner &)' inline default noexcept-unevaluated 0x55b9de03a258
| `-ParmVarDecl 0x55b9de03a368 <col:12> col:12 'const Bypass::Assigner &'
|-CXXConstructorDecl 0x55b9de03a408 <col:12> col:12 implicit Assigner 'void (Bypass::Assigner &&)' inline default noexcept-unevaluated 0x55b9de03a408
| `-ParmVarDecl 0x55b9de03a518 <col:12> col:12 'Bypass::Assigner &&'
|-CXXMethodDecl 0x55b9de03a5b8 <col:12> col:12 implicit operator= 'Bypass::Assigner &(const Bypass::Assigner &)' inline default noexcept-unevaluated 0x55b9de03a5b8
| `-ParmVarDecl 0x55b9de03a6c8 <col:12> col:12 'const Bypass::Assigner &'
|-CXXMethodDecl 0x55b9de03a738 <col:12> col:12 implicit operator= 'Bypass::Assigner &(Bypass::Assigner &&)' inline default noexcept-unevaluated 0x55b9de03a738
| `-ParmVarDecl 0x55b9de03a848 <col:12> col:12 'Bypass::Assigner &&'
`-CXXDestructorDecl 0x55b9de03a8d0 <col:12> col:12 implicit ~Assigner 'void ()' inline default noexcept-unevaluated 0x55b9de03a8d0
  `-Overrides: [ 0x55b9ddf5fd40 RouterVisitor::~RouterVisitor 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%"struct.Bypass::Assigner" = type { %class.RouterVisitor, %class.Element*, i32, %class.Vector.5 }
  NonVirtualBaseLLVMType:%"struct.Bypass::Assigner" = type { %class.RouterVisitor, %class.Element*, i32, %class.Vector.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de1af930 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9de1afa48 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x55b9de1afad8 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55b9de1afd18 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x55b9de1afb10 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55b9de1afb90 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x55b9de1afc08 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55b9de1aff30 <col:81> 'const ArgContext' lvalue Var 0x55b9de1973f0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55b9de1afe70 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x55b9de1afde0 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x55b9de1b0088 <col:35, line:1261:5>
|   `-ReturnStmt 0x55b9de1b0078 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x55b9de1b0060 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x55b9de1b0030 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b9de1b0018 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x55b9de1afff0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x55b9de1affd0 <col:16, col:24> 'String' (CXXTemporary 0x55b9de1affd0)
|               `-CXXConstructExpr 0x55b9de1aff98 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x55b9de1aff80 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55b9de1aff60 <col:23> 'bool' lvalue ParmVar 0x55b9de1afde0 'x' 'bool'
|-CXXConstructorDecl 0x55b9de200690 <line:1257:7> col:7 implicit referenced constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b9de200798 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x55b9de200798
| `-ParmVarDecl 0x55b9de2008a8 <col:7> col:7 'const BoolArg &'
|-CXXConstructorDecl 0x55b9de200948 <col:7> col:7 implicit constexpr BoolArg 'void (BoolArg &&)' inline default trivial noexcept-unevaluated 0x55b9de200948
| `-ParmVarDecl 0x55b9de200a58 <col:7> col:7 'BoolArg &&'
`-CXXDestructorDecl 0x55b9de200af8 <col:7> col:7 implicit referenced ~BoolArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de04eb10 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9de04ec28 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55b9de04ecf8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55b9de04ed58 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55b9de04edc0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55b9de04ee48 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55b9de04f0b0 <col:16, line:46:5>
|   |-BinaryOperator 0x55b9de04eff8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55b9de04ef18 <col:9> 'TaskLink *' lvalue ->_prev 0x55b9de04ecf8
|   | | `-CXXThisExpr 0x55b9de04ef08 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55b9de04efe0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55b9de04efc0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55b9de04ef58 <col:17> 'TaskLink *' lvalue ->_next 0x55b9de04ed58
|   |     | `-CXXThisExpr 0x55b9de04ef48 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55b9de04efa8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55b9de04ef88 <col:25> 'int' 0
|   `-BinaryOperator 0x55b9de04f090 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55b9de04f028 <col:9> 'unsigned int' lvalue ->_pass 0x55b9de04edc0
|     | `-CXXThisExpr 0x55b9de04f018 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55b9de04f078 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55b9de04f058 <col:17> 'int' 0
|-CXXConstructorDecl 0x55b9de0c5ce8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55b9de0c5ce8
| `-ParmVarDecl 0x55b9de0c5df8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55b9de0c5e98 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55b9de0c5e98
| `-ParmVarDecl 0x55b9de0c5fa8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55b9de0c6198 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55b9de0c6198
|-CXXMethodDecl 0x55b9de0c6998 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55b9de0c6998
| `-ParmVarDecl 0x55b9de0c6aa8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55b9de0c6b18 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55b9de0c6b18
  `-ParmVarDecl 0x55b9de0c6c28 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de051618 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b9de051748 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55b9de0517a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55b9de051808 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55b9de0cce48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55b9de0ccf20 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b9de0ccf20
|-CXXConstructorDecl 0x55b9de0cd1d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55b9de0cd1d8
| `-ParmVarDecl 0x55b9de0cd2e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55b9de0cd388 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55b9de0cd388
  `-ParmVarDecl 0x55b9de0cd498 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de051470 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b9de051588 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55b9de051618 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b9de051748 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55b9de0517a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55b9de051808 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55b9de0cce48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55b9de0ccf20 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b9de0ccf20
| |-CXXConstructorDecl 0x55b9de0cd1d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55b9de0cd1d8
| | `-ParmVarDecl 0x55b9de0cd2e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55b9de0cd388 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55b9de0cd388
|   `-ParmVarDecl 0x55b9de0cd498 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55b9de0518c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55b9de051928 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55b9de0518c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55b9de051748 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55b9de051980 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55b9de0518c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55b9de0517a8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55b9de0519d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55b9de0518c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55b9de051808 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55b9de051a30 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b9de0ccd58 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b9de0cd6b8 <col:11>
|-CXXConstructorDecl 0x55b9de0cd028 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55b9de0cd028
| `-ParmVarDecl 0x55b9de0cd138 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55b9de0cd538 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55b9de0cd538
  `-ParmVarDecl 0x55b9de0cd648 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddf77470 prev 0x55b9ddf6e2b0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9ddf77568 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55b9ddf77608 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55b9ddf7e3d0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b9ddf7e7b8 <col:11>
|-CXXConstructorDecl 0x55b9ddf7e4b0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9ddf7e598 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b9ddf7ef00 <col:11>
|-CXXConstructorDecl 0x55b9ddf7e638 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9ddf7e748 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55b9ddf80758 <col:11>
|-CXXDestructorDecl 0x55b9ddf7fa68 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b9ddc86618 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9ddc86728 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b9ddc86ff0 <col:11>
|   `-ReturnStmt 0x55b9ddc86fe0 <col:11>
|     `-UnaryOperator 0x55b9ddc86fc8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9ddc86fb8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55b9ddc86798 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b9ddc868a8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55b9de04ce10 <col:11>
    `-ReturnStmt 0x55b9de04ce00 <col:11>
      `-UnaryOperator 0x55b9de04cde8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b9de04cdd8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9ddf6d468 prev 0x55b9ddf6d178 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9ddf6d560 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55b9ddf6d5f0 <col:19, col:25> col:19 public
|-TypedefDecl 0x55b9ddf6d628 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55b9ddbd27f0 'int32_t' sugar
|   |-Typedef 0x55b9ddae2328 'int32_t'
|   `-TypedefType 0x55b9ddabb510 '__int32_t' sugar
|     |-Typedef 0x55b9ddabb128 '__int32_t'
|     `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9ddf6d690 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55b9ddbd29b0 'int64_t' sugar
|   |-Typedef 0x55b9ddae2390 'int64_t'
|   `-TypedefType 0x55b9ddabb630 '__int64_t' sugar
|     |-Typedef 0x55b9ddabb208 '__int64_t'
|     `-BuiltinType 0x55b9dda795a0 'long'
|-EnumDecl 0x55b9ddf6d6e8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55b9ddf6d860 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55b9ddf6d840 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55b9ddf6d818 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55b9ddf6d800 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55b9ddf6d7d0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55b9ddf6d958 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55b9ddf6d938 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55b9ddf6d910 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55b9ddf6d8f8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55b9ddf6d8d0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55b9ddf6d8b0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55b9ddf6d9a8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55b9ddf6dab0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b9ddf6e000 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf6da90 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55b9ddf6da70 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55b9ddf6db40 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b9ddf6e018 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf6db20 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55b9ddf6db00 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55b9ddf6dbd0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b9ddf6e030 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf6dbb0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b9ddf6db90 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55b9ddf6dc60 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b9ddf6e048 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf6dc40 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55b9ddf6dc20 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55b9ddf6dcf0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b9ddf6e060 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf6dcd0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b9ddf6dcb0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55b9ddf6dd80 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b9ddf6e078 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf6dd60 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b9ddf6dd40 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55b9ddf6de10 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b9ddf6e090 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf6ddf0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55b9ddf6ddd0 <col:26> 'int' EnumConstant 0x55b9ddf6dab0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55b9ddf6dee0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b9ddf6e0a8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf6dec0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55b9ddf6dea0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55b9ddf6de60 <col:27> 'int' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55b9ddf6de80 <col:44> 'int' EnumConstant 0x55b9ddf6dd80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55b9ddf6dfb0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55b9ddf6e0c0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddf6df90 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55b9ddf6df70 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55b9ddf6df30 <col:27> 'int' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55b9ddf6df50 <col:44> 'int' EnumConstant 0x55b9ddf6dc60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55b9ddf6e0d8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55b9ddf6e1e0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55b9ddf6e230 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddf6e1c0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55b9ddf6e1a0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55b9ddf6e258 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55b9ddbd2420 'uninitialized_type'
|   `-CXXRecord 0x55b9ddbd2388 'uninitialized_type'
|-CXXRecordDecl 0x55b9ddf6e2b0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55b9ddf6e3c0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf7e7c8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b9ddf7e8e8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55b9ddf7e8a0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55b9ddf7e830 <col:9> '<bound member function type>' ->assign 0x55b9ddf73008
|     | `-CXXThisExpr 0x55b9ddf7e820 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55b9ddf7e860 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55b9ddf7e8d0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55b9ddf7e880 <col:19> 'int' 0
|-CXXConstructorDecl 0x55b9ddf6e608 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf6e480 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55b9ddf6e4f8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b9ddf7a100 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b9ddf7a0e0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf7e900 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b9ddf7ea50 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55b9ddf7e9d8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55b9ddf7e968 <col:9> '<bound member function type>' ->assign 0x55b9ddf73008
|     | `-CXXThisExpr 0x55b9ddf7e958 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b9ddf7ea20 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b9ddf7ea08 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b9ddf7e998 <col:16> 'long' lvalue ParmVar 0x55b9ddf6e480 'sec' 'long'
|     `-ImplicitCastExpr 0x55b9ddf7ea38 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddf7e9b8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf6e4f8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b9ddf6e868 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf6e6d8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55b9ddf6e750 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b9ddf7a138 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b9ddf7a118 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf7ea68 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b9ddf7eba0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55b9ddf7eb40 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55b9ddf7ead0 <col:9> '<bound member function type>' ->assign 0x55b9ddf73008
|     | `-CXXThisExpr 0x55b9ddf7eac0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b9ddf7eb70 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9ddf7eb00 <col:16> 'int' lvalue ParmVar 0x55b9ddf6e6d8 'sec' 'int'
|     `-ImplicitCastExpr 0x55b9ddf7eb88 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddf7eb20 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf6e750 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b9ddf6eac8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf6e938 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55b9ddf6e9b0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b9ddf7a170 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b9ddf7a150 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf7ebb8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b9ddf7ed08 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55b9ddf7ec90 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55b9ddf7ec20 <col:9> '<bound member function type>' ->assign 0x55b9ddf73008
|     | `-CXXThisExpr 0x55b9ddf7ec10 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b9ddf7ecd8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b9ddf7ecc0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b9ddf7ec50 <col:16> 'unsigned long' lvalue ParmVar 0x55b9ddf6e938 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55b9ddf7ecf0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddf7ec70 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf6e9b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b9ddf6fc60 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf6eb98 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55b9ddf6ec10 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b9ddf7a1a8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b9ddf7a188 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf7ed20 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b9ddf7ee70 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55b9ddf7edf8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55b9ddf7ed88 <col:9> '<bound member function type>' ->assign 0x55b9ddf73008
|     | `-CXXThisExpr 0x55b9ddf7ed78 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b9ddf7ee40 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b9ddf7ee28 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b9ddf7edb8 <col:16> 'unsigned int' lvalue ParmVar 0x55b9ddf6eb98 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55b9ddf7ee58 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b9ddf7edd8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf6ec10 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b9ddf6fdc0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55b9ddf6fd30 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55b9ddf6ff58 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55b9ddf6fe98 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55b9ddf70188 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55b9ddf70090 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55b9ddf70338 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55b9ddf70278 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf7ef10 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55b9ddf7ee88 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55b9ddf70278 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b9ddf7ef70 <col:19, line:214:5>
|-CXXConstructorDecl 0x55b9ddf70508 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55b9ddf70448 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf7ef80 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b9ddf7f030 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55b9ddf7f008 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55b9ddf7efd8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55b9ddf70448 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55b9ddf706f8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55b9ddf70670 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55b9ddf6d210 'Timestamp'
|   | `-CXXRecord 0x55b9ddf6d468 'Timestamp'
|   `-ParenType 0x55b9ddf70610 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55b9ddf705e0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55b9ddf6d7b0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55b9ddf6d628 'seconds_type'
|         `-TypedefType 0x55b9ddbd27f0 'int32_t' sugar
|           |-Typedef 0x55b9ddae2328 'int32_t'
|           `-TypedefType 0x55b9ddabb510 '__int32_t' sugar
|             |-Typedef 0x55b9ddabb128 '__int32_t'
|             `-BuiltinType 0x55b9dda79580 'int'
|-CXXConversionDecl 0x55b9ddf70838 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b9ddf70908 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55b9ddf7f138 <col:37, line:231:5>
|   `-ReturnStmt 0x55b9ddf7f128 <line:227:9, col:23>
|     `-BinaryOperator 0x55b9ddf7f108 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55b9ddf7f0d8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b9ddf7f088 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55b9ddf77608
|       |   `-MemberExpr 0x55b9ddf7f058 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55b9ddf785b8
|       |     `-CXXThisExpr 0x55b9ddf7f048 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b9ddf7f0f0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55b9ddf7f0b8 <col:23> 'int' 0
|-CXXMethodDecl 0x55b9ddf709c8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55b9ddf70a88 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddf70b48 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddf70c08 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddf70cc8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9ddf70e38 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55b9ddf70d78 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55b9ddf70f80 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55b9ddf70ef0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf71048 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b9ddf710e8 <col:54> "" ""
|-CXXMethodDecl 0x55b9ddf71178 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b9ddf71218 <col:54> "" ""
|-CXXMethodDecl 0x55b9ddf712a8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b9ddf71348 <col:54> "" ""
|-CXXMethodDecl 0x55b9ddf71448 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55b9ddf71518 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55b9ddf71648 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55b9ddf71740 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55b9ddf71878 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b9ddf7f350 <col:39, line:271:5>
|   `-ReturnStmt 0x55b9ddf7f340 <line:267:9, col:61>
|     `-CallExpr 0x55b9ddf7f2e0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55b9ddf7f2c8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b9ddf7f150 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b9ddf788e8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55b9ddf7f310 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b9ddf7f1b0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55b9ddf77608
|       |   `-MemberExpr 0x55b9ddf7f180 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55b9ddf785b8
|       |     `-CXXThisExpr 0x55b9ddf7f170 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b9ddf7f328 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55b9ddf7f250 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55b9ddf7f220 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55b9ddf7f1e0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55b9ddf7f238 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55b9ddf7f200 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dd80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b9ddf71938 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b9ddf7f510 <col:39, line:279:5>
|   `-ReturnStmt 0x55b9ddf7f500 <line:275:9, col:61>
|     `-CallExpr 0x55b9ddf7f4a0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55b9ddf7f488 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b9ddf7f368 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b9ddf788e8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55b9ddf7f4d0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b9ddf7f3c8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55b9ddf77608
|       |   `-MemberExpr 0x55b9ddf7f398 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55b9ddf785b8
|       |     `-CXXThisExpr 0x55b9ddf7f388 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b9ddf7f4e8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55b9ddf7f468 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55b9ddf7f438 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55b9ddf7f3f8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55b9ddf7f450 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55b9ddf7f418 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dc60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b9ddf719f8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b9ddf7f6a8 <col:39, line:287:5>
|   `-ReturnStmt 0x55b9ddf7f698 <line:283:9, col:53>
|     `-BinaryOperator 0x55b9ddf7f678 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55b9ddf7f648 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b9ddf7f568 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55b9ddf77608
|       |   `-MemberExpr 0x55b9ddf7f538 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55b9ddf785b8
|       |     `-CXXThisExpr 0x55b9ddf7f528 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b9ddf7f660 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55b9ddf7f628 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b9ddf7f608 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55b9ddf7f5d8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b9ddf7f598 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dab0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b9ddf7f5f0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b9ddf7f5b8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b9ddf71ae8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b9ddf80940 <col:40, line:293:5>
|   |-DeclStmt 0x55b9ddf7f7f0 <line:291:9, col:48>
|   | `-VarDecl 0x55b9ddf7f6d0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55b9ddf7f7d0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55b9ddf7f778 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55b9ddf7f748 <col:22> '<bound member function type>' ->subsec 0x55b9ddf70a88
|   |     |   `-CXXThisExpr 0x55b9ddf7f738 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55b9ddf7f7b8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55b9ddf7f798 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dee0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b9ddf80930 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55b9ddf80918 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55b9ddf808e8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddf808d0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55b9ddf808b0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55b9ddf80880 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55b9ddf80618 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55b9ddf80600 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55b9ddf7f808 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55b9ddf7f6d0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55b9ddf80820 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55b9ddf80808 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55b9ddf807d8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55b9ddf80630 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55b9ddf805a0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55b9ddf80588 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55b9ddf80538 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b9ddf6d3b8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55b9ddf804d8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55b9ddf7f838 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55b9ddf7f828 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55b9ddf80520 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55b9ddf80508 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55b9ddf7fcf8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55b9ddf7f860 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55b9ddf7f8f0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55b9ddf7f8c0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55b9ddf7f880 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dee0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55b9ddf7f8d8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55b9ddf7f8a0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55b9ddf7f6d0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55b9ddf80850 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55b9ddf805e8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55b9ddf805d8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55b9ddf71ba8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b9ddf80e98 <col:40, line:302:5>
|   |-DeclStmt 0x55b9ddf80a90 <line:297:9, col:48>
|   | `-VarDecl 0x55b9ddf80970 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55b9ddf80a70 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55b9ddf80a18 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55b9ddf809e8 <col:22> '<bound member function type>' ->subsec 0x55b9ddf70a88
|   |     |   `-CXXThisExpr 0x55b9ddf809d8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55b9ddf80a58 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55b9ddf80a38 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dfb0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b9ddf80e88 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55b9ddf80e70 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55b9ddf80e40 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddf80e28 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55b9ddf80e08 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55b9ddf80dd8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55b9ddf80d00 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55b9ddf80ce8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55b9ddf80aa8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55b9ddf80970 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55b9ddf80d78 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55b9ddf80d60 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55b9ddf80d30 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55b9ddf80d18 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55b9ddf80c88 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55b9ddf80c70 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55b9ddf80c50 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b9ddf6d3b8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55b9ddf80bf0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55b9ddf80ad8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55b9ddf80ac8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55b9ddf80c38 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55b9ddf80c20 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55b9ddf80bb0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55b9ddf80b00 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55b9ddf80b90 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55b9ddf80b60 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55b9ddf80b20 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dfb0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55b9ddf80b78 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55b9ddf80b40 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55b9ddf80970 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55b9ddf80da8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55b9ddf80cd0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55b9ddf80cc0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55b9ddf71c68 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b9ddf80f20 <col:40, line:306:5>
|   `-ReturnStmt 0x55b9ddf80f10 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55b9ddf80ee0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55b9ddf80ec8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9ddf80eb8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55b9ddf71e08 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55b9ddf71d18 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf71fd8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55b9ddf71ee0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55b9ddf720c8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55b9ddf72238 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55b9ddf72178 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55b9ddf81068 <col:56, line:320:5>
|   `-ReturnStmt 0x55b9ddf81058 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55b9ddf81040 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55b9ddf81010 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddf80ff8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b9ddf80fb8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b9ddf80f88 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b9ddf80f48 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b9ddf72178 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55b9ddf80fa0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b9ddf80f68 <col:31> 'int' 0
|-CXXMethodDecl 0x55b9ddf72478 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf722f0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf72368 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf81238 <col:72, line:326:5>
|   `-ReturnStmt 0x55b9ddf81228 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55b9ddf81210 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b9ddf811e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddf811c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b9ddf81188 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b9ddf81170 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b9ddf81090 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b9ddf722f0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b9ddf81130 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b9ddf81118 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b9ddf810b0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b9ddf76d60 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b9ddf81158 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b9ddf810d0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf72368 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf72628 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b9ddf72538 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b9ddf81900 <col:56, line:337:5>
|   |-DeclStmt 0x55b9ddf81538 <line:329:9, col:51>
|   | `-VarDecl 0x55b9ddf81260 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b9ddf81520 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b9ddf814f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b9ddf814d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b9ddf814c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b9ddf81490 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b9ddf81478 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b9ddf81460 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b9ddf81350 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b9ddf816f0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b9ddf815a0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b9ddf77608
|   | | `-MemberExpr 0x55b9ddf81570 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b9ddf785b8
|   | |   `-DeclRefExpr 0x55b9ddf81550 <col:9> 'Timestamp' lvalue Var 0x55b9ddf81260 't' 'Timestamp'
|   | `-BinaryOperator 0x55b9ddf816d0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55b9ddf816a0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b9ddf815d0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b9ddf72538 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b9ddf816b8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55b9ddf81680 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55b9ddf81660 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55b9ddf81630 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55b9ddf815f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55b9ddf81648 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55b9ddf81610 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dd80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b9ddf818e8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55b9ddf818b8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b9ddf818a0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b9ddf81880 <col:16> 'Timestamp' lvalue Var 0x55b9ddf81260 't' 'Timestamp'
|-CXXMethodDecl 0x55b9ddf727f0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf726e0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf72758 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf81ab8 <col:72, line:343:5>
|   `-ReturnStmt 0x55b9ddf81aa8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55b9ddf81a90 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b9ddf81a60 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddf81a48 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b9ddf81a08 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b9ddf819f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b9ddf81938 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b9ddf726e0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b9ddf819b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b9ddf81998 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b9ddf81958 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b9ddf76ea8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b9ddf819d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b9ddf81978 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf72758 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf72940 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b9ddf728b0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b9ddf81f00 <col:56, line:354:5>
|   |-DeclStmt 0x55b9ddf81ca8 <line:346:9, col:51>
|   | `-VarDecl 0x55b9ddf81ae0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b9ddf81c90 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b9ddf81c60 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b9ddf81c48 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b9ddf81c30 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b9ddf81c00 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b9ddf81be8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b9ddf81bd0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b9ddf81ba0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b9ddf81e60 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b9ddf81d10 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b9ddf77608
|   | | `-MemberExpr 0x55b9ddf81ce0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b9ddf785b8
|   | |   `-DeclRefExpr 0x55b9ddf81cc0 <col:9> 'Timestamp' lvalue Var 0x55b9ddf81ae0 't' 'Timestamp'
|   | `-BinaryOperator 0x55b9ddf81e40 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55b9ddf81e10 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b9ddf81d40 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b9ddf728b0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b9ddf81e28 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55b9ddf81df0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55b9ddf81dd0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55b9ddf81da0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55b9ddf81d60 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55b9ddf81db8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55b9ddf81d80 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dc60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b9ddf81ee8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55b9ddf81eb8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b9ddf81ea0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b9ddf81e80 <col:16> 'Timestamp' lvalue Var 0x55b9ddf81ae0 't' 'Timestamp'
|-CXXMethodDecl 0x55b9ddf72b08 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf729f8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf72a70 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf820b8 <col:72, line:360:5>
|   `-ReturnStmt 0x55b9ddf820a8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55b9ddf82090 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b9ddf82060 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddf82048 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b9ddf82008 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b9ddf81ff0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b9ddf81f38 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b9ddf729f8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b9ddf81fb0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b9ddf81f98 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b9ddf81f58 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b9ddf76ff0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b9ddf81fd8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b9ddf81f78 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf72a70 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf72c58 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b9ddf72bc8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b9ddf8ea28 <col:56, line:371:5>
|   |-DeclStmt 0x55b9ddf822a8 <line:363:9, col:51>
|   | `-VarDecl 0x55b9ddf820e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b9ddf82290 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b9ddf82260 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b9ddf82248 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b9ddf82230 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b9ddf82200 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b9ddf821e8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b9ddf821d0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b9ddf821a0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b9ddf8e988 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b9ddf82310 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b9ddf77608
|   | | `-MemberExpr 0x55b9ddf822e0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b9ddf785b8
|   | |   `-DeclRefExpr 0x55b9ddf822c0 <col:9> 'Timestamp' lvalue Var 0x55b9ddf820e0 't' 'Timestamp'
|   | `-CallExpr 0x55b9ddf8e928 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55b9ddf8e910 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55b9ddf82340 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b9ddf788e8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55b9ddf8e958 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b9ddf82360 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b9ddf72bc8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b9ddf8e970 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55b9ddf8e8f0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55b9ddf8e8c0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55b9ddf82380 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dab0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55b9ddf8e8d8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55b9ddf823a0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b9ddf8ea10 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55b9ddf8e9e0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b9ddf8e9c8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b9ddf8e9a8 <col:16> 'Timestamp' lvalue Var 0x55b9ddf820e0 't' 'Timestamp'
|-CXXMethodDecl 0x55b9ddf72d48 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55b9ddf8eb68 <col:39, line:377:5>
|   `-ReturnStmt 0x55b9ddf8eb58 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55b9ddf8eb40 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55b9ddf8eb10 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b9ddf8eaf8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b9ddf8eab8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55b9ddf8ea60 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55b9ddf8eaa0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b9ddf8ea80 <col:29> 'int' 1
|-CXXMethodDecl 0x55b9ddf72e08 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55b9ddf8ec48 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55b9ddf8ec00 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55b9ddf8eb90 <col:9> '<bound member function type>' ->assign 0x55b9ddf73008
|     | `-CXXThisExpr 0x55b9ddf8eb80 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55b9ddf8ebc0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55b9ddf8ec30 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55b9ddf8ebe0 <col:19> 'int' 0
|-CXXMethodDecl 0x55b9ddf73008 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf72eb8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf72f30 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b9ddf7a1e0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b9ddf7a1c0 <col:60> 'int' 0
| `-CompoundStmt 0x55b9ddf8ee40 <col:63, line:395:5>
|   `-BinaryOperator 0x55b9ddf8ee20 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55b9ddf8eca0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55b9ddf77608
|     | `-MemberExpr 0x55b9ddf8ec70 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55b9ddf785b8
|     |   `-CXXThisExpr 0x55b9ddf8ec60 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55b9ddf8ee00 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55b9ddf8ed90 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55b9ddf8ed30 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55b9ddf8ed18 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55b9ddf8ed00 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55b9ddf8ecd0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b9ddf72eb8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55b9ddf8ed78 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55b9ddf8ed58 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55b9ddf8ede8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55b9ddf8edd0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55b9ddf8edb0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf72f30 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf731d8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf730c8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf73140 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8ef98 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55b9ddf8ef50 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55b9ddf8ee68 <col:9> '<bound member function type>' ->assign 0x55b9ddf73008
|     | `-CXXThisExpr 0x55b9ddf8ee58 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b9ddf8ef80 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9ddf8ee98 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b9ddf730c8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55b9ddf8ef10 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55b9ddf8eef8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b9ddf8eeb8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b9ddf76ea8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55b9ddf8ef38 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b9ddf8eed8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf73140 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf733a8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf73298 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf73310 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8f0f0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55b9ddf8f0a8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55b9ddf8efc0 <col:9> '<bound member function type>' ->assign 0x55b9ddf73008
|     | `-CXXThisExpr 0x55b9ddf8efb0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b9ddf8f0d8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9ddf8eff0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b9ddf73298 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55b9ddf8f068 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55b9ddf8f050 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b9ddf8f010 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b9ddf76ff0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55b9ddf8f090 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b9ddf8f030 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf73310 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf73578 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf73468 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf734e0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b9ddf7a218 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b9ddf7a1f8 <col:57> 'int' 0
| `-DeprecatedAttr 0x55b9ddf73628 <col:75> "" ""
|-CXXMethodDecl 0x55b9ddf737b8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf736a8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf73720 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9ddf73868 <col:74> "" ""
|-CXXMethodDecl 0x55b9ddf739f8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b9ddf738e8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b9ddf73960 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9ddf73aa8 <col:74> "" ""
|-CXXMethodDecl 0x55b9ddf73b38 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55b9ddf73bd8 <col:42> "" ""
|-CXXMethodDecl 0x55b9ddf76410 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55b9ddf762f0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55b9ddf76370 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55b9ddf764e0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b9ddf765a0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55b9ddf76640 <col:20>
| `-OptimizeNoneAttr 0x55b9ddf76698 <col:30>
|-CXXMethodDecl 0x55b9ddf766e0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b9ddf767a0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55b9ddf76860 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b9ddf76920 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55b9ddf769e0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b9ddf76aa0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55b9ddf76b60 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55b9ddf76c20 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55b9ddf76d60 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf76cd0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8f238 <col:58, line:512:5>
|   `-ReturnStmt 0x55b9ddf8f228 <line:511:9, col:53>
|     `-BinaryOperator 0x55b9ddf8f208 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b9ddf8f1d8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b9ddf8f108 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf76cd0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b9ddf8f1f0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b9ddf8f1b8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b9ddf8f198 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b9ddf8f168 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b9ddf8f128 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b9ddf8f180 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b9ddf8f148 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dd80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b9ddf76ea8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf76e18 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8f380 <col:58, line:516:5>
|   `-ReturnStmt 0x55b9ddf8f370 <line:515:9, col:53>
|     `-BinaryOperator 0x55b9ddf8f350 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b9ddf8f320 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b9ddf8f250 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf76e18 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b9ddf8f338 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b9ddf8f300 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b9ddf8f2e0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b9ddf8f2b0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b9ddf8f270 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b9ddf8f2c8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b9ddf8f290 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dc60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b9ddf76ff0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf76f60 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8f4c8 <col:58, line:520:5>
|   `-ReturnStmt 0x55b9ddf8f4b8 <line:519:9, col:53>
|     `-BinaryOperator 0x55b9ddf8f498 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b9ddf8f468 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b9ddf8f398 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf76f60 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b9ddf8f480 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b9ddf8f448 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b9ddf8f428 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55b9ddf8f3f8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b9ddf8f3b8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dab0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b9ddf8f410 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b9ddf8f3d8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b9ddf77138 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf770a8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8f610 <col:60, line:524:5>
|   `-ReturnStmt 0x55b9ddf8f600 <line:523:9, col:55>
|     `-BinaryOperator 0x55b9ddf8f5e0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b9ddf8f5b0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b9ddf8f4e0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf770a8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b9ddf8f5c8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b9ddf8f590 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b9ddf8f570 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55b9ddf8f540 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b9ddf8f500 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b9ddf8f558 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b9ddf8f520 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dd80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b9ddf77280 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf771f0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8f758 <col:60, line:528:5>
|   `-ReturnStmt 0x55b9ddf8f748 <line:527:9, col:55>
|     `-BinaryOperator 0x55b9ddf8f728 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b9ddf8f6f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b9ddf8f628 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf771f0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b9ddf8f710 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b9ddf8f6d8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b9ddf8f6b8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55b9ddf8f688 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b9ddf8f648 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b9ddf8f6a0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b9ddf8f668 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dc60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b9ddf773c8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf77338 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8f8a0 <col:60, line:532:5>
|   `-ReturnStmt 0x55b9ddf8f890 <line:531:9, col:55>
|     `-BinaryOperator 0x55b9ddf8f870 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b9ddf8f840 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b9ddf8f770 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf77338 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b9ddf8f858 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b9ddf8f820 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b9ddf8f800 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b9ddf8f7d0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b9ddf8f790 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6dab0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b9ddf8f7e8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b9ddf8f7b0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b9ddf6de10 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55b9ddf77470 prev 0x55b9ddf6e2b0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b9ddf77568 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55b9ddf77608 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55b9ddf7e3d0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b9ddf7e7b8 <col:11>
| |-CXXConstructorDecl 0x55b9ddf7e4b0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b9ddf7e598 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55b9ddf7ef00 <col:11>
| |-CXXConstructorDecl 0x55b9ddf7e638 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b9ddf7e748 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55b9ddf80758 <col:11>
| |-CXXDestructorDecl 0x55b9ddf7fa68 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b9ddc86618 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b9ddc86728 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55b9ddc86ff0 <col:11>
| |   `-ReturnStmt 0x55b9ddc86fe0 <col:11>
| |     `-UnaryOperator 0x55b9ddc86fc8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b9ddc86fb8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55b9ddc86798 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55b9ddc868a8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55b9de04ce10 <col:11>
|     `-ReturnStmt 0x55b9de04ce00 <col:11>
|       `-UnaryOperator 0x55b9de04cde8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b9de04cdd8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55b9ddf77670 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55b9ddf77770 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b9ddf77970 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf77750 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55b9ddf77730 <col:21> 'int' 0
| |-EnumConstantDecl 0x55b9ddf77800 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b9ddf77988 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf777e0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55b9ddf777c0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55b9ddf77890 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b9ddf779a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9ddf77870 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55b9ddf77850 <col:23> 'int' 2
| `-EnumConstantDecl 0x55b9ddf77920 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55b9ddf779b8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9ddf77900 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55b9ddf778e0 <col:27> 'int' 3
|-CXXMethodDecl 0x55b9ddf779f8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55b9ddf77ac0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55b9ddf77cc8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55b9ddf77b70 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55b9ddf77bf0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55b9ddf7a230 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55b9ddf77ed8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55b9ddf77d88 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55b9ddf77e00 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b9ddf77fa8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55b9ddf78068 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55b9ddf781d8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55b9ddf78118 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55b9ddf782a0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b9ddf78360 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55b9ddf78420 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b9ddf784e0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55b9ddf78580 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55b9ddf785b8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55b9ddf78628 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55b9ddf8f8b8 <col:27, line:684:5>
|-CXXMethodDecl 0x55b9ddf786e8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55b9ddf8f8c8 <col:27, line:696:5>
|-CXXMethodDecl 0x55b9ddf788e8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf78798 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55b9ddf78810 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8fa50 <col:66, line:700:5>
|   `-ReturnStmt 0x55b9ddf8fa40 <line:699:9, col:31>
|     `-CallExpr 0x55b9ddf8f9e0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55b9ddf8f9c8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b9ddf8f978 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55b9dddfac98 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55b9ddf8fa10 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55b9ddf8f938 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b9ddf78798 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55b9ddf8fa28 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b9ddf8f958 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf78810 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9ddf78c58 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b9ddf789a8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55b9ddf78a20 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55b9ddf78a98 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55b9ddf78b10 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9ddf8fda0 <col:64, line:707:5>
|   |-DeclStmt 0x55b9ddf8fae0 <line:704:9, col:24>
|   | `-VarDecl 0x55b9ddf8fa78 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55b9ddf8fcf0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55b9ddf8faf8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55b9ddf78a20 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55b9ddf8fcd8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55b9ddf8fc70 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55b9ddf8fc58 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b9ddf8fbd8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55b9dddfff68 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55b9ddf8fca8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55b9ddf8fb78 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b9ddf78a98 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55b9ddf8fcc0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55b9ddf8fb98 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9ddf78b10 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55b9ddf8fbb8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55b9ddf8fa78 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55b9ddf8fd80 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55b9ddf8fd10 <col:9> 'int32_t':'int' lvalue ParmVar 0x55b9ddf789a8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55b9ddf8fd68 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55b9ddf8fd50 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55b9ddf8fd30 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55b9ddf8fa78 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55b9ddf78ef8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55b9ddf78d28 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55b9ddf78da0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55b9ddf78e18 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55b9ddf79198 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55b9ddf78fc0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55b9ddf79038 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55b9ddf790b0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55b9ddf79328 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55b9ddf79260 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55b9ddf79528 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55b9ddf793e0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55b9ddf79458 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55b9ddf797f8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55b9ddf79738 parent 0x55b9dda79488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b9ddf795e8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55b9ddf79660 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55b9ddf79a18 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55b9ddf79958 parent 0x55b9dda79488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b9ddf79848 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55b9ddf798c0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55b9ddf79be0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55b9ddf79b28 parent 0x55b9dda79488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55b9ddf79a68 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55b9ddf79e68 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55b9ddf79da8 parent 0x55b9dda79488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b9ddf79c58 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55b9ddf79cd0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55b9ddf7a088 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55b9ddf79fc8 parent 0x55b9dda79488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b9ddf79eb8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55b9ddf79f30 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55b9ddf7f910 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9ddf7f9f8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf80468 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55b9ddf80420 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55b9ddf785b8
| |     `-DeclRefExpr 0x55b9ddf80400 <col:7> 'const Timestamp' lvalue ParmVar 0x55b9ddf7f9f8 '' 'const Timestamp &'
| `-CompoundStmt 0x55b9ddf804c8 <col:7>
|-CXXConstructorDecl 0x55b9ddf7fb78 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9ddf7fc88 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55b9ddf785b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b9ddf80768 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55b9ddf80710 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55b9ddf785b8
| |     `-CXXStaticCastExpr 0x55b9ddf806e0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55b9ddf806b0 <col:7> 'Timestamp' lvalue ParmVar 0x55b9ddf7fc88 '' 'Timestamp &&'
| `-CompoundStmt 0x55b9ddf807c8 <col:7>
|-CXXDestructorDecl 0x55b9ddf7fd38 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b9ddc86468 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9ddc86578 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55b9ddc87068 <col:7>
|   |-CXXMemberCallExpr 0x55b9ddc87008 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55b9ddc86f48 <col:7> '<bound member function type>' .operator= 0x55b9ddc86618
|   | | `-MemberExpr 0x55b9ddc86e58 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55b9ddf785b8
|   | |   `-CXXThisExpr 0x55b9ddc86e48 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55b9ddc86f18 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55b9ddf785b8
|   |   `-DeclRefExpr 0x55b9ddc86ef8 <col:7> 'const Timestamp' lvalue ParmVar 0x55b9ddc86578 '' 'const Timestamp &'
|   `-ReturnStmt 0x55b9ddc87058 <col:7>
|     `-UnaryOperator 0x55b9ddc87040 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9ddc87030 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55b9ddc86918 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b9ddc86a28 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55b9de04ce88 <col:7>
    |-CXXMemberCallExpr 0x55b9de04ce28 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55b9de04cd90 <col:7> '<bound member function type>' .operator= 0x55b9ddc86798
    | | `-MemberExpr 0x55b9de04cc60 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55b9ddf785b8
    | |   `-CXXThisExpr 0x55b9de04cc50 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55b9de04cd60 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55b9ddf785b8
    |   `-CXXStaticCastExpr 0x55b9de04cd30 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55b9de04cd00 <col:7> 'Timestamp' lvalue ParmVar 0x55b9ddc86a28 '' 'Timestamp &&'
    `-ReturnStmt 0x55b9de04ce78 <col:7>
      `-UnaryOperator 0x55b9de04ce60 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b9de04ce50 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de059d58 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55b9de059f68 prev 0x55b9de059d58 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de05b170 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55b9de05b120 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55b9de05b100 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55b9de05afb0 'type'
|     `-SubstTemplateTypeParmType 0x55b9de05add0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9de05a920 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55b9de05a838 'sized_array_memory'
|-FieldDecl 0x55b9de05fe00 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55b9de05fe50 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de05fe88 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55b9de05a000 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|     `-CXXRecord 0x55b9de058ed0 'heap_element'
|-TypedefDecl 0x55b9de05ff48 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55b9de05ff10 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55b9de05a000 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|       `-CXXRecord 0x55b9de058ed0 'heap_element'
|-TypedefDecl 0x55b9de05ffd8 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55b9de05ffa0 'const TimerSet::heap_element &'
|   `-QualType 0x55b9de05a001 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55b9de05a000 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|         `-CXXRecord 0x55b9de058ed0 'heap_element'
|-TypedefDecl 0x55b9de060068 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55b9de060030 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55b9de05a000 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|       `-CXXRecord 0x55b9de058ed0 'heap_element'
|-TypedefDecl 0x55b9de060128 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55b9de0600f0 'const TimerSet::heap_element *'
|   `-QualType 0x55b9de05a001 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55b9de05a000 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|         `-CXXRecord 0x55b9de058ed0 'heap_element'
|-TypedefDecl 0x55b9de060d80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55b9de060d30 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55b9de060d10 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55b9de060c48 'type'
|     `-LValueReferenceType 0x55b9de060c10 'const TimerSet::heap_element &'
|       `-QualType 0x55b9de0609b1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55b9de0609b0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55b9ddd4d4f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b9ddd4d498 'T'
|           `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|             `-CXXRecord 0x55b9de058ed0 'heap_element'
|-TypedefDecl 0x55b9de060de8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55b9de05ffa0 'const TimerSet::heap_element &'
|   `-QualType 0x55b9de05a001 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55b9de05a000 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|         `-CXXRecord 0x55b9de058ed0 'heap_element'
|-TypedefDecl 0x55b9de060e40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de060ea8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55b9de060030 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55b9de05a000 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|       `-CXXRecord 0x55b9de058ed0 'heap_element'
|-TypedefDecl 0x55b9de060f10 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55b9de0600f0 'const TimerSet::heap_element *'
|   `-QualType 0x55b9de05a001 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55b9de05a000 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de058f60 'TimerSet::heap_element'
|         `-CXXRecord 0x55b9de058ed0 'heap_element'
|-EnumDecl 0x55b9de060f68 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de061060 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de061040 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de0610e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de061378 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0611a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de061240 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55b9de061638 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55b9de061520 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55b9de0618f8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55b9de0617e0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55b9de061c40 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55b9de061b20 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55b9de061f50 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55b9de061e30 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55b9de062240 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de062088 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de062100 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55b9de062398 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55b9de062478 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0624d0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de062518 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55b9de0625c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de062620 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0626e8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55b9de062798 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0627f0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de062838 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0628e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de062940 <col:30> Inherited
|-CXXMethodDecl 0x55b9de062988 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55b9de062a38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de062a90 <col:30> Inherited
|-CXXMethodDecl 0x55b9de062ad8 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55b9de062b88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de062be0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de062c08 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de062cb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de062d68 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de062f28 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de062e18 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de062e90 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55b9de063078 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de062fe8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de063228 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55b9de063130 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0632e0 <col:20>
| `-OptimizeNoneAttr 0x55b9de063338 <col:30>
|-CXXMethodDecl 0x55b9de063458 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de063360 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de063510 <col:20>
| `-OptimizeNoneAttr 0x55b9de063568 <col:30>
|-CXXMethodDecl 0x55b9de063620 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de063590 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de063768 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0636d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de063898 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55b9de0639c8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55b9de063a98 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55b9de063b68 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55b9de063ca8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de063c18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de063df0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de063d60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de063f38 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de063ea8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de063ff0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de0640f0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de064060 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0641a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de064268 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55b9de064368 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55b9de064518 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de064428 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55b9de064cd8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de0645d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55b9de064c38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55b9de064b38 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55b9de064db8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de064f08 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de064e78 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55b9de064fc0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de065208 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de065080 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55b9de0650f8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55b9de0653c8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55b9de0652d8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55b9de065618 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55b9de065490 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55b9de065508 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55b9de0656d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de065938 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55b9de065840 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55b9de065a08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de065a08

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de065b50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55b9de065d58 prev 0x55b9de065b50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de066d70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b9de066d20 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55b9de066d00 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55b9de066bb0 'type'
|     `-SubstTemplateTypeParmType 0x55b9ddf61f00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9ddf61a50 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b9ddf61968 'sized_array_memory'
|-FieldDecl 0x55b9de066e70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b9de066ec0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de067c30 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55b9de065df0 'Timer *' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-PointerType 0x55b9ddfdf6a0 'Timer *'
|     `-RecordType 0x55b9ddfde7f0 'Timer'
|       `-CXXRecord 0x55b9de046748 'Timer'
|-TypedefDecl 0x55b9de067cf8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55b9de067cc0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55b9de065df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9ddfdf6a0 'Timer *'
|       `-RecordType 0x55b9ddfde7f0 'Timer'
|         `-CXXRecord 0x55b9de046748 'Timer'
|-TypedefDecl 0x55b9de067db8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55b9de067d80 'Timer *const &'
|   `-QualType 0x55b9de065df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55b9de065df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9ddfdf6a0 'Timer *'
|         `-RecordType 0x55b9ddfde7f0 'Timer'
|           `-CXXRecord 0x55b9de046748 'Timer'
|-TypedefDecl 0x55b9de067e78 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55b9de067e40 'Timer **'
|   `-SubstTemplateTypeParmType 0x55b9de065df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9ddfdf6a0 'Timer *'
|       `-RecordType 0x55b9ddfde7f0 'Timer'
|         `-CXXRecord 0x55b9de046748 'Timer'
|-TypedefDecl 0x55b9de067f38 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55b9de067f00 'Timer *const *'
|   `-QualType 0x55b9de065df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55b9de065df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9ddfdf6a0 'Timer *'
|         `-RecordType 0x55b9ddfde7f0 'Timer'
|           `-CXXRecord 0x55b9de046748 'Timer'
|-TypedefDecl 0x55b9de068b10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55b9de068ac0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55b9de068aa0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55b9de068a30 'type'
|     `-SubstTemplateTypeParmType 0x55b9de0687f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b9ddd4dc20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd4dbd0 'T'
|       `-PointerType 0x55b9ddfdf6a0 'Timer *'
|         `-RecordType 0x55b9ddfde7f0 'Timer'
|           `-CXXRecord 0x55b9de046748 'Timer'
|-TypedefDecl 0x55b9de068b78 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55b9de067d80 'Timer *const &'
|   `-QualType 0x55b9de065df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55b9de065df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9ddfdf6a0 'Timer *'
|         `-RecordType 0x55b9ddfde7f0 'Timer'
|           `-CXXRecord 0x55b9de046748 'Timer'
|-TypedefDecl 0x55b9de068bd0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de068c38 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55b9de067e40 'Timer **'
|   `-SubstTemplateTypeParmType 0x55b9de065df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-PointerType 0x55b9ddfdf6a0 'Timer *'
|       `-RecordType 0x55b9ddfde7f0 'Timer'
|         `-CXXRecord 0x55b9de046748 'Timer'
|-TypedefDecl 0x55b9de068ca0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55b9de067f00 'Timer *const *'
|   `-QualType 0x55b9de065df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55b9de065df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-PointerType 0x55b9ddfdf6a0 'Timer *'
|         `-RecordType 0x55b9ddfde7f0 'Timer'
|           `-CXXRecord 0x55b9de046748 'Timer'
|-EnumDecl 0x55b9de068cf8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de068df0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de068dd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de068e78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de069108 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de068f30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de068fd0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55b9de0693c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55b9de0692b0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55b9de069688 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55b9de069570 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55b9de0699d0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55b9de0698b0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55b9de069ce0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55b9de069bc0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55b9de069fd0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de069e18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de069e90 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55b9de06a128 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55b9de06a208 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de06a260 <col:30> Inherited
|-CXXMethodDecl 0x55b9de06a2a8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55b9de06a358 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de06a3b0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de06a478 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de06a528 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de06a580 <col:30> Inherited
|-CXXMethodDecl 0x55b9de06a5c8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de06a678 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de06a6d0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de06a718 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de06a7c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de06a820 <col:30> Inherited
|-CXXMethodDecl 0x55b9de06a868 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55b9de06a918 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de06a970 <col:30> Inherited
|-CXXMethodDecl 0x55b9de06a998 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de06aa48 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de06aaf8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de06acb8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de06aba8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de06ac20 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55b9de06ae08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de06ad78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de06afb8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55b9de06aec0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de06b070 <col:20>
| `-OptimizeNoneAttr 0x55b9de06b0c8 <col:30>
|-CXXMethodDecl 0x55b9de06b1e8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de06b0f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de06b2a0 <col:20>
| `-OptimizeNoneAttr 0x55b9de06b2f8 <col:30>
|-CXXMethodDecl 0x55b9de06b3b0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de06b320 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de06b4f8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de06b468 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de06b628 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55b9de06b758 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55b9de06b828 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55b9de06b8f8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55b9de06ba38 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de06b9a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de06bb80 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de06baf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de06bcc8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de06bc38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de06bd80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de06be80 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de06bdf0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de06bf38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de06bff8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55b9de06c0f8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55b9de06c278 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de06c1b8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55b9de06ca38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de06c330 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55b9de06c998 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55b9de06c898 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55b9de06cb18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de06cc68 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de06cbd8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55b9de06cd20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de06cf68 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de06cde0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55b9de06ce58 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55b9de06d128 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55b9de06d038 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55b9de06d378 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55b9de06d1f0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55b9de06d268 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55b9de06d438 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de06d698 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55b9de06d5a0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55b9de06d768 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de06d768

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de043180 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9de043298 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55b9de043328 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55b9de0433b0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55b9de0434a0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55b9de0435a0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55b9de043660 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55b9de043720 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55b9de043848 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55b9de043848
| `-ParmVarDecl 0x55b9de043958 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55b9de06e518 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55b9de06e518
  `-ParmVarDecl 0x55b9de06e628 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de058050 prev 0x55b9de04a918 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55b9de058148 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55b9de0581d8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55b9de058260 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55b9de058358 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55b9de06e990 <col:43, col:67>
|   `-ReturnStmt 0x55b9de06e980 <col:45, col:52>
|     `-CXXConstructExpr 0x55b9de06e950 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55b9de06e920 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55b9de059b40
|         `-CXXThisExpr 0x55b9de06e910 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55b9de058418 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55b9de058620 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55b9de0584c8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55b9de058540 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55b9de058718 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55b9de0587e0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55b9de06ea10 <col:39, col:67>
|   `-ReturnStmt 0x55b9de06ea00 <col:41, col:48>
|     `-ImplicitCastExpr 0x55b9de06e9e8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b9de06e9b8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55b9de059c28
|         `-CXXThisExpr 0x55b9de06e9a8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55b9de0588a8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55b9de06ea90 <col:35, col:59>
|   `-ReturnStmt 0x55b9de06ea80 <col:37, col:44>
|     `-ImplicitCastExpr 0x55b9de06ea68 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b9de06ea38 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55b9de059c90
|         `-CXXThisExpr 0x55b9de06ea28 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55b9de0589f0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55b9de058960 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55b9de058b38 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55b9de058aa8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55b9de058d38 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55b9de058bf0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55b9de058c68 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55b9de058e08 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55b9de058ea8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55b9de058ed0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b9de058fe8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55b9de059088 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55b9de0590e8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55b9de059218 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55b9de059148 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55b9de059088 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55b9de06eb68 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55b9de06eb10 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55b9de06eae0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55b9de047d88
|   |       `-ImplicitCastExpr 0x55b9de06eb30 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55b9de06eac8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55b9de06eaa8 <col:17> 'Timer *' lvalue ParmVar 0x55b9de059148 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55b9de0590e8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55b9de06ec00 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b9de06ebc0 <col:41> 'Timer *' lvalue ParmVar 0x55b9de059148 't_' 'Timer *'
|   `-CompoundStmt 0x55b9de06ec50 <col:45, line:44:2>
|-CXXRecordDecl 0x55b9de0592e0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b9de0593f8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55b9de059648 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55b9de0594c8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55b9de059540 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55b9de06ed80 <col:71, line:49:2>
|     `-ReturnStmt 0x55b9de06ed70 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55b9de06ed38 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55b9de06ed20 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b9de06ed00 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55b9ddf9ca08 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55b9de06ec80 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55b9de059088
|         | `-DeclRefExpr 0x55b9de06ec60 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55b9de0594c8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55b9de06ecd0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55b9de059088
|           `-DeclRefExpr 0x55b9de06ecb0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55b9de059540 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55b9de059710 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b9de059828 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55b9de059a48 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55b9de0598c8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55b9de059940 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55b9de06ef88 <col:63, line:54:2>
|     `-BinaryOperator 0x55b9de06ef68 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55b9de06ee18 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55b9de049db8
|       | `-ImplicitCastExpr 0x55b9de06ee00 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55b9de06edd0 <col:6, col:9> 'Timer *' lvalue ->t 0x55b9de0590e8
|       |     `-ImplicitCastExpr 0x55b9de06edb8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55b9de06ed98 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55b9de059940 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55b9de06ef50 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55b9de06ef30 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55b9de06eed8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55b9de06eeb8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55b9de06ee88 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55b9de06ee48 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55b9de059940 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55b9de06eea0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55b9de06ee68 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55b9de0598c8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55b9de06ef18 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55b9de06eef8 <col:39> 'int' 1
|-FieldDecl 0x55b9de059b40 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55b9de059bb0 <col:44, col:53> aligned
|   `-ConstantExpr 0x55b9de059b90 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55b9de059b10 <col:52> 'int' 8
|-FieldDecl 0x55b9de059c28 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55b9de059c90 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55b9de059cf8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55b9de065af0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55b9de06d850 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55b9de06d8b0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55b9de06d910 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55b9de06d970 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9de06da60 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55b9de06d9d0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55b9de06db28 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55b9de06f3e0 <col:29, line:81:5>
|   `-IfStmt 0x55b9de06f3b8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55b9de06f070 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55b9de06f010 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55b9de06efe0 <col:6, col:18> '<bound member function type>' .size 0x55b9de062c08
|     |     `-ImplicitCastExpr 0x55b9de06f058 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55b9de06efb0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55b9de065af0
|     |         `-CXXThisExpr 0x55b9de06efa0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55b9de06f260 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55b9de06f248 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55b9de06f228 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55b9ddc86468 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55b9de06f098 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55b9de059b40
|     | | `-CXXThisExpr 0x55b9de06f088 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55b9de06f210 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55b9de06f1e0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55b9de059088
|     |     `-CXXMemberCallExpr 0x55b9de06f1b8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55b9de06f188 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55b9de063ca8
|     |       | `-MemberExpr 0x55b9de06f0d8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55b9de065af0
|     |       |   `-CXXThisExpr 0x55b9de06f0c8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55b9de06f168 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55b9de06f3a0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55b9de06f368 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55b9de06f350 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b9de06f330 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55b9ddc86918 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55b9de06f2a8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55b9de059b40
|         | `-CXXThisExpr 0x55b9de06f298 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55b9de06f318 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b9de06f2e8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55b9de06dc68 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55b9de06dbd8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55b9de06dd30 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55b9de06ddf0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55b9de06deb0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55b9de06dfa0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55b9de06e008 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55b9de06e008
| `-ParmVarDecl 0x55b9de06e118 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55b9de06e1b8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55b9de06e1b8
| `-ParmVarDecl 0x55b9de06e2c8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55b9de06e368 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55b9de06e368
| `-ParmVarDecl 0x55b9de06e478 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55b9de06e698 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55b9de06e698
| `-ParmVarDecl 0x55b9de06e7a8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55b9de06e830 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55b9de06e830

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de0aea78 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55b9de0aec88 prev 0x55b9de0aea78 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de0afd60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b9de0afd10 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55b9de0afcf0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55b9de0afba0 'type'
|     `-SubstTemplateTypeParmType 0x55b9ddf61f00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9ddf61a50 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b9ddf61968 'sized_array_memory'
|-FieldDecl 0x55b9de0afe60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b9de0afeb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de0afee8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55b9de0aed20 'pollfd' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-RecordType 0x55b9de0acb30 'pollfd'
|     `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-TypedefDecl 0x55b9de0affa8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55b9de0aff70 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55b9de0aed20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0acb30 'pollfd'
|       `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-TypedefDecl 0x55b9de0b0068 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55b9de0b0030 'const pollfd &'
|   `-QualType 0x55b9de0aed21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55b9de0aed20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0acb30 'pollfd'
|         `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-TypedefDecl 0x55b9de0b00f8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55b9de0b00c0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55b9de0aed20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0acb30 'pollfd'
|       `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-TypedefDecl 0x55b9de0b01b8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55b9de0b0180 'const pollfd *'
|   `-QualType 0x55b9de0aed21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55b9de0aed20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0acb30 'pollfd'
|         `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-TypedefDecl 0x55b9de0b0d90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55b9de0b0d40 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55b9de0b0d20 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55b9de0b0cb0 'type'
|     `-SubstTemplateTypeParmType 0x55b9de0b0a70 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b9ddd4dc20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd4dbd0 'T'
|       `-RecordType 0x55b9de0acb30 'pollfd'
|         `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-TypedefDecl 0x55b9de0b0df8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55b9de0b0030 'const pollfd &'
|   `-QualType 0x55b9de0aed21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55b9de0aed20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0acb30 'pollfd'
|         `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-TypedefDecl 0x55b9de0b0e50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0b0eb8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55b9de0b00c0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55b9de0aed20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0acb30 'pollfd'
|       `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-TypedefDecl 0x55b9de0b0f20 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55b9de0b0180 'const pollfd *'
|   `-QualType 0x55b9de0aed21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55b9de0aed20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0acb30 'pollfd'
|         `-CXXRecord 0x55b9de0acaa0 'pollfd'
|-EnumDecl 0x55b9de0b0f78 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de0b1070 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de0b1050 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de0b10f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de0b1388 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0b11b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0b1250 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55b9de0b1648 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55b9de0b1530 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55b9de0b1908 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55b9de0b17f0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55b9de0b1c50 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55b9de0b1b30 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55b9de0b1f60 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55b9de0b1e40 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55b9de0b2250 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0b2098 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0b2110 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55b9de0b23a8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55b9de0b2488 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0b24e0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0b2528 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55b9de0b25d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0b2630 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0b26f8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0b27a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0b2800 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0b2848 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0b28f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0b2950 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0b2998 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0b2a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0b2aa0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0b2ae8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0b2b98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0b2bf0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0b2c18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0b2cc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0b2d78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de0b2f38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0b2e28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0b2ea0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55b9de0b30d0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0b2ff8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0b3278 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55b9de0b3188 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0b3330 <col:20>
| `-OptimizeNoneAttr 0x55b9de0b3388 <col:30>
|-CXXMethodDecl 0x55b9de0b34a8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de0b33b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0b3560 <col:20>
| `-OptimizeNoneAttr 0x55b9de0b35b8 <col:30>
|-CXXMethodDecl 0x55b9de0b3670 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0b35e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0b37b8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0b3728 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0b38e8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55b9de0b3a18 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55b9de0b3ae8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55b9de0b3bb8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55b9de0b3cf8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0b3c68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0b3e40 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0b3db0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0b3f88 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de0b3ef8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0b4040 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de0b4140 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de0b40b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0b41f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de0b42b8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55b9de0b43b8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55b9de0b4568 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0b4478 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55b9de0b4d28 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de0b4620 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55b9de0b4c88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55b9de0b4b88 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55b9de0b4e08 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de0b4f58 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0b4ec8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55b9de0b5010 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de0b5258 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0b50d0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55b9de0b5148 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55b9de0b5418 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55b9de0b5328 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55b9de0b5668 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55b9de0b54e0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55b9de0b5558 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55b9de0b5728 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de0b5988 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55b9de0b5890 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55b9de0b5a58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de0b5a58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de0b7040 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55b9de0b7218 prev 0x55b9de0b7040 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b9de0b72a8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b9de0b72d0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0b8ea0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55b9de0b8e50 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55b9de0b7780 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55b9de0b7680 'type'
|     `-TemplateSpecializationType 0x55b9de0b7610 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b9de0b74f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55b9de0b74d0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b9de0b74b0 <col:24> 'unsigned long' 24
|       `-RecordType 0x55b9de0b75f0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55b9de0b7510 'char_array'
|-TypedefDecl 0x55b9de0b8f58 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55b9de0b8f20 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55b9de0b8f00 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55b9de0b8ea0 'type'
|     `-ElaboratedType 0x55b9de0b8e50 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55b9de0b7780 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55b9de0b7680 'type'
|         `-TemplateSpecializationType 0x55b9de0b7610 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b9de0b74f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55b9de0b74d0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b9de0b74b0 <col:24> 'unsigned long' 24
|           `-RecordType 0x55b9de0b75f0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55b9de0b7510 'char_array'
|-CXXMethodDecl 0x55b9de0b90d8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55b9de0b8fe8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55b9de0b91c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b9de0b92a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b9de0b92a8
|-CXXMethodDecl 0x55b9de0b9578 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55b9de0b9480 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55b9de0b97b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55b9de0b9630 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0b96a8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b9de0b9988 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55b9de0b9878 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0b98f0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b9de0b9ae8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55b9de0b9bb8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55b9de0b9e08 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55b9de0b9c78 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55b9de0b9cf0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b9de0ba068 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55b9de0b9ed8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55b9de0b9f50 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b9de0ba228 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55b9de0ba138 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b9de0ba3e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55b9de0ba2f0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b9de0ba4a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de0ba550 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de0ba788 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55b9de0ba600 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b9de0ba678 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b9de0baa28 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55b9de0ba930 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55b9de0baaf0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55b9de0bab40 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b9de0bab90 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de0b5ba0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55b9de0b5da8 prev 0x55b9de0b5ba0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b9de0b6fb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55b9de0b6f60 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55b9de0b6f40 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55b9de0b6df0 'type'
|     `-SubstTemplateTypeParmType 0x55b9de0b6c10 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55b9ddd42e20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd42dc8 'T'
|       `-RecordType 0x55b9de0b6760 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55b9de0b6680 'sized_array_memory'
|-FieldDecl 0x55b9de0babe0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55b9de0bac30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b9de0bac68 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55b9de0b5e40 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|   `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-TypedefDecl 0x55b9de0bad28 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55b9de0bacf0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55b9de0b5e40 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-TypedefDecl 0x55b9de0bade8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55b9de0badb0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55b9de0b5e41 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55b9de0b5e40 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-TypedefDecl 0x55b9de0bae78 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55b9de0bae40 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55b9de0b5e40 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-TypedefDecl 0x55b9de0baf38 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55b9de0baf00 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55b9de0b5e41 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55b9de0b5e40 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-TypedefDecl 0x55b9de0bbbb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55b9de0bbb60 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55b9de0bbb40 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55b9de0bba78 'type'
|     `-LValueReferenceType 0x55b9de0bba40 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55b9de0bb7e1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55b9de0bb7e0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55b9ddd4d4f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b9ddd4d498 'T'
|           `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-TypedefDecl 0x55b9de0bbc18 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55b9de0badb0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55b9de0b5e41 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55b9de0b5e40 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-TypedefDecl 0x55b9de0bbc70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-TypedefDecl 0x55b9de0bbcd8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55b9de0bae40 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55b9de0b5e40 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|     `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-TypedefDecl 0x55b9de0bbd40 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55b9de0baf00 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55b9de0b5e41 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55b9de0b5e40 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55b9ddd7ab10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b9ddd7aab8 'T'
|       `-RecordType 0x55b9de0ae5e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55b9de0ae550 'SelectorInfo'
|-EnumDecl 0x55b9de0bbd98 <line:134:5> col:5
| `-EnumConstantDecl 0x55b9de0bbe90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b9de0bbe70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b9ddd7c198 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b9ddd7c170 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b9ddd7c150 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b9de0bbf18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b9de0bc1a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0bbfd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0bc070 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55b9de0bc468 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55b9de0bc350 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55b9de0bc728 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55b9de0bc610 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55b9de0bca70 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55b9de0bc950 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55b9de0bcd80 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55b9de0bcc60 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55b9de0bd070 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0bceb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0bcf30 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55b9de0bd1c8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55b9de0bd2a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0bd300 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0bd348 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55b9de0bd3f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0bd450 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0bd518 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0bd5c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0bd620 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0bd668 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0bd718 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0bd770 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0bd7b8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0bd868 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0bd8c0 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0bd908 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55b9de0bd9b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b9de0bda10 <col:30> Inherited
|-CXXMethodDecl 0x55b9de0bda38 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0bdae8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b9de0bdb98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b9de0bdd58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0bdc48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b9de0bdcc0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55b9de0bdea8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0bde18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0be058 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55b9de0bdf60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0be110 <col:20>
| `-OptimizeNoneAttr 0x55b9de0be168 <col:30>
|-CXXMethodDecl 0x55b9de0be288 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55b9de0be190 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b9de0be340 <col:20>
| `-OptimizeNoneAttr 0x55b9de0be398 <col:30>
|-CXXMethodDecl 0x55b9de0be450 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0be3c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0be598 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0be508 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0be6c8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55b9de0be7f8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55b9de0be8c8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55b9de0be998 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55b9de0bead8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b9de0bea48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0bec20 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b9de0beb90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b9de0bed68 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b9de0becd8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0bee20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b9de0bef20 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b9de0bee90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b9de0befd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b9de0bf098 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55b9de0bf198 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55b9de0bf348 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0bf258 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55b9de0bfb08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b9de0bf400 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55b9de0bfa68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55b9de0bf968 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55b9de0bfbe8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b9de0bfd38 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55b9de0bfca8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55b9de0bfdf0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b9de0c0038 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55b9de0bfeb0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55b9de0bff28 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55b9de0c01f8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55b9de0c0108 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55b9de0c0448 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55b9de0c02c0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55b9de0c0338 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55b9de0c0508 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b9de0c0768 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55b9de0c0670 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55b9de0c0838 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b9de0c0838

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de0ad730 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9de0ad848 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55b9de0ad8d8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55b9de0ad960 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55b9de0ada50 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55b9de0ada50
|-CXXMethodDecl 0x55b9de0adb50 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55b9de0addf0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55b9de0adc08 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55b9de0adc80 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55b9de0add00 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55b9de0ae060 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55b9de0adec0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55b9de0adf38 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55b9de0adfb8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55b9de0ae1b8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55b9de0ae128 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55b9de0ae280 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55b9de0c1ee8 <col:34, line:50:5>
|   |-BinaryOperator 0x55b9de0c18b8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55b9de0c1878 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55b9de0aea08
|   | | `-CXXThisExpr 0x55b9de0c1868 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55b9de0c18a8 <col:23> 'bool' true
|   `-CallExpr 0x55b9de0c1ec0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55b9de0c1ea8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55b9de0c1e28 <col:2> 'void (long)' lvalue Function 0x55b9de0c1d28 'ignore_result' 'void (long)' (FunctionTemplate 0x55b9ddd3ddc8 'ignore_result')
|     `-CallExpr 0x55b9de0c1ad0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55b9de0c1ab8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b9de0c1a38 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55b9de075c48 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55b9de0c1b08 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55b9de0c19e0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55b9de0c19c8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55b9de0c1978 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55b9de0ae9a8
|       |   |   `-CXXThisExpr 0x55b9de0c1968 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55b9de0c19a8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55b9de0c1b38 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55b9de0c1b20 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55b9de0c1a00 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55b9de0c1b50 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55b9de0c1a18 <col:41> 'int' 1
|-CXXMethodDecl 0x55b9de0ae3c0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55b9de0ae330 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55b9de0ae488 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55b9de0ae528 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55b9de0ae550 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b9de0ae668 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55b9de0ae708 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55b9de0ae768 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55b9de0ae7d0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55b9de0ae880 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55b9de0ae708 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55b9de0c1f48 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55b9de0c1f08 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55b9de0ae768 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55b9de0c1fc8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55b9de0c1f88 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55b9de0ae7d0 'pollfd' 'int'
|   | `-UnaryOperator 0x55b9de0c2028 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55b9de0c2008 <col:35> 'int' 1
|   `-CompoundStmt 0x55b9de0c20a0 <line:64:2, line:65:2>
|-FieldDecl 0x55b9de0ae9a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55b9de0aea08 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55b9de0b5b40 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55b9de0c0920 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55b9de0c0b58 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55b9de0c0988 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55b9de0c0a00 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55b9de0c0a78 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55b9de0c0d40 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55b9de0c0c28 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55b9de0c0ca8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55b9de0c0f88 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55b9de0c0e08 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55b9de0c0e88 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55b9de0c1198 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55b9de0c1048 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55b9de0c10c0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55b9de0c12e8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55b9de0c1258 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55b9de0c13b0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55b9de0c1470 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55b9de0c1538 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55b9de0c1538
| `-ParmVarDecl 0x55b9de0c1648 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55b9de0c16e8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55b9de0c16e8
  `-ParmVarDecl 0x55b9de0c17f8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de0420f0 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9de042208 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55b9de042298 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55b9de042320 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55b9de042410 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55b9de042510 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55b9de0425d0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55b9de042690 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55b9de042778 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55b9de042898 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55b9de042898
| `-ParmVarDecl 0x55b9de0429a8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55b9de0c6cc8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55b9de0c6cc8
  `-ParmVarDecl 0x55b9de0c6dd8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de056000 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9de056118 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55b9de0561b8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55b9de056218 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55b9de0c62c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55b9de0c62c8
| `-ParmVarDecl 0x55b9de0c63d8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55b9de0c6478 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55b9de0c6478
| `-ParmVarDecl 0x55b9de0c6588 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55b9de0c65f8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55b9de0c65f8
|-CXXMethodDecl 0x55b9de0c6e78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55b9de0c6e78
| `-ParmVarDecl 0x55b9de0c6f88 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55b9de0c6ff8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55b9de0c6ff8
| `-ParmVarDecl 0x55b9de0c7108 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55b9de0cd718 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55b9de0cd7f0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de043fe0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9de0440f8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55b9de044188 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55b9de044210 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55b9de0442d0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55b9dda79580 'int'
|-CXXMethodDecl 0x55b9de044398 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55b9de044438 <col:45> always_inline
|-CXXMethodDecl 0x55b9de044568 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55b9de0444a0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55b9de044610 <col:49> always_inline
|-CXXConstructorDecl 0x55b9de044708 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55b9de044708
| `-ParmVarDecl 0x55b9de044818 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55b9de0448b8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55b9de0448b8
| `-ParmVarDecl 0x55b9de0449c8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55b9de0c66e0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55b9de0c66e0
|-CXXMethodDecl 0x55b9de0c71a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55b9de0c71a8
| `-ParmVarDecl 0x55b9de0c72b8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55b9de0c7328 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55b9de0c7328
  `-ParmVarDecl 0x55b9de0c7438 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de0c2510 prev 0x55b9de0ad6a0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55b9de0c2608 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55b9de0c2698 <col:22, col:28> col:22 public
|-EnumDecl 0x55b9de0c26c0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55b9de0c27d8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55b9de0c27b8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55b9de0c27a0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b9de0c2780 <col:32> 'int' 1
| `-EnumConstantDecl 0x55b9de0c2880 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55b9de0c2860 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55b9de0c2848 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55b9de0c2828 <col:53> 'int' 1000
|-CXXMethodDecl 0x55b9de0c2920 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55b9de0c29e0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55b9de0c2ac8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55b9de0c74f8 <col:34, col:52>
|   `-ReturnStmt 0x55b9de0c74e8 <col:36, col:43>
|     `-MemberExpr 0x55b9de0c74b8 <col:43> 'TimerSet' lvalue ->_timers 0x55b9de0c47c8
|       `-CXXThisExpr 0x55b9de0c74a8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55b9de0c2bb8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55b9de0c7560 <col:46, col:64>
|   `-ReturnStmt 0x55b9de0c7550 <col:48, col:55>
|     `-MemberExpr 0x55b9de0c7520 <col:55> 'const TimerSet' lvalue ->_timers 0x55b9de0c47c8
|       `-CXXThisExpr 0x55b9de0c7510 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55b9de0c2ca8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55b9de0c75c8 <col:36, col:55>
|   `-ReturnStmt 0x55b9de0c75b8 <col:38, col:45>
|     `-MemberExpr 0x55b9de0c7588 <col:45> 'SelectSet' lvalue ->_selects 0x55b9de0c4828
|       `-CXXThisExpr 0x55b9de0c7578 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55b9de0c2d98 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55b9de0c7630 <col:48, col:67>
|   `-ReturnStmt 0x55b9de0c7620 <col:50, col:57>
|     `-MemberExpr 0x55b9de0c75f0 <col:57> 'const SelectSet' lvalue ->_selects 0x55b9de0c4828
|       `-CXXThisExpr 0x55b9de0c75e0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55b9de0c2e58 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55b9de0c2f48 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55b9de0c30f0 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55b9de0c2ff8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55b9de0c31b8 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55b9de0c35f8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55b9de0c3268 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55b9de0c34e0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55b9de0c36c8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55b9de0c3788 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55b9de0c3848 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55b9de0c3988 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55b9de0c38f8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55b9de0c3a50 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55b9de0c3b10 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55b9de0c3bd0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55b9de0c3c90 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55b9de0c3dd0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55b9de0c3d40 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55b9de0c3e98 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55b9de0c3f58 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55b9de0c3ff8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55b9de0c40c0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c4110 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c4160 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c41b0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c4200 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c4250 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c42a0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c42f0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c4340 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b9de0c4390 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55b9de0c43e0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55b9de0c44d8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55b9de0c4448 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55b9de0c4628 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55b9de0c4598 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55b9de0c46d0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55b9de0c4708 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55b9de0c4768 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55b9de0c47c8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55b9de0c4828 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55b9de0c48a8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55b9de0c4918 <col:40, col:50> aligned
|   `-ConstantExpr 0x55b9de0c48f8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55b9de0c4878 <col:48> 'int' 64
|-FieldDecl 0x55b9de0c4988 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55b9de0c49e8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55b9de0c4ae0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55b9de0c4bf0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55b9de0c4c50 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55b9de0c4cd0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55b9de0c4d40 <col:36, col:46> aligned
|   `-ConstantExpr 0x55b9de0c4d20 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55b9de0c4ca0 <col:44> 'int' 64
|-FieldDecl 0x55b9de0c4db8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55b9de0c4e18 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55b9de0c4e68 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55b9de0c4ea8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55b9de0c4f10 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55b9de0c4f60 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55b9de0c5108 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55b9de0c4f98 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55b9de0c5018 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55b9de0c5208 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55b9de0c5208
|-CXXMethodDecl 0x55b9de0c5310 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55b9de0c53d8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55b9de0c7728 <col:34, line:217:5>
|   `-ReturnStmt 0x55b9de0c7718 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55b9de0c7700 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b9de0c76d0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55b9de04edc0
|         `-ImplicitCastExpr 0x55b9de0c76b8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55b9de0c7688 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55b9de04ed58
|             `-MemberExpr 0x55b9de0c7658 <col:16> 'const TaskLink' lvalue ->_task_link 0x55b9de0c4708
|               `-CXXThisExpr 0x55b9de0c7648 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55b9de0c5498 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55b9de0c5558 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55b9de0c7e50 <col:39, line:226:5>
|   |-DeclStmt 0x55b9de0c7978 <line:223:9, col:68>
|   | `-VarDecl 0x55b9de0c7750 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55b9de0c7930 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55b9de0c7900 <col:24, col:38> '<bound member function type>' .compare_swap 0x55b9ddda3400
|   |     | `-MemberExpr 0x55b9de0c77c8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55b9de0c4988
|   |     |   `-CXXThisExpr 0x55b9de0c77b8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55b9de0c78b8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55b9de0c78a0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55b9de0c7878 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55b9de0c7858 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55b9de0c7960 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55b9de0c78e0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55b9de0c79c0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55b9de0c7990 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55b9de0c7750 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55b9de0c7e30 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55b9de0c7e00 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55b9de0c7ad8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55b9de0c7aa8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55b9de0c7a90 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55b9de0c79e8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55b9de0c7750 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55b9de0c7a68 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55b9de0c7a50 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55b9de0c7a28 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55b9de0c7a08 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55b9de0c7b38 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55b9de0c7b18 <col:60> 'int' 0
|       `-CallExpr 0x55b9de0c7d60 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55b9de0c7d48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b9de0c7d28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9ddb191c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55b9de0c7da0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55b9de0c7c28 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55b9de0c7db8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55b9de0c7c58 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55b9de0c7dd0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55b9de0c7c98 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55b9de0c7de8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55b9de0c7d10 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55b9de0c7cf8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55b9de0c7cb8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55b9de0c56a0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55b9de0c5610 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55b9de0c5768 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55b9de0c5828 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55b9de0c58e8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55b9de0c59a8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55b9de0c5a68 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55b9de0c5b60 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55b9de0c5bc0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55b9de0c5c50 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55b9de0c6018 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55b9de0c6018
| `-ParmVarDecl 0x55b9de0c6128 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55b9de0c67e8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55b9de0c67e8
  `-ParmVarDecl 0x55b9de0c68f8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de04f0d0 prev 0x55b9ddfde6b0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55b9de04f208 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55b9de04f298 <col:33, col:39> col:33 public
|-EnumDecl 0x55b9de04f2c0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55b9de04f400 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55b9de04f3e0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55b9de04f3c0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55b9de04f380 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55b9de04f3a0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55b9de04f4d0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55b9de04f4b0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55b9de04f490 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55b9de04f450 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55b9de04f470 <col:47> 'int' 31
|-EnumDecl 0x55b9de04f520 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55b9de04f660 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55b9de04f780 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b9de04f640 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55b9de04f620 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55b9de04f5e0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55b9de04f600 <col:29> 'int' 15
| `-EnumConstantDecl 0x55b9de04f730 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55b9de04f798 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9de04f710 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55b9de04f6f0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55b9de04f6b0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55b9de04f6d0 <col:54> 'int' 10
|-CXXConstructorDecl 0x55b9de04f968 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55b9de04f7c0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55b9de04f840 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55b9de04fac0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55b9de04fa30 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55b9de04fbb8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55b9de04fbb8
|-CXXMethodDecl 0x55b9de04fd48 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55b9de057158 <col:42, line:100:5>
|   `-ReturnStmt 0x55b9de057148 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55b9de057130 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55b9de057100 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55b9de051b70
|         `-CXXThisExpr 0x55b9de0570f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b9de04fe10 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55b9de0571d8 <col:36, line:105:5>
|   `-ReturnStmt 0x55b9de0571c8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55b9de0571b0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b9de057180 <col:16> 'void *const' lvalue ->_thunk 0x55b9de055ef0
|         `-CXXThisExpr 0x55b9de057170 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b9de04fed0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55b9de057258 <col:37, line:110:5>
|   `-ReturnStmt 0x55b9de057248 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55b9de057230 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55b9de057200 <col:16> 'Element *const' lvalue ->_owner 0x55b9de055fb0
|         `-CXXThisExpr 0x55b9de0571f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b9de04ff90 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55b9de050058 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55b9de050118 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55b9de0501d8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55b9de057340 <col:35, line:137:5>
|   `-ReturnStmt 0x55b9de057330 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55b9de0572f8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55b9de0572c8 <col:16, col:24> '<bound member function type>' ->router 0x55b9ddff0ec0
|         `-ImplicitCastExpr 0x55b9de057318 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55b9de0572b0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55b9de057280 <col:16> 'Element *const' lvalue ->_owner 0x55b9de055fb0
|               `-CXXThisExpr 0x55b9de057270 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b9de050298 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55b9de050458 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55b9de050348 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55b9de0503c0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55b9de050668 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55b9de050518 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55b9de050590 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55b9de050738 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55b9de057450 <col:35, line:181:5>
|   `-ReturnStmt 0x55b9de057440 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55b9de057428 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55b9de057410 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55b9de0573e0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55b9de0517a8
|           `-MemberExpr 0x55b9de057398 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b9de0518c8
|             `-MemberExpr 0x55b9de057368 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55b9de051af8
|               `-CXXThisExpr 0x55b9de057358 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b9de0507f8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55b9de057568 <col:30, line:192:5>
|   `-BinaryOperator 0x55b9de057548 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55b9de0574f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55b9de0517a8
|     | `-MemberExpr 0x55b9de0574a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b9de0518c8
|     |   `-MemberExpr 0x55b9de057478 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b9de051af8
|     |     `-CXXThisExpr 0x55b9de057468 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55b9de057530 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55b9de057520 <col:32> 'bool' false
|-CXXMethodDecl 0x55b9de0508b8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55b9de0578b8 <col:30, line:206:5>
|   |-BinaryOperator 0x55b9de057660 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55b9de057608 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55b9de0517a8
|   | | `-MemberExpr 0x55b9de0575c0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b9de0518c8
|   | |   `-MemberExpr 0x55b9de057590 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b9de051af8
|   | |     `-CXXThisExpr 0x55b9de057580 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55b9de057648 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55b9de057638 <col:32> 'bool' true
|   |-CallExpr 0x55b9de057700 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55b9de0576e8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b9de0576c8 <col:9> 'void ()' lvalue Function 0x55b9de041ca8 'click_fence' 'void ()'
|   `-IfStmt 0x55b9de0578a0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55b9de0577e0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55b9de0577b0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55b9de057760 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55b9de056218
|     | |   `-MemberExpr 0x55b9de057730 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55b9de056290
|     | |     `-CXXThisExpr 0x55b9de057720 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55b9de0577c8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55b9de057790 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55b9de057860 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55b9de057810 <col:13> '<bound member function type>' ->complete_schedule 0x55b9de056c90
|       | `-CXXThisExpr 0x55b9de057800 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55b9de057888 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55b9de057840 <col:31> 'int' 0
|-CXXMethodDecl 0x55b9de050978 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55b9de0579e0 <col:35, line:240:5>
|   `-BinaryOperator 0x55b9de0579c0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55b9de057968 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55b9de0517a8
|     | `-MemberExpr 0x55b9de057920 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b9de0518c8
|     |   `-MemberExpr 0x55b9de0578f0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b9de051af8
|     |     `-CXXThisExpr 0x55b9de0578e0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55b9de0579a8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55b9de057998 <col:32> 'bool' true
|-CXXMethodDecl 0x55b9de050a38 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55b9de057bf8 <col:37, line:253:5>
|   |-BinaryOperator 0x55b9de057ad8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55b9de057a80 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55b9de0517a8
|   | | `-MemberExpr 0x55b9de057a38 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b9de0518c8
|   | |   `-MemberExpr 0x55b9de057a08 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b9de051af8
|   | |     `-CXXThisExpr 0x55b9de0579f8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55b9de057ac0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55b9de057ab0 <col:32> 'bool' false
|   `-BinaryOperator 0x55b9de057bd8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55b9de057b80 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55b9de051808
|     | `-MemberExpr 0x55b9de057b38 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b9de0518c8
|     |   `-MemberExpr 0x55b9de057b08 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b9de051af8
|     |     `-CXXThisExpr 0x55b9de057af8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55b9de057bc0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55b9de057bb0 <col:41> 'bool' true
|-CXXMethodDecl 0x55b9de050af8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55b9de057d78 <col:37, line:264:5>
|   |-BinaryOperator 0x55b9de057cf8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55b9de057ca0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55b9de051808
|   | | `-MemberExpr 0x55b9de057c58 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b9de0518c8
|   | |   `-MemberExpr 0x55b9de057c28 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b9de051af8
|   | |     `-CXXThisExpr 0x55b9de057c18 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55b9de057ce0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55b9de057cd0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55b9de057d58 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55b9de057d28 <col:9> '<bound member function type>' ->reschedule 0x55b9de0508b8
|       `-CXXThisExpr 0x55b9de057d18 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55b9de050c40 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55b9de050bb0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55b9de050d10 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55b9de050e58 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55b9de050dc8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55b9de050fa8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55b9de050f18 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55b9de051070 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55b9de051130 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55b9de0511d0 <col:53> "" ""
|-CXXMethodDecl 0x55b9de051268 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55b9de051308 <col:47> "" ""
|-AccessSpecDecl 0x55b9de051378 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55b9de0513b8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55b9de051420 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55b9de051470 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b9de051588 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55b9de051618 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55b9de051748 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55b9de0517a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55b9de051808 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55b9de0cce48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55b9de0ccf20 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b9de0ccf20
| | |-CXXConstructorDecl 0x55b9de0cd1d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55b9de0cd1d8
| | | `-ParmVarDecl 0x55b9de0cd2e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55b9de0cd388 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55b9de0cd388
| |   `-ParmVarDecl 0x55b9de0cd498 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55b9de0518c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55b9de051928 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55b9de0518c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55b9de051748 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55b9de051980 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55b9de0518c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55b9de0517a8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55b9de0519d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55b9de0518c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55b9de051808 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55b9de051a30 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55b9de0ccd58 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b9de0cd6b8 <col:11>
| |-CXXConstructorDecl 0x55b9de0cd028 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55b9de0cd028
| | `-ParmVarDecl 0x55b9de0cd138 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55b9de0cd538 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55b9de0cd538
|   `-ParmVarDecl 0x55b9de0cd648 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55b9de051af8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55b9de051b70 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55b9de055ef0 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55b9de055f50 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55b9de055fb0 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55b9de056000 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b9de056118 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55b9de0561b8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55b9de056218 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55b9de0c62c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55b9de0c62c8
| | `-ParmVarDecl 0x55b9de0c63d8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55b9de0c6478 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55b9de0c6478
| | `-ParmVarDecl 0x55b9de0c6588 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55b9de0c65f8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55b9de0c65f8
| |-CXXMethodDecl 0x55b9de0c6e78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55b9de0c6e78
| | `-ParmVarDecl 0x55b9de0c6f88 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55b9de0c6ff8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55b9de0c6ff8
| | `-ParmVarDecl 0x55b9de0c7108 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55b9de0cd718 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55b9de0cd7f0 <col:11>
|-FieldDecl 0x55b9de056290 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55b9de0563d8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55b9de056318 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55b9de056588 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55b9de056498 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55b9de056650 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55b9de056710 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55b9de0567d0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55b9de057e88 <col:41, line:355:5>
|   `-ReturnStmt 0x55b9de057e78 <line:354:9, col:38>
|     `-BinaryOperator 0x55b9de057e58 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55b9de057e28 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55b9de057dd8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55b9de056218
|       |   `-MemberExpr 0x55b9de057da8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55b9de056290
|       |     `-CXXThisExpr 0x55b9de057d98 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55b9de057e40 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55b9de057e08 <col:38> 'int' 0
|-CXXMethodDecl 0x55b9de056890 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55b9de0569d0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55b9de056940 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55b9de056b48 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55b9de056a88 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55b9de056c90 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55b9de056c00 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55b9de056d58 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55b9de056f20 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55b9de056e08 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55b9de056e88 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55b9de057020 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55b9de0570b0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de049e68 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b9de049f98 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55b9de04aa88 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9de046748 prev 0x55b9ddfde760 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9de046840 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55b9de0468d0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55b9de046930 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55b9de0469d8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55b9de046af8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55b9de046c98 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55b9de046bd8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55b9de046ee8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55b9de046d58 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55b9de046dd8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55b9de047040 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55b9de046fb0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55b9de0471c8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55b9de047100 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55b9de047378 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55b9de0472b8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55b9de047470 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55b9de04ac60 <col:21, line:58:5>
|   `-IfStmt 0x55b9de04ac48 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55b9de04abb0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55b9de04ab80 <col:6> '<bound member function type>' ->scheduled 0x55b9de047cc8
|     |   `-ImplicitCastExpr 0x55b9de04abd0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55b9de04ab70 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55b9de04ac28 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55b9de04abf8 <col:6> '<bound member function type>' ->unschedule 0x55b9de0492f0
|         `-CXXThisExpr 0x55b9de04abe8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55b9de047570 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55b9de04ae00 <col:26, line:65:5>
|   |-BinaryOperator 0x55b9de04ad20 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b9de04acb8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b9de049f98
|   | | `-MemberExpr 0x55b9de04ac88 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b9de04a058
|   | |   `-CXXThisExpr 0x55b9de04ac78 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b9de04ad08 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b9de04ace8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b9de04a4b8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b9de04ade0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55b9de04ad50 <col:2> 'void *' lvalue ->_thunk 0x55b9de04a0d8
|     | `-CXXThisExpr 0x55b9de04ad40 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55b9de04adb8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55b9de04ad80 <col:20> 'int' 1
|-CXXMethodDecl 0x55b9de0476b0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55b9de047620 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55b9de04af60 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55b9de04ae50 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55b9de04ae20 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55b9de047620 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55b9de04af40 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55b9de04af10 <col:2> '<bound member function type>' ->assign 0x55b9de047570
|       `-CXXThisExpr 0x55b9de04af00 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55b9de047880 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55b9de047768 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55b9de0477e8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55b9de04b0e0 <col:58, line:79:5>
|   |-BinaryOperator 0x55b9de04b028 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b9de04afc0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b9de049f98
|   | | `-MemberExpr 0x55b9de04af90 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b9de04a058
|   | |   `-CXXThisExpr 0x55b9de04af80 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b9de04b010 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b9de04aff0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55b9de047768 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55b9de04b0c0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b9de04b058 <col:2> 'void *' lvalue ->_thunk 0x55b9de04a0d8
|     | `-CXXThisExpr 0x55b9de04b048 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b9de04b0a8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55b9de04b088 <col:11> 'void *' lvalue ParmVar 0x55b9de0477e8 'user_data' 'void *'
|-CXXMethodDecl 0x55b9de0479d0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55b9de047940 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55b9de04b278 <col:35, line:87:5>
|   |-BinaryOperator 0x55b9de04b1a8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b9de04b140 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b9de049f98
|   | | `-MemberExpr 0x55b9de04b110 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b9de04a058
|   | |   `-CXXThisExpr 0x55b9de04b100 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b9de04b190 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b9de04b170 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b9de04a690 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b9de04b258 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b9de04b1d8 <col:2> 'void *' lvalue ->_thunk 0x55b9de04a0d8
|     | `-CXXThisExpr 0x55b9de04b1c8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b9de04b240 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55b9de04b228 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55b9de04b208 <col:11> 'Element *' lvalue ParmVar 0x55b9de047940 'element' 'Element *'
|-CXXMethodDecl 0x55b9de047b18 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55b9de047a88 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55b9de04b410 <col:29, line:94:5>
|   |-BinaryOperator 0x55b9de04b340 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b9de04b2d8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b9de049f98
|   | | `-MemberExpr 0x55b9de04b2a8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b9de04a058
|   | |   `-CXXThisExpr 0x55b9de04b298 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b9de04b328 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b9de04b308 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b9de04a868 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b9de04b3f0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b9de04b370 <col:2> 'void *' lvalue ->_thunk 0x55b9de04a0d8
|     | `-CXXThisExpr 0x55b9de04b360 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b9de04b3d8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55b9de04b3c0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55b9de04b3a0 <col:11> 'Task *' lvalue ParmVar 0x55b9de047a88 'task' 'Task *'
|-CXXMethodDecl 0x55b9de047c08 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55b9de04b4f0 <col:37, line:100:5>
|   `-ReturnStmt 0x55b9de04b4e0 <line:99:2, col:19>
|     `-BinaryOperator 0x55b9de04b4c0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55b9de04b490 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55b9de04b440 <col:9> 'Element *const' lvalue ->_owner 0x55b9de04a138
|       |   `-CXXThisExpr 0x55b9de04b430 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55b9de04b4a8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55b9de04b470 <col:19> 'int' 0
|-CXXMethodDecl 0x55b9de047cc8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55b9de04b5b0 <col:35, line:105:5>
|   `-ReturnStmt 0x55b9de04b5a0 <line:104:2, col:23>
|     `-BinaryOperator 0x55b9de04b580 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55b9de04b568 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55b9de04b518 <col:9> 'const int' lvalue ->_schedpos1 0x55b9de049db8
|       |   `-CXXThisExpr 0x55b9de04b508 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55b9de04b548 <col:23> 'int' 0
|-CXXMethodDecl 0x55b9de047d88 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55b9de04b618 <col:51, line:118:5>
|   `-ReturnStmt 0x55b9de04b608 <line:117:2, col:9>
|     `-MemberExpr 0x55b9de04b5d8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|       `-CXXThisExpr 0x55b9de04b5c8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b9de047e48 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55b9de04bb70 <col:37, line:136:5>
|   `-IfStmt 0x55b9de04bb48 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55b9de04b6d8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55b9de04b6c0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55b9de04b6a0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55b9de04b670 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55b9ddf70838
|     |       `-MemberExpr 0x55b9de04b640 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|     |         `-CXXThisExpr 0x55b9de04b630 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55b9de04bab8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55b9de04baa0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55b9de04ba70 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55b9de04ba58 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55b9de04ba20 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55b9de04ba08 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55b9de04b9e8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b9ddf9f010 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55b9de04b988 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55b9de04b970 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55b9de04b898 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55b9de04b880 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55b9de04b860 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b9ddf9ecd0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55b9de04b800 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55b9de04b700 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|     |         |     |   `-CXXThisExpr 0x55b9de04b6f0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55b9de04b848 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55b9de04b830 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55b9de04b7e0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55b9de04b7c8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55b9de04b768 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55b9ddf92330 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55b9de04b9d0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55b9de04b9b8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55b9de04b950 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55b9de04b938 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55b9de04b908 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55b9ddded880 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55b9de04bb38 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55b9de04bb08 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55b9de04bad8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|           `-CXXThisExpr 0x55b9de04bac8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b9de047f08 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55b9de04bc58 <col:35, line:141:5>
|   `-ReturnStmt 0x55b9de04bc48 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55b9de04bc10 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55b9de04bbe0 <col:9, col:17> '<bound member function type>' ->router 0x55b9ddff0ec0
|         `-ImplicitCastExpr 0x55b9de04bc30 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55b9de04bbc8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55b9de04bb98 <col:9> 'Element *const' lvalue ->_owner 0x55b9de04a138
|               `-CXXThisExpr 0x55b9de04bb88 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b9de047fc8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55b9de04bcd8 <col:37, line:146:5>
|   `-ReturnStmt 0x55b9de04bcc8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55b9de04bcb0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55b9de04bc80 <col:9> 'Element *const' lvalue ->_owner 0x55b9de04a138
|         `-CXXThisExpr 0x55b9de04bc70 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b9de048088 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55b9de04bd58 <col:41, line:151:5>
|   `-ReturnStmt 0x55b9de04bd48 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55b9de04bd30 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55b9de04bd00 <col:9> 'RouterThread *const' lvalue ->_thread 0x55b9de04a198
|         `-CXXThisExpr 0x55b9de04bcf0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b9de048150 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55b9de048348 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55b9de048200 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55b9de048278 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9de04aa78 <col:50> 'bool' false
|-CXXMethodDecl 0x55b9de048498 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55b9de048408 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55b9de0485e0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b9de048550 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b9de048728 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b9de048698 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b9de048870 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b9de0487e0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55b9de0489b8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b9de048928 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55b9de048a80 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55b9de04bec0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55b9de04bea8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55b9de04be50 <col:2, col:47> 'void'
|       |-MemberExpr 0x55b9de04bd80 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b9de0485e0
|       | `-CXXThisExpr 0x55b9de04bd70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b9de04be90 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b9de04be78 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55b9de04be30 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55b9de04be18 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55b9de04bde8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55b9ddded880 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55b9de048bc0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b9de048b30 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55b9de048d08 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b9de048c78 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9de04c048 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55b9de04c030 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55b9de04bfd8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55b9de04bee8 <col:2> '<bound member function type>' ->schedule_after 0x55b9de048bc0
|       | `-CXXThisExpr 0x55b9de04bed8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b9de04c018 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b9de04c000 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55b9de04bf98 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55b9de04bf68 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b9de04bf28 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9de048c78 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55b9de04bf80 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b9de04bf48 <col:38> 'int' 0
|-CXXMethodDecl 0x55b9de048e50 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b9de048dc0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9de04c2b8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55b9de04c2a0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55b9de04c248 <col:2, col:49> 'void'
|       |-MemberExpr 0x55b9de04c070 <col:2> '<bound member function type>' ->schedule_after 0x55b9de048bc0
|       | `-CXXThisExpr 0x55b9de04c060 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b9de04c288 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b9de04c270 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55b9de04c1f0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55b9de04c1d8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b9de04c148 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b9ddf72628 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55b9de04c230 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55b9de04c218 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b9de04c128 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9de048dc0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9de048f98 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55b9de048f08 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55b9de04c498 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55b9de04c480 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55b9de04c428 <col:2, col:38> 'void'
|       |-MemberExpr 0x55b9de04c2e0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b9de0485e0
|       | `-CXXThisExpr 0x55b9de04c2d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b9de04c468 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b9de04c450 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55b9de04c3f0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55b9de04c3d8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b9de04c3b8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b9ddf9ecd0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55b9de04c388 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55b9de04c370 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55b9de04c320 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|             |     `-CXXThisExpr 0x55b9de04c310 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55b9de04c350 <col:33> 'const Timestamp' lvalue ParmVar 0x55b9de048f08 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55b9de0490e0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b9de049050 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9de04c770 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55b9de04c758 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55b9de04c700 <col:2, col:79> 'void'
|       |-MemberExpr 0x55b9de04c4c0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b9de0485e0
|       | `-CXXThisExpr 0x55b9de04c4b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b9de04c740 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b9de04c728 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55b9de04c6c0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55b9de04c5f8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55b9de04c5e0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55b9de04c570 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55b9de04c540 <col:31, col:41> '<bound member function type>' .sec 0x55b9dddef378
|             | |     `-ImplicitCastExpr 0x55b9de04c590 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55b9de04c510 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|             | |         `-CXXThisExpr 0x55b9de04c500 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55b9de04c5c8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55b9de04c5a8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9de049050 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55b9de04c688 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55b9de04c658 <col:60, col:70> '<bound member function type>' .subsec 0x55b9dddefa70
|                 `-ImplicitCastExpr 0x55b9de04c6a8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55b9de04c628 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|                     `-CXXThisExpr 0x55b9de04c618 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55b9de049228 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b9de049198 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b9de04caa8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55b9de04ca90 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55b9de04ca38 <col:2, col:65> 'void'
|       |-MemberExpr 0x55b9de04c798 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b9de0485e0
|       | `-CXXThisExpr 0x55b9de04c788 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b9de04ca78 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b9de04ca60 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55b9de04ca00 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55b9de04c9e8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b9de04c9c8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b9ddf9ecd0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55b9de04c968 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55b9de04c950 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55b9de04c7d8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|             |     `-CXXThisExpr 0x55b9de04c7c8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55b9de04c9b0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55b9de04c998 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55b9de04c8f8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55b9de04c8e0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55b9de04c8b0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b9ddf72628 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55b9de04c938 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55b9de04c920 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55b9de04c890 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b9de049198 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9de0492f0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55b9de0493b0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55b9de04cf70 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55b9de04cb00 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55b9de04cad0 <col:2> '<bound member function type>' ->unschedule 0x55b9de0492f0
|   |   `-CXXThisExpr 0x55b9de04cac0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55b9de04cf58 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55b9de04cf20 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55b9de04cf08 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b9de04cbb8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55b9ddc86918 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55b9de04cb30 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55b9de049e18
|       | `-CXXThisExpr 0x55b9de04cb20 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b9de04cba0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55b9de04cb70 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55b9de049470 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55b9de04d2c8 <col:42, line:310:5>
|   |-IfStmt 0x55b9de04d110 <line:306:2, line:307:23>
|   | |-CallExpr 0x55b9de04d040 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55b9de04d028 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55b9de04cfc8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55b9ddf907a0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55b9de04d100 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55b9de04d0e8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b9de04d0b8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b9de04d0a0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55b9de04d070 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55b9de04d2b8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55b9de04d2a0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55b9de04d270 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b9de04d258 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55b9de04d218 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55b9de04d200 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b9de04d1d0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b9ddf72940 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55b9de04d240 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55b9de04d1b0 <col:30> 'int' 500
|-CXXMethodDecl 0x55b9de0495b0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b9de049520 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9de049658 <col:69> "" ""
|-CXXMethodDecl 0x55b9de049768 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b9de0496d8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9de049810 <col:70> "" ""
|-CXXMethodDecl 0x55b9de049920 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b9de049890 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9de0499c8 <col:71> "" ""
|-CXXMethodDecl 0x55b9de049ad8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b9de049a48 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9de049b80 <col:72> "" ""
|-EnumDecl 0x55b9de049c10 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55b9de049d10 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55b9de049d60 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b9de049cf0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55b9de049cd0 <col:25> 'int' 1
|-AccessSpecDecl 0x55b9de049d78 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55b9de049db8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55b9de049e18 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55b9de049e68 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b9de049f98 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55b9de04aa88 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55b9de04a058 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55b9de04a0d8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55b9de04a138 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55b9de04a198 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55b9de04a2e8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55b9de04a1f8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55b9de04a4b8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b9de04a3a0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55b9de04a420 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55b9de04a690 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b9de04a578 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55b9de04a5f8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55b9de04a868 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b9de04a750 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55b9de04a7d0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55b9de04aa38 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9ddf62800 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55b9de202c80 <line:167:18>
|-CXXRecordDecl 0x55b9de202d40 prev 0x55b9ddf62800 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55b9de202e50 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de05b6d0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55b9de2290f8 <line:167:18>
|-CXXRecordDecl 0x55b9de2291b8 prev 0x55b9de05b6d0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55b9de2292c8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de02c890 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x55b9de23ce58 <line:167:18>
|-CXXRecordDecl 0x55b9de23cf18 prev 0x55b9de02c890 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55b9de23d028 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.4 = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.4 = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b9de1b00c8 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x55b9de1b0328 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55b9de233fd8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b9de2340d8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x55b9de2340d8
| `-ParmVarDecl 0x55b9de2341e8 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x55b9de234288 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b9de234398 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x55b9de234cd0 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55b9de234ca0 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x55b9de234c70 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x55b9de234c40 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x55b9de234398 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x55b9de234d40 <col:19>
`-CXXDestructorDecl 0x55b9de234438 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
