
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787711718 prev 0x557787708eb8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557787711810 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5577877118a0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x557787711918 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5577877119d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x557787711aa0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x557787711c18 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x557787711b50 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x557787711cc0 <col:24>
| `-OptimizeNoneAttr 0x557787711d18 <col:34>
|-CXXMethodDecl 0x557787711d60 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x557787712018 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x557787711e10 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x557787711e88 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x557787711f08 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5577877120d0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x557787712108 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x557787712170 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5577877121f8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x557787712518 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5577877122b0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x557787712328 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5577877123a0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x557787712420 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x557787712630 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x557787719fa8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x557787719fa8
| `-ParmVarDecl 0x55778771a0b8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55778771a158 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55778771a158
| `-ParmVarDecl 0x55778771a268 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5577877fc710 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787704730 prev 0x5577877044b0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557787704828 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5577877048b8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x557787704918 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x557787704a08 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x557787704b08 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x557787704cd8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x557787704b88 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x557787704c00 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x557787704e68 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x557787704da0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x557787704f10 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x557787705048 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x557787704f80 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5577877051e8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x557787705128 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x557787705388 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5577877052c8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x557787705430 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x557787705530 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x557787705610 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787705510 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5577877054f0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5577877055c0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x557787705628 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577877055a0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x557787705580 <col:44> 'int' 2
|-CXXMethodDecl 0x557787705770 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x557787705658 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5577877056d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5577877058c8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x557787705838 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x557787705b08 <line:48:5, col:86> col:45 used checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x557787705988 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x557787705a00 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x557787705bb8 <col:20>
| `-OptimizeNoneAttr 0x557787705c10 <col:30>
|-CXXMethodDecl 0x557787705d18 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x557787705c50 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x557787705dc0 <col:20>
| `-OptimizeNoneAttr 0x557787705e18 <col:30>
|-CXXMethodDecl 0x557787705e68 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x557787705f30 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x557787706048 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5577877060d0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x557787706158 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5577877061e0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x557787706268 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5577877062f8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5577877063b8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x557787706440 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5577877064c8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x557787706550 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5577877065d8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x557787706660 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5577877066f0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5577877067b0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x557787706840 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x557787706990 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5577877068f8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x557787706b20 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x557787706a50 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x557787706dd0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x557787706bd8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x557787706c58 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x557787706cd8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x557787706e88 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x557787706f90 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557787707220 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787706f70 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x557787706f50 <col:33> 'int' 0
| |-EnumConstantDecl 0x557787707020 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557787707238 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787707000 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x557787706fe0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5577877070b0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557787707250 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787707090 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x557787707070 <col:38> 'int' 90
| |-EnumConstantDecl 0x557787707140 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557787707268 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787707120 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x557787707100 <col:35> 'int' 100
| `-EnumConstantDecl 0x5577877071d0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x557787707280 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577877071b0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x557787707190 <col:32> 'int' 2000
|-CXXMethodDecl 0x5577877072c0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x557787707700 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x557787707570 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5577877075e8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5577877077d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x557787707950 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x557787707880 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557787707b58 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x557787707a08 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x557787707a80 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557787707c58 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x557787707cf8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x557787707dc0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x557787707e50 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x557787708080 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787707e30 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x557787707e10 <col:36> 'int' EnumConstant 0x557787707dc0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x557787707ea0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557787707ef0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557787707f40 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557787707f90 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557787707fe0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x557787708030 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x557787708168 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5577877080a8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x557787708230 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5577877082f0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5577877083b0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x557787708470 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x557787708588 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x557787708650 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5577877087d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x557787708700 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5577877088f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x557787708af8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5577877089a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x557787708a28 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x557787716448 <col:54, line:127:5>
|   |-ParenExpr 0x5577877162f8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5577877162c8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x557787715fb8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x557787715f90 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x557787715f78 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x557787715f60 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x557787715f30 <col:31> 'Router *' lvalue ->_router 0x557787713e10
|   |   |         `-CXXThisExpr 0x557787715f20 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x557787716018 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557787715ff8 <col:48> 'int' 0
|   |   `-CallExpr 0x557787716228 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x557787716210 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577877161f0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557787716268 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557787716088 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x557787716280 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577877160a8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x557787716298 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577877160e0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5577877162b0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577877161d8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577877161c0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557787716178 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x557787716390 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x557787716328 <col:9> 'Router *' lvalue ->_router 0x557787713e10
|   | | `-CXXThisExpr 0x557787716318 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x557787716378 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x557787716358 <col:19> 'Router *' lvalue ParmVar 0x5577877089a8 'r' 'Router *'
|   `-BinaryOperator 0x557787716428 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5577877163c0 <col:9> 'int' lvalue ->_eindex 0x557787713e78
|     | `-CXXThisExpr 0x5577877163b0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x557787716410 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5577877163f0 <col:19> 'int' lvalue ParmVar 0x557787708a28 'eindex' 'int'
|-CXXMethodDecl 0x557787708c80 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x557787708bb8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x557787708d50 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x557787708e18 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x557787708eb8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x557787709108 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x557787708f80 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x557787709000 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5577877091b8 <col:20>
| `-OptimizeNoneAttr 0x557787709210 <col:30>
|-CXXMethodDecl 0x557787709318 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x557787709250 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5577877093c0 <col:20>
| `-OptimizeNoneAttr 0x557787709418 <col:30>
|-CXXMethodDecl 0x5577877094e8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x557787709458 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x557787709590 <col:20>
| `-OptimizeNoneAttr 0x5577877095e8 <col:30>
|-CXXMethodDecl 0x557787709778 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x557787709620 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5577877096a0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x557787709908 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x557787709840 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x557787709a58 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5577877099c8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x557787709ba8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x557787709b18 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x557787709cf8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x557787709c68 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x557787709fb8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x557787709db0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x557787709e30 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x557787709ed8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55778770a090 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55778770a150 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55778770a420 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55778770a2d0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55778770a348 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55778770a548 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55778770a720 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55778770a600 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55778770a680 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55778770a908 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55778770a7e8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55778770a868 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55778770ac78 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55778770a9c8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55778770aa40 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55778770aac0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557787715a30 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557787715a10 <col:106> 'int' 0
| `-ParmVarDecl 0x55778770ab38 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557787715a68 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557787715a48 <col:126> 'int' 0
|-CXXMethodDecl 0x55778770b018 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55778770ad48 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55778770ade0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55778770ae60 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55778770aed8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557787715aa0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557787715a80 <col:114> 'int' 0
|-CXXMethodDecl 0x55778770b3a8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55778770b0f0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55778770b168 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55778770b1e8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x557787715ab8 <col:96> 'int' 0
| `-ParmVarDecl 0x55778770b260 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557787715af8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557787715ad8 <col:116> 'int' 0
|-CXXMethodDecl 0x55778770b728 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55778770b478 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55778770b4f0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55778770b570 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557787715b30 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557787715b10 <col:109> 'int' 0
| `-ParmVarDecl 0x55778770b5e8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557787715b68 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557787715b48 <col:129> 'int' 0
|-CXXMethodDecl 0x55778770baa8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55778770b7f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55778770b870 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55778770b8f0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55778770b968 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557787715ba0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557787715b80 <col:117> 'int' 0
|-CXXMethodDecl 0x55778770be38 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55778770bb80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770bbf8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55778770bc78 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x557787715bb8 <col:99> 'int' 0
| `-ParmVarDecl 0x55778770bcf0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557787715bf8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557787715bd8 <col:119> 'int' 0
|-CXXMethodDecl 0x55778770c258 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55778770bf08 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55778770bf88 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55778770c000 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55778770c080 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557787715c30 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557787715c10 <col:108> 'int' 0
| `-ParmVarDecl 0x55778770c100 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x557787715c68 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x557787715c48 <col:141> 'int' 0
|-CXXMethodDecl 0x55778770c678 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55778770c330 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55778770c3b0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55778770c428 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55778770c4a8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55778770c528 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x557787715c80 <col:121> 'int' 0
|-CXXMethodDecl 0x55778770caa8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55778770c758 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55778770c7d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55778770c850 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55778770c8d0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x557787715ca0 <col:98> 'int' 0
| `-ParmVarDecl 0x55778770c950 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x557787715cc0 <col:123> 'int' 0
|-CXXMethodDecl 0x55778770cd70 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55778770cb80 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55778770cc00 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55778770cc80 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x557787715ce0 <col:80> 'int' 0
|-EnumDecl 0x55778770ce28 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55778770cf30 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55778770d1c0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778770cf10 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55778770cef0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55778770cfc0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55778770d1d8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778770cfa0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55778770cf80 <col:40> 'int' 2
| |-EnumConstantDecl 0x55778770d050 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55778770d1f0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778770d030 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55778770d010 <col:44> 'int' 4
| |-EnumConstantDecl 0x55778770d0e0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55778770d208 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778770d0c0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55778770d0a0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55778770d170 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55778770d220 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778770d150 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55778770d130 <col:34> 'int' 6
|-CXXMethodDecl 0x55778770d4d8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55778770d248 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55778770d2e8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55778770d368 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55778770d3e0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x557787715d98 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x557787715d80 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x557787715d68 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x557787715d48 <col:98, col:105> 'String' (CXXTemporary 0x557787715d48)
|           `-CXXTemporaryObjectExpr 0x557787715d10 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55778770d778 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55778770d5a8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55778770d620 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55778770d698 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x557787715e48 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x557787715e30 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x557787715e18 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x557787715df8 <col:94, col:101> 'String' (CXXTemporary 0x557787715df8)
| |         `-CXXTemporaryObjectExpr 0x557787715dc0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x557787716630 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5577877165a8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x557787716578 <col:9> '<bound member function type>' ->add_task_handlers 0x55778770d4d8
|     | `-CXXThisExpr 0x557787716568 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5577877165e8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5577877164e8 <col:27> 'Task *' lvalue ParmVar 0x55778770d5a8 'task' 'Task *'
|     |-ImplicitCastExpr 0x557787716600 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x557787716508 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55778770d620 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x557787716618 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x557787716528 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55778770d170 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x557787716548 <col:62> 'const String' lvalue ParmVar 0x55778770d698 'prefix' 'const String &'
|-CXXMethodDecl 0x55778770d988 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55778770d840 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55778770d8b8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x557787715ef8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x557787715ee0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x557787715ec8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x557787715ea8 <col:70, col:77> 'String' (CXXTemporary 0x557787715ea8)
| |         `-CXXTemporaryObjectExpr 0x557787715e70 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x557787716808 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x557787716780 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x557787716750 <col:9> '<bound member function type>' ->add_task_handlers 0x55778770d4d8
|     | `-CXXThisExpr 0x557787716740 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5577877167c0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5577877166c0 <col:27> 'Task *' lvalue ParmVar 0x55778770d840 'task' 'Task *'
|     |-ImplicitCastExpr 0x5577877167d8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5577877166e0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5577877167f0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x557787716700 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55778770d170 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x557787716720 <col:57> 'const String' lvalue ParmVar 0x55778770d8b8 'prefix' 'const String &'
|-CXXMethodDecl 0x55778770dc68 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55778770da50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770dad0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770db48 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55778770df18 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55778770dd38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770ddb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770de38 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55778770e208 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55778770dfe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770e068 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770e0e0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55778770e4b8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55778770e2d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770e358 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770e3d8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55778770e768 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55778770e588 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770e608 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770e688 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55778770ea18 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55778770e838 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770e8b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770e930 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55778770ecc8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55778770eae8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770eb68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770ebe8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55778770efd8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55778770edf0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770ee70 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770eef0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55778770f2b8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55778770f0a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770f128 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770f1d0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55778770f598 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55778770f388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770f408 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770f4b0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55778770f800 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55778770f668 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55778770f6e8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55778770f760 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55778770faa8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55778770f8d0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55778770f950 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55778770f9c8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55778770fd58 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55778770fb78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770fbf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770fc78 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x557787710008 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55778770fe28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778770fea8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778770ff20 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5577877102b8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5577877100d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557787710158 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5577877101d0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x557787710588 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x557787710388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557787710408 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5577877104a8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5577877108b8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x557787710658 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5577877106d8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x557787710750 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5577877107c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557787715f10 <col:93> 'bool' false
|-CXXMethodDecl 0x557787710aa0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557787710988 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x557787710a08 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x557787710c78 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557787710b60 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x557787710be0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x557787710f58 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x557787710d38 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x557787710db0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x557787710e30 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x557787710ea8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x557787711248 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x557787711028 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5577877110a0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x557787711120 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x557787711198 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x557787711480 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x557787711320 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5577877113a0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x557787711668 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x557787711548 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5577877115c8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x557787711718 prev 0x557787708eb8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557787711810 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5577877118a0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x557787711918 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5577877119d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x557787711aa0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x557787711c18 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x557787711b50 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x557787711cc0 <col:24>
| | `-OptimizeNoneAttr 0x557787711d18 <col:34>
| |-CXXMethodDecl 0x557787711d60 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x557787712018 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x557787711e10 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x557787711e88 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x557787711f08 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5577877120d0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x557787712108 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x557787712170 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5577877121f8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x557787712518 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5577877122b0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x557787712328 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5577877123a0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x557787712420 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x557787712630 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x557787719fa8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x557787719fa8
| | `-ParmVarDecl 0x55778771a0b8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55778771a158 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55778771a158
| | `-ParmVarDecl 0x55778771a268 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5577877fc710 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5577877126a8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x557787712748 <col:38> "" ""
|-CXXMethodDecl 0x5577877127d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x557787712878 <col:44> "" ""
|-AccessSpecDecl 0x5577877128e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x557787712910 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x557787712a10 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x557787712a60 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577877129f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5577877129d0 <col:27> 'int' 4
|-FieldDecl 0x557787712b18 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x557787712cc8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x557787712d80 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x557787713e10 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x557787713e78 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x557787713fc8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x557787713f08 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x557787714178 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x557787714088 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x557787714358 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x557787714238 <col:20> col:23 'int'
| `-ParmVarDecl 0x5577877142b8 <col:25> col:28 'int'
|-CXXMethodDecl 0x557787714600 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x557787714420 <col:23> col:26 'int'
| |-ParmVarDecl 0x5577877144a0 <col:28> col:31 'int'
| `-ParmVarDecl 0x557787714518 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5577877146b8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x557787714780 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5577877147d0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x557787714820 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x557787714a00 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5577877148b0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x557787714928 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557787714ca8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x557787714ac8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x557787714b48 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x557787714bc0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x557787714ec8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x557787714d78 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x557787714df8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x557787715200 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x557787714f88 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x557787715008 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x557787715080 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x557787715100 <col:57> col:60 'int'
|-CXXMethodDecl 0x5577877153e8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5577877152d0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x557787715350 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x557787715538 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5577877154a8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5577877158b8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5577877155f8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x557787715678 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5577877156f0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x557787715770 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5577877159d0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Storage
         0 |   Storage::index_type _capacity
         4 |   volatile Storage::index_type _head
         8 |   volatile Storage::index_type _tail
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877da868 <../dummy_inc/click/standard/storage.hh:9:1, line:54:1> line:9:7 referenced class Storage definition
|-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5577877da988 <col:1, col:7> col:7 implicit referenced class Storage
|-AccessSpecDecl 0x5577877daa18 <col:17, col:23> col:17 public
|-TypedefDecl 0x5577877daa50 <line:11:5, col:22> col:22 referenced index_type 'uint32_t':'unsigned int'
| `-TypedefType 0x5577872f8320 'uint32_t' sugar
|   |-Typedef 0x55778720a3d8 'uint32_t'
|   `-TypedefType 0x5577871e3480 '__uint32_t' sugar
|     |-Typedef 0x5577871e3078 '__uint32_t'
|     `-BuiltinType 0x5577871a1450 'unsigned int'
|-TypedefDecl 0x5577877daab8 <line:12:5, col:21> col:21 referenced signed_index_type 'int32_t':'int'
| `-TypedefType 0x5577872f8400 'int32_t' sugar
|   |-Typedef 0x55778720a238 'int32_t'
|   `-TypedefType 0x5577871e33f0 '__int32_t' sugar
|     |-Typedef 0x5577871e3008 '__int32_t'
|     `-BuiltinType 0x5577871a13b0 'int'
|-VarDecl 0x5577877dab40 <line:13:5, col:59> col:29 referenced invalid_index 'const Storage::index_type':'const unsigned int' static cinit
| `-CStyleCastExpr 0x5577877dac08 <col:45, col:59> 'Storage::index_type':'unsigned int' <NoOp>
|   `-ImplicitCastExpr 0x5577877dabf0 <col:58, col:59> 'Storage::index_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|     `-UnaryOperator 0x5577877dabc8 <col:58, col:59> 'int' prefix '-'
|       `-IntegerLiteral 0x5577877daba8 <col:59> 'int' 1
|-CXXConstructorDecl 0x5577877dacf0 <line:15:5, col:38> col:5 Storage 'void ()'
| |-CXXCtorInitializer Field 0x5577877dc540 '_head' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x5577877dc648 <col:23> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5577877dc608 <col:23> 'int' 0
| |-CXXCtorInitializer Field 0x5577877dc5a0 '_tail' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x5577877dc6c8 <col:33> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5577877dc688 <col:33> 'int' 0
| `-CompoundStmt 0x5577877dc718 <col:36, col:38>
|-CXXConversionDecl 0x5577877dadf8 <line:17:5, col:52> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x5577877dc808 <col:27, col:52>
|   `-ReturnStmt 0x5577877dc7f8 <col:29, col:45>
|     `-BinaryOperator 0x5577877dc7d8 <col:36, col:45> 'bool' '!='
|       |-ImplicitCastExpr 0x5577877dc7a8 <col:36> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x5577877dc738 <col:36> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x5577877dc540
|       |   `-CXXThisExpr 0x5577877dc728 <col:36> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x5577877dc7c0 <col:45> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x5577877dc778 <col:45> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x5577877dc5a0
|           `-CXXThisExpr 0x5577877dc768 <col:45> 'const Storage *' implicit this
|-CXXMethodDecl 0x5577877daec8 <line:18:5, col:49> col:10 empty 'bool () const'
| `-CompoundStmt 0x5577877dc900 <col:24, col:49>
|   `-ReturnStmt 0x5577877dc8f0 <col:26, col:42>
|     `-BinaryOperator 0x5577877dc8d0 <col:33, col:42> 'bool' '=='
|       |-ImplicitCastExpr 0x5577877dc8a0 <col:33> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x5577877dc830 <col:33> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x5577877dc540
|       |   `-CXXThisExpr 0x5577877dc820 <col:33> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x5577877dc8b8 <col:42> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x5577877dc870 <col:42> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x5577877dc5a0
|           `-CXXThisExpr 0x5577877dc860 <col:42> 'const Storage *' implicit this
|-CXXMethodDecl 0x5577877daf90 <line:19:5, col:16> col:9 size 'int () const'
|-CXXMethodDecl 0x5577877db1d0 <line:20:5, col:48> col:9 used size 'int (Storage::index_type, Storage::index_type) const'
| |-ParmVarDecl 0x5577877db040 <col:14, col:25> col:25 head 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x5577877db0b8 <col:31, col:42> col:42 tail 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5577877db2a8 <line:21:5, col:46> col:9 used capacity 'int () const'
| `-CompoundStmt 0x5577877dc998 <col:26, col:46>
|   `-ReturnStmt 0x5577877dc988 <col:28, col:35>
|     `-ImplicitCastExpr 0x5577877dc970 <col:35> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5577877dc958 <col:35> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x5577877dc928 <col:35> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x5577877dc4b8
|           `-CXXThisExpr 0x5577877dc918 <col:35> 'const Storage *' implicit this
|-CXXMethodDecl 0x5577877db398 <line:23:5, col:45> col:16 used head 'Storage::index_type () const'
| `-CompoundStmt 0x5577877dca18 <col:29, col:45>
|   `-ReturnStmt 0x5577877dca08 <col:31, col:38>
|     `-ImplicitCastExpr 0x5577877dc9f0 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5577877dc9c0 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x5577877dc540
|         `-CXXThisExpr 0x5577877dc9b0 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x5577877db458 <line:24:5, col:45> col:16 used tail 'Storage::index_type () const'
| `-CompoundStmt 0x5577877dca98 <col:29, col:45>
|   `-ReturnStmt 0x5577877dca88 <col:31, col:38>
|     `-ImplicitCastExpr 0x5577877dca70 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5577877dca40 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x5577877dc5a0
|         `-CXXThisExpr 0x5577877dca30 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x5577877db5f8 <line:26:5, line:28:5> line:26:16 used next_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x5577877db508 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x5577877dcc88 <col:43, line:28:5>
|   `-ReturnStmt 0x5577877dcc78 <line:27:2, col:32>
|     `-ParenExpr 0x5577877dcc58 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x5577877dcc28 <col:10, col:31> 'unsigned int'
|         |-BinaryOperator 0x5577877dcb40 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x5577877dcb10 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5577877dcab0 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5577877db508 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x5577877dcb28 <col:13> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         |   `-MemberExpr 0x5577877dcae0 <col:13> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x5577877dc4b8
|         |     `-CXXThisExpr 0x5577877dcad0 <col:13> 'const Storage *' implicit this
|         |-BinaryOperator 0x5577877dcbd0 <col:25, col:27> 'unsigned int' '+'
|         | |-ImplicitCastExpr 0x5577877dcba0 <col:25> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5577877dcb60 <col:25> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5577877db508 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x5577877dcbb8 <col:27> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x5577877dcb80 <col:27> 'int' 1
|         `-ImplicitCastExpr 0x5577877dcc10 <col:31> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x5577877dcbf0 <col:31> 'int' 0
|-CXXMethodDecl 0x5577877db740 <line:29:5, line:31:5> line:29:16 used prev_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x5577877db6b0 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x5577877dce78 <col:43, line:31:5>
|   `-ReturnStmt 0x5577877dce68 <line:30:2, col:32>
|     `-ParenExpr 0x5577877dce48 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x5577877dce18 <col:10, col:23> 'unsigned int'
|         |-BinaryOperator 0x5577877dcd10 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x5577877dcce0 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5577877dcca0 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5577877db6b0 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x5577877dccf8 <col:13> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x5577877dccc0 <col:13> 'int' 0
|         |-BinaryOperator 0x5577877dcda0 <col:17, col:19> 'unsigned int' '-'
|         | |-ImplicitCastExpr 0x5577877dcd70 <col:17> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5577877dcd30 <col:17> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5577877db6b0 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x5577877dcd88 <col:19> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x5577877dcd50 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x5577877dce00 <col:23> 'Storage::index_type':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x5577877dcdd0 <col:23> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x5577877dc4b8
|             `-CXXThisExpr 0x5577877dcdc0 <col:23> 'const Storage *' implicit this
|-CXXMethodDecl 0x5577877db8b8 <line:34:5, col:54> col:10 set_capacity 'void (Storage::index_type)'
| |-ParmVarDecl 0x5577877db7f8 <col:23, col:34> col:34 used c 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x5577877dcf28 <col:37, col:54>
|   `-BinaryOperator 0x5577877dcf08 <col:39, col:51> 'Storage::index_type':'unsigned int' lvalue '='
|     |-MemberExpr 0x5577877dcea0 <col:39> 'Storage::index_type':'unsigned int' lvalue ->_capacity 0x5577877dc4b8
|     | `-CXXThisExpr 0x5577877dce90 <col:39> 'Storage *' implicit this
|     `-ImplicitCastExpr 0x5577877dcef0 <col:51> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5577877dced0 <col:51> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5577877db7f8 'c' 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5577877dba00 <line:35:5, col:38> col:17 used set_head 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x5577877db970 <col:26, col:37> col:37 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5577877dbb48 <line:36:5, col:38> col:17 used set_tail 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x5577877dbab8 <col:26, col:37> col:37 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5577877dbc90 <line:37:5, col:46> col:17 used set_head_release 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x5577877dbc00 <col:34, col:45> col:45 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5577877dbdd8 <line:38:5, col:46> col:17 set_tail_acquire 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x5577877dbd48 <col:34, col:45> col:45 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5577877dbec8 <line:39:5, col:43> col:23 reserve_tail_atomic 'Storage::index_type ()' inline
|-CXXMethodDecl 0x5577877dc168 <line:41:5, line:43:35> line:41:24 packet_memory_barrier 'void (Packet *volatile &, volatile Storage::index_type &)' static inline
| |-ParmVarDecl 0x5577877dbfb0 <col:46, col:64> col:64 packet 'Packet *volatile &'
| |-ParmVarDecl 0x5577877dc058 <line:42:46, col:67> col:67 index 'volatile Storage::index_type &'
| `-DeprecatedAttr 0x5577877dc218 <line:43:24> "" ""
|-CXXMethodDecl 0x5577877dc368 <line:44:5, line:45:35> line:44:17 packet_memory_barrier 'void (Packet *volatile &)' inline
| |-ParmVarDecl 0x5577877dc2a0 <col:39, col:57> col:57 packet 'Packet *volatile &'
| `-DeprecatedAttr 0x5577877dc410 <line:45:24> "" ""
|-AccessSpecDecl 0x5577877dc480 <line:47:3, col:12> col:3 protected
|-FieldDecl 0x5577877dc4b8 <line:48:5, col:16> col:16 referenced _capacity 'Storage::index_type':'unsigned int'
|-AccessSpecDecl 0x5577877dc508 <line:50:3, col:10> col:3 private
|-FieldDecl 0x5577877dc540 <line:51:5, col:25> col:25 referenced _head 'volatile Storage::index_type':'volatile unsigned int'
|-FieldDecl 0x5577877dc5a0 <line:52:5, col:25> col:25 referenced _tail 'volatile Storage::index_type':'volatile unsigned int'
`-CXXDestructorDecl 0x5577877e50a0 <line:9:7> col:7 implicit ~Storage 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.Storage = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.Storage = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleQueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class Storage (base)
       108 |     Storage::index_type _capacity
       112 |     volatile Storage::index_type _head
       116 |     volatile Storage::index_type _tail
       120 |   class Packet *volatile * _q
       128 |   volatile int _drops
       132 |   int _highwater_length
           | [sizeof=136, dsize=136, align=8,
           |  nvsize=136, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577874c41f0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5577874c4308 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5577874c4398 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5577874c4468 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5577874c4550 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5577874c4768 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5577874c4610 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c4918 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5577874c4820 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5577874c4a60 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5577874c49d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5577874c4ba8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5577874c4b18 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c4cf0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5577874c4c60 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c4db8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x5577874c4f00 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5577874c4e70 <col:28> col:31 'int'
|-CXXMethodDecl 0x5577874c4fc8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x5577874c5110 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5577874c5080 <col:28> col:31 'int'
|-CXXMethodDecl 0x5577874c5288 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5577874c51c8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c53d0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5577874c5340 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c5498 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5577874c5658 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5577874c5548 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5577874c55c0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c58a8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5577874c5718 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5577874c5790 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5577874c5958 <col:86> "" ""
|-CXXMethodDecl 0x5577874c5bc8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5577874c5a38 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5577874c5ab0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c5d78 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5577874c5c88 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5577874c5f28 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5577874c5e30 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5577874c61f8 <line:81:5, col:98> col:28 used compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5577874c5fe0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5577874c6058 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5577874c60d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c64d8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5577874c62c0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5577874c6338 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5577874c63b0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5577874c6590 <col:115> "" ""
|-AccessSpecDecl 0x5577874c6600 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5577874c6638 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577874c6b40 <line:52:7> col:7 implicit used constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5577874c6c48 <col:7> col:7 used 'const atomic_uint32_t &'
| `-CompoundStmt 0x55778781b048 <col:7>
|   |-BinaryOperator 0x5577877fca58 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x5577877fca10 <col:7> 'uint32_t':'unsigned int' lvalue ->_val 0x5577874c6638
|   | | `-CXXThisExpr 0x5577877fca00 <col:7> 'atomic_uint32_t *' this
|   | `-ImplicitCastExpr 0x5577877fca40 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x5577877fc9d0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._val 0x5577874c6638
|   |     `-DeclRefExpr 0x5577877fc9b0 <col:7> 'const atomic_uint32_t' lvalue ParmVar 0x5577874c6c48 '' 'const atomic_uint32_t &'
|   `-ReturnStmt 0x55778781b038 <col:7>
|     `-UnaryOperator 0x55778781b020 <col:7> 'atomic_uint32_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5577877fca78 <col:7> 'atomic_uint32_t *' this
|-CXXMethodDecl 0x5577874c6ce8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5577874c6ce8
| `-ParmVarDecl 0x5577874c6df8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5577874fc428 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5577876ee220 <col:7>
|-CXXConstructorDecl 0x5577874fc500 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5577874fc500
| `-ParmVarDecl 0x5577874fc618 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5577874fc688 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5577874fc688
| `-ParmVarDecl 0x5577874fc798 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5577876f0c20 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577876dcdc8 prev 0x5577876d1fd0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5577876dcec0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5577876dcfb0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5577876dd0d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5577876dd258 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5577876dd3d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5577876dd558 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5577876ee388 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5577876eebf8 <col:11>
|-CXXDestructorDecl 0x5577876ee460 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5577876ee598 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5577876ee598
| `-ParmVarDecl 0x5577876ee6a8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5577876ee748 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5577876ee748
| `-ParmVarDecl 0x5577876ee858 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5577876f1618 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5577876f1728 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5577876f19a8 <col:11>
|   `-ReturnStmt 0x5577876f1998 <col:11>
|     `-UnaryOperator 0x5577876f1980 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5577876f1970 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5577876f1798 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5577876f1798
  `-ParmVarDecl 0x5577876f18a8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577876dd5c0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5577876dd6d8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5577876dd778 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5577876dd7e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5577876dd848 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5577876dd8b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5577876dd910 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5577876dd9d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5577876dda30 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5577876dda90 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5577876ee298 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5577876dd778 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5577876eec08 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5577876eec60 <col:12>
|-CXXConstructorDecl 0x5577876ee8c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5577876ee8c8
| `-ParmVarDecl 0x5577876ee9d8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5577876eea78 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5577876eea78
| `-ParmVarDecl 0x5577876eeb88 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5577876f0d00 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577876cb6e0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5577876cb7f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5577876cb888 <col:16, col:22> col:16 public
|-EnumDecl 0x5577876cb8b0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5577876cb9b0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5577876cba90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876cb990 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5577876cb970 <col:21> 'int' 28
| `-EnumConstantDecl 0x5577876cba40 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5577876cbaa8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577876cba20 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5577876cba00 <col:22> 'int' 64
|-CXXMethodDecl 0x5577876cbde8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5577876cbad0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5577876cbb50 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5577876cbbc8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5577876cbc40 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5577876cbea8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5577876cc0a8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5577876cbf20 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5577876cbf98 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5577876cc158 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5577876cc2b8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5577876cc1c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5577876cc360 <col:72> warn_unused_result ""
|-TypedefDecl 0x5577876cc6c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5577876cc650 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5577876cc5f0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5577876cc5b0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5577871a1310 'void'
|       |-PointerType 0x55778744ba80 'unsigned char *'
|       | `-BuiltinType 0x5577871a1410 'unsigned char'
|       |-TypedefType 0x557787248070 'size_t' sugar
|       | |-Typedef 0x557787211af0 'size_t'
|       | `-BuiltinType 0x5577871a1470 'unsigned long'
|       `-PointerType 0x5577871a1b10 'void *'
|         `-BuiltinType 0x5577871a1310 'void'
|-CXXMethodDecl 0x5577876ccb38 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5577876cc730 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5577876cc7a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5577876cc840 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5577876cc8c0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5577876e7230 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5577876e7218 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5577876e71e0 <col:58> 'int' 0
| |-ParmVarDecl 0x5577876cc940 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5577876e7258 <col:76> 'int' 0
| |-ParmVarDecl 0x5577876cc9c0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5577876e7278 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5577876ccc08 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5577876ccc88 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5577876ccd48 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5577876ccde8 <col:20>
| `-OptimizeNoneAttr 0x5577876cce40 <col:30>
|-CXXMethodDecl 0x5577876cceb8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5577876ccf58 <col:20>
| `-OptimizeNoneAttr 0x5577876ccfb0 <col:30>
|-CXXMethodDecl 0x5577876cd028 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5577876cd0c8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5577876cd178 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5577876cd218 <col:20>
| |-OptimizeNoneAttr 0x5577876cd270 <col:30>
| `-WarnUnusedResultAttr 0x5577876cd298 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5577876cd2f0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5577876cd390 <col:20>
| `-OptimizeNoneAttr 0x5577876cd3e8 <col:30>
|-CXXMethodDecl 0x5577876cd438 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5577876cd4d8 <col:20>
| `-OptimizeNoneAttr 0x5577876cd530 <col:30>
|-CXXMethodDecl 0x5577876cd578 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5577876cd618 <col:20>
| `-OptimizeNoneAttr 0x5577876cd670 <col:30>
|-CXXMethodDecl 0x5577876cd6b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5577876cd778 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5577876cd840 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5577876cd908 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5577876cd9c8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5577876cdae8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5577876e7340 <col:54, line:99:5>
|   `-ReturnStmt 0x5577876e7330 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5577876e7318 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5577876e72e8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5577876dddc8
|         `-CXXThisExpr 0x5577876e72d8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5577876cdc88 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5577876cdb98 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5577876e73f0 <col:67, line:103:5>
|   `-BinaryOperator 0x5577876e73d0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5577876e7368 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5577876dddc8
|     | `-CXXThisExpr 0x5577876e7358 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5577876e73b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5577876e7398 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5577876cdb98 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5577876cdd80 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5577876e7470 <col:33, line:107:5>
|   `-ReturnStmt 0x5577876e7460 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5577876e7448 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5577876e7418 <col:16> 'void *' lvalue ->_destructor_argument 0x5577876dde30
|         `-CXXThisExpr 0x5577876e7408 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5577876cde40 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5577876e7aa0 <col:25, line:113:5>
|   |-ParenExpr 0x5577876e77e8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5577876e77b8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5577876e7528 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5577876e7500 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5577876e74c8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5577876e7498 <col:24> '<bound member function type>' ->shared 0x5577876cceb8
|   |   |       `-ImplicitCastExpr 0x5577876e74e8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5577876e7488 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5577876e7588 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876e7568 <col:42> 'int' 0
|   |   `-CallExpr 0x5577876e7718 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5577876e7700 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876e76e0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876e7758 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e75f8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5577876e7770 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e7620 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876e7788 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876e7658 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5577876e77a0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876e76c8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876e76b0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876e7678 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5577876e79e8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5577876e7818 <col:2> 'unsigned char *' lvalue ->_head 0x5577876ddbd0
|   | | `-CXXThisExpr 0x5577876e7808 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5577876e79d0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5577876e79b0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5577876e7858 <col:10> 'unsigned char *' lvalue ->_data 0x5577876ddc38
|   |     | `-CXXThisExpr 0x5577876e7848 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5577876e7998 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5577876e7978 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5577876e7898 <col:18> 'unsigned char *' lvalue ->_tail 0x5577876ddca0
|   |         | `-CXXThisExpr 0x5577876e7888 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5577876e7960 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5577876e7940 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5577876e78d8 <col:26> 'unsigned char *' lvalue ->_end 0x5577876ddd08
|   |             | `-CXXThisExpr 0x5577876e78c8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5577876e7928 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5577876e7908 <col:33> 'int' 0
|   `-BinaryOperator 0x5577876e7a80 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5577876e7a18 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5577876dddc8
|     | `-CXXThisExpr 0x5577876e7a08 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5577876e7a68 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5577876e7a48 <col:16> 'int' 0
|-CXXMethodDecl 0x5577876cdf80 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5577876cdef0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5577876ce028 <col:20>
| |-OptimizeNoneAttr 0x5577876ce080 <col:30>
| `-WarnUnusedResultAttr 0x5577876ce0a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5577876ce178 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5577876ce0e8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5577876ce220 <col:20>
| |-OptimizeNoneAttr 0x5577876ce278 <col:30>
| `-WarnUnusedResultAttr 0x5577876ce2a0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5577876ce3d8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5577876ce2e0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5577876ce480 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5577876ce580 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5577876ce4f0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5577876ce628 <col:20>
| `-OptimizeNoneAttr 0x5577876ce680 <col:30>
|-CXXMethodDecl 0x5577876ce748 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5577876ce6b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5577876ce7f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5577876ce8f0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5577876ce860 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5577876ce998 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5577876cea98 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5577876cea08 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5577876ceb40 <col:20>
| `-OptimizeNoneAttr 0x5577876ceb98 <col:30>
|-CXXMethodDecl 0x5577876ced28 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5577876cebd8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5577876cec50 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5577876e7298 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5577876cedd8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5577876cefd8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5577876cee50 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5577876ceec8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577876cf1e8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5577876cf098 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5577876cf110 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577876cf3f8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5577876cf2a8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5577876cf328 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5577876e72a8 <col:39> 'int' 0
|-CXXMethodDecl 0x5577876cf4c8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5577876cf590 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5577876cf658 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5577876cf718 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5577876cf7e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5577876cf928 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5577876cf898 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5577876cfaf8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5577876cf9e8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5577876cfa60 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577876cfbc8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5577876cfc88 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5577876cfd28 <col:20>
| `-OptimizeNoneAttr 0x5577876cfd80 <col:30>
|-CXXMethodDecl 0x5577876cfdd0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5577876cfe70 <col:20>
| `-OptimizeNoneAttr 0x5577876cfec8 <col:30>
|-CXXMethodDecl 0x5577876cff18 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5577876cffd8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5577876d00a0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5577876d0140 <col:20>
| `-OptimizeNoneAttr 0x5577876d0198 <col:30>
|-CXXMethodDecl 0x5577876d02e8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5577876d01d8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5577876d0250 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577876d0438 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5577876d03a8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577876d0510 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5577876d05d0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5577876d0670 <col:20>
| `-OptimizeNoneAttr 0x5577876d06c8 <col:30>
|-CXXMethodDecl 0x5577876d0718 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5577876d07b8 <col:20>
| `-OptimizeNoneAttr 0x5577876d0810 <col:30>
|-CXXMethodDecl 0x5577876d0860 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5577876d0928 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5577876d09c8 <col:20>
| `-OptimizeNoneAttr 0x5577876d0a20 <col:30>
|-CXXMethodDecl 0x5577876d0a68 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5577876d0b88 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5577876d0cf8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5577876d0c38 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5577876d0de8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5577876d0e88 <col:20>
| `-OptimizeNoneAttr 0x5577876d0ee0 <col:30>
|-CXXMethodDecl 0x5577876d0f30 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5577876d0ff0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5577876d1228 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5577876d10a0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5577876d1118 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5577876d12d8 <col:20>
| `-OptimizeNoneAttr 0x5577876d1330 <col:30>
|-CXXMethodDecl 0x5577876d13d8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5577876d1478 <col:20>
| `-OptimizeNoneAttr 0x5577876d14d0 <col:30>
|-CXXMethodDecl 0x5577876d1520 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5577876d15c0 <col:20>
| `-OptimizeNoneAttr 0x5577876d1618 <col:30>
|-CXXMethodDecl 0x5577876d1660 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5577876d1700 <col:20>
| `-OptimizeNoneAttr 0x5577876d1758 <col:30>
|-CXXMethodDecl 0x5577876d1858 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5577876d1790 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5577876d1900 <col:20>
| `-OptimizeNoneAttr 0x5577876d1958 <col:30>
|-CXXMethodDecl 0x5577876d1b18 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5577876d1990 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5577876d1a08 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5577876d1bc8 <col:20>
| `-OptimizeNoneAttr 0x5577876d1c20 <col:30>
|-CXXMethodDecl 0x5577876d1cc8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5577876d1de8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5577876d1f08 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5577876d1fa8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5577876d1fd0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5577876d20f8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5577876d2198 <col:20>
| `-OptimizeNoneAttr 0x5577876d21f0 <col:30>
|-CXXMethodDecl 0x5577876d2298 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5577876d2338 <col:20>
| `-OptimizeNoneAttr 0x5577876d2390 <col:30>
|-AccessSpecDecl 0x5577876d23b8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5577876d23e0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5577876d24e0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5577876d2530 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577876d24c0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5577876d24a0 <col:14> 'int' 48
|-CXXMethodDecl 0x5577876d2598 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5577876d2638 <col:20>
| `-OptimizeNoneAttr 0x5577876d2690 <col:30>
|-CXXMethodDecl 0x5577876d2708 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5577876d27a8 <col:20>
| `-OptimizeNoneAttr 0x5577876d2800 <col:30>
|-CXXMethodDecl 0x5577876d28c8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5577876d2838 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5577876d2a68 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5577876d2c08 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5577876d2b18 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5577876d2cb0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5577876d2db0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5577876d3160 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d2d90 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5577876d2d70 <col:9> 'int' 0
| |-EnumConstantDecl 0x5577876d2e40 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5577876d3178 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d2e20 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5577876d2e00 <col:14> 'int' 1
| |-EnumConstantDecl 0x5577876d2ed0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5577876d3190 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d2eb0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5577876d2e90 <col:14> 'int' 2
| |-EnumConstantDecl 0x5577876d2f60 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5577876d31a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d2f40 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5577876d2f20 <col:14> 'int' 3
| |-EnumConstantDecl 0x5577876d2ff0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5577876d31c0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d2fd0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5577876d2fb0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5577876d3080 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5577876d31d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d3060 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5577876d3040 <col:13> 'int' 5
| `-EnumConstantDecl 0x5577876d3110 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5577876d31f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577876d30f0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5577876d30d0 <col:14> 'int' 6
|-CXXMethodDecl 0x5577876d3258 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5577876d32f8 <col:20>
| `-OptimizeNoneAttr 0x5577876d3350 <col:30>
|-CXXMethodDecl 0x5577876d3448 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5577876d3388 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5577876d34f0 <col:20>
| `-OptimizeNoneAttr 0x5577876d3548 <col:30>
|-CXXMethodDecl 0x5577876d35b8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5577876d36e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5577876d3858 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5577876d3790 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5577876d3920 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5577876d39e8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5577876d3b28 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5577876d3a98 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5577876d3bd0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5577876d3cd0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5577876d3ed0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d3cb0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5577876d3c90 <col:23> 'int' 0
| |-EnumConstantDecl 0x5577876d3d60 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5577876d3ee8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d3d40 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5577876d3d20 <col:45> 'int' 4
| |-EnumConstantDecl 0x5577876d3df0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5577876d3f00 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d3dd0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5577876d3db0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5577876d3e80 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5577876d3f18 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577876d3e60 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5577876d3e40 <col:47> 'int' 16
|-CXXMethodDecl 0x5577876d3f78 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5577876d40e8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5577876d4028 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5577876d4190 <col:20>
| `-OptimizeNoneAttr 0x5577876d41e8 <col:30>
|-CXXMethodDecl 0x5577876d4238 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5577876e7bc0 <col:18, col:36>
|   `-ReturnStmt 0x5577876e7bb0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5577876e7b98 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5577876e7b78 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5577876e7b48 <col:27> '<bound member function type>' ->xanno 0x5577876d2298
|           `-CXXThisExpr 0x5577876e7b38 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5577876d4330 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5577876e7cd0 <col:30, col:48>
|   `-ReturnStmt 0x5577876e7cc0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5577876e7ca8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5577876e7c88 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5577876e7c58 <col:39> '<bound member function type>' ->xanno 0x5577876d20f8
|           `-CXXThisExpr 0x5577876e7c48 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5577876d4418 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5577876e7e68 <col:24, col:50>
|   `-ReturnStmt 0x5577876e7e58 <col:26, col:47>
|     `-UnaryOperator 0x5577876e7e40 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5577876e7e20 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5577876e7e08 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5577876e7db8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5577876dd0d8
|         |   `-CXXMemberCallExpr 0x5577876e7d98 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5577876e7d68 <col:34> '<bound member function type>' ->xanno 0x5577876d2298
|         |       `-CXXThisExpr 0x5577876e7d58 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5577876e7de8 <col:46> 'int' 0
|-CXXMethodDecl 0x5577876d4520 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5577876e8038 <col:36, col:62>
|   `-ReturnStmt 0x5577876e8028 <col:38, col:59>
|     `-UnaryOperator 0x5577876e8010 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5577876e7ff0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5577876e7fd8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5577876e7f50 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5577876dd0d8
|         |   `-CXXMemberCallExpr 0x5577876e7f30 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5577876e7f00 <col:46> '<bound member function type>' ->xanno 0x5577876d20f8
|         |       `-CXXThisExpr 0x5577876e7ef0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5577876e7f80 <col:58> 'int' 0
|-CXXMethodDecl 0x5577876d4638 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5577876e81d0 <col:26, col:53>
|   `-ReturnStmt 0x5577876e81c0 <col:28, col:50>
|     `-UnaryOperator 0x5577876e81a8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5577876e8188 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5577876e8170 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5577876e8120 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5577876dd3d8
|         |   `-CXXMemberCallExpr 0x5577876e8100 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5577876e80d0 <col:36> '<bound member function type>' ->xanno 0x5577876d2298
|         |       `-CXXThisExpr 0x5577876e80c0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5577876e8150 <col:49> 'int' 0
|-CXXMethodDecl 0x5577876d4758 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5577876e83a8 <col:38, col:65>
|   `-ReturnStmt 0x5577876e8398 <col:40, col:62>
|     `-UnaryOperator 0x5577876e8380 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5577876e8360 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5577876e8348 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5577876e82b8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5577876dd3d8
|         |   `-CXXMemberCallExpr 0x5577876e8298 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5577876e8268 <col:48> '<bound member function type>' ->xanno 0x5577876d20f8
|         |       `-CXXThisExpr 0x5577876e8258 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5577876e82e8 <col:61> 'int' 0
|-CXXMethodDecl 0x5577876d4908 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5577876d4810 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5577876e8a78 <col:34, line:463:5>
|   |-ParenExpr 0x5577876e88c0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5577876e8890 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5577876e84f8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876e84c8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876e8418 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876e8400 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876e83c0 <col:23> 'int' lvalue ParmVar 0x5577876d4810 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876e83e0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876e84a8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876e8478 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876e8438 <col:33> 'int' lvalue ParmVar 0x5577876d4810 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5577876e8490 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5577876e8458 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5577876e8558 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876e8538 <col:56> 'int' 0
|   |   `-CallExpr 0x5577876e87f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5577876e87d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876e87b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876e8830 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e8648 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5577876e8848 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e8678 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876e8860 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876e86b0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5577876e8878 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876e87a0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876e8788 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876e8748 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5577876e8a68 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5577876e8a50 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5577876e8a30 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5577876e8a00 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5577876e89b0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5577876dd0d8
|         |   `-CXXMemberCallExpr 0x5577876e8990 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5577876e8960 <col:9> '<bound member function type>' ->xanno 0x5577876d20f8
|         |       `-CXXThisExpr 0x5577876e8950 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5577876e8a18 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5577876e89e0 <col:21> 'int' lvalue ParmVar 0x5577876d4810 'i' 'int'
|-CXXMethodDecl 0x5577876d4b58 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5577876d49c8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5577876d4a40 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5577876e9108 <col:40, line:472:5>
|   |-ParenExpr 0x5577876e8f20 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5577876e8ef0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5577876e8bd0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876e8ba0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876e8af0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876e8ad8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876e8a98 <col:23> 'int' lvalue ParmVar 0x5577876d49c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876e8ab8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876e8b80 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876e8b50 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876e8b10 <col:33> 'int' lvalue ParmVar 0x5577876d49c8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5577876e8b68 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5577876e8b30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5577876e8c30 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876e8c10 <col:56> 'int' 0
|   |   `-CallExpr 0x5577876e8e50 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5577876e8e38 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876e8e18 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876e8e90 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e8ca0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5577876e8ea8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e8cd0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876e8ec0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876e8d08 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5577876e8ed8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876e8e00 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876e8de8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876e8da8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5577876e90e8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5577876e9090 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5577876e9060 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5577876e9010 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5577876dd0d8
|     | |   `-CXXMemberCallExpr 0x5577876e8ff0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5577876e8fc0 <col:2> '<bound member function type>' ->xanno 0x5577876d2298
|     | |       `-CXXThisExpr 0x5577876e8fb0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5577876e9078 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5577876e9040 <col:14> 'int' lvalue ParmVar 0x5577876d49c8 'i' 'int'
|     `-ImplicitCastExpr 0x5577876e90d0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5577876e90b0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5577876d4a40 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5577876d4d18 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5577876d4c20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5577876e9888 <col:36, line:485:5>
|   |-ParenExpr 0x5577876e95f0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876e95c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876e92a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876e9270 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876e9180 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876e9168 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876e9128 <col:23> 'int' lvalue ParmVar 0x5577876d4c20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876e9148 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876e9250 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876e9238 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876e91a0 <col:33> 'int' lvalue ParmVar 0x5577876d4c20 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876e9218 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876e9200 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876e91c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876e91e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5577876e9300 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876e92e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876e9520 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876e9508 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876e94e8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876e9560 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e9370 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5577876e9578 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e93a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876e9590 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876e93e0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5577876e95a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876e94d0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876e94b8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876e9478 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5577876e9878 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5577876e9860 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5577876e9848 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5577876e9818 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5577876e97b8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5577876e9788 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5577876e9700 <col:61, col:70> 'char const[48]' lvalue ->c 0x5577876dcfb0
|             |   `-CXXMemberCallExpr 0x5577876e96e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5577876e96b0 <col:61> '<bound member function type>' ->xanno 0x5577876d20f8
|             |       `-CXXThisExpr 0x5577876e96a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5577876e97a0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5577876e9730 <col:74> 'int' lvalue ParmVar 0x5577876d4c20 'i' 'int'
|-CXXMethodDecl 0x5577876d4f68 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5577876d4dd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5577876d4e50 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5577876e9fd8 <col:42, line:500:5>
|   |-ParenExpr 0x5577876e9d70 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876e9d40 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876e9a20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876e99f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876e9900 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876e98e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876e98a8 <col:23> 'int' lvalue ParmVar 0x5577876d4dd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876e98c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876e99d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876e99b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876e9920 <col:33> 'int' lvalue ParmVar 0x5577876d4dd8 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876e9998 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876e9980 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876e9940 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876e9960 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5577876e9a80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876e9a60 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876e9ca0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876e9c88 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876e9c68 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876e9ce0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e9af0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5577876e9cf8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876e9b28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876e9d10 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876e9b60 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5577876e9d28 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876e9c50 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876e9c38 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876e9bf8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5577876e9fb8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5577876e9f68 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5577876e9f38 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5577876e9ee0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5577876e9eb0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5577876e9e60 <col:48, col:57> 'char [48]' lvalue ->c 0x5577876dcfb0
|     |     |   `-CXXMemberCallExpr 0x5577876e9e40 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5577876e9e10 <col:48> '<bound member function type>' ->xanno 0x5577876d2298
|     |     |       `-CXXThisExpr 0x5577876e9e00 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5577876e9ec8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5577876e9e90 <col:61> 'int' lvalue ParmVar 0x5577876d4dd8 'i' 'int'
|     `-ImplicitCastExpr 0x5577876e9fa0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5577876e9f80 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5577876d4e50 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5577876d5128 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5577876d5030 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5577876ea738 <col:35, line:513:5>
|   |-ParenExpr 0x5577876ea448 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876ea418 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876ea170 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876ea140 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876ea050 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876ea038 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876e9ff8 <col:23> 'int' lvalue ParmVar 0x5577876d5030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876ea018 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876ea120 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876ea108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876ea070 <col:33> 'int' lvalue ParmVar 0x5577876d5030 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876ea0e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876ea0d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876ea090 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876ea0b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5577876ea1d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876ea1b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876ea378 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876ea360 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876ea340 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876ea3b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ea240 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5577876ea3d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ea278 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876ea3e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876ea2b0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5577876ea400 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876ea328 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876ea310 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876ea2d0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5577876ea728 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5577876ea710 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5577876ea6f8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5577876ea6c8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5577876ea640 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5577876ea610 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5577876ea5c0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5577876dcfb0
|             |   `-CXXMemberCallExpr 0x5577876ea5a0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5577876ea570 <col:60> '<bound member function type>' ->xanno 0x5577876d20f8
|             |       `-CXXThisExpr 0x5577876ea560 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5577876ea628 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5577876ea5f0 <col:73> 'int' lvalue ParmVar 0x5577876d5030 'i' 'int'
|-CXXMethodDecl 0x5577876d5378 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5577876d51e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5577876d5260 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5577876eae58 <col:41, line:528:5>
|   |-ParenExpr 0x5577876eabe0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876eabb0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876ea8d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876ea8a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876ea7b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876ea798 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876ea758 <col:23> 'int' lvalue ParmVar 0x5577876d51e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876ea778 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876ea880 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876ea868 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876ea7d0 <col:33> 'int' lvalue ParmVar 0x5577876d51e8 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876ea848 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876ea830 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876ea7f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876ea810 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5577876ea930 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876ea910 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876eab10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876eaaf8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876eaad8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876eab50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ea9a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5577876eab68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ea9d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876eab80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876eaa10 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5577876eab98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876eaac0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876eaaa8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876eaa68 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5577876eae38 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5577876eade8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5577876eadb8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5577876ead60 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5577876ead20 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5577876eacd0 <col:47, col:56> 'char [48]' lvalue ->c 0x5577876dcfb0
|     |     |   `-CXXMemberCallExpr 0x5577876eacb0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5577876eac80 <col:47> '<bound member function type>' ->xanno 0x5577876d2298
|     |     |       `-CXXThisExpr 0x5577876eac70 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5577876ead38 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5577876ead00 <col:60> 'int' lvalue ParmVar 0x5577876d51e8 'i' 'int'
|     `-ImplicitCastExpr 0x5577876eae20 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5577876eae00 <col:65> 'int16_t':'short' lvalue ParmVar 0x5577876d5260 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5577876d5538 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5577876d5440 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5577876eb528 <col:36, line:541:5>
|   |-ParenExpr 0x5577876eb2c8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876eb298 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876eaff0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876eafc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876eaed0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876eaeb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876eae78 <col:23> 'int' lvalue ParmVar 0x5577876d5440 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876eae98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876eafa0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876eaf88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876eaef0 <col:33> 'int' lvalue ParmVar 0x5577876d5440 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876eaf68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876eaf50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876eaf10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876eaf30 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5577876eb050 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876eb030 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876eb1f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876eb1e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876eb1c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876eb238 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876eb0c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5577876eb250 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876eb0f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876eb268 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876eb130 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5577876eb280 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876eb1a8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876eb190 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876eb150 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5577876eb518 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5577876eb500 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5577876eb4e8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5577876eb4b8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5577876eb460 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5577876eb430 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5577876eb3e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5577876dcfb0
|             |   `-CXXMemberCallExpr 0x5577876eb3c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5577876eb390 <col:61> '<bound member function type>' ->xanno 0x5577876d20f8
|             |       `-CXXThisExpr 0x5577876eb380 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5577876eb448 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5577876eb410 <col:74> 'int' lvalue ParmVar 0x5577876d5440 'i' 'int'
|-CXXMethodDecl 0x5577876d5708 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5577876d55f8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5577876d5670 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5577876d57b8 <col:20>
| `-OptimizeNoneAttr 0x5577876d5810 <col:30>
|-CXXMethodDecl 0x5577876d5948 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5577876d5850 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5577876ebbf8 <col:35, line:562:5>
|   |-ParenExpr 0x5577876eb998 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876eb968 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876eb6c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876eb690 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876eb5a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876eb588 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876eb548 <col:23> 'int' lvalue ParmVar 0x5577876d5850 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876eb568 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876eb670 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876eb658 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876eb5c0 <col:33> 'int' lvalue ParmVar 0x5577876d5850 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876eb638 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876eb620 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876eb5e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876eb600 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5577876eb720 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876eb700 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876eb8c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876eb8b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876eb890 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876eb908 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876eb790 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5577876eb920 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876eb7c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876eb938 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876eb800 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5577876eb950 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876eb878 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876eb860 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876eb820 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5577876ebbe8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5577876ebbd0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5577876ebbb8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5577876ebb88 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5577876ebb30 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5577876ebb00 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5577876ebab0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5577876dcfb0
|             |   `-CXXMemberCallExpr 0x5577876eba90 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5577876eba60 <col:60> '<bound member function type>' ->xanno 0x5577876d20f8
|             |       `-CXXThisExpr 0x5577876eba50 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5577876ebb18 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5577876ebae0 <col:73> 'int' lvalue ParmVar 0x5577876d5850 'i' 'int'
|-CXXMethodDecl 0x5577876d5b58 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5577876d5a08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5577876d5a80 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5577876ec2d8 <col:41, line:577:5>
|   |-ParenExpr 0x5577876ec068 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876ec038 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876ebd90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876ebd60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876ebc70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876ebc58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876ebc18 <col:23> 'int' lvalue ParmVar 0x5577876d5a08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876ebc38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876ebd40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876ebd28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876ebc90 <col:33> 'int' lvalue ParmVar 0x5577876d5a08 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876ebd08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876ebcf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876ebcb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876ebcd0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5577876ebdf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876ebdd0 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876ebf98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876ebf80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876ebf60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876ebfd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ebe60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5577876ebff0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ebe98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876ec008 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876ebed0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5577876ec020 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876ebf48 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876ebf30 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876ebef0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5577876ec2b8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5577876ec268 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5577876ec238 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5577876ec1d8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5577876ec1a8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5577876ec158 <col:47, col:56> 'char [48]' lvalue ->c 0x5577876dcfb0
|     |     |   `-CXXMemberCallExpr 0x5577876ec138 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5577876ec108 <col:47> '<bound member function type>' ->xanno 0x5577876d2298
|     |     |       `-CXXThisExpr 0x5577876ec0f8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5577876ec1c0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5577876ec188 <col:60> 'int' lvalue ParmVar 0x5577876d5a08 'i' 'int'
|     `-ImplicitCastExpr 0x5577876ec2a0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5577876ec280 <col:65> 'int32_t':'int' lvalue ParmVar 0x5577876d5a80 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5577876d5d18 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5577876d5c20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5577876eca08 <col:36, line:591:5>
|   |-ParenExpr 0x5577876ec748 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876ec718 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876ec470 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876ec440 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876ec350 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876ec338 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876ec2f8 <col:23> 'int' lvalue ParmVar 0x5577876d5c20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876ec318 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876ec420 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876ec408 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876ec370 <col:33> 'int' lvalue ParmVar 0x5577876d5c20 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876ec3e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876ec3d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876ec390 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876ec3b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5577876ec4d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876ec4b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876ec678 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876ec660 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876ec640 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876ec6b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ec540 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5577876ec6d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ec578 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876ec6e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876ec5b0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5577876ec700 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876ec628 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876ec610 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876ec5d0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5577876ec9f8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5577876ec9e0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5577876ec9c8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5577876ec998 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5577876ec910 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5577876ec8e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5577876ec890 <col:61, col:70> 'char const[48]' lvalue ->c 0x5577876dcfb0
|             |   `-CXXMemberCallExpr 0x5577876ec870 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5577876ec840 <col:61> '<bound member function type>' ->xanno 0x5577876d20f8
|             |       `-CXXThisExpr 0x5577876ec830 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5577876ec8f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5577876ec8c0 <col:74> 'int' lvalue ParmVar 0x5577876d5c20 'i' 'int'
|-CXXMethodDecl 0x5577876d5f68 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5577876d5dd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5577876d5e50 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5577876ed0e8 <col:42, line:606:5>
|   |-ParenExpr 0x5577876ece78 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5577876ece48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5577876ecba0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876ecb70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876eca80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876eca68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876eca28 <col:23> 'int' lvalue ParmVar 0x5577876d5dd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876eca48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876ecb50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5577876ecb38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876ecaa0 <col:33> 'int' lvalue ParmVar 0x5577876d5dd8 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876ecb18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876ecb00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876ecac0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5577876ecae0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5577876ecc00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876ecbe0 <col:60> 'int' 0
|   |   `-CallExpr 0x5577876ecda8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5577876ecd90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876ecd70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876ecde8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ecc70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5577876ece00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ecca8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876ece18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876ecce0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5577876ece30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876ecd58 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876ecd40 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876ecd00 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5577876ed0c8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5577876ed078 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5577876ed048 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5577876ecfe8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5577876ecfb8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5577876ecf68 <col:48, col:57> 'char [48]' lvalue ->c 0x5577876dcfb0
|     |     |   `-CXXMemberCallExpr 0x5577876ecf48 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5577876ecf18 <col:48> '<bound member function type>' ->xanno 0x5577876d2298
|     |     |       `-CXXThisExpr 0x5577876ecf08 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5577876ecfd0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5577876ecf98 <col:61> 'int' lvalue ParmVar 0x5577876d5dd8 'i' 'int'
|     `-ImplicitCastExpr 0x5577876ed0b0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5577876ed090 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5577876d5e50 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5577876d6100 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5577876d6030 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5577876ed958 <col:33, line:620:5>
|   |-ParenExpr 0x5577876ed6d0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5577876ed6a0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5577876ed2f0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876ed2c0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876ed160 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876ed148 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876ed108 <col:23> 'int' lvalue ParmVar 0x5577876d6030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876ed128 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876ed2a0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5577876ed288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876ed180 <col:33> 'int' lvalue ParmVar 0x5577876d6030 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876ed268 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876ed250 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876ed1a0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5577876ed228 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5577876ed210 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5577876ed1d8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5577876ed350 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876ed330 <col:79> 'int' 0
|   |   `-CallExpr 0x5577876ed600 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5577876ed5e8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876ed5c8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876ed640 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ed438 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5577876ed658 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876ed480 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876ed670 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876ed4b8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5577876ed688 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876ed5b0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876ed598 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876ed558 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5577876ed948 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5577876ed930 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5577876ed918 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5577876ed8e8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5577876ed860 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5577876ed830 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5577876ed7e0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5577876dcfb0
|             |   `-CXXMemberCallExpr 0x5577876ed7c0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5577876ed790 <col:67> '<bound member function type>' ->xanno 0x5577876d20f8
|             |       `-CXXThisExpr 0x5577876ed780 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5577876ed848 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5577876ed810 <col:80> 'int' lvalue ParmVar 0x5577876d6030 'i' 'int'
|-CXXMethodDecl 0x5577876d6318 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5577876d61c0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5577876d6240 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5577876ee180 <col:45, line:635:5>
|   |-ParenExpr 0x5577876edec8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5577876ede98 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5577876edb60 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5577876edb30 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5577876ed9d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5577876ed9b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5577876ed978 <col:23> 'int' lvalue ParmVar 0x5577876d61c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5577876ed998 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5577876edb10 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5577876edaf8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5577876ed9f0 <col:33> 'int' lvalue ParmVar 0x5577876d61c0 'i' 'int'
|   |   |     `-BinaryOperator 0x5577876edad8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5577876edac0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5577876eda10 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5577876d24e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5577876eda98 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5577876eda80 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5577876eda48 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5577876edbc0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5577876edba0 <col:79> 'int' 0
|   |   `-CallExpr 0x5577876eddf8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5577876edde0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876eddc0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5577876ede38 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876edc30 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5577876ede50 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5577876edc78 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5577876ede68 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5577876edcb0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5577876ede80 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5577876edda8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5577876edd90 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5577876edd48 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5577876ee160 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5577876ee0c8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5577876ee098 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5577876ee038 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5577876ee008 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5577876edfb8 <col:54, col:63> 'char [48]' lvalue ->c 0x5577876dcfb0
|     |     |   `-CXXMemberCallExpr 0x5577876edf98 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5577876edf68 <col:54> '<bound member function type>' ->xanno 0x5577876d2298
|     |     |       `-CXXThisExpr 0x5577876edf58 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5577876ee020 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5577876edfe8 <col:67> 'int' lvalue ParmVar 0x5577876d61c0 'i' 'int'
|     `-CXXConstCastExpr 0x5577876ee130 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5577876ee118 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5577876ee0e0 <col:91> 'const void *' lvalue ParmVar 0x5577876d6240 'x' 'const void *'
|-CXXMethodDecl 0x5577876d63e8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5577876ee208 <col:34, line:640:5>
|   `-ReturnStmt 0x5577876ee1f8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5577876ee1e0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5577876ee1b0 <col:16> 'Packet *' lvalue ->_data_packet 0x5577876ddb68
|         `-CXXThisExpr 0x5577876ee1a0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5577876d6528 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5577876d6498 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5577876e72c8 <col:46> 'bool' true
|-CXXMethodDecl 0x5577876d66a8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5577876d65e0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5577876d6750 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5577876d6f00 <line:660:22> "" ""
| |-EnumConstantDecl 0x5577876d6850 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d6f70 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d6830 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5577876d6810 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5577876cb9b0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5577876d68e0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d6f88 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d68c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5577876d68a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5577876cba40 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5577876d6970 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d6fa0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d6950 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5577876d6930 <col:21> 'int' 0
| |-EnumConstantDecl 0x5577876d6a00 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d6fb8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d69e0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5577876d69c0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5577876d6a90 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d6fd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d6a70 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5577876d6a50 <col:21> 'int' 16
| |-EnumConstantDecl 0x5577876d6b20 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d6fe8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d6b00 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5577876d6ae0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5577876d6bb0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d7000 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d6b90 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5577876d6b70 <col:19> 'int' EnumConstant 0x5577876d6a00 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5577876d6c40 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d7018 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d6c20 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5577876d6c00 <col:19> 'int' EnumConstant 0x5577876d6b20 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5577876d6d10 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d7030 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d6cf0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5577876d6cd0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5577876d6c90 <col:23> 'int' EnumConstant 0x5577876d6c40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5577876d6cb0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5577876d6de0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5577876d7048 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876d6dc0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5577876d6da0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5577876d6d60 <col:23> 'int' EnumConstant 0x5577876d6c40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5577876d6d80 <col:40> 'int' 4
| `-EnumConstantDecl 0x5577876d6eb0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5577876d7060 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577876d6e90 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5577876d6e70 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5577876d6e30 <col:23> 'int' EnumConstant 0x5577876d6c40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5577876d6e50 <col:40> 'int' 8
|-CXXMethodDecl 0x5577876d70a0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5577876d7140 <col:68> "" ""
|-CXXMethodDecl 0x5577876d71d8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5577876d7278 <col:45> "" ""
|-CXXMethodDecl 0x5577876d7310 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5577876d73b0 <col:57> "" ""
|-CXXMethodDecl 0x5577876d7448 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5577876d74e8 <col:45> "" ""
|-CXXMethodDecl 0x5577876d7580 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5577876d7620 <col:57> "" ""
|-CXXMethodDecl 0x5577876d76b0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5577876d7750 <col:51> "" ""
|-CXXMethodDecl 0x5577876d77e0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5577876d7880 <col:63> "" ""
|-CXXMethodDecl 0x5577876d7910 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5577876d79b0 <col:53> "" ""
|-CXXMethodDecl 0x5577876d7a40 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5577876d7ae0 <col:65> "" ""
|-CXXMethodDecl 0x5577876d7bf8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5577876d7b68 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5577876d7ca0 <col:61> "" ""
|-CXXMethodDecl 0x5577876d7e38 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5577876d7d28 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5577876d7da0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5577876d7ee8 <col:67> "" ""
|-CXXMethodDecl 0x5577876d8000 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5577876d7f70 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5577876d80a8 <col:63> "" ""
|-CXXMethodDecl 0x5577876d8240 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5577876d8130 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5577876d81a8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5577876d82f0 <col:69> "" ""
|-CXXMethodDecl 0x5577876d8408 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5577876d8378 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5577876d84b0 <col:63> "" ""
|-CXXMethodDecl 0x5577876dab88 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5577876daa78 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5577876daaf0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5577876dac38 <col:69> "" ""
|-CXXMethodDecl 0x5577876dad50 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5577876dacc0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5577876dadf8 <col:62> "" ""
|-CXXMethodDecl 0x5577876daf90 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5577876dae80 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5577876daef8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5577876db040 <col:68> "" ""
|-CXXMethodDecl 0x5577876db158 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5577876db0c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5577876db200 <col:63> "" ""
|-CXXMethodDecl 0x5577876db398 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5577876db288 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5577876db300 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5577876db448 <col:69> "" ""
|-CXXMethodDecl 0x5577876db4d8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5577876db578 <col:64> "" ""
|-CXXMethodDecl 0x5577876db608 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5577876db6a8 <col:52> "" ""
|-CXXMethodDecl 0x5577876db738 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5577876db7d8 <col:67> "" ""
|-CXXMethodDecl 0x5577876db868 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5577876db908 <col:55> "" ""
|-CXXMethodDecl 0x5577876dba20 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5577876db990 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5577876dbac8 <col:58> "" ""
|-CXXMethodDecl 0x5577876dbc60 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5577876dbb50 <col:33> col:36 'int'
| |-ParmVarDecl 0x5577876dbbc8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5577876dbd10 <col:62> "" ""
|-CXXMethodDecl 0x5577876dbe28 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5577876dbd98 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5577876dbed0 <col:58> "" ""
|-CXXMethodDecl 0x5577876dc068 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5577876dbf58 <col:33> col:36 'int'
| |-ParmVarDecl 0x5577876dbfd0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5577876dc118 <col:62> "" ""
|-CXXMethodDecl 0x5577876dc230 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5577876dc1a0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5577876dc2d8 <col:60> "" ""
|-CXXMethodDecl 0x5577876dc470 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5577876dc360 <col:34> col:37 'int'
| |-ParmVarDecl 0x5577876dc3d8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5577876dc520 <col:64> "" ""
|-CXXMethodDecl 0x5577876dc638 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5577876dc5a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5577876dc6e0 <col:58> "" ""
|-CXXMethodDecl 0x5577876dc878 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5577876dc768 <col:33> col:36 'int'
| |-ParmVarDecl 0x5577876dc7e0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5577876dc928 <col:62> "" ""
|-CXXMethodDecl 0x5577876dca40 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5577876dc9b0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5577876dcae8 <col:59> "" ""
|-CXXMethodDecl 0x5577876dcc80 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5577876dcb70 <col:33> col:36 'int'
| |-ParmVarDecl 0x5577876dcbe8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5577876dcd30 <col:63> "" ""
|-AccessSpecDecl 0x5577876dcda0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5577876dcdc8 prev 0x5577876d1fd0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5577876dcec0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5577876dcfb0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5577876dd0d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5577876dd258 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5577876dd3d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5577876dd558 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5577876ee388 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5577876eebf8 <col:11>
| |-CXXDestructorDecl 0x5577876ee460 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5577876ee598 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5577876ee598
| | `-ParmVarDecl 0x5577876ee6a8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5577876ee748 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5577876ee748
| | `-ParmVarDecl 0x5577876ee858 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5577876f1618 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5577876f1728 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5577876f19a8 <col:11>
| |   `-ReturnStmt 0x5577876f1998 <col:11>
| |     `-UnaryOperator 0x5577876f1980 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5577876f1970 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5577876f1798 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5577876f1798
|   `-ParmVarDecl 0x5577876f18a8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5577876dd5c0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5577876dd6d8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5577876dd778 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5577876dd7e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5577876dd848 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5577876dd8b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5577876dd910 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5577876dd9d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5577876dda30 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5577876dda90 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5577876ee298 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5577876dd778 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5577876eec08 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5577876eec60 <col:12>
| |-CXXConstructorDecl 0x5577876ee8c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5577876ee8c8
| | `-ParmVarDecl 0x5577876ee9d8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5577876eea78 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5577876eea78
| | `-ParmVarDecl 0x5577876eeb88 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5577876f0d00 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5577876ddb08 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5577876ddb68 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5577876ddbd0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5577876ddc38 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5577876ddca0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5577876ddd08 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5577876ddd68 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5577876dddc8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5577876dde30 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5577876ddeb8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5577876ddb08 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5577876ee230 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5577876ddd68 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5577876eec70 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5577876eecd0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5577876de058 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5577876ddf98 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5577876de150 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5577876de338 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5577876de240 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5577876de608 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5577876de3f0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5577876de468 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5577876de4e0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577876de828 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5577876de6d8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5577876de750 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5577876e6e08 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5577876de8e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5577876de960 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5577876de9d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5577876e6f60 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5577876e6ed0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5577876e70a8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5577876e7018 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5577876e71a0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877e15c0 <../elements/standard/simplequeue.hh:65:1, line:114:1> line:65:7 referenced class SimpleQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-public 'Storage'
|-CXXRecordDecl 0x5577877e1758 <col:1, col:7> col:7 implicit referenced class SimpleQueue
|-AccessSpecDecl 0x5577877e17e8 <col:54, col:60> col:54 public
|-CXXConstructorDecl 0x5577877e1870 <line:67:5, col:17> col:5 SimpleQueue 'void ()'
|-CXXMethodDecl 0x5577877e1970 <line:69:5, col:40> col:9 drops 'int () const'
| `-CompoundStmt 0x5577877e51e8 <col:23, col:40>
|   `-ReturnStmt 0x5577877e51d8 <col:25, col:32>
|     `-ImplicitCastExpr 0x5577877e51c0 <col:32> 'int' <LValueToRValue>
|       `-MemberExpr 0x5577877e5190 <col:32> 'const volatile int' lvalue ->_drops 0x5577877e3e28
|         `-CXXThisExpr 0x5577877e5180 <col:32> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x5577877e1a38 <line:70:5, col:62> col:9 highwater_length 'int () const'
| `-CompoundStmt 0x5577877e5268 <col:34, col:62>
|   `-ReturnStmt 0x5577877e5258 <col:36, col:43>
|     `-ImplicitCastExpr 0x5577877e5240 <col:43> 'int' <LValueToRValue>
|       `-MemberExpr 0x5577877e5210 <col:43> 'const int' lvalue ->_highwater_length 0x5577877e3e90
|         `-CXXThisExpr 0x5577877e5200 <col:43> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x5577877e1ba8 <line:72:5, col:28> col:17 enq 'bool (Packet *)' inline
| `-ParmVarDecl 0x5577877e1ae8 <col:21, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x5577877e1cf0 <line:73:5, col:33> col:17 lifo_enq 'void (Packet *)' inline
| `-ParmVarDecl 0x5577877e1c60 <col:26, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x5577877e1db8 <line:74:5, col:24> col:20 deq 'Packet *()' inline
|-CXXMethodDecl 0x5577877e1f00 <line:77:5, col:49> col:13 packet 'Packet *(int) const'
| |-ParmVarDecl 0x5577877e1e70 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5577877e5358 <col:33, col:49>
|   `-ReturnStmt 0x5577877e5348 <col:35, col:46>
|     `-ImplicitCastExpr 0x5577877e5330 <col:42, col:46> 'Packet *' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5577877e5310 <col:42, col:46> 'Packet *volatile' lvalue
|         |-ImplicitCastExpr 0x5577877e52e0 <col:42> 'Packet *volatile *' <LValueToRValue>
|         | `-MemberExpr 0x5577877e5290 <col:42> 'Packet *volatile *const' lvalue ->_q 0x5577877e3dc0
|         |   `-CXXThisExpr 0x5577877e5280 <col:42> 'const SimpleQueue *' implicit this
|         `-ImplicitCastExpr 0x5577877e52f8 <col:45> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5577877e52c0 <col:45> 'int' lvalue ParmVar 0x5577877e1e70 'i' 'int'
|-CXXMethodDecl 0x5577877e1fc8 <line:78:5, col:16> col:10 reset 'void ()'
|-FunctionTemplateDecl 0x5577877e22a8 <line:80:5, col:52> col:40 yank1
| |-TemplateTypeParmDecl 0x5577877e2068 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x5577877e2208 <col:32, col:52> col:40 yank1 'Packet *(Filter)'
|   `-ParmVarDecl 0x5577877e2118 <col:46> col:52 'Filter'
|-FunctionTemplateDecl 0x5577877e2518 <line:81:5, col:57> col:40 yank1_peek
| |-TemplateTypeParmDecl 0x5577877e2308 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x5577877e2478 <col:32, col:57> col:40 yank1_peek 'Packet *(Filter)'
|   `-ParmVarDecl 0x5577877e23b8 <col:51> col:57 'Filter'
|-FunctionTemplateDecl 0x5577877e2a60 <line:82:5, col:67> col:36 yank
| |-TemplateTypeParmDecl 0x5577877e2578 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x5577877e29c0 <col:32, col:67> col:36 yank 'int (Filter, Vector<Packet *> &)'
|   |-ParmVarDecl 0x5577877e2628 <col:41> col:47 'Filter'
|   `-ParmVarDecl 0x5577877e28a0 <col:49, col:66> col:67 'Vector<Packet *> &'
|-CXXMethodDecl 0x5577877e2af0 <line:84:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x557787705e68 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5577877e53c0 <col:36, col:60>
|   `-ReturnStmt 0x5577877e53b0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5577877e5398 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5577877e5370 <col:45> 'const char [12]' lvalue "SimpleQueue"
|-CXXMethodDecl 0x5577877e2bb8 <line:85:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x557787705f30 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5577877e5420 <col:36, col:58>
|   `-ReturnStmt 0x5577877e5410 <col:38, col:45>
|     `-ImplicitCastExpr 0x5577877e53f8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5577877e53d8 <col:45> 'const char []' lvalue Var 0x557787706268 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x5577877e2c80 <line:86:5, col:53> col:17 processing 'const char *() const'
| |-Overrides: [ 0x5577877062f8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5577877e5500 <col:36, col:53>
|   `-ReturnStmt 0x5577877e54f0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5577877e54d8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5577877e54b8 <col:45> 'const char [5]' lvalue "h/lh"
|-CXXMethodDecl 0x5577877e2dd0 <line:87:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x557787706b20 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x5577877e2d38 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x5577877e30b0 <line:89:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557787707700 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5577877e2f60 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x5577877e2fd8 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x5577877e3208 <line:90:5, col:33> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x557787707950 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x5577877e3170 <col:20, col:32> col:33 'ErrorHandler *'
|-CXXMethodDecl 0x5577877e3350 <line:91:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x557787708168 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x5577877e32c0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x5577877e3418 <line:92:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x55778770a150 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x5577877e5538 <col:39, col:54>
|   `-ReturnStmt 0x5577877e5528 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x5577877e5518 <col:48> 'bool' true
|-CXXMethodDecl 0x5577877e36f0 <line:93:5, col:56> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55778770a420 Element::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5577877e35a0 <col:26, col:40> col:41 'Vector<String> &'
| `-ParmVarDecl 0x5577877e3618 <col:43, col:55> col:56 'ErrorHandler *'
|-CXXMethodDecl 0x5577877e38c0 <line:94:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x557787707b58 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5577877e37b0 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x5577877e3828 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x5577877e3990 <line:95:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5577877077d0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5577877e3b58 <line:97:5, col:32> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x557787704cd8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5577877e3a48 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5577877e3ac0 <col:25, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x5577877e3cb0 <line:98:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x557787704e68 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x5577877e3c20 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x5577877e3d58 <line:100:3, col:12> col:3 protected
|-FieldDecl 0x5577877e3dc0 <line:102:5, col:24> col:24 referenced _q 'Packet *volatile *'
|-FieldDecl 0x5577877e3e28 <line:103:5, col:18> col:18 referenced _drops 'volatile int'
|-FieldDecl 0x5577877e3e90 <line:104:5, col:9> col:9 referenced _highwater_length 'int'
|-FriendDecl 0x5577877e3ff8 <line:106:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x5577877e4158 <line:107:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-FriendDecl 0x5577877e42b8 <line:108:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x5577877e4418 <line:109:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-CXXMethodDecl 0x5577877e4580 <line:111:5, col:47> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5577877e4468 <col:32, col:39> col:40 'Element *'
| `-ParmVarDecl 0x5577877e44e8 <col:42, col:46> col:47 'void *'
|-CXXMethodDecl 0x5577877e4860 <line:112:5, col:75> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5577877e4640 <col:30, col:42> col:43 'const String &'
| |-ParmVarDecl 0x5577877e46b8 <col:45, col:52> col:53 'Element *'
| |-ParmVarDecl 0x5577877e4738 <col:55, col:59> col:60 'void *'
| `-ParmVarDecl 0x5577877e47b0 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXConstructorDecl 0x5577877e4948 <line:65:7> col:7 implicit SimpleQueue 'void (const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x5577877e4948
| `-ParmVarDecl 0x5577877e4a58 <col:7> col:7 'const SimpleQueue &'
|-CXXConstructorDecl 0x5577877e4af8 <col:7> col:7 implicit SimpleQueue 'void (SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x5577877e4af8
| `-ParmVarDecl 0x5577877e4c08 <col:7> col:7 'SimpleQueue &&'
|-CXXMethodDecl 0x5577877e4ca8 <col:7> col:7 implicit operator= 'SimpleQueue &(const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x5577877e4ca8
| `-ParmVarDecl 0x5577877e4db8 <col:7> col:7 'const SimpleQueue &'
|-CXXMethodDecl 0x5577877e4e28 <col:7> col:7 implicit operator= 'SimpleQueue &(SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x5577877e4e28
| `-ParmVarDecl 0x5577877e4f38 <col:7> col:7 'SimpleQueue &&'
`-CXXDestructorDecl 0x5577877e4fc0 <col:7> col:7 implicit used ~SimpleQueue 'void () noexcept' inline default
  |-Overrides: [ 0x557787704a08 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x5577877fc7f0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  NonVirtualBaseLLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierQueue
         0 |   class SimpleQueue (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class Storage (base)
       108 |       Storage::index_type _capacity
       112 |       volatile Storage::index_type _head
       116 |       volatile Storage::index_type _tail
       120 |     class Packet *volatile * _q
       128 |     volatile int _drops
       132 |     int _highwater_length
       136 |   int _sleepiness
       144 |   class ActiveNotifier _empty_note
       144 |     class Notifier (primary base)
       144 |       (Notifier vtable pointer)
       152 |       class NotifierSignal _signal
       152 |         union NotifierSignal::vmvalue _v
       152 |           class atomic_uint32_t * v1
       152 |           struct NotifierSignal::vmpair * vm
       160 |         uint32_t _mask
       168 |       enum Notifier::SearchOp _search_op
       176 |     class Task * _listener1
       184 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877bde28 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5577877bdf48 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x5577877bdfe8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x5577877be048 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x5577877c7498 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x5577877c7498

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877be0b0 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5577877be1c8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x5577877be268 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x5577877be2f8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x5577877c6030 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5577877c6468 <col:11>
|-CXXConstructorDecl 0x5577877c6138 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x5577877c6138
| `-ParmVarDecl 0x5577877c6248 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x5577877c62e8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x5577877c62e8
| `-ParmVarDecl 0x5577877c63f8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x5577877c7160 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877bbd60 prev 0x557787704400 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5577877bbe58 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x5577877bbee8 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x5577877bc018 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x5577877bbf90 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x557787704490 'NotifierSignal'
|   | `-CXXRecord 0x5577877bbd60 'NotifierSignal'
|   `-ParenType 0x5577877bbf30 'bool () const' sugar
|     `-FunctionProtoType 0x55778724adb0 'bool () const' const cdecl
|       `-BuiltinType 0x5577871a1330 'bool'
|-CXXConstructorDecl 0x5577877bc0a8 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x5577877bc2e8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x5577877bc160 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x5577877bc1d8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5577877bc498 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x5577877bc3d8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x5577877bc590 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x5577877bc6b8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5577877bc778 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5577877bc838 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5577877bc8f8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5577877bc9e8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x5577877bcb58 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5577877bccd8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x5577877bcc18 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x5577877bcda0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x5577877bce60 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x5577877bcf20 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x5577877bcfe0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x5577877bd298 <line:36:5, col:76> col:17
| `-FunctionDecl 0x5577877bd1d8 parent 0x5577871a12b8 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x5577877bd090 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x5577877bd108 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x5577877bd4b8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x5577877bd3f8 parent 0x5577871a12b8 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x5577877bd2e8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x5577877bd360 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x5577877bd5f8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x5577877bd508 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x5577877bd740 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x5577877bd6b0 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x5577877bda08 <line:41:5, col:78> col:27
| `-FunctionDecl 0x5577877bd948 parent 0x5577871a12b8 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x5577877bd7f8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x5577877bd870 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x5577877bdb18 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x5577877bda58 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x5577877bdc98 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x5577877bdbd0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x5577877bdd60 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x5577877bde00 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x5577877bde28 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5577877bdf48 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x5577877bdfe8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x5577877be048 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x5577877c7498 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x5577877c7498
|-CXXRecordDecl 0x5577877be0b0 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5577877be1c8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x5577877be268 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x5577877be2f8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x5577877c6030 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5577877c6468 <col:11>
| |-CXXConstructorDecl 0x5577877c6138 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x5577877c6138
| | `-ParmVarDecl 0x5577877c6248 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x5577877c62e8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x5577877c62e8
| | `-ParmVarDecl 0x5577877c63f8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x5577877c7160 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x5577877be370 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x5577877be3d0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x5577877be420 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x5577877be520 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5577877be720 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577877be500 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5577877be4e0 <col:14> 'int' 1
| |-EnumConstantDecl 0x5577877be5b0 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5577877be738 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577877be590 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x5577877be570 <col:30> 'int' 2
| |-EnumConstantDecl 0x5577877be640 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5577877be750 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577877be620 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x5577877be600 <col:52> 'int' 4
| `-EnumConstantDecl 0x5577877be6d0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x5577877be768 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577877be6b0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x5577877be690 <col:23> 'int' 8
|-VarDecl 0x5577877be790 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x5577877be898 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x5577877be808 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x5577877bea60 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x5577877be950 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x5577877be9c8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x5577877bec98 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x5577877beb48 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x5577877bebc0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877bed48 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5577877bee68 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x5577877beef8 <col:18, col:24> col:18 public
|-EnumDecl 0x5577877bef20 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x5577877bf020 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x5577877bf110 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577877bf000 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x5577877befe0 <col:35> 'int' 0
| |-EnumConstantDecl 0x5577877bf070 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x5577877bf0c0 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x5577877bf358 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x5577877bf2f0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x5577877bf290 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x5577877bf250 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x5577871a1310 'void'
|       |-PointerType 0x5577871a1b10 'void *'
|       | `-BuiltinType 0x5577871a1310 'void'
|       `-PointerType 0x5577877bf1b0 'Notifier *'
|         `-RecordType 0x5577877bede0 'Notifier'
|           `-CXXRecord 0x5577877bed48 'Notifier'
|-CXXConstructorDecl 0x5577877bf498 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x5577877bf3c0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x5577877c4238 <col:35> 'Notifier::SearchOp' EnumConstant 0x5577877bf020 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x5577877bf6a8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x5577877bf558 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x5577877bf5d0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x5577877c4258 <col:65> 'Notifier::SearchOp' EnumConstant 0x5577877bf020 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x5577877bf7a8 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x5577877bf8d8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x5577877c4318 <col:37, line:85:5>
|   `-ReturnStmt 0x5577877c4308 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x5577877c42e8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x5577877c42b8 <col:9, col:17> '<bound member function type>' .initialized 0x5577877bcfe0
|         `-MemberExpr 0x5577877c4288 <col:9> 'const NotifierSignal' lvalue ->_signal 0x5577877c3c58
|           `-CXXThisExpr 0x5577877c4278 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x5577877bfae0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x5577877bf990 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x5577877bfa08 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x5577877bfbd8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x5577877bfcc8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x5577877bfd88 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5577877bfec8 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x5577877bfe38 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x5577877bff90 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x5577877c0e60 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x5577877c10d0 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x5577877c0f30 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5577877c0fb0 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x5577877c1328 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x5577877c1190 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5577877c1210 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x5577877c14b0 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x5577877c13e8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x5577877c15f8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x5577877c1568 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x5577877c1780 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x5577877c16b0 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x5577877c18f8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x5577877c1838 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x5577877c19c0 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x5577877c1a48 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x5577877c1c18 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x5577877c1ac0 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x5577877c1b40 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x5577877c1eb8 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x5577877c1cd8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5577877c1d58 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x5577877c1dd0 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x5577877c2158 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x5577877c1f80 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5577877c2000 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x5577877c2078 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x5577877c24d8 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x5577877c2220 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x5577877c22a0 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x5577877c2318 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5577877c2398 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x5577877c26c0 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x5577877c25a8 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x5577877c2628 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x5577877c2918 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x5577877c2780 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5577877c2800 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x5577877c2878 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x5577877c2b78 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x5577877c29e0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5577877c2a60 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x5577877c2ad8 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x5577877c2e60 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x5577877c2c40 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x5577877c2cc0 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x5577877c2d38 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5577877c2db8 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x5577877c3118 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x5577877c2f30 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5577877c2fb0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x5577877c3030 <col:78> col:81 'int'
| `-DeprecatedAttr 0x5577877c31d0 <col:98> "" ""
|-CXXMethodDecl 0x5577877c34b8 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x5577877c3250 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5577877c32d0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x5577877c3350 <col:78> col:81 'int'
| |-ParmVarDecl 0x5577877c33c8 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x5577877c3578 <col:110> "" ""
|-CXXMethodDecl 0x5577877c3798 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x5577877c35f8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5577877c3678 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x5577877c36f8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x5577877c3850 <col:99> "" ""
|-CXXMethodDecl 0x5577877c3af0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x5577877c38d0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5577877c3950 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x5577877c39d0 <col:79> col:82 'int'
| |-ParmVarDecl 0x5577877c3a48 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x5577877c3bb0 <col:111> "" ""
|-AccessSpecDecl 0x5577877c3c20 <line:123:3, col:10> col:3 private
|-FieldDecl 0x5577877c3c58 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x5577877c3cb8 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x5577877c3e30 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x5577877c3d20 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x5577877c3d98 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x5577877c3f08 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x5577877c3f08
| `-ParmVarDecl 0x5577877c4018 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x5577877c40b8 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x5577877c40b8
  `-ParmVarDecl 0x5577877c41c8 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787722050 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557787722168 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x557787722238 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x557787722298 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x557787722300 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x557787722388 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x5577877225f0 <col:16, line:46:5>
|   |-BinaryOperator 0x557787722538 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x557787722458 <col:9> 'TaskLink *' lvalue ->_prev 0x557787722238
|   | | `-CXXThisExpr 0x557787722448 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x557787722520 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x557787722500 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x557787722498 <col:17> 'TaskLink *' lvalue ->_next 0x557787722298
|   |     | `-CXXThisExpr 0x557787722488 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x5577877224e8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x5577877224c8 <col:25> 'int' 0
|   `-BinaryOperator 0x5577877225d0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x557787722568 <col:9> 'unsigned int' lvalue ->_pass 0x557787722300
|     | `-CXXThisExpr 0x557787722558 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x5577877225b8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x557787722598 <col:17> 'int' 0
|-CXXConstructorDecl 0x5577877aeb28 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5577877aeb28
| `-ParmVarDecl 0x5577877aec38 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x5577877aecd8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x5577877aecd8
| `-ParmVarDecl 0x5577877aede8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x5577877aefd8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x5577877aefd8
|-CXXMethodDecl 0x5577877af7d8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x5577877af7d8
| `-ParmVarDecl 0x5577877af8e8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5577877af958 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5577877af958
  `-ParmVarDecl 0x5577877afa68 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787685718 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x557787685848 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x5577876858a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x557787685908 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5577877b5ce8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x5577877b5dc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5577877b5dc0
|-CXXConstructorDecl 0x5577877b6078 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5577877b6078
| `-ParmVarDecl 0x5577877b6188 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x5577877b6228 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5577877b6228
  `-ParmVarDecl 0x5577877b6338 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787685568 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x557787685688 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x557787685718 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x557787685848 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x5577876858a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x557787685908 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x5577877b5ce8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x5577877b5dc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5577877b5dc0
| |-CXXConstructorDecl 0x5577877b6078 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5577877b6078
| | `-ParmVarDecl 0x5577877b6188 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x5577877b6228 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5577877b6228
|   `-ParmVarDecl 0x5577877b6338 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x5577876859c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x557787685a28 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x5577876859c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x557787685848 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x557787685a80 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x5577876859c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5577876858a8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x557787685ad8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x5577876859c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x557787685908 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x557787685b30 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5577877b5bf8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5577877b6558 <col:11>
|-CXXConstructorDecl 0x5577877b5ec8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5577877b5ec8
| `-ParmVarDecl 0x5577877b5fd8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5577877b63d8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5577877b63d8
  `-ParmVarDecl 0x5577877b64e8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778769d060 prev 0x557787693ea0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55778769d158 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55778769d1f8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x5577876a3fc0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5577876a43a8 <col:11>
|-CXXConstructorDecl 0x5577876a40a0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5577876a4188 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5577876a4af0 <col:11>
|-CXXConstructorDecl 0x5577876a4228 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5577876a4338 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x5577876a6348 <col:11>
|-CXXDestructorDecl 0x5577876a5658 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5577873ac238 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5577873ac348 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5577873acc10 <col:11>
|   `-ReturnStmt 0x5577873acc00 <col:11>
|     `-UnaryOperator 0x5577873acbe8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5577873acbd8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x5577873ac3b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5577873ac4c8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55778773ea80 <col:11>
    `-ReturnStmt 0x55778773ea70 <col:11>
      `-UnaryOperator 0x55778773ea58 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55778773ea48 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787693058 prev 0x557787692d68 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557787693150 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x5577876931e0 <col:19, col:25> col:19 public
|-TypedefDecl 0x557787693218 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x5577872f8400 'int32_t' sugar
|   |-Typedef 0x55778720a238 'int32_t'
|   `-TypedefType 0x5577871e33f0 '__int32_t' sugar
|     |-Typedef 0x5577871e3008 '__int32_t'
|     `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x557787693280 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x5577872f85c0 'int64_t' sugar
|   |-Typedef 0x55778720a2a0 'int64_t'
|   `-TypedefType 0x5577871e3510 '__int64_t' sugar
|     |-Typedef 0x5577871e30e8 '__int64_t'
|     `-BuiltinType 0x5577871a13d0 'long'
|-EnumDecl 0x5577876932d8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x557787693450 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x557787693430 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x557787693408 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x5577876933f0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x5577876933c0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x557787693548 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x557787693528 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x557787693500 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x5577876934e8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x5577876934c0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x5577876934a0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x557787693598 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x5577876936a0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557787693bf0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787693680 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x557787693660 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x557787693730 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557787693c08 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787693710 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5577876936f0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x5577876937c0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557787693c20 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876937a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x557787693780 <col:25> 'int' 1000
| |-EnumConstantDecl 0x557787693850 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557787693c38 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787693830 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x557787693810 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x5577876938e0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557787693c50 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876938c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5577876938a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x557787693970 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557787693c68 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787693950 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x557787693930 <col:24> 'int' 1000
| |-EnumConstantDecl 0x557787693a00 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557787693c80 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5577876939e0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x5577876939c0 <col:26> 'int' EnumConstant 0x5577876936a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x557787693ad0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557787693c98 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787693ab0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x557787693a90 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x557787693a50 <col:27> 'int' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x557787693a70 <col:44> 'int' EnumConstant 0x557787693970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x557787693ba0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x557787693cb0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557787693b80 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x557787693b60 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x557787693b20 <col:27> 'int' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x557787693b40 <col:44> 'int' EnumConstant 0x557787693850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x557787693cc8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x557787693dd0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x557787693e20 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557787693db0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x557787693d90 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x557787693e48 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x5577872f8030 'uninitialized_type'
|   `-CXXRecord 0x5577872f7f98 'uninitialized_type'
|-CXXRecordDecl 0x557787693ea0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x557787693fb0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a43b8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5577876a44d8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x5577876a4490 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x5577876a4420 <col:9> '<bound member function type>' ->assign 0x557787698bf8
|     | `-CXXThisExpr 0x5577876a4410 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5577876a4450 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5577876a44c0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5577876a4470 <col:19> 'int' 0
|-CXXConstructorDecl 0x5577876941f8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x557787694070 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x5577876940e8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55778769fcf0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55778769fcd0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a44f0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5577876a4640 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x5577876a45c8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x5577876a4558 <col:9> '<bound member function type>' ->assign 0x557787698bf8
|     | `-CXXThisExpr 0x5577876a4548 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5577876a4610 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5577876a45f8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5577876a4588 <col:16> 'long' lvalue ParmVar 0x557787694070 'sec' 'long'
|     `-ImplicitCastExpr 0x5577876a4628 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5577876a45a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5577876940e8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557787694458 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5577876942c8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x557787694340 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55778769fd28 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55778769fd08 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a4658 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5577876a4790 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x5577876a4730 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x5577876a46c0 <col:9> '<bound member function type>' ->assign 0x557787698bf8
|     | `-CXXThisExpr 0x5577876a46b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5577876a4760 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5577876a46f0 <col:16> 'int' lvalue ParmVar 0x5577876942c8 'sec' 'int'
|     `-ImplicitCastExpr 0x5577876a4778 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5577876a4710 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557787694340 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5577876946b8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x557787694528 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x5577876945a0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55778769fd60 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55778769fd40 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a47a8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5577876a48f8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x5577876a4880 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x5577876a4810 <col:9> '<bound member function type>' ->assign 0x557787698bf8
|     | `-CXXThisExpr 0x5577876a4800 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5577876a48c8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5577876a48b0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5577876a4840 <col:16> 'unsigned long' lvalue ParmVar 0x557787694528 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x5577876a48e0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5577876a4860 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5577876945a0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557787695850 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x557787694788 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x557787694800 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55778769fd98 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55778769fd78 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a4910 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5577876a4a60 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x5577876a49e8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x5577876a4978 <col:9> '<bound member function type>' ->assign 0x557787698bf8
|     | `-CXXThisExpr 0x5577876a4968 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5577876a4a30 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5577876a4a18 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5577876a49a8 <col:16> 'unsigned int' lvalue ParmVar 0x557787694788 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x5577876a4a48 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5577876a49c8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557787694800 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5577876959b0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x557787695920 <col:31> col:37 'double'
|-CXXConstructorDecl 0x557787695b48 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x557787695a88 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x557787695d78 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x557787695c80 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x557787695f28 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x557787695e68 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a4b00 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x5577876a4a78 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x557787695e68 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5577876a4b60 <col:19, line:214:5>
|-CXXConstructorDecl 0x5577876960f8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x557787696038 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a4b70 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5577876a4c20 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5577876a4bf8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x5577876a4bc8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x557787696038 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x5577876962e8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x557787696260 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x557787692e00 'Timestamp'
|   | `-CXXRecord 0x557787693058 'Timestamp'
|   `-ParenType 0x557787696200 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x5577876961d0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x5577876933a0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x557787693218 'seconds_type'
|         `-TypedefType 0x5577872f8400 'int32_t' sugar
|           |-Typedef 0x55778720a238 'int32_t'
|           `-TypedefType 0x5577871e33f0 '__int32_t' sugar
|             |-Typedef 0x5577871e3008 '__int32_t'
|             `-BuiltinType 0x5577871a13b0 'int'
|-CXXConversionDecl 0x557787696428 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5577876964f8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x5577876a4d28 <col:37, line:231:5>
|   `-ReturnStmt 0x5577876a4d18 <line:227:9, col:23>
|     `-BinaryOperator 0x5577876a4cf8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x5577876a4cc8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5577876a4c78 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55778769d1f8
|       |   `-MemberExpr 0x5577876a4c48 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55778769e1a8
|       |     `-CXXThisExpr 0x5577876a4c38 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5577876a4ce0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x5577876a4ca8 <col:23> 'int' 0
|-CXXMethodDecl 0x5577876965b8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x557787696678 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x557787696738 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x5577876967f8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x5577876968b8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x557787696a28 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x557787696968 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x557787696b70 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x557787696ae0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557787696c38 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557787696cd8 <col:54> "" ""
|-CXXMethodDecl 0x557787696d68 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557787696e08 <col:54> "" ""
|-CXXMethodDecl 0x557787696e98 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557787696f38 <col:54> "" ""
|-CXXMethodDecl 0x557787697038 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x557787697108 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x557787697238 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x557787697330 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x557787697468 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5577876a4f40 <col:39, line:271:5>
|   `-ReturnStmt 0x5577876a4f30 <line:267:9, col:61>
|     `-CallExpr 0x5577876a4ed0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5577876a4eb8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5577876a4d40 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55778769e4d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5577876a4f00 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5577876a4da0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55778769d1f8
|       |   `-MemberExpr 0x5577876a4d70 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55778769e1a8
|       |     `-CXXThisExpr 0x5577876a4d60 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5577876a4f18 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5577876a4e40 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5577876a4e10 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5577876a4dd0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5577876a4e28 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5577876a4df0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557787697528 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5577876a5100 <col:39, line:279:5>
|   `-ReturnStmt 0x5577876a50f0 <line:275:9, col:61>
|     `-CallExpr 0x5577876a5090 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5577876a5078 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5577876a4f58 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55778769e4d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5577876a50c0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5577876a4fb8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55778769d1f8
|       |   `-MemberExpr 0x5577876a4f88 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55778769e1a8
|       |     `-CXXThisExpr 0x5577876a4f78 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5577876a50d8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5577876a5058 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5577876a5028 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5577876a4fe8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5577876a5040 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5577876a5008 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5577876975e8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5577876a5298 <col:39, line:287:5>
|   `-ReturnStmt 0x5577876a5288 <line:283:9, col:53>
|     `-BinaryOperator 0x5577876a5268 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x5577876a5238 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5577876a5158 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55778769d1f8
|       |   `-MemberExpr 0x5577876a5128 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55778769e1a8
|       |     `-CXXThisExpr 0x5577876a5118 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5577876a5250 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x5577876a5218 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5577876a51f8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5577876a51c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5577876a5188 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5577876936a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5577876a51e0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5577876a51a8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5577876976d8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5577876a6530 <col:40, line:293:5>
|   |-DeclStmt 0x5577876a53e0 <line:291:9, col:48>
|   | `-VarDecl 0x5577876a52c0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5577876a53c0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5577876a5368 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5577876a5338 <col:22> '<bound member function type>' ->subsec 0x557787696678
|   |     |   `-CXXThisExpr 0x5577876a5328 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5577876a53a8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5577876a5388 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693ad0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5577876a6520 <line:292:9, col:70>
|     `-ExprWithCleanups 0x5577876a6508 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5577876a64d8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5577876a64c0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5577876a64a0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5577876a6470 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5577876a6208 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5577876a61f0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5577876a53f8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5577876a52c0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5577876a6410 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5577876a63f8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5577876a63c8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5577876a6220 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5577876a6190 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5577876a6178 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5577876a6128 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557787692fa8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5577876a60c8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5577876a5428 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5577876a5418 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5577876a6110 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5577876a60f8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5577876a58e8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5577876a5450 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5577876a54e0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5577876a54b0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5577876a5470 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693ad0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5577876a54c8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5577876a5490 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5577876a52c0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5577876a6440 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5577876a61d8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5577876a61c8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x557787697798 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5577876a6a88 <col:40, line:302:5>
|   |-DeclStmt 0x5577876a6680 <line:297:9, col:48>
|   | `-VarDecl 0x5577876a6560 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5577876a6660 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5577876a6608 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5577876a65d8 <col:22> '<bound member function type>' ->subsec 0x557787696678
|   |     |   `-CXXThisExpr 0x5577876a65c8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5577876a6648 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5577876a6628 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693ba0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5577876a6a78 <line:298:9, col:70>
|     `-ExprWithCleanups 0x5577876a6a60 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5577876a6a30 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5577876a6a18 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5577876a69f8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5577876a69c8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5577876a68f0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5577876a68d8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5577876a6698 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5577876a6560 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5577876a6968 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5577876a6950 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5577876a6920 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5577876a6908 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5577876a6878 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5577876a6860 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5577876a6840 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557787692fa8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5577876a67e0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5577876a66c8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5577876a66b8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5577876a6828 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5577876a6810 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5577876a67a0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5577876a66f0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5577876a6780 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5577876a6750 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5577876a6710 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693ba0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5577876a6768 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5577876a6730 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5577876a6560 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5577876a6998 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5577876a68c0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5577876a68b0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x557787697858 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5577876a6b10 <col:40, line:306:5>
|   `-ReturnStmt 0x5577876a6b00 <line:305:9, col:17>
|     `-CXXConstructExpr 0x5577876a6ad0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x5577876a6ab8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5577876a6aa8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x5577876979f8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x557787697908 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x557787697bc8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x557787697ad0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x557787697cb8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x557787697e28 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x557787697d68 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x5577876a6c58 <col:56, line:320:5>
|   `-ReturnStmt 0x5577876a6c48 <line:319:9, col:32>
|     `-ExprWithCleanups 0x5577876a6c30 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x5577876a6c00 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5577876a6be8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5577876a6ba8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5577876a6b78 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5577876a6b38 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557787697d68 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x5577876a6b90 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5577876a6b58 <col:31> 'int' 0
|-CXXMethodDecl 0x557787698068 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x557787697ee0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557787697f58 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876a6e28 <col:72, line:326:5>
|   `-ReturnStmt 0x5577876a6e18 <line:325:9, col:51>
|     `-ExprWithCleanups 0x5577876a6e00 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5577876a6dd0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5577876a6db8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5577876a6d78 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5577876a6d60 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5577876a6c80 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557787697ee0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5577876a6d20 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5577876a6d08 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5577876a6ca0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55778769c950 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5577876a6d48 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5577876a6cc0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557787697f58 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557787698218 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x557787698128 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5577876a74f0 <col:56, line:337:5>
|   |-DeclStmt 0x5577876a7128 <line:329:9, col:51>
|   | `-VarDecl 0x5577876a6e50 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5577876a7110 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5577876a70e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5577876a70c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5577876a70b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5577876a7080 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5577876a7068 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5577876a7050 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5577876a6f40 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5577876a72e0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5577876a7190 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55778769d1f8
|   | | `-MemberExpr 0x5577876a7160 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55778769e1a8
|   | |   `-DeclRefExpr 0x5577876a7140 <col:9> 'Timestamp' lvalue Var 0x5577876a6e50 't' 'Timestamp'
|   | `-BinaryOperator 0x5577876a72c0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5577876a7290 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577876a71c0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x557787698128 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5577876a72a8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5577876a7270 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5577876a7250 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5577876a7220 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5577876a71e0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5577876a7238 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5577876a7200 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5577876a74d8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x5577876a74a8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5577876a7490 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5577876a7470 <col:16> 'Timestamp' lvalue Var 0x5577876a6e50 't' 'Timestamp'
|-CXXMethodDecl 0x5577876983e0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5577876982d0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557787698348 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876a76a8 <col:72, line:343:5>
|   `-ReturnStmt 0x5577876a7698 <line:342:9, col:51>
|     `-ExprWithCleanups 0x5577876a7680 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5577876a7650 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5577876a7638 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5577876a75f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5577876a75e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5577876a7528 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5577876982d0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5577876a75a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5577876a7588 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5577876a7548 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55778769ca98 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5577876a75c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5577876a7568 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557787698348 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557787698530 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5577876984a0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5577876a7af0 <col:56, line:354:5>
|   |-DeclStmt 0x5577876a7898 <line:346:9, col:51>
|   | `-VarDecl 0x5577876a76d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5577876a7880 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5577876a7850 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5577876a7838 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5577876a7820 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5577876a77f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5577876a77d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5577876a77c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5577876a7790 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5577876a7a50 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5577876a7900 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55778769d1f8
|   | | `-MemberExpr 0x5577876a78d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55778769e1a8
|   | |   `-DeclRefExpr 0x5577876a78b0 <col:9> 'Timestamp' lvalue Var 0x5577876a76d0 't' 'Timestamp'
|   | `-BinaryOperator 0x5577876a7a30 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5577876a7a00 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577876a7930 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5577876984a0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5577876a7a18 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5577876a79e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5577876a79c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5577876a7990 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5577876a7950 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5577876a79a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5577876a7970 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5577876a7ad8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x5577876a7aa8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5577876a7a90 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5577876a7a70 <col:16> 'Timestamp' lvalue Var 0x5577876a76d0 't' 'Timestamp'
|-CXXMethodDecl 0x5577876986f8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5577876985e8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557787698660 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876a7ca8 <col:72, line:360:5>
|   `-ReturnStmt 0x5577876a7c98 <line:359:9, col:51>
|     `-ExprWithCleanups 0x5577876a7c80 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5577876a7c50 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5577876a7c38 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5577876a7bf8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5577876a7be0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5577876a7b28 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5577876985e8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5577876a7ba0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5577876a7b88 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5577876a7b48 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55778769cbe0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5577876a7bc8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5577876a7b68 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557787698660 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557787698848 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5577876987b8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5577876b4618 <col:56, line:371:5>
|   |-DeclStmt 0x5577876a7e98 <line:363:9, col:51>
|   | `-VarDecl 0x5577876a7cd0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5577876a7e80 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5577876a7e50 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5577876a7e38 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5577876a7e20 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5577876a7df0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5577876a7dd8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5577876a7dc0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5577876a7d90 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5577876b4578 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5577876a7f00 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55778769d1f8
|   | | `-MemberExpr 0x5577876a7ed0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55778769e1a8
|   | |   `-DeclRefExpr 0x5577876a7eb0 <col:9> 'Timestamp' lvalue Var 0x5577876a7cd0 't' 'Timestamp'
|   | `-CallExpr 0x5577876b4518 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x5577876b4500 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5577876a7f30 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55778769e4d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x5577876b4548 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5577876a7f50 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x5577876987b8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5577876b4560 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x5577876b44e0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x5577876b44b0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x5577876a7f70 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5577876936a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x5577876b44c8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x5577876a7f90 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5577876b4600 <line:370:9, col:16>
|     `-CXXConstructExpr 0x5577876b45d0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5577876b45b8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5577876b4598 <col:16> 'Timestamp' lvalue Var 0x5577876a7cd0 't' 'Timestamp'
|-CXXMethodDecl 0x557787698938 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5577876b4758 <col:39, line:377:5>
|   `-ReturnStmt 0x5577876b4748 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5577876b4730 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5577876b4700 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5577876b46e8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5577876b46a8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x5577876b4650 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x5577876b4690 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5577876b4670 <col:29> 'int' 1
|-CXXMethodDecl 0x5577876989f8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5577876b4838 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5577876b47f0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x5577876b4780 <col:9> '<bound member function type>' ->assign 0x557787698bf8
|     | `-CXXThisExpr 0x5577876b4770 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5577876b47b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5577876b4820 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5577876b47d0 <col:19> 'int' 0
|-CXXMethodDecl 0x557787698bf8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557787698aa8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557787698b20 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55778769fdd0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55778769fdb0 <col:60> 'int' 0
| `-CompoundStmt 0x5577876b4a30 <col:63, line:395:5>
|   `-BinaryOperator 0x5577876b4a10 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x5577876b4890 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55778769d1f8
|     | `-MemberExpr 0x5577876b4860 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55778769e1a8
|     |   `-CXXThisExpr 0x5577876b4850 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5577876b49f0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x5577876b4980 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5577876b4920 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5577876b4908 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5577876b48f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5577876b48c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557787698aa8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x5577876b4968 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5577876b4948 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5577876b49d8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5577876b49c0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x5577876b49a0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x557787698b20 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557787698dc8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557787698cb8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557787698d30 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b4b88 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5577876b4b40 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5577876b4a58 <col:9> '<bound member function type>' ->assign 0x557787698bf8
|     | `-CXXThisExpr 0x5577876b4a48 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5577876b4b70 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5577876b4a88 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557787698cb8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5577876b4b00 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5577876b4ae8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5577876b4aa8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55778769ca98 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5577876b4b28 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5577876b4ac8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x557787698d30 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557787698f98 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557787698e88 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557787698f00 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b4ce0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x5577876b4c98 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x5577876b4bb0 <col:9> '<bound member function type>' ->assign 0x557787698bf8
|     | `-CXXThisExpr 0x5577876b4ba0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5577876b4cc8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5577876b4be0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557787698e88 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5577876b4c58 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5577876b4c40 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5577876b4c00 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55778769cbe0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5577876b4c80 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5577876b4c20 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x557787698f00 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557787699168 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557787699058 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5577876990d0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55778769fe08 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55778769fde8 <col:57> 'int' 0
| `-DeprecatedAttr 0x557787699218 <col:75> "" ""
|-CXXMethodDecl 0x5577876993a8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557787699298 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557787699310 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557787699458 <col:74> "" ""
|-CXXMethodDecl 0x5577876995e8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5577876994d8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557787699550 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557787699698 <col:74> "" ""
|-CXXMethodDecl 0x557787699728 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x5577876997c8 <col:42> "" ""
|-CXXMethodDecl 0x55778769c000 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55778769bee0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55778769bf60 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55778769c0d0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55778769c190 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55778769c230 <col:20>
| `-OptimizeNoneAttr 0x55778769c288 <col:30>
|-CXXMethodDecl 0x55778769c2d0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55778769c390 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55778769c450 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55778769c510 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55778769c5d0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55778769c690 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55778769c750 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55778769c810 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55778769c950 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55778769c8c0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b4e28 <col:58, line:512:5>
|   `-ReturnStmt 0x5577876b4e18 <line:511:9, col:53>
|     `-BinaryOperator 0x5577876b4df8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5577876b4dc8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5577876b4cf8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778769c8c0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5577876b4de0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5577876b4da8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5577876b4d88 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5577876b4d58 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5577876b4d18 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5577876b4d70 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5577876b4d38 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55778769ca98 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55778769ca08 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b4f70 <col:58, line:516:5>
|   `-ReturnStmt 0x5577876b4f60 <line:515:9, col:53>
|     `-BinaryOperator 0x5577876b4f40 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5577876b4f10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5577876b4e40 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778769ca08 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5577876b4f28 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5577876b4ef0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5577876b4ed0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5577876b4ea0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5577876b4e60 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5577876b4eb8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5577876b4e80 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55778769cbe0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55778769cb50 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b50b8 <col:58, line:520:5>
|   `-ReturnStmt 0x5577876b50a8 <line:519:9, col:53>
|     `-BinaryOperator 0x5577876b5088 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5577876b5058 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5577876b4f88 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778769cb50 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5577876b5070 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5577876b5038 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5577876b5018 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5577876b4fe8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5577876b4fa8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5577876936a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5577876b5000 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5577876b4fc8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55778769cd28 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55778769cc98 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b5200 <col:60, line:524:5>
|   `-ReturnStmt 0x5577876b51f0 <line:523:9, col:55>
|     `-BinaryOperator 0x5577876b51d0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5577876b51a0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5577876b50d0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778769cc98 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5577876b51b8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5577876b5180 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5577876b5160 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5577876b5130 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5577876b50f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5577876b5148 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5577876b5110 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55778769ce70 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55778769cde0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b5348 <col:60, line:528:5>
|   `-ReturnStmt 0x5577876b5338 <line:527:9, col:55>
|     `-BinaryOperator 0x5577876b5318 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5577876b52e8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5577876b5218 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778769cde0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5577876b5300 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5577876b52c8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5577876b52a8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5577876b5278 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5577876b5238 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5577876b5290 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5577876b5258 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55778769cfb8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55778769cf28 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b5490 <col:60, line:532:5>
|   `-ReturnStmt 0x5577876b5480 <line:531:9, col:55>
|     `-BinaryOperator 0x5577876b5460 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5577876b5430 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5577876b5360 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778769cf28 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5577876b5448 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5577876b5410 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5577876b53f0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5577876b53c0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5577876b5380 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5577876936a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5577876b53d8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5577876b53a0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557787693a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55778769d060 prev 0x557787693ea0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55778769d158 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55778769d1f8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x5577876a3fc0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5577876a43a8 <col:11>
| |-CXXConstructorDecl 0x5577876a40a0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5577876a4188 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5577876a4af0 <col:11>
| |-CXXConstructorDecl 0x5577876a4228 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5577876a4338 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x5577876a6348 <col:11>
| |-CXXDestructorDecl 0x5577876a5658 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5577873ac238 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5577873ac348 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5577873acc10 <col:11>
| |   `-ReturnStmt 0x5577873acc00 <col:11>
| |     `-UnaryOperator 0x5577873acbe8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5577873acbd8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x5577873ac3b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5577873ac4c8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55778773ea80 <col:11>
|     `-ReturnStmt 0x55778773ea70 <col:11>
|       `-UnaryOperator 0x55778773ea58 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55778773ea48 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55778769d260 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55778769d360 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55778769d560 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778769d340 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55778769d320 <col:21> 'int' 0
| |-EnumConstantDecl 0x55778769d3f0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55778769d578 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778769d3d0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55778769d3b0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55778769d480 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55778769d590 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778769d460 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55778769d440 <col:23> 'int' 2
| `-EnumConstantDecl 0x55778769d510 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55778769d5a8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778769d4f0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55778769d4d0 <col:27> 'int' 3
|-CXXMethodDecl 0x55778769d5e8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55778769d6b0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55778769d8b8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55778769d760 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55778769d7e0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55778769fe20 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55778769dac8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55778769d978 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55778769d9f0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55778769db98 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55778769dc58 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55778769ddc8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55778769dd08 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55778769de90 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55778769df50 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55778769e010 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55778769e0d0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55778769e170 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55778769e1a8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55778769e218 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x5577876b54a8 <col:27, line:684:5>
|-CXXMethodDecl 0x55778769e2d8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x5577876b54b8 <col:27, line:696:5>
|-CXXMethodDecl 0x55778769e4d8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55778769e388 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55778769e400 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b5640 <col:66, line:700:5>
|   `-ReturnStmt 0x5577876b5630 <line:699:9, col:31>
|     `-CallExpr 0x5577876b55d0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x5577876b55b8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5577876b5568 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x557787520888 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x5577876b5600 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x5577876b5528 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55778769e388 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x5577876b5618 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5577876b5548 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778769e400 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778769e848 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55778769e598 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55778769e610 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55778769e688 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55778769e700 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5577876b5990 <col:64, line:707:5>
|   |-DeclStmt 0x5577876b56d0 <line:704:9, col:24>
|   | `-VarDecl 0x5577876b5668 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5577876b58e0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x5577876b56e8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55778769e610 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5577876b58c8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x5577876b5860 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5577876b5848 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5577876b57c8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x557787525b58 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x5577876b5898 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5577876b5768 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55778769e688 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x5577876b58b0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5577876b5788 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778769e700 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x5577876b57a8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x5577876b5668 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x5577876b5970 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5577876b5900 <col:9> 'int32_t':'int' lvalue ParmVar 0x55778769e598 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5577876b5958 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5577876b5940 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5577876b5920 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x5577876b5668 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55778769eae8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55778769e918 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55778769e990 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55778769ea08 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55778769ed88 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55778769ebb0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55778769ec28 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55778769eca0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55778769ef18 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55778769ee50 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55778769f118 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55778769efd0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55778769f048 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55778769f3e8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55778769f328 parent 0x5577871a12b8 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55778769f1d8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55778769f250 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55778769f608 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55778769f548 parent 0x5577871a12b8 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55778769f438 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55778769f4b0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55778769f7d0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55778769f718 parent 0x5577871a12b8 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55778769f658 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55778769fa58 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55778769f998 parent 0x5577871a12b8 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55778769f848 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55778769f8c0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55778769fc78 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55778769fbb8 parent 0x5577871a12b8 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55778769faa8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55778769fb20 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x5577876a5500 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5577876a55e8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a6058 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5577876a6010 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55778769e1a8
| |     `-DeclRefExpr 0x5577876a5ff0 <col:7> 'const Timestamp' lvalue ParmVar 0x5577876a55e8 '' 'const Timestamp &'
| `-CompoundStmt 0x5577876a60b8 <col:7>
|-CXXConstructorDecl 0x5577876a5768 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5577876a5878 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55778769e1a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5577876a6358 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x5577876a6300 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55778769e1a8
| |     `-CXXStaticCastExpr 0x5577876a62d0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x5577876a62a0 <col:7> 'Timestamp' lvalue ParmVar 0x5577876a5878 '' 'Timestamp &&'
| `-CompoundStmt 0x5577876a63b8 <col:7>
|-CXXDestructorDecl 0x5577876a5928 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5577873ac088 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5577873ac198 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x5577873acc88 <col:7>
|   |-CXXMemberCallExpr 0x5577873acc28 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x5577873acb68 <col:7> '<bound member function type>' .operator= 0x5577873ac238
|   | | `-MemberExpr 0x5577873aca78 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55778769e1a8
|   | |   `-CXXThisExpr 0x5577873aca68 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x5577873acb38 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55778769e1a8
|   |   `-DeclRefExpr 0x5577873acb18 <col:7> 'const Timestamp' lvalue ParmVar 0x5577873ac198 '' 'const Timestamp &'
|   `-ReturnStmt 0x5577873acc78 <col:7>
|     `-UnaryOperator 0x5577873acc60 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5577873acc50 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x5577873ac538 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5577873ac648 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55778773eaf8 <col:7>
    |-CXXMemberCallExpr 0x55778773ea98 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55778773ea00 <col:7> '<bound member function type>' .operator= 0x5577873ac3b8
    | | `-MemberExpr 0x55778773e8d0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55778769e1a8
    | |   `-CXXThisExpr 0x55778773e8c0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55778773e9d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55778769e1a8
    |   `-CXXStaticCastExpr 0x55778773e9a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55778773e970 <col:7> 'Timestamp' lvalue ParmVar 0x5577873ac648 '' 'Timestamp &&'
    `-ReturnStmt 0x55778773eae8 <col:7>
      `-UnaryOperator 0x55778773ead0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55778773eac0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5577877437f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x5577877439c8 prev 0x5577877437f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x557787743a58 <col:46, col:52> col:46 public
|-TypedefDecl 0x557787743a80 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x557787749480 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x557787749430 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x557787743f30 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x557787743e30 'type'
|     `-TemplateSpecializationType 0x557787743dc0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x557787743ca0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x557787743c80 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x557787743c60 <col:24> 'unsigned long' 16
|       `-RecordType 0x557787743da0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x557787743cc0 'char_array'
|-TypedefDecl 0x557787749538 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x557787749500 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x5577877494e0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x557787749480 'type'
|     `-ElaboratedType 0x557787749430 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x557787743f30 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x557787743e30 'type'
|         `-TemplateSpecializationType 0x557787743dc0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x557787743ca0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x557787743c80 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x557787743c60 <col:24> 'unsigned long' 16
|           `-RecordType 0x557787743da0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x557787743cc0 'char_array'
|-CXXMethodDecl 0x5577877496b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x5577877495c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x5577877497a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x557787749888 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x557787749888
|-CXXMethodDecl 0x557787749b58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x557787749a60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x557787749d98 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x557787749c10 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557787749c88 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x557787749f68 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x557787749e58 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557787749ed0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55778774a0c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55778774a198 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55778774a3e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55778774a258 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55778774a2d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55778774a648 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55778774a4b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55778774a530 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55778774a808 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55778774a718 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55778774a9c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55778774a8d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55778774aa80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55778774ab30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55778774ad68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55778774abe0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55778774ac58 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55778774b008 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55778774af10 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55778774b0d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55778774b120 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55778774b170 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557787742108 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x557787742318 prev 0x557787742108 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x557787743760 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x557787743710 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x5577877436f0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x5577877435a0 'type'
|     `-SubstTemplateTypeParmType 0x5577877433c0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x557787468a10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874689b8 'T'
|       `-RecordType 0x557787742f10 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x557787742e28 'sized_array_memory'
|-FieldDecl 0x55778774b1c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55778774b210 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55778774b248 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x5577877423b0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5577874a06a8 'T'
|   `-RecordType 0x557787741310 'TimerSet::heap_element'
|     `-CXXRecord 0x557787741280 'heap_element'
|-TypedefDecl 0x55778774b308 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55778774b2d0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x5577877423b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x557787741310 'TimerSet::heap_element'
|       `-CXXRecord 0x557787741280 'heap_element'
|-TypedefDecl 0x55778774b398 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55778774b360 'const TimerSet::heap_element &'
|   `-QualType 0x5577877423b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5577877423b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x557787741310 'TimerSet::heap_element'
|         `-CXXRecord 0x557787741280 'heap_element'
|-TypedefDecl 0x55778774b428 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55778774b3f0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5577877423b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x557787741310 'TimerSet::heap_element'
|       `-CXXRecord 0x557787741280 'heap_element'
|-TypedefDecl 0x55778774b4e8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55778774b4b0 'const TimerSet::heap_element *'
|   `-QualType 0x5577877423b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5577877423b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x557787741310 'TimerSet::heap_element'
|         `-CXXRecord 0x557787741280 'heap_element'
|-TypedefDecl 0x55778774c350 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55778774c300 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55778774c2e0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55778774c218 'type'
|     `-LValueReferenceType 0x55778774c1e0 'const TimerSet::heap_element &'
|       `-QualType 0x55778774bf81 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55778774bf80 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x5577874730e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x557787473088 'T'
|           `-RecordType 0x557787741310 'TimerSet::heap_element'
|             `-CXXRecord 0x557787741280 'heap_element'
|-TypedefDecl 0x55778774c3b8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55778774b360 'const TimerSet::heap_element &'
|   `-QualType 0x5577877423b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5577877423b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x557787741310 'TimerSet::heap_element'
|         `-CXXRecord 0x557787741280 'heap_element'
|-TypedefDecl 0x55778774c410 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x55778774c478 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55778774b3f0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5577877423b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x557787741310 'TimerSet::heap_element'
|       `-CXXRecord 0x557787741280 'heap_element'
|-TypedefDecl 0x55778774c4e0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55778774b4b0 'const TimerSet::heap_element *'
|   `-QualType 0x5577877423b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5577877423b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x557787741310 'TimerSet::heap_element'
|         `-CXXRecord 0x557787741280 'heap_element'
|-EnumDecl 0x55778774c538 <line:134:5> col:5
| `-EnumConstantDecl 0x55778774c630 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55778774c610 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5577874a1d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5577874a1d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5577874a1d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x55778774c6b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55778774c948 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55778774c770 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55778774c810 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55778774cc08 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55778774caf0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55778774cec8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55778774cdb0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55778774d210 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55778774d0f0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55778774d520 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55778774d400 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55778774d810 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55778774d658 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55778774d6d0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55778774d968 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55778774da48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778774daa0 <col:30> Inherited
|-CXXMethodDecl 0x55778774dae8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55778774db98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778774dbf0 <col:30> Inherited
|-CXXMethodDecl 0x55778774dcb8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55778774dd68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778774ddc0 <col:30> Inherited
|-CXXMethodDecl 0x55778774de08 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55778774deb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778774df10 <col:30> Inherited
|-CXXMethodDecl 0x55778774df58 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55778774e008 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778774e060 <col:30> Inherited
|-CXXMethodDecl 0x55778774e0a8 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55778774e158 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778774e1b0 <col:30> Inherited
|-CXXMethodDecl 0x55778774e1d8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55778774e288 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55778774e338 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55778774e4f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55778774e3e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55778774e460 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55778774e648 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55778774e5b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778774e7f8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55778774e700 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55778774e8b0 <col:20>
| `-OptimizeNoneAttr 0x55778774e908 <col:30>
|-CXXMethodDecl 0x55778774ea28 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55778774e930 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55778774eae0 <col:20>
| `-OptimizeNoneAttr 0x55778774eb38 <col:30>
|-CXXMethodDecl 0x55778774ebf0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55778774eb60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778774ed38 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55778774eca8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778774ee68 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55778774ef98 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55778774f068 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55778774f138 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55778774f278 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55778774f1e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778774f3c0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55778774f330 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778774f508 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55778774f478 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55778774f5c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55778774f6c0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55778774f630 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55778774f778 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55778774f838 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55778774f938 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55778774fae8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55778774f9f8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x5577877502d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55778774fba0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x557787750238 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x557787750138 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x5577877503b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557787750508 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x557787750478 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5577877505c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x557787750808 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x557787750680 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5577877506f8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x557787750a60 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x5577877508d8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x557787750cb8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x557787750b28 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x557787750ba0 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x557787750d78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x557787750fd8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x557787750ee0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x5577877510a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5577877510a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5577877525d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x5577877527a8 prev 0x5577877525d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x557787752838 <col:46, col:52> col:46 public
|-TypedefDecl 0x557787752860 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x557787754430 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x5577877543e0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x557787752d10 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x557787752c10 'type'
|     `-TemplateSpecializationType 0x557787752ba0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x557787752a80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x557787752a60 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x557787752a40 <col:24> 'unsigned long' 8
|       `-RecordType 0x557787752b80 'char_array<8>'
|         `-ClassTemplateSpecialization 0x557787752aa0 'char_array'
|-TypedefDecl 0x5577877544e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x5577877544b0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x557787754490 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x557787754430 'type'
|     `-ElaboratedType 0x5577877543e0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x557787752d10 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x557787752c10 'type'
|         `-TemplateSpecializationType 0x557787752ba0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x557787752a80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x557787752a60 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x557787752a40 <col:24> 'unsigned long' 8
|           `-RecordType 0x557787752b80 'char_array<8>'
|             `-ClassTemplateSpecialization 0x557787752aa0 'char_array'
|-CXXMethodDecl 0x557787754668 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x557787754578 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x557787754758 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x557787754838 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x557787754838
|-CXXMethodDecl 0x557787754b08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x557787754a10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x557787754d48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x557787754bc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557787754c38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557787754f18 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x557787754e08 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557787754e80 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557787755078 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x557787755148 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x557787755398 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x557787755208 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x557787755280 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5577877555f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x557787755468 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5577877554e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5577877557b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5577877556c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557787755978 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x557787755880 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557787755a30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557787755ae0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x557787755d18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x557787755b90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557787755c08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557787755fb8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x557787755ec0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x557787756080 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x5577877560d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x557787756120 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5577877511f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x5577877513f8 prev 0x5577877511f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x557787752540 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5577877524f0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x5577877524d0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x557787752380 'type'
|     `-SubstTemplateTypeParmType 0x5577877521a0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x557787468a10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874689b8 'T'
|       `-RecordType 0x557787751cf0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x557787751c08 'sized_array_memory'
|-FieldDecl 0x557787756170 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5577877561c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5577877561f8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x557787751490 'Timer *' sugar
|   |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5577874a06a8 'T'
|   `-PointerType 0x557787705290 'Timer *'
|     `-RecordType 0x5577877043e0 'Timer'
|       `-CXXRecord 0x557787688078 'Timer'
|-TypedefDecl 0x5577877562b8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x557787756280 'Timer *&'
|   `-SubstTemplateTypeParmType 0x557787751490 'Timer *' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-PointerType 0x557787705290 'Timer *'
|       `-RecordType 0x5577877043e0 'Timer'
|         `-CXXRecord 0x557787688078 'Timer'
|-TypedefDecl 0x557787756378 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x557787756340 'Timer *const &'
|   `-QualType 0x557787751491 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x557787751490 'Timer *' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-PointerType 0x557787705290 'Timer *'
|         `-RecordType 0x5577877043e0 'Timer'
|           `-CXXRecord 0x557787688078 'Timer'
|-TypedefDecl 0x557787756438 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x557787756400 'Timer **'
|   `-SubstTemplateTypeParmType 0x557787751490 'Timer *' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-PointerType 0x557787705290 'Timer *'
|       `-RecordType 0x5577877043e0 'Timer'
|         `-CXXRecord 0x557787688078 'Timer'
|-TypedefDecl 0x5577877564f8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x5577877564c0 'Timer *const *'
|   `-QualType 0x557787751491 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x557787751490 'Timer *' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-PointerType 0x557787705290 'Timer *'
|         `-RecordType 0x5577877043e0 'Timer'
|           `-CXXRecord 0x557787688078 'Timer'
|-TypedefDecl 0x5577877570d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x557787757080 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x557787757060 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x557787756ff0 'type'
|     `-SubstTemplateTypeParmType 0x557787756db0 'Timer *' sugar
|       |-TemplateTypeParmType 0x557787473810 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874737c0 'T'
|       `-PointerType 0x557787705290 'Timer *'
|         `-RecordType 0x5577877043e0 'Timer'
|           `-CXXRecord 0x557787688078 'Timer'
|-TypedefDecl 0x557787757138 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x557787756340 'Timer *const &'
|   `-QualType 0x557787751491 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x557787751490 'Timer *' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-PointerType 0x557787705290 'Timer *'
|         `-RecordType 0x5577877043e0 'Timer'
|           `-CXXRecord 0x557787688078 'Timer'
|-TypedefDecl 0x557787757190 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x5577877571f8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x557787756400 'Timer **'
|   `-SubstTemplateTypeParmType 0x557787751490 'Timer *' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-PointerType 0x557787705290 'Timer *'
|       `-RecordType 0x5577877043e0 'Timer'
|         `-CXXRecord 0x557787688078 'Timer'
|-TypedefDecl 0x557787757260 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x5577877564c0 'Timer *const *'
|   `-QualType 0x557787751491 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x557787751490 'Timer *' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-PointerType 0x557787705290 'Timer *'
|         `-RecordType 0x5577877043e0 'Timer'
|           `-CXXRecord 0x557787688078 'Timer'
|-EnumDecl 0x5577877572b8 <line:134:5> col:5
| `-EnumConstantDecl 0x5577877573b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x557787757390 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5577874a1d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5577874a1d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5577874a1d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x557787757438 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5577877576c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5577877574f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557787757590 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x557787757988 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x557787757870 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x557787757c48 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x557787757b30 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x557787757f90 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x557787757e70 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x5577877582a0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x557787758180 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x557787758590 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5577877583d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557787758450 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5577877586e8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5577877587c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x557787758820 <col:30> Inherited
|-CXXMethodDecl 0x557787758868 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x557787758918 <col:20> Inherited
| `-OptimizeNoneAttr 0x557787758970 <col:30> Inherited
|-CXXMethodDecl 0x55778775ca80 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55778775cb30 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778775cb88 <col:30> Inherited
|-CXXMethodDecl 0x55778775cbd0 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55778775cc80 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778775ccd8 <col:30> Inherited
|-CXXMethodDecl 0x55778775cd20 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55778775cdd0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778775ce28 <col:30> Inherited
|-CXXMethodDecl 0x55778775ce70 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55778775cf20 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778775cf78 <col:30> Inherited
|-CXXMethodDecl 0x55778775cfa0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55778775d050 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55778775d100 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55778775d2c0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55778775d1b0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55778775d228 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55778775d410 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55778775d380 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778775d5b8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55778775d4c8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55778775d670 <col:20>
| `-OptimizeNoneAttr 0x55778775d6c8 <col:30>
|-CXXMethodDecl 0x55778775d7e8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55778775d6f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55778775d8a0 <col:20>
| `-OptimizeNoneAttr 0x55778775d8f8 <col:30>
|-CXXMethodDecl 0x55778775d9b0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55778775d920 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778775daf8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55778775da68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778775dc28 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55778775dd58 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55778775de28 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55778775def8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55778775e038 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55778775dfa8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778775e180 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55778775e0f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778775e2c8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55778775e238 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55778775e380 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55778775e480 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55778775e3f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55778775e538 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55778775e5f8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55778775e6f8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55778775e878 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55778775e7b8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55778775f038 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55778775e930 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55778775ef98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55778775ee98 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55778775f118 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55778775f268 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55778775f1d8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55778775f320 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55778775f568 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55778775f3e0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55778775f458 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55778775f728 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55778775f638 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55778775f978 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55778775f7f0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55778775f868 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55778775fa38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55778775fc98 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55778775fba0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55778775fd68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55778775fd68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778771e940 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55778771ea58 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55778771eae8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55778771eb70 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55778771ec60 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55778771ed60 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55778771ee20 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55778771eee0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55778771f008 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55778771f008
| `-ParmVarDecl 0x55778771f118 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x557787760b18 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x557787760b18
  `-ParmVarDecl 0x557787760c28 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787740400 prev 0x55778768c228 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5577877404f8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x557787740588 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x557787740610 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x557787740708 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x557787760f90 <col:43, col:67>
|   `-ReturnStmt 0x557787760f80 <col:45, col:52>
|     `-CXXConstructExpr 0x557787760f50 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x557787760f20 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x557787741ef0
|         `-CXXThisExpr 0x557787760f10 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5577877407c8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x5577877409d0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x557787740878 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x5577877408f0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x557787740ac8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x557787740b90 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x557787761010 <col:39, col:67>
|   `-ReturnStmt 0x557787761000 <col:41, col:48>
|     `-ImplicitCastExpr 0x557787760fe8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x557787760fb8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x557787741fd8
|         `-CXXThisExpr 0x557787760fa8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x557787740c58 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x557787761090 <col:35, col:59>
|   `-ReturnStmt 0x557787761080 <col:37, col:44>
|     `-ImplicitCastExpr 0x557787761068 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x557787761038 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x557787742040
|         `-CXXThisExpr 0x557787761028 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x557787740da0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x557787740d10 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x557787740ee8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x557787740e58 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5577877410e8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x557787740fa0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x557787741018 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x5577877411b8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x557787741258 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x557787741280 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557787741398 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x557787741438 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x557787741498 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x5577877415c8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x5577877414f8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x557787741438 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x557787761168 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x557787761110 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x5577877610e0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x5577876896b8
|   |       `-ImplicitCastExpr 0x557787761130 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x5577877610c8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x5577877610a8 <col:17> 'Timer *' lvalue ParmVar 0x5577877414f8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x557787741498 't' 'Timer *'
|   | `-ImplicitCastExpr 0x557787761200 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577877611c0 <col:41> 'Timer *' lvalue ParmVar 0x5577877414f8 't_' 'Timer *'
|   `-CompoundStmt 0x557787761250 <col:45, line:44:2>
|-CXXRecordDecl 0x557787741690 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5577877417a8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x5577877419f8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x557787741878 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x5577877418f0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x557787761380 <col:71, line:49:2>
|     `-ReturnStmt 0x557787761370 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x557787761338 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x557787761320 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x557787761300 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x5577876c25f8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x557787761280 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x557787741438
|         | `-DeclRefExpr 0x557787761260 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x557787741878 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x5577877612d0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x557787741438
|           `-DeclRefExpr 0x5577877612b0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x5577877418f0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x557787741ac0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557787741bd8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x557787741df8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x557787741c78 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x557787741cf0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x557787761588 <col:63, line:54:2>
|     `-BinaryOperator 0x557787761568 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x557787761418 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55778768b6c8
|       | `-ImplicitCastExpr 0x557787761400 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x5577877613d0 <col:6, col:9> 'Timer *' lvalue ->t 0x557787741498
|       |     `-ImplicitCastExpr 0x5577877613b8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x557787761398 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x557787741cf0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x557787761550 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x557787761530 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x5577877614d8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x5577877614b8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x557787761488 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x557787761448 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x557787741cf0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x5577877614a0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x557787761468 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x557787741c78 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x557787761518 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x5577877614f8 <col:39> 'int' 1
|-FieldDecl 0x557787741ef0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x557787741f60 <col:44, col:53> aligned
|   `-ConstantExpr 0x557787741f40 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x557787741ec0 <col:52> 'int' 8
|-FieldDecl 0x557787741fd8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x557787742040 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x5577877420a8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x557787751190 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55778775fe50 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55778775feb0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55778775ff10 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55778775ff70 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557787760060 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55778775ffd0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x557787760128 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x5577877619e0 <col:29, line:81:5>
|   `-IfStmt 0x5577877619b8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x557787761670 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x557787761610 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x5577877615e0 <col:6, col:18> '<bound member function type>' .size 0x55778774e1d8
|     |     `-ImplicitCastExpr 0x557787761658 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x5577877615b0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x557787751190
|     |         `-CXXThisExpr 0x5577877615a0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x557787761860 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x557787761848 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x557787761828 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x5577873ac088 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x557787761698 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x557787741ef0
|     | | `-CXXThisExpr 0x557787761688 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x557787761810 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x5577877617e0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x557787741438
|     |     `-CXXMemberCallExpr 0x5577877617b8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x557787761788 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55778774f278
|     |       | `-MemberExpr 0x5577877616d8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x557787751190
|     |       |   `-CXXThisExpr 0x5577877616c8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x557787761768 <col:47> 'int' 0
|     `-ExprWithCleanups 0x5577877619a0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x557787761968 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x557787761950 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x557787761930 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5577873ac538 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x5577877618a8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x557787741ef0
|         | `-CXXThisExpr 0x557787761898 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x557787761918 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5577877618e8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x557787760268 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x5577877601d8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x557787760330 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x5577877603f0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x5577877604b0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x5577877605a0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x557787760608 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x557787760608
| `-ParmVarDecl 0x557787760718 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x5577877607b8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x5577877607b8
| `-ParmVarDecl 0x5577877608c8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x557787760968 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x557787760968
| `-ParmVarDecl 0x557787760a78 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x557787760c98 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x557787760c98
| `-ParmVarDecl 0x557787760da8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x557787760e30 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x557787760e30

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557787797878 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x557787797a88 prev 0x557787797878 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x557787798b60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x557787798b10 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x557787798af0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x5577877989a0 'type'
|     `-SubstTemplateTypeParmType 0x5577877521a0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x557787468a10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874689b8 'T'
|       `-RecordType 0x557787751cf0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x557787751c08 'sized_array_memory'
|-FieldDecl 0x557787798c60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x557787798cb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x557787798ce8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x557787797b20 'pollfd' sugar
|   |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5577874a06a8 'T'
|   `-RecordType 0x55778778b8f0 'pollfd'
|     `-CXXRecord 0x55778778b860 'pollfd'
|-TypedefDecl 0x557787798da8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x557787798d70 'pollfd &'
|   `-SubstTemplateTypeParmType 0x557787797b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x55778778b8f0 'pollfd'
|       `-CXXRecord 0x55778778b860 'pollfd'
|-TypedefDecl 0x557787798e68 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x557787798e30 'const pollfd &'
|   `-QualType 0x557787797b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x557787797b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x55778778b8f0 'pollfd'
|         `-CXXRecord 0x55778778b860 'pollfd'
|-TypedefDecl 0x557787798ef8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x557787798ec0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x557787797b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x55778778b8f0 'pollfd'
|       `-CXXRecord 0x55778778b860 'pollfd'
|-TypedefDecl 0x557787798fb8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x557787798f80 'const pollfd *'
|   `-QualType 0x557787797b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x557787797b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x55778778b8f0 'pollfd'
|         `-CXXRecord 0x55778778b860 'pollfd'
|-TypedefDecl 0x557787799b90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x557787799b40 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x557787799b20 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x557787799ab0 'type'
|     `-SubstTemplateTypeParmType 0x557787799870 'pollfd' sugar
|       |-TemplateTypeParmType 0x557787473810 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874737c0 'T'
|       `-RecordType 0x55778778b8f0 'pollfd'
|         `-CXXRecord 0x55778778b860 'pollfd'
|-TypedefDecl 0x557787799bf8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x557787798e30 'const pollfd &'
|   `-QualType 0x557787797b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x557787797b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x55778778b8f0 'pollfd'
|         `-CXXRecord 0x55778778b860 'pollfd'
|-TypedefDecl 0x557787799c50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x557787799cb8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x557787798ec0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x557787797b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x55778778b8f0 'pollfd'
|       `-CXXRecord 0x55778778b860 'pollfd'
|-TypedefDecl 0x557787799d20 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x557787798f80 'const pollfd *'
|   `-QualType 0x557787797b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x557787797b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x55778778b8f0 'pollfd'
|         `-CXXRecord 0x55778778b860 'pollfd'
|-EnumDecl 0x557787799d78 <line:134:5> col:5
| `-EnumConstantDecl 0x557787799e70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x557787799e50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5577874a1d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5577874a1d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5577874a1d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x557787799ef8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55778779a188 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x557787799fb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55778779a050 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55778779a448 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55778779a330 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55778779a708 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55778779a5f0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55778779aa50 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55778779a930 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55778779ad60 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55778779ac40 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55778779b050 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55778779ae98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55778779af10 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55778779b1a8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55778779b288 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778779b2e0 <col:30> Inherited
|-CXXMethodDecl 0x55778779b328 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55778779b3d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778779b430 <col:30> Inherited
|-CXXMethodDecl 0x55778779b4f8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55778779b5a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778779b600 <col:30> Inherited
|-CXXMethodDecl 0x55778779b648 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55778779b6f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778779b750 <col:30> Inherited
|-CXXMethodDecl 0x55778779b798 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55778779b848 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778779b8a0 <col:30> Inherited
|-CXXMethodDecl 0x55778779b8e8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55778779b998 <col:20> Inherited
| `-OptimizeNoneAttr 0x55778779b9f0 <col:30> Inherited
|-CXXMethodDecl 0x55778779ba18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55778779bac8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55778779bb78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55778779bd38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55778779bc28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55778779bca0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55778779be88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55778779bdf8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778779c038 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55778779bf40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55778779c0f0 <col:20>
| `-OptimizeNoneAttr 0x55778779c148 <col:30>
|-CXXMethodDecl 0x55778779c268 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55778779c170 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55778779c320 <col:20>
| `-OptimizeNoneAttr 0x55778779c378 <col:30>
|-CXXMethodDecl 0x55778779c430 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55778779c3a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778779c578 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55778779c4e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778779c6a8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55778779c7d8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55778779c8a8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55778779c978 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55778779cab8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55778779ca28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778779cc00 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55778779cb70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55778779cd48 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55778779ccb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55778779ce00 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55778779cf00 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55778779ce70 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55778779cfb8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55778779d078 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55778779d178 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55778779d328 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55778779d238 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55778779dae8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55778779d3e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55778779da48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55778779d948 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55778779dbc8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55778779dd18 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55778779dc88 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55778779ddd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55778779e018 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55778779de90 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55778779df08 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55778779e1d8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55778779e0e8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55778779e428 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55778779e2a0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55778779e318 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55778779e4e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55778779e768 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55778779e650 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55778779e838 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55778779e838

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55778779fe20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55778779fff8 prev 0x55778779fe20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5577877a0088 <col:46, col:52> col:46 public
|-TypedefDecl 0x5577877a00b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x5577877a1c80 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5577877a1c30 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x5577877a0560 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x5577877a0460 'type'
|     `-TemplateSpecializationType 0x5577877a03f0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5577877a02d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x5577877a02b0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5577877a0290 <col:24> 'unsigned long' 24
|       `-RecordType 0x5577877a03d0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x5577877a02f0 'char_array'
|-TypedefDecl 0x5577877a1d38 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5577877a1d00 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x5577877a1ce0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x5577877a1c80 'type'
|     `-ElaboratedType 0x5577877a1c30 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x5577877a0560 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x5577877a0460 'type'
|         `-TemplateSpecializationType 0x5577877a03f0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5577877a02d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x5577877a02b0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5577877a0290 <col:24> 'unsigned long' 24
|           `-RecordType 0x5577877a03d0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x5577877a02f0 'char_array'
|-CXXMethodDecl 0x5577877a1eb8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x5577877a1dc8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x5577877a1fa8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5577877a2088 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5577877a2088
|-CXXMethodDecl 0x5577877a2358 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5577877a2260 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x5577877a2598 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5577877a2410 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5577877a2488 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5577877a2768 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5577877a2658 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5577877a26d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5577877a28c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5577877a2998 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5577877a2be8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5577877a2a58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5577877a2ad0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5577877a2e48 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x5577877a2cb8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5577877a2d30 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5577877a3008 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5577877a2f18 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5577877a31c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5577877a30d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5577877a3280 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5577877a3330 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5577877a3568 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5577877a33e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5577877a3458 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5577877a3808 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5577877a3710 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x5577877a38d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5577877a3920 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5577877a3970 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55778779e980 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55778779eb88 prev 0x55778779e980 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55778779fd90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55778779fd40 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55778779fd20 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55778779fbd0 'type'
|     `-SubstTemplateTypeParmType 0x55778779f9f0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x557787468a10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874689b8 'T'
|       `-RecordType 0x55778779f540 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55778779f460 'sized_array_memory'
|-FieldDecl 0x5577877a39c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5577877a3a10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5577877a3a48 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55778779ec20 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5577874a06a8 'T'
|   `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x557787797350 'SelectorInfo'
|-TypedefDecl 0x5577877a3b08 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5577877a3ad0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55778779ec20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x557787797350 'SelectorInfo'
|-TypedefDecl 0x5577877a3bc8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5577877a3b90 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55778779ec21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55778779ec20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x557787797350 'SelectorInfo'
|-TypedefDecl 0x5577877a3c58 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5577877a3c20 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55778779ec20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x557787797350 'SelectorInfo'
|-TypedefDecl 0x5577877a3d18 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5577877a3ce0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55778779ec21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55778779ec20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x557787797350 'SelectorInfo'
|-TypedefDecl 0x5577877a4970 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5577877a4920 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5577877a4900 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5577877a4838 'type'
|     `-LValueReferenceType 0x5577877a4800 'const SelectSet::SelectorInfo &'
|       `-QualType 0x5577877a45a1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x5577877a45a0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x5577874730e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x557787473088 'T'
|           `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x557787797350 'SelectorInfo'
|-TypedefDecl 0x5577877a49d8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5577877a3b90 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55778779ec21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55778779ec20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x557787797350 'SelectorInfo'
|-TypedefDecl 0x5577877a4a30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x5577877a4a98 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5577877a3c20 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55778779ec20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5577874a06a8 'T'
|     `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x557787797350 'SelectorInfo'
|-TypedefDecl 0x5577877a4b00 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5577877a3ce0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55778779ec21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55778779ec20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5577874a0700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5577874a06a8 'T'
|       `-RecordType 0x5577877973e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x557787797350 'SelectorInfo'
|-EnumDecl 0x5577877a4b58 <line:134:5> col:5
| `-EnumConstantDecl 0x5577877a4c50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5577877a4c30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5577874a1d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5577874a1d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5577874a1d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x5577877a4cd8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5577877a4f68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5577877a4d90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5577877a4e30 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x5577877a5228 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5577877a5110 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x5577877a54e8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5577877a53d0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5577877a5830 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5577877a5710 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5577877a5b40 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5577877a5a20 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5577877a5e30 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5577877a5c78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5577877a5cf0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5577877a5f88 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5577877a6068 <col:20> Inherited
| `-OptimizeNoneAttr 0x5577877a60c0 <col:30> Inherited
|-CXXMethodDecl 0x5577877a6108 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5577877a61b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5577877a6210 <col:30> Inherited
|-CXXMethodDecl 0x5577877a62d8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5577877a6388 <col:20> Inherited
| `-OptimizeNoneAttr 0x5577877a63e0 <col:30> Inherited
|-CXXMethodDecl 0x5577877a6428 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5577877a64d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5577877a6530 <col:30> Inherited
|-CXXMethodDecl 0x5577877a6578 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5577877a6628 <col:20> Inherited
| `-OptimizeNoneAttr 0x5577877a6680 <col:30> Inherited
|-CXXMethodDecl 0x5577877a6720 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5577877a67d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x5577877a6828 <col:30> Inherited
|-CXXMethodDecl 0x5577877a6850 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5577877a6900 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5577877a69b0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5577877a6b70 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5577877a6a60 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5577877a6ad8 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5577877a6cc0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5577877a6c30 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5577877a6e68 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x5577877a6d78 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5577877a6f20 <col:20>
| `-OptimizeNoneAttr 0x5577877a6f78 <col:30>
|-CXXMethodDecl 0x5577877a7098 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x5577877a6fa0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5577877a7150 <col:20>
| `-OptimizeNoneAttr 0x5577877a71a8 <col:30>
|-CXXMethodDecl 0x5577877a7260 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5577877a71d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5577877a73a8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5577877a7318 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5577877a74d8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5577877a7608 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5577877a76d8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5577877a77a8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5577877a78e8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5577877a7858 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5577877a7a30 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5577877a79a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5577877a7b78 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5577877a7ae8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5577877a7c30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5577877a7d30 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5577877a7ca0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5577877a7de8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5577877a7ea8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x5577877a7fa8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x5577877a8158 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5577877a8068 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5577877a8918 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5577877a8210 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x5577877a8878 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x5577877a8778 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5577877a89f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5577877a8b48 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5577877a8ab8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5577877a8c00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5577877a8e48 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5577877a8cc0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5577877a8d38 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5577877a9008 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5577877a8f18 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5577877a9258 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x5577877a90d0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5577877a9148 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5577877a9318 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5577877a9578 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5577877a9480 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x5577877a9648 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5577877a9648

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778778c4f0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55778778c608 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55778778c698 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x557787796760 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x557787796850 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x557787796850
|-CXXMethodDecl 0x557787796950 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x557787796bf0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x557787796a08 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x557787796a80 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x557787796b00 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x557787796e60 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x557787796cc0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x557787796d38 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x557787796db8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x557787796fb8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x557787796f28 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x557787797080 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x5577877aacf8 <col:34, line:50:5>
|   |-BinaryOperator 0x5577877aa6c8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x5577877aa688 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x557787797808
|   | | `-CXXThisExpr 0x5577877aa678 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x5577877aa6b8 <col:23> 'bool' true
|   `-CallExpr 0x5577877aacd0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x5577877aacb8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5577877aac38 <col:2> 'void (long)' lvalue Function 0x5577877aab38 'ignore_result' 'void (long)' (FunctionTemplate 0x5577874639b8 'ignore_result')
|     `-CallExpr 0x5577877aa8e0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x5577877aa8c8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5577877aa848 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x557787764a90 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5577877aa918 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5577877aa7f0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x5577877aa7d8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x5577877aa788 <col:22> 'int [2]' lvalue ->_wake_pipe 0x5577877977a8
|       |   |   `-CXXThisExpr 0x5577877aa778 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x5577877aa7b8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x5577877aa948 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5577877aa930 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5577877aa810 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x5577877aa960 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5577877aa828 <col:41> 'int' 1
|-CXXMethodDecl 0x5577877971c0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x557787797130 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x557787797288 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x557787797328 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x557787797350 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557787797468 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x557787797508 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x557787797568 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x5577877975d0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x557787797680 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x557787797508 'read' 'Element *'
|   | `-ImplicitCastExpr 0x5577877aad58 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5577877aad18 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x557787797568 'write' 'Element *'
|   | `-ImplicitCastExpr 0x5577877aadd8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5577877aad98 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x5577877975d0 'pollfd' 'int'
|   | `-UnaryOperator 0x5577877aae38 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5577877aae18 <col:35> 'int' 1
|   `-CompoundStmt 0x5577877aaeb0 <line:64:2, line:65:2>
|-FieldDecl 0x5577877977a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x557787797808 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55778779e920 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5577877a9730 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x5577877a9968 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x5577877a9798 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5577877a9810 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x5577877a9888 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x5577877a9b50 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5577877a9a38 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x5577877a9ab8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x5577877a9d98 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5577877a9c18 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x5577877a9c98 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x5577877a9fa8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x5577877a9e58 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x5577877a9ed0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x5577877aa0f8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x5577877aa068 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x5577877aa1c0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x5577877aa280 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x5577877aa348 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x5577877aa348
| `-ParmVarDecl 0x5577877aa458 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5577877aa4f8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5577877aa4f8
  `-ParmVarDecl 0x5577877aa608 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778771d8a8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55778771d9c8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55778771da58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55778771dae0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55778771dbd0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55778771dcd0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55778771dd90 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55778771de50 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55778771df38 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55778771e058 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55778771e058
| `-ParmVarDecl 0x55778771e168 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5577877afb08 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5577877afb08
  `-ParmVarDecl 0x5577877afc18 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787685de8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557787685f08 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x557787685fa8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x557787686008 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x5577877af108 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5577877af108
| `-ParmVarDecl 0x5577877af218 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x5577877af2b8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5577877af2b8
| `-ParmVarDecl 0x5577877af3c8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5577877af438 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5577877af438
|-CXXMethodDecl 0x5577877afcb8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5577877afcb8
| `-ParmVarDecl 0x5577877afdc8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5577877afe38 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5577877afe38
| `-ParmVarDecl 0x5577877aff48 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5577877b65b8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5577877b6690 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778771f7a0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55778771f8b8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55778771f948 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55778771f9d0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55778771fa90 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x5577871a13b0 'int'
|-CXXMethodDecl 0x55778771fb58 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55778771fbf8 <col:45> always_inline
|-CXXMethodDecl 0x55778771fd28 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55778771fc60 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55778771fdd0 <col:49> always_inline
|-CXXConstructorDecl 0x55778771fec8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55778771fec8
| `-ParmVarDecl 0x55778771ffd8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x557787720078 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x557787720078
| `-ParmVarDecl 0x557787720188 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5577877af520 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5577877af520
|-CXXMethodDecl 0x5577877affe8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5577877affe8
| `-ParmVarDecl 0x5577877b00f8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x5577877b0168 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5577877b0168
  `-ParmVarDecl 0x5577877b0278 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877ab320 prev 0x55778778c460 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5577877ab418 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x5577877ab4a8 <col:22, col:28> col:22 public
|-EnumDecl 0x5577877ab4d0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5577877ab5e8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x5577877ab5c8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5577877ab5b0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5577877ab590 <col:32> 'int' 1
| `-EnumConstantDecl 0x5577877ab690 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x5577877ab670 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5577877ab658 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5577877ab638 <col:53> 'int' 1000
|-CXXMethodDecl 0x5577877ab730 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5577877ab7f0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5577877ab8d8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x5577877b0338 <col:34, col:52>
|   `-ReturnStmt 0x5577877b0328 <col:36, col:43>
|     `-MemberExpr 0x5577877b02f8 <col:43> 'TimerSet' lvalue ->_timers 0x5577877ad5a8
|       `-CXXThisExpr 0x5577877b02e8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5577877ab9c8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x5577877b03a0 <col:46, col:64>
|   `-ReturnStmt 0x5577877b0390 <col:48, col:55>
|     `-MemberExpr 0x5577877b0360 <col:55> 'const TimerSet' lvalue ->_timers 0x5577877ad5a8
|       `-CXXThisExpr 0x5577877b0350 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5577877abab8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x5577877b0408 <col:36, col:55>
|   `-ReturnStmt 0x5577877b03f8 <col:38, col:45>
|     `-MemberExpr 0x5577877b03c8 <col:45> 'SelectSet' lvalue ->_selects 0x5577877ad608
|       `-CXXThisExpr 0x5577877b03b8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5577877abba8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x5577877b0470 <col:48, col:67>
|   `-ReturnStmt 0x5577877b0460 <col:50, col:57>
|     `-MemberExpr 0x5577877b0430 <col:57> 'const SelectSet' lvalue ->_selects 0x5577877ad608
|       `-CXXThisExpr 0x5577877b0420 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5577877abc68 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5577877abd58 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x5577877abec8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x5577877abe08 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x5577877abf90 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x5577877ac3d8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x5577877ac040 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x5577877ac2c0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x5577877ac4a8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x5577877ac568 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5577877ac628 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x5577877ac768 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x5577877ac6d8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5577877ac830 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5577877ac8f0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x5577877ac9b0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x5577877aca70 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x5577877acbb0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5577877acb20 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5577877acc78 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5577877acd38 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x5577877acdd8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x5577877acea0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877acef0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877acf40 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877acf90 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877acfe0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877ad030 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877ad080 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877ad0d0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877ad120 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5577877ad170 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x5577877ad1c0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x5577877ad2b8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x5577877ad228 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5577877ad408 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x5577877ad378 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x5577877ad4b0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5577877ad4e8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x5577877ad548 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x5577877ad5a8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5577877ad608 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x5577877ad688 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5577877ad6f8 <col:40, col:50> aligned
|   `-ConstantExpr 0x5577877ad6d8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x5577877ad658 <col:48> 'int' 64
|-FieldDecl 0x5577877ad768 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x5577877ad7c8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x5577877ad8c0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x5577877ad9d0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5577877ada30 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x5577877adab0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5577877adb20 <col:36, col:46> aligned
|   `-ConstantExpr 0x5577877adb00 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x5577877ada80 <col:44> 'int' 64
|-FieldDecl 0x5577877adb98 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5577877adbf8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x5577877adc48 <line:170:3, col:9> col:3 public
|-FieldDecl 0x5577877adc88 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x5577877adcf0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x5577877add40 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x5577877adee8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x5577877add78 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x5577877addf8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x5577877adfe8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x5577877adfe8
|-CXXMethodDecl 0x5577877ae0f0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x5577877ae1b8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x5577877b0568 <col:34, line:217:5>
|   `-ReturnStmt 0x5577877b0558 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x5577877b0540 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5577877b0510 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x557787722300
|         `-ImplicitCastExpr 0x5577877b04f8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x5577877b04c8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x557787722298
|             `-MemberExpr 0x5577877b0498 <col:16> 'const TaskLink' lvalue ->_task_link 0x5577877ad4e8
|               `-CXXThisExpr 0x5577877b0488 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5577877ae278 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x5577877ae338 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x5577877b0c90 <col:39, line:226:5>
|   |-DeclStmt 0x5577877b07b8 <line:223:9, col:68>
|   | `-VarDecl 0x5577877b0590 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x5577877b0770 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5577877b0740 <col:24, col:38> '<bound member function type>' .compare_swap 0x5577874ca000
|   |     | `-MemberExpr 0x5577877b0608 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x5577877ad768
|   |     |   `-CXXThisExpr 0x5577877b05f8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x5577877b06f8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x5577877b06e0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x5577877b06b8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5577877b0698 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x5577877b07a0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5577877b0720 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5577877b0800 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5577877b07d0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x5577877b0590 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x5577877b0c70 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5577877b0c40 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5577877b0918 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x5577877b08e8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5577877b08d0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5577877b0828 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x5577877b0590 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x5577877b08a8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x5577877b0890 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x5577877b0868 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5577877b0848 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x5577877b0978 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5577877b0958 <col:60> 'int' 0
|       `-CallExpr 0x5577877b0ba0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x5577877b0b88 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5577877b0b68 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x5577877b0be0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5577877b0a68 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x5577877b0bf8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5577877b0a98 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5577877b0c10 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x5577877b0ad8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5577877b0c28 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5577877b0b50 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5577877b0b38 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x5577877b0af8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x5577877ae480 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5577877ae3f0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x5577877ae548 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5577877ae608 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5577877ae730 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x5577877ae7f0 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x5577877ae8b0 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x5577877ae9a0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x5577877aea00 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5577877aea90 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x5577877aee58 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x5577877aee58
| `-ParmVarDecl 0x5577877aef68 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5577877af628 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5577877af628
  `-ParmVarDecl 0x5577877af738 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787722610 prev 0x5577877042a0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x557787722748 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x5577877227d8 <col:33, col:39> col:33 public
|-EnumDecl 0x557787722800 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x557787722940 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x557787722920 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x557787722900 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5577877228c0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x5577877228e0 <col:26> 'int' 16
| `-EnumConstantDecl 0x557787722a10 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x5577877229f0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x5577877229d0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x557787722990 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x5577877229b0 <col:47> 'int' 31
|-EnumDecl 0x557787722a60 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x557787722ba0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x557787722cc0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557787722b80 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x557787722b60 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x557787722b20 <col:26> 'int' 1
| |       `-IntegerLiteral 0x557787722b40 <col:29> 'int' 15
| `-EnumConstantDecl 0x557787722c70 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x557787722cd8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557787722c50 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x557787722c30 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x557787722bf0 <col:51> 'int' 1
|         `-IntegerLiteral 0x557787722c10 <col:54> 'int' 10
|-CXXConstructorDecl 0x557787722ea8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x557787722d00 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x557787722d80 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x557787723038 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x557787722f70 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x557787723130 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x557787723130
|-CXXMethodDecl 0x5577877232b8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x557787686f48 <col:42, line:100:5>
|   `-ReturnStmt 0x557787686f38 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x557787686f20 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x557787686ef0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x557787685c70
|         `-CXXThisExpr 0x557787686ee0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557787723380 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x557787686fc8 <col:36, line:105:5>
|   `-ReturnStmt 0x557787686fb8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x557787686fa0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x557787686f70 <col:16> 'void *const' lvalue ->_thunk 0x557787685cd8
|         `-CXXThisExpr 0x557787686f60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557787723440 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x557787687048 <col:37, line:110:5>
|   `-ReturnStmt 0x557787687038 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x557787687020 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x557787686ff0 <col:16> 'Element *const' lvalue ->_owner 0x557787685d98
|         `-CXXThisExpr 0x557787686fe0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557787723500 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x5577877235c8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x557787723688 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x557787723748 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x557787687130 <col:35, line:137:5>
|   `-ReturnStmt 0x557787687120 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x5577876870e8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x5577876870b8 <col:16, col:24> '<bound member function type>' ->router 0x557787716ab0
|         `-ImplicitCastExpr 0x557787687108 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x5577876870a0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x557787687070 <col:16> 'Element *const' lvalue ->_owner 0x557787685d98
|               `-CXXThisExpr 0x557787687060 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557787723808 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x557787723a08 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5577877238b8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x557787723930 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x557787723c18 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x557787723ac8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x557787723b40 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x557787723ce8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x557787687240 <col:35, line:181:5>
|   `-ReturnStmt 0x557787687230 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x557787687218 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x557787687200 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x5577876871d0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x5577876858a8
|           `-MemberExpr 0x557787687188 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5577876859c8
|             `-MemberExpr 0x557787687158 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x557787685bf8
|               `-CXXThisExpr 0x557787687148 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5577876848f0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x557787687358 <col:30, line:192:5>
|   `-BinaryOperator 0x557787687338 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5577876872e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5577876858a8
|     | `-MemberExpr 0x557787687298 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5577876859c8
|     |   `-MemberExpr 0x557787687268 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557787685bf8
|     |     `-CXXThisExpr 0x557787687258 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x557787687320 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x557787687310 <col:32> 'bool' false
|-CXXMethodDecl 0x5577876849b0 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x5577876876a8 <col:30, line:206:5>
|   |-BinaryOperator 0x557787687450 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5577876873f8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5577876858a8
|   | | `-MemberExpr 0x5577876873b0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5577876859c8
|   | |   `-MemberExpr 0x557787687380 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557787685bf8
|   | |     `-CXXThisExpr 0x557787687370 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x557787687438 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x557787687428 <col:32> 'bool' true
|   |-CallExpr 0x5577876874f0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x5577876874d8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5577876874b8 <col:9> 'void ()' lvalue Function 0x55778771d460 'click_fence' 'void ()'
|   `-IfStmt 0x557787687690 <line:204:9, line:205:32>
|     |-BinaryOperator 0x5577876875d0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x5577876875a0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x557787687550 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x557787686008
|     | |   `-MemberExpr 0x557787687520 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x557787686080
|     | |     `-CXXThisExpr 0x557787687510 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x5577876875b8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x557787687580 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x557787687650 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x557787687600 <col:13> '<bound member function type>' ->complete_schedule 0x557787686a80
|       | `-CXXThisExpr 0x5577876875f0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x557787687678 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x557787687630 <col:31> 'int' 0
|-CXXMethodDecl 0x557787684a70 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x5577876877d0 <col:35, line:240:5>
|   `-BinaryOperator 0x5577876877b0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x557787687758 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5577876858a8
|     | `-MemberExpr 0x557787687710 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5577876859c8
|     |   `-MemberExpr 0x5577876876e0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557787685bf8
|     |     `-CXXThisExpr 0x5577876876d0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x557787687798 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x557787687788 <col:32> 'bool' true
|-CXXMethodDecl 0x557787684b30 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x5577876879e8 <col:37, line:253:5>
|   |-BinaryOperator 0x5577876878c8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x557787687870 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5577876858a8
|   | | `-MemberExpr 0x557787687828 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5577876859c8
|   | |   `-MemberExpr 0x5577876877f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557787685bf8
|   | |     `-CXXThisExpr 0x5577876877e8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5577876878b0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5577876878a0 <col:32> 'bool' false
|   `-BinaryOperator 0x5577876879c8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x557787687970 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x557787685908
|     | `-MemberExpr 0x557787687928 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5577876859c8
|     |   `-MemberExpr 0x5577876878f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557787685bf8
|     |     `-CXXThisExpr 0x5577876878e8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5577876879b0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5577876879a0 <col:41> 'bool' true
|-CXXMethodDecl 0x557787684bf0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x557787687b68 <col:37, line:264:5>
|   |-BinaryOperator 0x557787687ae8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x557787687a90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x557787685908
|   | | `-MemberExpr 0x557787687a48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5577876859c8
|   | |   `-MemberExpr 0x557787687a18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557787685bf8
|   | |     `-CXXThisExpr 0x557787687a08 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x557787687ad0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x557787687ac0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x557787687b48 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x557787687b18 <col:9> '<bound member function type>' ->reschedule 0x5577876849b0
|       `-CXXThisExpr 0x557787687b08 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x557787684d38 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x557787684ca8 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x557787684e08 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x557787684f50 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x557787684ec0 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x5577876850a0 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x557787685010 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x557787685168 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x557787685228 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x5577876852c8 <col:53> "" ""
|-CXXMethodDecl 0x557787685360 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x557787685400 <col:47> "" ""
|-AccessSpecDecl 0x557787685470 <line:303:3, col:10> col:3 private
|-FieldDecl 0x5577876854b0 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x557787685518 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x557787685568 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557787685688 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x557787685718 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x557787685848 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x5577876858a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x557787685908 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x5577877b5ce8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x5577877b5dc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5577877b5dc0
| | |-CXXConstructorDecl 0x5577877b6078 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5577877b6078
| | | `-ParmVarDecl 0x5577877b6188 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x5577877b6228 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5577877b6228
| |   `-ParmVarDecl 0x5577877b6338 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x5577876859c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x557787685a28 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x5577876859c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x557787685848 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x557787685a80 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x5577876859c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5577876858a8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x557787685ad8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x5577876859c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x557787685908 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x557787685b30 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x5577877b5bf8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5577877b6558 <col:11>
| |-CXXConstructorDecl 0x5577877b5ec8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5577877b5ec8
| | `-ParmVarDecl 0x5577877b5fd8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5577877b63d8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5577877b63d8
|   `-ParmVarDecl 0x5577877b64e8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x557787685bf8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x557787685c70 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x557787685cd8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x557787685d38 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x557787685d98 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x557787685de8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557787685f08 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x557787685fa8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x557787686008 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x5577877af108 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5577877af108
| | `-ParmVarDecl 0x5577877af218 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x5577877af2b8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5577877af2b8
| | `-ParmVarDecl 0x5577877af3c8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5577877af438 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5577877af438
| |-CXXMethodDecl 0x5577877afcb8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5577877afcb8
| | `-ParmVarDecl 0x5577877afdc8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5577877afe38 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5577877afe38
| | `-ParmVarDecl 0x5577877aff48 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5577877b65b8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5577877b6690 <col:11>
|-FieldDecl 0x557787686080 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x5577876861c8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x557787686108 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x557787686378 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x557787686288 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x557787686440 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x557787686500 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x5577876865c0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x557787687c78 <col:41, line:355:5>
|   `-ReturnStmt 0x557787687c68 <line:354:9, col:38>
|     `-BinaryOperator 0x557787687c48 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x557787687c18 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x557787687bc8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x557787686008
|       |   `-MemberExpr 0x557787687b98 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x557787686080
|       |     `-CXXThisExpr 0x557787687b88 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x557787687c30 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x557787687bf8 <col:38> 'int' 0
|-CXXMethodDecl 0x557787686680 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x5577876867c0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x557787686730 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x557787686938 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x557787686878 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x557787686a80 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x5577876869f0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x557787686b48 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x557787686d10 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x557787686bf8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x557787686c78 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x557787686e10 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x557787686ea0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877c5258 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5577877c5388 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x5577877c53e8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x5577877c5450 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x5577877c54b0 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877c4330 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x5577877c4488 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x5577877c4518 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x5577877c4628 <line:134:5, col:45> col:5 ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x5577877c4550 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x5577877c5e40 <col:34> 'Notifier::SearchOp' EnumConstant 0x5577877bf020 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x5577877c4720 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x5577877bf7a8 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x5577877c4930 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x5577877c10d0 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x5577877c4810 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5577877c4890 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x5577877c4b08 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x5577877c1328 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x5577877c49f0 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5577877c4a70 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x5577877c4dc8 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x5577877c4ca0 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x5577877c4e70 <col:59> "" ""
|-CXXMethodDecl 0x5577877c5000 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x5577877c4ef0 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x5577877c4f68 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5577877c5e60 <col:57> 'bool' true
|-CXXMethodDecl 0x5577877c50d0 <line:142:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5577877c5190 <line:143:5, col:23> col:17 used sleep 'void ()' inline
|-AccessSpecDecl 0x5577877c5230 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x5577877c5258 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5577877c5388 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x5577877c53e8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x5577877c5450 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x5577877c54b0 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x5577877c5578 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x5577877c5520 'union task_or_signal_t' sugar
|   `-RecordType 0x5577877c52f0 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x5577877c5258 ''
|-FieldDecl 0x5577877c55f8 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x5577877c56d8 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x5577877c5858 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x5577877c5738 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5577877c57b8 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x5577877c5a38 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x5577877c5918 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5577877c5998 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x5577877c5be8 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x5577877c5b28 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x5577877c5d98 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x5577877c5ca8 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877f5920 <../elements/standard/notifierqueue.hh:71:1, line:101:1> line:71:7 referenced class NotifierQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'SimpleQueue'
|-CXXRecordDecl 0x5577877f5a78 <col:1, col:7> col:7 implicit referenced class NotifierQueue
|-AccessSpecDecl 0x5577877f5b08 <col:44, col:50> col:44 public
|-CXXConstructorDecl 0x5577877f5b90 <line:73:5, col:19> col:5 NotifierQueue 'void ()'
|-CXXMethodDecl 0x5577877f5c90 <line:75:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5577877e2af0 SimpleQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x5577877f7100 <col:36, col:62>
|   `-ReturnStmt 0x5577877f70f0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5577877f70d8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5577877f70b0 <col:45> 'const char [14]' lvalue "NotifierQueue"
|-CXXMethodDecl 0x5577877f5de0 <line:76:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5577877e2dd0 SimpleQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x5577877f5d48 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x5577877f60c0 <line:78:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5577877e30b0 SimpleQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5577877f5f70 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x5577877f5fe8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x5577877f6298 <line:80:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5577877e3b58 SimpleQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5577877f6188 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5577877f6200 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x5577877f63f0 <line:81:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x5577877e3cb0 SimpleQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x5577877f6360 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x5577877f6498 <line:87:3, col:12> col:3 protected
|-EnumDecl 0x5577877f64c0 <line:89:5, col:35> col:5
| `-EnumConstantDecl 0x5577877f65c0 <col:12, col:33> col:12 referenced SLEEPINESS_TRIGGER 'NotifierQueue::(anonymous enum at ../elements/standard/notifierqueue.hh:89:5)'
|   `-ImplicitCastExpr 0x5577877f6610 <col:33> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577877f65a0 <col:33> 'int' Int: 9
|       `-IntegerLiteral 0x5577877f6580 <col:33> 'int' 9
|-FieldDecl 0x5577877f6640 <line:90:5, col:9> col:9 referenced _sleepiness 'int'
|-FieldDecl 0x5577877f66a0 <line:91:5, col:20> col:20 referenced _empty_note 'ActiveNotifier'
|-FriendDecl 0x5577877f6740 <line:93:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x5577877f67d0 <line:94:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x5577877f6860 <line:95:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-FriendDecl 0x5577877f68f0 <line:96:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-CXXConstructorDecl 0x5577877f6958 <line:71:7> col:7 implicit NotifierQueue 'void (const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x5577877f6958
| `-ParmVarDecl 0x5577877f6a68 <col:7> col:7 'const NotifierQueue &'
|-CXXConstructorDecl 0x5577877f6b08 <col:7> col:7 implicit NotifierQueue 'void (NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x5577877f6b08
| `-ParmVarDecl 0x5577877f6c18 <col:7> col:7 'NotifierQueue &&'
|-CXXMethodDecl 0x5577877f6cb8 <col:7> col:7 implicit operator= 'NotifierQueue &(const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x5577877f6cb8
| `-ParmVarDecl 0x5577877f6dc8 <col:7> col:7 'const NotifierQueue &'
|-CXXMethodDecl 0x5577877f6e38 <col:7> col:7 implicit operator= 'NotifierQueue &(NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x5577877f6e38
| `-ParmVarDecl 0x5577877f6f48 <col:7> col:7 'NotifierQueue &&'
`-CXXDestructorDecl 0x5577877f6fd0 <col:7> col:7 implicit used ~NotifierQueue 'void () noexcept' inline default
  |-Overrides: [ 0x5577877e4fc0 SimpleQueue::~SimpleQueue 'void () noexcept' ]
  `-CompoundStmt 0x5577877fc800 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FullNoteQueue
         0 |   class NotifierQueue (primary base)
         0 |     class SimpleQueue (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       108 |       class Storage (base)
       108 |         Storage::index_type _capacity
       112 |         volatile Storage::index_type _head
       116 |         volatile Storage::index_type _tail
       120 |       class Packet *volatile * _q
       128 |       volatile int _drops
       132 |       int _highwater_length
       136 |     int _sleepiness
       144 |     class ActiveNotifier _empty_note
       144 |       class Notifier (primary base)
       144 |         (Notifier vtable pointer)
       152 |         class NotifierSignal _signal
       152 |           union NotifierSignal::vmvalue _v
       152 |             class atomic_uint32_t * v1
       152 |             struct NotifierSignal::vmpair * vm
       160 |           uint32_t _mask
       168 |         enum Notifier::SearchOp _search_op
       176 |       class Task * _listener1
       184 |       ActiveNotifier::task_or_signal_t * _listeners
       192 |   class ActiveNotifier _full_note
       192 |     class Notifier (primary base)
       192 |       (Notifier vtable pointer)
       200 |       class NotifierSignal _signal
       200 |         union NotifierSignal::vmvalue _v
       200 |           class atomic_uint32_t * v1
       200 |           struct NotifierSignal::vmpair * vm
       208 |         uint32_t _mask
       216 |       enum Notifier::SearchOp _search_op
       224 |     class Task * _listener1
       232 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=240, dsize=240, align=8,
           |  nvsize=240, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877f7118 <../elements/standard/fullnotequeue.hh:68:1, line:99:1> line:68:7 referenced class FullNoteQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'NotifierQueue'
|-CXXRecordDecl 0x5577877f7278 <col:1, col:7> col:7 implicit referenced class FullNoteQueue
|-AccessSpecDecl 0x5577877f7308 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x5577877f7390 <line:70:5, col:19> col:5 used FullNoteQueue 'void ()'
|-CXXMethodDecl 0x5577877f7490 <line:72:5, col:54> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5577877f5c90 NotifierQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x5577877f9128 <col:36, col:54>
|   `-ReturnStmt 0x5577877f9118 <col:38, col:45>
|     `-ImplicitCastExpr 0x5577877f9100 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5577877f90e0 <col:45> 'const char [6]' lvalue "Queue"
|-CXXMethodDecl 0x5577877f75e0 <line:73:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5577877f5de0 NotifierQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x5577877f7548 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x5577877f78c0 <line:75:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5577877f60c0 NotifierQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5577877f7770 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x5577877f77e8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x5577877f7ba0 <line:76:5, col:66> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5577877e36f0 SimpleQueue::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5577877f7a50 <col:26, col:42> col:42 conf 'Vector<String> &'
| `-ParmVarDecl 0x5577877f7ac8 <col:48, col:62> col:62 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5577877f7d78 <line:81:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5577877f6298 NotifierQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5577877f7c68 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5577877f7ce0 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x5577877f7ed0 <line:82:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x5577877f63f0 NotifierQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x5577877f7e40 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x5577877f7f78 <line:84:3, col:12> col:3 protected
|-FieldDecl 0x5577877f7fb0 <line:86:5, col:20> col:20 referenced _full_note 'ActiveNotifier'
|-CXXMethodDecl 0x5577877f83a8 <line:88:5, line:89:42> line:88:17 push_success 'void (Storage::index_type, Storage::index_type, Storage::index_type, Packet *)' inline
| |-ParmVarDecl 0x5577877f8060 <col:30, col:50> col:50 h 'Storage::index_type':'unsigned int'
| |-ParmVarDecl 0x5577877f8128 <col:53, col:73> col:73 t 'Storage::index_type':'unsigned int'
| |-ParmVarDecl 0x5577877f81f0 <line:89:9, col:29> col:29 nt 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x5577877f8268 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5577877f8508 <line:90:5, col:39> col:17 push_failure 'void (Packet *)' inline
| `-ParmVarDecl 0x5577877f8478 <col:30, col:38> col:38 p 'Packet *'
|-CXXMethodDecl 0x5577877f87e8 <line:91:5, line:92:27> line:91:20 pull_success 'Packet *(Storage::index_type, Storage::index_type)' inline
| |-ParmVarDecl 0x5577877f8610 <col:33, col:53> col:53 h 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x5577877f86d8 <line:92:5, col:25> col:25 nh 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5577877f88b8 <line:93:5, col:33> col:20 pull_failure 'Packet *()' inline
|-CXXConstructorDecl 0x5577877f8988 <line:68:7> col:7 implicit FullNoteQueue 'void (const FullNoteQueue &)' inline default_delete noexcept-unevaluated 0x5577877f8988
| `-ParmVarDecl 0x5577877f8a98 <col:7> col:7 'const FullNoteQueue &'
|-CXXConstructorDecl 0x5577877f8b38 <col:7> col:7 implicit FullNoteQueue 'void (FullNoteQueue &&)' inline default_delete noexcept-unevaluated 0x5577877f8b38
| `-ParmVarDecl 0x5577877f8c48 <col:7> col:7 'FullNoteQueue &&'
|-CXXMethodDecl 0x5577877f8ce8 <col:7> col:7 implicit operator= 'FullNoteQueue &(const FullNoteQueue &)' inline default_delete noexcept-unevaluated 0x5577877f8ce8
| `-ParmVarDecl 0x5577877f8df8 <col:7> col:7 'const FullNoteQueue &'
|-CXXMethodDecl 0x5577877f8e68 <col:7> col:7 implicit operator= 'FullNoteQueue &(FullNoteQueue &&)' inline default_delete noexcept-unevaluated 0x5577877f8e68
| `-ParmVarDecl 0x5577877f8f78 <col:7> col:7 'FullNoteQueue &&'
`-CXXDestructorDecl 0x5577877f9000 <col:7> col:7 implicit used ~FullNoteQueue 'void () noexcept' inline default
  |-Overrides: [ 0x5577877f6fd0 NotifierQueue::~NotifierQueue 'void () noexcept' ]
  `-CompoundStmt 0x5577877fc810 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.FullNoteQueue = type { %class.NotifierQueue, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.FullNoteQueue = type { %class.NotifierQueue, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSafeQueue
         0 |   class FullNoteQueue (primary base)
         0 |     class NotifierQueue (primary base)
         0 |       class SimpleQueue (primary base)
         0 |         class Element (primary base)
         0 |           (Element vtable pointer)
         8 |           class Element::Port *[2] _ports
        24 |           class Element::Port [4] _inline_ports
        88 |           int [2] _nports
        96 |           class Router * _router
       104 |           int _eindex
       108 |         class Storage (base)
       108 |           Storage::index_type _capacity
       112 |           volatile Storage::index_type _head
       116 |           volatile Storage::index_type _tail
       120 |         class Packet *volatile * _q
       128 |         volatile int _drops
       132 |         int _highwater_length
       136 |       int _sleepiness
       144 |       class ActiveNotifier _empty_note
       144 |         class Notifier (primary base)
       144 |           (Notifier vtable pointer)
       152 |           class NotifierSignal _signal
       152 |             union NotifierSignal::vmvalue _v
       152 |               class atomic_uint32_t * v1
       152 |               struct NotifierSignal::vmpair * vm
       160 |             uint32_t _mask
       168 |           enum Notifier::SearchOp _search_op
       176 |         class Task * _listener1
       184 |         ActiveNotifier::task_or_signal_t * _listeners
       192 |     class ActiveNotifier _full_note
       192 |       class Notifier (primary base)
       192 |         (Notifier vtable pointer)
       200 |         class NotifierSignal _signal
       200 |           union NotifierSignal::vmvalue _v
       200 |             class atomic_uint32_t * v1
       200 |             struct NotifierSignal::vmpair * vm
       208 |           uint32_t _mask
       216 |         enum Notifier::SearchOp _search_op
       224 |       class Task * _listener1
       232 |       ActiveNotifier::task_or_signal_t * _listeners
       240 |   class atomic_uint32_t _xhead
       240 |     uint32_t _val
       244 |   class atomic_uint32_t _xtail
       244 |     uint32_t _val
           | [sizeof=248, dsize=248, align=8,
           |  nvsize=248, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577877fae98 <../elements/standard/threadsafequeue.hh:54:1, line:72:1> line:54:7 class ThreadSafeQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'FullNoteQueue'
|-CXXRecordDecl 0x5577877faff8 <col:1, col:7> col:7 implicit referenced class ThreadSafeQueue
|-AccessSpecDecl 0x5577877fb088 <col:48, col:54> col:48 public
|-CXXConstructorDecl 0x5577877fb110 <line:56:5, col:21> col:5 ThreadSafeQueue 'void ()'
|-CXXMethodDecl 0x5577877fb210 <line:58:5, col:64> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5577877f7490 FullNoteQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x5577877fc4a0 <col:36, col:64>
|   `-ReturnStmt 0x5577877fc490 <col:38, col:45>
|     `-ImplicitCastExpr 0x5577877fc478 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5577877fc450 <col:45> 'const char [16]' lvalue "ThreadSafeQueue"
|-CXXMethodDecl 0x5577877fb360 <line:59:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5577877f75e0 FullNoteQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x5577877fb2c8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x5577877fb640 <line:61:5, col:66> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5577877f7ba0 FullNoteQueue::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5577877fb4f0 <col:26, col:42> col:42 conf 'Vector<String> &'
| `-ParmVarDecl 0x5577877fb568 <col:48, col:62> col:62 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5577877fb810 <line:62:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x5577877e38c0 SimpleQueue::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5577877fb700 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x5577877fb778 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x5577877fb9e8 <line:64:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5577877f7d78 FullNoteQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5577877fb8d8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5577877fb950 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x5577877fbb40 <line:65:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x5577877f7ed0 FullNoteQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x5577877fbab0 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x5577877fbbe8 <line:67:3, col:10> col:3 private
|-FieldDecl 0x5577877fbc20 <line:69:5, col:21> col:21 referenced _xhead 'atomic_uint32_t'
|-FieldDecl 0x5577877fbc80 <line:70:5, col:21> col:21 referenced _xtail 'atomic_uint32_t'
|-CXXConstructorDecl 0x5577877fbcf8 <line:54:7> col:7 implicit ThreadSafeQueue 'void (const ThreadSafeQueue &)' inline default_delete noexcept-unevaluated 0x5577877fbcf8
| `-ParmVarDecl 0x5577877fbe08 <col:7> col:7 'const ThreadSafeQueue &'
|-CXXConstructorDecl 0x5577877fbea8 <col:7> col:7 implicit ThreadSafeQueue 'void (ThreadSafeQueue &&)' inline default_delete noexcept-unevaluated 0x5577877fbea8
| `-ParmVarDecl 0x5577877fbfb8 <col:7> col:7 'ThreadSafeQueue &&'
|-CXXMethodDecl 0x5577877fc058 <col:7> col:7 implicit operator= 'ThreadSafeQueue &(const ThreadSafeQueue &)' inline default_delete noexcept-unevaluated 0x5577877fc058
| `-ParmVarDecl 0x5577877fc168 <col:7> col:7 'const ThreadSafeQueue &'
|-CXXMethodDecl 0x5577877fc1d8 <col:7> col:7 implicit operator= 'ThreadSafeQueue &(ThreadSafeQueue &&)' inline default_delete noexcept-unevaluated 0x5577877fc1d8
| `-ParmVarDecl 0x5577877fc2e8 <col:7> col:7 'ThreadSafeQueue &&'
`-CXXDestructorDecl 0x5577877fc370 <col:7> col:7 implicit ~ThreadSafeQueue 'void ()' inline default noexcept-unevaluated 0x5577877fc370
  `-Overrides: [ 0x5577877f9000 FullNoteQueue::~FullNoteQueue 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSafeQueue = type { %class.FullNoteQueue, %class.atomic_uint32_t, %class.atomic_uint32_t }
  NonVirtualBaseLLVMType:%class.ThreadSafeQueue = type { %class.FullNoteQueue, %class.atomic_uint32_t, %class.atomic_uint32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778768b778 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55778768b8a8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55778768c398 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557787688078 prev 0x557787704350 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557787688170 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x557787688200 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x557787688260 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x557787688308 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x557787688428 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x5577876885c8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x557787688508 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x557787688818 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x557787688688 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x557787688708 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x557787688970 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x5577876888e0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x557787688af8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x557787688a30 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x557787688ca8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x557787688be8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x557787688da0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55778768c570 <col:21, line:58:5>
|   `-IfStmt 0x55778768c558 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55778768c4c0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55778768c490 <col:6> '<bound member function type>' ->scheduled 0x5577876895f8
|     |   `-ImplicitCastExpr 0x55778768c4e0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55778768c480 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55778768c538 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55778768c508 <col:6> '<bound member function type>' ->unschedule 0x55778768ac20
|         `-CXXThisExpr 0x55778768c4f8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x557787688ea0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55778768c710 <col:26, line:65:5>
|   |-BinaryOperator 0x55778768c630 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55778768c5c8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55778768b8a8
|   | | `-MemberExpr 0x55778768c598 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55778768b968
|   | |   `-CXXThisExpr 0x55778768c588 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55778768c618 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55778768c5f8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55778768bdc8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55778768c6f0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55778768c660 <col:2> 'void *' lvalue ->_thunk 0x55778768b9e8
|     | `-CXXThisExpr 0x55778768c650 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55778768c6c8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55778768c690 <col:20> 'int' 1
|-CXXMethodDecl 0x557787688fe0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x557787688f50 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55778768c870 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55778768c760 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55778768c730 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x557787688f50 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55778768c850 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55778768c820 <col:2> '<bound member function type>' ->assign 0x557787688ea0
|       `-CXXThisExpr 0x55778768c810 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x5577876891b0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x557787689098 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x557787689118 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55778773cd50 <col:58, line:79:5>
|   |-BinaryOperator 0x55778773cc98 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55778773cc30 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55778768b8a8
|   | | `-MemberExpr 0x55778768c8a0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55778768b968
|   | |   `-CXXThisExpr 0x55778768c890 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55778773cc80 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55778773cc60 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x557787689098 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55778773cd30 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55778773ccc8 <col:2> 'void *' lvalue ->_thunk 0x55778768b9e8
|     | `-CXXThisExpr 0x55778773ccb8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55778773cd18 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55778773ccf8 <col:11> 'void *' lvalue ParmVar 0x557787689118 'user_data' 'void *'
|-CXXMethodDecl 0x557787689300 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x557787689270 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55778773cee8 <col:35, line:87:5>
|   |-BinaryOperator 0x55778773ce18 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55778773cdb0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55778768b8a8
|   | | `-MemberExpr 0x55778773cd80 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55778768b968
|   | |   `-CXXThisExpr 0x55778773cd70 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55778773ce00 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55778773cde0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55778768bfa0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55778773cec8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55778773ce48 <col:2> 'void *' lvalue ->_thunk 0x55778768b9e8
|     | `-CXXThisExpr 0x55778773ce38 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55778773ceb0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55778773ce98 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55778773ce78 <col:11> 'Element *' lvalue ParmVar 0x557787689270 'element' 'Element *'
|-CXXMethodDecl 0x557787689448 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x5577876893b8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55778773d080 <col:29, line:94:5>
|   |-BinaryOperator 0x55778773cfb0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55778773cf48 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55778768b8a8
|   | | `-MemberExpr 0x55778773cf18 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55778768b968
|   | |   `-CXXThisExpr 0x55778773cf08 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55778773cf98 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55778773cf78 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55778768c178 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55778773d060 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55778773cfe0 <col:2> 'void *' lvalue ->_thunk 0x55778768b9e8
|     | `-CXXThisExpr 0x55778773cfd0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55778773d048 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55778773d030 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55778773d010 <col:11> 'Task *' lvalue ParmVar 0x5577876893b8 'task' 'Task *'
|-CXXMethodDecl 0x557787689538 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55778773d160 <col:37, line:100:5>
|   `-ReturnStmt 0x55778773d150 <line:99:2, col:19>
|     `-BinaryOperator 0x55778773d130 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55778773d100 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55778773d0b0 <col:9> 'Element *const' lvalue ->_owner 0x55778768ba48
|       |   `-CXXThisExpr 0x55778773d0a0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55778773d118 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55778773d0e0 <col:19> 'int' 0
|-CXXMethodDecl 0x5577876895f8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55778773d220 <col:35, line:105:5>
|   `-ReturnStmt 0x55778773d210 <line:104:2, col:23>
|     `-BinaryOperator 0x55778773d1f0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55778773d1d8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55778773d188 <col:9> 'const int' lvalue ->_schedpos1 0x55778768b6c8
|       |   `-CXXThisExpr 0x55778773d178 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55778773d1b8 <col:23> 'int' 0
|-CXXMethodDecl 0x5577876896b8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55778773d288 <col:51, line:118:5>
|   `-ReturnStmt 0x55778773d278 <line:117:2, col:9>
|     `-MemberExpr 0x55778773d248 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55778768b728
|       `-CXXThisExpr 0x55778773d238 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x557787689778 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55778773d7e0 <col:37, line:136:5>
|   `-IfStmt 0x55778773d7b8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55778773d348 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55778773d330 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55778773d310 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55778773d2e0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x557787696428
|     |       `-MemberExpr 0x55778773d2b0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55778768b728
|     |         `-CXXThisExpr 0x55778773d2a0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55778773d728 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55778773d710 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55778773d6e0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55778773d6c8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55778773d690 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55778773d678 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55778773d658 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5577876c4c00 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55778773d5f8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55778773d5e0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55778773d508 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55778773d4f0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55778773d4d0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5577876c48c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55778773d470 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55778773d370 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55778768b728
|     |         |     |   `-CXXThisExpr 0x55778773d360 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55778773d4b8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55778773d4a0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55778773d450 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55778773d438 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55778773d3d8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5577876b7f20 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55778773d640 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55778773d628 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55778773d5c0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55778773d5a8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55778773d578 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x557787513470 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55778773d7a8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55778773d778 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55778773d748 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55778768b728
|           `-CXXThisExpr 0x55778773d738 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x557787689838 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55778773d8c8 <col:35, line:141:5>
|   `-ReturnStmt 0x55778773d8b8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55778773d880 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55778773d850 <col:9, col:17> '<bound member function type>' ->router 0x557787716ab0
|         `-ImplicitCastExpr 0x55778773d8a0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55778773d838 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55778773d808 <col:9> 'Element *const' lvalue ->_owner 0x55778768ba48
|               `-CXXThisExpr 0x55778773d7f8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5577876898f8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55778773d948 <col:37, line:146:5>
|   `-ReturnStmt 0x55778773d938 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55778773d920 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55778773d8f0 <col:9> 'Element *const' lvalue ->_owner 0x55778768ba48
|         `-CXXThisExpr 0x55778773d8e0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5577876899b8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55778773d9c8 <col:41, line:151:5>
|   `-ReturnStmt 0x55778773d9b8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55778773d9a0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55778773d970 <col:9> 'RouterThread *const' lvalue ->_thread 0x55778768baa8
|         `-CXXThisExpr 0x55778773d960 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x557787689a80 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x557787689c40 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x557787689b30 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x557787689ba8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55778768c388 <col:50> 'bool' false
|-CXXMethodDecl 0x557787689dc8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x557787689d00 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x557787689f10 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x557787689e80 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55778768a058 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x557787689fc8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55778768a1a0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55778768a110 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55778768a2e8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55778768a258 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55778768a3b0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55778773db30 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55778773db18 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55778773dac0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55778773d9f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x557787689f10
|       | `-CXXThisExpr 0x55778773d9e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55778773db00 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55778773dae8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55778773daa0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55778773da88 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55778773da58 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x557787513470 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55778768a4f0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55778768a460 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55778768a638 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55778768a5a8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55778773dcb8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55778773dca0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55778773dc48 <col:2, col:40> 'void'
|       |-MemberExpr 0x55778773db58 <col:2> '<bound member function type>' ->schedule_after 0x55778768a4f0
|       | `-CXXThisExpr 0x55778773db48 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55778773dc88 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55778773dc70 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55778773dc08 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55778773dbd8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55778773db98 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778768a5a8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55778773dbf0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55778773dbb8 <col:38> 'int' 0
|-CXXMethodDecl 0x55778768a780 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55778768a6f0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55778773df28 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55778773df10 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55778773deb8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55778773dce0 <col:2> '<bound member function type>' ->schedule_after 0x55778768a4f0
|       | `-CXXThisExpr 0x55778773dcd0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55778773def8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55778773dee0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55778773de60 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55778773de48 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55778773ddb8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x557787698218 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55778773dea0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55778773de88 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55778773dd98 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778768a6f0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778768a8c8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55778768a838 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55778773e108 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55778773e0f0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55778773e098 <col:2, col:38> 'void'
|       |-MemberExpr 0x55778773df50 <col:2> '<bound member function type>' ->schedule_at_steady 0x557787689f10
|       | `-CXXThisExpr 0x55778773df40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55778773e0d8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55778773e0c0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55778773e060 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55778773e048 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55778773e028 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5577876c48c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55778773dff8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55778773dfe0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55778773df90 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55778768b728
|             |     `-CXXThisExpr 0x55778773df80 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55778773dfc0 <col:33> 'const Timestamp' lvalue ParmVar 0x55778768a838 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55778768aa10 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55778768a980 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55778773e3e0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55778773e3c8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55778773e370 <col:2, col:79> 'void'
|       |-MemberExpr 0x55778773e130 <col:2> '<bound member function type>' ->schedule_at_steady 0x557787689f10
|       | `-CXXThisExpr 0x55778773e120 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55778773e3b0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55778773e398 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55778773e330 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55778773e268 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55778773e250 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55778773e1e0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55778773e1b0 <col:31, col:41> '<bound member function type>' .sec 0x557787514f68
|             | |     `-ImplicitCastExpr 0x55778773e200 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55778773e180 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55778768b728
|             | |         `-CXXThisExpr 0x55778773e170 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55778773e238 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55778773e218 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778768a980 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55778773e2f8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55778773e2c8 <col:60, col:70> '<bound member function type>' .subsec 0x557787515660
|                 `-ImplicitCastExpr 0x55778773e318 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55778773e298 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55778768b728
|                     `-CXXThisExpr 0x55778773e288 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55778768ab58 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55778768aac8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55778773e718 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55778773e700 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55778773e6a8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55778773e408 <col:2> '<bound member function type>' ->schedule_at_steady 0x557787689f10
|       | `-CXXThisExpr 0x55778773e3f8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55778773e6e8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55778773e6d0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55778773e670 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55778773e658 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55778773e638 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5577876c48c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55778773e5d8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55778773e5c0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55778773e448 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55778768b728
|             |     `-CXXThisExpr 0x55778773e438 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55778773e620 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55778773e608 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55778773e568 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55778773e550 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55778773e520 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x557787698218 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55778773e5a8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55778773e590 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55778773e500 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55778768aac8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778768ac20 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55778768ace0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55778773ebe0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55778773e770 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55778773e740 <col:2> '<bound member function type>' ->unschedule 0x55778768ac20
|   |   `-CXXThisExpr 0x55778773e730 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55778773ebc8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55778773eb90 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55778773eb78 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55778773e828 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5577873ac538 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55778773e7a0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55778768b728
|       | `-CXXThisExpr 0x55778773e790 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55778773e810 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55778773e7e0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55778768ada0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55778773ef38 <col:42, line:310:5>
|   |-IfStmt 0x55778773ed80 <line:306:2, line:307:23>
|   | |-CallExpr 0x55778773ecb0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55778773ec98 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55778773ec38 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x5577876b6390 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55778773ed70 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55778773ed58 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55778773ed28 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55778773ed10 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55778773ece0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55778773ef28 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55778773ef10 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55778773eee0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55778773eec8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55778773ee88 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55778773ee70 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55778773ee40 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x557787698530 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55778773eeb0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55778773ee20 <col:30> 'int' 500
|-CXXMethodDecl 0x55778768aee0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55778768ae50 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55778768af88 <col:69> "" ""
|-CXXMethodDecl 0x55778768b098 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55778768b008 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55778768b140 <col:70> "" ""
|-CXXMethodDecl 0x55778768b250 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55778768b1c0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55778768b2f8 <col:71> "" ""
|-CXXMethodDecl 0x55778768b408 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55778768b378 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55778768b4b0 <col:72> "" ""
|-EnumDecl 0x55778768b520 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55778768b620 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55778768b670 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778768b600 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55778768b5e0 <col:25> 'int' 1
|-AccessSpecDecl 0x55778768b688 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55778768b6c8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55778768b728 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55778768b778 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55778768b8a8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55778768c398 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55778768b968 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55778768b9e8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55778768ba48 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55778768baa8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55778768bbf8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55778768bb08 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55778768bdc8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55778768bcb0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55778768bd30 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55778768bfa0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55778768be88 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55778768bf08 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55778768c178 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55778768c060 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55778768c0e0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55778768c348 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577874d85d0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5577874d86e8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5577874d8788 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5577874d87e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5577874d8848 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5577874d88f8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577874d8c00 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5577874d8d18 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5577874d8dc0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5577874d8e28 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5577874d8eb8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5577874def50 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5577874df388 <col:12>
|-CXXConstructorDecl 0x5577874df058 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5577874df168 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5577874d8dc0 'data' 'const char *'
| | `-ImplicitCastExpr 0x5577874e1910 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5577874e18e0 <col:12> 'const char *const' lvalue .data 0x5577874d8dc0
| |     `-DeclRefExpr 0x5577874e18c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874df168 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5577874d8e28 'length' 'int'
| | `-ImplicitCastExpr 0x5577874e19a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5577874e1970 <col:12> 'const int' lvalue .length 0x5577874d8e28
| |     `-DeclRefExpr 0x5577874e1950 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874df168 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5577874d8eb8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5577874e1a30 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5577874e1a00 <col:12> 'String::memo_t *const' lvalue .memo 0x5577874d8eb8
| |     `-DeclRefExpr 0x5577874e19e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874df168 '' 'const String::rep_t &'
| `-CompoundStmt 0x5577874e1a88 <col:12>
|-CXXConstructorDecl 0x5577874df208 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5577874df208
| `-ParmVarDecl 0x5577874df318 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5577874e4870 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5577874f0288 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5577874f0398 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5577874f08b0 <col:12>
|   |-BinaryOperator 0x5577874f06c8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5577874f0680 <col:12> 'const char *' lvalue ->data 0x5577874d8dc0
|   | | `-CXXThisExpr 0x5577874f0670 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5577874f06b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5577874f0640 <col:12> 'const char *const' lvalue .data 0x5577874d8dc0
|   |     `-DeclRefExpr 0x5577874f0620 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874f0398 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5577874f0790 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5577874f0748 <col:12> 'int' lvalue ->length 0x5577874d8e28
|   | | `-CXXThisExpr 0x5577874f0738 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5577874f0778 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5577874f0708 <col:12> 'const int' lvalue .length 0x5577874d8e28
|   |     `-DeclRefExpr 0x5577874f06e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874f0398 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5577874f0858 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5577874f0810 <col:12> 'String::memo_t *' lvalue ->memo 0x5577874d8eb8
|   | | `-CXXThisExpr 0x5577874f0800 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5577874f0840 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5577874f07d0 <col:12> 'String::memo_t *const' lvalue .memo 0x5577874d8eb8
|   |     `-DeclRefExpr 0x5577874f07b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874f0398 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5577874f08a0 <col:12>
|     `-UnaryOperator 0x5577874f0888 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5577874f0878 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5577874f0408 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5577874f0408
  `-ParmVarDecl 0x5577874f0518 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5577874cfb40 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5577874cfc58 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5577874cfce8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5577874cfd28 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5577871a1e00 'const char *'
|   `-QualType 0x5577871a1351 'const char' const
|     `-BuiltinType 0x5577871a1350 'char'
|-TypedefDecl 0x5577874cfdb0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5577874cfd80 'String::const_iterator' sugar
|   |-Typedef 0x5577874cfd28 'const_iterator'
|   `-PointerType 0x5577871a1e00 'const char *'
|     `-QualType 0x5577871a1351 'const char' const
|       `-BuiltinType 0x5577871a1350 'char'
|-TypedefDecl 0x5577874cff20 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5577874cfe90 'int (String::*)() const'
|   |-RecordType 0x5577874cfbd0 'String'
|   | `-CXXRecord 0x5577874cfb40 'String'
|   `-ParenType 0x5577874cfe30 'int () const' sugar
|     `-FunctionProtoType 0x5577874a39c0 'int () const' const cdecl
|       `-BuiltinType 0x5577871a13b0 'int'
|-TypedefDecl 0x5577874cff88 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5577872f85c0 'int64_t' sugar
|   |-Typedef 0x55778720a2a0 'int64_t'
|   `-TypedefType 0x5577871e3510 '__int64_t' sugar
|     |-Typedef 0x5577871e30e8 '__int64_t'
|     `-BuiltinType 0x5577871a13d0 'long'
|-TypedefDecl 0x5577874cfff0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5577872f84e0 'uint64_t' sugar
|   |-Typedef 0x55778720a440 'uint64_t'
|   `-TypedefType 0x5577871e35a0 '__uint64_t' sugar
|     |-Typedef 0x5577871e3158 '__uint64_t'
|     `-BuiltinType 0x5577871a1470 'unsigned long'
|-TypedefDecl 0x5577874d0080 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5577874d0050 'String::intmax_t' sugar
|   |-Typedef 0x5577874cff88 'intmax_t'
|   `-TypedefType 0x5577872f85c0 'int64_t' sugar
|     |-Typedef 0x55778720a2a0 'int64_t'
|     `-TypedefType 0x5577871e3510 '__int64_t' sugar
|       |-Typedef 0x5577871e30e8 '__int64_t'
|       `-BuiltinType 0x5577871a13d0 'long'
|-TypedefDecl 0x5577874d0110 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5577874d00e0 'String::uintmax_t' sugar
|   |-Typedef 0x5577874cfff0 'uintmax_t'
|   `-TypedefType 0x5577872f84e0 'uint64_t' sugar
|     |-Typedef 0x55778720a440 'uint64_t'
|     `-TypedefType 0x5577871e35a0 '__uint64_t' sugar
|       |-Typedef 0x5577871e3158 '__uint64_t'
|       `-BuiltinType 0x5577871a1470 'unsigned long'
|-CXXConstructorDecl 0x5577874d01d0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5577874d0378 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5577874d02b8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5577874d0528 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5577874d0468 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5577874d0680 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5577874d05f0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5577874d0898 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5577874d0748 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5577874d07c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5577874d0ab8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5577874d0968 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5577874d09e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5577874d0cd8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5577874d0b88 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5577874d0c08 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5577874d0ef8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5577874d0da8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5577874d0e28 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5577874d1088 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5577874d0fc0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5577874d1208 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5577874d1148 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5577874d1398 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5577874d12d0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5577874d14f0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5577874d1460 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5577874d1648 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5577874d15b8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5577874d17a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5577874d1710 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5577874d1928 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5577874d1868 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5577874d1ab8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5577874d19f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5577874d1c48 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5577874d1b80 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5577874d1dd8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5577874d1d10 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5577874d1ed0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5577874d1ff8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5577874d2178 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5577874d20b0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5577874d22c8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5577874d2238 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5577874d2380 <col:63> "" ""
|-CXXMethodDecl 0x5577874d24c8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5577874d2408 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5577874d26d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5577874d2588 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5577874d2608 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5577874d28f8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5577874d27a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5577874d2820 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5577874d2bd8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5577874d29b8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5577874d2a38 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5577874dea20 <col:55> 'int' 10
| `-ParmVarDecl 0x5577874d2ab0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5577874dea40 <col:76> 'bool' true
|-CXXMethodDecl 0x5577874d2eb8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5577874d2ca0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5577874d2d20 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5577874dea50 <col:56> 'int' 10
| `-ParmVarDecl 0x5577874d2d98 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5577874dea70 <col:77> 'bool' true
|-CXXMethodDecl 0x5577874d2fc0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5577874d3088 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5577874d3150 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5577874d31f0 <col:20>
| `-OptimizeNoneAttr 0x5577874d3248 <col:30>
|-CXXConversionDecl 0x5577874d3338 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5577874d3408 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5577874d34c8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5577874d35b8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5577874d3678 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5577874d37f8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5577874d3730 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5577874d3948 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5577874d38b8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5577874d3a38 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5577874d3af8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5577874d3d48 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5577874d3bb0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5577874d3c30 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5577874d3fa8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5577874d3e10 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5577874d3e90 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5577874d4078 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5577874d4288 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5577874d4130 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5577874d41b0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5577874d44a8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5577874d4350 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5577874d43d0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5577874d4638 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5577874d4570 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5577874d4728 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5577874d4898 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5577874d47d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5577874d4aa8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5577874d4958 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5577874d49d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5577874d4cc0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5577874d4b68 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5577874d4be0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5577874d4e50 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5577874d4d80 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5577874d5070 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5577874d4f10 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5577874d4f90 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5577874d51c0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5577874d5130 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5577874d5398 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5577874d5280 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5577874d5300 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5577874d54e8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5577874d5458 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5577874d5700 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5577874d55a0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5577874d5620 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5577874dea80 <col:39> 'int' 0
|-CXXMethodDecl 0x5577874d5920 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5577874d57c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5577874d5840 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5577874deaa0 <col:48> 'int' 0
|-CXXMethodDecl 0x5577874d5b00 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5577874d59e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5577874d5a60 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5577874deac0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5577874d5bd0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5577874d5c90 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5577874d5d50 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5577874d5e10 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5577874d5ed0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5577874d6078 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5577874d5f80 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5577874d61f8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5577874d6130 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5577874d63d0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5577874d62b8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5577874d6548 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5577874d6488 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5577874d6690 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5577874d6600 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5577874d67e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5577874d6750 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5577874d69b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5577874d68a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5577874d6920 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5577874d6b98 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5577874d6a80 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5577874d6b00 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5577874d6ce8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5577874d6c58 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5577874d6ef8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5577874d6da8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5577874d6e28 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5577874d7058 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5577874d6fc0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5577874d71b0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5577874d7118 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5577874d7258 <col:57> "" ""
|-CXXMethodDecl 0x5577874d7368 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5577874d72d8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5577874d74b8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5577874d7428 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5577874d7638 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5577874d7570 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5577874d7700 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5577874d77c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5577874d7880 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5577874d7920 <col:49> "" ""
|-CXXMethodDecl 0x5577874d79b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5577874d7a70 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5577874d7b60 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5577874d7c28 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5577874d7ce8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5577874d7da8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5577874d7ea0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5577874d7f68 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5577874d8030 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5577874d8208 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5577874d80e8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5577874d8168 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5577874d8430 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5577874d82d0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5577874d8350 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5577874d8540 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5577874d85a8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5577874d85d0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5577874d86e8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5577874d8788 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5577874d87e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5577874d8848 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5577874d88f8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5577874d8960 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5577874d8b98 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5577874d8be8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577874d8b78 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5577874d8a88 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5577874d8a30 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5577874d8a70 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5577874d8a50 <col:32> 'int' 8
|-CXXRecordDecl 0x5577874d8c00 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5577874d8d18 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5577874d8dc0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5577874d8e28 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5577874d8eb8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5577874def50 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5577874df388 <col:12>
| |-CXXConstructorDecl 0x5577874df058 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5577874df168 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5577874d8dc0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5577874e1910 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5577874e18e0 <col:12> 'const char *const' lvalue .data 0x5577874d8dc0
| | |     `-DeclRefExpr 0x5577874e18c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874df168 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5577874d8e28 'length' 'int'
| | | `-ImplicitCastExpr 0x5577874e19a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5577874e1970 <col:12> 'const int' lvalue .length 0x5577874d8e28
| | |     `-DeclRefExpr 0x5577874e1950 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874df168 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5577874d8eb8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5577874e1a30 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5577874e1a00 <col:12> 'String::memo_t *const' lvalue .memo 0x5577874d8eb8
| | |     `-DeclRefExpr 0x5577874e19e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874df168 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5577874e1a88 <col:12>
| |-CXXConstructorDecl 0x5577874df208 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5577874df208
| | `-ParmVarDecl 0x5577874df318 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5577874e4870 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5577874f0288 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5577874f0398 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5577874f08b0 <col:12>
| |   |-BinaryOperator 0x5577874f06c8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5577874f0680 <col:12> 'const char *' lvalue ->data 0x5577874d8dc0
| |   | | `-CXXThisExpr 0x5577874f0670 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5577874f06b0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5577874f0640 <col:12> 'const char *const' lvalue .data 0x5577874d8dc0
| |   |     `-DeclRefExpr 0x5577874f0620 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874f0398 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5577874f0790 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5577874f0748 <col:12> 'int' lvalue ->length 0x5577874d8e28
| |   | | `-CXXThisExpr 0x5577874f0738 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5577874f0778 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5577874f0708 <col:12> 'const int' lvalue .length 0x5577874d8e28
| |   |     `-DeclRefExpr 0x5577874f06e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874f0398 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5577874f0858 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5577874f0810 <col:12> 'String::memo_t *' lvalue ->memo 0x5577874d8eb8
| |   | | `-CXXThisExpr 0x5577874f0800 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5577874f0840 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5577874f07d0 <col:12> 'String::memo_t *const' lvalue .memo 0x5577874d8eb8
| |   |     `-DeclRefExpr 0x5577874f07b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5577874f0398 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5577874f08a0 <col:12>
| |     `-UnaryOperator 0x5577874f0888 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5577874f0878 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5577874f0408 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5577874f0408
|   `-ParmVarDecl 0x5577874f0518 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5577874d8f30 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5577874d9178 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5577874d8f98 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5577874d9018 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5577874d9090 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5577874def10 <col:79, line:261:5>
|   |-BinaryOperator 0x5577874deb88 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5577874deb20 <col:2, col:5> 'const char *' lvalue .data 0x5577874d8dc0
|   | | `-MemberExpr 0x5577874deaf0 <col:2> 'String::rep_t' lvalue ->_r 0x5577874d8f30
|   | |   `-CXXThisExpr 0x5577874deae0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5577874deb70 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577874deb50 <col:12> 'const char *' lvalue ParmVar 0x5577874d8f98 'data' 'const char *'
|   |-BinaryOperator 0x5577874dec50 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5577874debe8 <col:2, col:5> 'int' lvalue .length 0x5577874d8e28
|   | | `-MemberExpr 0x5577874debb8 <col:2> 'String::rep_t' lvalue ->_r 0x5577874d8f30
|   | |   `-CXXThisExpr 0x5577874deba8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5577874dec38 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5577874dec18 <col:14> 'int' lvalue ParmVar 0x5577874d9018 'length' 'int'
|   `-IfStmt 0x5577874deef8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5577874ded70 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5577874ded58 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5577874ded38 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5577874ded18 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5577874decb0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5577874d8eb8
|     |       | `-MemberExpr 0x5577874dec80 <col:7> 'String::rep_t' lvalue ->_r 0x5577874d8f30
|     |       |   `-CXXThisExpr 0x5577874dec70 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5577874ded00 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5577874dece0 <col:17> 'String::memo_t *' lvalue ParmVar 0x5577874d9090 'memo' 'String::memo_t *'
|     `-CallExpr 0x5577874deed0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5577874deeb8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5577874dedc0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5577874c7ba8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5577874dee28 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5577874d8788
|         `-ImplicitCastExpr 0x5577874dee10 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5577874dedf0 <col:27> 'String::memo_t *' lvalue ParmVar 0x5577874d9090 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5577874d9428 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5577874d9248 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5577874d92c8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5577874d9340 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5577874d8f30 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5577874df398 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5577874df528 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5577874df490 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5577874df400 <col:2> '<bound member function type>' ->assign_memo 0x5577874d9178
|     | `-ImplicitCastExpr 0x5577874df4c8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5577874df3f0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5577874df4e0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5577874df430 <col:14> 'const char *' lvalue ParmVar 0x5577874d9248 'data' 'const char *'
|     |-ImplicitCastExpr 0x5577874df4f8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5577874df450 <col:20> 'int' lvalue ParmVar 0x5577874d92c8 'length' 'int'
|     `-ImplicitCastExpr 0x5577874df510 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5577874df470 <col:28> 'String::memo_t *' lvalue ParmVar 0x5577874d9340 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5577874d95b8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5577874d94f8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5577874df780 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5577874df700 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5577874df550 <col:2> '<bound member function type>' ->assign_memo 0x5577874d9178
|     | `-CXXThisExpr 0x5577874df540 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5577874df738 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5577874df5d0 <col:14, col:19> 'const char *' lvalue .data 0x5577874d8dc0
|     |   `-MemberExpr 0x5577874df5a0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5577874d8f30
|     |     `-DeclRefExpr 0x5577874df580 <col:14> 'const String' lvalue ParmVar 0x5577874d94f8 'x' 'const String &'
|     |-ImplicitCastExpr 0x5577874df750 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5577874df650 <col:25, col:30> 'int' lvalue .length 0x5577874d8e28
|     |   `-MemberExpr 0x5577874df620 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5577874d8f30
|     |     `-DeclRefExpr 0x5577874df600 <col:25> 'const String' lvalue ParmVar 0x5577874d94f8 'x' 'const String &'
|     `-ImplicitCastExpr 0x5577874df768 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5577874df6d0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5577874d8eb8
|         `-MemberExpr 0x5577874df6a0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5577874d8f30
|           `-DeclRefExpr 0x5577874df680 <col:38> 'const String' lvalue ParmVar 0x5577874d94f8 'x' 'const String &'
|-CXXMethodDecl 0x5577874d9680 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5577874e0140 <col:31, line:278:5>
|   `-IfStmt 0x5577874e0128 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5577874df820 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5577874df808 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5577874df7d8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5577874d8eb8
|     |     `-MemberExpr 0x5577874df7a8 <col:6> 'String::rep_t' lvalue ->_r 0x5577874d8f30
|     |       `-CXXThisExpr 0x5577874df798 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5577874e0100 <col:15, line:277:2>
|       |-ParenExpr 0x5577874dfcd0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5577874dfca0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5577874df930 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5577874df918 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5577874df900 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5577874df8c0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5577874d8788
|       |   |       `-ImplicitCastExpr 0x5577874df8a8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5577874df878 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5577874d8eb8
|       |   |           `-MemberExpr 0x5577874df848 <col:27> 'String::rep_t' lvalue ->_r 0x5577874d8f30
|       |   |             `-CXXThisExpr 0x5577874df838 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5577874df990 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5577874df970 <col:54> 'int' 0
|       |   `-CallExpr 0x5577874dfc00 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5577874dfbe8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5577874dfb68 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778723ee30 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5577874dfc40 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5577874dfa78 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5577874dfc58 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5577874dfaa8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5577874dfc70 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5577874dfae0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5577874dfc88 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5577874dfb50 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5577874dfb38 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5577874dfb00 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5577874e0020 <line:274:6, line:275:22>
|       | |-CallExpr 0x5577874dfee0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5577874dfec8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5577874dfe40 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5577874c8ff0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5577874dfe10 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5577874d8788
|       | |   `-ImplicitCastExpr 0x5577874dfdf8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5577874dfdc8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5577874d8eb8
|       | |       `-MemberExpr 0x5577874dfd98 <col:40> 'String::rep_t' lvalue ->_r 0x5577874d8f30
|       | |         `-CXXThisExpr 0x5577874dfd88 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5577874dffe0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5577874dffc8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5577874dff08 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5577874dde60 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5577874e0008 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5577874dff68 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5577874d8eb8
|       |       `-MemberExpr 0x5577874dff38 <col:15> 'String::rep_t' lvalue ->_r 0x5577874d8f30
|       |         `-CXXThisExpr 0x5577874dff28 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5577874e00e0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5577874e0078 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5577874d8eb8
|         | `-MemberExpr 0x5577874e0048 <col:6> 'String::rep_t' lvalue ->_r 0x5577874d8f30
|         |   `-CXXThisExpr 0x5577874e0038 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5577874e00c8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5577874e00a8 <col:16> 'int' 0
|-CXXMethodDecl 0x5577874d9918 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5577874d9738 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5577874d97b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5577874d9830 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5577874d99f0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5577874d9c40 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5577874d9aa8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5577874d9b28 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5577874d9ba0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5577874d9e28 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5577874d9d10 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5577874d9d90 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5577874d9f28 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5577874e0218 <col:41, line:286:5>
|   `-ReturnStmt 0x5577874e0208 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5577874e01d8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5577874e01a0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5577874e0188 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5577874e0168 <col:46> 'int' 1
|-CXXMethodDecl 0x5577874da1c8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5577874d9fe0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5577874da060 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5577874da0e0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5577874dde60 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5577874da290 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5577874ddf30 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5577874de100 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5577874ddfe8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5577874de068 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5577874de1c0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5577874de288 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5577874de388 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5577874de400 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5577874de478 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5577874de4e0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5577874de5e0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5577874de630 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5577874de5c0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5577874de5a0 <col:22> 'int' 14
|-CXXMethodDecl 0x5577874de848 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5577874de660 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5577874de6e0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5577874de760 <col:43> col:46 'int'
|-FriendDecl 0x5577874de950 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5577874de9e0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557787743cc0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x557787820e28 <line:167:18>
|-CXXRecordDecl 0x557787820ee8 prev 0x557787743cc0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x557787820ff8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
