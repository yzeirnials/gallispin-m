
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5556810fd218 prev 0x5556810f49b8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5556810fd310 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5556810fd3a0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5556810fd418 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5556810fd4d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5556810fd5a0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5556810fd718 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5556810fd650 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5556810fd7c0 <col:24>
| `-OptimizeNoneAttr 0x5556810fd818 <col:34>
|-CXXMethodDecl 0x5556810fd860 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5556810fdb18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5556810fd910 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5556810fd988 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5556810fda08 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5556810fdbd0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5556810fdc08 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5556810fdc70 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5556810fdcf8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5556810fe018 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5556810fddb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5556810fde28 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5556810fdea0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5556810fdf20 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5556810fe130 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x555681105aa8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x555681105aa8
| `-ParmVarDecl 0x555681105bb8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x555681105c58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x555681105c58
| `-ParmVarDecl 0x555681105d68 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5556812bac78 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5556810f0230 prev 0x5556810effb0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5556810f0328 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5556810f03b8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5556810f0418 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5556810f0508 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5556810f0608 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5556810f07d8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5556810f0688 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5556810f0700 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5556810f0968 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5556810f08a0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5556810f0a10 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5556810f0b48 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5556810f0a80 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5556810f0ce8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5556810f0c28 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5556810f0e88 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5556810f0dc8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5556810f0f30 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5556810f1030 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5556810f1110 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f1010 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5556810f0ff0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5556810f10c0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5556810f1128 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810f10a0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5556810f1080 <col:44> 'int' 2
|-CXXMethodDecl 0x5556810f1270 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5556810f1158 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5556810f11d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5556810f13c8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5556810f1338 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5556810f1608 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5556810f1488 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5556810f1500 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5556810f16b8 <col:20>
| `-OptimizeNoneAttr 0x5556810f1710 <col:30>
|-CXXMethodDecl 0x5556810f1818 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5556810f1750 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5556810f18c0 <col:20>
| `-OptimizeNoneAttr 0x5556810f1918 <col:30>
|-CXXMethodDecl 0x5556810f1968 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5556810f1a30 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5556810f1b48 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5556810f1bd0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5556810f1c58 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5556810f1ce0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x5556810f1d68 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5556810f1df8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5556810f1eb8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5556810f1f40 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x5556810f1fc8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5556810f2050 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5556810f20d8 <line:66:5, col:36> col:23 used PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5556810f2160 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5556810f21f0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5556810f22b0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5556810f2340 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5556810f2490 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5556810f23f8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5556810f2620 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5556810f2550 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5556810f28d0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5556810f26d8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5556810f2758 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5556810f27d8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5556810f2988 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5556810f2a90 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5556810f2d20 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f2a70 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5556810f2a50 <col:33> 'int' 0
| |-EnumConstantDecl 0x5556810f2b20 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5556810f2d38 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f2b00 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5556810f2ae0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5556810f2bb0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5556810f2d50 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f2b90 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5556810f2b70 <col:38> 'int' 90
| |-EnumConstantDecl 0x5556810f2c40 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5556810f2d68 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f2c20 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5556810f2c00 <col:35> 'int' 100
| `-EnumConstantDecl 0x5556810f2cd0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5556810f2d80 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810f2cb0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5556810f2c90 <col:32> 'int' 2000
|-CXXMethodDecl 0x5556810f2dc0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5556810f3200 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5556810f3070 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5556810f30e8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5556810f32d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5556810f3450 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5556810f3380 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5556810f3658 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5556810f3508 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5556810f3580 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5556810f3758 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5556810f37f8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5556810f38c0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5556810f3950 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5556810f3b80 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f3930 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5556810f3910 <col:36> 'int' EnumConstant 0x5556810f38c0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5556810f39a0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5556810f39f0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5556810f3a40 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5556810f3a90 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5556810f3ae0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5556810f3b30 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5556810f3c68 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5556810f3ba8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5556810f3d30 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5556810f3df0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5556810f3eb0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5556810f3f70 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5556810f4088 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5556810f4150 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5556810f42d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5556810f4200 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5556810f43f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5556810f45f8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5556810f44a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5556810f4528 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x555681101f48 <col:54, line:127:5>
|   |-ParenExpr 0x555681101df8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x555681101dc8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x555681101ab8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x555681101a90 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x555681101a78 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x555681101a60 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x555681101a30 <col:31> 'Router *' lvalue ->_router 0x5556810ff910
|   |   |         `-CXXThisExpr 0x555681101a20 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x555681101b18 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555681101af8 <col:48> 'int' 0
|   |   `-CallExpr 0x555681101d28 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x555681101d10 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555681101cf0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555681101d68 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555681101b88 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x555681101d80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555681101ba8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x555681101d98 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555681101be0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x555681101db0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555681101cd8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555681101cc0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555681101c78 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x555681101e90 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x555681101e28 <col:9> 'Router *' lvalue ->_router 0x5556810ff910
|   | | `-CXXThisExpr 0x555681101e18 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x555681101e78 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x555681101e58 <col:19> 'Router *' lvalue ParmVar 0x5556810f44a8 'r' 'Router *'
|   `-BinaryOperator 0x555681101f28 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x555681101ec0 <col:9> 'int' lvalue ->_eindex 0x5556810ff978
|     | `-CXXThisExpr 0x555681101eb0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x555681101f10 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x555681101ef0 <col:19> 'int' lvalue ParmVar 0x5556810f4528 'eindex' 'int'
|-CXXMethodDecl 0x5556810f4780 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5556810f46b8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5556810f4850 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5556810f4918 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5556810f49b8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5556810f4c08 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5556810f4a80 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5556810f4b00 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5556810f4cb8 <col:20>
| `-OptimizeNoneAttr 0x5556810f4d10 <col:30>
|-CXXMethodDecl 0x5556810f4e18 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5556810f4d50 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5556810f4ec0 <col:20>
| `-OptimizeNoneAttr 0x5556810f4f18 <col:30>
|-CXXMethodDecl 0x5556810f4fe8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5556810f4f58 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5556810f5090 <col:20>
| `-OptimizeNoneAttr 0x5556810f50e8 <col:30>
|-CXXMethodDecl 0x5556810f5278 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5556810f5120 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5556810f51a0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5556810f5408 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5556810f5340 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5556810f5558 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5556810f54c8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5556810f56a8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5556810f5618 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5556810f57f8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5556810f5768 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5556810f5ab8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5556810f58b0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5556810f5930 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5556810f59d8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5556810f5b90 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5556810f5c50 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5556810f5f20 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5556810f5dd0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5556810f5e48 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5556810f6048 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5556810f6220 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5556810f6100 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5556810f6180 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5556810f6408 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5556810f62e8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5556810f6368 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5556810f6778 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5556810f64c8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5556810f6540 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5556810f65c0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555681101530 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555681101510 <col:106> 'int' 0
| `-ParmVarDecl 0x5556810f6638 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555681101568 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555681101548 <col:126> 'int' 0
|-CXXMethodDecl 0x5556810f6b18 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5556810f6848 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5556810f68e0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5556810f6960 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5556810f69d8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5556811015a0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555681101580 <col:114> 'int' 0
|-CXXMethodDecl 0x5556810f6ea8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5556810f6bf0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5556810f6c68 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5556810f6ce8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5556811015b8 <col:96> 'int' 0
| `-ParmVarDecl 0x5556810f6d60 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5556811015f8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5556811015d8 <col:116> 'int' 0
|-CXXMethodDecl 0x5556810f7228 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5556810f6f78 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5556810f6ff0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5556810f7070 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555681101630 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555681101610 <col:109> 'int' 0
| `-ParmVarDecl 0x5556810f70e8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555681101668 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555681101648 <col:129> 'int' 0
|-CXXMethodDecl 0x5556810f75a8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5556810f72f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5556810f7370 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5556810f73f0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5556810f7468 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5556811016a0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555681101680 <col:117> 'int' 0
|-CXXMethodDecl 0x5556810f7938 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5556810f7680 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810f76f8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5556810f7778 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5556811016b8 <col:99> 'int' 0
| `-ParmVarDecl 0x5556810f77f0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5556811016f8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5556811016d8 <col:119> 'int' 0
|-CXXMethodDecl 0x5556810f7d58 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5556810f7a08 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5556810f7a88 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5556810f7b00 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5556810f7b80 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555681101730 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555681101710 <col:108> 'int' 0
| `-ParmVarDecl 0x5556810f7c00 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x555681101768 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x555681101748 <col:141> 'int' 0
|-CXXMethodDecl 0x5556810f8178 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5556810f7e30 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5556810f7eb0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5556810f7f28 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5556810f7fa8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5556810f8028 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x555681101780 <col:121> 'int' 0
|-CXXMethodDecl 0x5556810f85a8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5556810f8258 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5556810f82d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5556810f8350 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5556810f83d0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5556811017a0 <col:98> 'int' 0
| `-ParmVarDecl 0x5556810f8450 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5556811017c0 <col:123> 'int' 0
|-CXXMethodDecl 0x5556810f8870 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5556810f8680 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5556810f8700 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5556810f8780 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5556811017e0 <col:80> 'int' 0
|-EnumDecl 0x5556810f8928 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5556810f8a30 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5556810f8cc0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f8a10 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5556810f89f0 <col:42> 'int' 1
| |-EnumConstantDecl 0x5556810f8ac0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5556810f8cd8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f8aa0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5556810f8a80 <col:40> 'int' 2
| |-EnumConstantDecl 0x5556810f8b50 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5556810f8cf0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f8b30 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5556810f8b10 <col:44> 'int' 4
| |-EnumConstantDecl 0x5556810f8be0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5556810f8d08 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810f8bc0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5556810f8ba0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5556810f8c70 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5556810f8d20 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810f8c50 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5556810f8c30 <col:34> 'int' 6
|-CXXMethodDecl 0x5556810f8fd8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5556810f8d48 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5556810f8de8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5556810f8e68 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5556810f8ee0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x555681101898 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x555681101880 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x555681101868 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x555681101848 <col:98, col:105> 'String' (CXXTemporary 0x555681101848)
|           `-CXXTemporaryObjectExpr 0x555681101810 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5556810f9278 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5556810f90a8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5556810f9120 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5556810f9198 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x555681101948 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x555681101930 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x555681101918 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5556811018f8 <col:94, col:101> 'String' (CXXTemporary 0x5556811018f8)
| |         `-CXXTemporaryObjectExpr 0x5556811018c0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x555681102130 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5556811020a8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x555681102078 <col:9> '<bound member function type>' ->add_task_handlers 0x5556810f8fd8
|     | `-CXXThisExpr 0x555681102068 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5556811020e8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x555681101fe8 <col:27> 'Task *' lvalue ParmVar 0x5556810f90a8 'task' 'Task *'
|     |-ImplicitCastExpr 0x555681102100 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x555681102008 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5556810f9120 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x555681102118 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x555681102028 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5556810f8c70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x555681102048 <col:62> 'const String' lvalue ParmVar 0x5556810f9198 'prefix' 'const String &'
|-CXXMethodDecl 0x5556810f9488 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5556810f9340 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5556810f93b8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5556811019f8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5556811019e0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5556811019c8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5556811019a8 <col:70, col:77> 'String' (CXXTemporary 0x5556811019a8)
| |         `-CXXTemporaryObjectExpr 0x555681101970 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x555681102308 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x555681102280 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x555681102250 <col:9> '<bound member function type>' ->add_task_handlers 0x5556810f8fd8
|     | `-CXXThisExpr 0x555681102240 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5556811022c0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5556811021c0 <col:27> 'Task *' lvalue ParmVar 0x5556810f9340 'task' 'Task *'
|     |-ImplicitCastExpr 0x5556811022d8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5556811021e0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5556811022f0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x555681102200 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5556810f8c70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x555681102220 <col:57> 'const String' lvalue ParmVar 0x5556810f93b8 'prefix' 'const String &'
|-CXXMethodDecl 0x5556810f9768 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5556810f9550 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810f95d0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810f9648 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5556810f9a18 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5556810f9838 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810f98b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810f9938 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5556810f9d08 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5556810f9ae8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810f9b68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810f9be0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5556810f9fb8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5556810f9dd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810f9e58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810f9ed8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5556810fa268 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5556810fa088 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fa108 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fa188 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5556810fa518 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5556810fa338 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fa3b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fa430 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5556810fa7c8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5556810fa5e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fa668 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fa6e8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5556810faad8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5556810fa8f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fa970 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fa9f0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5556810fadb8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5556810faba8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fac28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810facd0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5556810fb098 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5556810fae88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810faf08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fafb0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5556810fb300 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5556810fb168 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5556810fb1e8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5556810fb260 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5556810fb5a8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5556810fb3d0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5556810fb450 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5556810fb4c8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5556810fb858 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5556810fb678 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fb6f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fb778 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5556810fbb08 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5556810fb928 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fb9a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fba20 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5556810fbdb8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5556810fbbd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fbc58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fbcd0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5556810fc088 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5556810fbe88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fbf08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5556810fbfa8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5556810fc3b8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5556810fc158 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5556810fc1d8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5556810fc250 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5556810fc2c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555681101a10 <col:93> 'bool' false
|-CXXMethodDecl 0x5556810fc5a0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5556810fc488 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5556810fc508 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5556810fc778 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5556810fc660 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5556810fc6e0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5556810fca58 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5556810fc838 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5556810fc8b0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5556810fc930 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5556810fc9a8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5556810fcd48 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5556810fcb28 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5556810fcba0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5556810fcc20 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5556810fcc98 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5556810fcf80 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5556810fce20 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5556810fcea0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5556810fd168 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5556810fd048 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5556810fd0c8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5556810fd218 prev 0x5556810f49b8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5556810fd310 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5556810fd3a0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5556810fd418 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5556810fd4d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5556810fd5a0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5556810fd718 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5556810fd650 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5556810fd7c0 <col:24>
| | `-OptimizeNoneAttr 0x5556810fd818 <col:34>
| |-CXXMethodDecl 0x5556810fd860 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5556810fdb18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5556810fd910 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5556810fd988 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5556810fda08 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5556810fdbd0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5556810fdc08 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5556810fdc70 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5556810fdcf8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5556810fe018 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5556810fddb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5556810fde28 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5556810fdea0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5556810fdf20 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5556810fe130 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x555681105aa8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x555681105aa8
| | `-ParmVarDecl 0x555681105bb8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x555681105c58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x555681105c58
| | `-ParmVarDecl 0x555681105d68 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5556812bac78 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5556810fe1a8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5556810fe248 <col:38> "" ""
|-CXXMethodDecl 0x5556810fe2d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5556810fe378 <col:44> "" ""
|-AccessSpecDecl 0x5556810fe3e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5556810fe410 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5556810fe510 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5556810fe560 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810fe4f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5556810fe4d0 <col:27> 'int' 4
|-FieldDecl 0x5556810fe618 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5556810fe7c8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5556810fe880 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5556810ff910 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5556810ff978 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5556810ffac8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5556810ffa08 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5556810ffc78 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5556810ffb88 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5556810ffe58 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5556810ffd38 <col:20> col:23 'int'
| `-ParmVarDecl 0x5556810ffdb8 <col:25> col:28 'int'
|-CXXMethodDecl 0x555681100100 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5556810fff20 <col:23> col:26 'int'
| |-ParmVarDecl 0x5556810fffa0 <col:28> col:31 'int'
| `-ParmVarDecl 0x555681100018 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5556811001b8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x555681100280 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5556811002d0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x555681100320 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x555681100500 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5556811003b0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x555681100428 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5556811007a8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5556811005c8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x555681100648 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5556811006c0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5556811009c8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x555681100878 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5556811008f8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x555681100d00 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x555681100a88 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x555681100b08 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x555681100b80 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x555681100c00 <col:57> col:60 'int'
|-CXXMethodDecl 0x555681100ee8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x555681100dd0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x555681100e50 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x555681101038 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x555681100fa8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5556811013b8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5556811010f8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x555681101178 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5556811011f0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x555681101270 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5556811014d0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TokenBucketJiffyParameters<unsigned int> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class TokenRateX<class TokenBucketJiffyParameters<unsigned int> >
         0 |   class TokenBucketJiffyParameters<unsigned int> (base) (empty)
         0 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
         4 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
         8 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >
         0 |   TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
         4 |   TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> >
         0 |   class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
         0 |     class TokenBucketJiffyParameters<unsigned int> (base) (empty)
         0 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
         4 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
         8 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
        12 |   class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
        12 |     TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
        16 |     TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class RatedSplitter
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> > _tb
       108 |     class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
       108 |       class TokenBucketJiffyParameters<unsigned int> (base) (empty)
       108 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
       112 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
       116 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
       120 |     class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
       120 |       TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
       124 |       TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55568113e890 <../dummy_inc/click/tokenbucket.hh:628:1, line:686:1> line:629:7 class TokenBucketJiffyParameters definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x5556811402d0 prev 0x55568113e890 <col:1, col:7> col:7 implicit class TokenBucketJiffyParameters
|-AccessSpecDecl 0x555681140360 <col:36, col:42> col:36 public
|-TypedefDecl 0x5556811403c8 <line:632:5, col:15> col:15 referenced token_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x555681140390 'unsigned int' sugar
|   |-TemplateTypeParmType 0x555681136390 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x555681136338 'T'
|   `-BuiltinType 0x555680b8a410 'unsigned int'
|-TypedefDecl 0x555681140420 <line:635:5, col:29> col:29 referenced time_point_type 'click_jiffies_t':'unsigned int'
| `-TypedefType 0x555680e43860 'click_jiffies_t' sugar
|   |-Typedef 0x555680e43798 'click_jiffies_t'
|   `-BuiltinType 0x555680b8a410 'unsigned int'
|-TypedefDecl 0x555681140478 <line:638:5, col:40> col:40 referenced duration_type 'click_jiffies_difference_t':'int'
| `-TypedefType 0x5556810835a0 'click_jiffies_difference_t' sugar
|   |-Typedef 0x555680e43808 'click_jiffies_difference_t'
|   `-BuiltinType 0x555680b8a370 'int'
|-CXXMethodDecl 0x5556811404d0 <line:642:5, line:644:5> line:642:28 now 'TokenBucketJiffyParameters::time_point_type ()' static
|-CXXMethodDecl 0x555681140668 <line:646:5, line:648:5> line:646:28 time_point 'TokenBucketJiffyParameters<unsigned int>::time_point_type (TokenBucketJiffyParameters::time_point_type)' static
| `-ParmVarDecl 0x5556811405a0 <col:39, col:55> col:55 t 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x555681140878 <line:656:5, line:662:5> line:656:26 time_monotonic_difference 'TokenBucketJiffyParameters<unsigned int>::duration_type (TokenBucketJiffyParameters::time_point_type, TokenBucketJiffyParameters::time_point_type)' static
| |-ParmVarDecl 0x555681140740 <col:52, col:68> col:68 a 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
| `-ParmVarDecl 0x5556811407a8 <col:71, col:87> col:87 b 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x555681140a38 <line:665:5, line:667:5> line:665:17 time_less 'bool (TokenBucketJiffyParameters::time_point_type, TokenBucketJiffyParameters::time_point_type)' static
| |-ParmVarDecl 0x555681140938 <col:27, col:43> col:43 a 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
| `-ParmVarDecl 0x5556811409a0 <col:46, col:62> col:62 b 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x555681140af8 <line:672:5, line:674:5> line:672:21 frequency 'unsigned int ()' static
|-CXXMethodDecl 0x555681140c38 <line:677:5, line:679:5> line:677:22 timestamp 'Timestamp (TokenBucketJiffyParameters::time_point_type)' static
| `-ParmVarDecl 0x555681140ba8 <col:32, col:48> col:48 x 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x555681140d80 <line:682:5, line:684:5> line:682:22 timestamp 'Timestamp (TokenBucketJiffyParameters::duration_type)' static
| `-ParmVarDecl 0x555681140cf0 <col:32, col:46> col:46 x 'TokenBucketJiffyParameters::duration_type':'int'
|-CXXDestructorDecl 0x55568114f7c0 <line:629:7> col:7 implicit ~TokenBucketJiffyParameters 'void ()' inline default trivial noexcept-unevaluated 0x55568114f7c0
|-CXXConstructorDecl 0x5556812b9f58 <col:7> col:7 implicit constexpr TokenBucketJiffyParameters 'void (const TokenBucketJiffyParameters<unsigned int> &)' inline default trivial noexcept-unevaluated 0x5556812b9f58
| `-ParmVarDecl 0x5556812ba068 <col:7> col:7 'const TokenBucketJiffyParameters<unsigned int> &'
`-CXXConstructorDecl 0x5556812ba108 <col:7> col:7 implicit constexpr TokenBucketJiffyParameters 'void (TokenBucketJiffyParameters<unsigned int> &&)' inline default trivial noexcept-unevaluated 0x5556812ba108
  `-ParmVarDecl 0x5556812ba218 <col:7> col:7 'TokenBucketJiffyParameters<unsigned int> &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenBucketJiffyParameters = type { i8 }
  NonVirtualBaseLLVMType:%class.TokenBucketJiffyParameters = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55568113ea30 <../dummy_inc/click/tokenbucket.hh:57:1, line:191:1> line:58:7 class TokenRateX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
|-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>'
|-CXXRecordDecl 0x555681140e80 prev 0x55568113ea30 <col:1, col:7> col:7 implicit class TokenRateX
|-AccessSpecDecl 0x555681140f10 <col:31, col:37> col:31 public
|-TypedefDecl 0x555681140f48 <line:61:5, col:15> col:15 parameter_type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
| `-SubstTemplateTypeParmType 0x555681140230 'TokenBucketJiffyParameters<unsigned int>' sugar
|   |-TemplateTypeParmType 0x5556811204b0 'P' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x555681120458 'P'
|   `-RecordType 0x55568113e970 'TokenBucketJiffyParameters<unsigned int>'
|     `-ClassTemplateSpecialization 0x55568113e890 'TokenBucketJiffyParameters'
|-TypedefDecl 0x555681141050 <line:64:5, col:36> col:36 referenced token_type 'typename TokenBucketJiffyParameters<unsigned int>::token_type':'unsigned int'
| `-ElaboratedType 0x555681141000 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|   `-TypedefType 0x555681140fe0 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|     |-Typedef 0x5556811403c8 'token_type'
|     `-SubstTemplateTypeParmType 0x555681140390 'unsigned int' sugar
|       |-TemplateTypeParmType 0x555681136390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555681136338 'T'
|       `-BuiltinType 0x555680b8a410 'unsigned int'
|-TypedefDecl 0x555681142140 <line:67:5, col:41> col:41 referenced time_point_type 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type':'unsigned int'
| `-ElaboratedType 0x5556811420f0 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|   `-TypedefType 0x555681140580 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|     |-Typedef 0x555681140420 'time_point_type'
|     `-TypedefType 0x555680e43860 'click_jiffies_t' sugar
|       |-Typedef 0x555680e43798 'click_jiffies_t'
|       `-BuiltinType 0x555680b8a410 'unsigned int'
|-TypedefDecl 0x5556811426d0 <line:70:5, col:69> col:69 referenced ticks_type 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type':'unsigned int'
| `-ElaboratedType 0x555681142680 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|   `-TypedefType 0x555681142660 'make_unsigned<int>::type' sugar
|     |-Typedef 0x5556811425f0 'type'
|     `-ElaboratedType 0x5556811425a0 'typename integer_traits<int>::unsigned_type' sugar
|       `-TypedefType 0x555681142580 'integer_traits<int>::unsigned_type' sugar
|         |-Typedef 0x555680e6ace0 'unsigned_type'
|         `-BuiltinType 0x555680b8a410 'unsigned int'
|-EnumDecl 0x555681142728 <line:72:5> col:5
| `-EnumConstantDecl 0x555681142890 <line:73:2, col:29> col:2 referenced max_tokens 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|   `-ConstantExpr 0x555681142870 <col:15, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' Int: 4294967295
|     `-CStyleCastExpr 0x555681142848 <col:15, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' <NoOp>
|       `-ImplicitCastExpr 0x555681142830 <col:28, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x5556811215c0 <col:28, col:29> 'int' prefix '-'
|           `-IntegerLiteral 0x5556811215a0 <col:29> 'int' 1
|-CXXConstructorDecl 0x555681142918 <line:77:5, line:79:5> line:77:5 TokenRateX 'void ()'
|-CXXConstructorDecl 0x555681142a80 <line:83:5, line:85:5> line:83:14 TokenRateX 'void (bool)'
| `-ParmVarDecl 0x5556811429d0 <col:25, col:30> col:30 unlimited 'bool'
|-CXXConstructorDecl 0x555681142cb8 <line:94:5, line:96:5> line:94:5 TokenRateX 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x555681142b50 <col:16, col:27> col:27 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x555681142bc8 <col:33, col:44> col:44 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681142e10 <line:100:5, col:46> col:17 assign 'void (bool)' inline
| `-ParmVarDecl 0x555681142d80 <col:24, col:41> col:29 unlimited 'bool'
|-CXXMethodDecl 0x555681142fe8 <line:108:5, col:60> col:17 assign 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type)' inline
| |-ParmVarDecl 0x555681142ed8 <col:24, col:35> col:35 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x555681142f50 <col:41, col:52> col:52 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x5556811430a8 <line:111:5, line:113:5> line:111:10 unlimited 'bool () const'
|-CXXMethodDecl 0x555681143158 <line:116:5, line:118:5> line:116:10 idle 'bool () const'
|-CXXMethodDecl 0x555681143258 <line:124:5, col:23> col:16 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x555681143328 <line:130:5, line:132:5> line:130:16 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x5556811433f8 <line:135:5, line:137:5> line:135:16 tokens_per_tick 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x5556811434c8 <line:140:5, line:142:5> line:140:16 token_scale 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x5556811435e8 <line:148:5, line:150:5> line:148:16 time_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type () const'
|-CXXMethodDecl 0x555681143708 <line:155:5, line:157:5> line:155:21 now 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type () const'
|-FunctionTemplateDecl 0x5556811439f8 <line:163:5, line:166:5> line:164:21 time_point
| |-TemplateTypeParmDecl 0x5556811437b8 <line:163:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x555681143958 <line:164:5, line:166:5> line:164:21 time_point 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type (U) const'
|   `-ParmVarDecl 0x555681143868 <col:32, col:34> col:34 time 'U'
|-CXXMethodDecl 0x555681143c78 <line:174:5, line:176:5> line:174:16 time_monotonic_difference 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type) const'
| |-ParmVarDecl 0x555681143ae8 <col:42, col:58> col:58 a 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| `-ParmVarDecl 0x555681143b60 <col:61, col:77> col:77 b 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-TypedefDecl 0x555681143d48 <line:180:5, col:29> col:29 epoch_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| |-TypedefType 0x5556811436a0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
| | |-Typedef 0x555681142140 'time_point_type'
| | `-ElaboratedType 0x5556811420f0 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
| |   `-TypedefType 0x555681140580 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
| |     |-Typedef 0x555681140420 'time_point_type'
| |     `-TypedefType 0x555680e43860 'click_jiffies_t' sugar
| |       |-Typedef 0x555680e43798 'click_jiffies_t'
| |       `-BuiltinType 0x555680b8a410 'unsigned int'
| `-DeprecatedAttr 0x555681143da0 <col:55> "" ""
|-CXXMethodDecl 0x555681143e30 <line:181:5, col:74> col:23 tokens_per_epoch 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const' inline
| `-DeprecatedAttr 0x555681143f08 <col:63> Inherited "" ""
|-CXXMethodDecl 0x555681143f98 <line:182:5, col:75> col:23 epochs_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type () const' inline
| `-DeprecatedAttr 0x555681144048 <col:64> Inherited "" ""
|-AccessSpecDecl 0x5556811440b8 <line:185:2, col:9> col:2 private
|-FieldDecl 0x5556811440f0 <line:187:5, col:16> col:16 _tokens_per_tick 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-FieldDecl 0x555681144150 <line:188:5, col:16> col:16 _token_scale 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-FieldDecl 0x5556811441b0 <line:189:5, col:16> col:16 _time_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
|-CXXDestructorDecl 0x55568114f6e0 <line:58:7> col:7 implicit ~TokenRateX 'void ()' inline default trivial noexcept-unevaluated 0x55568114f6e0
|-CXXConstructorDecl 0x5556812ba288 <col:7> col:7 implicit constexpr TokenRateX 'void (const TokenRateX<TokenBucketJiffyParameters<unsigned int> > &)' inline default trivial noexcept-unevaluated 0x5556812ba288
| `-ParmVarDecl 0x5556812ba368 <col:7> col:7 'const TokenRateX<TokenBucketJiffyParameters<unsigned int> > &'
`-CXXConstructorDecl 0x5556812ba408 <col:7> col:7 implicit constexpr TokenRateX 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> > &&)' inline default trivial noexcept-unevaluated 0x5556812ba408
  `-ParmVarDecl 0x5556812ba518 <col:7> col:7 'TokenRateX<TokenBucketJiffyParameters<unsigned int> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenRateX = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.TokenRateX = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55568113ec60 <../dummy_inc/click/tokenbucket.hh:325:1, line:577:1> line:326:7 class TokenCounterX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|-CXXRecordDecl 0x5556811473d8 prev 0x55568113ec60 <col:1, col:7> col:7 implicit class TokenCounterX
|-AccessSpecDecl 0x555681147468 <col:23, col:29> col:23 public
|-TypedefDecl 0x5556811474c8 <line:329:5, col:15> col:15 rate_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
| `-SubstTemplateTypeParmType 0x555681147490 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >' sugar
|   |-TemplateTypeParmType 0x55568112d1b0 'R' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55568112d160 'R'
|   `-RecordType 0x55568113eb10 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|     `-ClassTemplateSpecialization 0x55568113ea30 'TokenRateX'
|-TypedefDecl 0x5556811475b0 <line:332:5, col:36> col:36 token_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ElaboratedType 0x555681147560 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|   `-TypedefType 0x555681142800 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|     |-Typedef 0x555681141050 'token_type'
|     `-ElaboratedType 0x555681141000 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|       `-TypedefType 0x555681140fe0 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|         |-Typedef 0x5556811403c8 'token_type'
|         `-SubstTemplateTypeParmType 0x555681140390 'unsigned int' sugar
|           |-TemplateTypeParmType 0x555681136390 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555681136338 'T'
|           `-BuiltinType 0x555680b8a410 'unsigned int'
|-TypedefDecl 0x555681147680 <line:335:5, col:41> col:41 time_point_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| `-ElaboratedType 0x555681147630 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|   `-TypedefType 0x5556811436a0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|     |-Typedef 0x555681142140 'time_point_type'
|     `-ElaboratedType 0x5556811420f0 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|       `-TypedefType 0x555681140580 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|         |-Typedef 0x555681140420 'time_point_type'
|         `-TypedefType 0x555680e43860 'click_jiffies_t' sugar
|           |-Typedef 0x555680e43798 'click_jiffies_t'
|           `-BuiltinType 0x555680b8a410 'unsigned int'
|-TypedefDecl 0x555681147750 <line:338:5, col:36> col:36 ticks_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
| `-ElaboratedType 0x555681147700 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|   `-TypedefType 0x555681143580 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|     |-Typedef 0x5556811426d0 'ticks_type'
|     `-ElaboratedType 0x555681142680 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|       `-TypedefType 0x555681142660 'make_unsigned<int>::type' sugar
|         |-Typedef 0x5556811425f0 'type'
|         `-ElaboratedType 0x5556811425a0 'typename integer_traits<int>::unsigned_type' sugar
|           `-TypedefType 0x555681142580 'integer_traits<int>::unsigned_type' sugar
|             |-Typedef 0x555680e6ace0 'unsigned_type'
|             `-BuiltinType 0x555680b8a410 'unsigned int'
|-EnumDecl 0x5556811477a8 <line:340:5> col:5
| `-EnumConstantDecl 0x5556811478f0 <line:341:2, col:18> col:2 max_tokens 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:340:5)'
|   `-ImplicitCastExpr 0x555681147940 <col:15, col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556811478d0 <col:15, col:18> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' Int: 4294967295
|       `-DeclRefExpr 0x5556811478a0 <col:15, col:18> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' EnumConstant 0x555681142890 'max_tokens' 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|-CXXConstructorDecl 0x555681147990 <line:347:5, line:349:5> line:347:5 TokenCounterX 'void ()'
|-CXXConstructorDecl 0x555681147af8 <line:356:5, line:358:5> line:356:14 TokenCounterX 'void (bool)'
| `-ParmVarDecl 0x555681147a48 <col:28, col:33> col:33 full 'bool'
|-CXXMethodDecl 0x555681147d28 <line:365:5, line:367:5> line:365:16 size 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &) const'
| `-ParmVarDecl 0x555681147c38 <col:21, col:38> col:38 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x555681147e28 <line:373:5, line:375:5> line:373:16 fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type () const'
|-CXXMethodDecl 0x555681147ed8 <line:378:5, line:380:5> line:378:10 empty 'bool () const'
|-CXXMethodDecl 0x555681147f88 <line:383:5, line:385:5> line:383:10 full 'bool () const'
|-CXXMethodDecl 0x5556811481d8 <line:393:5, line:395:5> line:393:10 contains 'bool (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x555681148048 <col:19, col:36> col:36 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x5556811480c0 <col:42, col:53> col:53 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681148368 <line:399:5, line:401:5> line:399:10 contains_fraction 'bool (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| `-ParmVarDecl 0x5556811482a8 <col:28, col:39> col:39 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681148420 <line:406:5, line:408:5> line:406:10 clear 'void ()'
|-CXXMethodDecl 0x5556811484d0 <line:413:5, line:415:5> line:413:10 set_full 'void ()'
|-CXXMethodDecl 0x555681148718 <line:422:5, line:425:5> line:422:10 set 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x555681148590 <col:14, col:31> col:31 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x555681148608 <col:37, col:48> col:48 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x5556811488a8 <line:429:5, line:431:5> line:429:10 set_fraction 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x5556811487e8 <col:23, col:34> col:34 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681148af8 <line:443:5, line:453:5> line:443:10 adjust 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &)'
| |-ParmVarDecl 0x555681148970 <col:17, col:34> col:34 old_rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x5556811489e8 <col:44, col:61> col:61 new_rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x555681148cb8 <line:464:5, col:38> col:10 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &)'
| `-ParmVarDecl 0x555681148bc8 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x555681148ef8 <line:469:5, col:60> col:10 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type)'
| |-ParmVarDecl 0x555681148d80 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x555681148e20 <col:40, col:56> col:56 time 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-FunctionTemplateDecl 0x555681149298 <line:474:5, col:68> col:32 refill
| |-TemplateTypeParmDecl 0x555681148fb8 <col:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x5556811491f8 <col:27, col:68> col:32 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, U)'
|   |-ParmVarDecl 0x555681149068 <col:39, col:56> col:56 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|   `-ParmVarDecl 0x5556811490e0 <col:62, col:64> col:64 time 'U'
|-CXXMethodDecl 0x555681149458 <line:482:5, line:484:5> line:482:10 set_time_point 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type)'
| `-ParmVarDecl 0x555681149390 <col:25, col:41> col:41 time 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-CXXMethodDecl 0x555681149630 <line:492:5, line:495:5> line:492:10 remove 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x555681149520 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x555681149598 <col:40, col:51> col:51 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681149888 <line:505:5, line:507:5> line:505:10 remove_if 'bool (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x555681149700 <col:20, col:37> col:37 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x555681149778 <col:43, col:54> col:54 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x5556811499e8 <line:513:5, line:515:5> line:513:10 remove_fraction 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x555681149958 <col:26, col:37> col:37 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681149b78 <line:523:5, line:529:5> line:523:10 remove_fraction_if 'bool (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x555681149ab0 <col:29, col:40> col:40 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681149da8 <line:539:5, line:545:5> line:539:16 time_until_contains 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x555681149c60 <col:36, col:53> col:53 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x555681149cd8 <line:540:8, col:19> col:19 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681149f88 <line:554:5, line:562:5> line:554:16 time_until_contains_fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x555681149e78 <col:45, col:62> col:62 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x555681149ef0 <line:555:10, col:21> col:21 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55568114e198 <line:566:5, col:114> col:23 epochs_until_contains 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const' inline
| |-ParmVarDecl 0x55568114a058 <col:45, col:62> col:62 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| |-ParmVarDecl 0x55568114e100 <col:68, col:79> col:79 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55568114e288 <col:103> Inherited "" ""
|-CXXMethodDecl 0x55568114e418 <line:567:5, col:123> col:23 epochs_until_contains_fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const' inline
| |-ParmVarDecl 0x55568114e308 <col:54, col:71> col:71 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| |-ParmVarDecl 0x55568114e380 <col:77, col:88> col:88 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55568114e4d8 <col:112> Inherited "" ""
|-AccessSpecDecl 0x55568114e548 <line:570:3, col:10> col:3 private
|-FieldDecl 0x55568114e580 <line:572:5, col:16> col:16 _tokens 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-FieldDecl 0x55568114e5e0 <line:573:5, col:21> col:21 _time_point 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-TypedefDecl 0x55568114eb80 <line:575:5, col:85> col:85 cvt_type 'TokenRateConverter<TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type, has_fast_int_multiply<token_type>::value>':'TokenRateConverter<TokenRateX<TokenBucketJiffyParameters<unsigned int> >, true>'
| `-TemplateSpecializationType 0x55568114eae0 'TokenRateConverter<TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type, has_fast_int_multiply<token_type>::value>' sugar TokenRateConverter
|   |-TemplateArgument type 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|   |-TemplateArgument expr
|   | `-ConstantExpr 0x55568114e9a0 <col:43, col:78> 'bool':'bool' Int: 1
|   |   `-ImplicitCastExpr 0x55568114e988 <col:43, col:78> 'bool':'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55568114e958 <col:43, col:78> 'const bool':'const bool' lvalue Var 0x555680e56860 'value' 'const bool':'const bool' non_odr_use_constant
|   `-RecordType 0x55568114eac0 'TokenRateConverter<TokenRateX<TokenBucketJiffyParameters<unsigned int> >, true>'
|     `-ClassTemplateSpecialization 0x55568114e9c0 'TokenRateConverter'
|-CXXDestructorDecl 0x55568114f8a0 <line:326:7> col:7 implicit ~TokenCounterX 'void ()' inline default trivial noexcept-unevaluated 0x55568114f8a0
|-CXXConstructorDecl 0x5556812ba5b8 <col:7> col:7 implicit constexpr TokenCounterX 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &)' inline default trivial noexcept-unevaluated 0x5556812ba5b8
| `-ParmVarDecl 0x5556812ba6c8 <col:7> col:7 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &'
`-CXXConstructorDecl 0x5556812ba768 <col:7> col:7 implicit constexpr TokenCounterX 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &&)' inline default trivial noexcept-unevaluated 0x5556812ba768
  `-ParmVarDecl 0x5556812ba878 <col:7> col:7 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenCounterX = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.TokenCounterX = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55568113ef10 <../dummy_inc/click/tokenbucket.hh:700:1, line:980:1> line:701:7 class TokenBucketX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>'
|-CXXRecordDecl 0x55568113fe68 prev 0x55568113ef10 <col:1, col:7> col:7 implicit class TokenBucketX
|-AccessSpecDecl 0x55568113fef8 <col:22, col:28> col:22 public
|-TypedefDecl 0x55568113ff58 <line:704:5, col:15> col:15 parameter_type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
| `-SubstTemplateTypeParmType 0x55568113ff20 'TokenBucketJiffyParameters<unsigned int>' sugar
|   |-TemplateTypeParmType 0x555681137f00 'P' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x555681137ea8 'P'
|   `-RecordType 0x55568113e970 'TokenBucketJiffyParameters<unsigned int>'
|     `-ClassTemplateSpecialization 0x55568113e890 'TokenBucketJiffyParameters'
|-TypedefDecl 0x555681140030 <line:707:5, col:27> col:27 rate_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
| `-TemplateSpecializationType 0x55568113ffc0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >' sugar TokenRateX
|   |-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
|   `-RecordType 0x55568113eb10 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|     `-ClassTemplateSpecialization 0x55568113ea30 'TokenRateX'
|-TypedefDecl 0x555681140130 <line:710:5, col:38> col:38 counter_type 'TokenCounterX<TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type>':'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
| `-TemplateSpecializationType 0x5556811400c0 'TokenCounterX<TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type>' sugar TokenCounterX
|   |-TemplateArgument type 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|   `-RecordType 0x55568113ed40 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
|     `-ClassTemplateSpecialization 0x55568113ec60 'TokenCounterX'
|-TypedefDecl 0x555681144270 <line:713:5, col:44> col:44 token_type 'typename rate_type::token_type':'unsigned int'
| `-ElaboratedType 0x555681144220 'typename rate_type::token_type' sugar
|   `-TypedefType 0x555681142800 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|     |-Typedef 0x555681141050 'token_type'
|     `-ElaboratedType 0x555681141000 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|       `-TypedefType 0x555681140fe0 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|         |-Typedef 0x5556811403c8 'token_type'
|         `-SubstTemplateTypeParmType 0x555681140390 'unsigned int' sugar
|           |-TemplateTypeParmType 0x555681136390 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555681136338 'T'
|           `-BuiltinType 0x555680b8a410 'unsigned int'
|-TypedefDecl 0x555681144340 <line:716:5, col:49> col:49 time_point_type 'typename rate_type::time_point_type':'unsigned int'
| `-ElaboratedType 0x5556811442f0 'typename rate_type::time_point_type' sugar
|   `-TypedefType 0x5556811436a0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|     |-Typedef 0x555681142140 'time_point_type'
|     `-ElaboratedType 0x5556811420f0 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|       `-TypedefType 0x555681140580 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|         |-Typedef 0x555681140420 'time_point_type'
|         `-TypedefType 0x555680e43860 'click_jiffies_t' sugar
|           |-Typedef 0x555680e43798 'click_jiffies_t'
|           `-BuiltinType 0x555680b8a410 'unsigned int'
|-TypedefDecl 0x555681144410 <line:719:5, col:44> col:44 ticks_type 'typename rate_type::ticks_type':'unsigned int'
| `-ElaboratedType 0x5556811443c0 'typename rate_type::ticks_type' sugar
|   `-TypedefType 0x555681143580 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|     |-Typedef 0x5556811426d0 'ticks_type'
|     `-ElaboratedType 0x555681142680 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|       `-TypedefType 0x555681142660 'make_unsigned<int>::type' sugar
|         |-Typedef 0x5556811425f0 'type'
|         `-ElaboratedType 0x5556811425a0 'typename integer_traits<int>::unsigned_type' sugar
|           `-TypedefType 0x555681142580 'integer_traits<int>::unsigned_type' sugar
|             |-Typedef 0x555680e6ace0 'unsigned_type'
|             `-BuiltinType 0x555680b8a410 'unsigned int'
|-EnumDecl 0x555681144468 <line:721:5> col:5
| `-EnumConstantDecl 0x5556811445b0 <line:722:2, col:26> col:2 max_tokens 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:721:5)'
|   `-ImplicitCastExpr 0x555681144600 <col:15, col:26> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555681144590 <col:15, col:26> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' Int: 4294967295
|       `-DeclRefExpr 0x555681144560 <col:15, col:26> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' EnumConstant 0x555681142890 'max_tokens' 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|-CXXConstructorDecl 0x555681144650 <line:728:5, line:729:5> line:728:5 used TokenBucketX 'void ()'
|-CXXConstructorDecl 0x5556811447b8 <line:735:5, line:737:5> line:735:14 TokenBucketX 'void (bool)'
| `-ParmVarDecl 0x555681144708 <col:27, col:32> col:32 unlimited 'bool'
|-CXXConstructorDecl 0x555681144a18 <line:748:5, line:750:5> line:748:5 TokenBucketX 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x5556811448b0 <col:18, col:29> col:29 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x555681144928 <col:35, col:46> col:46 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681144b70 <line:754:5, line:756:5> line:754:10 assign 'void (bool)'
| `-ParmVarDecl 0x555681144ae0 <col:17, col:34> col:22 unlimited 'bool'
|-CXXMethodDecl 0x555681144d48 <line:771:5, line:773:5> line:771:10 assign 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x555681144c38 <col:17, col:28> col:28 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x555681144cb0 <col:34, col:45> col:45 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681144f28 <line:784:5, line:788:5> line:784:10 assign_adjust 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x555681144e18 <col:24, col:35> col:35 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x555681144e90 <col:41, col:52> col:52 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681144fe8 <line:791:5, line:793:5> line:791:10 unlimited 'bool () const'
|-CXXMethodDecl 0x555681145098 <line:796:5, line:798:5> line:796:10 idle 'bool () const'
|-CXXMethodDecl 0x555681145198 <line:804:5, line:806:5> line:804:16 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x555681145268 <line:812:5, line:814:5> line:812:16 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x555681145338 <line:820:5, line:822:5> line:820:16 size 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x555681145408 <line:828:5, line:830:5> line:828:16 fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x5556811454b8 <line:833:5, line:835:5> line:833:10 empty 'bool () const'
|-CXXMethodDecl 0x555681145568 <line:838:5, line:840:5> line:838:10 full 'bool () const'
|-CXXMethodDecl 0x555681145718 <line:846:5, line:848:5> line:846:10 contains 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x555681145628 <col:19, col:30> col:30 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681145870 <line:852:5, line:854:5> line:852:10 contains_fraction 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x5556811457e0 <col:28, col:39> col:39 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681145928 <line:859:5, line:861:5> line:859:10 clear 'void ()'
|-CXXMethodDecl 0x5556811459d8 <line:866:5, line:868:5> line:866:10 set_full 'void ()'
|-CXXMethodDecl 0x555681145b58 <line:874:5, line:876:5> line:874:10 set 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x555681145a98 <col:14, col:25> col:25 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681145cb0 <line:880:5, line:882:5> line:880:10 set_fraction 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x555681145c20 <col:23, col:34> col:34 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681145d68 <line:892:5, line:894:5> line:892:10 refill 'void ()'
|-CXXMethodDecl 0x555681145f18 <line:897:5, line:899:5> line:897:10 refill 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type)'
| `-ParmVarDecl 0x555681145e50 <col:17, col:33> col:33 time 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-FunctionTemplateDecl 0x5556811461d8 <line:902:5, line:904:5> line:902:32 refill
| |-TemplateTypeParmDecl 0x555681145fd0 <col:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x555681146138 <col:27, line:904:5> line:902:32 refill 'void (U)'
|   `-ParmVarDecl 0x555681146078 <col:39, col:41> col:41 time 'U'
|-CXXMethodDecl 0x555681146358 <line:911:5, line:913:5> line:911:10 set_time_point 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type)'
| `-ParmVarDecl 0x5556811462c8 <col:25, col:41> col:41 time 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-CXXMethodDecl 0x5556811464b0 <line:920:5, line:922:5> line:920:10 remove 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x555681146420 <col:17, col:28> col:28 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681146638 <line:931:5, line:933:5> line:931:10 remove_if 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x555681146578 <col:20, col:31> col:31 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681146790 <line:939:5, line:941:5> line:939:10 remove_fraction 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x555681146700 <col:26, col:37> col:37 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x5556811468e8 <line:949:5, line:951:5> line:949:10 remove_fraction_if 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x555681146858 <col:29, col:40> col:40 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681146ac8 <line:957:5, line:959:5> line:957:16 time_until_contains 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x5556811469d0 <col:36, col:47> col:47 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x555681146c58 <line:965:5, line:967:5> line:965:16 time_until_contains_fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type) const'
| `-ParmVarDecl 0x555681146b90 <col:45, col:56> col:56 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
|-CXXMethodDecl 0x555681146f08 <line:971:5, col:114> col:23 epochs_until_contains 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const' inline
| |-ParmVarDecl 0x555681146d78 <col:45, col:62> col:62 rate 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &'
| |-ParmVarDecl 0x555681146df0 <col:68, col:79> col:79 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-DeprecatedAttr 0x555681146ff8 <col:103> Inherited "" ""
|-CXXMethodDecl 0x555681147188 <line:972:5, col:123> col:23 epochs_until_contains_fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const' inline
| |-ParmVarDecl 0x555681147078 <col:54, col:71> col:71 rate 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &'
| |-ParmVarDecl 0x5556811470f0 <col:77, col:88> col:88 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-DeprecatedAttr 0x555681147248 <col:112> Inherited "" ""
|-AccessSpecDecl 0x5556811472b8 <line:975:3, col:10> col:3 private
|-FieldDecl 0x5556811472f0 <line:977:5, col:15> col:15 _rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|-FieldDecl 0x55568114ebf0 <line:978:5, col:18> col:18 _bucket 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::counter_type':'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
|-CXXDestructorDecl 0x55568114f600 <line:701:7> col:7 implicit ~TokenBucketX 'void ()' inline default trivial noexcept-unevaluated 0x55568114f600
|-CXXConstructorDecl 0x5556812ba8e8 <col:7> col:7 implicit constexpr TokenBucketX 'void (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &)' inline default trivial noexcept-unevaluated 0x5556812ba8e8
| `-ParmVarDecl 0x5556812ba9f8 <col:7> col:7 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &'
`-CXXConstructorDecl 0x5556812baa98 <col:7> col:7 implicit constexpr TokenBucketX 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &&)' inline default trivial noexcept-unevaluated 0x5556812baa98
  `-ParmVarDecl 0x5556812baba8 <col:7> col:7 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.TokenBucketX = type { %class.TokenRateX, %class.TokenCounterX }
  NonVirtualBaseLLVMType:%class.TokenBucketX = type { %class.TokenRateX, %class.TokenCounterX }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568113f108 <../elements/standard/ratedsplitter.hh:65:1, line:86:1> line:65:7 class RatedSplitter definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55568113f268 <col:1, col:7> col:7 implicit referenced class RatedSplitter
|-AccessSpecDecl 0x55568113f2f8 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x55568113f380 <line:67:5, col:19> col:5 RatedSplitter 'void ()'
|-CXXMethodDecl 0x55568113f480 <line:69:5, col:62> col:17 used class_name 'const char *() const'
| |-Overrides: [ 0x5556810f1968 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55568114f9d0 <col:36, col:62>
|   `-ReturnStmt 0x55568114f9c0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55568114f9a8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55568114f980 <col:45> 'const char [14]' lvalue "RatedSplitter"
|-CXXMethodDecl 0x55568113f548 <line:70:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x5556810f1a30 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55568114fa30 <col:36, col:58>
|   `-ReturnStmt 0x55568114fa20 <col:38, col:45>
|     `-ImplicitCastExpr 0x55568114fa08 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55568114f9e8 <col:45> 'const char []' lvalue Var 0x5556810f1d68 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x55568113f610 <line:71:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x5556810f1df8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55568114fa90 <col:36, col:51>
|   `-ReturnStmt 0x55568114fa80 <col:38, col:45>
|     `-ImplicitCastExpr 0x55568114fa68 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55568114fa48 <col:45> 'const char []' lvalue Var 0x5556810f1f40 'PUSH' 'const char []'
|-CXXMethodDecl 0x55568113f6d0 <line:72:5, col:64> col:10 is_bandwidth 'bool () const'
| `-CompoundStmt 0x55568114fbd8 <col:31, col:64>
|   `-ReturnStmt 0x55568114fbc8 <col:33, col:59>
|     `-BinaryOperator 0x55568114fba8 <col:40, col:59> 'bool' '=='
|       |-ImplicitCastExpr 0x55568114fb78 <col:40, col:54> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x55568114fb60 <col:40, col:54> 'char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55568114fb28 <col:40, col:54> 'const char' lvalue
|       |     |-CXXMemberCallExpr 0x55568114fae8 <col:40, col:51> 'const char *'
|       |     | `-MemberExpr 0x55568114fab8 <col:40> '<bound member function type>' ->class_name 0x55568113f480
|       |     |   `-CXXThisExpr 0x55568114faa8 <col:40> 'const RatedSplitter *' implicit this
|       |     `-IntegerLiteral 0x55568114fb08 <col:53> 'int' 0
|       `-ImplicitCastExpr 0x55568114fb90 <col:59> 'int' <IntegralCast>
|         `-CharacterLiteral 0x55568114fb48 <col:59> 'char' 66
|-CXXMethodDecl 0x55568113f9a0 <line:74:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5556810f3200 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55568113f850 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55568113f8c8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55568113fa70 <line:75:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x5556810f5c50 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x55568114fc10 <col:39, col:54>
|   `-ReturnStmt 0x55568114fc00 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x55568114fbf0 <col:48> 'bool' true
|-CXXMethodDecl 0x55568113fb30 <line:76:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5556810f32d0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55568113fcf8 <line:78:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5556810f07d8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55568113fbe8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x55568113fc60 <col:25, col:32> col:33 'Packet *'
|-AccessSpecDecl 0x55568113fda8 <line:80:2, col:11> col:2 protected
|-FieldDecl 0x55568114ec58 <line:82:5, col:17> col:17 _tb 'TokenBucket':'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >'
|-CXXMethodDecl 0x55568114edd0 <line:84:5, col:49> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55568114ecb8 <col:32, col:40> col:41 'Element *'
| `-ParmVarDecl 0x55568114ed38 <col:43, col:48> col:49 'void *'
|-CXXConstructorDecl 0x55568114eea8 <line:65:7> col:7 implicit RatedSplitter 'void (const RatedSplitter &)' inline default_delete noexcept-unevaluated 0x55568114eea8
| `-ParmVarDecl 0x55568114efb8 <col:7> col:7 'const RatedSplitter &'
|-CXXConstructorDecl 0x55568114f058 <col:7> col:7 implicit RatedSplitter 'void (RatedSplitter &&)' inline default_delete noexcept-unevaluated 0x55568114f058
| `-ParmVarDecl 0x55568114f168 <col:7> col:7 'RatedSplitter &&'
|-CXXMethodDecl 0x55568114f208 <col:7> col:7 implicit operator= 'RatedSplitter &(const RatedSplitter &)' inline default_delete noexcept-unevaluated 0x55568114f208
| `-ParmVarDecl 0x55568114f318 <col:7> col:7 'const RatedSplitter &'
|-CXXMethodDecl 0x55568114f388 <col:7> col:7 implicit operator= 'RatedSplitter &(RatedSplitter &&)' inline default_delete noexcept-unevaluated 0x55568114f388
| `-ParmVarDecl 0x55568114f498 <col:7> col:7 'RatedSplitter &&'
`-CXXDestructorDecl 0x55568114f520 <col:7> col:7 implicit ~RatedSplitter 'void ()' inline default noexcept-unevaluated 0x55568114f520
  `-Overrides: [ 0x5556810f0508 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.RatedSplitter = type { %class.Element.base, %class.TokenBucketX }
  NonVirtualBaseLLVMType:%class.RatedSplitter = type { %class.Element.base, %class.TokenBucketX }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555680ec40d0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x555680ec41e8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x555680ec4288 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x555680ec42e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x555680ec4348 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x555680ec43f8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555680ec4700 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555680ec4818 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x555680ec48c0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x555680ec4928 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x555680ec49b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x555680ecaa50 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x555680ecae88 <col:12>
|-CXXConstructorDecl 0x555680ecab58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x555680ecac68 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x555680ec48c0 'data' 'const char *'
| | `-ImplicitCastExpr 0x555680ecd410 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x555680ecd3e0 <col:12> 'const char *const' lvalue .data 0x555680ec48c0
| |     `-DeclRefExpr 0x555680ecd3c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680ecac68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x555680ec4928 'length' 'int'
| | `-ImplicitCastExpr 0x555680ecd4a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x555680ecd470 <col:12> 'const int' lvalue .length 0x555680ec4928
| |     `-DeclRefExpr 0x555680ecd450 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680ecac68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x555680ec49b8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x555680ecd530 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x555680ecd500 <col:12> 'String::memo_t *const' lvalue .memo 0x555680ec49b8
| |     `-DeclRefExpr 0x555680ecd4e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680ecac68 '' 'const String::rep_t &'
| `-CompoundStmt 0x555680ecd588 <col:12>
|-CXXConstructorDecl 0x555680ecad08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555680ecad08
| `-ParmVarDecl 0x555680ecae18 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x555680ed0370 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x555680edbd88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x555680edbe98 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x555680edc3b0 <col:12>
|   |-BinaryOperator 0x555680edc1c8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x555680edc180 <col:12> 'const char *' lvalue ->data 0x555680ec48c0
|   | | `-CXXThisExpr 0x555680edc170 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x555680edc1b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x555680edc140 <col:12> 'const char *const' lvalue .data 0x555680ec48c0
|   |     `-DeclRefExpr 0x555680edc120 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680edbe98 '' 'const String::rep_t &'
|   |-BinaryOperator 0x555680edc290 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x555680edc248 <col:12> 'int' lvalue ->length 0x555680ec4928
|   | | `-CXXThisExpr 0x555680edc238 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x555680edc278 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x555680edc208 <col:12> 'const int' lvalue .length 0x555680ec4928
|   |     `-DeclRefExpr 0x555680edc1e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680edbe98 '' 'const String::rep_t &'
|   |-BinaryOperator 0x555680edc358 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x555680edc310 <col:12> 'String::memo_t *' lvalue ->memo 0x555680ec49b8
|   | | `-CXXThisExpr 0x555680edc300 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x555680edc340 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x555680edc2d0 <col:12> 'String::memo_t *const' lvalue .memo 0x555680ec49b8
|   |     `-DeclRefExpr 0x555680edc2b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680edbe98 '' 'const String::rep_t &'
|   `-ReturnStmt 0x555680edc3a0 <col:12>
|     `-UnaryOperator 0x555680edc388 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x555680edc378 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x555680edbf08 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555680edbf08
  `-ParmVarDecl 0x555680edc018 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555680ebb640 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x555680ebb758 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x555680ebb7e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x555680ebb828 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x555680b8adc0 'const char *'
|   `-QualType 0x555680b8a311 'const char' const
|     `-BuiltinType 0x555680b8a310 'char'
|-TypedefDecl 0x555680ebb8b0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x555680ebb880 'String::const_iterator' sugar
|   |-Typedef 0x555680ebb828 'const_iterator'
|   `-PointerType 0x555680b8adc0 'const char *'
|     `-QualType 0x555680b8a311 'const char' const
|       `-BuiltinType 0x555680b8a310 'char'
|-TypedefDecl 0x555680ebba20 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x555680ebb990 'int (String::*)() const'
|   |-RecordType 0x555680ebb6d0 'String'
|   | `-CXXRecord 0x555680ebb640 'String'
|   `-ParenType 0x555680ebb930 'int () const' sugar
|     `-FunctionProtoType 0x555680e8f4c0 'int () const' const cdecl
|       `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x555680ebba88 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x555680ce40a0 'int64_t' sugar
|   |-Typedef 0x555680bf32d0 'int64_t'
|   `-TypedefType 0x555680bcc4d0 '__int64_t' sugar
|     |-Typedef 0x555680bcc0a8 '__int64_t'
|     `-BuiltinType 0x555680b8a390 'long'
|-TypedefDecl 0x555680ebbaf0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x555680ce3fc0 'uint64_t' sugar
|   |-Typedef 0x555680bf3470 'uint64_t'
|   `-TypedefType 0x555680bcc560 '__uint64_t' sugar
|     |-Typedef 0x555680bcc118 '__uint64_t'
|     `-BuiltinType 0x555680b8a430 'unsigned long'
|-TypedefDecl 0x555680ebbb80 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x555680ebbb50 'String::intmax_t' sugar
|   |-Typedef 0x555680ebba88 'intmax_t'
|   `-TypedefType 0x555680ce40a0 'int64_t' sugar
|     |-Typedef 0x555680bf32d0 'int64_t'
|     `-TypedefType 0x555680bcc4d0 '__int64_t' sugar
|       |-Typedef 0x555680bcc0a8 '__int64_t'
|       `-BuiltinType 0x555680b8a390 'long'
|-TypedefDecl 0x555680ebbc10 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x555680ebbbe0 'String::uintmax_t' sugar
|   |-Typedef 0x555680ebbaf0 'uintmax_t'
|   `-TypedefType 0x555680ce3fc0 'uint64_t' sugar
|     |-Typedef 0x555680bf3470 'uint64_t'
|     `-TypedefType 0x555680bcc560 '__uint64_t' sugar
|       |-Typedef 0x555680bcc118 '__uint64_t'
|       `-BuiltinType 0x555680b8a430 'unsigned long'
|-CXXConstructorDecl 0x555680ebbcd0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x555680ebbe78 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x555680ebbdb8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x555680ebc028 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x555680ebbf68 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x555680ebc180 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x555680ebc0f0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x555680ebc398 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x555680ebc248 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x555680ebc2c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x555680ebc5b8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x555680ebc468 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x555680ebc4e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x555680ebc7d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x555680ebc688 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x555680ebc708 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x555680ebc9f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x555680ebc8a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x555680ebc928 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x555680ebcb88 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x555680ebcac0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x555680ebcd08 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x555680ebcc48 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x555680ebce98 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x555680ebcdd0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x555680ebcff0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x555680ebcf60 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x555680ebd148 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x555680ebd0b8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x555680ebd2a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x555680ebd210 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x555680ebd428 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x555680ebd368 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x555680ebd5b8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x555680ebd4f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x555680ebd748 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x555680ebd680 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x555680ebd8d8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x555680ebd810 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x555680ebd9d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x555680ebdaf8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x555680ebdc78 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x555680ebdbb0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x555680ebddc8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x555680ebdd38 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x555680ebde80 <col:63> "" ""
|-CXXMethodDecl 0x555680ebdfc8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x555680ebdf08 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x555680ebe1d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x555680ebe088 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x555680ebe108 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x555680ebe3f8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x555680ebe2a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x555680ebe320 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x555680ebe6d8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x555680ebe4b8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x555680ebe538 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x555680eca520 <col:55> 'int' 10
| `-ParmVarDecl 0x555680ebe5b0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555680eca540 <col:76> 'bool' true
|-CXXMethodDecl 0x555680ebe9b8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x555680ebe7a0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x555680ebe820 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x555680eca550 <col:56> 'int' 10
| `-ParmVarDecl 0x555680ebe898 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555680eca570 <col:77> 'bool' true
|-CXXMethodDecl 0x555680ebeac0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x555680ebeb88 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x555680ebec50 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x555680ebecf0 <col:20>
| `-OptimizeNoneAttr 0x555680ebed48 <col:30>
|-CXXConversionDecl 0x555680ebee38 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x555680ebef08 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x555680ebefc8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x555680ebf0b8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x555680ebf178 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x555680ebf2f8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x555680ebf230 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x555680ebf448 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x555680ebf3b8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x555680ebf538 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x555680ebf5f8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x555680ebf848 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x555680ebf6b0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x555680ebf730 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x555680ebfaa8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x555680ebf910 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x555680ebf990 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x555680ebfb78 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x555680ebfd88 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x555680ebfc30 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x555680ebfcb0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x555680ebffa8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x555680ebfe50 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x555680ebfed0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x555680ec0138 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x555680ec0070 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x555680ec0228 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x555680ec0398 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x555680ec02d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x555680ec05a8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x555680ec0458 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x555680ec04d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x555680ec07c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x555680ec0668 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x555680ec06e0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x555680ec0950 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x555680ec0880 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x555680ec0b70 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x555680ec0a10 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x555680ec0a90 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x555680ec0cc0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x555680ec0c30 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x555680ec0e98 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x555680ec0d80 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x555680ec0e00 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x555680ec0fe8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x555680ec0f58 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x555680ec1200 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x555680ec10a0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x555680ec1120 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x555680eca580 <col:39> 'int' 0
|-CXXMethodDecl 0x555680ec1420 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x555680ec12c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x555680ec1340 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x555680eca5a0 <col:48> 'int' 0
|-CXXMethodDecl 0x555680ec1600 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x555680ec14e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x555680ec1560 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x555680eca5c0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x555680ec16d0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x555680ec1790 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x555680ec1850 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x555680ec1910 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x555680ec19d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x555680ec1b78 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x555680ec1a80 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x555680ec1cf8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x555680ec1c30 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x555680ec1ed0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x555680ec1db8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x555680ec2048 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x555680ec1f88 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x555680ec2190 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x555680ec2100 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x555680ec22e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x555680ec2250 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x555680ec24b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x555680ec23a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x555680ec2420 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x555680ec2698 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x555680ec2580 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x555680ec2600 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x555680ec27e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x555680ec2758 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x555680ec29f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x555680ec28a8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x555680ec2928 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x555680ec2b58 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x555680ec2ac0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x555680ec2cb0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x555680ec2c18 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x555680ec2d58 <col:57> "" ""
|-CXXMethodDecl 0x555680ec2e68 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x555680ec2dd8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x555680ec2fb8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x555680ec2f28 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x555680ec3138 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x555680ec3070 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x555680ec3200 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x555680ec32c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x555680ec3380 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x555680ec3420 <col:49> "" ""
|-CXXMethodDecl 0x555680ec34b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x555680ec3570 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x555680ec3660 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x555680ec3728 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x555680ec37e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x555680ec38a8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x555680ec39a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x555680ec3a68 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x555680ec3b30 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x555680ec3d08 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x555680ec3be8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x555680ec3c68 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x555680ec3f30 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x555680ec3dd0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x555680ec3e50 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x555680ec4040 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x555680ec40a8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x555680ec40d0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x555680ec41e8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x555680ec4288 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x555680ec42e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x555680ec4348 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x555680ec43f8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x555680ec4460 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x555680ec4698 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x555680ec46e8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555680ec4678 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x555680ec4588 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x555680ec4530 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x555680ec4570 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x555680ec4550 <col:32> 'int' 8
|-CXXRecordDecl 0x555680ec4700 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x555680ec4818 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x555680ec48c0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x555680ec4928 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x555680ec49b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x555680ecaa50 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x555680ecae88 <col:12>
| |-CXXConstructorDecl 0x555680ecab58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x555680ecac68 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x555680ec48c0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x555680ecd410 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x555680ecd3e0 <col:12> 'const char *const' lvalue .data 0x555680ec48c0
| | |     `-DeclRefExpr 0x555680ecd3c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680ecac68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x555680ec4928 'length' 'int'
| | | `-ImplicitCastExpr 0x555680ecd4a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x555680ecd470 <col:12> 'const int' lvalue .length 0x555680ec4928
| | |     `-DeclRefExpr 0x555680ecd450 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680ecac68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x555680ec49b8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x555680ecd530 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x555680ecd500 <col:12> 'String::memo_t *const' lvalue .memo 0x555680ec49b8
| | |     `-DeclRefExpr 0x555680ecd4e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680ecac68 '' 'const String::rep_t &'
| | `-CompoundStmt 0x555680ecd588 <col:12>
| |-CXXConstructorDecl 0x555680ecad08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555680ecad08
| | `-ParmVarDecl 0x555680ecae18 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x555680ed0370 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x555680edbd88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x555680edbe98 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x555680edc3b0 <col:12>
| |   |-BinaryOperator 0x555680edc1c8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x555680edc180 <col:12> 'const char *' lvalue ->data 0x555680ec48c0
| |   | | `-CXXThisExpr 0x555680edc170 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x555680edc1b0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x555680edc140 <col:12> 'const char *const' lvalue .data 0x555680ec48c0
| |   |     `-DeclRefExpr 0x555680edc120 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680edbe98 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x555680edc290 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x555680edc248 <col:12> 'int' lvalue ->length 0x555680ec4928
| |   | | `-CXXThisExpr 0x555680edc238 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x555680edc278 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x555680edc208 <col:12> 'const int' lvalue .length 0x555680ec4928
| |   |     `-DeclRefExpr 0x555680edc1e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680edbe98 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x555680edc358 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x555680edc310 <col:12> 'String::memo_t *' lvalue ->memo 0x555680ec49b8
| |   | | `-CXXThisExpr 0x555680edc300 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x555680edc340 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x555680edc2d0 <col:12> 'String::memo_t *const' lvalue .memo 0x555680ec49b8
| |   |     `-DeclRefExpr 0x555680edc2b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555680edbe98 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x555680edc3a0 <col:12>
| |     `-UnaryOperator 0x555680edc388 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x555680edc378 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x555680edbf08 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555680edbf08
|   `-ParmVarDecl 0x555680edc018 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x555680ec4a30 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x555680ec4c78 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x555680ec4a98 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x555680ec4b18 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x555680ec4b90 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x555680ecaa10 <col:79, line:261:5>
|   |-BinaryOperator 0x555680eca688 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x555680eca620 <col:2, col:5> 'const char *' lvalue .data 0x555680ec48c0
|   | | `-MemberExpr 0x555680eca5f0 <col:2> 'String::rep_t' lvalue ->_r 0x555680ec4a30
|   | |   `-CXXThisExpr 0x555680eca5e0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x555680eca670 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x555680eca650 <col:12> 'const char *' lvalue ParmVar 0x555680ec4a98 'data' 'const char *'
|   |-BinaryOperator 0x555680eca750 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x555680eca6e8 <col:2, col:5> 'int' lvalue .length 0x555680ec4928
|   | | `-MemberExpr 0x555680eca6b8 <col:2> 'String::rep_t' lvalue ->_r 0x555680ec4a30
|   | |   `-CXXThisExpr 0x555680eca6a8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x555680eca738 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555680eca718 <col:14> 'int' lvalue ParmVar 0x555680ec4b18 'length' 'int'
|   `-IfStmt 0x555680eca9f8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x555680eca870 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x555680eca858 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x555680eca838 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x555680eca818 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x555680eca7b0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x555680ec49b8
|     |       | `-MemberExpr 0x555680eca780 <col:7> 'String::rep_t' lvalue ->_r 0x555680ec4a30
|     |       |   `-CXXThisExpr 0x555680eca770 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x555680eca800 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x555680eca7e0 <col:17> 'String::memo_t *' lvalue ParmVar 0x555680ec4b90 'memo' 'String::memo_t *'
|     `-CallExpr 0x555680eca9d0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x555680eca9b8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x555680eca8c0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x555680eb36a8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x555680eca928 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x555680ec4288
|         `-ImplicitCastExpr 0x555680eca910 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x555680eca8f0 <col:27> 'String::memo_t *' lvalue ParmVar 0x555680ec4b90 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x555680ec4f28 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x555680ec4d48 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x555680ec4dc8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x555680ec4e40 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x555680ec4a30 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x555680ecae98 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x555680ecb028 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x555680ecaf90 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x555680ecaf00 <col:2> '<bound member function type>' ->assign_memo 0x555680ec4c78
|     | `-ImplicitCastExpr 0x555680ecafc8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x555680ecaef0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x555680ecafe0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x555680ecaf30 <col:14> 'const char *' lvalue ParmVar 0x555680ec4d48 'data' 'const char *'
|     |-ImplicitCastExpr 0x555680ecaff8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x555680ecaf50 <col:20> 'int' lvalue ParmVar 0x555680ec4dc8 'length' 'int'
|     `-ImplicitCastExpr 0x555680ecb010 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x555680ecaf70 <col:28> 'String::memo_t *' lvalue ParmVar 0x555680ec4e40 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x555680ec50b8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x555680ec4ff8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x555680ecb280 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x555680ecb200 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x555680ecb050 <col:2> '<bound member function type>' ->assign_memo 0x555680ec4c78
|     | `-CXXThisExpr 0x555680ecb040 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x555680ecb238 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x555680ecb0d0 <col:14, col:19> 'const char *' lvalue .data 0x555680ec48c0
|     |   `-MemberExpr 0x555680ecb0a0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x555680ec4a30
|     |     `-DeclRefExpr 0x555680ecb080 <col:14> 'const String' lvalue ParmVar 0x555680ec4ff8 'x' 'const String &'
|     |-ImplicitCastExpr 0x555680ecb250 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x555680ecb150 <col:25, col:30> 'int' lvalue .length 0x555680ec4928
|     |   `-MemberExpr 0x555680ecb120 <col:25, col:27> 'String::rep_t' lvalue ._r 0x555680ec4a30
|     |     `-DeclRefExpr 0x555680ecb100 <col:25> 'const String' lvalue ParmVar 0x555680ec4ff8 'x' 'const String &'
|     `-ImplicitCastExpr 0x555680ecb268 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x555680ecb1d0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x555680ec49b8
|         `-MemberExpr 0x555680ecb1a0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x555680ec4a30
|           `-DeclRefExpr 0x555680ecb180 <col:38> 'const String' lvalue ParmVar 0x555680ec4ff8 'x' 'const String &'
|-CXXMethodDecl 0x555680ec5180 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x555680ecbc40 <col:31, line:278:5>
|   `-IfStmt 0x555680ecbc28 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x555680ecb320 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x555680ecb308 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x555680ecb2d8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x555680ec49b8
|     |     `-MemberExpr 0x555680ecb2a8 <col:6> 'String::rep_t' lvalue ->_r 0x555680ec4a30
|     |       `-CXXThisExpr 0x555680ecb298 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x555680ecbc00 <col:15, line:277:2>
|       |-ParenExpr 0x555680ecb7d0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x555680ecb7a0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x555680ecb430 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x555680ecb418 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x555680ecb400 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x555680ecb3c0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x555680ec4288
|       |   |       `-ImplicitCastExpr 0x555680ecb3a8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x555680ecb378 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x555680ec49b8
|       |   |           `-MemberExpr 0x555680ecb348 <col:27> 'String::rep_t' lvalue ->_r 0x555680ec4a30
|       |   |             `-CXXThisExpr 0x555680ecb338 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x555680ecb490 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x555680ecb470 <col:54> 'int' 0
|       |   `-CallExpr 0x555680ecb700 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x555680ecb6e8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x555680ecb668 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x555680ecb740 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x555680ecb578 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x555680ecb758 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x555680ecb5a8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x555680ecb770 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x555680ecb5e0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x555680ecb788 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x555680ecb650 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x555680ecb638 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x555680ecb600 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x555680ecbb20 <line:274:6, line:275:22>
|       | |-CallExpr 0x555680ecb9e0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x555680ecb9c8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x555680ecb940 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x555680eb4af0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x555680ecb910 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x555680ec4288
|       | |   `-ImplicitCastExpr 0x555680ecb8f8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x555680ecb8c8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x555680ec49b8
|       | |       `-MemberExpr 0x555680ecb898 <col:40> 'String::rep_t' lvalue ->_r 0x555680ec4a30
|       | |         `-CXXThisExpr 0x555680ecb888 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x555680ecbae0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x555680ecbac8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x555680ecba08 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x555680ec9960 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x555680ecbb08 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x555680ecba68 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x555680ec49b8
|       |       `-MemberExpr 0x555680ecba38 <col:15> 'String::rep_t' lvalue ->_r 0x555680ec4a30
|       |         `-CXXThisExpr 0x555680ecba28 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x555680ecbbe0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x555680ecbb78 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x555680ec49b8
|         | `-MemberExpr 0x555680ecbb48 <col:6> 'String::rep_t' lvalue ->_r 0x555680ec4a30
|         |   `-CXXThisExpr 0x555680ecbb38 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x555680ecbbc8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x555680ecbba8 <col:16> 'int' 0
|-CXXMethodDecl 0x555680ec5418 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x555680ec5238 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x555680ec52b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x555680ec5330 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x555680ec54f0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x555680ec5740 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x555680ec55a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x555680ec5628 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x555680ec56a0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x555680ec5928 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x555680ec5810 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x555680ec5890 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x555680ec5a28 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x555680ecbd18 <col:41, line:286:5>
|   `-ReturnStmt 0x555680ecbd08 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x555680ecbcd8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x555680ecbca0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x555680ecbc88 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x555680ecbc68 <col:46> 'int' 1
|-CXXMethodDecl 0x555680ec5cc8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x555680ec5ae0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x555680ec5b60 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x555680ec5be0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x555680ec9960 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x555680ec5d90 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x555680ec9a30 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x555680ec9c00 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x555680ec9ae8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x555680ec9b68 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x555680ec9cc0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x555680ec9d88 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x555680ec9e88 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x555680ec9f00 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x555680ec9f78 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x555680ec9fe0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x555680eca0e0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x555680eca130 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555680eca0c0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x555680eca0a0 <col:22> 'int' 14
|-CXXMethodDecl 0x555680eca348 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x555680eca160 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x555680eca1e0 <col:38> col:41 'int'
| `-ParmVarDecl 0x555680eca260 <col:43> col:46 'int'
|-FriendDecl 0x555680eca450 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x555680eca4e0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555680f8c3d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x555680f8c5a8 prev 0x555680f8c3d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x555680f8c638 <col:46, col:52> col:46 public
|-TypedefDecl 0x555680f8c660 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x555680f8dfc0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x555680f8df70 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x555680f8df50 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x555680f8c878 'type'
|     `-SubstTemplateTypeParmType 0x555680f8c840 'String' sugar
|       |-TemplateTypeParmType 0x555680e7eee0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e7ee90 'T'
|       `-RecordType 0x555680ebb6d0 'String'
|         `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x555680f8e078 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x555680f8e040 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x555680f8e020 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x555680f8dfc0 'type'
|     `-ElaboratedType 0x555680f8df70 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x555680f8df50 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x555680f8c878 'type'
|         `-SubstTemplateTypeParmType 0x555680f8c840 'String' sugar
|           |-TemplateTypeParmType 0x555680e7eee0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555680e7ee90 'T'
|           `-RecordType 0x555680ebb6d0 'String'
|             `-CXXRecord 0x555680ebb640 'String'
|-CXXMethodDecl 0x555680f8e1f8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x555680f8e108 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x555680f8e2e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x555680f8e3c8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x555680f8e3c8
|-CXXMethodDecl 0x555680f8e698 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x555680f8e5a0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x555680f8e8d8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x555680f8e750 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x555680f8e7c8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55568119a230 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x555680f8e998 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x555680f8ea10 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55568119a388 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55568119a458 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55568119a6a8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55568119a518 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55568119a590 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55568119a908 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55568119a778 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55568119a7f0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55568119aac8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55568119a9d8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55568119ac88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55568119ab90 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55568119ad40 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55568119adf0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55568119b028 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55568119aea0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55568119af18 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55568119b2c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55568119b1d0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55568119b390 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55568119b3e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55568119b430 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5556810f2e70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x555680f8ae68 prev 0x5556810f2e70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x555680f8c340 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x555680f8c2f0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x555680f8c2d0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x555680f8c180 'type'
|     `-SubstTemplateTypeParmType 0x555680f8c010 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x555680e54c90 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x555680e54c38 'F'
|       `-RecordType 0x555680f8bc70 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x555680f8bb90 'typed_array_memory'
|-FieldDecl 0x55568119b480 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55568119b4d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55568119b508 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x555680f8af00 'String' sugar
|   |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x555680e8c1a8 'T'
|   `-RecordType 0x555680ebb6d0 'String'
|     `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x55568119b598 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55568119b560 'String &'
|   `-SubstTemplateTypeParmType 0x555680f8af00 'String' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555680ebb6d0 'String'
|       `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x55568119b628 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55568119b5f0 'const String &'
|   `-QualType 0x555680f8af01 'const String' const
|     `-SubstTemplateTypeParmType 0x555680f8af00 'String' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555680ebb6d0 'String'
|         `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x55568119b6b8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55568119b680 'String *'
|   `-SubstTemplateTypeParmType 0x555680f8af00 'String' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555680ebb6d0 'String'
|       `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x55568119b748 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55568119b710 'const String *'
|   `-QualType 0x555680f8af01 'const String' const
|     `-SubstTemplateTypeParmType 0x555680f8af00 'String' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555680ebb6d0 'String'
|         `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x55568119c3a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55568119c350 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55568119c330 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55568119c268 'type'
|     `-LValueReferenceType 0x55568119c230 'const String &'
|       `-QualType 0x55568119bfd1 'const String' const
|         `-SubstTemplateTypeParmType 0x55568119bfd0 'String' sugar
|           |-TemplateTypeParmType 0x555680e5ebe0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555680e5eb88 'T'
|           `-RecordType 0x555680ebb6d0 'String'
|             `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x55568119c408 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55568119b5f0 'const String &'
|   `-QualType 0x555680f8af01 'const String' const
|     `-SubstTemplateTypeParmType 0x555680f8af00 'String' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555680ebb6d0 'String'
|         `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x55568119c460 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x55568119c4c8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55568119b680 'String *'
|   `-SubstTemplateTypeParmType 0x555680f8af00 'String' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555680ebb6d0 'String'
|       `-CXXRecord 0x555680ebb640 'String'
|-TypedefDecl 0x55568119c530 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55568119b710 'const String *'
|   `-QualType 0x555680f8af01 'const String' const
|     `-SubstTemplateTypeParmType 0x555680f8af00 'String' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555680ebb6d0 'String'
|         `-CXXRecord 0x555680ebb640 'String'
|-EnumDecl 0x55568119c588 <line:134:5> col:5
| `-EnumConstantDecl 0x55568119c680 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55568119c660 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x555680e8d888 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x555680e8d860 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x555680e8d840 <col:40> 'int' 1
|-CXXConstructorDecl 0x55568119c708 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55568119c998 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55568119c7c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568119c860 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55568119cc28 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55568119cb10 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55568119cee8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55568119cdd0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55568119d200 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55568119d0e0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55568119d510 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55568119d3f0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55568119d800 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55568119d648 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568119d6c0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55568119d928 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55568119d9d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568119da30 <col:30> Inherited
|-CXXMethodDecl 0x55568119da78 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55568119db28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568119db80 <col:30> Inherited
|-CXXMethodDecl 0x55568119dc48 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55568119dcf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568119dd50 <col:30> Inherited
|-CXXMethodDecl 0x55568119dd98 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55568119de48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568119dea0 <col:30> Inherited
|-CXXMethodDecl 0x55568119dee8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55568119df98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568119dff0 <col:30> Inherited
|-CXXMethodDecl 0x55568119e038 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55568119e0e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568119e140 <col:30> Inherited
|-CXXMethodDecl 0x55568119e168 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55568119e218 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55568119e2c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55568119e488 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55568119e378 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568119e3f0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55568119e5d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55568119e548 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568119e788 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55568119e690 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55568119e840 <col:20>
| `-OptimizeNoneAttr 0x55568119e898 <col:30>
|-CXXMethodDecl 0x55568119e9b8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55568119e8c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55568119ea70 <col:20>
| `-OptimizeNoneAttr 0x55568119eac8 <col:30>
|-CXXMethodDecl 0x55568119eb80 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55568119eaf0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568119ecc8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55568119ec38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568119edf8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55568119eef8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55568119efc8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55568119f098 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55568119f1d8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55568119f148 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568119f320 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55568119f290 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568119f468 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55568119f3d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55568119f520 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55568119f620 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55568119f590 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55568119f6d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55568119f798 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55568119f898 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55568119fa18 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55568119f958 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5556811a01d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55568119fad0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5556811a0138 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5556811a0038 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5556811a02b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5556811a0408 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5556811a0378 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5556811a04c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5556811a0708 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5556811a0580 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5556811a05f8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5556811a0898 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5556811a07d8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5556811a0aa8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5556811a0960 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5556811a09d8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5556811a0b68 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x5556811a0dc8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5556811a0cd0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5556811a0e98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5556811a0e98

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568114fc28 prev 0x5556810f0040 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55568114fd20 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55568114fdb0 <col:22, col:28> col:22 public
|-EnumDecl 0x55568114fdd8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55568114fef8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55568114fed8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55568114fec0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55568114fea0 <col:14> 'int' 999
| |-EnumConstantDecl 0x55568114ffa0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55568114ff80 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55568114ff68 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55568114ff48 <col:14> 'int' 1
| |-EnumConstantDecl 0x555681150030 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x555681150010 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55568114fff0 <col:17> 'int' 0
| |-EnumConstantDecl 0x5556811500c0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5556811500a0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x555681150080 <col:13> 'int' 1
| |-EnumConstantDecl 0x555681150150 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x555681150130 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x555681150110 <col:16> 'int' 2
| |-EnumConstantDecl 0x5556811501e0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5556811501c0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5556811501a0 <col:13> 'int' 3
| |-EnumConstantDecl 0x555681150270 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x555681150250 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x555681150230 <col:15> 'int' 4
| |-EnumConstantDecl 0x555681150300 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5556811502e0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5556811502c0 <col:14> 'int' 5
| |-EnumConstantDecl 0x555681150390 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x555681150370 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x555681150350 <col:12> 'int' 6
| `-EnumConstantDecl 0x555681150420 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x555681150400 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5556811503e0 <col:13> 'int' 7
|-VarDecl 0x555681150490 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x555681150518 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5556811505a0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x555681150628 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5556811506b0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x555681150738 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5556811507c0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x555681150848 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5556811508d0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x555681150958 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5556811509e0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x555681150ae0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x555681155ec8 '_nerrors' 'int'
| | `-IntegerLiteral 0x555681158708 <line:128:13> 'int' 0
| `-CompoundStmt 0x555681158778 <col:16, line:129:5>
|-CXXDestructorDecl 0x555681150bd0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x555681158788 <col:29, line:132:5>
|-CXXMethodDecl 0x555681150d88 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x555681150cc0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555681150e50 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x555681150f38 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5556811587e0 <col:44, line:161:5>
|   `-ReturnStmt 0x5556811587d0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5556811587b8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x555681158798 <col:9> 'ErrorHandler *' lvalue Var 0x555681155f28 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5556811510a8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x555681150fe8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555681151170 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x555681158840 <col:43, line:173:5>
|   `-ReturnStmt 0x555681158830 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x555681158818 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5556811587f8 <col:9> 'ErrorHandler *' lvalue Var 0x555681155fa0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x555681151228 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5556811512a8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5556811513b8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x555681151328 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x555681151508 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x555681151478 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x555681151660 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5556811515c8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5556811517b8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x555681151720 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x555681151910 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x555681151878 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x555681151b20 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5556811519c8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x555681151a48 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x555681151cf8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x555681151be0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x555681151c60 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x555681151f18 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x555681151db8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x555681151e38 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5556811520f8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x555681151fd8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x555681152058 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5556811522d8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5556811521b8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x555681152238 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x555681152460 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x555681152398 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x555681152630 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x555681152518 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x555681152590 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x555681158a98 <col:57, line:234:5>
|   `-ReturnStmt 0x555681158a88 <line:233:2, col:41>
|     `-ExprWithCleanups 0x555681158a70 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x555681158a18 <col:9, col:41> 'int'
|         |-MemberExpr 0x5556811589e8 <col:9> '<bound member function type>' ->xmessage 0x555681152460
|         | `-CXXThisExpr 0x5556811589d8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x555681158a58 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x555681158a40 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5556811589b8 <col:18, col:40> 'String' (CXXTemporary 0x5556811589b8)
|               `-CallExpr 0x555681158980 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x555681158968 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5556811588e0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5556811546b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x555681158900 <col:31> 'const String' lvalue ParmVar 0x555681152590 'str' 'const String &'
|                 `-DeclRefExpr 0x555681158920 <col:36> 'const String' lvalue ParmVar 0x555681152518 'anno' 'const String &'
|-CXXMethodDecl 0x555681152970 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5556811526f0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x555681152770 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x555681152840 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x555681158d28 <col:68, line:243:5>
|   `-ReturnStmt 0x555681158d18 <line:242:2, col:41>
|     `-ExprWithCleanups 0x555681158d00 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x555681158ca0 <col:9, col:41> 'int'
|         |-MemberExpr 0x555681158c70 <col:9> '<bound member function type>' ->xmessage 0x555681152630
|         | `-CXXThisExpr 0x555681158c60 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x555681158b38 <col:18> 'const String' lvalue ParmVar 0x5556811526f0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x555681158ce8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x555681158cd0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x555681158c40 <col:24, col:40> 'String' (CXXTemporary 0x555681158c40)
|               `-CXXMemberCallExpr 0x555681158bd8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x555681158b68 <col:24> '<bound member function type>' ->vformat 0x555681153b50
|                 | `-CXXThisExpr 0x555681158b58 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x555681158c08 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x555681158b98 <col:32> 'const char *' lvalue ParmVar 0x555681152770 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x555681158c20 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x555681158bb8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x555681152840 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x555681152c10 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x555681152a38 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x555681152ab0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x555681152b28 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x555681159068 <col:23, line:254:5>
|   `-ReturnStmt 0x555681159058 <line:253:2, col:71>
|     `-ExprWithCleanups 0x555681159040 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x555681158fe0 <col:9, col:71> 'int'
|         |-MemberExpr 0x555681158fb0 <col:9> '<bound member function type>' ->xmessage 0x555681152630
|         | `-CXXThisExpr 0x555681158fa0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x555681159028 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x555681159010 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x555681158f60 <col:18, col:65> 'String' (CXXTemporary 0x555681158f60)
|         |     `-CallExpr 0x555681158ef8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x555681158ee0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x555681158dc8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5556811546b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x555681158de8 <col:31> 'const String' lvalue ParmVar 0x555681152ab0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x555681158f40 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x555681158f28 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x555681158ec0 <col:37, col:64> 'String' (CXXTemporary 0x555681158ec0)
|         |             `-CallExpr 0x555681158e90 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x555681158e78 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x555681158e08 <col:37> 'String (const String &)' lvalue CXXMethod 0x555681154d08 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x555681158e28 <col:56> 'const String' lvalue ParmVar 0x555681152a38 'landmark' 'const String &'
|         `-DeclRefExpr 0x555681158f80 <col:68> 'const String' lvalue ParmVar 0x555681152b28 'str' 'const String &'
|-CXXMethodDecl 0x555681152f90 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x555681152cd8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x555681152d50 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x555681152dd0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x555681152e48 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x555681159320 <col:34, line:267:5>
|   `-ReturnStmt 0x555681159310 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5556811592f8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x555681159290 <col:9, col:51> 'int'
|         |-MemberExpr 0x555681159260 <col:9> '<bound member function type>' ->xmessage 0x555681152c10
|         | `-CXXThisExpr 0x555681159250 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x555681159108 <col:18> 'const String' lvalue ParmVar 0x555681152cd8 'landmark' 'const String &'
|         |-DeclRefExpr 0x555681159128 <col:28> 'const String' lvalue ParmVar 0x555681152d50 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5556811592e0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5556811592c8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x555681159230 <col:34, col:50> 'String' (CXXTemporary 0x555681159230)
|               `-CXXMemberCallExpr 0x5556811591c8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x555681159158 <col:34> '<bound member function type>' ->vformat 0x555681153b50
|                 | `-CXXThisExpr 0x555681159148 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5556811591f8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x555681159188 <col:42> 'const char *' lvalue ParmVar 0x555681152dd0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x555681159210 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5556811591a8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x555681152e48 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5556811530a0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x5556811593a0 <col:25, line:288:5>
|   `-ReturnStmt 0x555681159390 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x555681159378 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x555681159348 <col:9> 'const int' lvalue ->_nerrors 0x555681155ec8
|         `-CXXThisExpr 0x555681159338 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5556811532b0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x555681153158 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5556811531d8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x555681153598 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x555681153378 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5556811533f8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x555681153470 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x555681153730 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x555681153668 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x555681153978 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5556811537f0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x555681153868 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x555681159600 <col:58, line:357:5>
|   `-ReturnStmt 0x5556811595f0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5556811595d8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5556811595a8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x555681159590 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x555681159570 <col:9, col:29> 'String' (CXXTemporary 0x555681159570)
|             `-CallExpr 0x555681159500 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5556811594e8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x555681159468 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x555681153598 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x555681159408 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x555681159538 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x555681159428 <col:21> 'const char *' lvalue ParmVar 0x5556811537f0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x555681159550 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x555681159448 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x555681153868 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x555681153b50 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x555681153a40 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x555681153ab8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x555681153ca8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x555681153c18 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x555681153e28 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x555681153d60 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5556811540c0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x555681153ee0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x555681153f60 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x555681153fd8 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x555681154220 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x555681154190 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x555681159718 <col:37, line:441:5>
|   `-IfStmt 0x555681159700 <line:439:2, line:440:8>
|     |-BinaryOperator 0x555681159688 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x555681159658 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x555681159618 <col:6> 'int' lvalue ParmVar 0x555681154190 'level' 'int'
|     | `-ImplicitCastExpr 0x555681159670 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x555681159638 <col:15> 'ErrorHandler::Level' EnumConstant 0x5556811501e0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5556811596e8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5556811596b8 <col:8> 'int' lvalue ->_nerrors 0x555681155ec8
|         `-CXXThisExpr 0x5556811596a8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5556811542e8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x5556811597b0 <col:26, line:448:5>
|   `-BinaryOperator 0x555681159790 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x555681159740 <col:2> 'int' lvalue ->_nerrors 0x555681155ec8
|     | `-CXXThisExpr 0x555681159730 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x555681159770 <col:13> 'int' 0
|-CXXMethodDecl 0x5556811544b0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5556811543a0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x555681154418 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5556811546b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x555681154570 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5556811545e8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x555681154968 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x555681154778 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5556811547f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x555681154878 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x555681154a20 <col:59> 0 0
|-CXXMethodDecl 0x555681154bb8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x555681154a98 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x555681154b18 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x555681159e20 <col:70, line:534:5>
|   |-DeclStmt 0x555681159920 <line:528:2, col:20>
|   | |-VarDecl 0x5556811597d8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x555681159840 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x555681159878 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5556811598e0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5556811599f0 <line:529:2, col:23>
|   | `-VarDecl 0x555681159950 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5556811599d8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5556811599b8 <col:18> 'const char *' lvalue ParmVar 0x555681154a98 'begin' 'const char *'
|   |-DoStmt 0x555681159db8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x555681159ce8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x555681159cd0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x555681159cb0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x555681159a08 <col:6> 'const char *' lvalue Var 0x555681159950 'x' 'const char *'
|   | |     `-CallExpr 0x555681159c00 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x555681159be8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x555681159ba0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x555681158450 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x555681159c68 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x555681159c50 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x555681159ac0 <col:20, col:27> 'String' (CXXTemporary 0x555681159ac0)
|   | |       |     `-CXXTemporaryObjectExpr 0x555681159a88 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x555681159c80 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x555681159ae0 <col:30> 'const char *' lvalue Var 0x555681159950 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x555681159c98 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x555681159b00 <col:33> 'const char *' lvalue ParmVar 0x555681154b18 'end' 'const char *'
|   | |       |-UnaryOperator 0x555681159b40 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x555681159b20 <col:39> 'String' lvalue Var 0x5556811597d8 'name' 'String'
|   | |       |-UnaryOperator 0x555681159b78 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x555681159b58 <col:46> 'String' lvalue Var 0x555681159878 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x555681159b90 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x555681159da0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x555681159d88 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x555681159d68 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x555681159d38 <col:11> '<bound member function type>' .operator int (String::*)() const 0x555680ebee38
|   |         `-ImplicitCastExpr 0x555681159d20 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x555681159d00 <col:11> 'String' lvalue Var 0x5556811597d8 'name' 'String'
|   `-ReturnStmt 0x555681159e10 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x555681159df8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x555681159dd8 <col:9> 'const char *' lvalue Var 0x555681159950 'x' 'const char *'
|-CXXMethodDecl 0x555681154d08 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x555681154c78 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55568115a428 <col:55, line:550:5>
|   `-IfStmt 0x55568115a400 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55568115a060 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55568115a048 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55568115a030 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55568115a010 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x555681159fe0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x555680ebee38
|     | |       `-DeclRefExpr 0x555681159e80 <col:6> 'const String' lvalue ParmVar 0x555681154c78 'x' 'const String &'
|     | `-BinaryOperator 0x555681159fc0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x555681159f90 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x555681159f40 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x555681159f28 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x555681159ee0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x555680ed8670 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x555681159ea0 <col:11> 'const String' lvalue ParmVar 0x555681154c78 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x555681159ec0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x555681159fa8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x555681159f78 <col:19> 'char' 123
|     |-ReturnStmt 0x55568115a0d0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55568115a0a0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55568115a080 <col:13> 'const String' lvalue ParmVar 0x555681154c78 'x' 'const String &'
|     `-IfStmt 0x55568115a3d8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55568115a168 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55568115a150 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55568115a130 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55568115a100 <col:11> '<bound member function type>' .operator int (String::*)() const 0x555680ebee38
|       |       `-DeclRefExpr 0x55568115a0e0 <col:11> 'const String' lvalue ParmVar 0x555681154c78 'x' 'const String &'
|       |-ReturnStmt 0x55568115a2f0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55568115a2d8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55568115a2a8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55568115a290 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55568115a270 <col:13, col:29> 'String' (CXXTemporary 0x55568115a270)
|       |         `-CallExpr 0x55568115a220 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55568115a208 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55568115a180 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5556811544b0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55568115a250 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55568115a1a0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55568115a1c0 <col:28> 'const String' lvalue ParmVar 0x555681154c78 'x' 'const String &'
|       `-ReturnStmt 0x55568115a3c8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55568115a3b0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55568115a380 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55568115a368 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55568115a348 <col:13, col:20> 'String' (CXXTemporary 0x55568115a348)
|                 `-CXXTemporaryObjectExpr 0x55568115a310 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x555681154f08 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x555681154dc0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x555681154e38 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5556811586f8 <col:71> 'bool' false
|-CXXRecordDecl 0x555681154fb8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5556811552b8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x555681155250 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5556811551f0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5556811551b0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x555680ebb6d0 'String'
|       | `-CXXRecord 0x555680ebb640 'String'
|       |-BuiltinType 0x555680b8a370 'int'
|       `-DecayedType 0x555681152810 '__va_list_tag *' sugar
|         |-TypedefType 0x5556811527e0 'va_list' sugar
|         | |-Typedef 0x555680dac780 'va_list'
|         | `-TypedefType 0x555680dac730 '__gnuc_va_list' sugar
|         |   |-Typedef 0x555680ce4358 '__gnuc_va_list'
|         |   `-TypedefType 0x555680ce42c0 '__builtin_va_list' sugar
|         |     |-Typedef 0x555680bcbbd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x555680bcbb80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x555680b8b0c0 '__va_list_tag'
|         |         `-CXXRecord 0x555680b8b028 '__va_list_tag'
|         `-PointerType 0x555680db2020 '__va_list_tag *'
|           `-RecordType 0x555680b8b0c0 '__va_list_tag'
|             `-CXXRecord 0x555680b8b028 '__va_list_tag'
|-EnumDecl 0x555681155310 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x555681155410 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555681155970 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556811553f0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5556811553d0 <col:16> 'int' 1
| |-EnumConstantDecl 0x5556811554a0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555681155988 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555681155480 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x555681155460 <col:21> 'int' 2
| |-EnumConstantDecl 0x555681155530 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5556811559a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555681155510 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5556811554f0 <col:22> 'int' 4
| |-EnumConstantDecl 0x5556811555c0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5556811559b8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556811555a0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x555681155580 <col:17> 'int' 8
| |-EnumConstantDecl 0x555681155650 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5556811559d0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555681155630 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x555681155610 <col:22> 'int' 16
| |-EnumConstantDecl 0x5556811556e0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5556811559e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556811556c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5556811556a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x555681155770 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555681155a00 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555681155750 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x555681155730 <col:17> 'int' 64
| |-EnumConstantDecl 0x555681155800 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555681155a18 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556811557e0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5556811557c0 <col:14> 'int' 128
| |-EnumConstantDecl 0x555681155890 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555681155a30 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555681155870 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x555681155850 <col:16> 'int' 256
| `-EnumConstantDecl 0x555681155920 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x555681155a48 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555681155900 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5556811558e0 <col:12> 'int' 1024
|-CXXMethodDecl 0x555681155c58 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x555681155a70 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x555681155b10 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x555681155de0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x555681155d18 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x555681155e88 <line:580:3, col:10> col:3 private
|-FieldDecl 0x555681155ec8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x555681155f28 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x555681155fa0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x555681158450 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x555681156018 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x555681156098 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5556811581c8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x555681158240 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5556811582b8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x555681158330 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x555681158578 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x555681158578
| `-ParmVarDecl 0x555681158688 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55568115a788 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55568115a788
  `-ParmVarDecl 0x55568115a898 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555680eaece0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555680eaedf8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x555680eaee88 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x555680eaef58 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x555680eaf040 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x555680eaf258 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x555680eaf100 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eaf408 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x555680eaf310 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x555680eaf550 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x555680eaf4c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x555680eaf698 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x555680eaf608 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eaf7e0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x555680eaf750 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eaf8a8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x555680eaf9f0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x555680eaf960 <col:28> col:31 'int'
|-CXXMethodDecl 0x555680eafab8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x555680eafc00 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x555680eafb70 <col:28> col:31 'int'
|-CXXMethodDecl 0x555680eafd78 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x555680eafcb8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eafec0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x555680eafe30 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eaff88 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x555680eb0148 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x555680eb0038 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x555680eb00b0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eb0398 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x555680eb0208 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x555680eb0280 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555680eb0448 <col:86> "" ""
|-CXXMethodDecl 0x555680eb06b8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x555680eb0528 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x555680eb05a0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eb0868 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x555680eb0778 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x555680eb0a18 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x555680eb0920 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x555680eb0ce8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x555680eb0ad0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x555680eb0b48 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x555680eb0bc0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eb0fc8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x555680eb0db0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x555680eb0e28 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x555680eb0ea0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555680eb1080 <col:115> "" ""
|-AccessSpecDecl 0x555680eb10f0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x555680eb1128 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555680eb2640 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x555680eb2640
| `-ParmVarDecl 0x555680eb2748 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x555680eb27e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x555680eb27e8
| `-ParmVarDecl 0x555680eb28f8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x555680ee7f28 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5556810d9d20 <col:7>
|-CXXConstructorDecl 0x555680ee8000 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x555680ee8000
| `-ParmVarDecl 0x555680ee8118 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x555680ee8188 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x555680ee8188
| `-ParmVarDecl 0x555680ee8298 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5556810dc720 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5556810c88c8 prev 0x5556810bdad0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5556810c89c0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5556810c8ab0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5556810c8bd8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5556810c8d58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5556810c8ed8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5556810c9058 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5556810d9e88 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5556810da6f8 <col:11>
|-CXXDestructorDecl 0x5556810d9f60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5556810da098 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5556810da098
| `-ParmVarDecl 0x5556810da1a8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5556810da248 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5556810da248
| `-ParmVarDecl 0x5556810da358 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5556810dd118 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5556810dd228 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5556810dd4a8 <col:11>
|   `-ReturnStmt 0x5556810dd498 <col:11>
|     `-UnaryOperator 0x5556810dd480 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5556810dd470 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5556810dd298 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5556810dd298
  `-ParmVarDecl 0x5556810dd3a8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5556810c90c0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5556810c91d8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5556810c9278 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5556810c92e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5556810c9348 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5556810c93b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5556810c9410 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5556810c94d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5556810c9530 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5556810c9590 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5556810d9d98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5556810c9278 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5556810da708 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5556810da760 <col:12>
|-CXXConstructorDecl 0x5556810da3c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5556810da3c8
| `-ParmVarDecl 0x5556810da4d8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5556810da578 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5556810da578
| `-ParmVarDecl 0x5556810da688 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5556810dc800 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5556810b71e0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5556810b72f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5556810b7388 <col:16, col:22> col:16 public
|-EnumDecl 0x5556810b73b0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5556810b74b0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5556810b7590 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810b7490 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5556810b7470 <col:21> 'int' 28
| `-EnumConstantDecl 0x5556810b7540 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5556810b75a8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810b7520 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5556810b7500 <col:22> 'int' 64
|-CXXMethodDecl 0x5556810b78e8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5556810b75d0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5556810b7650 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5556810b76c8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5556810b7740 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5556810b79a8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5556810b7ba8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5556810b7a20 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5556810b7a98 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5556810b7c58 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5556810b7db8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5556810b7cc8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5556810b7e60 <col:72> warn_unused_result ""
|-TypedefDecl 0x5556810b81c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5556810b8150 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5556810b80f0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5556810b80b0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x555680b8a2d0 'void'
|       |-PointerType 0x555680e37580 'unsigned char *'
|       | `-BuiltinType 0x555680b8a3d0 'unsigned char'
|       |-TypedefType 0x555680c33af0 'size_t' sugar
|       | |-Typedef 0x555680bfab20 'size_t'
|       | `-BuiltinType 0x555680b8a430 'unsigned long'
|       `-PointerType 0x555680b8aad0 'void *'
|         `-BuiltinType 0x555680b8a2d0 'void'
|-CXXMethodDecl 0x5556810b8638 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5556810b8230 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5556810b82a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5556810b8340 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5556810b83c0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5556810d2d30 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5556810d2d18 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5556810d2ce0 <col:58> 'int' 0
| |-ParmVarDecl 0x5556810b8440 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5556810d2d58 <col:76> 'int' 0
| |-ParmVarDecl 0x5556810b84c0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5556810d2d78 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5556810b8708 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5556810b8788 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5556810b8848 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5556810b88e8 <col:20>
| `-OptimizeNoneAttr 0x5556810b8940 <col:30>
|-CXXMethodDecl 0x5556810b89b8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5556810b8a58 <col:20>
| `-OptimizeNoneAttr 0x5556810b8ab0 <col:30>
|-CXXMethodDecl 0x5556810b8b28 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5556810b8bc8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5556810b8c78 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5556810b8d18 <col:20>
| |-OptimizeNoneAttr 0x5556810b8d70 <col:30>
| `-WarnUnusedResultAttr 0x5556810b8d98 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5556810b8df0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5556810b8e90 <col:20>
| `-OptimizeNoneAttr 0x5556810b8ee8 <col:30>
|-CXXMethodDecl 0x5556810b8f38 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5556810b8fd8 <col:20>
| `-OptimizeNoneAttr 0x5556810b9030 <col:30>
|-CXXMethodDecl 0x5556810b9078 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5556810b9118 <col:20>
| `-OptimizeNoneAttr 0x5556810b9170 <col:30>
|-CXXMethodDecl 0x5556810b91b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5556810b9278 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5556810b9340 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5556810b9408 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5556810b94c8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5556810b95e8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5556810d2e40 <col:54, line:99:5>
|   `-ReturnStmt 0x5556810d2e30 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5556810d2e18 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5556810d2de8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5556810c98c8
|         `-CXXThisExpr 0x5556810d2dd8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5556810b9788 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5556810b9698 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5556810d2ef0 <col:67, line:103:5>
|   `-BinaryOperator 0x5556810d2ed0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5556810d2e68 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5556810c98c8
|     | `-CXXThisExpr 0x5556810d2e58 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5556810d2eb8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5556810d2e98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5556810b9698 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5556810b9880 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5556810d2f70 <col:33, line:107:5>
|   `-ReturnStmt 0x5556810d2f60 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5556810d2f48 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5556810d2f18 <col:16> 'void *' lvalue ->_destructor_argument 0x5556810c9930
|         `-CXXThisExpr 0x5556810d2f08 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5556810b9940 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5556810d35a0 <col:25, line:113:5>
|   |-ParenExpr 0x5556810d32e8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5556810d32b8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d3028 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5556810d3000 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5556810d2fc8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5556810d2f98 <col:24> '<bound member function type>' ->shared 0x5556810b89b8
|   |   |       `-ImplicitCastExpr 0x5556810d2fe8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5556810d2f88 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5556810d3088 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d3068 <col:42> 'int' 0
|   |   `-CallExpr 0x5556810d3218 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5556810d3200 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d31e0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d3258 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d30f8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5556810d3270 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d3120 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d3288 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d3158 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5556810d32a0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d31c8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d31b0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d3178 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5556810d34e8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5556810d3318 <col:2> 'unsigned char *' lvalue ->_head 0x5556810c96d0
|   | | `-CXXThisExpr 0x5556810d3308 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5556810d34d0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5556810d34b0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5556810d3358 <col:10> 'unsigned char *' lvalue ->_data 0x5556810c9738
|   |     | `-CXXThisExpr 0x5556810d3348 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5556810d3498 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5556810d3478 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5556810d3398 <col:18> 'unsigned char *' lvalue ->_tail 0x5556810c97a0
|   |         | `-CXXThisExpr 0x5556810d3388 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5556810d3460 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5556810d3440 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5556810d33d8 <col:26> 'unsigned char *' lvalue ->_end 0x5556810c9808
|   |             | `-CXXThisExpr 0x5556810d33c8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5556810d3428 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5556810d3408 <col:33> 'int' 0
|   `-BinaryOperator 0x5556810d3580 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5556810d3518 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5556810c98c8
|     | `-CXXThisExpr 0x5556810d3508 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5556810d3568 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5556810d3548 <col:16> 'int' 0
|-CXXMethodDecl 0x5556810b9a80 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5556810b99f0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5556810b9b28 <col:20>
| |-OptimizeNoneAttr 0x5556810b9b80 <col:30>
| `-WarnUnusedResultAttr 0x5556810b9ba8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5556810b9c78 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5556810b9be8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5556810b9d20 <col:20>
| |-OptimizeNoneAttr 0x5556810b9d78 <col:30>
| `-WarnUnusedResultAttr 0x5556810b9da0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5556810b9ed8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5556810b9de0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5556810b9f80 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5556810ba080 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5556810b9ff0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5556810ba128 <col:20>
| `-OptimizeNoneAttr 0x5556810ba180 <col:30>
|-CXXMethodDecl 0x5556810ba248 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5556810ba1b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5556810ba2f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5556810ba3f0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5556810ba360 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5556810ba498 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5556810ba598 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5556810ba508 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5556810ba640 <col:20>
| `-OptimizeNoneAttr 0x5556810ba698 <col:30>
|-CXXMethodDecl 0x5556810ba828 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5556810ba6d8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5556810ba750 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5556810d2d98 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5556810ba8d8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5556810baad8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5556810ba950 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5556810ba9c8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556810bace8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5556810bab98 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5556810bac10 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556810baef8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5556810bada8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5556810bae28 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5556810d2da8 <col:39> 'int' 0
|-CXXMethodDecl 0x5556810bafc8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5556810bb090 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5556810bb158 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5556810bb218 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5556810bb2e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5556810bb428 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5556810bb398 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5556810bb5f8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5556810bb4e8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5556810bb560 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556810bb6c8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5556810bb788 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5556810bb828 <col:20>
| `-OptimizeNoneAttr 0x5556810bb880 <col:30>
|-CXXMethodDecl 0x5556810bb8d0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5556810bb970 <col:20>
| `-OptimizeNoneAttr 0x5556810bb9c8 <col:30>
|-CXXMethodDecl 0x5556810bba18 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5556810bbad8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5556810bbba0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5556810bbc40 <col:20>
| `-OptimizeNoneAttr 0x5556810bbc98 <col:30>
|-CXXMethodDecl 0x5556810bbde8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5556810bbcd8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5556810bbd50 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556810bbf38 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5556810bbea8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556810bc010 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5556810bc0d0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5556810bc170 <col:20>
| `-OptimizeNoneAttr 0x5556810bc1c8 <col:30>
|-CXXMethodDecl 0x5556810bc218 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5556810bc2b8 <col:20>
| `-OptimizeNoneAttr 0x5556810bc310 <col:30>
|-CXXMethodDecl 0x5556810bc360 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5556810bc428 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5556810bc4c8 <col:20>
| `-OptimizeNoneAttr 0x5556810bc520 <col:30>
|-CXXMethodDecl 0x5556810bc568 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5556810bc688 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5556810bc7f8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5556810bc738 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5556810bc8e8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5556810bc988 <col:20>
| `-OptimizeNoneAttr 0x5556810bc9e0 <col:30>
|-CXXMethodDecl 0x5556810bca30 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5556810bcaf0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5556810bcd28 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5556810bcba0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5556810bcc18 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5556810bcdd8 <col:20>
| `-OptimizeNoneAttr 0x5556810bce30 <col:30>
|-CXXMethodDecl 0x5556810bced8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5556810bcf78 <col:20>
| `-OptimizeNoneAttr 0x5556810bcfd0 <col:30>
|-CXXMethodDecl 0x5556810bd020 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5556810bd0c0 <col:20>
| `-OptimizeNoneAttr 0x5556810bd118 <col:30>
|-CXXMethodDecl 0x5556810bd160 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5556810bd200 <col:20>
| `-OptimizeNoneAttr 0x5556810bd258 <col:30>
|-CXXMethodDecl 0x5556810bd358 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5556810bd290 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5556810bd400 <col:20>
| `-OptimizeNoneAttr 0x5556810bd458 <col:30>
|-CXXMethodDecl 0x5556810bd618 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5556810bd490 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5556810bd508 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5556810bd6c8 <col:20>
| `-OptimizeNoneAttr 0x5556810bd720 <col:30>
|-CXXMethodDecl 0x5556810bd7c8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5556810bd8e8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5556810bda08 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5556810bdaa8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5556810bdad0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5556810bdbf8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5556810bdc98 <col:20>
| `-OptimizeNoneAttr 0x5556810bdcf0 <col:30>
|-CXXMethodDecl 0x5556810bdd98 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5556810bde38 <col:20>
| `-OptimizeNoneAttr 0x5556810bde90 <col:30>
|-AccessSpecDecl 0x5556810bdeb8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5556810bdee0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5556810bdfe0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5556810be030 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810bdfc0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5556810bdfa0 <col:14> 'int' 48
|-CXXMethodDecl 0x5556810be098 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5556810be138 <col:20>
| `-OptimizeNoneAttr 0x5556810be190 <col:30>
|-CXXMethodDecl 0x5556810be208 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5556810be2a8 <col:20>
| `-OptimizeNoneAttr 0x5556810be300 <col:30>
|-CXXMethodDecl 0x5556810be3c8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5556810be338 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5556810be568 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5556810be708 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5556810be618 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5556810be7b0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5556810be8b0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5556810bec60 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810be890 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5556810be870 <col:9> 'int' 0
| |-EnumConstantDecl 0x5556810be940 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5556810bec78 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810be920 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5556810be900 <col:14> 'int' 1
| |-EnumConstantDecl 0x5556810be9d0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5556810bec90 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810be9b0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5556810be990 <col:14> 'int' 2
| |-EnumConstantDecl 0x5556810bea60 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5556810beca8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810bea40 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5556810bea20 <col:14> 'int' 3
| |-EnumConstantDecl 0x5556810beaf0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5556810becc0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810bead0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5556810beab0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5556810beb80 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5556810becd8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810beb60 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5556810beb40 <col:13> 'int' 5
| `-EnumConstantDecl 0x5556810bec10 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5556810becf0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810bebf0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5556810bebd0 <col:14> 'int' 6
|-CXXMethodDecl 0x5556810bed58 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5556810bedf8 <col:20>
| `-OptimizeNoneAttr 0x5556810bee50 <col:30>
|-CXXMethodDecl 0x5556810bef48 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5556810bee88 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5556810beff0 <col:20>
| `-OptimizeNoneAttr 0x5556810bf048 <col:30>
|-CXXMethodDecl 0x5556810bf0b8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5556810bf1e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5556810bf358 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5556810bf290 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5556810bf420 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5556810bf4e8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5556810bf628 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5556810bf598 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5556810bf6d0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5556810bf7d0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5556810bf9d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810bf7b0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5556810bf790 <col:23> 'int' 0
| |-EnumConstantDecl 0x5556810bf860 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5556810bf9e8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810bf840 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5556810bf820 <col:45> 'int' 4
| |-EnumConstantDecl 0x5556810bf8f0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5556810bfa00 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810bf8d0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5556810bf8b0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5556810bf980 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5556810bfa18 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810bf960 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5556810bf940 <col:47> 'int' 16
|-CXXMethodDecl 0x5556810bfa78 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5556810bfbe8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5556810bfb28 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5556810bfc90 <col:20>
| `-OptimizeNoneAttr 0x5556810bfce8 <col:30>
|-CXXMethodDecl 0x5556810bfd38 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5556810d36c0 <col:18, col:36>
|   `-ReturnStmt 0x5556810d36b0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5556810d3698 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5556810d3678 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5556810d3648 <col:27> '<bound member function type>' ->xanno 0x5556810bdd98
|           `-CXXThisExpr 0x5556810d3638 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5556810bfe30 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5556810d37d0 <col:30, col:48>
|   `-ReturnStmt 0x5556810d37c0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5556810d37a8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5556810d3788 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5556810d3758 <col:39> '<bound member function type>' ->xanno 0x5556810bdbf8
|           `-CXXThisExpr 0x5556810d3748 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5556810bff18 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5556810d3968 <col:24, col:50>
|   `-ReturnStmt 0x5556810d3958 <col:26, col:47>
|     `-UnaryOperator 0x5556810d3940 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5556810d3920 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5556810d3908 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5556810d38b8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5556810c8bd8
|         |   `-CXXMemberCallExpr 0x5556810d3898 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5556810d3868 <col:34> '<bound member function type>' ->xanno 0x5556810bdd98
|         |       `-CXXThisExpr 0x5556810d3858 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5556810d38e8 <col:46> 'int' 0
|-CXXMethodDecl 0x5556810c0020 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5556810d3b38 <col:36, col:62>
|   `-ReturnStmt 0x5556810d3b28 <col:38, col:59>
|     `-UnaryOperator 0x5556810d3b10 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5556810d3af0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5556810d3ad8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5556810d3a50 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5556810c8bd8
|         |   `-CXXMemberCallExpr 0x5556810d3a30 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5556810d3a00 <col:46> '<bound member function type>' ->xanno 0x5556810bdbf8
|         |       `-CXXThisExpr 0x5556810d39f0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5556810d3a80 <col:58> 'int' 0
|-CXXMethodDecl 0x5556810c0138 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5556810d3cd0 <col:26, col:53>
|   `-ReturnStmt 0x5556810d3cc0 <col:28, col:50>
|     `-UnaryOperator 0x5556810d3ca8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5556810d3c88 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5556810d3c70 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5556810d3c20 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5556810c8ed8
|         |   `-CXXMemberCallExpr 0x5556810d3c00 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5556810d3bd0 <col:36> '<bound member function type>' ->xanno 0x5556810bdd98
|         |       `-CXXThisExpr 0x5556810d3bc0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5556810d3c50 <col:49> 'int' 0
|-CXXMethodDecl 0x5556810c0258 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5556810d3ea8 <col:38, col:65>
|   `-ReturnStmt 0x5556810d3e98 <col:40, col:62>
|     `-UnaryOperator 0x5556810d3e80 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5556810d3e60 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5556810d3e48 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5556810d3db8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5556810c8ed8
|         |   `-CXXMemberCallExpr 0x5556810d3d98 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5556810d3d68 <col:48> '<bound member function type>' ->xanno 0x5556810bdbf8
|         |       `-CXXThisExpr 0x5556810d3d58 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5556810d3de8 <col:61> 'int' 0
|-CXXMethodDecl 0x5556810c0408 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5556810c0310 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5556810d4578 <col:34, line:463:5>
|   |-ParenExpr 0x5556810d43c0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5556810d4390 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d3ff8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d3fc8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d3f18 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d3f00 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d3ec0 <col:23> 'int' lvalue ParmVar 0x5556810c0310 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d3ee0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d3fa8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d3f78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d3f38 <col:33> 'int' lvalue ParmVar 0x5556810c0310 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5556810d3f90 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5556810d3f58 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5556810d4058 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d4038 <col:56> 'int' 0
|   |   `-CallExpr 0x5556810d42f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5556810d42d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d42b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d4330 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d4148 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5556810d4348 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d4178 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d4360 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d41b0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5556810d4378 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d42a0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d4288 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d4248 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5556810d4568 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5556810d4550 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5556810d4530 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5556810d4500 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5556810d44b0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5556810c8bd8
|         |   `-CXXMemberCallExpr 0x5556810d4490 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5556810d4460 <col:9> '<bound member function type>' ->xanno 0x5556810bdbf8
|         |       `-CXXThisExpr 0x5556810d4450 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5556810d4518 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5556810d44e0 <col:21> 'int' lvalue ParmVar 0x5556810c0310 'i' 'int'
|-CXXMethodDecl 0x5556810c0658 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5556810c04c8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5556810c0540 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5556810d4c08 <col:40, line:472:5>
|   |-ParenExpr 0x5556810d4a20 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5556810d49f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d46d0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d46a0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d45f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d45d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d4598 <col:23> 'int' lvalue ParmVar 0x5556810c04c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d45b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d4680 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d4650 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d4610 <col:33> 'int' lvalue ParmVar 0x5556810c04c8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5556810d4668 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5556810d4630 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5556810d4730 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d4710 <col:56> 'int' 0
|   |   `-CallExpr 0x5556810d4950 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5556810d4938 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d4918 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d4990 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d47a0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5556810d49a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d47d0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d49c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d4808 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5556810d49d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d4900 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d48e8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d48a8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5556810d4be8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5556810d4b90 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5556810d4b60 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5556810d4b10 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5556810c8bd8
|     | |   `-CXXMemberCallExpr 0x5556810d4af0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5556810d4ac0 <col:2> '<bound member function type>' ->xanno 0x5556810bdd98
|     | |       `-CXXThisExpr 0x5556810d4ab0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5556810d4b78 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5556810d4b40 <col:14> 'int' lvalue ParmVar 0x5556810c04c8 'i' 'int'
|     `-ImplicitCastExpr 0x5556810d4bd0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5556810d4bb0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5556810c0540 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5556810c0818 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5556810c0720 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5556810d5388 <col:36, line:485:5>
|   |-ParenExpr 0x5556810d50f0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d50c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d4da0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d4d70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d4c80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d4c68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d4c28 <col:23> 'int' lvalue ParmVar 0x5556810c0720 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d4c48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d4d50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d4d38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d4ca0 <col:33> 'int' lvalue ParmVar 0x5556810c0720 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d4d18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d4d00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d4cc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d4ce0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5556810d4e00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d4de0 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d5020 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d5008 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d4fe8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d5060 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d4e70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5556810d5078 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d4ea8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d5090 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d4ee0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5556810d50a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d4fd0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d4fb8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d4f78 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5556810d5378 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5556810d5360 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5556810d5348 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5556810d5318 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5556810d52b8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5556810d5288 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5556810d5200 <col:61, col:70> 'char const[48]' lvalue ->c 0x5556810c8ab0
|             |   `-CXXMemberCallExpr 0x5556810d51e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5556810d51b0 <col:61> '<bound member function type>' ->xanno 0x5556810bdbf8
|             |       `-CXXThisExpr 0x5556810d51a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5556810d52a0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5556810d5230 <col:74> 'int' lvalue ParmVar 0x5556810c0720 'i' 'int'
|-CXXMethodDecl 0x5556810c0a68 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5556810c08d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5556810c0950 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5556810d5ad8 <col:42, line:500:5>
|   |-ParenExpr 0x5556810d5870 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d5840 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d5520 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d54f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d5400 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d53e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d53a8 <col:23> 'int' lvalue ParmVar 0x5556810c08d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d53c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d54d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d54b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d5420 <col:33> 'int' lvalue ParmVar 0x5556810c08d8 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d5498 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d5480 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d5440 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d5460 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5556810d5580 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d5560 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d57a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d5788 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d5768 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d57e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d55f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5556810d57f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d5628 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d5810 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d5660 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5556810d5828 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d5750 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d5738 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d56f8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5556810d5ab8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5556810d5a68 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5556810d5a38 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5556810d59e0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5556810d59b0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5556810d5960 <col:48, col:57> 'char [48]' lvalue ->c 0x5556810c8ab0
|     |     |   `-CXXMemberCallExpr 0x5556810d5940 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5556810d5910 <col:48> '<bound member function type>' ->xanno 0x5556810bdd98
|     |     |       `-CXXThisExpr 0x5556810d5900 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5556810d59c8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5556810d5990 <col:61> 'int' lvalue ParmVar 0x5556810c08d8 'i' 'int'
|     `-ImplicitCastExpr 0x5556810d5aa0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5556810d5a80 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5556810c0950 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5556810c0c28 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5556810c0b30 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5556810d6238 <col:35, line:513:5>
|   |-ParenExpr 0x5556810d5f48 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d5f18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d5c70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d5c40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d5b50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d5b38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d5af8 <col:23> 'int' lvalue ParmVar 0x5556810c0b30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d5b18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d5c20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d5c08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d5b70 <col:33> 'int' lvalue ParmVar 0x5556810c0b30 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d5be8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d5bd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d5b90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d5bb0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5556810d5cd0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d5cb0 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d5e78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d5e60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d5e40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d5eb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d5d40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5556810d5ed0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d5d78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d5ee8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d5db0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5556810d5f00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d5e28 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d5e10 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d5dd0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5556810d6228 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5556810d6210 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5556810d61f8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5556810d61c8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5556810d6140 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5556810d6110 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5556810d60c0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5556810c8ab0
|             |   `-CXXMemberCallExpr 0x5556810d60a0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5556810d6070 <col:60> '<bound member function type>' ->xanno 0x5556810bdbf8
|             |       `-CXXThisExpr 0x5556810d6060 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5556810d6128 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5556810d60f0 <col:73> 'int' lvalue ParmVar 0x5556810c0b30 'i' 'int'
|-CXXMethodDecl 0x5556810c0e78 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5556810c0ce8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5556810c0d60 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5556810d6958 <col:41, line:528:5>
|   |-ParenExpr 0x5556810d66e0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d66b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d63d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d63a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d62b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d6298 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d6258 <col:23> 'int' lvalue ParmVar 0x5556810c0ce8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d6278 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d6380 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d6368 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d62d0 <col:33> 'int' lvalue ParmVar 0x5556810c0ce8 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d6348 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d6330 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d62f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d6310 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5556810d6430 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d6410 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d6610 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d65f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d65d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d6650 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d64a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5556810d6668 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d64d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d6680 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d6510 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5556810d6698 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d65c0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d65a8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d6568 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5556810d6938 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5556810d68e8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5556810d68b8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5556810d6860 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5556810d6820 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5556810d67d0 <col:47, col:56> 'char [48]' lvalue ->c 0x5556810c8ab0
|     |     |   `-CXXMemberCallExpr 0x5556810d67b0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5556810d6780 <col:47> '<bound member function type>' ->xanno 0x5556810bdd98
|     |     |       `-CXXThisExpr 0x5556810d6770 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5556810d6838 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5556810d6800 <col:60> 'int' lvalue ParmVar 0x5556810c0ce8 'i' 'int'
|     `-ImplicitCastExpr 0x5556810d6920 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5556810d6900 <col:65> 'int16_t':'short' lvalue ParmVar 0x5556810c0d60 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5556810c1038 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5556810c0f40 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5556810d7028 <col:36, line:541:5>
|   |-ParenExpr 0x5556810d6dc8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d6d98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d6af0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d6ac0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d69d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d69b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d6978 <col:23> 'int' lvalue ParmVar 0x5556810c0f40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d6998 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d6aa0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d6a88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d69f0 <col:33> 'int' lvalue ParmVar 0x5556810c0f40 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d6a68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d6a50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d6a10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d6a30 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5556810d6b50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d6b30 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d6cf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d6ce0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d6cc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d6d38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d6bc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5556810d6d50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d6bf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d6d68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d6c30 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5556810d6d80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d6ca8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d6c90 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d6c50 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5556810d7018 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5556810d7000 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5556810d6fe8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5556810d6fb8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5556810d6f60 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5556810d6f30 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5556810d6ee0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5556810c8ab0
|             |   `-CXXMemberCallExpr 0x5556810d6ec0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5556810d6e90 <col:61> '<bound member function type>' ->xanno 0x5556810bdbf8
|             |       `-CXXThisExpr 0x5556810d6e80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5556810d6f48 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5556810d6f10 <col:74> 'int' lvalue ParmVar 0x5556810c0f40 'i' 'int'
|-CXXMethodDecl 0x5556810c1208 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5556810c10f8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5556810c1170 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5556810c12b8 <col:20>
| `-OptimizeNoneAttr 0x5556810c1310 <col:30>
|-CXXMethodDecl 0x5556810c1448 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5556810c1350 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5556810d76f8 <col:35, line:562:5>
|   |-ParenExpr 0x5556810d7498 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d7468 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d71c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d7190 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d70a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d7088 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d7048 <col:23> 'int' lvalue ParmVar 0x5556810c1350 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d7068 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d7170 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d7158 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d70c0 <col:33> 'int' lvalue ParmVar 0x5556810c1350 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d7138 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d7120 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d70e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d7100 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5556810d7220 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d7200 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d73c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d73b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d7390 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d7408 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d7290 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5556810d7420 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d72c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d7438 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d7300 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5556810d7450 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d7378 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d7360 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d7320 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5556810d76e8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5556810d76d0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5556810d76b8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5556810d7688 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5556810d7630 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5556810d7600 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5556810d75b0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5556810c8ab0
|             |   `-CXXMemberCallExpr 0x5556810d7590 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5556810d7560 <col:60> '<bound member function type>' ->xanno 0x5556810bdbf8
|             |       `-CXXThisExpr 0x5556810d7550 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5556810d7618 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5556810d75e0 <col:73> 'int' lvalue ParmVar 0x5556810c1350 'i' 'int'
|-CXXMethodDecl 0x5556810c1658 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5556810c1508 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5556810c1580 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5556810d7dd8 <col:41, line:577:5>
|   |-ParenExpr 0x5556810d7b68 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d7b38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d7890 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d7860 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d7770 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d7758 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d7718 <col:23> 'int' lvalue ParmVar 0x5556810c1508 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d7738 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d7840 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d7828 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d7790 <col:33> 'int' lvalue ParmVar 0x5556810c1508 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d7808 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d77f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d77b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d77d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5556810d78f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d78d0 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d7a98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d7a80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d7a60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d7ad8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d7960 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5556810d7af0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d7998 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d7b08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d79d0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5556810d7b20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d7a48 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d7a30 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d79f0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5556810d7db8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5556810d7d68 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5556810d7d38 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5556810d7cd8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5556810d7ca8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5556810d7c58 <col:47, col:56> 'char [48]' lvalue ->c 0x5556810c8ab0
|     |     |   `-CXXMemberCallExpr 0x5556810d7c38 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5556810d7c08 <col:47> '<bound member function type>' ->xanno 0x5556810bdd98
|     |     |       `-CXXThisExpr 0x5556810d7bf8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5556810d7cc0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5556810d7c88 <col:60> 'int' lvalue ParmVar 0x5556810c1508 'i' 'int'
|     `-ImplicitCastExpr 0x5556810d7da0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5556810d7d80 <col:65> 'int32_t':'int' lvalue ParmVar 0x5556810c1580 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5556810c1818 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5556810c1720 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5556810d8508 <col:36, line:591:5>
|   |-ParenExpr 0x5556810d8248 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d8218 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d7f70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d7f40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d7e50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d7e38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d7df8 <col:23> 'int' lvalue ParmVar 0x5556810c1720 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d7e18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d7f20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d7f08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d7e70 <col:33> 'int' lvalue ParmVar 0x5556810c1720 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d7ee8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d7ed0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d7e90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d7eb0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5556810d7fd0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d7fb0 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d8178 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d8160 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d8140 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d81b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d8040 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5556810d81d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d8078 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d81e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d80b0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5556810d8200 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d8128 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d8110 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d80d0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5556810d84f8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5556810d84e0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5556810d84c8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5556810d8498 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5556810d8410 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5556810d83e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5556810d8390 <col:61, col:70> 'char const[48]' lvalue ->c 0x5556810c8ab0
|             |   `-CXXMemberCallExpr 0x5556810d8370 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5556810d8340 <col:61> '<bound member function type>' ->xanno 0x5556810bdbf8
|             |       `-CXXThisExpr 0x5556810d8330 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5556810d83f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5556810d83c0 <col:74> 'int' lvalue ParmVar 0x5556810c1720 'i' 'int'
|-CXXMethodDecl 0x5556810c1a68 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5556810c18d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5556810c1950 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5556810d8be8 <col:42, line:606:5>
|   |-ParenExpr 0x5556810d8978 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5556810d8948 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d86a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d8670 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d8580 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d8568 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d8528 <col:23> 'int' lvalue ParmVar 0x5556810c18d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d8548 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d8650 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5556810d8638 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d85a0 <col:33> 'int' lvalue ParmVar 0x5556810c18d8 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d8618 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d8600 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d85c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5556810d85e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5556810d8700 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d86e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5556810d88a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5556810d8890 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d8870 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d88e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d8770 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5556810d8900 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d87a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d8918 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d87e0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5556810d8930 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d8858 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d8840 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d8800 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5556810d8bc8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5556810d8b78 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5556810d8b48 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5556810d8ae8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5556810d8ab8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5556810d8a68 <col:48, col:57> 'char [48]' lvalue ->c 0x5556810c8ab0
|     |     |   `-CXXMemberCallExpr 0x5556810d8a48 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5556810d8a18 <col:48> '<bound member function type>' ->xanno 0x5556810bdd98
|     |     |       `-CXXThisExpr 0x5556810d8a08 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5556810d8ad0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5556810d8a98 <col:61> 'int' lvalue ParmVar 0x5556810c18d8 'i' 'int'
|     `-ImplicitCastExpr 0x5556810d8bb0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5556810d8b90 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5556810c1950 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5556810c1c00 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5556810c1b30 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5556810d9458 <col:33, line:620:5>
|   |-ParenExpr 0x5556810d91d0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5556810d91a0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d8df0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d8dc0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d8c60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d8c48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d8c08 <col:23> 'int' lvalue ParmVar 0x5556810c1b30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d8c28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d8da0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5556810d8d88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d8c80 <col:33> 'int' lvalue ParmVar 0x5556810c1b30 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d8d68 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d8d50 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d8ca0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5556810d8d28 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5556810d8d10 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5556810d8cd8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5556810d8e50 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d8e30 <col:79> 'int' 0
|   |   `-CallExpr 0x5556810d9100 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5556810d90e8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d90c8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d9140 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d8f38 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5556810d9158 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d8f80 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d9170 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d8fb8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5556810d9188 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d90b0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d9098 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d9058 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5556810d9448 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5556810d9430 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5556810d9418 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5556810d93e8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5556810d9360 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5556810d9330 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5556810d92e0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5556810c8ab0
|             |   `-CXXMemberCallExpr 0x5556810d92c0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5556810d9290 <col:67> '<bound member function type>' ->xanno 0x5556810bdbf8
|             |       `-CXXThisExpr 0x5556810d9280 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5556810d9348 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5556810d9310 <col:80> 'int' lvalue ParmVar 0x5556810c1b30 'i' 'int'
|-CXXMethodDecl 0x5556810c1e18 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5556810c1cc0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5556810c1d40 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5556810d9c80 <col:45, line:635:5>
|   |-ParenExpr 0x5556810d99c8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5556810d9998 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5556810d9660 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5556810d9630 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5556810d94d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5556810d94b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5556810d9478 <col:23> 'int' lvalue ParmVar 0x5556810c1cc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5556810d9498 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5556810d9610 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5556810d95f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5556810d94f0 <col:33> 'int' lvalue ParmVar 0x5556810c1cc0 'i' 'int'
|   |   |     `-BinaryOperator 0x5556810d95d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5556810d95c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5556810d9510 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5556810bdfe0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5556810d9598 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5556810d9580 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5556810d9548 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5556810d96c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5556810d96a0 <col:79> 'int' 0
|   |   `-CallExpr 0x5556810d98f8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5556810d98e0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810d98c0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5556810d9938 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d9730 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5556810d9950 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5556810d9778 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5556810d9968 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5556810d97b0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5556810d9980 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5556810d98a8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5556810d9890 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5556810d9848 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5556810d9c60 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5556810d9bc8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5556810d9b98 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5556810d9b38 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5556810d9b08 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5556810d9ab8 <col:54, col:63> 'char [48]' lvalue ->c 0x5556810c8ab0
|     |     |   `-CXXMemberCallExpr 0x5556810d9a98 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5556810d9a68 <col:54> '<bound member function type>' ->xanno 0x5556810bdd98
|     |     |       `-CXXThisExpr 0x5556810d9a58 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5556810d9b20 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5556810d9ae8 <col:67> 'int' lvalue ParmVar 0x5556810c1cc0 'i' 'int'
|     `-CXXConstCastExpr 0x5556810d9c30 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5556810d9c18 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5556810d9be0 <col:91> 'const void *' lvalue ParmVar 0x5556810c1d40 'x' 'const void *'
|-CXXMethodDecl 0x5556810c1ee8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5556810d9d08 <col:34, line:640:5>
|   `-ReturnStmt 0x5556810d9cf8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5556810d9ce0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5556810d9cb0 <col:16> 'Packet *' lvalue ->_data_packet 0x5556810c9668
|         `-CXXThisExpr 0x5556810d9ca0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5556810c2028 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5556810c1f98 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5556810d2dc8 <col:46> 'bool' true
|-CXXMethodDecl 0x5556810c21a8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5556810c20e0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5556810c2250 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5556810c2a00 <line:660:22> "" ""
| |-EnumConstantDecl 0x5556810c2350 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2a70 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c2330 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5556810c2310 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5556810b74b0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5556810c23e0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2a88 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c23c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5556810c23a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5556810b7540 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5556810c2470 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2aa0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c2450 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5556810c2430 <col:21> 'int' 0
| |-EnumConstantDecl 0x5556810c2500 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2ab8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c24e0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5556810c24c0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5556810c2590 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2ad0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c2570 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5556810c2550 <col:21> 'int' 16
| |-EnumConstantDecl 0x5556810c2620 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2ae8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c2600 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5556810c25e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5556810c26b0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2b00 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c2690 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5556810c2670 <col:19> 'int' EnumConstant 0x5556810c2500 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5556810c2740 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2b18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c2720 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5556810c2700 <col:19> 'int' EnumConstant 0x5556810c2620 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5556810c2810 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2b30 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c27f0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5556810c27d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5556810c2790 <col:23> 'int' EnumConstant 0x5556810c2740 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5556810c27b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5556810c28e0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5556810c2b48 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5556810c28c0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5556810c28a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5556810c2860 <col:23> 'int' EnumConstant 0x5556810c2740 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5556810c2880 <col:40> 'int' 4
| `-EnumConstantDecl 0x5556810c29b0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5556810c2b60 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5556810c2990 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5556810c2970 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5556810c2930 <col:23> 'int' EnumConstant 0x5556810c2740 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5556810c2950 <col:40> 'int' 8
|-CXXMethodDecl 0x5556810c2ba0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5556810c2c40 <col:68> "" ""
|-CXXMethodDecl 0x5556810c2cd8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5556810c2d78 <col:45> "" ""
|-CXXMethodDecl 0x5556810c2e10 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5556810c2eb0 <col:57> "" ""
|-CXXMethodDecl 0x5556810c2f48 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5556810c2fe8 <col:45> "" ""
|-CXXMethodDecl 0x5556810c3080 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5556810c3120 <col:57> "" ""
|-CXXMethodDecl 0x5556810c31b0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5556810c3250 <col:51> "" ""
|-CXXMethodDecl 0x5556810c32e0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5556810c3380 <col:63> "" ""
|-CXXMethodDecl 0x5556810c3410 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5556810c34b0 <col:53> "" ""
|-CXXMethodDecl 0x5556810c3540 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5556810c35e0 <col:65> "" ""
|-CXXMethodDecl 0x5556810c36f8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5556810c3668 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5556810c37a0 <col:61> "" ""
|-CXXMethodDecl 0x5556810c3938 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5556810c3828 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5556810c38a0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5556810c39e8 <col:67> "" ""
|-CXXMethodDecl 0x5556810c3b00 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5556810c3a70 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5556810c3ba8 <col:63> "" ""
|-CXXMethodDecl 0x5556810c3d40 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5556810c3c30 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5556810c3ca8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5556810c3df0 <col:69> "" ""
|-CXXMethodDecl 0x5556810c3f08 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5556810c3e78 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5556810c3fb0 <col:63> "" ""
|-CXXMethodDecl 0x5556810c6688 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5556810c6578 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5556810c65f0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5556810c6738 <col:69> "" ""
|-CXXMethodDecl 0x5556810c6850 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5556810c67c0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5556810c68f8 <col:62> "" ""
|-CXXMethodDecl 0x5556810c6a90 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5556810c6980 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5556810c69f8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5556810c6b40 <col:68> "" ""
|-CXXMethodDecl 0x5556810c6c58 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5556810c6bc8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5556810c6d00 <col:63> "" ""
|-CXXMethodDecl 0x5556810c6e98 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5556810c6d88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5556810c6e00 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5556810c6f48 <col:69> "" ""
|-CXXMethodDecl 0x5556810c6fd8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5556810c7078 <col:64> "" ""
|-CXXMethodDecl 0x5556810c7108 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5556810c71a8 <col:52> "" ""
|-CXXMethodDecl 0x5556810c7238 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5556810c72d8 <col:67> "" ""
|-CXXMethodDecl 0x5556810c7368 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5556810c7408 <col:55> "" ""
|-CXXMethodDecl 0x5556810c7520 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5556810c7490 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5556810c75c8 <col:58> "" ""
|-CXXMethodDecl 0x5556810c7760 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5556810c7650 <col:33> col:36 'int'
| |-ParmVarDecl 0x5556810c76c8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5556810c7810 <col:62> "" ""
|-CXXMethodDecl 0x5556810c7928 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5556810c7898 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5556810c79d0 <col:58> "" ""
|-CXXMethodDecl 0x5556810c7b68 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5556810c7a58 <col:33> col:36 'int'
| |-ParmVarDecl 0x5556810c7ad0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5556810c7c18 <col:62> "" ""
|-CXXMethodDecl 0x5556810c7d30 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5556810c7ca0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5556810c7dd8 <col:60> "" ""
|-CXXMethodDecl 0x5556810c7f70 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5556810c7e60 <col:34> col:37 'int'
| |-ParmVarDecl 0x5556810c7ed8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5556810c8020 <col:64> "" ""
|-CXXMethodDecl 0x5556810c8138 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5556810c80a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5556810c81e0 <col:58> "" ""
|-CXXMethodDecl 0x5556810c8378 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5556810c8268 <col:33> col:36 'int'
| |-ParmVarDecl 0x5556810c82e0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5556810c8428 <col:62> "" ""
|-CXXMethodDecl 0x5556810c8540 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5556810c84b0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5556810c85e8 <col:59> "" ""
|-CXXMethodDecl 0x5556810c8780 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5556810c8670 <col:33> col:36 'int'
| |-ParmVarDecl 0x5556810c86e8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5556810c8830 <col:63> "" ""
|-AccessSpecDecl 0x5556810c88a0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5556810c88c8 prev 0x5556810bdad0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5556810c89c0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5556810c8ab0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5556810c8bd8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5556810c8d58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5556810c8ed8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5556810c9058 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5556810d9e88 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5556810da6f8 <col:11>
| |-CXXDestructorDecl 0x5556810d9f60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5556810da098 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5556810da098
| | `-ParmVarDecl 0x5556810da1a8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5556810da248 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5556810da248
| | `-ParmVarDecl 0x5556810da358 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5556810dd118 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5556810dd228 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5556810dd4a8 <col:11>
| |   `-ReturnStmt 0x5556810dd498 <col:11>
| |     `-UnaryOperator 0x5556810dd480 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5556810dd470 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5556810dd298 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5556810dd298
|   `-ParmVarDecl 0x5556810dd3a8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5556810c90c0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5556810c91d8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5556810c9278 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5556810c92e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5556810c9348 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5556810c93b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5556810c9410 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5556810c94d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5556810c9530 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5556810c9590 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5556810d9d98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5556810c9278 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5556810da708 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5556810da760 <col:12>
| |-CXXConstructorDecl 0x5556810da3c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5556810da3c8
| | `-ParmVarDecl 0x5556810da4d8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5556810da578 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5556810da578
| | `-ParmVarDecl 0x5556810da688 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5556810dc800 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5556810c9608 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5556810c9668 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5556810c96d0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5556810c9738 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5556810c97a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5556810c9808 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5556810c9868 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5556810c98c8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5556810c9930 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5556810c99b8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5556810c9608 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5556810d9d30 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5556810c9868 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5556810da770 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5556810da7d0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5556810c9b58 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5556810c9a98 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5556810c9c50 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5556810c9e38 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5556810c9d40 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5556810ca108 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5556810c9ef0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5556810c9f68 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5556810c9fe0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556810ca328 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5556810ca1d8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5556810ca250 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5556810d2908 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5556810ca3e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5556810ca460 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5556810ca4d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5556810d2a60 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5556810d29d0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556810d2ba8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5556810d2b18 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5556810d2ca0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568121e8f0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55568121ea08 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55568121ead8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55568121eb38 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55568121eba0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55568121ec28 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55568121ee90 <col:16, line:46:5>
|   |-BinaryOperator 0x55568121edd8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55568121ecf8 <col:9> 'TaskLink *' lvalue ->_prev 0x55568121ead8
|   | | `-CXXThisExpr 0x55568121ece8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55568121edc0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55568121eda0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55568121ed38 <col:17> 'TaskLink *' lvalue ->_next 0x55568121eb38
|   |     | `-CXXThisExpr 0x55568121ed28 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55568121ed88 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55568121ed68 <col:25> 'int' 0
|   `-BinaryOperator 0x55568121ee70 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55568121ee08 <col:9> 'unsigned int' lvalue ->_pass 0x55568121eba0
|     | `-CXXThisExpr 0x55568121edf8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55568121ee58 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55568121ee38 <col:17> 'int' 0
|-CXXConstructorDecl 0x5556812888a8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5556812888a8
| `-ParmVarDecl 0x5556812889b8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x555681288a58 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x555681288a58
| `-ParmVarDecl 0x555681288b68 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x555681288d58 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x555681288d58
|-CXXMethodDecl 0x555681289558 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x555681289558
| `-ParmVarDecl 0x555681289668 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5556812896d8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5556812896d8
  `-ParmVarDecl 0x5556812897e8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568122b498 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55568122b5c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55568122b628 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55568122b688 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55568128fa68 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55568128fbd0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55568128fbd0
|-CXXConstructorDecl 0x55568128fe88 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55568128fe88
| `-ParmVarDecl 0x55568128ff98 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x555681290038 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x555681290038
  `-ParmVarDecl 0x555681290148 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568122b2f0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55568122b408 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55568122b498 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55568122b5c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55568122b628 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55568122b688 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55568128fa68 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55568128fbd0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55568128fbd0
| |-CXXConstructorDecl 0x55568128fe88 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55568128fe88
| | `-ParmVarDecl 0x55568128ff98 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x555681290038 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x555681290038
|   `-ParmVarDecl 0x555681290148 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55568122b748 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55568122b7a8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55568122b748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55568122b5c8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55568122b800 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55568122b748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55568122b628 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55568122b858 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55568122b748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55568122b688 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55568122b8b0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55568128f978 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x555681290368 <col:11>
|-CXXConstructorDecl 0x55568128fcd8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55568128fcd8
| `-ParmVarDecl 0x55568128fde8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5556812901e8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5556812901e8
  `-ParmVarDecl 0x5556812902f8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555681088b60 prev 0x55568107f9a0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555681088c58 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x555681088cf8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55568108fac0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55568108fea8 <col:11>
|-CXXConstructorDecl 0x55568108fba0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55568108fc88 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5556810905f0 <col:11>
|-CXXConstructorDecl 0x55568108fd28 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55568108fe38 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x555681091e48 <col:11>
|-CXXDestructorDecl 0x555681091158 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x555680d97d08 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x555680d97e18 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x555680d986e0 <col:11>
|   `-ReturnStmt 0x555680d986d0 <col:11>
|     `-UnaryOperator 0x555680d986b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x555680d986a8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x555680d97e88 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x555680d97f98 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x5556812344c0 <col:11>
    `-ReturnStmt 0x5556812344b0 <col:11>
      `-UnaryOperator 0x555681234498 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x555681234488 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568107eb58 prev 0x55568107e868 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55568107ec50 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55568107ece0 <col:19, col:25> col:19 public
|-TypedefDecl 0x55568107ed18 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x555680ce3ee0 'int32_t' sugar
|   |-Typedef 0x555680bf3268 'int32_t'
|   `-TypedefType 0x555680bcc3b0 '__int32_t' sugar
|     |-Typedef 0x555680bcbfc8 '__int32_t'
|     `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x55568107ed80 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x555680ce40a0 'int64_t' sugar
|   |-Typedef 0x555680bf32d0 'int64_t'
|   `-TypedefType 0x555680bcc4d0 '__int64_t' sugar
|     |-Typedef 0x555680bcc0a8 '__int64_t'
|     `-BuiltinType 0x555680b8a390 'long'
|-EnumDecl 0x55568107edd8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55568107ef50 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55568107ef30 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55568107ef08 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55568107eef0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55568107eec0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55568107f048 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55568107f028 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55568107f000 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55568107efe8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55568107efc0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55568107efa0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55568107f098 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55568107f1a0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55568107f6f0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568107f180 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55568107f160 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55568107f230 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55568107f708 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568107f210 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55568107f1f0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55568107f2c0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55568107f720 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568107f2a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55568107f280 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55568107f350 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55568107f738 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568107f330 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55568107f310 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55568107f3e0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55568107f750 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568107f3c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55568107f3a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55568107f470 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55568107f768 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568107f450 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55568107f430 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55568107f500 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55568107f780 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568107f4e0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55568107f4c0 <col:26> 'int' EnumConstant 0x55568107f1a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55568107f5d0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55568107f798 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568107f5b0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55568107f590 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55568107f550 <col:27> 'int' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55568107f570 <col:44> 'int' EnumConstant 0x55568107f470 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55568107f6a0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55568107f7b0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55568107f680 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55568107f660 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55568107f620 <col:27> 'int' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55568107f640 <col:44> 'int' EnumConstant 0x55568107f350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55568107f7c8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55568107f8d0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55568107f920 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55568107f8b0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55568107f890 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55568107f948 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x555680ce3b10 'uninitialized_type'
|   `-CXXRecord 0x555680ce3a78 'uninitialized_type'
|-CXXRecordDecl 0x55568107f9a0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55568107fab0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55568108feb8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55568108ffd8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55568108ff90 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55568108ff20 <col:9> '<bound member function type>' ->assign 0x5556810846f8
|     | `-CXXThisExpr 0x55568108ff10 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55568108ff50 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55568108ffc0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55568108ff70 <col:19> 'int' 0
|-CXXConstructorDecl 0x55568107fcf8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55568107fb70 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55568107fbe8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55568108b7f0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55568108b7d0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55568108fff0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x555681090140 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x5556810900c8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x555681090058 <col:9> '<bound member function type>' ->assign 0x5556810846f8
|     | `-CXXThisExpr 0x555681090048 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x555681090110 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5556810900f8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x555681090088 <col:16> 'long' lvalue ParmVar 0x55568107fb70 'sec' 'long'
|     `-ImplicitCastExpr 0x555681090128 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5556810900a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55568107fbe8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55568107ff58 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55568107fdc8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55568107fe40 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55568108b828 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55568108b808 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x555681090158 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x555681090290 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x555681090230 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x5556810901c0 <col:9> '<bound member function type>' ->assign 0x5556810846f8
|     | `-CXXThisExpr 0x5556810901b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x555681090260 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5556810901f0 <col:16> 'int' lvalue ParmVar 0x55568107fdc8 'sec' 'int'
|     `-ImplicitCastExpr 0x555681090278 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x555681090210 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55568107fe40 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5556810801b8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x555681080028 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x5556810800a0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55568108b860 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55568108b840 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5556810902a8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5556810903f8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x555681090380 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x555681090310 <col:9> '<bound member function type>' ->assign 0x5556810846f8
|     | `-CXXThisExpr 0x555681090300 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5556810903c8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5556810903b0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x555681090340 <col:16> 'unsigned long' lvalue ParmVar 0x555681080028 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x5556810903e0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x555681090360 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5556810800a0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x555681081350 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x555681080288 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x555681080300 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55568108b898 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55568108b878 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x555681090410 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x555681090560 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x5556810904e8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x555681090478 <col:9> '<bound member function type>' ->assign 0x5556810846f8
|     | `-CXXThisExpr 0x555681090468 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x555681090530 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x555681090518 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5556810904a8 <col:16> 'unsigned int' lvalue ParmVar 0x555681080288 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x555681090548 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5556810904c8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681080300 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5556810814b0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x555681081420 <col:31> col:37 'double'
|-CXXConstructorDecl 0x555681081648 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x555681081588 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x555681081878 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x555681081780 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x555681081a28 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x555681081968 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x555681090600 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x555681090578 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x555681081968 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x555681090660 <col:19, line:214:5>
|-CXXConstructorDecl 0x555681081bf8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x555681081b38 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x555681090670 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x555681090720 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5556810906f8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x5556810906c8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x555681081b38 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x555681081de8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x555681081d60 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55568107e900 'Timestamp'
|   | `-CXXRecord 0x55568107eb58 'Timestamp'
|   `-ParenType 0x555681081d00 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x555681081cd0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55568107eea0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55568107ed18 'seconds_type'
|         `-TypedefType 0x555680ce3ee0 'int32_t' sugar
|           |-Typedef 0x555680bf3268 'int32_t'
|           `-TypedefType 0x555680bcc3b0 '__int32_t' sugar
|             |-Typedef 0x555680bcbfc8 '__int32_t'
|             `-BuiltinType 0x555680b8a370 'int'
|-CXXConversionDecl 0x555681081f28 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x555681081ff8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x555681090828 <col:37, line:231:5>
|   `-ReturnStmt 0x555681090818 <line:227:9, col:23>
|     `-BinaryOperator 0x5556810907f8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x5556810907c8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x555681090778 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x555681088cf8
|       |   `-MemberExpr 0x555681090748 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x555681089ca8
|       |     `-CXXThisExpr 0x555681090738 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5556810907e0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x5556810907a8 <col:23> 'int' 0
|-CXXMethodDecl 0x5556810820b8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x555681082178 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x555681082238 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x5556810822f8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x5556810823b8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x555681082528 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x555681082468 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x555681082670 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x5556810825e0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555681082738 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5556810827d8 <col:54> "" ""
|-CXXMethodDecl 0x555681082868 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x555681082908 <col:54> "" ""
|-CXXMethodDecl 0x555681082998 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x555681082a38 <col:54> "" ""
|-CXXMethodDecl 0x555681082b38 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x555681082c08 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x555681082d38 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x555681082e30 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x555681082f68 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x555681090a40 <col:39, line:271:5>
|   `-ReturnStmt 0x555681090a30 <line:267:9, col:61>
|     `-CallExpr 0x5556810909d0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5556810909b8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x555681090840 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x555681089fd8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x555681090a00 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5556810908a0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x555681088cf8
|       |   `-MemberExpr 0x555681090870 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x555681089ca8
|       |     `-CXXThisExpr 0x555681090860 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x555681090a18 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x555681090940 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x555681090910 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5556810908d0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x555681090928 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5556810908f0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f470 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x555681083028 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x555681090c00 <col:39, line:279:5>
|   `-ReturnStmt 0x555681090bf0 <line:275:9, col:61>
|     `-CallExpr 0x555681090b90 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x555681090b78 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x555681090a58 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x555681089fd8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x555681090bc0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x555681090ab8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x555681088cf8
|       |   `-MemberExpr 0x555681090a88 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x555681089ca8
|       |     `-CXXThisExpr 0x555681090a78 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x555681090bd8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x555681090b58 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x555681090b28 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x555681090ae8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x555681090b40 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x555681090b08 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5556810830e8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x555681090d98 <col:39, line:287:5>
|   `-ReturnStmt 0x555681090d88 <line:283:9, col:53>
|     `-BinaryOperator 0x555681090d68 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x555681090d38 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x555681090c58 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x555681088cf8
|       |   `-MemberExpr 0x555681090c28 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x555681089ca8
|       |     `-CXXThisExpr 0x555681090c18 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x555681090d50 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x555681090d18 <col:23, col:53> 'int'
|           `-BinaryOperator 0x555681090cf8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x555681090cc8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x555681090c88 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f1a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x555681090ce0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x555681090ca8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5556810831d8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x555681092030 <col:40, line:293:5>
|   |-DeclStmt 0x555681090ee0 <line:291:9, col:48>
|   | `-VarDecl 0x555681090dc0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x555681090ec0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x555681090e68 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x555681090e38 <col:22> '<bound member function type>' ->subsec 0x555681082178
|   |     |   `-CXXThisExpr 0x555681090e28 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x555681090ea8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x555681090e88 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f5d0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x555681092020 <line:292:9, col:70>
|     `-ExprWithCleanups 0x555681092008 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x555681091fd8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x555681091fc0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x555681091fa0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x555681091f70 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x555681091d08 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x555681091cf0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x555681090ef8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x555681090dc0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x555681091f10 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x555681091ef8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x555681091ec8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x555681091d20 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x555681091c90 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x555681091c78 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x555681091c28 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55568107eaa8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x555681091bc8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x555681090f28 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x555681090f18 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x555681091c10 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x555681091bf8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5556810913e8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x555681090f50 <col:39> 'int' 0
|               |               `-BinaryOperator 0x555681090fe0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x555681090fb0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x555681090f70 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f5d0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x555681090fc8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x555681090f90 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x555681090dc0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x555681091f40 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x555681091cd8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x555681091cc8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x555681083298 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x555681092588 <col:40, line:302:5>
|   |-DeclStmt 0x555681092180 <line:297:9, col:48>
|   | `-VarDecl 0x555681092060 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x555681092160 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x555681092108 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5556810920d8 <col:22> '<bound member function type>' ->subsec 0x555681082178
|   |     |   `-CXXThisExpr 0x5556810920c8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x555681092148 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x555681092128 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f6a0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x555681092578 <line:298:9, col:70>
|     `-ExprWithCleanups 0x555681092560 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x555681092530 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x555681092518 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5556810924f8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5556810924c8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5556810923f0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5556810923d8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x555681092198 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x555681092060 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x555681092468 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x555681092450 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x555681092420 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x555681092408 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x555681092378 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x555681092360 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x555681092340 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55568107eaa8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5556810922e0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5556810921c8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5556810921b8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x555681092328 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x555681092310 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5556810922a0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5556810921f0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x555681092280 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x555681092250 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x555681092210 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f6a0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x555681092268 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x555681092230 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x555681092060 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x555681092498 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5556810923c0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5556810923b0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x555681083358 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x555681092610 <col:40, line:306:5>
|   `-ReturnStmt 0x555681092600 <line:305:9, col:17>
|     `-CXXConstructExpr 0x5556810925d0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x5556810925b8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5556810925a8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x5556810834f8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x555681083408 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x5556810836c8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x5556810835d0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x5556810837b8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x555681083928 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x555681083868 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x555681092758 <col:56, line:320:5>
|   `-ReturnStmt 0x555681092748 <line:319:9, col:32>
|     `-ExprWithCleanups 0x555681092730 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x555681092700 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5556810926e8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5556810926a8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x555681092678 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x555681092638 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x555681083868 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x555681092690 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x555681092658 <col:31> 'int' 0
|-CXXMethodDecl 0x555681083b68 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5556810839e0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681083a58 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x555681092928 <col:72, line:326:5>
|   `-ReturnStmt 0x555681092918 <line:325:9, col:51>
|     `-ExprWithCleanups 0x555681092900 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5556810928d0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5556810928b8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x555681092878 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x555681092860 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x555681092780 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5556810839e0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x555681092820 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x555681092808 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5556810927a0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x555681088450 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x555681092848 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5556810927c0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681083a58 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555681083d18 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x555681083c28 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x555681092ff0 <col:56, line:337:5>
|   |-DeclStmt 0x555681092c28 <line:329:9, col:51>
|   | `-VarDecl 0x555681092950 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x555681092c10 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x555681092be0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x555681092bc8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x555681092bb0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x555681092b80 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x555681092b68 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x555681092b50 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x555681092a40 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x555681092de0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x555681092c90 <col:9, col:14> 'int64_t':'long' lvalue .x 0x555681088cf8
|   | | `-MemberExpr 0x555681092c60 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x555681089ca8
|   | |   `-DeclRefExpr 0x555681092c40 <col:9> 'Timestamp' lvalue Var 0x555681092950 't' 'Timestamp'
|   | `-BinaryOperator 0x555681092dc0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x555681092d90 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555681092cc0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x555681083c28 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x555681092da8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x555681092d70 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x555681092d50 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x555681092d20 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x555681092ce0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x555681092d38 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x555681092d00 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f470 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x555681092fd8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x555681092fa8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x555681092f90 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x555681092f70 <col:16> 'Timestamp' lvalue Var 0x555681092950 't' 'Timestamp'
|-CXXMethodDecl 0x555681083ee0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x555681083dd0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681083e48 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810931a8 <col:72, line:343:5>
|   `-ReturnStmt 0x555681093198 <line:342:9, col:51>
|     `-ExprWithCleanups 0x555681093180 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x555681093150 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x555681093138 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5556810930f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5556810930e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x555681093028 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x555681083dd0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5556810930a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x555681093088 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x555681093048 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x555681088598 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5556810930c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x555681093068 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681083e48 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555681084030 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x555681083fa0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5556810935f0 <col:56, line:354:5>
|   |-DeclStmt 0x555681093398 <line:346:9, col:51>
|   | `-VarDecl 0x5556810931d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x555681093380 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x555681093350 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x555681093338 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x555681093320 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5556810932f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5556810932d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5556810932c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x555681093290 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x555681093550 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x555681093400 <col:9, col:14> 'int64_t':'long' lvalue .x 0x555681088cf8
|   | | `-MemberExpr 0x5556810933d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x555681089ca8
|   | |   `-DeclRefExpr 0x5556810933b0 <col:9> 'Timestamp' lvalue Var 0x5556810931d0 't' 'Timestamp'
|   | `-BinaryOperator 0x555681093530 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x555681093500 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555681093430 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x555681083fa0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x555681093518 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5556810934e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5556810934c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x555681093490 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x555681093450 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5556810934a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x555681093470 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5556810935d8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x5556810935a8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x555681093590 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x555681093570 <col:16> 'Timestamp' lvalue Var 0x5556810931d0 't' 'Timestamp'
|-CXXMethodDecl 0x5556810841f8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5556810840e8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681084160 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810937a8 <col:72, line:360:5>
|   `-ReturnStmt 0x555681093798 <line:359:9, col:51>
|     `-ExprWithCleanups 0x555681093780 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x555681093750 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x555681093738 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5556810936f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5556810936e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x555681093628 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5556810840e8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5556810936a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x555681093688 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x555681093648 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5556810886e0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5556810936c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x555681093668 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681084160 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555681084348 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5556810842b8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5556810a0118 <col:56, line:371:5>
|   |-DeclStmt 0x555681093998 <line:363:9, col:51>
|   | `-VarDecl 0x5556810937d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x555681093980 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x555681093950 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x555681093938 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x555681093920 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5556810938f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5556810938d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5556810938c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x555681093890 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5556810a0078 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x555681093a00 <col:9, col:14> 'int64_t':'long' lvalue .x 0x555681088cf8
|   | | `-MemberExpr 0x5556810939d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x555681089ca8
|   | |   `-DeclRefExpr 0x5556810939b0 <col:9> 'Timestamp' lvalue Var 0x5556810937d0 't' 'Timestamp'
|   | `-CallExpr 0x5556810a0018 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x5556810a0000 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x555681093a30 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x555681089fd8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x5556810a0048 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555681093a50 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x5556810842b8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5556810a0060 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55568109ffe0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55568109ffb0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x555681093a70 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f1a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55568109ffc8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x555681093a90 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5556810a0100 <line:370:9, col:16>
|     `-CXXConstructExpr 0x5556810a00d0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5556810a00b8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5556810a0098 <col:16> 'Timestamp' lvalue Var 0x5556810937d0 't' 'Timestamp'
|-CXXMethodDecl 0x555681084438 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5556810a0258 <col:39, line:377:5>
|   `-ReturnStmt 0x5556810a0248 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5556810a0230 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5556810a0200 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5556810a01e8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5556810a01a8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x5556810a0150 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x5556810a0190 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5556810a0170 <col:29> 'int' 1
|-CXXMethodDecl 0x5556810844f8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5556810a0338 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5556810a02f0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x5556810a0280 <col:9> '<bound member function type>' ->assign 0x5556810846f8
|     | `-CXXThisExpr 0x5556810a0270 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5556810a02b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5556810a0320 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5556810a02d0 <col:19> 'int' 0
|-CXXMethodDecl 0x5556810846f8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5556810845a8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681084620 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55568108b8d0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55568108b8b0 <col:60> 'int' 0
| `-CompoundStmt 0x5556810a0530 <col:63, line:395:5>
|   `-BinaryOperator 0x5556810a0510 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x5556810a0390 <col:9, col:12> 'int64_t':'long' lvalue .x 0x555681088cf8
|     | `-MemberExpr 0x5556810a0360 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x555681089ca8
|     |   `-CXXThisExpr 0x5556810a0350 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5556810a04f0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x5556810a0480 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5556810a0420 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5556810a0408 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5556810a03f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5556810a03c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5556810845a8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x5556810a0468 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5556810a0448 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5556810a04d8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5556810a04c0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x5556810a04a0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681084620 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556810848c8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5556810847b8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681084830 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a0688 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5556810a0640 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5556810a0558 <col:9> '<bound member function type>' ->assign 0x5556810846f8
|     | `-CXXThisExpr 0x5556810a0548 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5556810a0670 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5556810a0588 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5556810847b8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5556810a0600 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5556810a05e8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5556810a05a8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x555681088598 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5556810a0628 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5556810a05c8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681084830 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555681084a98 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x555681084988 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681084a00 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a07e0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x5556810a0798 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x5556810a06b0 <col:9> '<bound member function type>' ->assign 0x5556810846f8
|     | `-CXXThisExpr 0x5556810a06a0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5556810a07c8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5556810a06e0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x555681084988 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5556810a0758 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5556810a0740 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5556810a0700 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5556810886e0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5556810a0780 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5556810a0720 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681084a00 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555681084c68 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x555681084b58 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681084bd0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55568108b908 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55568108b8e8 <col:57> 'int' 0
| `-DeprecatedAttr 0x555681084d18 <col:75> "" ""
|-CXXMethodDecl 0x555681084ea8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x555681084d98 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681084e10 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555681084f58 <col:74> "" ""
|-CXXMethodDecl 0x5556810850e8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x555681084fd8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x555681085050 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555681085198 <col:74> "" ""
|-CXXMethodDecl 0x555681085228 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x5556810852c8 <col:42> "" ""
|-CXXMethodDecl 0x555681087b00 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x5556810879e0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x555681087a60 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x555681087bd0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x555681087c90 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x555681087d30 <col:20>
| `-OptimizeNoneAttr 0x555681087d88 <col:30>
|-CXXMethodDecl 0x555681087dd0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x555681087e90 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x555681087f50 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x555681088010 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x5556810880d0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x555681088190 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x555681088250 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x555681088310 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x555681088450 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5556810883c0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a0928 <col:58, line:512:5>
|   `-ReturnStmt 0x5556810a0918 <line:511:9, col:53>
|     `-BinaryOperator 0x5556810a08f8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5556810a08c8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5556810a07f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5556810883c0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5556810a08e0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5556810a08a8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5556810a0888 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5556810a0858 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5556810a0818 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5556810a0870 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5556810a0838 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f470 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x555681088598 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x555681088508 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a0a70 <col:58, line:516:5>
|   `-ReturnStmt 0x5556810a0a60 <line:515:9, col:53>
|     `-BinaryOperator 0x5556810a0a40 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5556810a0a10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5556810a0940 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681088508 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5556810a0a28 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5556810a09f0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5556810a09d0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5556810a09a0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5556810a0960 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5556810a09b8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5556810a0980 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5556810886e0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x555681088650 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a0bb8 <col:58, line:520:5>
|   `-ReturnStmt 0x5556810a0ba8 <line:519:9, col:53>
|     `-BinaryOperator 0x5556810a0b88 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5556810a0b58 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5556810a0a88 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681088650 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5556810a0b70 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5556810a0b38 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5556810a0b18 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5556810a0ae8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5556810a0aa8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f1a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5556810a0b00 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5556810a0ac8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x555681088828 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x555681088798 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a0d00 <col:60, line:524:5>
|   `-ReturnStmt 0x5556810a0cf0 <line:523:9, col:55>
|     `-BinaryOperator 0x5556810a0cd0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5556810a0ca0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5556810a0bd0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681088798 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5556810a0cb8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5556810a0c80 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5556810a0c60 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5556810a0c30 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5556810a0bf0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5556810a0c48 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5556810a0c10 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f470 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x555681088970 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5556810888e0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a0e48 <col:60, line:528:5>
|   `-ReturnStmt 0x5556810a0e38 <line:527:9, col:55>
|     `-BinaryOperator 0x5556810a0e18 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5556810a0de8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5556810a0d18 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5556810888e0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5556810a0e00 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5556810a0dc8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5556810a0da8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5556810a0d78 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5556810a0d38 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5556810a0d90 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5556810a0d58 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x555681088ab8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x555681088a28 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a0f90 <col:60, line:532:5>
|   `-ReturnStmt 0x5556810a0f80 <line:531:9, col:55>
|     `-BinaryOperator 0x5556810a0f60 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5556810a0f30 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5556810a0e60 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681088a28 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5556810a0f48 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5556810a0f10 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5556810a0ef0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5556810a0ec0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5556810a0e80 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f1a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5556810a0ed8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5556810a0ea0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55568107f500 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x555681088b60 prev 0x55568107f9a0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x555681088c58 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x555681088cf8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55568108fac0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55568108fea8 <col:11>
| |-CXXConstructorDecl 0x55568108fba0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55568108fc88 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5556810905f0 <col:11>
| |-CXXConstructorDecl 0x55568108fd28 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55568108fe38 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x555681091e48 <col:11>
| |-CXXDestructorDecl 0x555681091158 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x555680d97d08 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x555680d97e18 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x555680d986e0 <col:11>
| |   `-ReturnStmt 0x555680d986d0 <col:11>
| |     `-UnaryOperator 0x555680d986b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x555680d986a8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x555680d97e88 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x555680d97f98 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x5556812344c0 <col:11>
|     `-ReturnStmt 0x5556812344b0 <col:11>
|       `-UnaryOperator 0x555681234498 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x555681234488 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x555681088d60 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x555681088e60 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x555681089060 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555681088e40 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x555681088e20 <col:21> 'int' 0
| |-EnumConstantDecl 0x555681088ef0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x555681089078 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555681088ed0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x555681088eb0 <col:23> 'int' 1
| |-EnumConstantDecl 0x555681088f80 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x555681089090 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555681088f60 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x555681088f40 <col:23> 'int' 2
| `-EnumConstantDecl 0x555681089010 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x5556810890a8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555681088ff0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x555681088fd0 <col:27> 'int' 3
|-CXXMethodDecl 0x5556810890e8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x5556810891b0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x5556810893b8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x555681089260 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x5556810892e0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55568108b920 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x5556810895c8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x555681089478 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x5556810894f0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x555681089698 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x555681089758 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x5556810898c8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x555681089808 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x555681089990 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x555681089a50 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x555681089b10 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x555681089bd0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x555681089c70 <line:670:3, col:10> col:3 private
|-FieldDecl 0x555681089ca8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x555681089d18 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x5556810a0fa8 <col:27, line:684:5>
|-CXXMethodDecl 0x555681089dd8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x5556810a0fb8 <col:27, line:696:5>
|-CXXMethodDecl 0x555681089fd8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x555681089e88 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x555681089f00 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a1140 <col:66, line:700:5>
|   `-ReturnStmt 0x5556810a1130 <line:699:9, col:31>
|     `-CallExpr 0x5556810a10d0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x5556810a10b8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5556810a1068 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x555680f0c388 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x5556810a1100 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x5556810a1028 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x555681089e88 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x5556810a1118 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5556810a1048 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681089f00 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55568108a348 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55568108a098 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55568108a110 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55568108a188 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55568108a200 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556810a1490 <col:64, line:707:5>
|   |-DeclStmt 0x5556810a11d0 <line:704:9, col:24>
|   | `-VarDecl 0x5556810a1168 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5556810a13e0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x5556810a11e8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55568108a110 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5556810a13c8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x5556810a1360 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5556810a1348 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5556810a12c8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x555680f11658 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x5556810a1398 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5556810a1268 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55568108a188 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x5556810a13b0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5556810a1288 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55568108a200 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x5556810a12a8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x5556810a1168 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x5556810a1470 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5556810a1400 <col:9> 'int32_t':'int' lvalue ParmVar 0x55568108a098 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5556810a1458 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5556810a1440 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5556810a1420 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x5556810a1168 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55568108a5e8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55568108a418 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55568108a490 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55568108a508 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55568108a888 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55568108a6b0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55568108a728 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55568108a7a0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55568108aa18 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55568108a950 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55568108ac18 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55568108aad0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55568108ab48 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55568108aee8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55568108ae28 parent 0x555680b8a278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55568108acd8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55568108ad50 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55568108b108 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55568108b048 parent 0x555680b8a278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55568108af38 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55568108afb0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55568108b2d0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55568108b218 parent 0x555680b8a278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55568108b158 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55568108b558 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55568108b498 parent 0x555680b8a278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55568108b348 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55568108b3c0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55568108b778 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55568108b6b8 parent 0x555680b8a278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55568108b5a8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55568108b620 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x555681091000 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5556810910e8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x555681091b58 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x555681091b10 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x555681089ca8
| |     `-DeclRefExpr 0x555681091af0 <col:7> 'const Timestamp' lvalue ParmVar 0x5556810910e8 '' 'const Timestamp &'
| `-CompoundStmt 0x555681091bb8 <col:7>
|-CXXConstructorDecl 0x555681091268 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x555681091378 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x555681089ca8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x555681091e58 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x555681091e00 <col:7> 'Timestamp::rep_t' xvalue ._t 0x555681089ca8
| |     `-CXXStaticCastExpr 0x555681091dd0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x555681091da0 <col:7> 'Timestamp' lvalue ParmVar 0x555681091378 '' 'Timestamp &&'
| `-CompoundStmt 0x555681091eb8 <col:7>
|-CXXDestructorDecl 0x555681091428 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x555680d97b58 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x555680d97c68 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x555680d98758 <col:7>
|   |-CXXMemberCallExpr 0x555680d986f8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x555680d98638 <col:7> '<bound member function type>' .operator= 0x555680d97d08
|   | | `-MemberExpr 0x555680d98548 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x555681089ca8
|   | |   `-CXXThisExpr 0x555680d98538 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x555680d98608 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x555681089ca8
|   |   `-DeclRefExpr 0x555680d985e8 <col:7> 'const Timestamp' lvalue ParmVar 0x555680d97c68 '' 'const Timestamp &'
|   `-ReturnStmt 0x555680d98748 <col:7>
|     `-UnaryOperator 0x555680d98730 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x555680d98720 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x555680d98008 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x555680d98118 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x555681234538 <col:7>
    |-CXXMemberCallExpr 0x5556812344d8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x555681234440 <col:7> '<bound member function type>' .operator= 0x555680d97e88
    | | `-MemberExpr 0x555681234310 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x555681089ca8
    | |   `-CXXThisExpr 0x555681234300 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x555681234410 <col:7> 'Timestamp::rep_t' xvalue ._t 0x555681089ca8
    |   `-CXXStaticCastExpr 0x5556812343e0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x5556812343b0 <col:7> 'Timestamp' lvalue ParmVar 0x555680d98118 '' 'Timestamp &&'
    `-ReturnStmt 0x555681234528 <col:7>
      `-UnaryOperator 0x555681234510 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x555681234500 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555681238ff0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x5556812391c8 prev 0x555681238ff0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x555681239258 <col:46, col:52> col:46 public
|-TypedefDecl 0x555681239280 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x55568123ae60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55568123ae10 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x555681239740 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x555681239630 'type'
|     `-TemplateSpecializationType 0x5556812395c0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5556812394a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x555681239480 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x555681239460 <col:24> 'unsigned long' 16
|       `-RecordType 0x5556812395a0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x5556812394c0 'char_array'
|-TypedefDecl 0x55568123af18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55568123aee0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55568123aec0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55568123ae60 'type'
|     `-ElaboratedType 0x55568123ae10 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x555681239740 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x555681239630 'type'
|         `-TemplateSpecializationType 0x5556812395c0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5556812394a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x555681239480 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x555681239460 <col:24> 'unsigned long' 16
|           `-RecordType 0x5556812395a0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x5556812394c0 'char_array'
|-CXXMethodDecl 0x55568123b098 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55568123afa8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55568123b188 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55568123b268 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55568123b268
|-CXXMethodDecl 0x55568123b538 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55568123b440 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55568123b778 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55568123b5f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55568123b668 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55568123b948 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55568123b838 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55568123b8b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55568123baa8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55568123bb78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55568123bdc8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55568123bc38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55568123bcb0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55568123c028 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55568123be98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55568123bf10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55568123c1e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55568123c0f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55568123c3a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55568123c2b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55568123c460 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55568123c510 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55568123c748 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55568123c5c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55568123c638 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55568123c9e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55568123c8f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55568123cab0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55568123cb00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55568123cb50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555681237b48 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x555681237d58 prev 0x555681237b48 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x555681238f60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x555681238f10 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x555681238ef0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x555681238da0 'type'
|     `-SubstTemplateTypeParmType 0x555681238bc0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x555680e54510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e544b8 'T'
|       `-RecordType 0x555681238710 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x555681238628 'sized_array_memory'
|-FieldDecl 0x55568123cba0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55568123cbf0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55568123cc28 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x555681237df0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x555680e8c1a8 'T'
|   `-RecordType 0x555681236d50 'TimerSet::heap_element'
|     `-CXXRecord 0x555681236cc0 'heap_element'
|-TypedefDecl 0x55568123cce8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55568123ccb0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x555681237df0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555681236d50 'TimerSet::heap_element'
|       `-CXXRecord 0x555681236cc0 'heap_element'
|-TypedefDecl 0x55568123cd78 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55568123cd40 'const TimerSet::heap_element &'
|   `-QualType 0x555681237df1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x555681237df0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555681236d50 'TimerSet::heap_element'
|         `-CXXRecord 0x555681236cc0 'heap_element'
|-TypedefDecl 0x55568123ce08 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55568123cdd0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x555681237df0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555681236d50 'TimerSet::heap_element'
|       `-CXXRecord 0x555681236cc0 'heap_element'
|-TypedefDecl 0x55568123cec8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55568123ce90 'const TimerSet::heap_element *'
|   `-QualType 0x555681237df1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x555681237df0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555681236d50 'TimerSet::heap_element'
|         `-CXXRecord 0x555681236cc0 'heap_element'
|-TypedefDecl 0x55568123db20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55568123dad0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55568123dab0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55568123d9e8 'type'
|     `-LValueReferenceType 0x55568123d9b0 'const TimerSet::heap_element &'
|       `-QualType 0x55568123d751 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55568123d750 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x555680e5ebe0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555680e5eb88 'T'
|           `-RecordType 0x555681236d50 'TimerSet::heap_element'
|             `-CXXRecord 0x555681236cc0 'heap_element'
|-TypedefDecl 0x55568123db88 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55568123cd40 'const TimerSet::heap_element &'
|   `-QualType 0x555681237df1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x555681237df0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555681236d50 'TimerSet::heap_element'
|         `-CXXRecord 0x555681236cc0 'heap_element'
|-TypedefDecl 0x55568123dbe0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x55568123dc48 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55568123cdd0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x555681237df0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555681236d50 'TimerSet::heap_element'
|       `-CXXRecord 0x555681236cc0 'heap_element'
|-TypedefDecl 0x55568123dcb0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55568123ce90 'const TimerSet::heap_element *'
|   `-QualType 0x555681237df1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x555681237df0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555681236d50 'TimerSet::heap_element'
|         `-CXXRecord 0x555681236cc0 'heap_element'
|-EnumDecl 0x55568123dd08 <line:134:5> col:5
| `-EnumConstantDecl 0x55568123de00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55568123dde0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x555680e8d888 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x555680e8d860 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x555680e8d840 <col:40> 'int' 1
|-CXXConstructorDecl 0x55568123de88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55568123e118 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55568123df40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568123dfe0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55568123e3d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55568123e2c0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55568123e698 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55568123e580 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55568123e9e0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55568123e8c0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55568123ecf0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55568123ebd0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55568123efe0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55568123ee28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568123eea0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55568123f138 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55568123f218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568123f270 <col:30> Inherited
|-CXXMethodDecl 0x55568123f2b8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55568123f368 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568123f3c0 <col:30> Inherited
|-CXXMethodDecl 0x55568123f488 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55568123f538 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568123f590 <col:30> Inherited
|-CXXMethodDecl 0x55568123f5d8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55568123f688 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568123f6e0 <col:30> Inherited
|-CXXMethodDecl 0x55568123f728 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55568123f7d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568123f830 <col:30> Inherited
|-CXXMethodDecl 0x55568123f878 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55568123f928 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568123f980 <col:30> Inherited
|-CXXMethodDecl 0x55568123f9a8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55568123fa58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55568123fb08 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55568123fcc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55568123fbb8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568123fc30 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55568123fe18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55568123fd88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568123ffc8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55568123fed0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x555681240080 <col:20>
| `-OptimizeNoneAttr 0x5556812400d8 <col:30>
|-CXXMethodDecl 0x5556812401f8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x555681240100 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5556812402b0 <col:20>
| `-OptimizeNoneAttr 0x555681240308 <col:30>
|-CXXMethodDecl 0x5556812403c0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x555681240330 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555681240508 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555681240478 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555681240638 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x555681240768 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x555681240838 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x555681240908 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x555681240a48 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5556812409b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555681240b90 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555681240b00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555681240cd8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x555681240c48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555681240d90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x555681240e90 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x555681240e00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555681240f48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x555681241008 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x555681241108 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x5556812412b8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5556812411c8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x555681243a98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x555681241370 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x5556812439f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x5556812438f8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x555681243b78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x555681243cc8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x555681243c38 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x555681243d80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x555681243fc8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x555681243e40 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x555681243eb8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x555681244188 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x555681244098 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5556812443d8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x555681244250 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5556812442c8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x555681244498 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5556812446f8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x555681244600 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x5556812447c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5556812447c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555681245cf0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x555681245ec8 prev 0x555681245cf0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x555681245f58 <col:46, col:52> col:46 public
|-TypedefDecl 0x555681245f80 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x555681247b50 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x555681247b00 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x555681246430 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x555681246330 'type'
|     `-TemplateSpecializationType 0x5556812462c0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5556812461a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x555681246180 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x555681246160 <col:24> 'unsigned long' 8
|       `-RecordType 0x5556812462a0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x5556812461c0 'char_array'
|-TypedefDecl 0x555681247c08 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x555681247bd0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x555681247bb0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x555681247b50 'type'
|     `-ElaboratedType 0x555681247b00 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x555681246430 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x555681246330 'type'
|         `-TemplateSpecializationType 0x5556812462c0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5556812461a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x555681246180 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x555681246160 <col:24> 'unsigned long' 8
|           `-RecordType 0x5556812462a0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x5556812461c0 'char_array'
|-CXXMethodDecl 0x555681247d88 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x555681247c98 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x555681247e78 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x555681247f58 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x555681247f58
|-CXXMethodDecl 0x555681248228 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x555681248130 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x555681248468 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5556812482e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x555681248358 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555681248638 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x555681248528 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5556812485a0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555681248798 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x555681248868 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x555681248ab8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x555681248928 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5556812489a0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555681248d18 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x555681248b88 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x555681248c00 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555681248ed8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x555681248de8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555681249098 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x555681248fa0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555681249150 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x555681249200 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x555681249438 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5556812492b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x555681249328 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5556812496d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5556812495e0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x5556812497a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x5556812497f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x555681249840 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555681244910 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x555681244b18 prev 0x555681244910 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x555681245c60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x555681245c10 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x555681245bf0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x555681245aa0 'type'
|     `-SubstTemplateTypeParmType 0x5556812458c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x555680e54510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e544b8 'T'
|       `-RecordType 0x555681245410 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x555681245328 'sized_array_memory'
|-FieldDecl 0x555681249890 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5556812498e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x555681249918 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x555681244bb0 'Timer *' sugar
|   |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x555680e8c1a8 'T'
|   `-PointerType 0x5556810f0d90 'Timer *'
|     `-RecordType 0x5556810efee0 'Timer'
|       `-CXXRecord 0x55568122ddf8 'Timer'
|-TypedefDecl 0x5556812499d8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x5556812499a0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x555681244bb0 'Timer *' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-PointerType 0x5556810f0d90 'Timer *'
|       `-RecordType 0x5556810efee0 'Timer'
|         `-CXXRecord 0x55568122ddf8 'Timer'
|-TypedefDecl 0x555681249a98 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x555681249a60 'Timer *const &'
|   `-QualType 0x555681244bb1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x555681244bb0 'Timer *' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-PointerType 0x5556810f0d90 'Timer *'
|         `-RecordType 0x5556810efee0 'Timer'
|           `-CXXRecord 0x55568122ddf8 'Timer'
|-TypedefDecl 0x555681249b58 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x555681249b20 'Timer **'
|   `-SubstTemplateTypeParmType 0x555681244bb0 'Timer *' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-PointerType 0x5556810f0d90 'Timer *'
|       `-RecordType 0x5556810efee0 'Timer'
|         `-CXXRecord 0x55568122ddf8 'Timer'
|-TypedefDecl 0x555681249c18 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x555681249be0 'Timer *const *'
|   `-QualType 0x555681244bb1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x555681244bb0 'Timer *' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-PointerType 0x5556810f0d90 'Timer *'
|         `-RecordType 0x5556810efee0 'Timer'
|           `-CXXRecord 0x55568122ddf8 'Timer'
|-TypedefDecl 0x55568124a7f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55568124a7a0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55568124a780 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55568124a710 'type'
|     `-SubstTemplateTypeParmType 0x55568124a4d0 'Timer *' sugar
|       |-TemplateTypeParmType 0x555680e5f310 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e5f2c0 'T'
|       `-PointerType 0x5556810f0d90 'Timer *'
|         `-RecordType 0x5556810efee0 'Timer'
|           `-CXXRecord 0x55568122ddf8 'Timer'
|-TypedefDecl 0x55568124a858 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x555681249a60 'Timer *const &'
|   `-QualType 0x555681244bb1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x555681244bb0 'Timer *' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-PointerType 0x5556810f0d90 'Timer *'
|         `-RecordType 0x5556810efee0 'Timer'
|           `-CXXRecord 0x55568122ddf8 'Timer'
|-TypedefDecl 0x55568124a8b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x55568124a918 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x555681249b20 'Timer **'
|   `-SubstTemplateTypeParmType 0x555681244bb0 'Timer *' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-PointerType 0x5556810f0d90 'Timer *'
|       `-RecordType 0x5556810efee0 'Timer'
|         `-CXXRecord 0x55568122ddf8 'Timer'
|-TypedefDecl 0x55568124a980 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x555681249be0 'Timer *const *'
|   `-QualType 0x555681244bb1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x555681244bb0 'Timer *' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-PointerType 0x5556810f0d90 'Timer *'
|         `-RecordType 0x5556810efee0 'Timer'
|           `-CXXRecord 0x55568122ddf8 'Timer'
|-EnumDecl 0x55568124a9d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55568124aad0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55568124aab0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x555680e8d888 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x555680e8d860 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x555680e8d840 <col:40> 'int' 1
|-CXXConstructorDecl 0x55568124ab58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55568124ade8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55568124ac10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568124acb0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55568124b0a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55568124af90 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55568124b368 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55568124b250 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55568124b720 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55568124b590 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55568124ba30 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55568124b910 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55568124bd20 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55568124bb68 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568124bbe0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55568124be78 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55568124bf58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568124bfb0 <col:30> Inherited
|-CXXMethodDecl 0x55568124bff8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55568124c0a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568124c100 <col:30> Inherited
|-CXXMethodDecl 0x55568124c1c8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55568124c278 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568124c2d0 <col:30> Inherited
|-CXXMethodDecl 0x55568124c318 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55568124c3c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568124c420 <col:30> Inherited
|-CXXMethodDecl 0x55568124c468 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55568124c518 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568124c570 <col:30> Inherited
|-CXXMethodDecl 0x55568124c5b8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55568124c668 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568124c6c0 <col:30> Inherited
|-CXXMethodDecl 0x55568124c6e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55568124c798 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55568124c848 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55568124ca08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55568124c8f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568124c970 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55568124cb58 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55568124cac8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568124cd08 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55568124cc10 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55568124cdc0 <col:20>
| `-OptimizeNoneAttr 0x55568124ce18 <col:30>
|-CXXMethodDecl 0x55568124cf38 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55568124ce40 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55568124cff0 <col:20>
| `-OptimizeNoneAttr 0x55568124d048 <col:30>
|-CXXMethodDecl 0x55568124d100 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55568124d070 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568124d248 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55568124d1b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568124d378 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55568124d4a8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55568124d578 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55568124d648 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55568124d788 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55568124d6f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568124d8d0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55568124d840 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55568124da18 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55568124d988 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55568124dad0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55568124dbd0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55568124db40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55568124dc88 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55568124dd48 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55568124de48 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55568124dfc8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55568124df08 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55568124e788 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55568124e080 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55568124e6e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55568124e5e8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55568124e868 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55568124e9b8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55568124e928 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55568124ea70 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55568124ecb8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55568124eb30 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55568124eba8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55568124ee78 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55568124ed88 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55568124f0c8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55568124ef40 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55568124efb8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55568124f188 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55568124f3e8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55568124f2f0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55568124f4b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55568124f4b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568121b1e0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55568121b2f8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55568121b388 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55568121b410 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55568121b500 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55568121b600 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55568121b6c0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55568121b780 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55568121b8a8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55568121b8a8
| `-ParmVarDecl 0x55568121b9b8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x555681250268 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x555681250268
  `-ParmVarDecl 0x555681250378 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555681235e40 prev 0x555681231fc8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x555681235f38 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x555681235fc8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x555681236050 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x555681236148 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x5556812506e0 <col:43, col:67>
|   `-ReturnStmt 0x5556812506d0 <col:45, col:52>
|     `-CXXConstructExpr 0x5556812506a0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x555681250670 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x555681237930
|         `-CXXThisExpr 0x555681250660 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x555681236208 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x555681236410 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x5556812362b8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x555681236330 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x555681236508 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x5556812365d0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x555681250760 <col:39, col:67>
|   `-ReturnStmt 0x555681250750 <col:41, col:48>
|     `-ImplicitCastExpr 0x555681250738 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x555681250708 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x555681237a18
|         `-CXXThisExpr 0x5556812506f8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x555681236698 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5556812507e0 <col:35, col:59>
|   `-ReturnStmt 0x5556812507d0 <col:37, col:44>
|     `-ImplicitCastExpr 0x5556812507b8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x555681250788 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x555681237a80
|         `-CXXThisExpr 0x555681250778 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5556812367e0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x555681236750 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x555681236928 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x555681236898 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x555681236b28 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x5556812369e0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x555681236a58 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x555681236bf8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x555681236c98 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x555681236cc0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x555681236dd8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x555681236e78 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x555681236ed8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x555681237008 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x555681236f38 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x555681236e78 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x5556812508b8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x555681250860 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x555681250830 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55568122f438
|   |       `-ImplicitCastExpr 0x555681250880 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x555681250818 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x5556812507f8 <col:17> 'Timer *' lvalue ParmVar 0x555681236f38 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x555681236ed8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x555681250950 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x555681250910 <col:41> 'Timer *' lvalue ParmVar 0x555681236f38 't_' 'Timer *'
|   `-CompoundStmt 0x5556812509a0 <col:45, line:44:2>
|-CXXRecordDecl 0x5556812370d0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5556812371e8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x555681237438 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x5556812372b8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x555681237330 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x555681250ad0 <col:71, line:49:2>
|     `-ReturnStmt 0x555681250ac0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x555681250a88 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x555681250a70 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x555681250a50 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x5556810ae0f8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x5556812509d0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x555681236e78
|         | `-DeclRefExpr 0x5556812509b0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x5556812372b8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x555681250a20 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x555681236e78
|           `-DeclRefExpr 0x555681250a00 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x555681237330 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x555681237500 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x555681237618 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x555681237838 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x5556812376b8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x555681237730 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x555681250cd8 <col:63, line:54:2>
|     `-BinaryOperator 0x555681250cb8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x555681250b68 <col:6, col:12> 'int' lvalue ->_schedpos1 0x555681231448
|       | `-ImplicitCastExpr 0x555681250b50 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x555681250b20 <col:6, col:9> 'Timer *' lvalue ->t 0x555681236ed8
|       |     `-ImplicitCastExpr 0x555681250b08 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x555681250ae8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x555681237730 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x555681250ca0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x555681250c80 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x555681250c28 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x555681250c08 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x555681250bd8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x555681250b98 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x555681237730 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x555681250bf0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x555681250bb8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x5556812376b8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x555681250c68 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x555681250c48 <col:39> 'int' 1
|-FieldDecl 0x555681237930 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x5556812379a0 <col:44, col:53> aligned
|   `-ConstantExpr 0x555681237980 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x555681237900 <col:52> 'int' 8
|-FieldDecl 0x555681237a18 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x555681237a80 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x555681237ae8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x5556812448b0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55568124f5a0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55568124f600 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55568124f660 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55568124f6c0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55568124f7b0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55568124f720 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55568124f878 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x555681251130 <col:29, line:81:5>
|   `-IfStmt 0x555681251108 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x555681250dc0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x555681250d60 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x555681250d30 <col:6, col:18> '<bound member function type>' .size 0x55568123f9a8
|     |     `-ImplicitCastExpr 0x555681250da8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x555681250d00 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5556812448b0
|     |         `-CXXThisExpr 0x555681250cf0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x555681250fb0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x555681250f98 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x555681250f78 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x555680d97b58 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x555681250de8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x555681237930
|     | | `-CXXThisExpr 0x555681250dd8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x555681250f60 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x555681250f30 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x555681236e78
|     |     `-CXXMemberCallExpr 0x555681250f08 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x555681250ed8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x555681240a48
|     |       | `-MemberExpr 0x555681250e28 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5556812448b0
|     |       |   `-CXXThisExpr 0x555681250e18 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x555681250eb8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x5556812510f0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x5556812510b8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x5556812510a0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x555681251080 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x555680d98008 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x555681250ff8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x555681237930
|         | `-CXXThisExpr 0x555681250fe8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x555681251068 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x555681251038 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55568124f9b8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55568124f928 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55568124fa80 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55568124fb40 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55568124fc00 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55568124fcf0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55568124fd58 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55568124fd58
| `-ParmVarDecl 0x55568124fe68 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55568124ff08 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55568124ff08
| `-ParmVarDecl 0x555681250018 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x5556812500b8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x5556812500b8
| `-ParmVarDecl 0x5556812501c8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x5556812503e8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x5556812503e8
| `-ParmVarDecl 0x5556812504f8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x555681250580 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x555681250580

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.0, %class.Vector.2, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.0, %class.Vector.2, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555680fa1718 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x555680fa1928 prev 0x555680fa1718 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x555680fa2a00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x555680fa29b0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x555680fa2990 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x555680fa2840 'type'
|     `-SubstTemplateTypeParmType 0x5556812458c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x555680e54510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e544b8 'T'
|       `-RecordType 0x555681245410 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x555681245328 'sized_array_memory'
|-FieldDecl 0x555680fa2b00 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x555680fa2b50 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x555680fa2b88 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x555680fa19c0 'pollfd' sugar
|   |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x555680e8c1a8 'T'
|   `-RecordType 0x55568126ac10 'pollfd'
|     `-CXXRecord 0x55568126ab80 'pollfd'
|-TypedefDecl 0x555680fa2c48 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x555680fa2c10 'pollfd &'
|   `-SubstTemplateTypeParmType 0x555680fa19c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x55568126ac10 'pollfd'
|       `-CXXRecord 0x55568126ab80 'pollfd'
|-TypedefDecl 0x555680fa2d08 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x555680fa2cd0 'const pollfd &'
|   `-QualType 0x555680fa19c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x555680fa19c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x55568126ac10 'pollfd'
|         `-CXXRecord 0x55568126ab80 'pollfd'
|-TypedefDecl 0x555680fa2d98 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x555680fa2d60 'pollfd *'
|   `-SubstTemplateTypeParmType 0x555680fa19c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x55568126ac10 'pollfd'
|       `-CXXRecord 0x55568126ab80 'pollfd'
|-TypedefDecl 0x555680fa2e58 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x555680fa2e20 'const pollfd *'
|   `-QualType 0x555680fa19c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x555680fa19c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x55568126ac10 'pollfd'
|         `-CXXRecord 0x55568126ab80 'pollfd'
|-TypedefDecl 0x555680fa3a30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x555680fa39e0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x555680fa39c0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x555680fa3950 'type'
|     `-SubstTemplateTypeParmType 0x555680fa3710 'pollfd' sugar
|       |-TemplateTypeParmType 0x555680e5f310 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e5f2c0 'T'
|       `-RecordType 0x55568126ac10 'pollfd'
|         `-CXXRecord 0x55568126ab80 'pollfd'
|-TypedefDecl 0x555680fa3a98 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x555680fa2cd0 'const pollfd &'
|   `-QualType 0x555680fa19c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x555680fa19c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x55568126ac10 'pollfd'
|         `-CXXRecord 0x55568126ab80 'pollfd'
|-TypedefDecl 0x555680fa3af0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x555680fa3b58 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x555680fa2d60 'pollfd *'
|   `-SubstTemplateTypeParmType 0x555680fa19c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x55568126ac10 'pollfd'
|       `-CXXRecord 0x55568126ab80 'pollfd'
|-TypedefDecl 0x555680fa3bc0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x555680fa2e20 'const pollfd *'
|   `-QualType 0x555680fa19c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x555680fa19c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x55568126ac10 'pollfd'
|         `-CXXRecord 0x55568126ab80 'pollfd'
|-EnumDecl 0x555680fa3c18 <line:134:5> col:5
| `-EnumConstantDecl 0x555680fa3d10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x555680fa3cf0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x555680e8d888 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x555680e8d860 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x555680e8d840 <col:40> 'int' 1
|-CXXConstructorDecl 0x555680fa3d98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x555680fa4028 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x555680fa3e50 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x555680fa3ef0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x555680fa42e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x555680fa41d0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x555680fa45a8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x555680fa4490 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x555680fa48f0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x555680fa47d0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x555680fa4c00 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x555680fa4ae0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x555680fa4ef0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x555680fa4d38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x555680fa4db0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x555680fa5048 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x555680fa5128 <col:20> Inherited
| `-OptimizeNoneAttr 0x555680fa5180 <col:30> Inherited
|-CXXMethodDecl 0x555680fa51c8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x555680fa5278 <col:20> Inherited
| `-OptimizeNoneAttr 0x555680fa52d0 <col:30> Inherited
|-CXXMethodDecl 0x555680fa5398 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x555680fa5448 <col:20> Inherited
| `-OptimizeNoneAttr 0x555680fa54a0 <col:30> Inherited
|-CXXMethodDecl 0x555680fa54e8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x555680fa5598 <col:20> Inherited
| `-OptimizeNoneAttr 0x555680fa55f0 <col:30> Inherited
|-CXXMethodDecl 0x555680fa5638 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x555680fa56e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x555680fa5740 <col:30> Inherited
|-CXXMethodDecl 0x555680fa5788 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x555680fa5838 <col:20> Inherited
| `-OptimizeNoneAttr 0x555680fa5890 <col:30> Inherited
|-CXXMethodDecl 0x555680fa58b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x555680fa5968 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x555680fa5a18 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x555680fa5bd8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x555680fa5ac8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x555680fa5b40 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x555680fa5d28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x555680fa5c98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x555680fa5ed8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x555680fa5de0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x555680fa5f90 <col:20>
| `-OptimizeNoneAttr 0x555680fa5fe8 <col:30>
|-CXXMethodDecl 0x555680fa6108 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x555680fa6010 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x555680fa61c0 <col:20>
| `-OptimizeNoneAttr 0x555680fa6218 <col:30>
|-CXXMethodDecl 0x555680fa62d0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x555680fa6240 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555680fa6418 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555680fa6388 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555680fa6548 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x555680fa6678 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x555680fa6748 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x555680fa6818 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x555680fa6958 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x555680fa68c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555680fa6aa0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555680fa6a10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555680fa6be8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x555680fa6b58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555680fa6ca0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x555680fa6da0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x555680fa6d10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555680fa6e58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x555680fa6f18 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x555680fa7018 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x555680fa71c8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x555680fa70d8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x555680fa7988 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x555680fa7280 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x555680fa78e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x555680fa77e8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x555680fa7a68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x555681277c30 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x555681277ba0 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x555681277ce8 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x555681277f38 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x555681277da8 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x555681277e20 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5556812780f8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x555681278008 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x555681278348 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x5556812781c0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x555681278238 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x555681278408 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x555681278668 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x555681278570 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x555681278738 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x555681278738

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555681279c20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x555681279df8 prev 0x555681279c20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x555681279e88 <col:46, col:52> col:46 public
|-TypedefDecl 0x555681279eb0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x55568127ba80 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55568127ba30 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55568127a360 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55568127a260 'type'
|     `-TemplateSpecializationType 0x55568127a1f0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55568127a0d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55568127a0b0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55568127a090 <col:24> 'unsigned long' 24
|       `-RecordType 0x55568127a1d0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55568127a0f0 'char_array'
|-TypedefDecl 0x55568127bb38 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55568127bb00 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55568127bae0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55568127ba80 'type'
|     `-ElaboratedType 0x55568127ba30 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55568127a360 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55568127a260 'type'
|         `-TemplateSpecializationType 0x55568127a1f0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55568127a0d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55568127a0b0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55568127a090 <col:24> 'unsigned long' 24
|           `-RecordType 0x55568127a1d0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55568127a0f0 'char_array'
|-CXXMethodDecl 0x55568127bcb8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55568127bbc8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55568127bda8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55568127be88 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55568127be88
|-CXXMethodDecl 0x55568127c158 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55568127c060 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55568127c398 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55568127c210 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55568127c288 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55568127c568 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55568127c458 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55568127c4d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55568127c6c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55568127c798 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55568127c9e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55568127c858 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55568127c8d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55568127cc48 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55568127cab8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55568127cb30 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55568127ce08 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55568127cd18 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55568127cfc8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55568127ced0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55568127d080 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55568127d130 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55568127d368 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55568127d1e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55568127d258 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55568127d608 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55568127d510 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55568127d6d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55568127d720 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55568127d770 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555681278880 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x555681278a88 prev 0x555681278880 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x555681279b90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x555681279b40 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x555681279b20 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x5556812799d0 'type'
|     `-SubstTemplateTypeParmType 0x5556812797f0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x555680e54510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e544b8 'T'
|       `-RecordType 0x555680f8baf0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x555680f8ba08 'sized_array_memory'
|-FieldDecl 0x55568127d7c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55568127d810 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55568127d848 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x555681278b20 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x555680e8c1a8 'T'
|   `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-TypedefDecl 0x55568127d908 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55568127d8d0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x555681278b20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-TypedefDecl 0x55568127d9c8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55568127d990 'const SelectSet::SelectorInfo &'
|   `-QualType 0x555681278b21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x555681278b20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-TypedefDecl 0x55568127da58 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55568127da20 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x555681278b20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-TypedefDecl 0x55568127db18 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55568127dae0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x555681278b21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x555681278b20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-TypedefDecl 0x55568127e770 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55568127e720 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55568127e700 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55568127e638 'type'
|     `-LValueReferenceType 0x55568127e600 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55568127e3a1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55568127e3a0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x555680e5ebe0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555680e5eb88 'T'
|           `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-TypedefDecl 0x55568127e7d8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55568127d990 'const SelectSet::SelectorInfo &'
|   `-QualType 0x555681278b21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x555681278b20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-TypedefDecl 0x55568127e830 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-TypedefDecl 0x55568127e898 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55568127da20 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x555681278b20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x555680e8c1a8 'T'
|     `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-TypedefDecl 0x55568127e900 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55568127dae0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x555681278b21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x555681278b20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x555680e8c200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x555680e8c1a8 'T'
|       `-RecordType 0x555680fa1280 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x555680fa11f0 'SelectorInfo'
|-EnumDecl 0x55568127e958 <line:134:5> col:5
| `-EnumConstantDecl 0x55568127ea50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55568127ea30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x555680e8d888 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x555680e8d860 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x555680e8d840 <col:40> 'int' 1
|-CXXConstructorDecl 0x55568127ead8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55568127ed68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55568127eb90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568127ec30 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55568127f028 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55568127ef10 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55568127f2e8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55568127f1d0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55568127f630 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55568127f510 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55568127f940 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55568127f820 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55568127fc40 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55568127fa78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55568127faf0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55568127fd98 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55568127fe78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55568127fed0 <col:30> Inherited
|-CXXMethodDecl 0x55568127ff18 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55568127ffc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x555681280020 <col:30> Inherited
|-CXXMethodDecl 0x5556812800e8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x555681280198 <col:20> Inherited
| `-OptimizeNoneAttr 0x5556812801f0 <col:30> Inherited
|-CXXMethodDecl 0x555681280238 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5556812802e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x555681280340 <col:30> Inherited
|-CXXMethodDecl 0x555681280388 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x555681280438 <col:20> Inherited
| `-OptimizeNoneAttr 0x555681280490 <col:30> Inherited
|-CXXMethodDecl 0x5556812804d8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x555681280588 <col:20> Inherited
| `-OptimizeNoneAttr 0x5556812805e0 <col:30> Inherited
|-CXXMethodDecl 0x555681280608 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5556812806b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x555681280768 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x555681280928 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x555681280818 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x555681280890 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x555681280a78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5556812809e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x555681280c28 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x555681280b30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x555681280ce0 <col:20>
| `-OptimizeNoneAttr 0x555681280d38 <col:30>
|-CXXMethodDecl 0x555681280e58 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x555681280d60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x555681280f10 <col:20>
| `-OptimizeNoneAttr 0x555681280f68 <col:30>
|-CXXMethodDecl 0x555681281020 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x555681280f90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555681281168 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5556812810d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555681281298 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5556812813c8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x555681281498 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x555681281568 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5556812816a8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x555681281618 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5556812817f0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555681281760 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555681281938 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5556812818a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5556812819f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x555681281af0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x555681281a60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555681281ba8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x555681281c68 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x555681281d68 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x555681281f18 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x555681281e28 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5556812826d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x555681281fd0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x555681282638 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x555681282538 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5556812827b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x555681282908 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x555681282878 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5556812829c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x555681282c08 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x555681282a80 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x555681282af8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x555681282dc8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x555681282cd8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x555681283018 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x555681282e90 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x555681282f08 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5556812830d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x555681283338 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x555681283240 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x555681283408 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x555681283408

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555680fa03d0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x555680fa04e8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x555680fa0578 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x555680fa0600 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x555680fa06f0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x555680fa06f0
|-CXXMethodDecl 0x555680fa07f0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x555680fa0a90 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x555680fa08a8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x555680fa0920 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x555680fa09a0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x555680fa0d00 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x555680fa0b60 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x555680fa0bd8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x555680fa0c58 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x555680fa0e58 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x555680fa0dc8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x555680fa0f20 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x555681284ab8 <col:34, line:50:5>
|   |-BinaryOperator 0x555681284488 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x555681284448 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x555680fa16a8
|   | | `-CXXThisExpr 0x555681284438 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x555681284478 <col:23> 'bool' true
|   `-CallExpr 0x555681284a90 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x555681284a78 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5556812849f8 <col:2> 'void (long)' lvalue Function 0x5556812848f8 'ignore_result' 'void (long)' (FunctionTemplate 0x555680e4f4b8 'ignore_result')
|     `-CallExpr 0x5556812846a0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x555681284688 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x555681284608 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x555681255198 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5556812846d8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5556812845b0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x555681284598 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x555681284548 <col:22> 'int [2]' lvalue ->_wake_pipe 0x555680fa1648
|       |   |   `-CXXThisExpr 0x555681284538 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x555681284578 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x555681284708 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5556812846f0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5556812845d0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x555681284720 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5556812845e8 <col:41> 'int' 1
|-CXXMethodDecl 0x555680fa1060 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x555680fa0fd0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x555680fa1128 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x555680fa11c8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x555680fa11f0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x555680fa1308 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x555680fa13a8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x555680fa1408 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x555680fa1470 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x555680fa1520 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x555680fa13a8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x555681284b18 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x555681284ad8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x555680fa1408 'write' 'Element *'
|   | `-ImplicitCastExpr 0x555681284b98 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x555681284b58 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x555680fa1470 'pollfd' 'int'
|   | `-UnaryOperator 0x555681284bf8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x555681284bd8 <col:35> 'int' 1
|   `-CompoundStmt 0x555681284c70 <line:64:2, line:65:2>
|-FieldDecl 0x555680fa1648 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x555680fa16a8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x555681278820 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5556812834f0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x555681283728 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x555681283558 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5556812835d0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x555681283648 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x555681283910 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5556812837f8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x555681283878 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x555681283b58 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5556812839d8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x555681283a58 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x555681283d68 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x555681283c18 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x555681283c90 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x555681283eb8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x555681283e28 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x555681283f80 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x555681284040 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x555681284108 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x555681284108
| `-ParmVarDecl 0x555681284218 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5556812842b8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5556812842b8
  `-ParmVarDecl 0x5556812843c8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.5, %class.Vector.6 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.5, %class.Vector.6 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568121a148 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55568121a268 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55568121a2f8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55568121a380 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55568121a470 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55568121a570 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55568121a630 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55568121a6f0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55568121a7d8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55568121a8f8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55568121a8f8
| `-ParmVarDecl 0x55568121aa08 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x555681289888 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x555681289888
  `-ParmVarDecl 0x555681289998 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568122bb68 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55568122bc88 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55568122bd28 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55568122bd88 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x555681288e88 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x555681288e88
| `-ParmVarDecl 0x555681288f98 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x555681289038 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x555681289038
| `-ParmVarDecl 0x555681289148 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5556812891b8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5556812891b8
|-CXXMethodDecl 0x555681289a38 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x555681289a38
| `-ParmVarDecl 0x555681289b48 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x555681289bb8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x555681289bb8
| `-ParmVarDecl 0x555681289cc8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5556812903c8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5556812904a0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568121c040 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55568121c158 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55568121c1e8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55568121c270 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55568121c330 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x555680b8a370 'int'
|-CXXMethodDecl 0x55568121c3f8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55568121c498 <col:45> always_inline
|-CXXMethodDecl 0x55568121c5c8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55568121c500 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55568121c670 <col:49> always_inline
|-CXXConstructorDecl 0x55568121c768 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55568121c768
| `-ParmVarDecl 0x55568121c878 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55568121c918 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55568121c918
| `-ParmVarDecl 0x55568121ca28 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5556812892a0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5556812892a0
|-CXXMethodDecl 0x555681289d68 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x555681289d68
| `-ParmVarDecl 0x555681289e78 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x555681289ee8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x555681289ee8
  `-ParmVarDecl 0x555681289ff8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5556812850e0 prev 0x555680fa0340 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5556812851d8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x555681285268 <col:22, col:28> col:22 public
|-EnumDecl 0x555681285290 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5556812853a8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x555681285388 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x555681285370 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x555681285350 <col:32> 'int' 1
| `-EnumConstantDecl 0x555681285450 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x555681285430 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x555681285418 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5556812853f8 <col:53> 'int' 1000
|-CXXMethodDecl 0x5556812854f0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5556812855b0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x555681285698 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55568128a0b8 <col:34, col:52>
|   `-ReturnStmt 0x55568128a0a8 <col:36, col:43>
|     `-MemberExpr 0x55568128a078 <col:43> 'TimerSet' lvalue ->_timers 0x555681287368
|       `-CXXThisExpr 0x55568128a068 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x555681285788 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55568128a120 <col:46, col:64>
|   `-ReturnStmt 0x55568128a110 <col:48, col:55>
|     `-MemberExpr 0x55568128a0e0 <col:55> 'const TimerSet' lvalue ->_timers 0x555681287368
|       `-CXXThisExpr 0x55568128a0d0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x555681285878 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55568128a188 <col:36, col:55>
|   `-ReturnStmt 0x55568128a178 <col:38, col:45>
|     `-MemberExpr 0x55568128a148 <col:45> 'SelectSet' lvalue ->_selects 0x5556812873c8
|       `-CXXThisExpr 0x55568128a138 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x555681285968 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55568128a1f0 <col:48, col:67>
|   `-ReturnStmt 0x55568128a1e0 <col:50, col:57>
|     `-MemberExpr 0x55568128a1b0 <col:57> 'const SelectSet' lvalue ->_selects 0x5556812873c8
|       `-CXXThisExpr 0x55568128a1a0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x555681285a28 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x555681285b18 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x555681285c88 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x555681285bc8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x555681285d50 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x555681286198 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x555681285e00 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x555681286080 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x555681286268 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x555681286328 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5556812863e8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x555681286528 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x555681286498 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5556812865f0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5556812866b0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x555681286770 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x555681286830 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x555681286970 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5556812868e0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x555681286a38 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x555681286af8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x555681286b98 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x555681286c60 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286cb0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286d00 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286d50 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286da0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286df0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286e40 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286e90 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286ee0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x555681286f30 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x555681286f80 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x555681287078 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x555681286fe8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5556812871c8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x555681287138 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x555681287270 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5556812872a8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x555681287308 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x555681287368 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5556812873c8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x555681287448 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5556812874b8 <col:40, col:50> aligned
|   `-ConstantExpr 0x555681287498 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x555681287418 <col:48> 'int' 64
|-FieldDecl 0x555681287528 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x555681287588 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x555681287680 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x555681287790 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5556812877f0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x555681287870 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5556812878e0 <col:36, col:46> aligned
|   `-ConstantExpr 0x5556812878c0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x555681287840 <col:44> 'int' 64
|-FieldDecl 0x555681287958 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5556812879b8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x555681287a08 <line:170:3, col:9> col:3 public
|-FieldDecl 0x555681287a48 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x555681287ab0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x555681287b00 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x555681287cc8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x555681287b38 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x555681287bd8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x555681287dc8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x555681287dc8
|-CXXMethodDecl 0x555681287ed0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x555681287f98 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55568128a2e8 <col:34, line:217:5>
|   `-ReturnStmt 0x55568128a2d8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55568128a2c0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55568128a290 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55568121eba0
|         `-ImplicitCastExpr 0x55568128a278 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55568128a248 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55568121eb38
|             `-MemberExpr 0x55568128a218 <col:16> 'const TaskLink' lvalue ->_task_link 0x5556812872a8
|               `-CXXThisExpr 0x55568128a208 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x555681288058 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x555681288118 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55568128aa10 <col:39, line:226:5>
|   |-DeclStmt 0x55568128a538 <line:223:9, col:68>
|   | `-VarDecl 0x55568128a310 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55568128a4f0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55568128a4c0 <col:24, col:38> '<bound member function type>' .compare_swap 0x555680eb5b00
|   |     | `-MemberExpr 0x55568128a388 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x555681287528
|   |     |   `-CXXThisExpr 0x55568128a378 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55568128a478 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55568128a460 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55568128a438 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55568128a418 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55568128a520 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55568128a4a0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55568128a580 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55568128a550 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55568128a310 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55568128a9f0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55568128a9c0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55568128a698 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55568128a668 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55568128a650 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55568128a5a8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55568128a310 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55568128a628 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55568128a610 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55568128a5e8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55568128a5c8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55568128a6f8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55568128a6d8 <col:60> 'int' 0
|       `-CallExpr 0x55568128a920 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55568128a908 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55568128a8e8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555680c2a900 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55568128a960 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55568128a7e8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55568128a978 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55568128a818 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55568128a990 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55568128a858 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55568128a9a8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55568128a8d0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55568128a8b8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55568128a878 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x555681288260 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5556812881d0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x555681288328 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5556812883e8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5556812884a8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x555681288568 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x555681288628 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x555681288720 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x555681288780 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x555681288810 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x555681288bd8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x555681288bd8
| `-ParmVarDecl 0x555681288ce8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5556812893a8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5556812893a8
  `-ParmVarDecl 0x5556812894b8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568121eeb0 prev 0x5556810efda0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55568121efe8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55568121f078 <col:33, col:39> col:33 public
|-EnumDecl 0x55568121f0a0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55568121f1e0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55568121f1c0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55568121f1a0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55568121f160 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55568121f180 <col:26> 'int' 16
| `-EnumConstantDecl 0x55568121f2b0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55568121f290 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55568121f270 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55568121f230 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55568121f250 <col:47> 'int' 31
|-EnumDecl 0x55568121f300 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55568121f440 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55568121f560 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55568121f420 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55568121f400 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55568121f3c0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55568121f3e0 <col:29> 'int' 15
| `-EnumConstantDecl 0x55568121f510 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55568121f578 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55568121f4f0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55568121f4d0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55568121f490 <col:51> 'int' 1
|         `-IntegerLiteral 0x55568121f4b0 <col:54> 'int' 10
|-CXXConstructorDecl 0x555681229778 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55568121f5a0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55568121f620 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x555681229908 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x555681229840 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x555681229a00 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x555681229a00
|-CXXMethodDecl 0x555681229b88 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55568122ccc8 <col:42, line:100:5>
|   `-ReturnStmt 0x55568122ccb8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55568122cca0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55568122cc70 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55568122b9f0
|         `-CXXThisExpr 0x55568122cc60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x555681229c50 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55568122cd48 <col:36, line:105:5>
|   `-ReturnStmt 0x55568122cd38 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55568122cd20 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55568122ccf0 <col:16> 'void *const' lvalue ->_thunk 0x55568122ba58
|         `-CXXThisExpr 0x55568122cce0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x555681229d10 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55568122cdc8 <col:37, line:110:5>
|   `-ReturnStmt 0x55568122cdb8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55568122cda0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55568122cd70 <col:16> 'Element *const' lvalue ->_owner 0x55568122bb18
|         `-CXXThisExpr 0x55568122cd60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x555681229dd0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x555681229e98 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x555681229f58 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55568122a018 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55568122ceb0 <col:35, line:137:5>
|   `-ReturnStmt 0x55568122cea0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55568122ce68 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55568122ce38 <col:16, col:24> '<bound member function type>' ->router 0x5556811025b0
|         `-ImplicitCastExpr 0x55568122ce88 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55568122ce20 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55568122cdf0 <col:16> 'Element *const' lvalue ->_owner 0x55568122bb18
|               `-CXXThisExpr 0x55568122cde0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55568122a0d8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55568122a2d8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55568122a188 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55568122a200 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55568122a4e8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55568122a398 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55568122a410 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55568122a5b8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55568122cfc0 <col:35, line:181:5>
|   `-ReturnStmt 0x55568122cfb0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55568122cf98 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55568122cf80 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55568122cf50 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55568122b628
|           `-MemberExpr 0x55568122cf08 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55568122b748
|             `-MemberExpr 0x55568122ced8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55568122b978
|               `-CXXThisExpr 0x55568122cec8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55568122a678 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55568122d0d8 <col:30, line:192:5>
|   `-BinaryOperator 0x55568122d0b8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55568122d060 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55568122b628
|     | `-MemberExpr 0x55568122d018 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55568122b748
|     |   `-MemberExpr 0x55568122cfe8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55568122b978
|     |     `-CXXThisExpr 0x55568122cfd8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55568122d0a0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55568122d090 <col:32> 'bool' false
|-CXXMethodDecl 0x55568122a738 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55568122d428 <col:30, line:206:5>
|   |-BinaryOperator 0x55568122d1d0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55568122d178 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55568122b628
|   | | `-MemberExpr 0x55568122d130 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55568122b748
|   | |   `-MemberExpr 0x55568122d100 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55568122b978
|   | |     `-CXXThisExpr 0x55568122d0f0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55568122d1b8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55568122d1a8 <col:32> 'bool' true
|   |-CallExpr 0x55568122d270 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55568122d258 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55568122d238 <col:9> 'void ()' lvalue Function 0x555681219d00 'click_fence' 'void ()'
|   `-IfStmt 0x55568122d410 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55568122d350 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55568122d320 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55568122d2d0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55568122bd88
|     | |   `-MemberExpr 0x55568122d2a0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55568122be00
|     | |     `-CXXThisExpr 0x55568122d290 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55568122d338 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55568122d300 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55568122d3d0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55568122d380 <col:13> '<bound member function type>' ->complete_schedule 0x55568122c800
|       | `-CXXThisExpr 0x55568122d370 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55568122d3f8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55568122d3b0 <col:31> 'int' 0
|-CXXMethodDecl 0x55568122a7f8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55568122d550 <col:35, line:240:5>
|   `-BinaryOperator 0x55568122d530 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55568122d4d8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55568122b628
|     | `-MemberExpr 0x55568122d490 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55568122b748
|     |   `-MemberExpr 0x55568122d460 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55568122b978
|     |     `-CXXThisExpr 0x55568122d450 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55568122d518 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55568122d508 <col:32> 'bool' true
|-CXXMethodDecl 0x55568122a8b8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55568122d768 <col:37, line:253:5>
|   |-BinaryOperator 0x55568122d648 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55568122d5f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55568122b628
|   | | `-MemberExpr 0x55568122d5a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55568122b748
|   | |   `-MemberExpr 0x55568122d578 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55568122b978
|   | |     `-CXXThisExpr 0x55568122d568 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55568122d630 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55568122d620 <col:32> 'bool' false
|   `-BinaryOperator 0x55568122d748 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55568122d6f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55568122b688
|     | `-MemberExpr 0x55568122d6a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55568122b748
|     |   `-MemberExpr 0x55568122d678 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55568122b978
|     |     `-CXXThisExpr 0x55568122d668 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55568122d730 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55568122d720 <col:41> 'bool' true
|-CXXMethodDecl 0x55568122a978 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55568122d8e8 <col:37, line:264:5>
|   |-BinaryOperator 0x55568122d868 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55568122d810 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55568122b688
|   | | `-MemberExpr 0x55568122d7c8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55568122b748
|   | |   `-MemberExpr 0x55568122d798 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55568122b978
|   | |     `-CXXThisExpr 0x55568122d788 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55568122d850 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55568122d840 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55568122d8c8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55568122d898 <col:9> '<bound member function type>' ->reschedule 0x55568122a738
|       `-CXXThisExpr 0x55568122d888 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55568122aac0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55568122aa30 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55568122ab90 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55568122acd8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55568122ac48 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55568122ae28 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55568122ad98 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55568122aef0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55568122afb0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55568122b050 <col:53> "" ""
|-CXXMethodDecl 0x55568122b0e8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55568122b188 <col:47> "" ""
|-AccessSpecDecl 0x55568122b1f8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55568122b238 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55568122b2a0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55568122b2f0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55568122b408 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55568122b498 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55568122b5c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55568122b628 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55568122b688 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55568128fa68 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55568128fbd0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55568128fbd0
| | |-CXXConstructorDecl 0x55568128fe88 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55568128fe88
| | | `-ParmVarDecl 0x55568128ff98 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x555681290038 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x555681290038
| |   `-ParmVarDecl 0x555681290148 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55568122b748 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55568122b7a8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55568122b748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55568122b5c8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55568122b800 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55568122b748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55568122b628 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55568122b858 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55568122b748 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55568122b688 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55568122b8b0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55568128f978 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x555681290368 <col:11>
| |-CXXConstructorDecl 0x55568128fcd8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55568128fcd8
| | `-ParmVarDecl 0x55568128fde8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5556812901e8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5556812901e8
|   `-ParmVarDecl 0x5556812902f8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55568122b978 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55568122b9f0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55568122ba58 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55568122bab8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55568122bb18 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55568122bb68 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55568122bc88 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55568122bd28 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55568122bd88 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x555681288e88 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x555681288e88
| | `-ParmVarDecl 0x555681288f98 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x555681289038 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x555681289038
| | `-ParmVarDecl 0x555681289148 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5556812891b8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5556812891b8
| |-CXXMethodDecl 0x555681289a38 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x555681289a38
| | `-ParmVarDecl 0x555681289b48 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x555681289bb8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x555681289bb8
| | `-ParmVarDecl 0x555681289cc8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5556812903c8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5556812904a0 <col:11>
|-FieldDecl 0x55568122be00 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55568122bf48 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55568122be88 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55568122c0f8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55568122c008 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55568122c1c0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55568122c280 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55568122c340 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55568122d9f8 <col:41, line:355:5>
|   `-ReturnStmt 0x55568122d9e8 <line:354:9, col:38>
|     `-BinaryOperator 0x55568122d9c8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55568122d998 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55568122d948 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55568122bd88
|       |   `-MemberExpr 0x55568122d918 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55568122be00
|       |     `-CXXThisExpr 0x55568122d908 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55568122d9b0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55568122d978 <col:38> 'int' 0
|-CXXMethodDecl 0x55568122c400 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55568122c540 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55568122c4b0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55568122c6b8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55568122c5f8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55568122c800 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55568122c770 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55568122c8c8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55568122ca90 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55568122c978 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55568122c9f8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55568122cb90 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55568122cc20 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5556812314f8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x555681231628 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x555681232138 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55568122ddf8 prev 0x5556810efe50 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55568122def0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55568122df80 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55568122dfe0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55568122e088 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55568122e1a8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55568122e348 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55568122e288 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55568122e598 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55568122e408 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55568122e488 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55568122e6f0 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55568122e660 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55568122e878 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55568122e7b0 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55568122ea28 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55568122e968 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55568122eb20 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x555681232310 <col:21, line:58:5>
|   `-IfStmt 0x5556812322f8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x555681232260 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x555681232230 <col:6> '<bound member function type>' ->scheduled 0x55568122f378
|     |   `-ImplicitCastExpr 0x555681232280 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x555681232220 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x5556812322d8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x5556812322a8 <col:6> '<bound member function type>' ->unschedule 0x5556812309a0
|         `-CXXThisExpr 0x555681232298 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55568122ec20 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x5556812324b0 <col:26, line:65:5>
|   |-BinaryOperator 0x5556812323d0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x555681232368 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x555681231628
|   | | `-MemberExpr 0x555681232338 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x555681231700
|   | |   `-CXXThisExpr 0x555681232328 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5556812323b8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555681232398 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x555681231b68 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x555681232490 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x555681232400 <col:2> 'void *' lvalue ->_thunk 0x555681231780
|     | `-CXXThisExpr 0x5556812323f0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x555681232468 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x555681232430 <col:20> 'int' 1
|-CXXMethodDecl 0x55568122ed60 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55568122ecd0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x555681232610 <col:52, line:71:5>
|   |-CStyleCastExpr 0x555681232500 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5556812324d0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55568122ecd0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x5556812325f0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x5556812325c0 <col:2> '<bound member function type>' ->assign 0x55568122ec20
|       `-CXXThisExpr 0x5556812325b0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55568122ef30 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55568122ee18 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55568122ee98 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x555681232790 <col:58, line:79:5>
|   |-BinaryOperator 0x5556812326d8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x555681232670 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x555681231628
|   | | `-MemberExpr 0x555681232640 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x555681231700
|   | |   `-CXXThisExpr 0x555681232630 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5556812326c0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x5556812326a0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55568122ee18 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x555681232770 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x555681232708 <col:2> 'void *' lvalue ->_thunk 0x555681231780
|     | `-CXXThisExpr 0x5556812326f8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x555681232758 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x555681232738 <col:11> 'void *' lvalue ParmVar 0x55568122ee98 'user_data' 'void *'
|-CXXMethodDecl 0x55568122f080 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55568122eff0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x555681232928 <col:35, line:87:5>
|   |-BinaryOperator 0x555681232858 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5556812327f0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x555681231628
|   | | `-MemberExpr 0x5556812327c0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x555681231700
|   | |   `-CXXThisExpr 0x5556812327b0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x555681232840 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555681232820 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x555681231d40 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x555681232908 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x555681232888 <col:2> 'void *' lvalue ->_thunk 0x555681231780
|     | `-CXXThisExpr 0x555681232878 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5556812328f0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5556812328d8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x5556812328b8 <col:11> 'Element *' lvalue ParmVar 0x55568122eff0 'element' 'Element *'
|-CXXMethodDecl 0x55568122f1c8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55568122f138 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x555681232ac0 <col:29, line:94:5>
|   |-BinaryOperator 0x5556812329f0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x555681232988 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x555681231628
|   | | `-MemberExpr 0x555681232958 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x555681231700
|   | |   `-CXXThisExpr 0x555681232948 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5556812329d8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5556812329b8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x555681231f18 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x555681232aa0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x555681232a20 <col:2> 'void *' lvalue ->_thunk 0x555681231780
|     | `-CXXThisExpr 0x555681232a10 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x555681232a88 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x555681232a70 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x555681232a50 <col:11> 'Task *' lvalue ParmVar 0x55568122f138 'task' 'Task *'
|-CXXMethodDecl 0x55568122f2b8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x555681232ba0 <col:37, line:100:5>
|   `-ReturnStmt 0x555681232b90 <line:99:2, col:19>
|     `-BinaryOperator 0x555681232b70 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x555681232b40 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x555681232af0 <col:9> 'Element *const' lvalue ->_owner 0x5556812317e0
|       |   `-CXXThisExpr 0x555681232ae0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x555681232b58 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x555681232b20 <col:19> 'int' 0
|-CXXMethodDecl 0x55568122f378 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x555681232c60 <col:35, line:105:5>
|   `-ReturnStmt 0x555681232c50 <line:104:2, col:23>
|     `-BinaryOperator 0x555681232c30 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x555681232c18 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x555681232bc8 <col:9> 'const int' lvalue ->_schedpos1 0x555681231448
|       |   `-CXXThisExpr 0x555681232bb8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x555681232bf8 <col:23> 'int' 0
|-CXXMethodDecl 0x55568122f438 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x555681232cc8 <col:51, line:118:5>
|   `-ReturnStmt 0x555681232cb8 <line:117:2, col:9>
|     `-MemberExpr 0x555681232c88 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x5556812314a8
|       `-CXXThisExpr 0x555681232c78 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55568122f4f8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x555681233220 <col:37, line:136:5>
|   `-IfStmt 0x5556812331f8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x555681232d88 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x555681232d70 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x555681232d50 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x555681232d20 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x555681081f28
|     |       `-MemberExpr 0x555681232cf0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x5556812314a8
|     |         `-CXXThisExpr 0x555681232ce0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x555681233168 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x555681233150 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x555681233120 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x555681233108 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x5556812330d0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x5556812330b8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x555681233098 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5556810b0700 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x555681233038 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x555681233020 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x555681232f48 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x555681232f30 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x555681232f10 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5556810b03c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x555681232eb0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x555681232db0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5556812314a8
|     |         |     |   `-CXXThisExpr 0x555681232da0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x555681232ef8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x555681232ee0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x555681232e90 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x555681232e78 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x555681232e18 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5556810a3a20 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x555681233080 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x555681233068 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x555681233000 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x555681232fe8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x555681232fb8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x555680efef70 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x5556812331e8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x5556812331b8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x555681233188 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5556812314a8
|           `-CXXThisExpr 0x555681233178 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55568122f5b8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x555681233308 <col:35, line:141:5>
|   `-ReturnStmt 0x5556812332f8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x5556812332c0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x555681233290 <col:9, col:17> '<bound member function type>' ->router 0x5556811025b0
|         `-ImplicitCastExpr 0x5556812332e0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x555681233278 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x555681233248 <col:9> 'Element *const' lvalue ->_owner 0x5556812317e0
|               `-CXXThisExpr 0x555681233238 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55568122f678 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x555681233388 <col:37, line:146:5>
|   `-ReturnStmt 0x555681233378 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x555681233360 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x555681233330 <col:9> 'Element *const' lvalue ->_owner 0x5556812317e0
|         `-CXXThisExpr 0x555681233320 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55568122f738 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x555681233408 <col:41, line:151:5>
|   `-ReturnStmt 0x5556812333f8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x5556812333e0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x5556812333b0 <col:9> 'RouterThread *const' lvalue ->_thread 0x555681231840
|         `-CXXThisExpr 0x5556812333a0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55568122f800 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55568122f9c0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55568122f8b0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55568122f928 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555681232128 <col:50> 'bool' false
|-CXXMethodDecl 0x55568122fb48 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55568122fa80 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55568122fc90 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55568122fc00 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55568122fdd8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55568122fd48 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55568122ff20 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55568122fe90 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x555681230068 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55568122ffd8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x555681230130 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x555681233570 <col:32, line:223:5>
|   `-ExprWithCleanups 0x555681233558 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x555681233500 <col:2, col:47> 'void'
|       |-MemberExpr 0x555681233430 <col:2> '<bound member function type>' ->schedule_at_steady 0x55568122fc90
|       | `-CXXThisExpr 0x555681233420 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555681233540 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555681233528 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5556812334e0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x5556812334c8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x555681233498 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x555680efef70 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x555681230270 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x5556812301e0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x5556812303b8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x555681230328 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5556812336f8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x5556812336e0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x555681233688 <col:2, col:40> 'void'
|       |-MemberExpr 0x555681233598 <col:2> '<bound member function type>' ->schedule_after 0x555681230270
|       | `-CXXThisExpr 0x555681233588 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5556812336c8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5556812336b0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x555681233648 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x555681233618 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x5556812335d8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681230328 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x555681233630 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5556812335f8 <col:38> 'int' 0
|-CXXMethodDecl 0x555681230500 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x555681230470 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x555681233968 <col:58, line:249:5>
|   `-ExprWithCleanups 0x555681233950 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x5556812338f8 <col:2, col:49> 'void'
|       |-MemberExpr 0x555681233720 <col:2> '<bound member function type>' ->schedule_after 0x555681230270
|       | `-CXXThisExpr 0x555681233710 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555681233938 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555681233920 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5556812338a0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x555681233888 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5556812337f8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x555681083d18 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5556812338e0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x5556812338c8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5556812337d8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681230470 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555681230648 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x5556812305b8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x555681233b48 <col:58, line:261:5>
|   `-ExprWithCleanups 0x555681233b30 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x555681233ad8 <col:2, col:38> 'void'
|       |-MemberExpr 0x555681233990 <col:2> '<bound member function type>' ->schedule_at_steady 0x55568122fc90
|       | `-CXXThisExpr 0x555681233980 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555681233b18 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555681233b00 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x555681233aa0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x555681233a88 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x555681233a68 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5556810b03c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x555681233a38 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x555681233a20 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5556812339d0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5556812314a8
|             |     `-CXXThisExpr 0x5556812339c0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x555681233a00 <col:33> 'const Timestamp' lvalue ParmVar 0x5556812305b8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x555681230790 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x555681230700 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x555681233e20 <col:58, line:270:5>
|   `-ExprWithCleanups 0x555681233e08 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x555681233db0 <col:2, col:79> 'void'
|       |-MemberExpr 0x555681233b70 <col:2> '<bound member function type>' ->schedule_at_steady 0x55568122fc90
|       | `-CXXThisExpr 0x555681233b60 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555681233df0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555681233dd8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x555681233d70 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x555681233ca8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x555681233c90 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x555681233c20 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x555681233bf0 <col:31, col:41> '<bound member function type>' .sec 0x555680f00a68
|             | |     `-ImplicitCastExpr 0x555681233c40 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x555681233bc0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x5556812314a8
|             | |         `-CXXThisExpr 0x555681233bb0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x555681233c78 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x555681233c58 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681230700 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x555681233d38 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x555681233d08 <col:60, col:70> '<bound member function type>' .subsec 0x555680f01160
|                 `-ImplicitCastExpr 0x555681233d58 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x555681233cd8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x5556812314a8
|                     `-CXXThisExpr 0x555681233cc8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x5556812308d8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x555681230848 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x555681234158 <col:60, line:279:5>
|   `-ExprWithCleanups 0x555681234140 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x5556812340e8 <col:2, col:65> 'void'
|       |-MemberExpr 0x555681233e48 <col:2> '<bound member function type>' ->schedule_at_steady 0x55568122fc90
|       | `-CXXThisExpr 0x555681233e38 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555681234128 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555681234110 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5556812340b0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x555681234098 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x555681234078 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5556810b03c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x555681234018 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x555681234000 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x555681233e88 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5556812314a8
|             |     `-CXXThisExpr 0x555681233e78 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x555681234060 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x555681234048 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x555681233fa8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x555681233f90 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x555681233f60 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x555681083d18 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x555681233fe8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x555681233fd0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x555681233f40 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x555681230848 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5556812309a0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x555681230a60 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x555681234620 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x5556812341b0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x555681234180 <col:2> '<bound member function type>' ->unschedule 0x5556812309a0
|   |   `-CXXThisExpr 0x555681234170 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x555681234608 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x5556812345d0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x5556812345b8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x555681234268 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x555680d98008 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x5556812341e0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x5556812314a8
|       | `-CXXThisExpr 0x5556812341d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555681234250 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x555681234220 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x555681230b20 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x555681234978 <col:42, line:310:5>
|   |-IfStmt 0x5556812347c0 <line:306:2, line:307:23>
|   | |-CallExpr 0x5556812346f0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x5556812346d8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x555681234678 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x5556810a1e90 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x5556812347b0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x555681234798 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x555681234768 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x555681234750 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x555681234720 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x555681234968 <line:309:2, col:33>
|     `-ExprWithCleanups 0x555681234950 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x555681234920 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x555681234908 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x5556812348c8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5556812348b0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x555681234880 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x555681084030 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5556812348f0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x555681234860 <col:30> 'int' 500
|-CXXMethodDecl 0x555681230c60 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x555681230bd0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555681230d08 <col:69> "" ""
|-CXXMethodDecl 0x555681230e18 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x555681230d88 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555681230ec0 <col:70> "" ""
|-CXXMethodDecl 0x555681230fd0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x555681230f40 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555681231078 <col:71> "" ""
|-CXXMethodDecl 0x555681231188 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5556812310f8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555681231230 <col:72> "" ""
|-EnumDecl 0x5556812312a0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x5556812313a0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x5556812313f0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555681231380 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x555681231360 <col:25> 'int' 1
|-AccessSpecDecl 0x555681231408 <line:339:3, col:10> col:3 private
|-FieldDecl 0x555681231448 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x5556812314a8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x5556812314f8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x555681231628 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x555681232138 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x555681231700 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x555681231780 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5556812317e0 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x555681231840 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x555681231998 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x5556812318a0 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x555681231b68 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x555681231a50 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x555681231ad0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x555681231d40 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x555681231c28 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x555681231ca8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x555681231f18 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x555681231e00 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x555681231e80 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x5556812320e8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5556812394c0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x5556812f2318 <line:167:18>
|-CXXRecordDecl 0x5556812f23d8 prev 0x5556812394c0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5556812f24e8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
