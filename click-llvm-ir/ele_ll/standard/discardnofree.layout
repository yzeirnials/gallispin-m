
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e6097c8 prev 0x56121e600f68 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e6098c0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56121e609950 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56121e6099c8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56121e609a88 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56121e609b50 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56121e609cc8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56121e609c00 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56121e609d70 <col:24>
| `-OptimizeNoneAttr 0x56121e609dc8 <col:34>
|-CXXMethodDecl 0x56121e609e10 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56121e60a0c8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56121e609ec0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56121e609f38 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56121e609fb8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56121e60a180 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56121e60a1b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56121e60a220 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56121e60a2a8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56121e60a5c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56121e60a360 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56121e60a3d8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56121e60a450 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56121e60a4d0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56121e60a6e0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56121e612058 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56121e612058
| `-ParmVarDecl 0x56121e612168 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56121e612208 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56121e612208
| `-ParmVarDecl 0x56121e612318 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56121e6b7d60 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e5fc7e0 prev 0x56121e5fc560 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56121e5fc8d8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56121e5fc968 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56121e5fc9c8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x56121e5fcab8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x56121e5fcbb8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56121e5fcd88 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56121e5fcc38 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56121e5fccb0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56121e5fcf18 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56121e5fce50 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56121e5fcfc0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56121e5fd0f8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56121e5fd030 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56121e5fd298 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56121e5fd1d8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56121e5fd438 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56121e5fd378 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56121e5fd4e0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56121e5fd5e0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56121e5fd6c0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5fd5c0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56121e5fd5a0 <col:26> 'int' 1
| `-EnumConstantDecl 0x56121e5fd670 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56121e5fd6d8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5fd650 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56121e5fd630 <col:44> 'int' 2
|-CXXMethodDecl 0x56121e5fd820 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56121e5fd708 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56121e5fd788 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56121e5fd978 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56121e5fd8e8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56121e5fdbb8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56121e5fda38 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56121e5fdab0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56121e5fdc68 <col:20>
| `-OptimizeNoneAttr 0x56121e5fdcc0 <col:30>
|-CXXMethodDecl 0x56121e5fddc8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56121e5fdd00 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56121e5fde70 <col:20>
| `-OptimizeNoneAttr 0x56121e5fdec8 <col:30>
|-CXXMethodDecl 0x56121e5fdf18 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56121e5fdfe0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56121e5fe0f8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56121e5fe180 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56121e5fe208 <line:57:5, col:33> col:23 used PORTS_1_0 'const char []' static
|-VarDecl 0x56121e5fe290 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x56121e5fe318 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56121e5fe3a8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56121e5fe468 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56121e5fe4f0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x56121e5fe578 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56121e5fe600 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56121e5fe688 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56121e5fe710 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56121e5fe7a0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56121e5fe860 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56121e5fe8f0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56121e5fea40 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56121e5fe9a8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56121e5febd0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56121e5feb00 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56121e5fee80 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56121e5fec88 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56121e5fed08 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56121e5fed88 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56121e5fef38 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56121e5ff040 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56121e5ff2d0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ff020 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56121e5ff000 <col:33> 'int' 0
| |-EnumConstantDecl 0x56121e5ff0d0 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56121e5ff2e8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ff0b0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56121e5ff090 <col:32> 'int' 20
| |-EnumConstantDecl 0x56121e5ff160 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56121e5ff300 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ff140 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56121e5ff120 <col:38> 'int' 90
| |-EnumConstantDecl 0x56121e5ff1f0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56121e5ff318 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ff1d0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56121e5ff1b0 <col:35> 'int' 100
| `-EnumConstantDecl 0x56121e5ff280 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56121e5ff330 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5ff260 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56121e5ff240 <col:32> 'int' 2000
|-CXXMethodDecl 0x56121e5ff370 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56121e5ff7b0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56121e5ff620 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56121e5ff698 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56121e5ff880 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56121e5ffa00 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56121e5ff930 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56121e5ffc08 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56121e5ffab8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56121e5ffb30 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56121e5ffd08 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56121e5ffda8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56121e5ffe70 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56121e5fff00 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56121e600130 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ffee0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56121e5ffec0 <col:36> 'int' EnumConstant 0x56121e5ffe70 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56121e5fff50 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56121e5fffa0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56121e5ffff0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56121e600040 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56121e600090 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56121e6000e0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56121e600218 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56121e600158 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56121e6002e0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56121e6003a0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56121e600460 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56121e600520 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56121e600638 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56121e600700 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x56121e600880 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56121e6007b0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56121e6009a8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56121e600ba8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56121e600a58 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56121e600ad8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56121e60e4f8 <col:54, line:127:5>
|   |-ParenExpr 0x56121e60e3a8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56121e60e378 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56121e60e068 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56121e60e040 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56121e60e028 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56121e60e010 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56121e60dfe0 <col:31> 'Router *' lvalue ->_router 0x56121e60bec0
|   |   |         `-CXXThisExpr 0x56121e60dfd0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56121e60e0c8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e60e0a8 <col:48> 'int' 0
|   |   `-CallExpr 0x56121e60e2d8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56121e60e2c0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e60e2a0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e60e318 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e60e138 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56121e60e330 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e60e158 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56121e60e348 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e60e190 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56121e60e360 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e60e288 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e60e270 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e60e228 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56121e60e440 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56121e60e3d8 <col:9> 'Router *' lvalue ->_router 0x56121e60bec0
|   | | `-CXXThisExpr 0x56121e60e3c8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56121e60e428 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56121e60e408 <col:19> 'Router *' lvalue ParmVar 0x56121e600a58 'r' 'Router *'
|   `-BinaryOperator 0x56121e60e4d8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56121e60e470 <col:9> 'int' lvalue ->_eindex 0x56121e60bf28
|     | `-CXXThisExpr 0x56121e60e460 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56121e60e4c0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56121e60e4a0 <col:19> 'int' lvalue ParmVar 0x56121e600ad8 'eindex' 'int'
|-CXXMethodDecl 0x56121e600d30 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56121e600c68 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56121e600e00 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56121e600ec8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56121e600f68 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56121e6011b8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56121e601030 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56121e6010b0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56121e601268 <col:20>
| `-OptimizeNoneAttr 0x56121e6012c0 <col:30>
|-CXXMethodDecl 0x56121e6013c8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56121e601300 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56121e601470 <col:20>
| `-OptimizeNoneAttr 0x56121e6014c8 <col:30>
|-CXXMethodDecl 0x56121e601598 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56121e601508 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56121e601640 <col:20>
| `-OptimizeNoneAttr 0x56121e601698 <col:30>
|-CXXMethodDecl 0x56121e601828 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56121e6016d0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56121e601750 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56121e6019b8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56121e6018f0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56121e601b08 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56121e601a78 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56121e601c58 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56121e601bc8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56121e601da8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56121e601d18 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56121e602068 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56121e601e60 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56121e601ee0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56121e601f88 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56121e602140 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56121e602200 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56121e6024d0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56121e602380 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56121e6023f8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56121e6025f8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56121e6027d0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56121e6026b0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56121e602730 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56121e6029b8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56121e602898 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56121e602918 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56121e602d28 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56121e602a78 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56121e602af0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56121e602b70 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56121e60dae0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56121e60dac0 <col:106> 'int' 0
| `-ParmVarDecl 0x56121e602be8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56121e60db18 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56121e60daf8 <col:126> 'int' 0
|-CXXMethodDecl 0x56121e6030c8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56121e602df8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56121e602e90 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56121e602f10 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56121e602f88 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56121e60db50 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56121e60db30 <col:114> 'int' 0
|-CXXMethodDecl 0x56121e603458 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56121e6031a0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56121e603218 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56121e603298 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56121e60db68 <col:96> 'int' 0
| `-ParmVarDecl 0x56121e603310 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56121e60dba8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56121e60db88 <col:116> 'int' 0
|-CXXMethodDecl 0x56121e6037d8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56121e603528 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56121e6035a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56121e603620 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56121e60dbe0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56121e60dbc0 <col:109> 'int' 0
| `-ParmVarDecl 0x56121e603698 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56121e60dc18 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56121e60dbf8 <col:129> 'int' 0
|-CXXMethodDecl 0x56121e603b58 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56121e6038a8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56121e603920 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56121e6039a0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56121e603a18 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56121e60dc50 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56121e60dc30 <col:117> 'int' 0
|-CXXMethodDecl 0x56121e603ee8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56121e603c30 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e603ca8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56121e603d28 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56121e60dc68 <col:99> 'int' 0
| `-ParmVarDecl 0x56121e603da0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56121e60dca8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56121e60dc88 <col:119> 'int' 0
|-CXXMethodDecl 0x56121e604308 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56121e603fb8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56121e604038 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56121e6040b0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56121e604130 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56121e60dce0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56121e60dcc0 <col:108> 'int' 0
| `-ParmVarDecl 0x56121e6041b0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56121e60dd18 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56121e60dcf8 <col:141> 'int' 0
|-CXXMethodDecl 0x56121e604728 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56121e6043e0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56121e604460 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56121e6044d8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56121e604558 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56121e6045d8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56121e60dd30 <col:121> 'int' 0
|-CXXMethodDecl 0x56121e604b58 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56121e604808 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56121e604888 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56121e604900 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56121e604980 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56121e60dd50 <col:98> 'int' 0
| `-ParmVarDecl 0x56121e604a00 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56121e60dd70 <col:123> 'int' 0
|-CXXMethodDecl 0x56121e604e20 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56121e604c30 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56121e604cb0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56121e604d30 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56121e60dd90 <col:80> 'int' 0
|-EnumDecl 0x56121e604ed8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56121e604fe0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56121e605270 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e604fc0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56121e604fa0 <col:42> 'int' 1
| |-EnumConstantDecl 0x56121e605070 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56121e605288 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e605050 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56121e605030 <col:40> 'int' 2
| |-EnumConstantDecl 0x56121e605100 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56121e6052a0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e6050e0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56121e6050c0 <col:44> 'int' 4
| |-EnumConstantDecl 0x56121e605190 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56121e6052b8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e605170 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56121e605150 <col:36> 'int' 7
| `-EnumConstantDecl 0x56121e605220 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56121e6052d0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e605200 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56121e6051e0 <col:34> 'int' 6
|-CXXMethodDecl 0x56121e605588 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56121e6052f8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56121e605398 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56121e605418 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56121e605490 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56121e60de48 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56121e60de30 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56121e60de18 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56121e60ddf8 <col:98, col:105> 'String' (CXXTemporary 0x56121e60ddf8)
|           `-CXXTemporaryObjectExpr 0x56121e60ddc0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56121e605828 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56121e605658 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56121e6056d0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56121e605748 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56121e60def8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56121e60dee0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56121e60dec8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56121e60dea8 <col:94, col:101> 'String' (CXXTemporary 0x56121e60dea8)
| |         `-CXXTemporaryObjectExpr 0x56121e60de70 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56121e60e6e0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56121e60e658 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56121e60e628 <col:9> '<bound member function type>' ->add_task_handlers 0x56121e605588
|     | `-CXXThisExpr 0x56121e60e618 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56121e60e698 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56121e60e598 <col:27> 'Task *' lvalue ParmVar 0x56121e605658 'task' 'Task *'
|     |-ImplicitCastExpr 0x56121e60e6b0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56121e60e5b8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56121e6056d0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56121e60e6c8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56121e60e5d8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56121e605220 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56121e60e5f8 <col:62> 'const String' lvalue ParmVar 0x56121e605748 'prefix' 'const String &'
|-CXXMethodDecl 0x56121e605a38 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56121e6058f0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56121e605968 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56121e60dfa8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56121e60df90 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56121e60df78 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56121e60df58 <col:70, col:77> 'String' (CXXTemporary 0x56121e60df58)
| |         `-CXXTemporaryObjectExpr 0x56121e60df20 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56121e60e8b8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56121e60e830 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56121e60e800 <col:9> '<bound member function type>' ->add_task_handlers 0x56121e605588
|     | `-CXXThisExpr 0x56121e60e7f0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56121e60e870 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56121e60e770 <col:27> 'Task *' lvalue ParmVar 0x56121e6058f0 'task' 'Task *'
|     |-ImplicitCastExpr 0x56121e60e888 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56121e60e790 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56121e60e8a0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56121e60e7b0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56121e605220 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56121e60e7d0 <col:57> 'const String' lvalue ParmVar 0x56121e605968 'prefix' 'const String &'
|-CXXMethodDecl 0x56121e605d18 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56121e605b00 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e605b80 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e605bf8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56121e605fc8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56121e605de8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e605e68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e605ee8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56121e6062b8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56121e606098 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e606118 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e606190 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56121e606568 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56121e606388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e606408 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e606488 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56121e606818 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56121e606638 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e6066b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e606738 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56121e606ac8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56121e6068e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e606968 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e6069e0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56121e606d78 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56121e606b98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e606c18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e606c98 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56121e607088 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56121e606ea0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e606f20 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e606fa0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56121e607368 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56121e607158 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e6071d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e607280 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56121e607648 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56121e607438 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e6074b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e607560 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56121e6078b0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56121e607718 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56121e607798 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56121e607810 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56121e607b58 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56121e607980 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56121e607a00 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56121e607a78 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56121e607e08 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56121e607c28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e607ca8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e607d28 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56121e6080b8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56121e607ed8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e607f58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e607fd0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56121e608368 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56121e608188 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e608208 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e608280 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56121e608638 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56121e608438 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e6084b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56121e608558 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56121e608968 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56121e608708 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56121e608788 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56121e608800 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56121e608878 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56121e60dfc0 <col:93> 'bool' false
|-CXXMethodDecl 0x56121e608b50 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56121e608a38 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56121e608ab8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56121e608d28 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56121e608c10 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56121e608c90 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56121e609008 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56121e608de8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56121e608e60 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56121e608ee0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56121e608f58 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56121e6092f8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56121e6090d8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56121e609150 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56121e6091d0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56121e609248 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56121e609530 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56121e6093d0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56121e609450 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56121e609718 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56121e6095f8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56121e609678 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56121e6097c8 prev 0x56121e600f68 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56121e6098c0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56121e609950 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56121e6099c8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56121e609a88 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56121e609b50 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56121e609cc8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56121e609c00 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56121e609d70 <col:24>
| | `-OptimizeNoneAttr 0x56121e609dc8 <col:34>
| |-CXXMethodDecl 0x56121e609e10 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56121e60a0c8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56121e609ec0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56121e609f38 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56121e609fb8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56121e60a180 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56121e60a1b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56121e60a220 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56121e60a2a8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56121e60a5c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56121e60a360 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56121e60a3d8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56121e60a450 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56121e60a4d0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56121e60a6e0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56121e612058 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56121e612058
| | `-ParmVarDecl 0x56121e612168 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56121e612208 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56121e612208
| | `-ParmVarDecl 0x56121e612318 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56121e6b7d60 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56121e60a758 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56121e60a7f8 <col:38> "" ""
|-CXXMethodDecl 0x56121e60a888 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56121e60a928 <col:44> "" ""
|-AccessSpecDecl 0x56121e60a998 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56121e60a9c0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56121e60aac0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56121e60ab10 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e60aaa0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56121e60aa80 <col:27> 'int' 4
|-FieldDecl 0x56121e60abc8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56121e60ad78 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56121e60ae30 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56121e60bec0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56121e60bf28 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56121e60c078 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56121e60bfb8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56121e60c228 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56121e60c138 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56121e60c408 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56121e60c2e8 <col:20> col:23 'int'
| `-ParmVarDecl 0x56121e60c368 <col:25> col:28 'int'
|-CXXMethodDecl 0x56121e60c6b0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56121e60c4d0 <col:23> col:26 'int'
| |-ParmVarDecl 0x56121e60c550 <col:28> col:31 'int'
| `-ParmVarDecl 0x56121e60c5c8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56121e60c768 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56121e60c830 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56121e60c880 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56121e60c8d0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56121e60cab0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56121e60c960 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56121e60c9d8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56121e60cd58 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56121e60cb78 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56121e60cbf8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56121e60cc70 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56121e60cf78 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56121e60ce28 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56121e60cea8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56121e60d2b0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56121e60d038 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56121e60d0b8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56121e60d130 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56121e60d1b0 <col:57> col:60 'int'
|-CXXMethodDecl 0x56121e60d498 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56121e60d380 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56121e60d400 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56121e60d5e8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56121e60d558 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56121e60d968 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56121e60d6a8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56121e60d728 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56121e60d7a0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56121e60d820 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56121e60da80 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class DiscardNoFree
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Task _task
       112 |     struct TaskLink (base)
       112 |       struct TaskLink * _prev
       120 |       struct TaskLink * _next
       128 |       unsigned int _pass
       132 |     unsigned int _stride
       136 |     int _tickets
       140 |     union Task::Status _status
       140 |       struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
       140 |         int16_t home_thread_id
       142 |         uint8_t is_scheduled
       143 |         uint8_t is_strong_unscheduled
       140 |       uint32_t status
       144 |     TaskCallback _hook
       152 |     void * _thunk
       160 |     class RouterThread * _thread
       168 |     class Element * _owner
       176 |     union Task::Pending _pending_nextptr
       176 |       class Task * t
       176 |       uintptr_t x
           | [sizeof=184, dsize=184, align=8,
           |  nvsize=184, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e61a100 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e61a218 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x56121e61a2e8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x56121e61a348 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x56121e61a3b0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x56121e61a438 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x56121e61a6a0 <col:16, line:46:5>
|   |-BinaryOperator 0x56121e61a5e8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x56121e61a508 <col:9> 'TaskLink *' lvalue ->_prev 0x56121e61a2e8
|   | | `-CXXThisExpr 0x56121e61a4f8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x56121e61a5d0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x56121e61a5b0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x56121e61a548 <col:17> 'TaskLink *' lvalue ->_next 0x56121e61a348
|   |     | `-CXXThisExpr 0x56121e61a538 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x56121e61a598 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x56121e61a578 <col:25> 'int' 0
|   `-BinaryOperator 0x56121e61a680 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x56121e61a618 <col:9> 'unsigned int' lvalue ->_pass 0x56121e61a3b0
|     | `-CXXThisExpr 0x56121e61a608 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x56121e61a668 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56121e61a648 <col:17> 'int' 0
|-CXXConstructorDecl 0x56121e6a6bd8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x56121e6a6bd8
| `-ParmVarDecl 0x56121e6a6ce8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x56121e6a6d88 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x56121e6a6d88
| `-ParmVarDecl 0x56121e6a6e98 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x56121e6a7088 <col:8> col:8 implicit ~TaskLink 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56121e6a7888 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x56121e6a7888
| `-ParmVarDecl 0x56121e6a7998 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x56121e6a7a08 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x56121e6a7a08
  `-ParmVarDecl 0x56121e6a7b18 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e57d7c8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56121e57d8f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x56121e57d958 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x56121e57d9b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x56121e6add98 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x56121e6ade70 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56121e6ae128 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56121e6ae128
| `-ParmVarDecl 0x56121e6ae238 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x56121e6ae2d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56121e6ae2d8
  `-ParmVarDecl 0x56121e6ae3e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e57d618 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e57d738 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x56121e57d7c8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56121e57d8f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x56121e57d958 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x56121e57d9b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x56121e6add98 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x56121e6ade70 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56121e6ae128 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56121e6ae128
| | `-ParmVarDecl 0x56121e6ae238 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x56121e6ae2d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56121e6ae2d8
|   `-ParmVarDecl 0x56121e6ae3e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x56121e57da78 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x56121e57dad8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x56121e57da78 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56121e57d8f8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x56121e57db30 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x56121e57da78 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56121e57d958 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x56121e57db88 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x56121e57da78 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56121e57d9b8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x56121e57dbe0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56121e6adca8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56121e6ae608 <col:11>
|-CXXConstructorDecl 0x56121e6adf78 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56121e6adf78
| `-ParmVarDecl 0x56121e6ae088 <col:11> col:11 'const Task::Status &'
|-CXXConstructorDecl 0x56121e6ae488 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56121e6ae488
| `-ParmVarDecl 0x56121e6ae598 <col:11> col:11 'Task::Status &&'
`-CXXDestructorDecl 0x56121e6b7c80 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e595110 prev 0x56121e58bf50 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e595208 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56121e5952a8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x56121e59c070 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56121e59c458 <col:11>
|-CXXConstructorDecl 0x56121e59c150 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e59c238 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56121e59cba0 <col:11>
|-CXXConstructorDecl 0x56121e59c2d8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e59c3e8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x56121e59e3f8 <col:11>
|-CXXDestructorDecl 0x56121e59d708 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56121e2a42b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e2a43c8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56121e2a4c90 <col:11>
|   `-ReturnStmt 0x56121e2a4c80 <col:11>
|     `-UnaryOperator 0x56121e2a4c68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56121e2a4c58 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x56121e2a4438 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56121e2a4548 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x56121e636b30 <col:11>
    `-ReturnStmt 0x56121e636b20 <col:11>
      `-UnaryOperator 0x56121e636b08 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56121e636af8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e58b108 prev 0x56121e58ae18 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e58b200 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x56121e58b290 <col:19, col:25> col:19 public
|-TypedefDecl 0x56121e58b2c8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x56121e1f0490 'int32_t' sugar
|   |-Typedef 0x56121e103268 'int32_t'
|   `-TypedefType 0x56121e0dc3b0 '__int32_t' sugar
|     |-Typedef 0x56121e0dbfc8 '__int32_t'
|     `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e58b330 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x56121e1f0650 'int64_t' sugar
|   |-Typedef 0x56121e1032d0 'int64_t'
|   `-TypedefType 0x56121e0dc4d0 '__int64_t' sugar
|     |-Typedef 0x56121e0dc0a8 '__int64_t'
|     `-BuiltinType 0x56121e09a390 'long'
|-EnumDecl 0x56121e58b388 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x56121e58b500 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x56121e58b4e0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x56121e58b4b8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x56121e58b4a0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x56121e58b470 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x56121e58b5f8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x56121e58b5d8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x56121e58b5b0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x56121e58b598 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x56121e58b570 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x56121e58b550 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x56121e58b648 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x56121e58b750 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56121e58bca0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e58b730 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x56121e58b710 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x56121e58b7e0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56121e58bcb8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e58b7c0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56121e58b7a0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x56121e58b870 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56121e58bcd0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e58b850 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56121e58b830 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56121e58b900 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56121e58bce8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e58b8e0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56121e58b8c0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x56121e58b990 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56121e58bd00 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e58b970 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56121e58b950 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56121e58ba20 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56121e58bd18 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e58ba00 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x56121e58b9e0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x56121e58bab0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56121e58bd30 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e58ba90 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x56121e58ba70 <col:26> 'int' EnumConstant 0x56121e58b750 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x56121e58bb80 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56121e58bd48 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e58bb60 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x56121e58bb40 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x56121e58bb00 <col:27> 'int' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x56121e58bb20 <col:44> 'int' EnumConstant 0x56121e58ba20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x56121e58bc50 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x56121e58bd60 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e58bc30 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x56121e58bc10 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x56121e58bbd0 <col:27> 'int' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x56121e58bbf0 <col:44> 'int' EnumConstant 0x56121e58b900 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x56121e58bd78 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x56121e58be80 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x56121e58bed0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e58be60 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x56121e58be40 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x56121e58bef8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x56121e1f00c0 'uninitialized_type'
|   `-CXXRecord 0x56121e1f0028 'uninitialized_type'
|-CXXRecordDecl 0x56121e58bf50 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x56121e58c060 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59c468 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56121e59c588 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x56121e59c540 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x56121e59c4d0 <col:9> '<bound member function type>' ->assign 0x56121e590ca8
|     | `-CXXThisExpr 0x56121e59c4c0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56121e59c500 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56121e59c570 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56121e59c520 <col:19> 'int' 0
|-CXXConstructorDecl 0x56121e58c2a8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x56121e58c120 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x56121e58c198 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56121e597da0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56121e597d80 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59c5a0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56121e59c6f0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x56121e59c678 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x56121e59c608 <col:9> '<bound member function type>' ->assign 0x56121e590ca8
|     | `-CXXThisExpr 0x56121e59c5f8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56121e59c6c0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56121e59c6a8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56121e59c638 <col:16> 'long' lvalue ParmVar 0x56121e58c120 'sec' 'long'
|     `-ImplicitCastExpr 0x56121e59c6d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56121e59c658 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e58c198 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56121e58c508 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56121e58c378 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x56121e58c3f0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56121e597dd8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56121e597db8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59c708 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56121e59c840 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x56121e59c7e0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x56121e59c770 <col:9> '<bound member function type>' ->assign 0x56121e590ca8
|     | `-CXXThisExpr 0x56121e59c760 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56121e59c810 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56121e59c7a0 <col:16> 'int' lvalue ParmVar 0x56121e58c378 'sec' 'int'
|     `-ImplicitCastExpr 0x56121e59c828 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56121e59c7c0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e58c3f0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56121e58c768 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x56121e58c5d8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x56121e58c650 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56121e597e10 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56121e597df0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59c858 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56121e59c9a8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x56121e59c930 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x56121e59c8c0 <col:9> '<bound member function type>' ->assign 0x56121e590ca8
|     | `-CXXThisExpr 0x56121e59c8b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56121e59c978 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56121e59c960 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56121e59c8f0 <col:16> 'unsigned long' lvalue ParmVar 0x56121e58c5d8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x56121e59c990 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56121e59c910 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e58c650 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56121e58d900 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x56121e58c838 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x56121e58c8b0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56121e597e48 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56121e597e28 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59c9c0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56121e59cb10 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x56121e59ca98 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x56121e59ca28 <col:9> '<bound member function type>' ->assign 0x56121e590ca8
|     | `-CXXThisExpr 0x56121e59ca18 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56121e59cae0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56121e59cac8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56121e59ca58 <col:16> 'unsigned int' lvalue ParmVar 0x56121e58c838 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x56121e59caf8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56121e59ca78 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e58c8b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56121e58da60 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x56121e58d9d0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x56121e58dbf8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x56121e58db38 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x56121e58de28 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x56121e58dd30 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x56121e58dfd8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x56121e58df18 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59cbb0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x56121e59cb28 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x56121e58df18 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56121e59cc10 <col:19, line:214:5>
|-CXXConstructorDecl 0x56121e58e1a8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x56121e58e0e8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59cc20 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56121e59ccd0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x56121e59cca8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x56121e59cc78 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x56121e58e0e8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x56121e58e398 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x56121e58e310 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x56121e58aeb0 'Timestamp'
|   | `-CXXRecord 0x56121e58b108 'Timestamp'
|   `-ParenType 0x56121e58e2b0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x56121e58e280 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x56121e58b450 'Timestamp::seconds_type' sugar
|         |-Typedef 0x56121e58b2c8 'seconds_type'
|         `-TypedefType 0x56121e1f0490 'int32_t' sugar
|           |-Typedef 0x56121e103268 'int32_t'
|           `-TypedefType 0x56121e0dc3b0 '__int32_t' sugar
|             |-Typedef 0x56121e0dbfc8 '__int32_t'
|             `-BuiltinType 0x56121e09a370 'int'
|-CXXConversionDecl 0x56121e58e4d8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56121e58e5a8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x56121e59cdd8 <col:37, line:231:5>
|   `-ReturnStmt 0x56121e59cdc8 <line:227:9, col:23>
|     `-BinaryOperator 0x56121e59cda8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x56121e59cd78 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56121e59cd28 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56121e5952a8
|       |   `-MemberExpr 0x56121e59ccf8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56121e596258
|       |     `-CXXThisExpr 0x56121e59cce8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56121e59cd90 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x56121e59cd58 <col:23> 'int' 0
|-CXXMethodDecl 0x56121e58e668 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x56121e58e728 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e58e7e8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e58e8a8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e58e968 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e58ead8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x56121e58ea18 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x56121e58ec20 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x56121e58eb90 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e58ece8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56121e58ed88 <col:54> "" ""
|-CXXMethodDecl 0x56121e58ee18 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56121e58eeb8 <col:54> "" ""
|-CXXMethodDecl 0x56121e58ef48 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56121e58efe8 <col:54> "" ""
|-CXXMethodDecl 0x56121e58f0e8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x56121e58f1b8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x56121e58f2e8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x56121e58f3e0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x56121e58f518 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56121e59cff0 <col:39, line:271:5>
|   `-ReturnStmt 0x56121e59cfe0 <line:267:9, col:61>
|     `-CallExpr 0x56121e59cf80 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56121e59cf68 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56121e59cdf0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56121e596588 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56121e59cfb0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56121e59ce50 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56121e5952a8
|       |   `-MemberExpr 0x56121e59ce20 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56121e596258
|       |     `-CXXThisExpr 0x56121e59ce10 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56121e59cfc8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56121e59cef0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56121e59cec0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56121e59ce80 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56121e59ced8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56121e59cea0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58ba20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56121e58f5d8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56121e59d1b0 <col:39, line:279:5>
|   `-ReturnStmt 0x56121e59d1a0 <line:275:9, col:61>
|     `-CallExpr 0x56121e59d140 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56121e59d128 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56121e59d008 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56121e596588 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56121e59d170 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56121e59d068 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56121e5952a8
|       |   `-MemberExpr 0x56121e59d038 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56121e596258
|       |     `-CXXThisExpr 0x56121e59d028 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56121e59d188 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56121e59d108 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56121e59d0d8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56121e59d098 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56121e59d0f0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56121e59d0b8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58b900 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56121e58f698 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56121e59d348 <col:39, line:287:5>
|   `-ReturnStmt 0x56121e59d338 <line:283:9, col:53>
|     `-BinaryOperator 0x56121e59d318 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x56121e59d2e8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56121e59d208 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56121e5952a8
|       |   `-MemberExpr 0x56121e59d1d8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56121e596258
|       |     `-CXXThisExpr 0x56121e59d1c8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56121e59d300 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x56121e59d2c8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56121e59d2a8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56121e59d278 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56121e59d238 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58b750 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56121e59d290 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56121e59d258 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56121e58f788 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56121e59e5e0 <col:40, line:293:5>
|   |-DeclStmt 0x56121e59d490 <line:291:9, col:48>
|   | `-VarDecl 0x56121e59d370 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56121e59d470 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56121e59d418 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56121e59d3e8 <col:22> '<bound member function type>' ->subsec 0x56121e58e728
|   |     |   `-CXXThisExpr 0x56121e59d3d8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56121e59d458 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56121e59d438 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bb80 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56121e59e5d0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x56121e59e5b8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56121e59e588 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56121e59e570 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56121e59e550 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56121e59e520 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56121e59e2b8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56121e59e2a0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56121e59d4a8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56121e59d370 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56121e59e4c0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56121e59e4a8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56121e59e478 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56121e59e2d0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56121e59e240 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56121e59e228 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56121e59e1d8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56121e58b058 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56121e59e178 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56121e59d4d8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56121e59d4c8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56121e59e1c0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56121e59e1a8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56121e59d998 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56121e59d500 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56121e59d590 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56121e59d560 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56121e59d520 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bb80 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56121e59d578 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56121e59d540 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56121e59d370 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56121e59e4f0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56121e59e288 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56121e59e278 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56121e58f848 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56121e59eb38 <col:40, line:302:5>
|   |-DeclStmt 0x56121e59e730 <line:297:9, col:48>
|   | `-VarDecl 0x56121e59e610 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56121e59e710 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56121e59e6b8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56121e59e688 <col:22> '<bound member function type>' ->subsec 0x56121e58e728
|   |     |   `-CXXThisExpr 0x56121e59e678 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56121e59e6f8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56121e59e6d8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bc50 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56121e59eb28 <line:298:9, col:70>
|     `-ExprWithCleanups 0x56121e59eb10 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56121e59eae0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56121e59eac8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56121e59eaa8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56121e59ea78 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56121e59e9a0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56121e59e988 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56121e59e748 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56121e59e610 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56121e59ea18 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56121e59ea00 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56121e59e9d0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56121e59e9b8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56121e59e928 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56121e59e910 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56121e59e8f0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56121e58b058 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56121e59e890 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56121e59e778 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56121e59e768 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56121e59e8d8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56121e59e8c0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56121e59e850 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56121e59e7a0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56121e59e830 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56121e59e800 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56121e59e7c0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bc50 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56121e59e818 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56121e59e7e0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56121e59e610 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56121e59ea48 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56121e59e970 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56121e59e960 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56121e58f908 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56121e59ebc0 <col:40, line:306:5>
|   `-ReturnStmt 0x56121e59ebb0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x56121e59eb80 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x56121e59eb68 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56121e59eb58 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x56121e58faa8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x56121e58f9b8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x56121e58fc78 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x56121e58fb80 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x56121e58fd68 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x56121e58fed8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x56121e58fe18 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x56121e59ed08 <col:56, line:320:5>
|   `-ReturnStmt 0x56121e59ecf8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x56121e59ece0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x56121e59ecb0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56121e59ec98 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56121e59ec58 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56121e59ec28 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56121e59ebe8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56121e58fe18 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x56121e59ec40 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56121e59ec08 <col:31> 'int' 0
|-CXXMethodDecl 0x56121e590118 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56121e58ff90 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e590008 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e59eed8 <col:72, line:326:5>
|   `-ReturnStmt 0x56121e59eec8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x56121e59eeb0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56121e59ee80 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56121e59ee68 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56121e59ee28 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56121e59ee10 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56121e59ed30 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56121e58ff90 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56121e59edd0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56121e59edb8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56121e59ed50 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56121e594a00 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56121e59edf8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56121e59ed70 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e590008 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5902c8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56121e5901d8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56121e59f5a0 <col:56, line:337:5>
|   |-DeclStmt 0x56121e59f1d8 <line:329:9, col:51>
|   | `-VarDecl 0x56121e59ef00 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56121e59f1c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56121e59f190 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56121e59f178 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56121e59f160 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56121e59f130 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56121e59f118 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56121e59f100 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56121e59eff0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56121e59f390 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56121e59f240 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56121e5952a8
|   | | `-MemberExpr 0x56121e59f210 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56121e596258
|   | |   `-DeclRefExpr 0x56121e59f1f0 <col:9> 'Timestamp' lvalue Var 0x56121e59ef00 't' 'Timestamp'
|   | `-BinaryOperator 0x56121e59f370 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56121e59f340 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56121e59f270 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56121e5901d8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56121e59f358 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56121e59f320 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56121e59f300 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56121e59f2d0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56121e59f290 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56121e59f2e8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56121e59f2b0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58ba20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56121e59f588 <line:336:9, col:16>
|     `-CXXConstructExpr 0x56121e59f558 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56121e59f540 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56121e59f520 <col:16> 'Timestamp' lvalue Var 0x56121e59ef00 't' 'Timestamp'
|-CXXMethodDecl 0x56121e590490 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56121e590380 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e5903f8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e59f758 <col:72, line:343:5>
|   `-ReturnStmt 0x56121e59f748 <line:342:9, col:51>
|     `-ExprWithCleanups 0x56121e59f730 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56121e59f700 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56121e59f6e8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56121e59f6a8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56121e59f690 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56121e59f5d8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56121e590380 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56121e59f650 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56121e59f638 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56121e59f5f8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56121e594b48 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56121e59f678 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56121e59f618 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e5903f8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5905e0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56121e590550 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56121e59fba0 <col:56, line:354:5>
|   |-DeclStmt 0x56121e59f948 <line:346:9, col:51>
|   | `-VarDecl 0x56121e59f780 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56121e59f930 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56121e59f900 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56121e59f8e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56121e59f8d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56121e59f8a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56121e59f888 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56121e59f870 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56121e59f840 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56121e59fb00 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56121e59f9b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56121e5952a8
|   | | `-MemberExpr 0x56121e59f980 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56121e596258
|   | |   `-DeclRefExpr 0x56121e59f960 <col:9> 'Timestamp' lvalue Var 0x56121e59f780 't' 'Timestamp'
|   | `-BinaryOperator 0x56121e59fae0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56121e59fab0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56121e59f9e0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56121e590550 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56121e59fac8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56121e59fa90 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56121e59fa70 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56121e59fa40 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56121e59fa00 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56121e59fa58 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56121e59fa20 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58b900 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56121e59fb88 <line:353:9, col:16>
|     `-CXXConstructExpr 0x56121e59fb58 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56121e59fb40 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56121e59fb20 <col:16> 'Timestamp' lvalue Var 0x56121e59f780 't' 'Timestamp'
|-CXXMethodDecl 0x56121e5907a8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56121e590698 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e590710 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e59fd58 <col:72, line:360:5>
|   `-ReturnStmt 0x56121e59fd48 <line:359:9, col:51>
|     `-ExprWithCleanups 0x56121e59fd30 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56121e59fd00 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56121e59fce8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56121e59fca8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56121e59fc90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56121e59fbd8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56121e590698 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56121e59fc50 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56121e59fc38 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56121e59fbf8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56121e594c90 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56121e59fc78 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56121e59fc18 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e590710 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5908f8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56121e590868 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56121e5ac6c8 <col:56, line:371:5>
|   |-DeclStmt 0x56121e59ff48 <line:363:9, col:51>
|   | `-VarDecl 0x56121e59fd80 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56121e59ff30 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56121e59ff00 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56121e59fee8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56121e59fed0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56121e59fea0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56121e59fe88 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56121e59fe70 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56121e59fe40 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56121e5ac628 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56121e59ffb0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56121e5952a8
|   | | `-MemberExpr 0x56121e59ff80 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56121e596258
|   | |   `-DeclRefExpr 0x56121e59ff60 <col:9> 'Timestamp' lvalue Var 0x56121e59fd80 't' 'Timestamp'
|   | `-CallExpr 0x56121e5ac5c8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x56121e5ac5b0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56121e59ffe0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56121e596588 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x56121e5ac5f8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56121e5a0000 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x56121e590868 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56121e5ac610 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x56121e5ac590 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x56121e5ac560 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x56121e5a0020 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58b750 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x56121e5ac578 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x56121e5a0040 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56121e5ac6b0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x56121e5ac680 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56121e5ac668 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56121e5ac648 <col:16> 'Timestamp' lvalue Var 0x56121e59fd80 't' 'Timestamp'
|-CXXMethodDecl 0x56121e5909e8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x56121e5ac808 <col:39, line:377:5>
|   `-ReturnStmt 0x56121e5ac7f8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x56121e5ac7e0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x56121e5ac7b0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56121e5ac798 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56121e5ac758 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x56121e5ac700 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x56121e5ac740 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56121e5ac720 <col:29> 'int' 1
|-CXXMethodDecl 0x56121e590aa8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x56121e5ac8e8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x56121e5ac8a0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x56121e5ac830 <col:9> '<bound member function type>' ->assign 0x56121e590ca8
|     | `-CXXThisExpr 0x56121e5ac820 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56121e5ac860 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56121e5ac8d0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56121e5ac880 <col:19> 'int' 0
|-CXXMethodDecl 0x56121e590ca8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56121e590b58 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e590bd0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56121e597e80 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56121e597e60 <col:60> 'int' 0
| `-CompoundStmt 0x56121e5acae0 <col:63, line:395:5>
|   `-BinaryOperator 0x56121e5acac0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x56121e5ac940 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56121e5952a8
|     | `-MemberExpr 0x56121e5ac910 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56121e596258
|     |   `-CXXThisExpr 0x56121e5ac900 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x56121e5acaa0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x56121e5aca30 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x56121e5ac9d0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x56121e5ac9b8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x56121e5ac9a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x56121e5ac970 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56121e590b58 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x56121e5aca18 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x56121e5ac9f8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x56121e5aca88 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x56121e5aca70 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x56121e5aca50 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e590bd0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e590e78 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56121e590d68 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e590de0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5acc38 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x56121e5acbf0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x56121e5acb08 <col:9> '<bound member function type>' ->assign 0x56121e590ca8
|     | `-CXXThisExpr 0x56121e5acaf8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56121e5acc20 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56121e5acb38 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56121e590d68 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56121e5acbb0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56121e5acb98 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56121e5acb58 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56121e594b48 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56121e5acbd8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56121e5acb78 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e590de0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e591048 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56121e590f38 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e590fb0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5acd90 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x56121e5acd48 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x56121e5acc60 <col:9> '<bound member function type>' ->assign 0x56121e590ca8
|     | `-CXXThisExpr 0x56121e5acc50 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56121e5acd78 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56121e5acc90 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56121e590f38 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56121e5acd08 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56121e5accf0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56121e5accb0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56121e594c90 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56121e5acd30 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56121e5accd0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e590fb0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e591218 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56121e591108 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e591180 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56121e597eb8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56121e597e98 <col:57> 'int' 0
| `-DeprecatedAttr 0x56121e5912c8 <col:75> "" ""
|-CXXMethodDecl 0x56121e591458 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56121e591348 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e5913c0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e591508 <col:74> "" ""
|-CXXMethodDecl 0x56121e591698 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56121e591588 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56121e591600 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e591748 <col:74> "" ""
|-CXXMethodDecl 0x56121e5917d8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x56121e591878 <col:42> "" ""
|-CXXMethodDecl 0x56121e5940b0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x56121e593f90 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56121e594010 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x56121e594180 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x56121e594240 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x56121e5942e0 <col:20>
| `-OptimizeNoneAttr 0x56121e594338 <col:30>
|-CXXMethodDecl 0x56121e594380 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x56121e594440 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x56121e594500 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56121e5945c0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x56121e594680 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56121e594740 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x56121e594800 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56121e5948c0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x56121e594a00 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56121e594970 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5aced8 <col:58, line:512:5>
|   `-ReturnStmt 0x56121e5acec8 <line:511:9, col:53>
|     `-BinaryOperator 0x56121e5acea8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56121e5ace78 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56121e5acda8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e594970 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56121e5ace90 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56121e5ace58 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56121e5ace38 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56121e5ace08 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56121e5acdc8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56121e5ace20 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56121e5acde8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58ba20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56121e594b48 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56121e594ab8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5ad020 <col:58, line:516:5>
|   `-ReturnStmt 0x56121e5ad010 <line:515:9, col:53>
|     `-BinaryOperator 0x56121e5acff0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56121e5acfc0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56121e5acef0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e594ab8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56121e5acfd8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56121e5acfa0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56121e5acf80 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56121e5acf50 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56121e5acf10 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56121e5acf68 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56121e5acf30 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58b900 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56121e594c90 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56121e594c00 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5ad168 <col:58, line:520:5>
|   `-ReturnStmt 0x56121e5ad158 <line:519:9, col:53>
|     `-BinaryOperator 0x56121e5ad138 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56121e5ad108 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56121e5ad038 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e594c00 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56121e5ad120 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56121e5ad0e8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56121e5ad0c8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56121e5ad098 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56121e5ad058 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58b750 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56121e5ad0b0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56121e5ad078 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56121e594dd8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56121e594d48 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5ad2b0 <col:60, line:524:5>
|   `-ReturnStmt 0x56121e5ad2a0 <line:523:9, col:55>
|     `-BinaryOperator 0x56121e5ad280 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56121e5ad250 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56121e5ad180 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e594d48 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56121e5ad268 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56121e5ad230 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56121e5ad210 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56121e5ad1e0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56121e5ad1a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56121e5ad1f8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56121e5ad1c0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58ba20 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56121e594f20 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56121e594e90 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5ad3f8 <col:60, line:528:5>
|   `-ReturnStmt 0x56121e5ad3e8 <line:527:9, col:55>
|     `-BinaryOperator 0x56121e5ad3c8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56121e5ad398 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56121e5ad2c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e594e90 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56121e5ad3b0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56121e5ad378 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56121e5ad358 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56121e5ad328 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56121e5ad2e8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56121e5ad340 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56121e5ad308 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58b900 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56121e595068 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56121e594fd8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5ad540 <col:60, line:532:5>
|   `-ReturnStmt 0x56121e5ad530 <line:531:9, col:55>
|     `-BinaryOperator 0x56121e5ad510 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56121e5ad4e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56121e5ad410 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e594fd8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56121e5ad4f8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56121e5ad4c0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56121e5ad4a0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56121e5ad470 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56121e5ad430 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58b750 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56121e5ad488 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56121e5ad450 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56121e58bab0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56121e595110 prev 0x56121e58bf50 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56121e595208 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56121e5952a8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x56121e59c070 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56121e59c458 <col:11>
| |-CXXConstructorDecl 0x56121e59c150 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56121e59c238 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56121e59cba0 <col:11>
| |-CXXConstructorDecl 0x56121e59c2d8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x56121e59c3e8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x56121e59e3f8 <col:11>
| |-CXXDestructorDecl 0x56121e59d708 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56121e2a42b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56121e2a43c8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56121e2a4c90 <col:11>
| |   `-ReturnStmt 0x56121e2a4c80 <col:11>
| |     `-UnaryOperator 0x56121e2a4c68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56121e2a4c58 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x56121e2a4438 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56121e2a4548 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x56121e636b30 <col:11>
|     `-ReturnStmt 0x56121e636b20 <col:11>
|       `-UnaryOperator 0x56121e636b08 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56121e636af8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x56121e595310 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56121e595410 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56121e595610 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5953f0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56121e5953d0 <col:21> 'int' 0
| |-EnumConstantDecl 0x56121e5954a0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56121e595628 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e595480 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56121e595460 <col:23> 'int' 1
| |-EnumConstantDecl 0x56121e595530 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56121e595640 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e595510 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56121e5954f0 <col:23> 'int' 2
| `-EnumConstantDecl 0x56121e5955c0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56121e595658 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5955a0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56121e595580 <col:27> 'int' 3
|-CXXMethodDecl 0x56121e595698 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56121e595760 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56121e595968 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56121e595810 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56121e595890 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x56121e597ed0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56121e595b78 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56121e595a28 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56121e595aa0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56121e595c48 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56121e595d08 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56121e595e78 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56121e595db8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56121e595f40 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56121e596000 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56121e5960c0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56121e596180 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56121e596220 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56121e596258 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56121e5962c8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x56121e5ad558 <col:27, line:684:5>
|-CXXMethodDecl 0x56121e596388 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x56121e5ad568 <col:27, line:696:5>
|-CXXMethodDecl 0x56121e596588 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56121e596438 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56121e5964b0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5ad6f0 <col:66, line:700:5>
|   `-ReturnStmt 0x56121e5ad6e0 <line:699:9, col:31>
|     `-CallExpr 0x56121e5ad680 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x56121e5ad668 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56121e5ad618 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x56121e418938 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x56121e5ad6b0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x56121e5ad5d8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56121e596438 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x56121e5ad6c8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56121e5ad5f8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e5964b0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5968f8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56121e596648 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56121e5966c0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56121e596738 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56121e5967b0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e5ada40 <col:64, line:707:5>
|   |-DeclStmt 0x56121e5ad780 <line:704:9, col:24>
|   | `-VarDecl 0x56121e5ad718 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x56121e5ad990 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x56121e5ad798 <col:9> 'int32_t':'int' lvalue ParmVar 0x56121e5966c0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x56121e5ad978 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x56121e5ad910 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x56121e5ad8f8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5ad878 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x56121e41dc08 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x56121e5ad948 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56121e5ad818 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56121e596738 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x56121e5ad960 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56121e5ad838 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e5967b0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x56121e5ad858 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x56121e5ad718 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x56121e5ada20 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x56121e5ad9b0 <col:9> 'int32_t':'int' lvalue ParmVar 0x56121e596648 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x56121e5ada08 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56121e5ad9f0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x56121e5ad9d0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x56121e5ad718 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56121e596b98 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56121e5969c8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56121e596a40 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56121e596ab8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56121e596e38 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56121e596c60 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56121e596cd8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56121e596d50 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56121e596fc8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56121e596f00 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56121e5971c8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56121e597080 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56121e5970f8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56121e597498 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56121e5973d8 parent 0x56121e09a278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56121e597288 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56121e597300 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56121e5976b8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56121e5975f8 parent 0x56121e09a278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56121e5974e8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56121e597560 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x56121e597880 <line:719:5, col:57> col:29
| `-FunctionDecl 0x56121e5977c8 parent 0x56121e09a278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56121e597708 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x56121e597b08 <line:720:5, col:73> col:30
| `-FunctionDecl 0x56121e597a48 parent 0x56121e09a278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56121e5978f8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56121e597970 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56121e597d28 <line:721:5, col:73> col:30
| `-FunctionDecl 0x56121e597c68 parent 0x56121e09a278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56121e597b58 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56121e597bd0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x56121e59d5b0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e59d698 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59e108 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x56121e59e0c0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56121e596258
| |     `-DeclRefExpr 0x56121e59e0a0 <col:7> 'const Timestamp' lvalue ParmVar 0x56121e59d698 '' 'const Timestamp &'
| `-CompoundStmt 0x56121e59e168 <col:7>
|-CXXConstructorDecl 0x56121e59d818 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e59d928 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56121e596258 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56121e59e408 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x56121e59e3b0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56121e596258
| |     `-CXXStaticCastExpr 0x56121e59e380 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x56121e59e350 <col:7> 'Timestamp' lvalue ParmVar 0x56121e59d928 '' 'Timestamp &&'
| `-CompoundStmt 0x56121e59e468 <col:7>
|-CXXDestructorDecl 0x56121e59d9d8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56121e2a4108 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e2a4218 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x56121e2a4d08 <col:7>
|   |-CXXMemberCallExpr 0x56121e2a4ca8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x56121e2a4be8 <col:7> '<bound member function type>' .operator= 0x56121e2a42b8
|   | | `-MemberExpr 0x56121e2a4af8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56121e596258
|   | |   `-CXXThisExpr 0x56121e2a4ae8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x56121e2a4bb8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56121e596258
|   |   `-DeclRefExpr 0x56121e2a4b98 <col:7> 'const Timestamp' lvalue ParmVar 0x56121e2a4218 '' 'const Timestamp &'
|   `-ReturnStmt 0x56121e2a4cf8 <col:7>
|     `-UnaryOperator 0x56121e2a4ce0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56121e2a4cd0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x56121e2a45b8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56121e2a46c8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x56121e636ba8 <col:7>
    |-CXXMemberCallExpr 0x56121e636b48 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x56121e636ab0 <col:7> '<bound member function type>' .operator= 0x56121e2a4438
    | | `-MemberExpr 0x56121e636980 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56121e596258
    | |   `-CXXThisExpr 0x56121e636970 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x56121e636a80 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56121e596258
    |   `-CXXStaticCastExpr 0x56121e636a50 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x56121e636a20 <col:7> 'Timestamp' lvalue ParmVar 0x56121e2a46c8 '' 'Timestamp &&'
    `-ReturnStmt 0x56121e636b98 <col:7>
      `-UnaryOperator 0x56121e636b80 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56121e636b70 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56121e63b8a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x56121e63ba78 prev 0x56121e63b8a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56121e63bb08 <col:46, col:52> col:46 public
|-TypedefDecl 0x56121e63bb30 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e641530 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x56121e6414e0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x56121e63bfe0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x56121e63bee0 'type'
|     `-TemplateSpecializationType 0x56121e63be70 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56121e63bd50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x56121e63bd30 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56121e63bd10 <col:24> 'unsigned long' 16
|       `-RecordType 0x56121e63be50 'char_array<16>'
|         `-ClassTemplateSpecialization 0x56121e63bd70 'char_array'
|-TypedefDecl 0x56121e6415e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x56121e6415b0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x56121e641590 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x56121e641530 'type'
|     `-ElaboratedType 0x56121e6414e0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x56121e63bfe0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x56121e63bee0 'type'
|         `-TemplateSpecializationType 0x56121e63be70 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56121e63bd50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x56121e63bd30 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56121e63bd10 <col:24> 'unsigned long' 16
|           `-RecordType 0x56121e63be50 'char_array<16>'
|             `-ClassTemplateSpecialization 0x56121e63bd70 'char_array'
|-CXXMethodDecl 0x56121e641768 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x56121e641678 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x56121e641858 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56121e641938 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56121e641938
|-CXXMethodDecl 0x56121e641c08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56121e641b10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x56121e641e48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56121e641cc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e641d38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56121e642018 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56121e641f08 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e641f80 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56121e642178 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56121e642248 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56121e642498 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56121e642308 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56121e642380 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56121e6426f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x56121e642568 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56121e6425e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56121e6428b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56121e6427c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56121e642a78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56121e642980 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56121e642b30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56121e642be0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56121e642e18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56121e642c90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e642d08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56121e6430b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56121e642fc0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x56121e643180 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x56121e6431d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56121e643220 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56121e63a1b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x56121e63a3c8 prev 0x56121e63a1b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56121e63b810 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56121e63b7c0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x56121e63b7a0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x56121e63b650 'type'
|     `-SubstTemplateTypeParmType 0x56121e63b470 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x56121e360ac0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e360a68 'T'
|       `-RecordType 0x56121e63afc0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56121e63aed8 'sized_array_memory'
|-FieldDecl 0x56121e643270 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x56121e6432c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56121e6432f8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x56121e63a460 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56121e398758 'T'
|   `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|     `-CXXRecord 0x56121e639330 'heap_element'
|-TypedefDecl 0x56121e6433b8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x56121e643380 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x56121e63a460 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|       `-CXXRecord 0x56121e639330 'heap_element'
|-TypedefDecl 0x56121e643448 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56121e643410 'const TimerSet::heap_element &'
|   `-QualType 0x56121e63a461 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56121e63a460 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|         `-CXXRecord 0x56121e639330 'heap_element'
|-TypedefDecl 0x56121e6434d8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x56121e6434a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56121e63a460 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|       `-CXXRecord 0x56121e639330 'heap_element'
|-TypedefDecl 0x56121e643598 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x56121e643560 'const TimerSet::heap_element *'
|   `-QualType 0x56121e63a461 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56121e63a460 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|         `-CXXRecord 0x56121e639330 'heap_element'
|-TypedefDecl 0x56121e644400 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x56121e6443b0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x56121e644390 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x56121e6442c8 'type'
|     `-LValueReferenceType 0x56121e644290 'const TimerSet::heap_element &'
|       `-QualType 0x56121e644031 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x56121e644030 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x56121e36b190 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56121e36b138 'T'
|           `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|             `-CXXRecord 0x56121e639330 'heap_element'
|-TypedefDecl 0x56121e644468 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56121e643410 'const TimerSet::heap_element &'
|   `-QualType 0x56121e63a461 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56121e63a460 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|         `-CXXRecord 0x56121e639330 'heap_element'
|-TypedefDecl 0x56121e6444c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e644528 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x56121e6434a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56121e63a460 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|       `-CXXRecord 0x56121e639330 'heap_element'
|-TypedefDecl 0x56121e644590 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x56121e643560 'const TimerSet::heap_element *'
|   `-QualType 0x56121e63a461 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56121e63a460 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e6393c0 'TimerSet::heap_element'
|         `-CXXRecord 0x56121e639330 'heap_element'
|-EnumDecl 0x56121e6445e8 <line:134:5> col:5
| `-EnumConstantDecl 0x56121e6446e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56121e6446c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56121e399e38 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56121e399e10 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56121e399df0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56121e644768 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56121e6449f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e644820 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e6448c0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x56121e644cb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56121e644ba0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x56121e644f78 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56121e644e60 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56121e6452c0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56121e6451a0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x56121e6455d0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56121e6454b0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56121e6458c0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e645708 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e645780 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56121e645a18 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56121e645af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e645b50 <col:30> Inherited
|-CXXMethodDecl 0x56121e645b98 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56121e645c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e645ca0 <col:30> Inherited
|-CXXMethodDecl 0x56121e645d68 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56121e645e18 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e645e70 <col:30> Inherited
|-CXXMethodDecl 0x56121e645eb8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56121e645f68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e645fc0 <col:30> Inherited
|-CXXMethodDecl 0x56121e646008 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56121e6460b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e646110 <col:30> Inherited
|-CXXMethodDecl 0x56121e646158 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56121e646208 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e646260 <col:30> Inherited
|-CXXMethodDecl 0x56121e646288 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56121e646338 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56121e6463e8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56121e6465a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e646498 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e646510 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56121e6466f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56121e646668 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e6468a8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x56121e6467b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56121e646960 <col:20>
| `-OptimizeNoneAttr 0x56121e6469b8 <col:30>
|-CXXMethodDecl 0x56121e646ad8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x56121e6469e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56121e646b90 <col:20>
| `-OptimizeNoneAttr 0x56121e646be8 <col:30>
|-CXXMethodDecl 0x56121e646ca0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56121e646c10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e646de8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56121e646d58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e646f18 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56121e647048 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56121e647118 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56121e6471e8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56121e647328 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56121e647298 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e647470 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56121e6473e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e6475b8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x56121e647528 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56121e647670 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56121e647770 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56121e6476e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56121e647828 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56121e6478e8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x56121e6479e8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x56121e647b98 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56121e647aa8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x56121e648388 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56121e647c50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x56121e6482e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x56121e6481e8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x56121e648468 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56121e6485b8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56121e648528 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56121e648670 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56121e6488b8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e648730 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56121e6487a8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56121e648b10 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x56121e648988 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56121e648d68 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x56121e648bd8 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56121e648c50 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56121e648e28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56121e649088 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56121e648f90 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x56121e649158 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56121e649158

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56121e64a680 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x56121e64a858 prev 0x56121e64a680 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56121e64a8e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56121e64a910 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e64c4e0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x56121e64c490 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x56121e64adc0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x56121e64acc0 'type'
|     `-TemplateSpecializationType 0x56121e64ac50 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56121e64ab30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x56121e64ab10 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56121e64aaf0 <col:24> 'unsigned long' 8
|       `-RecordType 0x56121e64ac30 'char_array<8>'
|         `-ClassTemplateSpecialization 0x56121e64ab50 'char_array'
|-TypedefDecl 0x56121e64c598 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x56121e64c560 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x56121e64c540 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x56121e64c4e0 'type'
|     `-ElaboratedType 0x56121e64c490 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x56121e64adc0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x56121e64acc0 'type'
|         `-TemplateSpecializationType 0x56121e64ac50 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56121e64ab30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x56121e64ab10 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56121e64aaf0 <col:24> 'unsigned long' 8
|           `-RecordType 0x56121e64ac30 'char_array<8>'
|             `-ClassTemplateSpecialization 0x56121e64ab50 'char_array'
|-CXXMethodDecl 0x56121e64c718 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x56121e64c628 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x56121e64c808 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56121e64c8e8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56121e64c8e8
|-CXXMethodDecl 0x56121e64cbb8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56121e64cac0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x56121e64cdf8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56121e64cc70 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e64cce8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56121e64cfc8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56121e64ceb8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e64cf30 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56121e64d128 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56121e64d1f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56121e64d448 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56121e64d2b8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56121e64d330 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56121e64d6a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x56121e64d518 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56121e64d590 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56121e64d868 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56121e64d778 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56121e64da28 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56121e64d930 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56121e64dae0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56121e64db90 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56121e64ddc8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56121e64dc40 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e64dcb8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56121e64e068 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56121e64df70 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x56121e64e130 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x56121e64e180 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56121e64e1d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56121e6492a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x56121e6494a8 prev 0x56121e6492a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56121e64a5f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56121e64a5a0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x56121e64a580 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x56121e64a430 'type'
|     `-SubstTemplateTypeParmType 0x56121e64a250 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56121e360ac0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e360a68 'T'
|       `-RecordType 0x56121e649da0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56121e649cb8 'sized_array_memory'
|-FieldDecl 0x56121e64e220 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56121e64e270 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56121e64e2a8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x56121e649540 'Timer *' sugar
|   |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56121e398758 'T'
|   `-PointerType 0x56121e5fd340 'Timer *'
|     `-RecordType 0x56121e5fc490 'Timer'
|       `-CXXRecord 0x56121e580128 'Timer'
|-TypedefDecl 0x56121e64e368 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x56121e64e330 'Timer *&'
|   `-SubstTemplateTypeParmType 0x56121e649540 'Timer *' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-PointerType 0x56121e5fd340 'Timer *'
|       `-RecordType 0x56121e5fc490 'Timer'
|         `-CXXRecord 0x56121e580128 'Timer'
|-TypedefDecl 0x56121e64e428 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x56121e64e3f0 'Timer *const &'
|   `-QualType 0x56121e649541 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56121e649540 'Timer *' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-PointerType 0x56121e5fd340 'Timer *'
|         `-RecordType 0x56121e5fc490 'Timer'
|           `-CXXRecord 0x56121e580128 'Timer'
|-TypedefDecl 0x56121e64e4e8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x56121e64e4b0 'Timer **'
|   `-SubstTemplateTypeParmType 0x56121e649540 'Timer *' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-PointerType 0x56121e5fd340 'Timer *'
|       `-RecordType 0x56121e5fc490 'Timer'
|         `-CXXRecord 0x56121e580128 'Timer'
|-TypedefDecl 0x56121e64e5a8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x56121e64e570 'Timer *const *'
|   `-QualType 0x56121e649541 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56121e649540 'Timer *' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-PointerType 0x56121e5fd340 'Timer *'
|         `-RecordType 0x56121e5fc490 'Timer'
|           `-CXXRecord 0x56121e580128 'Timer'
|-TypedefDecl 0x56121e64f180 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x56121e64f130 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x56121e64f110 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x56121e64f0a0 'type'
|     `-SubstTemplateTypeParmType 0x56121e64ee60 'Timer *' sugar
|       |-TemplateTypeParmType 0x56121e36b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e36b870 'T'
|       `-PointerType 0x56121e5fd340 'Timer *'
|         `-RecordType 0x56121e5fc490 'Timer'
|           `-CXXRecord 0x56121e580128 'Timer'
|-TypedefDecl 0x56121e64f1e8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x56121e64e3f0 'Timer *const &'
|   `-QualType 0x56121e649541 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56121e649540 'Timer *' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-PointerType 0x56121e5fd340 'Timer *'
|         `-RecordType 0x56121e5fc490 'Timer'
|           `-CXXRecord 0x56121e580128 'Timer'
|-TypedefDecl 0x56121e64f240 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e64f2a8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x56121e64e4b0 'Timer **'
|   `-SubstTemplateTypeParmType 0x56121e649540 'Timer *' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-PointerType 0x56121e5fd340 'Timer *'
|       `-RecordType 0x56121e5fc490 'Timer'
|         `-CXXRecord 0x56121e580128 'Timer'
|-TypedefDecl 0x56121e64f310 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x56121e64e570 'Timer *const *'
|   `-QualType 0x56121e649541 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56121e649540 'Timer *' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-PointerType 0x56121e5fd340 'Timer *'
|         `-RecordType 0x56121e5fc490 'Timer'
|           `-CXXRecord 0x56121e580128 'Timer'
|-EnumDecl 0x56121e64f368 <line:134:5> col:5
| `-EnumConstantDecl 0x56121e64f460 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56121e64f440 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56121e399e38 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56121e399e10 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56121e399df0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56121e64f4e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56121e64f778 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e64f5a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e64f640 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x56121e64fa38 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56121e64f920 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x56121e64fcf8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56121e64fbe0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56121e650040 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56121e64ff20 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x56121e650350 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56121e650230 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56121e650640 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e650488 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e650500 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56121e650798 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56121e650878 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e6508d0 <col:30> Inherited
|-CXXMethodDecl 0x56121e650918 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56121e6509c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e650a20 <col:30> Inherited
|-CXXMethodDecl 0x56121e654b30 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56121e654be0 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e654c38 <col:30> Inherited
|-CXXMethodDecl 0x56121e654c80 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56121e654d30 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e654d88 <col:30> Inherited
|-CXXMethodDecl 0x56121e654dd0 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56121e654e80 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e654ed8 <col:30> Inherited
|-CXXMethodDecl 0x56121e654f20 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56121e654fd0 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e655028 <col:30> Inherited
|-CXXMethodDecl 0x56121e655050 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56121e655100 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56121e6551b0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56121e655370 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e655260 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e6552d8 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56121e6554c0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56121e655430 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e655668 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x56121e655578 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56121e655720 <col:20>
| `-OptimizeNoneAttr 0x56121e655778 <col:30>
|-CXXMethodDecl 0x56121e655898 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56121e6557a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56121e655950 <col:20>
| `-OptimizeNoneAttr 0x56121e6559a8 <col:30>
|-CXXMethodDecl 0x56121e655a60 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56121e6559d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e655ba8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56121e655b18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e655cd8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x56121e655e08 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x56121e655ed8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x56121e655fa8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x56121e6560e8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56121e656058 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e656230 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56121e6561a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e656378 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56121e6562e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56121e656430 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56121e656530 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56121e6564a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56121e6565e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56121e6566a8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x56121e6567a8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x56121e656928 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56121e656868 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x56121e6570e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56121e6569e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x56121e657048 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x56121e656f48 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x56121e6571c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56121e657318 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56121e657288 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56121e6573d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56121e657618 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e657490 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56121e657508 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56121e6577d8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x56121e6576e8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56121e657a28 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x56121e6578a0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56121e657918 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56121e657ae8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56121e657d48 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56121e657c50 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x56121e657e18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56121e657e18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e6169f0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56121e616b08 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x56121e616b98 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x56121e616c20 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x56121e616d10 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56121e616e10 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x56121e616ed0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x56121e616f90 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x56121e6170b8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56121e6170b8
| `-ParmVarDecl 0x56121e6171c8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x56121e658bc8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56121e658bc8
  `-ParmVarDecl 0x56121e658cd8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e6384b0 prev 0x56121e5842d8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56121e6385a8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x56121e638638 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56121e6386c0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x56121e6387b8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x56121e659040 <col:43, col:67>
|   `-ReturnStmt 0x56121e659030 <col:45, col:52>
|     `-CXXConstructExpr 0x56121e659000 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x56121e658fd0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x56121e639fa0
|         `-CXXThisExpr 0x56121e658fc0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56121e638878 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x56121e638a80 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x56121e638928 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x56121e6389a0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x56121e638b78 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x56121e638c40 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56121e6590c0 <col:39, col:67>
|   `-ReturnStmt 0x56121e6590b0 <col:41, col:48>
|     `-ImplicitCastExpr 0x56121e659098 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56121e659068 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x56121e63a088
|         `-CXXThisExpr 0x56121e659058 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56121e638d08 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56121e659140 <col:35, col:59>
|   `-ReturnStmt 0x56121e659130 <col:37, col:44>
|     `-ImplicitCastExpr 0x56121e659118 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56121e6590e8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x56121e63a0f0
|         `-CXXThisExpr 0x56121e6590d8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56121e638e50 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x56121e638dc0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x56121e638f98 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56121e638f08 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56121e639198 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x56121e639050 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x56121e6390c8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x56121e639268 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56121e639308 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x56121e639330 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56121e639448 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x56121e6394e8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x56121e639548 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x56121e639678 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x56121e6395a8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x56121e6394e8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x56121e659218 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x56121e6591c0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x56121e659190 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x56121e581768
|   |       `-ImplicitCastExpr 0x56121e6591e0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x56121e659178 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x56121e659158 <col:17> 'Timer *' lvalue ParmVar 0x56121e6395a8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x56121e639548 't' 'Timer *'
|   | `-ImplicitCastExpr 0x56121e6592b0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56121e659270 <col:41> 'Timer *' lvalue ParmVar 0x56121e6395a8 't_' 'Timer *'
|   `-CompoundStmt 0x56121e659300 <col:45, line:44:2>
|-CXXRecordDecl 0x56121e639740 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56121e639858 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x56121e639aa8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x56121e639928 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x56121e6399a0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x56121e659430 <col:71, line:49:2>
|     `-ReturnStmt 0x56121e659420 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x56121e6593e8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x56121e6593d0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56121e6593b0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x56121e5ba6a8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x56121e659330 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x56121e6394e8
|         | `-DeclRefExpr 0x56121e659310 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x56121e639928 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x56121e659380 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x56121e6394e8
|           `-DeclRefExpr 0x56121e659360 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x56121e6399a0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x56121e639b70 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56121e639c88 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x56121e639ea8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x56121e639d28 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x56121e639da0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x56121e659638 <col:63, line:54:2>
|     `-BinaryOperator 0x56121e659618 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x56121e6594c8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x56121e583778
|       | `-ImplicitCastExpr 0x56121e6594b0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x56121e659480 <col:6, col:9> 'Timer *' lvalue ->t 0x56121e639548
|       |     `-ImplicitCastExpr 0x56121e659468 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x56121e659448 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x56121e639da0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x56121e659600 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x56121e6595e0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x56121e659588 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x56121e659568 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x56121e659538 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x56121e6594f8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x56121e639da0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x56121e659550 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x56121e659518 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x56121e639d28 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x56121e6595c8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x56121e6595a8 <col:39> 'int' 1
|-FieldDecl 0x56121e639fa0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x56121e63a010 <col:44, col:53> aligned
|   `-ConstantExpr 0x56121e639ff0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x56121e639f70 <col:52> 'int' 8
|-FieldDecl 0x56121e63a088 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x56121e63a0f0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x56121e63a158 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x56121e649240 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x56121e657f00 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x56121e657f60 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x56121e657fc0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x56121e658020 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e658110 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x56121e658080 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x56121e6581d8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x56121e659a90 <col:29, line:81:5>
|   `-IfStmt 0x56121e659a68 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x56121e659720 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x56121e6596c0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x56121e659690 <col:6, col:18> '<bound member function type>' .size 0x56121e646288
|     |     `-ImplicitCastExpr 0x56121e659708 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x56121e659660 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56121e649240
|     |         `-CXXThisExpr 0x56121e659650 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x56121e659910 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x56121e6598f8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x56121e6598d8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x56121e2a4108 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x56121e659748 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56121e639fa0
|     | | `-CXXThisExpr 0x56121e659738 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x56121e6598c0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x56121e659890 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x56121e6394e8
|     |     `-CXXMemberCallExpr 0x56121e659868 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x56121e659838 <col:22, col:34> '<bound member function type>' .unchecked_at 0x56121e647328
|     |       | `-MemberExpr 0x56121e659788 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56121e649240
|     |       |   `-CXXThisExpr 0x56121e659778 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x56121e659818 <col:47> 'int' 0
|     `-ExprWithCleanups 0x56121e659a50 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x56121e659a18 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x56121e659a00 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56121e6599e0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56121e2a45b8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x56121e659958 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56121e639fa0
|         | `-CXXThisExpr 0x56121e659948 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x56121e6599c8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56121e659998 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56121e658318 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x56121e658288 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x56121e6583e0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x56121e6584a0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x56121e658560 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x56121e658650 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x56121e6586b8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x56121e6586b8
| `-ParmVarDecl 0x56121e6587c8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x56121e658868 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x56121e658868
| `-ParmVarDecl 0x56121e658978 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x56121e658a18 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x56121e658a18
| `-ParmVarDecl 0x56121e658b28 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x56121e658d48 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x56121e658d48
| `-ParmVarDecl 0x56121e658e58 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x56121e658ee0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x56121e658ee0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56121e68f928 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x56121e68fb38 prev 0x56121e68f928 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56121e690c10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56121e690bc0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x56121e690ba0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x56121e690a50 'type'
|     `-SubstTemplateTypeParmType 0x56121e64a250 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56121e360ac0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e360a68 'T'
|       `-RecordType 0x56121e649da0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56121e649cb8 'sized_array_memory'
|-FieldDecl 0x56121e690d10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56121e690d60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56121e690d98 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x56121e68fbd0 'pollfd' sugar
|   |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56121e398758 'T'
|   `-RecordType 0x56121e6839a0 'pollfd'
|     `-CXXRecord 0x56121e683910 'pollfd'
|-TypedefDecl 0x56121e690e58 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x56121e690e20 'pollfd &'
|   `-SubstTemplateTypeParmType 0x56121e68fbd0 'pollfd' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e6839a0 'pollfd'
|       `-CXXRecord 0x56121e683910 'pollfd'
|-TypedefDecl 0x56121e690f18 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x56121e690ee0 'const pollfd &'
|   `-QualType 0x56121e68fbd1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56121e68fbd0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e6839a0 'pollfd'
|         `-CXXRecord 0x56121e683910 'pollfd'
|-TypedefDecl 0x56121e690fa8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x56121e690f70 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56121e68fbd0 'pollfd' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e6839a0 'pollfd'
|       `-CXXRecord 0x56121e683910 'pollfd'
|-TypedefDecl 0x56121e691068 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x56121e691030 'const pollfd *'
|   `-QualType 0x56121e68fbd1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56121e68fbd0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e6839a0 'pollfd'
|         `-CXXRecord 0x56121e683910 'pollfd'
|-TypedefDecl 0x56121e691c40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x56121e691bf0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x56121e691bd0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x56121e691b60 'type'
|     `-SubstTemplateTypeParmType 0x56121e691920 'pollfd' sugar
|       |-TemplateTypeParmType 0x56121e36b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e36b870 'T'
|       `-RecordType 0x56121e6839a0 'pollfd'
|         `-CXXRecord 0x56121e683910 'pollfd'
|-TypedefDecl 0x56121e691ca8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x56121e690ee0 'const pollfd &'
|   `-QualType 0x56121e68fbd1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56121e68fbd0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e6839a0 'pollfd'
|         `-CXXRecord 0x56121e683910 'pollfd'
|-TypedefDecl 0x56121e691d00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e691d68 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x56121e690f70 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56121e68fbd0 'pollfd' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e6839a0 'pollfd'
|       `-CXXRecord 0x56121e683910 'pollfd'
|-TypedefDecl 0x56121e691dd0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x56121e691030 'const pollfd *'
|   `-QualType 0x56121e68fbd1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56121e68fbd0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e6839a0 'pollfd'
|         `-CXXRecord 0x56121e683910 'pollfd'
|-EnumDecl 0x56121e691e28 <line:134:5> col:5
| `-EnumConstantDecl 0x56121e691f20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56121e691f00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56121e399e38 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56121e399e10 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56121e399df0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56121e691fa8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56121e692238 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e692060 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e692100 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x56121e6924f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56121e6923e0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x56121e6927b8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56121e6926a0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56121e692b00 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56121e6929e0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x56121e692e10 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56121e692cf0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56121e693100 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e692f48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e692fc0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56121e693258 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56121e693338 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e693390 <col:30> Inherited
|-CXXMethodDecl 0x56121e6933d8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56121e693488 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e6934e0 <col:30> Inherited
|-CXXMethodDecl 0x56121e6935a8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56121e693658 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e6936b0 <col:30> Inherited
|-CXXMethodDecl 0x56121e6936f8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56121e6937a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e693800 <col:30> Inherited
|-CXXMethodDecl 0x56121e693848 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56121e6938f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e693950 <col:30> Inherited
|-CXXMethodDecl 0x56121e693998 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56121e693a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e693aa0 <col:30> Inherited
|-CXXMethodDecl 0x56121e693ac8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56121e693b78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56121e693c28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56121e693de8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e693cd8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e693d50 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56121e693f38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56121e693ea8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e6940e8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x56121e693ff0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56121e6941a0 <col:20>
| `-OptimizeNoneAttr 0x56121e6941f8 <col:30>
|-CXXMethodDecl 0x56121e694318 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x56121e694220 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56121e6943d0 <col:20>
| `-OptimizeNoneAttr 0x56121e694428 <col:30>
|-CXXMethodDecl 0x56121e6944e0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56121e694450 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e694628 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56121e694598 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e694758 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x56121e694888 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x56121e694958 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x56121e694a28 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x56121e694b68 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56121e694ad8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e694cb0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56121e694c20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e694df8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x56121e694d68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56121e694eb0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56121e694fb0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56121e694f20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56121e695068 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56121e695128 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x56121e695228 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x56121e6953d8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56121e6952e8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x56121e695b98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56121e695490 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x56121e695af8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x56121e6959f8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x56121e695c78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56121e695dc8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56121e695d38 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56121e695e80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56121e6960c8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e695f40 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56121e695fb8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56121e696288 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x56121e696198 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56121e6964d8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x56121e696350 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56121e6963c8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56121e696598 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56121e696818 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56121e696700 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x56121e6968e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56121e6968e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56121e697ed0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x56121e6980a8 prev 0x56121e697ed0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56121e698138 <col:46, col:52> col:46 public
|-TypedefDecl 0x56121e698160 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e699d30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x56121e699ce0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x56121e698610 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x56121e698510 'type'
|     `-TemplateSpecializationType 0x56121e6984a0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56121e698380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x56121e698360 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56121e698340 <col:24> 'unsigned long' 24
|       `-RecordType 0x56121e698480 'char_array<24>'
|         `-ClassTemplateSpecialization 0x56121e6983a0 'char_array'
|-TypedefDecl 0x56121e699de8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x56121e699db0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x56121e699d90 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x56121e699d30 'type'
|     `-ElaboratedType 0x56121e699ce0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x56121e698610 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x56121e698510 'type'
|         `-TemplateSpecializationType 0x56121e6984a0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56121e698380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x56121e698360 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56121e698340 <col:24> 'unsigned long' 24
|           `-RecordType 0x56121e698480 'char_array<24>'
|             `-ClassTemplateSpecialization 0x56121e6983a0 'char_array'
|-CXXMethodDecl 0x56121e699f68 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x56121e699e78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x56121e69a058 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56121e69a138 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56121e69a138
|-CXXMethodDecl 0x56121e69a408 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56121e69a310 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x56121e69a648 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56121e69a4c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e69a538 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56121e69a818 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56121e69a708 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e69a780 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56121e69a978 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56121e69aa48 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56121e69ac98 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56121e69ab08 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56121e69ab80 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56121e69aef8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x56121e69ad68 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56121e69ade0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56121e69b0b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56121e69afc8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56121e69b278 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56121e69b180 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56121e69b330 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56121e69b3e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56121e69b618 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56121e69b490 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56121e69b508 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56121e69b8b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56121e69b7c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x56121e69b980 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x56121e69b9d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56121e69ba20 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56121e696a30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x56121e696c38 prev 0x56121e696a30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56121e697e40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x56121e697df0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x56121e697dd0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x56121e697c80 'type'
|     `-SubstTemplateTypeParmType 0x56121e697aa0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x56121e360ac0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e360a68 'T'
|       `-RecordType 0x56121e6975f0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x56121e697510 'sized_array_memory'
|-FieldDecl 0x56121e69ba70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x56121e69bac0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56121e69baf8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x56121e696cd0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56121e398758 'T'
|   `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-TypedefDecl 0x56121e69bbb8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56121e69bb80 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x56121e696cd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-TypedefDecl 0x56121e69bc78 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56121e69bc40 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56121e696cd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56121e696cd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-TypedefDecl 0x56121e69bd08 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x56121e69bcd0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56121e696cd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-TypedefDecl 0x56121e69bdc8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56121e69bd90 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56121e696cd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56121e696cd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-TypedefDecl 0x56121e69ca20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x56121e69c9d0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x56121e69c9b0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x56121e69c8e8 'type'
|     `-LValueReferenceType 0x56121e69c8b0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x56121e69c651 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x56121e69c650 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x56121e36b190 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56121e36b138 'T'
|           `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-TypedefDecl 0x56121e69ca88 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56121e69bc40 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56121e696cd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56121e696cd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-TypedefDecl 0x56121e69cae0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e69cb48 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x56121e69bcd0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56121e696cd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56121e398758 'T'
|     `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-TypedefDecl 0x56121e69cbb0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56121e69bd90 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56121e696cd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56121e696cd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56121e3987b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56121e398758 'T'
|       `-RecordType 0x56121e68f490 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56121e68f400 'SelectorInfo'
|-EnumDecl 0x56121e69cc08 <line:134:5> col:5
| `-EnumConstantDecl 0x56121e69cd00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56121e69cce0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56121e399e38 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56121e399e10 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56121e399df0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56121e69cd88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56121e69d018 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e69ce40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e69cee0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x56121e69d2d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56121e69d1c0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x56121e69d598 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56121e69d480 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56121e69d8e0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56121e69d7c0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x56121e69dbf0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56121e69dad0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56121e69dee0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e69dd28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e69dda0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56121e69e038 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56121e69e118 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e69e170 <col:30> Inherited
|-CXXMethodDecl 0x56121e69e1b8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56121e69e268 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e69e2c0 <col:30> Inherited
|-CXXMethodDecl 0x56121e69e388 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56121e69e438 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e69e490 <col:30> Inherited
|-CXXMethodDecl 0x56121e69e4d8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56121e69e588 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e69e5e0 <col:30> Inherited
|-CXXMethodDecl 0x56121e69e628 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56121e69e6d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e69e730 <col:30> Inherited
|-CXXMethodDecl 0x56121e69e7d0 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56121e69e880 <col:20> Inherited
| `-OptimizeNoneAttr 0x56121e69e8d8 <col:30> Inherited
|-CXXMethodDecl 0x56121e69e900 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56121e69e9b0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56121e69ea60 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56121e69ec20 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e69eb10 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56121e69eb88 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56121e69ed70 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56121e69ece0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e69ef18 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x56121e69ee28 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56121e69efd0 <col:20>
| `-OptimizeNoneAttr 0x56121e69f028 <col:30>
|-CXXMethodDecl 0x56121e69f148 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x56121e69f050 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56121e69f200 <col:20>
| `-OptimizeNoneAttr 0x56121e69f258 <col:30>
|-CXXMethodDecl 0x56121e69f310 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56121e69f280 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e69f458 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56121e69f3c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e69f588 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56121e69f6b8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56121e69f788 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56121e69f858 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56121e69f998 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56121e69f908 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e69fae0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56121e69fa50 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56121e69fc28 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x56121e69fb98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56121e69fce0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56121e69fde0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56121e69fd50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56121e69fe98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56121e69ff58 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x56121e6a0058 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x56121e6a0208 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56121e6a0118 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x56121e6a09c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56121e6a02c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x56121e6a0928 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x56121e6a0828 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x56121e6a0aa8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56121e6a0bf8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56121e6a0b68 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56121e6a0cb0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56121e6a0ef8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56121e6a0d70 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56121e6a0de8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56121e6a10b8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x56121e6a0fc8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56121e6a1308 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x56121e6a1180 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56121e6a11f8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56121e6a13c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56121e6a1628 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56121e6a1530 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x56121e6a16f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56121e6a16f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e6845a0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56121e6846b8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x56121e684748 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x56121e68e810 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x56121e68e900 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x56121e68e900
|-CXXMethodDecl 0x56121e68ea00 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x56121e68eca0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56121e68eab8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x56121e68eb30 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x56121e68ebb0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x56121e68ef10 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56121e68ed70 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x56121e68ede8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x56121e68ee68 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x56121e68f068 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x56121e68efd8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x56121e68f130 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x56121e6a2da8 <col:34, line:50:5>
|   |-BinaryOperator 0x56121e6a2778 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x56121e6a2738 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x56121e68f8b8
|   | | `-CXXThisExpr 0x56121e6a2728 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x56121e6a2768 <col:23> 'bool' true
|   `-CallExpr 0x56121e6a2d80 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x56121e6a2d68 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56121e6a2ce8 <col:2> 'void (long)' lvalue Function 0x56121e6a2be8 'ignore_result' 'void (long)' (FunctionTemplate 0x56121e35ba68 'ignore_result')
|     `-CallExpr 0x56121e6a2990 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x56121e6a2978 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56121e6a28f8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x56121e65cb40 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x56121e6a29c8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x56121e6a28a0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x56121e6a2888 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x56121e6a2838 <col:22> 'int [2]' lvalue ->_wake_pipe 0x56121e68f858
|       |   |   `-CXXThisExpr 0x56121e6a2828 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x56121e6a2868 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x56121e6a29f8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x56121e6a29e0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x56121e6a28c0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x56121e6a2a10 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56121e6a28d8 <col:41> 'int' 1
|-CXXMethodDecl 0x56121e68f270 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56121e68f1e0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56121e68f338 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56121e68f3d8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x56121e68f400 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56121e68f518 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x56121e68f5b8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x56121e68f618 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x56121e68f680 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x56121e68f730 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x56121e68f5b8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x56121e6a2e08 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56121e6a2dc8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x56121e68f618 'write' 'Element *'
|   | `-ImplicitCastExpr 0x56121e6a2e88 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56121e6a2e48 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x56121e68f680 'pollfd' 'int'
|   | `-UnaryOperator 0x56121e6a2ee8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x56121e6a2ec8 <col:35> 'int' 1
|   `-CompoundStmt 0x56121e6a2f60 <line:64:2, line:65:2>
|-FieldDecl 0x56121e68f858 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x56121e68f8b8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x56121e6969d0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x56121e6a17e0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x56121e6a1a18 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x56121e6a1848 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x56121e6a18c0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x56121e6a1938 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x56121e6a1c00 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x56121e6a1ae8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x56121e6a1b68 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x56121e6a1e48 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x56121e6a1cc8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x56121e6a1d48 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x56121e6a2058 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x56121e6a1f08 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x56121e6a1f80 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x56121e6a21a8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x56121e6a2118 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x56121e6a2270 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x56121e6a2330 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x56121e6a23f8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x56121e6a23f8
| `-ParmVarDecl 0x56121e6a2508 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x56121e6a25a8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x56121e6a25a8
  `-ParmVarDecl 0x56121e6a26b8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e615958 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56121e615a78 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x56121e615b08 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56121e615b90 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x56121e615c80 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56121e615d80 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x56121e615e40 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x56121e615f00 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x56121e615fe8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x56121e616108 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x56121e616108
| `-ParmVarDecl 0x56121e616218 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x56121e6a7bb8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x56121e6a7bb8
  `-ParmVarDecl 0x56121e6a7cc8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e3bb290 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e3bb3a8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56121e3bb438 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56121e3bb508 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56121e3bb5f0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e3bb808 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56121e3bb6b0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bb9b8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56121e3bb8c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56121e3bbb00 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56121e3bba70 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56121e3bbc48 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56121e3bbbb8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bbd90 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56121e3bbd00 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bbe58 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x56121e3bbfa0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x56121e3bbf10 <col:28> col:31 'int'
|-CXXMethodDecl 0x56121e3bc068 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x56121e3bc1b0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56121e3bc120 <col:28> col:31 'int'
|-CXXMethodDecl 0x56121e3bc328 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56121e3bc268 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bc470 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56121e3bc3e0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bc538 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56121e3bc6f8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56121e3bc5e8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56121e3bc660 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bc948 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56121e3bc7b8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56121e3bc830 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e3bc9f8 <col:86> "" ""
|-CXXMethodDecl 0x56121e3bcc68 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56121e3bcad8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56121e3bcb50 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bce18 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56121e3bcd28 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56121e3bcfc8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56121e3bced0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56121e3bd298 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56121e3bd080 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56121e3bd0f8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56121e3bd170 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bd578 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56121e3bd360 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56121e3bd3d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56121e3bd450 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e3bd630 <col:115> "" ""
|-AccessSpecDecl 0x56121e3bd6a0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56121e3bd6d8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e3bebf0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56121e3bebf0
| `-ParmVarDecl 0x56121e3becf8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56121e3bed98 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56121e3bed98
| `-ParmVarDecl 0x56121e3beea8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56121e3f44d8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56121e5e62d0 <col:7>
|-CXXConstructorDecl 0x56121e3f45b0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56121e3f45b0
| `-ParmVarDecl 0x56121e3f46c8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56121e3f4738 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56121e3f4738
| `-ParmVarDecl 0x56121e3f4848 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56121e5e8cd0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e57de98 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e57dfb8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x56121e57e058 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x56121e57e0b8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x56121e6a71b8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56121e6a71b8
| `-ParmVarDecl 0x56121e6a72c8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x56121e6a7368 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56121e6a7368
| `-ParmVarDecl 0x56121e6a7478 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x56121e6a74e8 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56121e6a7d68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56121e6a7d68
| `-ParmVarDecl 0x56121e6a7e78 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x56121e6a7ee8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56121e6a7ee8
| `-ParmVarDecl 0x56121e6a7ff8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x56121e6ae668 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x56121e6ae740 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e617850 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e617968 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x56121e6179f8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x56121e617a80 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x56121e617b40 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x56121e09a370 'int'
|-CXXMethodDecl 0x56121e617c08 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x56121e617ca8 <col:45> always_inline
|-CXXMethodDecl 0x56121e617dd8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x56121e617d10 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x56121e617e80 <col:49> always_inline
|-CXXConstructorDecl 0x56121e617f78 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56121e617f78
| `-ParmVarDecl 0x56121e618088 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x56121e618128 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56121e618128
| `-ParmVarDecl 0x56121e618238 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x56121e6a75d0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x56121e6a75d0
|-CXXMethodDecl 0x56121e6a8098 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56121e6a8098
| `-ParmVarDecl 0x56121e6a81a8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x56121e6a8218 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56121e6a8218
  `-ParmVarDecl 0x56121e6a8328 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e6a33d0 prev 0x56121e684510 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56121e6a34c8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x56121e6a3558 <col:22, col:28> col:22 public
|-EnumDecl 0x56121e6a3580 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x56121e6a3698 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x56121e6a3678 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56121e6a3660 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56121e6a3640 <col:32> 'int' 1
| `-EnumConstantDecl 0x56121e6a3740 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x56121e6a3720 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56121e6a3708 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56121e6a36e8 <col:53> 'int' 1000
|-CXXMethodDecl 0x56121e6a37e0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x56121e6a38a0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56121e6a3988 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x56121e6a83e8 <col:34, col:52>
|   `-ReturnStmt 0x56121e6a83d8 <col:36, col:43>
|     `-MemberExpr 0x56121e6a83a8 <col:43> 'TimerSet' lvalue ->_timers 0x56121e6a5658
|       `-CXXThisExpr 0x56121e6a8398 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56121e6a3a78 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x56121e6a8450 <col:46, col:64>
|   `-ReturnStmt 0x56121e6a8440 <col:48, col:55>
|     `-MemberExpr 0x56121e6a8410 <col:55> 'const TimerSet' lvalue ->_timers 0x56121e6a5658
|       `-CXXThisExpr 0x56121e6a8400 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56121e6a3b68 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x56121e6a84b8 <col:36, col:55>
|   `-ReturnStmt 0x56121e6a84a8 <col:38, col:45>
|     `-MemberExpr 0x56121e6a8478 <col:45> 'SelectSet' lvalue ->_selects 0x56121e6a56b8
|       `-CXXThisExpr 0x56121e6a8468 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56121e6a3c58 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x56121e6a8520 <col:48, col:67>
|   `-ReturnStmt 0x56121e6a8510 <col:50, col:57>
|     `-MemberExpr 0x56121e6a84e0 <col:57> 'const SelectSet' lvalue ->_selects 0x56121e6a56b8
|       `-CXXThisExpr 0x56121e6a84d0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56121e6a3d18 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x56121e6a3e08 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x56121e6a3f78 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x56121e6a3eb8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x56121e6a4040 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x56121e6a4488 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x56121e6a40f0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x56121e6a4370 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x56121e6a4558 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x56121e6a4618 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x56121e6a46d8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x56121e6a4818 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x56121e6a4788 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x56121e6a48e0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x56121e6a49a0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x56121e6a4a60 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x56121e6a4b20 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x56121e6a4c60 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56121e6a4bd0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56121e6a4d28 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x56121e6a4de8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x56121e6a4e88 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x56121e6a4f50 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a4fa0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a4ff0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a5040 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a5090 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a50e0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a5130 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a5180 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a51d0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56121e6a5220 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x56121e6a5270 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x56121e6a5368 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x56121e6a52d8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x56121e6a54b8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x56121e6a5428 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x56121e6a5560 <line:104:3, col:10> col:3 private
|-FieldDecl 0x56121e6a5598 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x56121e6a55f8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x56121e6a5658 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x56121e6a56b8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x56121e6a5738 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x56121e6a57a8 <col:40, col:50> aligned
|   `-ConstantExpr 0x56121e6a5788 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x56121e6a5708 <col:48> 'int' 64
|-FieldDecl 0x56121e6a5818 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x56121e6a5878 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x56121e6a5970 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x56121e6a5a80 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x56121e6a5ae0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x56121e6a5b60 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x56121e6a5bd0 <col:36, col:46> aligned
|   `-ConstantExpr 0x56121e6a5bb0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x56121e6a5b30 <col:44> 'int' 64
|-FieldDecl 0x56121e6a5c48 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x56121e6a5ca8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x56121e6a5cf8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x56121e6a5d38 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x56121e6a5da0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x56121e6a5df0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x56121e6a5f98 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x56121e6a5e28 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x56121e6a5ea8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x56121e6a6098 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x56121e6a6098
|-CXXMethodDecl 0x56121e6a61a0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x56121e6a6268 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x56121e6a8618 <col:34, line:217:5>
|   `-ReturnStmt 0x56121e6a8608 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x56121e6a85f0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56121e6a85c0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x56121e61a3b0
|         `-ImplicitCastExpr 0x56121e6a85a8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x56121e6a8578 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x56121e61a348
|             `-MemberExpr 0x56121e6a8548 <col:16> 'const TaskLink' lvalue ->_task_link 0x56121e6a5598
|               `-CXXThisExpr 0x56121e6a8538 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56121e6a6328 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x56121e6a63e8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x56121e6a8d40 <col:39, line:226:5>
|   |-DeclStmt 0x56121e6a8868 <line:223:9, col:68>
|   | `-VarDecl 0x56121e6a8640 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x56121e6a8820 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x56121e6a87f0 <col:24, col:38> '<bound member function type>' .compare_swap 0x56121e3c20b0
|   |     | `-MemberExpr 0x56121e6a86b8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x56121e6a5818
|   |     |   `-CXXThisExpr 0x56121e6a86a8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x56121e6a87a8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x56121e6a8790 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x56121e6a8768 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x56121e6a8748 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x56121e6a8850 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x56121e6a87d0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x56121e6a88b0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56121e6a8880 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x56121e6a8640 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x56121e6a8d20 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x56121e6a8cf0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x56121e6a89c8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x56121e6a8998 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x56121e6a8980 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x56121e6a88d8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x56121e6a8640 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x56121e6a8958 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x56121e6a8940 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x56121e6a8918 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x56121e6a88f8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x56121e6a8a28 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x56121e6a8a08 <col:60> 'int' 0
|       `-CallExpr 0x56121e6a8c50 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x56121e6a8c38 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56121e6a8c18 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x56121e6a8c90 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56121e6a8b18 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x56121e6a8ca8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56121e6a8b48 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x56121e6a8cc0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x56121e6a8b88 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x56121e6a8cd8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x56121e6a8c00 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x56121e6a8be8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x56121e6a8ba8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x56121e6a6530 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x56121e6a64a0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x56121e6a65f8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x56121e6a66b8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x56121e6a67e0 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x56121e6a68a0 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x56121e6a6960 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x56121e6a6a50 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x56121e6a6ab0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56121e6a6b40 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x56121e6a6f08 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x56121e6a6f08
| `-ParmVarDecl 0x56121e6a7018 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x56121e6a76d8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x56121e6a76d8
  `-ParmVarDecl 0x56121e6a77e8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e61a6c0 prev 0x56121e5fc350 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x56121e61a7f8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x56121e61a888 <col:33, col:39> col:33 public
|-EnumDecl 0x56121e61a8b0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x56121e61a9f0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x56121e61a9d0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x56121e61a9b0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56121e61a970 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x56121e61a990 <col:26> 'int' 16
| `-EnumConstantDecl 0x56121e61aac0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x56121e61aaa0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x56121e61aa80 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x56121e61aa40 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x56121e61aa60 <col:47> 'int' 31
|-EnumDecl 0x56121e61ab10 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x56121e61ac50 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x56121e61ad70 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e61ac30 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x56121e61ac10 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x56121e61abd0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x56121e61abf0 <col:29> 'int' 15
| `-EnumConstantDecl 0x56121e61ad20 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x56121e61ad88 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e61ad00 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x56121e61ace0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x56121e61aca0 <col:51> 'int' 1
|         `-IntegerLiteral 0x56121e61acc0 <col:54> 'int' 10
|-CXXConstructorDecl 0x56121e61af58 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x56121e61adb0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x56121e61ae30 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x56121e61b0e8 <line:86:5, col:27> col:12 used Task 'void (Element *)' inline
| `-ParmVarDecl 0x56121e61b020 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x56121e61b1e0 <line:91:5, col:11> col:5 used ~Task 'void () noexcept'
|-CXXMethodDecl 0x56121e61b368 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x56121e57eff8 <col:42, line:100:5>
|   `-ReturnStmt 0x56121e57efe8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x56121e57efd0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x56121e57efa0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x56121e57dd20
|         `-CXXThisExpr 0x56121e57ef90 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56121e61b430 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x56121e57f078 <col:36, line:105:5>
|   `-ReturnStmt 0x56121e57f068 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x56121e57f050 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56121e57f020 <col:16> 'void *const' lvalue ->_thunk 0x56121e57dd88
|         `-CXXThisExpr 0x56121e57f010 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56121e61b4f0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x56121e57f0f8 <col:37, line:110:5>
|   `-ReturnStmt 0x56121e57f0e8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x56121e57f0d0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56121e57f0a0 <col:16> 'Element *const' lvalue ->_owner 0x56121e57de48
|         `-CXXThisExpr 0x56121e57f090 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56121e61b5b0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x56121e61b678 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x56121e61b738 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x56121e61b7f8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x56121e57f1e0 <col:35, line:137:5>
|   `-ReturnStmt 0x56121e57f1d0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x56121e57f198 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x56121e57f168 <col:16, col:24> '<bound member function type>' ->router 0x56121e60eb60
|         `-ImplicitCastExpr 0x56121e57f1b8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56121e57f150 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56121e57f120 <col:16> 'Element *const' lvalue ->_owner 0x56121e57de48
|               `-CXXThisExpr 0x56121e57f110 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56121e61b8b8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x56121e61bab8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56121e61b968 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56121e61b9e0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56121e61bcc8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x56121e61bb78 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x56121e61bbf0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56121e61bd98 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x56121e57f2f0 <col:35, line:181:5>
|   `-ReturnStmt 0x56121e57f2e0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x56121e57f2c8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x56121e57f2b0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x56121e57f280 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x56121e57d958
|           `-MemberExpr 0x56121e57f238 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56121e57da78
|             `-MemberExpr 0x56121e57f208 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x56121e57dca8
|               `-CXXThisExpr 0x56121e57f1f8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56121e57c9a0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x56121e57f408 <col:30, line:192:5>
|   `-BinaryOperator 0x56121e57f3e8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56121e57f390 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56121e57d958
|     | `-MemberExpr 0x56121e57f348 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56121e57da78
|     |   `-MemberExpr 0x56121e57f318 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56121e57dca8
|     |     `-CXXThisExpr 0x56121e57f308 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56121e57f3d0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56121e57f3c0 <col:32> 'bool' false
|-CXXMethodDecl 0x56121e57ca60 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x56121e57f758 <col:30, line:206:5>
|   |-BinaryOperator 0x56121e57f500 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56121e57f4a8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56121e57d958
|   | | `-MemberExpr 0x56121e57f460 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56121e57da78
|   | |   `-MemberExpr 0x56121e57f430 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56121e57dca8
|   | |     `-CXXThisExpr 0x56121e57f420 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56121e57f4e8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56121e57f4d8 <col:32> 'bool' true
|   |-CallExpr 0x56121e57f5a0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x56121e57f588 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56121e57f568 <col:9> 'void ()' lvalue Function 0x56121e615510 'click_fence' 'void ()'
|   `-IfStmt 0x56121e57f740 <line:204:9, line:205:32>
|     |-BinaryOperator 0x56121e57f680 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x56121e57f650 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x56121e57f600 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x56121e57e0b8
|     | |   `-MemberExpr 0x56121e57f5d0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x56121e57e130
|     | |     `-CXXThisExpr 0x56121e57f5c0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x56121e57f668 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x56121e57f630 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x56121e57f700 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x56121e57f6b0 <col:13> '<bound member function type>' ->complete_schedule 0x56121e57eb30
|       | `-CXXThisExpr 0x56121e57f6a0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x56121e57f728 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x56121e57f6e0 <col:31> 'int' 0
|-CXXMethodDecl 0x56121e57cb20 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x56121e57f880 <col:35, line:240:5>
|   `-BinaryOperator 0x56121e57f860 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56121e57f808 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56121e57d958
|     | `-MemberExpr 0x56121e57f7c0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56121e57da78
|     |   `-MemberExpr 0x56121e57f790 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56121e57dca8
|     |     `-CXXThisExpr 0x56121e57f780 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56121e57f848 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56121e57f838 <col:32> 'bool' true
|-CXXMethodDecl 0x56121e57cbe0 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x56121e57fa98 <col:37, line:253:5>
|   |-BinaryOperator 0x56121e57f978 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56121e57f920 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56121e57d958
|   | | `-MemberExpr 0x56121e57f8d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56121e57da78
|   | |   `-MemberExpr 0x56121e57f8a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56121e57dca8
|   | |     `-CXXThisExpr 0x56121e57f898 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56121e57f960 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56121e57f950 <col:32> 'bool' false
|   `-BinaryOperator 0x56121e57fa78 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56121e57fa20 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56121e57d9b8
|     | `-MemberExpr 0x56121e57f9d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56121e57da78
|     |   `-MemberExpr 0x56121e57f9a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56121e57dca8
|     |     `-CXXThisExpr 0x56121e57f998 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56121e57fa60 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56121e57fa50 <col:41> 'bool' true
|-CXXMethodDecl 0x56121e57cca0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x56121e57fc18 <col:37, line:264:5>
|   |-BinaryOperator 0x56121e57fb98 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56121e57fb40 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56121e57d9b8
|   | | `-MemberExpr 0x56121e57faf8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56121e57da78
|   | |   `-MemberExpr 0x56121e57fac8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56121e57dca8
|   | |     `-CXXThisExpr 0x56121e57fab8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56121e57fb80 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56121e57fb70 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x56121e57fbf8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x56121e57fbc8 <col:9> '<bound member function type>' ->reschedule 0x56121e57ca60
|       `-CXXThisExpr 0x56121e57fbb8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x56121e57cde8 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x56121e57cd58 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x56121e57ceb8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x56121e57d000 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x56121e57cf70 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x56121e57d150 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x56121e57d0c0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x56121e57d218 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x56121e57d2d8 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x56121e57d378 <col:53> "" ""
|-CXXMethodDecl 0x56121e57d410 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x56121e57d4b0 <col:47> "" ""
|-AccessSpecDecl 0x56121e57d520 <line:303:3, col:10> col:3 private
|-FieldDecl 0x56121e57d560 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x56121e57d5c8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x56121e57d618 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56121e57d738 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x56121e57d7c8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x56121e57d8f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x56121e57d958 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x56121e57d9b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x56121e6add98 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x56121e6ade70 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x56121e6ae128 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56121e6ae128
| | | `-ParmVarDecl 0x56121e6ae238 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x56121e6ae2d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56121e6ae2d8
| |   `-ParmVarDecl 0x56121e6ae3e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x56121e57da78 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x56121e57dad8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x56121e57da78 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56121e57d8f8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x56121e57db30 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x56121e57da78 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56121e57d958 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x56121e57db88 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x56121e57da78 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56121e57d9b8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x56121e57dbe0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x56121e6adca8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56121e6ae608 <col:11>
| |-CXXConstructorDecl 0x56121e6adf78 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56121e6adf78
| | `-ParmVarDecl 0x56121e6ae088 <col:11> col:11 'const Task::Status &'
| |-CXXConstructorDecl 0x56121e6ae488 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56121e6ae488
| | `-ParmVarDecl 0x56121e6ae598 <col:11> col:11 'Task::Status &&'
| `-CXXDestructorDecl 0x56121e6b7c80 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial
|-FieldDecl 0x56121e57dca8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x56121e57dd20 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x56121e57dd88 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56121e57dde8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x56121e57de48 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x56121e57de98 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56121e57dfb8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x56121e57e058 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x56121e57e0b8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x56121e6a71b8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56121e6a71b8
| | `-ParmVarDecl 0x56121e6a72c8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x56121e6a7368 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56121e6a7368
| | `-ParmVarDecl 0x56121e6a7478 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x56121e6a74e8 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56121e6a7d68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56121e6a7d68
| | `-ParmVarDecl 0x56121e6a7e78 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x56121e6a7ee8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56121e6a7ee8
| | `-ParmVarDecl 0x56121e6a7ff8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x56121e6ae668 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56121e6ae740 <col:11>
|-FieldDecl 0x56121e57e130 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x56121e57e278 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x56121e57e1b8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x56121e57e428 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x56121e57e338 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x56121e57e4f0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x56121e57e5b0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x56121e57e670 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x56121e57fd28 <col:41, line:355:5>
|   `-ReturnStmt 0x56121e57fd18 <line:354:9, col:38>
|     `-BinaryOperator 0x56121e57fcf8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x56121e57fcc8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x56121e57fc78 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x56121e57e0b8
|       |   `-MemberExpr 0x56121e57fc48 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x56121e57e130
|       |     `-CXXThisExpr 0x56121e57fc38 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x56121e57fce0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56121e57fca8 <col:38> 'int' 0
|-CXXMethodDecl 0x56121e57e730 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x56121e57e870 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x56121e57e7e0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x56121e57e9e8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x56121e57e928 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x56121e57eb30 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x56121e57eaa0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x56121e57ebf8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x56121e57edc0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x56121e57eca8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x56121e57ed28 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x56121e57eec0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x56121e57ef50 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e6b3e10 <../elements/standard/discardnofree.hh:17:1, line:34:1> line:17:7 class DiscardNoFree definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56121e6b3f68 <col:1, col:7> col:7 implicit referenced class DiscardNoFree
|-AccessSpecDecl 0x56121e6b3ff8 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x56121e6b4080 <line:19:3, col:17> col:3 DiscardNoFree 'void ()'
|-CXXMethodDecl 0x56121e6b4180 <line:21:3, col:60> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x56121e5fdf18 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56121e6b5070 <col:34, col:60>
|   `-ReturnStmt 0x56121e6b5060 <col:36, col:43>
|     `-ImplicitCastExpr 0x56121e6b5048 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56121e6b5020 <col:43> 'const char [14]' lvalue "DiscardNoFree"
|-CXXMethodDecl 0x56121e6b4248 <line:22:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x56121e5fdfe0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56121e6b50d0 <col:34, col:54>
|   `-ReturnStmt 0x56121e6b50c0 <col:36, col:43>
|     `-ImplicitCastExpr 0x56121e6b50a8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56121e6b5088 <col:43> 'const char []' lvalue Var 0x56121e5fe208 'PORTS_1_0' 'const char []'
|-CXXMethodDecl 0x56121e6b4390 <line:24:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x56121e5ffa00 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x56121e6b42f8 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x56121e6b4458 <line:25:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x56121e5ff880 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x56121e6b4620 <line:27:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x56121e5fcd88 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56121e6b4510 <col:13> col:16 'int'
| `-ParmVarDecl 0x56121e6b4588 <col:18, col:25> col:26 'Packet *'
|-CXXMethodDecl 0x56121e6b4770 <line:28:3, col:23> col:8 run_task 'bool (Task *)'
| |-Overrides: [ 0x56121e5fd298 Element::run_task 'bool (Task *)' ]
| `-ParmVarDecl 0x56121e6b46e0 <col:17, col:22> col:23 'Task *'
|-AccessSpecDecl 0x56121e6b4818 <line:30:2, col:9> col:2 private
|-FieldDecl 0x56121e6b4850 <line:32:3, col:8> col:8 _task 'Task'
|-CXXConstructorDecl 0x56121e6b48c8 <line:17:7> col:7 implicit DiscardNoFree 'void (const DiscardNoFree &)' inline default_delete noexcept-unevaluated 0x56121e6b48c8
| `-ParmVarDecl 0x56121e6b49d8 <col:7> col:7 'const DiscardNoFree &'
|-CXXConstructorDecl 0x56121e6b4a78 <col:7> col:7 implicit DiscardNoFree 'void (DiscardNoFree &&)' inline default_delete noexcept-unevaluated 0x56121e6b4a78
| `-ParmVarDecl 0x56121e6b4b88 <col:7> col:7 'DiscardNoFree &&'
|-CXXMethodDecl 0x56121e6b4c28 <col:7> col:7 implicit operator= 'DiscardNoFree &(const DiscardNoFree &)' inline default_delete noexcept-unevaluated 0x56121e6b4c28
| `-ParmVarDecl 0x56121e6b4d38 <col:7> col:7 'const DiscardNoFree &'
|-CXXMethodDecl 0x56121e6b4da8 <col:7> col:7 implicit operator= 'DiscardNoFree &(DiscardNoFree &&)' inline default_delete noexcept-unevaluated 0x56121e6b4da8
| `-ParmVarDecl 0x56121e6b4eb8 <col:7> col:7 'DiscardNoFree &&'
`-CXXDestructorDecl 0x56121e6b4f40 <col:7> col:7 implicit ~DiscardNoFree 'void ()' inline default noexcept-unevaluated 0x56121e6b4f40
  `-Overrides: [ 0x56121e5fcab8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.DiscardNoFree = type { %class.Element.base, %class.Task }
  NonVirtualBaseLLVMType:%class.DiscardNoFree = type { %class.Element.base, %class.Task }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e5d4e78 prev 0x56121e5ca080 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e5d4f70 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56121e5d5060 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56121e5d5188 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56121e5d5308 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56121e5d5488 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56121e5d5608 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56121e5e6438 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56121e5e6ca8 <col:11>
|-CXXDestructorDecl 0x56121e5e6510 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56121e5e6648 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56121e5e6648
| `-ParmVarDecl 0x56121e5e6758 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56121e5e67f8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56121e5e67f8
| `-ParmVarDecl 0x56121e5e6908 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56121e5e96c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e5e97d8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56121e5e9a58 <col:11>
|   `-ReturnStmt 0x56121e5e9a48 <col:11>
|     `-UnaryOperator 0x56121e5e9a30 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56121e5e9a20 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56121e5e9848 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56121e5e9848
  `-ParmVarDecl 0x56121e5e9958 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e5d5670 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e5d5788 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56121e5d5828 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56121e5d5890 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56121e5d58f8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56121e5d5960 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56121e5d59c0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56121e5d5a80 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56121e5d5ae0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56121e5d5b40 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56121e5e6348 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56121e5d5828 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56121e5e6cb8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56121e5e6d10 <col:12>
|-CXXConstructorDecl 0x56121e5e6978 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56121e5e6978
| `-ParmVarDecl 0x56121e5e6a88 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56121e5e6b28 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56121e5e6b28
| `-ParmVarDecl 0x56121e5e6c38 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56121e5e8db0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e5c3790 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56121e5c38a8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56121e5c3938 <col:16, col:22> col:16 public
|-EnumDecl 0x56121e5c3960 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56121e5c3a60 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56121e5c3b40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5c3a40 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56121e5c3a20 <col:21> 'int' 28
| `-EnumConstantDecl 0x56121e5c3af0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56121e5c3b58 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5c3ad0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56121e5c3ab0 <col:22> 'int' 64
|-CXXMethodDecl 0x56121e5c3e98 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56121e5c3b80 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56121e5c3c00 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56121e5c3c78 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56121e5c3cf0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56121e5c3f58 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c4158 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56121e5c3fd0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56121e5c4048 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56121e5c4208 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c4368 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56121e5c4278 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56121e5c4410 <col:72> warn_unused_result ""
|-TypedefDecl 0x56121e5c4770 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56121e5c4700 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56121e5c46a0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56121e5c4660 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56121e09a2d0 'void'
|       |-PointerType 0x56121e343b30 'unsigned char *'
|       | `-BuiltinType 0x56121e09a3d0 'unsigned char'
|       |-TypedefType 0x56121e1400a0 'size_t' sugar
|       | |-Typedef 0x56121e10ab20 'size_t'
|       | `-BuiltinType 0x56121e09a430 'unsigned long'
|       `-PointerType 0x56121e09aad0 'void *'
|         `-BuiltinType 0x56121e09a2d0 'void'
|-CXXMethodDecl 0x56121e5c4be8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56121e5c47e0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56121e5c4858 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56121e5c48f0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56121e5c4970 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56121e5df2e0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56121e5df2c8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56121e5df290 <col:58> 'int' 0
| |-ParmVarDecl 0x56121e5c49f0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56121e5df308 <col:76> 'int' 0
| |-ParmVarDecl 0x56121e5c4a70 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56121e5df328 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56121e5c4cb8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c4d38 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56121e5c4df8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56121e5c4e98 <col:20>
| `-OptimizeNoneAttr 0x56121e5c4ef0 <col:30>
|-CXXMethodDecl 0x56121e5c4f68 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56121e5c5008 <col:20>
| `-OptimizeNoneAttr 0x56121e5c5060 <col:30>
|-CXXMethodDecl 0x56121e5c50d8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56121e5c5178 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c5228 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56121e5c52c8 <col:20>
| |-OptimizeNoneAttr 0x56121e5c5320 <col:30>
| `-WarnUnusedResultAttr 0x56121e5c5348 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c53a0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56121e5c5440 <col:20>
| `-OptimizeNoneAttr 0x56121e5c5498 <col:30>
|-CXXMethodDecl 0x56121e5c54e8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56121e5c5588 <col:20>
| `-OptimizeNoneAttr 0x56121e5c55e0 <col:30>
|-CXXMethodDecl 0x56121e5c5628 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x56121e5c56c8 <col:20>
| `-OptimizeNoneAttr 0x56121e5c5720 <col:30>
|-CXXMethodDecl 0x56121e5c5768 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e5c5828 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e5c58f0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56121e5c59b8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56121e5c5a78 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e5c5b98 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56121e5df3f0 <col:54, line:99:5>
|   `-ReturnStmt 0x56121e5df3e0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56121e5df3c8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56121e5df398 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56121e5d5e78
|         `-CXXThisExpr 0x56121e5df388 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56121e5c5d38 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56121e5c5c48 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56121e5df4a0 <col:67, line:103:5>
|   `-BinaryOperator 0x56121e5df480 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56121e5df418 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56121e5d5e78
|     | `-CXXThisExpr 0x56121e5df408 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56121e5df468 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56121e5df448 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56121e5c5c48 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56121e5c5e30 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56121e5df520 <col:33, line:107:5>
|   `-ReturnStmt 0x56121e5df510 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56121e5df4f8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56121e5df4c8 <col:16> 'void *' lvalue ->_destructor_argument 0x56121e5d5ee0
|         `-CXXThisExpr 0x56121e5df4b8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56121e5c5ef0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56121e5dfb50 <col:25, line:113:5>
|   |-ParenExpr 0x56121e5df898 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56121e5df868 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5df5d8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56121e5df5b0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56121e5df578 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56121e5df548 <col:24> '<bound member function type>' ->shared 0x56121e5c4f68
|   |   |       `-ImplicitCastExpr 0x56121e5df598 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56121e5df538 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56121e5df638 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5df618 <col:42> 'int' 0
|   |   `-CallExpr 0x56121e5df7c8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56121e5df7b0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5df790 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5df808 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5df6a8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56121e5df820 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5df6d0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5df838 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5df708 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56121e5df850 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5df778 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5df760 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5df728 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56121e5dfa98 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56121e5df8c8 <col:2> 'unsigned char *' lvalue ->_head 0x56121e5d5c80
|   | | `-CXXThisExpr 0x56121e5df8b8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56121e5dfa80 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56121e5dfa60 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56121e5df908 <col:10> 'unsigned char *' lvalue ->_data 0x56121e5d5ce8
|   |     | `-CXXThisExpr 0x56121e5df8f8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56121e5dfa48 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56121e5dfa28 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56121e5df948 <col:18> 'unsigned char *' lvalue ->_tail 0x56121e5d5d50
|   |         | `-CXXThisExpr 0x56121e5df938 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56121e5dfa10 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56121e5df9f0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56121e5df988 <col:26> 'unsigned char *' lvalue ->_end 0x56121e5d5db8
|   |             | `-CXXThisExpr 0x56121e5df978 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56121e5df9d8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56121e5df9b8 <col:33> 'int' 0
|   `-BinaryOperator 0x56121e5dfb30 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56121e5dfac8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56121e5d5e78
|     | `-CXXThisExpr 0x56121e5dfab8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56121e5dfb18 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56121e5dfaf8 <col:16> 'int' 0
|-CXXMethodDecl 0x56121e5c6030 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56121e5c5fa0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56121e5c60d8 <col:20>
| |-OptimizeNoneAttr 0x56121e5c6130 <col:30>
| `-WarnUnusedResultAttr 0x56121e5c6158 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c6228 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56121e5c6198 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56121e5c62d0 <col:20>
| |-OptimizeNoneAttr 0x56121e5c6328 <col:30>
| `-WarnUnusedResultAttr 0x56121e5c6350 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c6488 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56121e5c6390 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56121e5c6530 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c6630 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56121e5c65a0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56121e5c66d8 <col:20>
| `-OptimizeNoneAttr 0x56121e5c6730 <col:30>
|-CXXMethodDecl 0x56121e5c67f8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56121e5c6768 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56121e5c68a0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c69a0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56121e5c6910 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56121e5c6a48 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c6b48 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56121e5c6ab8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56121e5c6bf0 <col:20>
| `-OptimizeNoneAttr 0x56121e5c6c48 <col:30>
|-CXXMethodDecl 0x56121e5c6dd8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56121e5c6c88 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56121e5c6d00 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56121e5df348 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56121e5c6e88 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56121e5c7088 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56121e5c6f00 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56121e5c6f78 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5c7298 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56121e5c7148 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56121e5c71c0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5c74a8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56121e5c7358 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56121e5c73d8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56121e5df358 <col:39> 'int' 0
|-CXXMethodDecl 0x56121e5c7578 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56121e5c7640 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56121e5c7708 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56121e5c77c8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e5c7890 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56121e5c79d8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56121e5c7948 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56121e5c7ba8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56121e5c7a98 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56121e5c7b10 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5c7c78 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56121e5c7d38 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56121e5c7dd8 <col:20>
| `-OptimizeNoneAttr 0x56121e5c7e30 <col:30>
|-CXXMethodDecl 0x56121e5c7e80 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56121e5c7f20 <col:20>
| `-OptimizeNoneAttr 0x56121e5c7f78 <col:30>
|-CXXMethodDecl 0x56121e5c7fc8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56121e5c8088 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e5c8150 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56121e5c81f0 <col:20>
| `-OptimizeNoneAttr 0x56121e5c8248 <col:30>
|-CXXMethodDecl 0x56121e5c8398 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56121e5c8288 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56121e5c8300 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5c84e8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56121e5c8458 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5c85c0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56121e5c8680 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56121e5c8720 <col:20>
| `-OptimizeNoneAttr 0x56121e5c8778 <col:30>
|-CXXMethodDecl 0x56121e5c87c8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56121e5c8868 <col:20>
| `-OptimizeNoneAttr 0x56121e5c88c0 <col:30>
|-CXXMethodDecl 0x56121e5c8910 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56121e5c89d8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56121e5c8a78 <col:20>
| `-OptimizeNoneAttr 0x56121e5c8ad0 <col:30>
|-CXXMethodDecl 0x56121e5c8b18 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56121e5c8c38 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56121e5c8da8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56121e5c8ce8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56121e5c8e98 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56121e5c8f38 <col:20>
| `-OptimizeNoneAttr 0x56121e5c8f90 <col:30>
|-CXXMethodDecl 0x56121e5c8fe0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56121e5c90a0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e5c92d8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56121e5c9150 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56121e5c91c8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56121e5c9388 <col:20>
| `-OptimizeNoneAttr 0x56121e5c93e0 <col:30>
|-CXXMethodDecl 0x56121e5c9488 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56121e5c9528 <col:20>
| `-OptimizeNoneAttr 0x56121e5c9580 <col:30>
|-CXXMethodDecl 0x56121e5c95d0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56121e5c9670 <col:20>
| `-OptimizeNoneAttr 0x56121e5c96c8 <col:30>
|-CXXMethodDecl 0x56121e5c9710 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56121e5c97b0 <col:20>
| `-OptimizeNoneAttr 0x56121e5c9808 <col:30>
|-CXXMethodDecl 0x56121e5c9908 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56121e5c9840 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56121e5c99b0 <col:20>
| `-OptimizeNoneAttr 0x56121e5c9a08 <col:30>
|-CXXMethodDecl 0x56121e5c9bc8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56121e5c9a40 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56121e5c9ab8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56121e5c9c78 <col:20>
| `-OptimizeNoneAttr 0x56121e5c9cd0 <col:30>
|-CXXMethodDecl 0x56121e5c9d78 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56121e5c9e98 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56121e5c9fb8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56121e5ca058 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56121e5ca080 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56121e5ca1a8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56121e5ca248 <col:20>
| `-OptimizeNoneAttr 0x56121e5ca2a0 <col:30>
|-CXXMethodDecl 0x56121e5ca348 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56121e5ca3e8 <col:20>
| `-OptimizeNoneAttr 0x56121e5ca440 <col:30>
|-AccessSpecDecl 0x56121e5ca468 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56121e5ca490 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56121e5ca590 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56121e5ca5e0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5ca570 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56121e5ca550 <col:14> 'int' 48
|-CXXMethodDecl 0x56121e5ca648 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56121e5ca6e8 <col:20>
| `-OptimizeNoneAttr 0x56121e5ca740 <col:30>
|-CXXMethodDecl 0x56121e5ca7b8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56121e5ca858 <col:20>
| `-OptimizeNoneAttr 0x56121e5ca8b0 <col:30>
|-CXXMethodDecl 0x56121e5ca978 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56121e5ca8e8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56121e5cab18 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56121e5cacb8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56121e5cabc8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56121e5cad60 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56121e5cae60 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56121e5cb210 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cae40 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56121e5cae20 <col:9> 'int' 0
| |-EnumConstantDecl 0x56121e5caef0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56121e5cb228 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5caed0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56121e5caeb0 <col:14> 'int' 1
| |-EnumConstantDecl 0x56121e5caf80 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56121e5cb240 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5caf60 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56121e5caf40 <col:14> 'int' 2
| |-EnumConstantDecl 0x56121e5cb010 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56121e5cb258 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5caff0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56121e5cafd0 <col:14> 'int' 3
| |-EnumConstantDecl 0x56121e5cb0a0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56121e5cb270 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cb080 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56121e5cb060 <col:13> 'int' 4
| |-EnumConstantDecl 0x56121e5cb130 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56121e5cb288 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cb110 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56121e5cb0f0 <col:13> 'int' 5
| `-EnumConstantDecl 0x56121e5cb1c0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56121e5cb2a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5cb1a0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56121e5cb180 <col:14> 'int' 6
|-CXXMethodDecl 0x56121e5cb308 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56121e5cb3a8 <col:20>
| `-OptimizeNoneAttr 0x56121e5cb400 <col:30>
|-CXXMethodDecl 0x56121e5cb4f8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56121e5cb438 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56121e5cb5a0 <col:20>
| `-OptimizeNoneAttr 0x56121e5cb5f8 <col:30>
|-CXXMethodDecl 0x56121e5cb668 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56121e5cb790 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56121e5cb908 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56121e5cb840 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56121e5cb9d0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56121e5cba98 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56121e5cbbd8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56121e5cbb48 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56121e5cbc80 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56121e5cbd80 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56121e5cbf80 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cbd60 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56121e5cbd40 <col:23> 'int' 0
| |-EnumConstantDecl 0x56121e5cbe10 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56121e5cbf98 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cbdf0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56121e5cbdd0 <col:45> 'int' 4
| |-EnumConstantDecl 0x56121e5cbea0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56121e5cbfb0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cbe80 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56121e5cbe60 <col:24> 'int' 0
| `-EnumConstantDecl 0x56121e5cbf30 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56121e5cbfc8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5cbf10 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56121e5cbef0 <col:47> 'int' 16
|-CXXMethodDecl 0x56121e5cc028 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56121e5cc198 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56121e5cc0d8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56121e5cc240 <col:20>
| `-OptimizeNoneAttr 0x56121e5cc298 <col:30>
|-CXXMethodDecl 0x56121e5cc2e8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56121e5dfc70 <col:18, col:36>
|   `-ReturnStmt 0x56121e5dfc60 <col:20, col:33>
|     `-ImplicitCastExpr 0x56121e5dfc48 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56121e5dfc28 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56121e5dfbf8 <col:27> '<bound member function type>' ->xanno 0x56121e5ca348
|           `-CXXThisExpr 0x56121e5dfbe8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56121e5cc3e0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56121e5dfd80 <col:30, col:48>
|   `-ReturnStmt 0x56121e5dfd70 <col:32, col:45>
|     `-ImplicitCastExpr 0x56121e5dfd58 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56121e5dfd38 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56121e5dfd08 <col:39> '<bound member function type>' ->xanno 0x56121e5ca1a8
|           `-CXXThisExpr 0x56121e5dfcf8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56121e5cc4c8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56121e5dff18 <col:24, col:50>
|   `-ReturnStmt 0x56121e5dff08 <col:26, col:47>
|     `-UnaryOperator 0x56121e5dfef0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56121e5dfed0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56121e5dfeb8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56121e5dfe68 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56121e5d5188
|         |   `-CXXMemberCallExpr 0x56121e5dfe48 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56121e5dfe18 <col:34> '<bound member function type>' ->xanno 0x56121e5ca348
|         |       `-CXXThisExpr 0x56121e5dfe08 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56121e5dfe98 <col:46> 'int' 0
|-CXXMethodDecl 0x56121e5cc5d0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56121e5e00e8 <col:36, col:62>
|   `-ReturnStmt 0x56121e5e00d8 <col:38, col:59>
|     `-UnaryOperator 0x56121e5e00c0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56121e5e00a0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56121e5e0088 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56121e5e0000 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56121e5d5188
|         |   `-CXXMemberCallExpr 0x56121e5dffe0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56121e5dffb0 <col:46> '<bound member function type>' ->xanno 0x56121e5ca1a8
|         |       `-CXXThisExpr 0x56121e5dffa0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56121e5e0030 <col:58> 'int' 0
|-CXXMethodDecl 0x56121e5cc6e8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56121e5e0280 <col:26, col:53>
|   `-ReturnStmt 0x56121e5e0270 <col:28, col:50>
|     `-UnaryOperator 0x56121e5e0258 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56121e5e0238 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56121e5e0220 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56121e5e01d0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56121e5d5488
|         |   `-CXXMemberCallExpr 0x56121e5e01b0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56121e5e0180 <col:36> '<bound member function type>' ->xanno 0x56121e5ca348
|         |       `-CXXThisExpr 0x56121e5e0170 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56121e5e0200 <col:49> 'int' 0
|-CXXMethodDecl 0x56121e5cc808 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56121e5e0458 <col:38, col:65>
|   `-ReturnStmt 0x56121e5e0448 <col:40, col:62>
|     `-UnaryOperator 0x56121e5e0430 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56121e5e0410 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56121e5e03f8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56121e5e0368 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56121e5d5488
|         |   `-CXXMemberCallExpr 0x56121e5e0348 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56121e5e0318 <col:48> '<bound member function type>' ->xanno 0x56121e5ca1a8
|         |       `-CXXThisExpr 0x56121e5e0308 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56121e5e0398 <col:61> 'int' 0
|-CXXMethodDecl 0x56121e5cc9b8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56121e5cc8c0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56121e5e0b28 <col:34, line:463:5>
|   |-ParenExpr 0x56121e5e0970 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56121e5e0940 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e05a8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e0578 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e04c8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e04b0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e0470 <col:23> 'int' lvalue ParmVar 0x56121e5cc8c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e0490 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e0558 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e0528 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e04e8 <col:33> 'int' lvalue ParmVar 0x56121e5cc8c0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56121e5e0540 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56121e5e0508 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56121e5e0608 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e05e8 <col:56> 'int' 0
|   |   `-CallExpr 0x56121e5e08a0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e0888 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e0868 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e08e0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e06f8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56121e5e08f8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e0728 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e0910 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e0760 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56121e5e0928 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e0850 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e0838 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e07f8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56121e5e0b18 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56121e5e0b00 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56121e5e0ae0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56121e5e0ab0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56121e5e0a60 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56121e5d5188
|         |   `-CXXMemberCallExpr 0x56121e5e0a40 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56121e5e0a10 <col:9> '<bound member function type>' ->xanno 0x56121e5ca1a8
|         |       `-CXXThisExpr 0x56121e5e0a00 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56121e5e0ac8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56121e5e0a90 <col:21> 'int' lvalue ParmVar 0x56121e5cc8c0 'i' 'int'
|-CXXMethodDecl 0x56121e5ccc08 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56121e5cca78 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56121e5ccaf0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56121e5e11b8 <col:40, line:472:5>
|   |-ParenExpr 0x56121e5e0fd0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56121e5e0fa0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e0c80 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e0c50 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e0ba0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e0b88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e0b48 <col:23> 'int' lvalue ParmVar 0x56121e5cca78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e0b68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e0c30 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e0c00 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e0bc0 <col:33> 'int' lvalue ParmVar 0x56121e5cca78 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56121e5e0c18 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56121e5e0be0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56121e5e0ce0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e0cc0 <col:56> 'int' 0
|   |   `-CallExpr 0x56121e5e0f00 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e0ee8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e0ec8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e0f40 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e0d50 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56121e5e0f58 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e0d80 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e0f70 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e0db8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56121e5e0f88 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e0eb0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e0e98 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e0e58 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56121e5e1198 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56121e5e1140 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56121e5e1110 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56121e5e10c0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56121e5d5188
|     | |   `-CXXMemberCallExpr 0x56121e5e10a0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56121e5e1070 <col:2> '<bound member function type>' ->xanno 0x56121e5ca348
|     | |       `-CXXThisExpr 0x56121e5e1060 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56121e5e1128 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56121e5e10f0 <col:14> 'int' lvalue ParmVar 0x56121e5cca78 'i' 'int'
|     `-ImplicitCastExpr 0x56121e5e1180 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56121e5e1160 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56121e5ccaf0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56121e5ccdc8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56121e5cccd0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56121e5e1938 <col:36, line:485:5>
|   |-ParenExpr 0x56121e5e16a0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e1670 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e1350 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e1320 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e1230 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e1218 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e11d8 <col:23> 'int' lvalue ParmVar 0x56121e5cccd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e11f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e1300 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e12e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e1250 <col:33> 'int' lvalue ParmVar 0x56121e5cccd0 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e12c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e12b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e1270 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e1290 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56121e5e13b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e1390 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e15d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e15b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e1598 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e1610 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e1420 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56121e5e1628 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e1458 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e1640 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e1490 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56121e5e1658 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e1580 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e1568 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e1528 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56121e5e1928 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56121e5e1910 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56121e5e18f8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56121e5e18c8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56121e5e1868 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56121e5e1838 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56121e5e17b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56121e5d5060
|             |   `-CXXMemberCallExpr 0x56121e5e1790 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56121e5e1760 <col:61> '<bound member function type>' ->xanno 0x56121e5ca1a8
|             |       `-CXXThisExpr 0x56121e5e1750 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56121e5e1850 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56121e5e17e0 <col:74> 'int' lvalue ParmVar 0x56121e5cccd0 'i' 'int'
|-CXXMethodDecl 0x56121e5cd018 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56121e5cce88 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56121e5ccf00 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56121e5e2088 <col:42, line:500:5>
|   |-ParenExpr 0x56121e5e1e20 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e1df0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e1ad0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e1aa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e19b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e1998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e1958 <col:23> 'int' lvalue ParmVar 0x56121e5cce88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e1978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e1a80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e1a68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e19d0 <col:33> 'int' lvalue ParmVar 0x56121e5cce88 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e1a48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e1a30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e19f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e1a10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56121e5e1b30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e1b10 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e1d50 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e1d38 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e1d18 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e1d90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e1ba0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56121e5e1da8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e1bd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e1dc0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e1c10 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56121e5e1dd8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e1d00 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e1ce8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e1ca8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56121e5e2068 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56121e5e2018 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56121e5e1fe8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56121e5e1f90 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56121e5e1f60 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56121e5e1f10 <col:48, col:57> 'char [48]' lvalue ->c 0x56121e5d5060
|     |     |   `-CXXMemberCallExpr 0x56121e5e1ef0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56121e5e1ec0 <col:48> '<bound member function type>' ->xanno 0x56121e5ca348
|     |     |       `-CXXThisExpr 0x56121e5e1eb0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56121e5e1f78 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56121e5e1f40 <col:61> 'int' lvalue ParmVar 0x56121e5cce88 'i' 'int'
|     `-ImplicitCastExpr 0x56121e5e2050 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56121e5e2030 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56121e5ccf00 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56121e5cd1d8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56121e5cd0e0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56121e5e27e8 <col:35, line:513:5>
|   |-ParenExpr 0x56121e5e24f8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e24c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e2220 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e21f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e2100 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e20e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e20a8 <col:23> 'int' lvalue ParmVar 0x56121e5cd0e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e20c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e21d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e21b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e2120 <col:33> 'int' lvalue ParmVar 0x56121e5cd0e0 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e2198 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e2180 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e2140 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e2160 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56121e5e2280 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e2260 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e2428 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e2410 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e23f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e2468 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e22f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56121e5e2480 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e2328 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e2498 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e2360 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56121e5e24b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e23d8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e23c0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e2380 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56121e5e27d8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56121e5e27c0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56121e5e27a8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56121e5e2778 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56121e5e26f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56121e5e26c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56121e5e2670 <col:60, col:69> 'char const[48]' lvalue ->c 0x56121e5d5060
|             |   `-CXXMemberCallExpr 0x56121e5e2650 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56121e5e2620 <col:60> '<bound member function type>' ->xanno 0x56121e5ca1a8
|             |       `-CXXThisExpr 0x56121e5e2610 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56121e5e26d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56121e5e26a0 <col:73> 'int' lvalue ParmVar 0x56121e5cd0e0 'i' 'int'
|-CXXMethodDecl 0x56121e5cd428 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56121e5cd298 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56121e5cd310 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56121e5e2f08 <col:41, line:528:5>
|   |-ParenExpr 0x56121e5e2c90 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e2c60 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e2980 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e2950 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e2860 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e2848 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e2808 <col:23> 'int' lvalue ParmVar 0x56121e5cd298 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e2828 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e2930 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e2918 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e2880 <col:33> 'int' lvalue ParmVar 0x56121e5cd298 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e28f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e28e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e28a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e28c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56121e5e29e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e29c0 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e2bc0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e2ba8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e2b88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e2c00 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e2a50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56121e5e2c18 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e2a88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e2c30 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e2ac0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56121e5e2c48 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e2b70 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e2b58 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e2b18 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56121e5e2ee8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56121e5e2e98 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56121e5e2e68 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56121e5e2e10 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56121e5e2dd0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56121e5e2d80 <col:47, col:56> 'char [48]' lvalue ->c 0x56121e5d5060
|     |     |   `-CXXMemberCallExpr 0x56121e5e2d60 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56121e5e2d30 <col:47> '<bound member function type>' ->xanno 0x56121e5ca348
|     |     |       `-CXXThisExpr 0x56121e5e2d20 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56121e5e2de8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56121e5e2db0 <col:60> 'int' lvalue ParmVar 0x56121e5cd298 'i' 'int'
|     `-ImplicitCastExpr 0x56121e5e2ed0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56121e5e2eb0 <col:65> 'int16_t':'short' lvalue ParmVar 0x56121e5cd310 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56121e5cd5e8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56121e5cd4f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56121e5e35d8 <col:36, line:541:5>
|   |-ParenExpr 0x56121e5e3378 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e3348 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e30a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e3070 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e2f80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e2f68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e2f28 <col:23> 'int' lvalue ParmVar 0x56121e5cd4f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e2f48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e3050 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e3038 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e2fa0 <col:33> 'int' lvalue ParmVar 0x56121e5cd4f0 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e3018 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e3000 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e2fc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e2fe0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56121e5e3100 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e30e0 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e32a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e3290 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e3270 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e32e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e3170 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56121e5e3300 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e31a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e3318 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e31e0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56121e5e3330 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e3258 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e3240 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e3200 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56121e5e35c8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56121e5e35b0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56121e5e3598 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56121e5e3568 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56121e5e3510 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56121e5e34e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56121e5e3490 <col:61, col:70> 'char const[48]' lvalue ->c 0x56121e5d5060
|             |   `-CXXMemberCallExpr 0x56121e5e3470 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56121e5e3440 <col:61> '<bound member function type>' ->xanno 0x56121e5ca1a8
|             |       `-CXXThisExpr 0x56121e5e3430 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56121e5e34f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56121e5e34c0 <col:74> 'int' lvalue ParmVar 0x56121e5cd4f0 'i' 'int'
|-CXXMethodDecl 0x56121e5cd7b8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56121e5cd6a8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56121e5cd720 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56121e5cd868 <col:20>
| `-OptimizeNoneAttr 0x56121e5cd8c0 <col:30>
|-CXXMethodDecl 0x56121e5cd9f8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56121e5cd900 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56121e5e3ca8 <col:35, line:562:5>
|   |-ParenExpr 0x56121e5e3a48 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e3a18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e3770 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e3740 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e3650 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e3638 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e35f8 <col:23> 'int' lvalue ParmVar 0x56121e5cd900 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e3618 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e3720 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e3708 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e3670 <col:33> 'int' lvalue ParmVar 0x56121e5cd900 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e36e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e36d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e3690 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e36b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56121e5e37d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e37b0 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e3978 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e3960 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e3940 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e39b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e3840 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56121e5e39d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e3878 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e39e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e38b0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56121e5e3a00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e3928 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e3910 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e38d0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56121e5e3c98 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56121e5e3c80 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56121e5e3c68 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56121e5e3c38 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56121e5e3be0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56121e5e3bb0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56121e5e3b60 <col:60, col:69> 'char const[48]' lvalue ->c 0x56121e5d5060
|             |   `-CXXMemberCallExpr 0x56121e5e3b40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56121e5e3b10 <col:60> '<bound member function type>' ->xanno 0x56121e5ca1a8
|             |       `-CXXThisExpr 0x56121e5e3b00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56121e5e3bc8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56121e5e3b90 <col:73> 'int' lvalue ParmVar 0x56121e5cd900 'i' 'int'
|-CXXMethodDecl 0x56121e5cdc08 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56121e5cdab8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56121e5cdb30 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56121e5e4388 <col:41, line:577:5>
|   |-ParenExpr 0x56121e5e4118 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e40e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e3e40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e3e10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e3d20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e3d08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e3cc8 <col:23> 'int' lvalue ParmVar 0x56121e5cdab8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e3ce8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e3df0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e3dd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e3d40 <col:33> 'int' lvalue ParmVar 0x56121e5cdab8 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e3db8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e3da0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e3d60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e3d80 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56121e5e3ea0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e3e80 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e4048 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e4030 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e4010 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e4088 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e3f10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56121e5e40a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e3f48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e40b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e3f80 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56121e5e40d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e3ff8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e3fe0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e3fa0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56121e5e4368 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56121e5e4318 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56121e5e42e8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56121e5e4288 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56121e5e4258 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56121e5e4208 <col:47, col:56> 'char [48]' lvalue ->c 0x56121e5d5060
|     |     |   `-CXXMemberCallExpr 0x56121e5e41e8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56121e5e41b8 <col:47> '<bound member function type>' ->xanno 0x56121e5ca348
|     |     |       `-CXXThisExpr 0x56121e5e41a8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56121e5e4270 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56121e5e4238 <col:60> 'int' lvalue ParmVar 0x56121e5cdab8 'i' 'int'
|     `-ImplicitCastExpr 0x56121e5e4350 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56121e5e4330 <col:65> 'int32_t':'int' lvalue ParmVar 0x56121e5cdb30 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56121e5cddc8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56121e5cdcd0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56121e5e4ab8 <col:36, line:591:5>
|   |-ParenExpr 0x56121e5e47f8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e47c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e4520 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e44f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e4400 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e43e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e43a8 <col:23> 'int' lvalue ParmVar 0x56121e5cdcd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e43c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e44d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e44b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e4420 <col:33> 'int' lvalue ParmVar 0x56121e5cdcd0 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e4498 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e4480 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e4440 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e4460 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56121e5e4580 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e4560 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e4728 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e4710 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e46f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e4768 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e45f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56121e5e4780 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e4628 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e4798 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e4660 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56121e5e47b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e46d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e46c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e4680 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56121e5e4aa8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56121e5e4a90 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56121e5e4a78 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56121e5e4a48 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56121e5e49c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56121e5e4990 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56121e5e4940 <col:61, col:70> 'char const[48]' lvalue ->c 0x56121e5d5060
|             |   `-CXXMemberCallExpr 0x56121e5e4920 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56121e5e48f0 <col:61> '<bound member function type>' ->xanno 0x56121e5ca1a8
|             |       `-CXXThisExpr 0x56121e5e48e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56121e5e49a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56121e5e4970 <col:74> 'int' lvalue ParmVar 0x56121e5cdcd0 'i' 'int'
|-CXXMethodDecl 0x56121e5ce018 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56121e5cde88 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56121e5cdf00 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56121e5e5198 <col:42, line:606:5>
|   |-ParenExpr 0x56121e5e4f28 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56121e5e4ef8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e4c50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e4c20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e4b30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e4b18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e4ad8 <col:23> 'int' lvalue ParmVar 0x56121e5cde88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e4af8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e4c00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56121e5e4be8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e4b50 <col:33> 'int' lvalue ParmVar 0x56121e5cde88 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e4bc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e4bb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e4b70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56121e5e4b90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56121e5e4cb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e4c90 <col:60> 'int' 0
|   |   `-CallExpr 0x56121e5e4e58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e4e40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e4e20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e4e98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e4d20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56121e5e4eb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e4d58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e4ec8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e4d90 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56121e5e4ee0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e4e08 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e4df0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e4db0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56121e5e5178 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56121e5e5128 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56121e5e50f8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56121e5e5098 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56121e5e5068 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56121e5e5018 <col:48, col:57> 'char [48]' lvalue ->c 0x56121e5d5060
|     |     |   `-CXXMemberCallExpr 0x56121e5e4ff8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56121e5e4fc8 <col:48> '<bound member function type>' ->xanno 0x56121e5ca348
|     |     |       `-CXXThisExpr 0x56121e5e4fb8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56121e5e5080 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56121e5e5048 <col:61> 'int' lvalue ParmVar 0x56121e5cde88 'i' 'int'
|     `-ImplicitCastExpr 0x56121e5e5160 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56121e5e5140 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56121e5cdf00 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56121e5ce1b0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56121e5ce0e0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56121e5e5a08 <col:33, line:620:5>
|   |-ParenExpr 0x56121e5e5780 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56121e5e5750 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e53a0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e5370 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e5210 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e51f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e51b8 <col:23> 'int' lvalue ParmVar 0x56121e5ce0e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e51d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e5350 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56121e5e5338 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e5230 <col:33> 'int' lvalue ParmVar 0x56121e5ce0e0 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e5318 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e5300 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e5250 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56121e5e52d8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56121e5e52c0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56121e5e5288 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56121e5e5400 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e53e0 <col:79> 'int' 0
|   |   `-CallExpr 0x56121e5e56b0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e5698 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e5678 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e56f0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e54e8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56121e5e5708 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e5530 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e5720 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e5568 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56121e5e5738 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e5660 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e5648 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e5608 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56121e5e59f8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56121e5e59e0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56121e5e59c8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56121e5e5998 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56121e5e5910 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56121e5e58e0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56121e5e5890 <col:67, col:76> 'char const[48]' lvalue ->c 0x56121e5d5060
|             |   `-CXXMemberCallExpr 0x56121e5e5870 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56121e5e5840 <col:67> '<bound member function type>' ->xanno 0x56121e5ca1a8
|             |       `-CXXThisExpr 0x56121e5e5830 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56121e5e58f8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56121e5e58c0 <col:80> 'int' lvalue ParmVar 0x56121e5ce0e0 'i' 'int'
|-CXXMethodDecl 0x56121e5ce3c8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56121e5ce270 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56121e5ce2f0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56121e5e6230 <col:45, line:635:5>
|   |-ParenExpr 0x56121e5e5f78 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56121e5e5f48 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56121e5e5c10 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56121e5e5be0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56121e5e5a80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56121e5e5a68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56121e5e5a28 <col:23> 'int' lvalue ParmVar 0x56121e5ce270 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56121e5e5a48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56121e5e5bc0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56121e5e5ba8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56121e5e5aa0 <col:33> 'int' lvalue ParmVar 0x56121e5ce270 'i' 'int'
|   |   |     `-BinaryOperator 0x56121e5e5b88 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56121e5e5b70 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56121e5e5ac0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56121e5ca590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56121e5e5b48 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56121e5e5b30 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56121e5e5af8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56121e5e5c70 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56121e5e5c50 <col:79> 'int' 0
|   |   `-CallExpr 0x56121e5e5ea8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56121e5e5e90 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56121e5e5e70 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56121e5e5ee8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e5ce0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56121e5e5f00 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56121e5e5d28 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56121e5e5f18 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56121e5e5d60 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56121e5e5f30 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56121e5e5e58 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56121e5e5e40 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56121e5e5df8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56121e5e6210 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56121e5e6178 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56121e5e6148 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56121e5e60e8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56121e5e60b8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56121e5e6068 <col:54, col:63> 'char [48]' lvalue ->c 0x56121e5d5060
|     |     |   `-CXXMemberCallExpr 0x56121e5e6048 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56121e5e6018 <col:54> '<bound member function type>' ->xanno 0x56121e5ca348
|     |     |       `-CXXThisExpr 0x56121e5e6008 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56121e5e60d0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56121e5e6098 <col:67> 'int' lvalue ParmVar 0x56121e5ce270 'i' 'int'
|     `-CXXConstCastExpr 0x56121e5e61e0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56121e5e61c8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56121e5e6190 <col:91> 'const void *' lvalue ParmVar 0x56121e5ce2f0 'x' 'const void *'
|-CXXMethodDecl 0x56121e5ce498 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56121e5e62b8 <col:34, line:640:5>
|   `-ReturnStmt 0x56121e5e62a8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56121e5e6290 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56121e5e6260 <col:16> 'Packet *' lvalue ->_data_packet 0x56121e5d5c18
|         `-CXXThisExpr 0x56121e5e6250 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56121e5ce5d8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56121e5ce548 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56121e5df378 <col:46> 'bool' true
|-CXXMethodDecl 0x56121e5ce758 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56121e5ce690 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56121e5ce800 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56121e5cefb0 <line:660:22> "" ""
| |-EnumConstantDecl 0x56121e5ce900 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf020 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ce8e0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56121e5ce8c0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56121e5c3a60 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56121e5ce990 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf038 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ce970 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56121e5ce950 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56121e5c3af0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56121e5cea20 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf050 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cea00 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56121e5ce9e0 <col:21> 'int' 0
| |-EnumConstantDecl 0x56121e5ceab0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf068 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cea90 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56121e5cea70 <col:19> 'int' 16
| |-EnumConstantDecl 0x56121e5ceb40 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf080 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ceb20 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56121e5ceb00 <col:21> 'int' 16
| |-EnumConstantDecl 0x56121e5cebd0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf098 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cebb0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56121e5ceb90 <col:19> 'int' 32
| |-EnumConstantDecl 0x56121e5cec60 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf0b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cec40 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56121e5cec20 <col:19> 'int' EnumConstant 0x56121e5ceab0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56121e5cecf0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf0c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cecd0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56121e5cecb0 <col:19> 'int' EnumConstant 0x56121e5cebd0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56121e5cedc0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf0e0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5ceda0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56121e5ced80 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56121e5ced40 <col:23> 'int' EnumConstant 0x56121e5cecf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56121e5ced60 <col:40> 'int' 2
| |-EnumConstantDecl 0x56121e5cee90 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56121e5cf0f8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56121e5cee70 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56121e5cee50 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56121e5cee10 <col:23> 'int' EnumConstant 0x56121e5cecf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56121e5cee30 <col:40> 'int' 4
| `-EnumConstantDecl 0x56121e5cef60 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56121e5cf110 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5cef40 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56121e5cef20 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56121e5ceee0 <col:23> 'int' EnumConstant 0x56121e5cecf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56121e5cef00 <col:40> 'int' 8
|-CXXMethodDecl 0x56121e5cf150 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56121e5cf1f0 <col:68> "" ""
|-CXXMethodDecl 0x56121e5cf288 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56121e5cf328 <col:45> "" ""
|-CXXMethodDecl 0x56121e5cf3c0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56121e5cf460 <col:57> "" ""
|-CXXMethodDecl 0x56121e5cf4f8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56121e5cf598 <col:45> "" ""
|-CXXMethodDecl 0x56121e5cf630 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56121e5cf6d0 <col:57> "" ""
|-CXXMethodDecl 0x56121e5cf760 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56121e5cf800 <col:51> "" ""
|-CXXMethodDecl 0x56121e5cf890 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56121e5cf930 <col:63> "" ""
|-CXXMethodDecl 0x56121e5cf9c0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56121e5cfa60 <col:53> "" ""
|-CXXMethodDecl 0x56121e5cfaf0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56121e5cfb90 <col:65> "" ""
|-CXXMethodDecl 0x56121e5cfca8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56121e5cfc18 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56121e5cfd50 <col:61> "" ""
|-CXXMethodDecl 0x56121e5cfee8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56121e5cfdd8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56121e5cfe50 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56121e5cff98 <col:67> "" ""
|-CXXMethodDecl 0x56121e5d00b0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56121e5d0020 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56121e5d0158 <col:63> "" ""
|-CXXMethodDecl 0x56121e5d02f0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56121e5d01e0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56121e5d0258 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56121e5d03a0 <col:69> "" ""
|-CXXMethodDecl 0x56121e5d04b8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56121e5d0428 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56121e5d0560 <col:63> "" ""
|-CXXMethodDecl 0x56121e5d2c38 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56121e5d2b28 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56121e5d2ba0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e5d2ce8 <col:69> "" ""
|-CXXMethodDecl 0x56121e5d2e00 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56121e5d2d70 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56121e5d2ea8 <col:62> "" ""
|-CXXMethodDecl 0x56121e5d3040 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56121e5d2f30 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56121e5d2fa8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56121e5d30f0 <col:68> "" ""
|-CXXMethodDecl 0x56121e5d3208 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56121e5d3178 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56121e5d32b0 <col:63> "" ""
|-CXXMethodDecl 0x56121e5d3448 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56121e5d3338 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56121e5d33b0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56121e5d34f8 <col:69> "" ""
|-CXXMethodDecl 0x56121e5d3588 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56121e5d3628 <col:64> "" ""
|-CXXMethodDecl 0x56121e5d36b8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56121e5d3758 <col:52> "" ""
|-CXXMethodDecl 0x56121e5d37e8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56121e5d3888 <col:67> "" ""
|-CXXMethodDecl 0x56121e5d3918 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56121e5d39b8 <col:55> "" ""
|-CXXMethodDecl 0x56121e5d3ad0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56121e5d3a40 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56121e5d3b78 <col:58> "" ""
|-CXXMethodDecl 0x56121e5d3d10 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56121e5d3c00 <col:33> col:36 'int'
| |-ParmVarDecl 0x56121e5d3c78 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56121e5d3dc0 <col:62> "" ""
|-CXXMethodDecl 0x56121e5d3ed8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56121e5d3e48 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56121e5d3f80 <col:58> "" ""
|-CXXMethodDecl 0x56121e5d4118 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56121e5d4008 <col:33> col:36 'int'
| |-ParmVarDecl 0x56121e5d4080 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56121e5d41c8 <col:62> "" ""
|-CXXMethodDecl 0x56121e5d42e0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56121e5d4250 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56121e5d4388 <col:60> "" ""
|-CXXMethodDecl 0x56121e5d4520 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56121e5d4410 <col:34> col:37 'int'
| |-ParmVarDecl 0x56121e5d4488 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56121e5d45d0 <col:64> "" ""
|-CXXMethodDecl 0x56121e5d46e8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56121e5d4658 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56121e5d4790 <col:58> "" ""
|-CXXMethodDecl 0x56121e5d4928 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56121e5d4818 <col:33> col:36 'int'
| |-ParmVarDecl 0x56121e5d4890 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56121e5d49d8 <col:62> "" ""
|-CXXMethodDecl 0x56121e5d4af0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56121e5d4a60 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56121e5d4b98 <col:59> "" ""
|-CXXMethodDecl 0x56121e5d4d30 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56121e5d4c20 <col:33> col:36 'int'
| |-ParmVarDecl 0x56121e5d4c98 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e5d4de0 <col:63> "" ""
|-AccessSpecDecl 0x56121e5d4e50 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56121e5d4e78 prev 0x56121e5ca080 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56121e5d4f70 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56121e5d5060 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56121e5d5188 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56121e5d5308 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56121e5d5488 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56121e5d5608 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56121e5e6438 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56121e5e6ca8 <col:11>
| |-CXXDestructorDecl 0x56121e5e6510 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56121e5e6648 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56121e5e6648
| | `-ParmVarDecl 0x56121e5e6758 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56121e5e67f8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56121e5e67f8
| | `-ParmVarDecl 0x56121e5e6908 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56121e5e96c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56121e5e97d8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56121e5e9a58 <col:11>
| |   `-ReturnStmt 0x56121e5e9a48 <col:11>
| |     `-UnaryOperator 0x56121e5e9a30 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56121e5e9a20 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56121e5e9848 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56121e5e9848
|   `-ParmVarDecl 0x56121e5e9958 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56121e5d5670 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56121e5d5788 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56121e5d5828 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56121e5d5890 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56121e5d58f8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56121e5d5960 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56121e5d59c0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56121e5d5a80 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56121e5d5ae0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56121e5d5b40 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56121e5e6348 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56121e5d5828 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56121e5e6cb8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56121e5e6d10 <col:12>
| |-CXXConstructorDecl 0x56121e5e6978 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56121e5e6978
| | `-ParmVarDecl 0x56121e5e6a88 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56121e5e6b28 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56121e5e6b28
| | `-ParmVarDecl 0x56121e5e6c38 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56121e5e8db0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56121e5d5bb8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56121e5d5c18 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56121e5d5c80 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56121e5d5ce8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56121e5d5d50 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56121e5d5db8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56121e5d5e18 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56121e5d5e78 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56121e5d5ee0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56121e5d5f68 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56121e5d5bb8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56121e5e62e0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56121e5d5e18 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56121e5e6d20 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56121e5e6d80 <col:21, line:755:5>
|-CXXConstructorDecl 0x56121e5d6108 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56121e5d6048 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56121e5d6200 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56121e5d63e8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56121e5d62f0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56121e5d66b8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56121e5d64a0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56121e5d6518 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56121e5d6590 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5d68d8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56121e5d6788 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56121e5d6800 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56121e5deeb8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56121e5d6998 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56121e5d6a10 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56121e5d6a88 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56121e5df010 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56121e5def80 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e5df158 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56121e5df0c8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56121e5df250 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e3d0680 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56121e3d0798 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56121e3d0838 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56121e3d0898 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56121e3d08f8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56121e3d09a8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e3d0cb0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56121e3d0dc8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56121e3d0e70 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56121e3d0ed8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56121e3d0f68 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56121e3d7000 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56121e3d7438 <col:12>
|-CXXConstructorDecl 0x56121e3d7108 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e3d7218 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56121e3d0e70 'data' 'const char *'
| | `-ImplicitCastExpr 0x56121e3d99c0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56121e3d9990 <col:12> 'const char *const' lvalue .data 0x56121e3d0e70
| |     `-DeclRefExpr 0x56121e3d9970 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3d7218 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56121e3d0ed8 'length' 'int'
| | `-ImplicitCastExpr 0x56121e3d9a50 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56121e3d9a20 <col:12> 'const int' lvalue .length 0x56121e3d0ed8
| |     `-DeclRefExpr 0x56121e3d9a00 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3d7218 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56121e3d0f68 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56121e3d9ae0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56121e3d9ab0 <col:12> 'String::memo_t *const' lvalue .memo 0x56121e3d0f68
| |     `-DeclRefExpr 0x56121e3d9a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3d7218 '' 'const String::rep_t &'
| `-CompoundStmt 0x56121e3d9b38 <col:12>
|-CXXConstructorDecl 0x56121e3d72b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56121e3d72b8
| `-ParmVarDecl 0x56121e3d73c8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56121e3dc920 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56121e3e8338 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56121e3e8448 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56121e3e8960 <col:12>
|   |-BinaryOperator 0x56121e3e8778 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56121e3e8730 <col:12> 'const char *' lvalue ->data 0x56121e3d0e70
|   | | `-CXXThisExpr 0x56121e3e8720 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56121e3e8760 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56121e3e86f0 <col:12> 'const char *const' lvalue .data 0x56121e3d0e70
|   |     `-DeclRefExpr 0x56121e3e86d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3e8448 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56121e3e8840 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56121e3e87f8 <col:12> 'int' lvalue ->length 0x56121e3d0ed8
|   | | `-CXXThisExpr 0x56121e3e87e8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56121e3e8828 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56121e3e87b8 <col:12> 'const int' lvalue .length 0x56121e3d0ed8
|   |     `-DeclRefExpr 0x56121e3e8798 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3e8448 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56121e3e8908 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56121e3e88c0 <col:12> 'String::memo_t *' lvalue ->memo 0x56121e3d0f68
|   | | `-CXXThisExpr 0x56121e3e88b0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56121e3e88f0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56121e3e8880 <col:12> 'String::memo_t *const' lvalue .memo 0x56121e3d0f68
|   |     `-DeclRefExpr 0x56121e3e8860 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3e8448 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56121e3e8950 <col:12>
|     `-UnaryOperator 0x56121e3e8938 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56121e3e8928 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56121e3e84b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56121e3e84b8
  `-ParmVarDecl 0x56121e3e85c8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e3c7bf0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56121e3c7d08 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56121e3c7d98 <col:16, col:22> col:16 public
|-TypedefDecl 0x56121e3c7dd8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56121e09adc0 'const char *'
|   `-QualType 0x56121e09a311 'const char' const
|     `-BuiltinType 0x56121e09a310 'char'
|-TypedefDecl 0x56121e3c7e60 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56121e3c7e30 'String::const_iterator' sugar
|   |-Typedef 0x56121e3c7dd8 'const_iterator'
|   `-PointerType 0x56121e09adc0 'const char *'
|     `-QualType 0x56121e09a311 'const char' const
|       `-BuiltinType 0x56121e09a310 'char'
|-TypedefDecl 0x56121e3c7fd0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56121e3c7f40 'int (String::*)() const'
|   |-RecordType 0x56121e3c7c80 'String'
|   | `-CXXRecord 0x56121e3c7bf0 'String'
|   `-ParenType 0x56121e3c7ee0 'int () const' sugar
|     `-FunctionProtoType 0x56121e39ba70 'int () const' const cdecl
|       `-BuiltinType 0x56121e09a370 'int'
|-TypedefDecl 0x56121e3c8038 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56121e1f0650 'int64_t' sugar
|   |-Typedef 0x56121e1032d0 'int64_t'
|   `-TypedefType 0x56121e0dc4d0 '__int64_t' sugar
|     |-Typedef 0x56121e0dc0a8 '__int64_t'
|     `-BuiltinType 0x56121e09a390 'long'
|-TypedefDecl 0x56121e3c80a0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56121e1f0570 'uint64_t' sugar
|   |-Typedef 0x56121e103470 'uint64_t'
|   `-TypedefType 0x56121e0dc560 '__uint64_t' sugar
|     |-Typedef 0x56121e0dc118 '__uint64_t'
|     `-BuiltinType 0x56121e09a430 'unsigned long'
|-TypedefDecl 0x56121e3c8130 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56121e3c8100 'String::intmax_t' sugar
|   |-Typedef 0x56121e3c8038 'intmax_t'
|   `-TypedefType 0x56121e1f0650 'int64_t' sugar
|     |-Typedef 0x56121e1032d0 'int64_t'
|     `-TypedefType 0x56121e0dc4d0 '__int64_t' sugar
|       |-Typedef 0x56121e0dc0a8 '__int64_t'
|       `-BuiltinType 0x56121e09a390 'long'
|-TypedefDecl 0x56121e3c81c0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56121e3c8190 'String::uintmax_t' sugar
|   |-Typedef 0x56121e3c80a0 'uintmax_t'
|   `-TypedefType 0x56121e1f0570 'uint64_t' sugar
|     |-Typedef 0x56121e103470 'uint64_t'
|     `-TypedefType 0x56121e0dc560 '__uint64_t' sugar
|       |-Typedef 0x56121e0dc118 '__uint64_t'
|       `-BuiltinType 0x56121e09a430 'unsigned long'
|-CXXConstructorDecl 0x56121e3c8280 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56121e3c8428 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56121e3c8368 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56121e3c85d8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56121e3c8518 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56121e3c8730 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56121e3c86a0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56121e3c8948 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56121e3c87f8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56121e3c8878 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56121e3c8b68 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56121e3c8a18 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56121e3c8a98 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56121e3c8d88 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56121e3c8c38 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56121e3c8cb8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56121e3c8fa8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56121e3c8e58 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56121e3c8ed8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56121e3c9138 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56121e3c9070 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56121e3c92b8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56121e3c91f8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56121e3c9448 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56121e3c9380 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56121e3c95a0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56121e3c9510 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56121e3c96f8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56121e3c9668 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56121e3c9850 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56121e3c97c0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56121e3c99d8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56121e3c9918 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56121e3c9b68 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56121e3c9aa0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56121e3c9cf8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56121e3c9c30 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56121e3c9e88 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56121e3c9dc0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56121e3c9f80 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56121e3ca0a8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56121e3ca228 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56121e3ca160 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56121e3ca378 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56121e3ca2e8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56121e3ca430 <col:63> "" ""
|-CXXMethodDecl 0x56121e3ca578 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56121e3ca4b8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56121e3ca788 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56121e3ca638 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56121e3ca6b8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56121e3ca9a8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56121e3ca850 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56121e3ca8d0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56121e3cac88 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56121e3caa68 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56121e3caae8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56121e3d6ad0 <col:55> 'int' 10
| `-ParmVarDecl 0x56121e3cab60 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56121e3d6af0 <col:76> 'bool' true
|-CXXMethodDecl 0x56121e3caf68 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56121e3cad50 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56121e3cadd0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56121e3d6b00 <col:56> 'int' 10
| `-ParmVarDecl 0x56121e3cae48 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56121e3d6b20 <col:77> 'bool' true
|-CXXMethodDecl 0x56121e3cb070 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56121e3cb138 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56121e3cb200 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56121e3cb2a0 <col:20>
| `-OptimizeNoneAttr 0x56121e3cb2f8 <col:30>
|-CXXConversionDecl 0x56121e3cb3e8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56121e3cb4b8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56121e3cb578 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56121e3cb668 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56121e3cb728 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56121e3cb8a8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56121e3cb7e0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56121e3cb9f8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56121e3cb968 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56121e3cbae8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56121e3cbba8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56121e3cbdf8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56121e3cbc60 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56121e3cbce0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56121e3cc058 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56121e3cbec0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56121e3cbf40 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56121e3cc128 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56121e3cc338 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56121e3cc1e0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56121e3cc260 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56121e3cc558 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56121e3cc400 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56121e3cc480 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56121e3cc6e8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56121e3cc620 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56121e3cc7d8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56121e3cc948 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56121e3cc888 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56121e3ccb58 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56121e3cca08 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56121e3cca88 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56121e3ccd70 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56121e3ccc18 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56121e3ccc90 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56121e3ccf00 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56121e3cce30 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56121e3cd120 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56121e3ccfc0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56121e3cd040 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56121e3cd270 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56121e3cd1e0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56121e3cd448 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56121e3cd330 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56121e3cd3b0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56121e3cd598 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56121e3cd508 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56121e3cd7b0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56121e3cd650 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56121e3cd6d0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56121e3d6b30 <col:39> 'int' 0
|-CXXMethodDecl 0x56121e3cd9d0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56121e3cd870 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56121e3cd8f0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56121e3d6b50 <col:48> 'int' 0
|-CXXMethodDecl 0x56121e3cdbb0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56121e3cda90 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56121e3cdb10 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56121e3d6b70 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56121e3cdc80 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56121e3cdd40 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56121e3cde00 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56121e3cdec0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56121e3cdf80 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56121e3ce128 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56121e3ce030 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56121e3ce2a8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56121e3ce1e0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56121e3ce480 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56121e3ce368 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56121e3ce5f8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56121e3ce538 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56121e3ce740 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56121e3ce6b0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56121e3ce890 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56121e3ce800 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56121e3cea68 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56121e3ce950 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56121e3ce9d0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56121e3cec48 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56121e3ceb30 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56121e3cebb0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56121e3ced98 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56121e3ced08 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56121e3cefa8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56121e3cee58 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56121e3ceed8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56121e3cf108 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56121e3cf070 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56121e3cf260 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56121e3cf1c8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56121e3cf308 <col:57> "" ""
|-CXXMethodDecl 0x56121e3cf418 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56121e3cf388 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56121e3cf568 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56121e3cf4d8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56121e3cf6e8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56121e3cf620 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56121e3cf7b0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56121e3cf870 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56121e3cf930 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56121e3cf9d0 <col:49> "" ""
|-CXXMethodDecl 0x56121e3cfa60 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56121e3cfb20 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56121e3cfc10 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56121e3cfcd8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56121e3cfd98 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56121e3cfe58 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56121e3cff50 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56121e3d0018 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56121e3d00e0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56121e3d02b8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56121e3d0198 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56121e3d0218 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56121e3d04e0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56121e3d0380 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56121e3d0400 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56121e3d05f0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56121e3d0658 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56121e3d0680 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56121e3d0798 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56121e3d0838 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56121e3d0898 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56121e3d08f8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56121e3d09a8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56121e3d0a10 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56121e3d0c48 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56121e3d0c98 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e3d0c28 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56121e3d0b38 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56121e3d0ae0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56121e3d0b20 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56121e3d0b00 <col:32> 'int' 8
|-CXXRecordDecl 0x56121e3d0cb0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56121e3d0dc8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56121e3d0e70 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56121e3d0ed8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56121e3d0f68 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56121e3d7000 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56121e3d7438 <col:12>
| |-CXXConstructorDecl 0x56121e3d7108 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56121e3d7218 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56121e3d0e70 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56121e3d99c0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56121e3d9990 <col:12> 'const char *const' lvalue .data 0x56121e3d0e70
| | |     `-DeclRefExpr 0x56121e3d9970 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3d7218 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56121e3d0ed8 'length' 'int'
| | | `-ImplicitCastExpr 0x56121e3d9a50 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56121e3d9a20 <col:12> 'const int' lvalue .length 0x56121e3d0ed8
| | |     `-DeclRefExpr 0x56121e3d9a00 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3d7218 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56121e3d0f68 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56121e3d9ae0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56121e3d9ab0 <col:12> 'String::memo_t *const' lvalue .memo 0x56121e3d0f68
| | |     `-DeclRefExpr 0x56121e3d9a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3d7218 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56121e3d9b38 <col:12>
| |-CXXConstructorDecl 0x56121e3d72b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56121e3d72b8
| | `-ParmVarDecl 0x56121e3d73c8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56121e3dc920 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56121e3e8338 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56121e3e8448 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56121e3e8960 <col:12>
| |   |-BinaryOperator 0x56121e3e8778 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56121e3e8730 <col:12> 'const char *' lvalue ->data 0x56121e3d0e70
| |   | | `-CXXThisExpr 0x56121e3e8720 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56121e3e8760 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56121e3e86f0 <col:12> 'const char *const' lvalue .data 0x56121e3d0e70
| |   |     `-DeclRefExpr 0x56121e3e86d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3e8448 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56121e3e8840 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56121e3e87f8 <col:12> 'int' lvalue ->length 0x56121e3d0ed8
| |   | | `-CXXThisExpr 0x56121e3e87e8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56121e3e8828 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56121e3e87b8 <col:12> 'const int' lvalue .length 0x56121e3d0ed8
| |   |     `-DeclRefExpr 0x56121e3e8798 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3e8448 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56121e3e8908 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56121e3e88c0 <col:12> 'String::memo_t *' lvalue ->memo 0x56121e3d0f68
| |   | | `-CXXThisExpr 0x56121e3e88b0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56121e3e88f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56121e3e8880 <col:12> 'String::memo_t *const' lvalue .memo 0x56121e3d0f68
| |   |     `-DeclRefExpr 0x56121e3e8860 <col:12> 'const String::rep_t' lvalue ParmVar 0x56121e3e8448 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56121e3e8950 <col:12>
| |     `-UnaryOperator 0x56121e3e8938 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56121e3e8928 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56121e3e84b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56121e3e84b8
|   `-ParmVarDecl 0x56121e3e85c8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56121e3d0fe0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56121e3d1228 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56121e3d1048 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56121e3d10c8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56121e3d1140 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56121e3d6fc0 <col:79, line:261:5>
|   |-BinaryOperator 0x56121e3d6c38 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56121e3d6bd0 <col:2, col:5> 'const char *' lvalue .data 0x56121e3d0e70
|   | | `-MemberExpr 0x56121e3d6ba0 <col:2> 'String::rep_t' lvalue ->_r 0x56121e3d0fe0
|   | |   `-CXXThisExpr 0x56121e3d6b90 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56121e3d6c20 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56121e3d6c00 <col:12> 'const char *' lvalue ParmVar 0x56121e3d1048 'data' 'const char *'
|   |-BinaryOperator 0x56121e3d6d00 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56121e3d6c98 <col:2, col:5> 'int' lvalue .length 0x56121e3d0ed8
|   | | `-MemberExpr 0x56121e3d6c68 <col:2> 'String::rep_t' lvalue ->_r 0x56121e3d0fe0
|   | |   `-CXXThisExpr 0x56121e3d6c58 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56121e3d6ce8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56121e3d6cc8 <col:14> 'int' lvalue ParmVar 0x56121e3d10c8 'length' 'int'
|   `-IfStmt 0x56121e3d6fa8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56121e3d6e20 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56121e3d6e08 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56121e3d6de8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56121e3d6dc8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56121e3d6d60 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56121e3d0f68
|     |       | `-MemberExpr 0x56121e3d6d30 <col:7> 'String::rep_t' lvalue ->_r 0x56121e3d0fe0
|     |       |   `-CXXThisExpr 0x56121e3d6d20 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56121e3d6db0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56121e3d6d90 <col:17> 'String::memo_t *' lvalue ParmVar 0x56121e3d1140 'memo' 'String::memo_t *'
|     `-CallExpr 0x56121e3d6f80 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56121e3d6f68 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56121e3d6e70 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56121e3bfc58 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56121e3d6ed8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56121e3d0838
|         `-ImplicitCastExpr 0x56121e3d6ec0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56121e3d6ea0 <col:27> 'String::memo_t *' lvalue ParmVar 0x56121e3d1140 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56121e3d14d8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56121e3d12f8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56121e3d1378 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56121e3d13f0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56121e3d0fe0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56121e3d7448 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56121e3d75d8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56121e3d7540 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56121e3d74b0 <col:2> '<bound member function type>' ->assign_memo 0x56121e3d1228
|     | `-ImplicitCastExpr 0x56121e3d7578 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56121e3d74a0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56121e3d7590 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56121e3d74e0 <col:14> 'const char *' lvalue ParmVar 0x56121e3d12f8 'data' 'const char *'
|     |-ImplicitCastExpr 0x56121e3d75a8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56121e3d7500 <col:20> 'int' lvalue ParmVar 0x56121e3d1378 'length' 'int'
|     `-ImplicitCastExpr 0x56121e3d75c0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56121e3d7520 <col:28> 'String::memo_t *' lvalue ParmVar 0x56121e3d13f0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56121e3d1668 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56121e3d15a8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56121e3d7830 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56121e3d77b0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56121e3d7600 <col:2> '<bound member function type>' ->assign_memo 0x56121e3d1228
|     | `-CXXThisExpr 0x56121e3d75f0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56121e3d77e8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56121e3d7680 <col:14, col:19> 'const char *' lvalue .data 0x56121e3d0e70
|     |   `-MemberExpr 0x56121e3d7650 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56121e3d0fe0
|     |     `-DeclRefExpr 0x56121e3d7630 <col:14> 'const String' lvalue ParmVar 0x56121e3d15a8 'x' 'const String &'
|     |-ImplicitCastExpr 0x56121e3d7800 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56121e3d7700 <col:25, col:30> 'int' lvalue .length 0x56121e3d0ed8
|     |   `-MemberExpr 0x56121e3d76d0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56121e3d0fe0
|     |     `-DeclRefExpr 0x56121e3d76b0 <col:25> 'const String' lvalue ParmVar 0x56121e3d15a8 'x' 'const String &'
|     `-ImplicitCastExpr 0x56121e3d7818 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56121e3d7780 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56121e3d0f68
|         `-MemberExpr 0x56121e3d7750 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56121e3d0fe0
|           `-DeclRefExpr 0x56121e3d7730 <col:38> 'const String' lvalue ParmVar 0x56121e3d15a8 'x' 'const String &'
|-CXXMethodDecl 0x56121e3d1730 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56121e3d81f0 <col:31, line:278:5>
|   `-IfStmt 0x56121e3d81d8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56121e3d78d0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56121e3d78b8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56121e3d7888 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56121e3d0f68
|     |     `-MemberExpr 0x56121e3d7858 <col:6> 'String::rep_t' lvalue ->_r 0x56121e3d0fe0
|     |       `-CXXThisExpr 0x56121e3d7848 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56121e3d81b0 <col:15, line:277:2>
|       |-ParenExpr 0x56121e3d7d80 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56121e3d7d50 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56121e3d79e0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56121e3d79c8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56121e3d79b0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56121e3d7970 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56121e3d0838
|       |   |       `-ImplicitCastExpr 0x56121e3d7958 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56121e3d7928 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56121e3d0f68
|       |   |           `-MemberExpr 0x56121e3d78f8 <col:27> 'String::rep_t' lvalue ->_r 0x56121e3d0fe0
|       |   |             `-CXXThisExpr 0x56121e3d78e8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56121e3d7a40 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56121e3d7a20 <col:54> 'int' 0
|       |   `-CallExpr 0x56121e3d7cb0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56121e3d7c98 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56121e3d7c18 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56121e136eb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56121e3d7cf0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56121e3d7b28 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56121e3d7d08 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56121e3d7b58 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56121e3d7d20 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56121e3d7b90 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56121e3d7d38 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56121e3d7c00 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56121e3d7be8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56121e3d7bb0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56121e3d80d0 <line:274:6, line:275:22>
|       | |-CallExpr 0x56121e3d7f90 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56121e3d7f78 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56121e3d7ef0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56121e3c10a0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56121e3d7ec0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56121e3d0838
|       | |   `-ImplicitCastExpr 0x56121e3d7ea8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56121e3d7e78 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56121e3d0f68
|       | |       `-MemberExpr 0x56121e3d7e48 <col:40> 'String::rep_t' lvalue ->_r 0x56121e3d0fe0
|       | |         `-CXXThisExpr 0x56121e3d7e38 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56121e3d8090 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56121e3d8078 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56121e3d7fb8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56121e3d5f10 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56121e3d80b8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56121e3d8018 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56121e3d0f68
|       |       `-MemberExpr 0x56121e3d7fe8 <col:15> 'String::rep_t' lvalue ->_r 0x56121e3d0fe0
|       |         `-CXXThisExpr 0x56121e3d7fd8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56121e3d8190 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56121e3d8128 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56121e3d0f68
|         | `-MemberExpr 0x56121e3d80f8 <col:6> 'String::rep_t' lvalue ->_r 0x56121e3d0fe0
|         |   `-CXXThisExpr 0x56121e3d80e8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56121e3d8178 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56121e3d8158 <col:16> 'int' 0
|-CXXMethodDecl 0x56121e3d19c8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56121e3d17e8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56121e3d1868 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56121e3d18e0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56121e3d1aa0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56121e3d1cf0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56121e3d1b58 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56121e3d1bd8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56121e3d1c50 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56121e3d1ed8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56121e3d1dc0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56121e3d1e40 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56121e3d1fd8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56121e3d82c8 <col:41, line:286:5>
|   `-ReturnStmt 0x56121e3d82b8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56121e3d8288 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56121e3d8250 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56121e3d8238 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56121e3d8218 <col:46> 'int' 1
|-CXXMethodDecl 0x56121e3d2278 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56121e3d2090 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56121e3d2110 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56121e3d2190 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56121e3d5f10 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56121e3d2340 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56121e3d5fe0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56121e3d61b0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56121e3d6098 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56121e3d6118 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56121e3d6270 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56121e3d6338 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56121e3d6438 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56121e3d64b0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56121e3d6528 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56121e3d6590 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56121e3d6690 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56121e3d66e0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e3d6670 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56121e3d6650 <col:22> 'int' 14
|-CXXMethodDecl 0x56121e3d68f8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56121e3d6710 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56121e3d6790 <col:38> col:41 'int'
| `-ParmVarDecl 0x56121e3d6810 <col:43> col:46 'int'
|-FriendDecl 0x56121e3d6a00 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56121e3d6a90 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e583828 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56121e583958 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x56121e584448 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56121e580128 prev 0x56121e5fc400 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56121e580220 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x56121e5802b0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x56121e580310 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x56121e5803b8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x56121e5804d8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x56121e580678 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x56121e5805b8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x56121e5808c8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x56121e580738 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x56121e5807b8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x56121e580a20 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x56121e580990 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x56121e580ba8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x56121e580ae0 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x56121e580d58 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x56121e580c98 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x56121e580e50 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x56121e584620 <col:21, line:58:5>
|   `-IfStmt 0x56121e584608 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x56121e584570 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x56121e584540 <col:6> '<bound member function type>' ->scheduled 0x56121e5816a8
|     |   `-ImplicitCastExpr 0x56121e584590 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x56121e584530 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x56121e5845e8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x56121e5845b8 <col:6> '<bound member function type>' ->unschedule 0x56121e582cd0
|         `-CXXThisExpr 0x56121e5845a8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x56121e580f50 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x56121e5847c0 <col:26, line:65:5>
|   |-BinaryOperator 0x56121e5846e0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56121e584678 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56121e583958
|   | | `-MemberExpr 0x56121e584648 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56121e583a18
|   | |   `-CXXThisExpr 0x56121e584638 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56121e5846c8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56121e5846a8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56121e583e78 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56121e5847a0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x56121e584710 <col:2> 'void *' lvalue ->_thunk 0x56121e583a98
|     | `-CXXThisExpr 0x56121e584700 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x56121e584778 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x56121e584740 <col:20> 'int' 1
|-CXXMethodDecl 0x56121e581090 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x56121e581000 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x56121e584920 <col:52, line:71:5>
|   |-CStyleCastExpr 0x56121e584810 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56121e5847e0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x56121e581000 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x56121e584900 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x56121e5848d0 <col:2> '<bound member function type>' ->assign 0x56121e580f50
|       `-CXXThisExpr 0x56121e5848c0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x56121e581260 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x56121e581148 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x56121e5811c8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x56121e634e00 <col:58, line:79:5>
|   |-BinaryOperator 0x56121e634d48 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56121e634ce0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56121e583958
|   | | `-MemberExpr 0x56121e584950 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56121e583a18
|   | |   `-CXXThisExpr 0x56121e584940 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56121e634d30 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x56121e634d10 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x56121e581148 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x56121e634de0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56121e634d78 <col:2> 'void *' lvalue ->_thunk 0x56121e583a98
|     | `-CXXThisExpr 0x56121e634d68 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56121e634dc8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x56121e634da8 <col:11> 'void *' lvalue ParmVar 0x56121e5811c8 'user_data' 'void *'
|-CXXMethodDecl 0x56121e5813b0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x56121e581320 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x56121e634f98 <col:35, line:87:5>
|   |-BinaryOperator 0x56121e634ec8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56121e634e60 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56121e583958
|   | | `-MemberExpr 0x56121e634e30 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56121e583a18
|   | |   `-CXXThisExpr 0x56121e634e20 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56121e634eb0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56121e634e90 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56121e584050 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56121e634f78 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56121e634ef8 <col:2> 'void *' lvalue ->_thunk 0x56121e583a98
|     | `-CXXThisExpr 0x56121e634ee8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56121e634f60 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56121e634f48 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x56121e634f28 <col:11> 'Element *' lvalue ParmVar 0x56121e581320 'element' 'Element *'
|-CXXMethodDecl 0x56121e5814f8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x56121e581468 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x56121e635130 <col:29, line:94:5>
|   |-BinaryOperator 0x56121e635060 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56121e634ff8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56121e583958
|   | | `-MemberExpr 0x56121e634fc8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56121e583a18
|   | |   `-CXXThisExpr 0x56121e634fb8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56121e635048 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56121e635028 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56121e584228 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56121e635110 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56121e635090 <col:2> 'void *' lvalue ->_thunk 0x56121e583a98
|     | `-CXXThisExpr 0x56121e635080 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56121e6350f8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56121e6350e0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x56121e6350c0 <col:11> 'Task *' lvalue ParmVar 0x56121e581468 'task' 'Task *'
|-CXXMethodDecl 0x56121e5815e8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x56121e635210 <col:37, line:100:5>
|   `-ReturnStmt 0x56121e635200 <line:99:2, col:19>
|     `-BinaryOperator 0x56121e6351e0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x56121e6351b0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x56121e635160 <col:9> 'Element *const' lvalue ->_owner 0x56121e583af8
|       |   `-CXXThisExpr 0x56121e635150 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x56121e6351c8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x56121e635190 <col:19> 'int' 0
|-CXXMethodDecl 0x56121e5816a8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x56121e6352d0 <col:35, line:105:5>
|   `-ReturnStmt 0x56121e6352c0 <line:104:2, col:23>
|     `-BinaryOperator 0x56121e6352a0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x56121e635288 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x56121e635238 <col:9> 'const int' lvalue ->_schedpos1 0x56121e583778
|       |   `-CXXThisExpr 0x56121e635228 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x56121e635268 <col:23> 'int' 0
|-CXXMethodDecl 0x56121e581768 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x56121e635338 <col:51, line:118:5>
|   `-ReturnStmt 0x56121e635328 <line:117:2, col:9>
|     `-MemberExpr 0x56121e6352f8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|       `-CXXThisExpr 0x56121e6352e8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56121e581828 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x56121e635890 <col:37, line:136:5>
|   `-IfStmt 0x56121e635868 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x56121e6353f8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x56121e6353e0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x56121e6353c0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x56121e635390 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x56121e58e4d8
|     |       `-MemberExpr 0x56121e635360 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|     |         `-CXXThisExpr 0x56121e635350 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x56121e6357d8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x56121e6357c0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x56121e635790 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x56121e635778 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x56121e635740 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x56121e635728 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x56121e635708 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56121e5bccb0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x56121e6356a8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x56121e635690 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x56121e6355b8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x56121e6355a0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x56121e635580 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56121e5bc970 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x56121e635520 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x56121e635420 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|     |         |     |   `-CXXThisExpr 0x56121e635410 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x56121e635568 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x56121e635550 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x56121e635500 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x56121e6354e8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x56121e635488 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x56121e5affd0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x56121e6356f0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x56121e6356d8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x56121e635670 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x56121e635658 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x56121e635628 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x56121e40b520 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x56121e635858 <line:135:6, col:13>
|       `-CXXConstructExpr 0x56121e635828 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x56121e6357f8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|           `-CXXThisExpr 0x56121e6357e8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x56121e5818e8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x56121e635978 <col:35, line:141:5>
|   `-ReturnStmt 0x56121e635968 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x56121e635930 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x56121e635900 <col:9, col:17> '<bound member function type>' ->router 0x56121e60eb60
|         `-ImplicitCastExpr 0x56121e635950 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56121e6358e8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56121e6358b8 <col:9> 'Element *const' lvalue ->_owner 0x56121e583af8
|               `-CXXThisExpr 0x56121e6358a8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56121e5819a8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x56121e6359f8 <col:37, line:146:5>
|   `-ReturnStmt 0x56121e6359e8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x56121e6359d0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56121e6359a0 <col:9> 'Element *const' lvalue ->_owner 0x56121e583af8
|         `-CXXThisExpr 0x56121e635990 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56121e581a68 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x56121e635a78 <col:41, line:151:5>
|   `-ReturnStmt 0x56121e635a68 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x56121e635a50 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x56121e635a20 <col:9> 'RouterThread *const' lvalue ->_thread 0x56121e583b58
|         `-CXXThisExpr 0x56121e635a10 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56121e581b30 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x56121e581cf0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56121e581be0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56121e581c58 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56121e584438 <col:50> 'bool' false
|-CXXMethodDecl 0x56121e581e78 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x56121e581db0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x56121e581fc0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56121e581f30 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56121e582108 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56121e582078 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56121e582250 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56121e5821c0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x56121e582398 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56121e582308 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x56121e582460 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x56121e635be0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x56121e635bc8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x56121e635b70 <col:2, col:47> 'void'
|       |-MemberExpr 0x56121e635aa0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56121e581fc0
|       | `-CXXThisExpr 0x56121e635a90 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56121e635bb0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56121e635b98 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56121e635b50 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x56121e635b38 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x56121e635b08 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x56121e40b520 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x56121e5825a0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x56121e582510 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x56121e5826e8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56121e582658 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e635d68 <col:56, line:241:5>
|   `-ExprWithCleanups 0x56121e635d50 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x56121e635cf8 <col:2, col:40> 'void'
|       |-MemberExpr 0x56121e635c08 <col:2> '<bound member function type>' ->schedule_after 0x56121e5825a0
|       | `-CXXThisExpr 0x56121e635bf8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56121e635d38 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56121e635d20 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56121e635cb8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x56121e635c88 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x56121e635c48 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e582658 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x56121e635ca0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56121e635c68 <col:38> 'int' 0
|-CXXMethodDecl 0x56121e582830 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56121e5827a0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e635fd8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x56121e635fc0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x56121e635f68 <col:2, col:49> 'void'
|       |-MemberExpr 0x56121e635d90 <col:2> '<bound member function type>' ->schedule_after 0x56121e5825a0
|       | `-CXXThisExpr 0x56121e635d80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56121e635fa8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56121e635f90 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56121e635f10 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x56121e635ef8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56121e635e68 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56121e5902c8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56121e635f50 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x56121e635f38 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56121e635e48 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e5827a0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e582978 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x56121e5828e8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x56121e6361b8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x56121e6361a0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x56121e636148 <col:2, col:38> 'void'
|       |-MemberExpr 0x56121e636000 <col:2> '<bound member function type>' ->schedule_at_steady 0x56121e581fc0
|       | `-CXXThisExpr 0x56121e635ff0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56121e636188 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56121e636170 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56121e636110 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56121e6360f8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56121e6360d8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56121e5bc970 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56121e6360a8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56121e636090 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56121e636040 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|             |     `-CXXThisExpr 0x56121e636030 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x56121e636070 <col:33> 'const Timestamp' lvalue ParmVar 0x56121e5828e8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x56121e582ac0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56121e582a30 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e636490 <col:58, line:270:5>
|   `-ExprWithCleanups 0x56121e636478 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x56121e636420 <col:2, col:79> 'void'
|       |-MemberExpr 0x56121e6361e0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56121e581fc0
|       | `-CXXThisExpr 0x56121e6361d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56121e636460 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56121e636448 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56121e6363e0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x56121e636318 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x56121e636300 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x56121e636290 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x56121e636260 <col:31, col:41> '<bound member function type>' .sec 0x56121e40d018
|             | |     `-ImplicitCastExpr 0x56121e6362b0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x56121e636230 <col:31> 'Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|             | |         `-CXXThisExpr 0x56121e636220 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x56121e6362e8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x56121e6362c8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e582a30 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x56121e6363a8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x56121e636378 <col:60, col:70> '<bound member function type>' .subsec 0x56121e40d710
|                 `-ImplicitCastExpr 0x56121e6363c8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x56121e636348 <col:60> 'Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|                     `-CXXThisExpr 0x56121e636338 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x56121e582c08 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56121e582b78 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56121e6367c8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x56121e6367b0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x56121e636758 <col:2, col:65> 'void'
|       |-MemberExpr 0x56121e6364b8 <col:2> '<bound member function type>' ->schedule_at_steady 0x56121e581fc0
|       | `-CXXThisExpr 0x56121e6364a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56121e636798 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56121e636780 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56121e636720 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x56121e636708 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56121e6366e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56121e5bc970 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56121e636688 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56121e636670 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56121e6364f8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|             |     `-CXXThisExpr 0x56121e6364e8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x56121e6366d0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x56121e6366b8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x56121e636618 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x56121e636600 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x56121e6365d0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56121e5902c8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x56121e636658 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x56121e636640 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x56121e6365b0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x56121e582b78 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56121e582cd0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x56121e582d90 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x56121e636c90 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x56121e636820 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x56121e6367f0 <col:2> '<bound member function type>' ->unschedule 0x56121e582cd0
|   |   `-CXXThisExpr 0x56121e6367e0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x56121e636c78 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x56121e636c40 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x56121e636c28 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56121e6368d8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56121e2a45b8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x56121e636850 <col:2> 'Timestamp' lvalue ->_expiry_s 0x56121e5837d8
|       | `-CXXThisExpr 0x56121e636840 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56121e6368c0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x56121e636890 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56121e582e50 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x56121e636fe8 <col:42, line:310:5>
|   |-IfStmt 0x56121e636e30 <line:306:2, line:307:23>
|   | |-CallExpr 0x56121e636d60 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x56121e636d48 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x56121e636ce8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x56121e5ae440 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x56121e636e20 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x56121e636e08 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x56121e636dd8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56121e636dc0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x56121e636d90 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x56121e636fd8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x56121e636fc0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x56121e636f90 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56121e636f78 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x56121e636f38 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56121e636f20 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56121e636ef0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56121e5905e0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56121e636f60 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x56121e636ed0 <col:30> 'int' 500
|-CXXMethodDecl 0x56121e582f90 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56121e582f00 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e583038 <col:69> "" ""
|-CXXMethodDecl 0x56121e583148 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56121e5830b8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e5831f0 <col:70> "" ""
|-CXXMethodDecl 0x56121e583300 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56121e583270 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e5833a8 <col:71> "" ""
|-CXXMethodDecl 0x56121e5834b8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56121e583428 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56121e583560 <col:72> "" ""
|-EnumDecl 0x56121e5835d0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x56121e5836d0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x56121e583720 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56121e5836b0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x56121e583690 <col:25> 'int' 1
|-AccessSpecDecl 0x56121e583738 <line:339:3, col:10> col:3 private
|-FieldDecl 0x56121e583778 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x56121e5837d8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x56121e583828 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56121e583958 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x56121e584448 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x56121e583a18 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x56121e583a98 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56121e583af8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x56121e583b58 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x56121e583ca8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x56121e583bb8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x56121e583e78 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56121e583d60 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x56121e583de0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x56121e584050 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56121e583f38 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x56121e583fb8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x56121e584228 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56121e584110 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x56121e584190 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x56121e5843f8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56121e63bd70 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x56121e6bfab8 <line:167:18>
|-CXXRecordDecl 0x56121e6bfb78 prev 0x56121e63bd70 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56121e6bfc88 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
