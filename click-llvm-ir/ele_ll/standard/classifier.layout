
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | union Classification::Wordwise::Insn::(anonymous at ../elements/standard/classification.hh:35:5)
         0 |   unsigned char [4] c
         0 |   uint32_t u
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Classification::Wordwise::Insn::(anonymous at ../elements/standard/classification.hh:39:5)
         0 |   unsigned char [4] c
         0 |   uint32_t u
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Classification::Wordwise::Insn
         0 |   uint16_t offset
         2 |   uint8_t padding
         3 |   uint8_t short_output
         4 |   union Classification::Wordwise::Insn::(anonymous at ../elements/standard/classification.hh:35:5) mask
         4 |     unsigned char [4] c
         4 |     uint32_t u
         8 |   union Classification::Wordwise::Insn::(anonymous at ../elements/standard/classification.hh:39:5) value
         8 |     unsigned char [4] c
         8 |     uint32_t u
        12 |   int32_t [2] j
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7b2f8e8 prev 0x558cd7b27088 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558cd7b2f9e0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x558cd7b2fa70 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x558cd7b2fae8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x558cd7b2fba8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x558cd7b2fc70 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x558cd7b2fde8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x558cd7b2fd20 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x558cd7b2fe90 <col:24>
| `-OptimizeNoneAttr 0x558cd7b2fee8 <col:34>
|-CXXMethodDecl 0x558cd7b2ff30 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x558cd7b301e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x558cd7b2ffe0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558cd7b30058 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x558cd7b300d8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x558cd7b302a0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x558cd7b302d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x558cd7b30340 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x558cd7b303c8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x558cd7b306e8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x558cd7b30480 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558cd7b304f8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x558cd7b30570 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x558cd7b305f0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x558cd7b30800 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x558cd7b38178 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558cd7b38178
| `-ParmVarDecl 0x558cd7b38288 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x558cd7b38328 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558cd7b38328
| `-ParmVarDecl 0x558cd7b38438 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x558cd7bfd990 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7b22900 prev 0x558cd7b22680 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558cd7b229f8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x558cd7b22a88 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x558cd7b22ae8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x558cd7b22bd8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x558cd7b22cd8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x558cd7b22ea8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x558cd7b22d58 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x558cd7b22dd0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x558cd7b23038 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x558cd7b22f70 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x558cd7b230e0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x558cd7b23218 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x558cd7b23150 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x558cd7b233b8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x558cd7b232f8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x558cd7b23558 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x558cd7b23498 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x558cd7b23600 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x558cd7b23700 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x558cd7b237e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b236e0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x558cd7b236c0 <col:26> 'int' 1
| `-EnumConstantDecl 0x558cd7b23790 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x558cd7b237f8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7b23770 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x558cd7b23750 <col:44> 'int' 2
|-CXXMethodDecl 0x558cd7b23940 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x558cd7b23828 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558cd7b238a8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x558cd7b23a98 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x558cd7b23a08 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x558cd7b23cd8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x558cd7b23b58 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x558cd7b23bd0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x558cd7b23d88 <col:20>
| `-OptimizeNoneAttr 0x558cd7b23de0 <col:30>
|-CXXMethodDecl 0x558cd7b23ee8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x558cd7b23e20 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x558cd7b23f90 <col:20>
| `-OptimizeNoneAttr 0x558cd7b23fe8 <col:30>
|-CXXMethodDecl 0x558cd7b24038 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x558cd7b24100 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x558cd7b24218 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x558cd7b242a0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x558cd7b24328 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x558cd7b243b0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x558cd7b24438 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x558cd7b244c8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x558cd7b24588 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x558cd7b24610 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x558cd7b24698 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x558cd7b24720 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x558cd7b247a8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x558cd7b24830 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x558cd7b248c0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x558cd7b24980 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x558cd7b24a10 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x558cd7b24b60 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x558cd7b24ac8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x558cd7b24cf0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x558cd7b24c20 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x558cd7b24fa0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x558cd7b24da8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x558cd7b24e28 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x558cd7b24ea8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x558cd7b25058 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x558cd7b25160 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558cd7b253f0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b25140 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x558cd7b25120 <col:33> 'int' 0
| |-EnumConstantDecl 0x558cd7b251f0 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558cd7b25408 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b251d0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x558cd7b251b0 <col:32> 'int' 20
| |-EnumConstantDecl 0x558cd7b25280 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558cd7b25420 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b25260 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x558cd7b25240 <col:38> 'int' 90
| |-EnumConstantDecl 0x558cd7b25310 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558cd7b25438 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b252f0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x558cd7b252d0 <col:35> 'int' 100
| `-EnumConstantDecl 0x558cd7b253a0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x558cd7b25450 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7b25380 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x558cd7b25360 <col:32> 'int' 2000
|-CXXMethodDecl 0x558cd7b25490 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x558cd7b258d0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558cd7b25740 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x558cd7b257b8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b259a0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x558cd7b25b20 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x558cd7b25a50 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b25d28 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558cd7b25bd8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x558cd7b25c50 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b25e28 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x558cd7b25ec8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x558cd7b25f90 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x558cd7b26020 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x558cd7b26250 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b26000 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x558cd7b25fe0 <col:36> 'int' EnumConstant 0x558cd7b25f90 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x558cd7b26070 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558cd7b260c0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558cd7b26110 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558cd7b26160 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558cd7b261b0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x558cd7b26200 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x558cd7b26338 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x558cd7b26278 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x558cd7b26400 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x558cd7b264c0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x558cd7b26580 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x558cd7b26640 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x558cd7b26758 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x558cd7b26820 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x558cd7b269a0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x558cd7b268d0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x558cd7b26ac8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558cd7b26cc8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x558cd7b26b78 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x558cd7b26bf8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x558cd7b34618 <col:54, line:127:5>
|   |-ParenExpr 0x558cd7b344c8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x558cd7b34498 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b34188 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558cd7b34160 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x558cd7b34148 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x558cd7b34130 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x558cd7b34100 <col:31> 'Router *' lvalue ->_router 0x558cd7b31fe0
|   |   |         `-CXXThisExpr 0x558cd7b340f0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558cd7b341e8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b341c8 <col:48> 'int' 0
|   |   `-CallExpr 0x558cd7b343f8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b343e0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b343c0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b34438 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b34258 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x558cd7b34450 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b34278 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x558cd7b34468 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b342b0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x558cd7b34480 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b343a8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b34390 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b34348 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x558cd7b34560 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x558cd7b344f8 <col:9> 'Router *' lvalue ->_router 0x558cd7b31fe0
|   | | `-CXXThisExpr 0x558cd7b344e8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x558cd7b34548 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558cd7b34528 <col:19> 'Router *' lvalue ParmVar 0x558cd7b26b78 'r' 'Router *'
|   `-BinaryOperator 0x558cd7b345f8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x558cd7b34590 <col:9> 'int' lvalue ->_eindex 0x558cd7b32048
|     | `-CXXThisExpr 0x558cd7b34580 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x558cd7b345e0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b345c0 <col:19> 'int' lvalue ParmVar 0x558cd7b26bf8 'eindex' 'int'
|-CXXMethodDecl 0x558cd7b26e50 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x558cd7b26d88 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x558cd7b26f20 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x558cd7b26fe8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x558cd7b27088 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x558cd7b272d8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x558cd7b27150 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x558cd7b271d0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x558cd7b27388 <col:20>
| `-OptimizeNoneAttr 0x558cd7b273e0 <col:30>
|-CXXMethodDecl 0x558cd7b274e8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558cd7b27420 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x558cd7b27590 <col:20>
| `-OptimizeNoneAttr 0x558cd7b275e8 <col:30>
|-CXXMethodDecl 0x558cd7b276b8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558cd7b27628 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x558cd7b27760 <col:20>
| `-OptimizeNoneAttr 0x558cd7b277b8 <col:30>
|-CXXMethodDecl 0x558cd7b27948 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x558cd7b277f0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x558cd7b27870 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x558cd7b27ad8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558cd7b27a10 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558cd7b27c28 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558cd7b27b98 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558cd7b27d78 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558cd7b27ce8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558cd7b27ec8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558cd7b27e38 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558cd7b28188 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x558cd7b27f80 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x558cd7b28000 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x558cd7b280a8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x558cd7b28260 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x558cd7b28320 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x558cd7b285f0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558cd7b284a0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x558cd7b28518 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b28718 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x558cd7b288f0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x558cd7b287d0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x558cd7b28850 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x558cd7b28ad8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x558cd7b289b8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x558cd7b28a38 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x558cd7b28e48 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558cd7b28b98 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558cd7b28c10 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558cd7b28c90 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558cd7b33c00 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558cd7b33be0 <col:106> 'int' 0
| `-ParmVarDecl 0x558cd7b28d08 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558cd7b33c38 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558cd7b33c18 <col:126> 'int' 0
|-CXXMethodDecl 0x558cd7b291e8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558cd7b28f18 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558cd7b28fb0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558cd7b29030 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x558cd7b290a8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558cd7b33c70 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558cd7b33c50 <col:114> 'int' 0
|-CXXMethodDecl 0x558cd7b29578 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558cd7b292c0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x558cd7b29338 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558cd7b293b8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x558cd7b33c88 <col:96> 'int' 0
| `-ParmVarDecl 0x558cd7b29430 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558cd7b33cc8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558cd7b33ca8 <col:116> 'int' 0
|-CXXMethodDecl 0x558cd7b298f8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558cd7b29648 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558cd7b296c0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558cd7b29740 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558cd7b33d00 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558cd7b33ce0 <col:109> 'int' 0
| `-ParmVarDecl 0x558cd7b297b8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558cd7b33d38 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558cd7b33d18 <col:129> 'int' 0
|-CXXMethodDecl 0x558cd7b29c78 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558cd7b299c8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558cd7b29a40 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558cd7b29ac0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x558cd7b29b38 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558cd7b33d70 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558cd7b33d50 <col:117> 'int' 0
|-CXXMethodDecl 0x558cd7b2a008 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558cd7b29d50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b29dc8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558cd7b29e48 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x558cd7b33d88 <col:99> 'int' 0
| `-ParmVarDecl 0x558cd7b29ec0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558cd7b33dc8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558cd7b33da8 <col:119> 'int' 0
|-CXXMethodDecl 0x558cd7b2a428 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x558cd7b2a0d8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558cd7b2a158 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558cd7b2a1d0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558cd7b2a250 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558cd7b33e00 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558cd7b33de0 <col:108> 'int' 0
| `-ParmVarDecl 0x558cd7b2a2d0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x558cd7b33e38 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x558cd7b33e18 <col:141> 'int' 0
|-CXXMethodDecl 0x558cd7b2a848 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558cd7b2a500 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558cd7b2a580 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558cd7b2a5f8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558cd7b2a678 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x558cd7b2a6f8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558cd7b33e50 <col:121> 'int' 0
|-CXXMethodDecl 0x558cd7b2ac78 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558cd7b2a928 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x558cd7b2a9a8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x558cd7b2aa20 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558cd7b2aaa0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x558cd7b33e70 <col:98> 'int' 0
| `-ParmVarDecl 0x558cd7b2ab20 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558cd7b33e90 <col:123> 'int' 0
|-CXXMethodDecl 0x558cd7b2af40 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x558cd7b2ad50 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558cd7b2add0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x558cd7b2ae50 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x558cd7b33eb0 <col:80> 'int' 0
|-EnumDecl 0x558cd7b2aff8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x558cd7b2b100 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558cd7b2b390 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b2b0e0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x558cd7b2b0c0 <col:42> 'int' 1
| |-EnumConstantDecl 0x558cd7b2b190 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558cd7b2b3a8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b2b170 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x558cd7b2b150 <col:40> 'int' 2
| |-EnumConstantDecl 0x558cd7b2b220 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558cd7b2b3c0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b2b200 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x558cd7b2b1e0 <col:44> 'int' 4
| |-EnumConstantDecl 0x558cd7b2b2b0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558cd7b2b3d8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b2b290 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x558cd7b2b270 <col:36> 'int' 7
| `-EnumConstantDecl 0x558cd7b2b340 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x558cd7b2b3f0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7b2b320 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x558cd7b2b300 <col:34> 'int' 6
|-CXXMethodDecl 0x558cd7b2b6a8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x558cd7b2b418 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x558cd7b2b4b8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x558cd7b2b538 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x558cd7b2b5b0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x558cd7b33f68 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558cd7b33f50 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x558cd7b33f38 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558cd7b33f18 <col:98, col:105> 'String' (CXXTemporary 0x558cd7b33f18)
|           `-CXXTemporaryObjectExpr 0x558cd7b33ee0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x558cd7b2b948 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x558cd7b2b778 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558cd7b2b7f0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x558cd7b2b868 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558cd7b34018 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558cd7b34000 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558cd7b33fe8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558cd7b33fc8 <col:94, col:101> 'String' (CXXTemporary 0x558cd7b33fc8)
| |         `-CXXTemporaryObjectExpr 0x558cd7b33f90 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x558cd7b34800 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x558cd7b34778 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x558cd7b34748 <col:9> '<bound member function type>' ->add_task_handlers 0x558cd7b2b6a8
|     | `-CXXThisExpr 0x558cd7b34738 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558cd7b347b8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558cd7b346b8 <col:27> 'Task *' lvalue ParmVar 0x558cd7b2b778 'task' 'Task *'
|     |-ImplicitCastExpr 0x558cd7b347d0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x558cd7b346d8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x558cd7b2b7f0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x558cd7b347e8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558cd7b346f8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558cd7b2b340 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558cd7b34718 <col:62> 'const String' lvalue ParmVar 0x558cd7b2b868 'prefix' 'const String &'
|-CXXMethodDecl 0x558cd7b2bb58 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x558cd7b2ba10 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558cd7b2ba88 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558cd7b340c8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558cd7b340b0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558cd7b34098 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558cd7b34078 <col:70, col:77> 'String' (CXXTemporary 0x558cd7b34078)
| |         `-CXXTemporaryObjectExpr 0x558cd7b34040 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x558cd7b349d8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x558cd7b34950 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x558cd7b34920 <col:9> '<bound member function type>' ->add_task_handlers 0x558cd7b2b6a8
|     | `-CXXThisExpr 0x558cd7b34910 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558cd7b34990 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558cd7b34890 <col:27> 'Task *' lvalue ParmVar 0x558cd7b2ba10 'task' 'Task *'
|     |-ImplicitCastExpr 0x558cd7b349a8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x558cd7b348b0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x558cd7b349c0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558cd7b348d0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558cd7b2b340 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558cd7b348f0 <col:57> 'const String' lvalue ParmVar 0x558cd7b2ba88 'prefix' 'const String &'
|-CXXMethodDecl 0x558cd7b2be38 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x558cd7b2bc20 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2bca0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2bd18 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x558cd7b2c0e8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x558cd7b2bf08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2bf88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2c008 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x558cd7b2c3d8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558cd7b2c1b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2c238 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2c2b0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x558cd7b2c688 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x558cd7b2c4a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2c528 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2c5a8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x558cd7b2c938 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x558cd7b2c758 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2c7d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2c858 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x558cd7b2cbe8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x558cd7b2ca08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2ca88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2cb00 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x558cd7b2ce98 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x558cd7b2ccb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2cd38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2cdb8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x558cd7b2d1a8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x558cd7b2cfc0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2d040 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2d0c0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x558cd7b2d488 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x558cd7b2d278 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2d2f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2d3a0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x558cd7b2d768 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x558cd7b2d558 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2d5d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2d680 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x558cd7b2d9d0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558cd7b2d838 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558cd7b2d8b8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558cd7b2d930 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x558cd7b2dc78 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x558cd7b2daa0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558cd7b2db20 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558cd7b2db98 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x558cd7b2df28 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x558cd7b2dd48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2ddc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2de48 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x558cd7b2e1d8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x558cd7b2dff8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2e078 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2e0f0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x558cd7b2e488 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x558cd7b2e2a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2e328 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2e3a0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x558cd7b2e758 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x558cd7b2e558 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2e5d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558cd7b2e678 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x558cd7b2ea88 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x558cd7b2e828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558cd7b2e8a8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x558cd7b2e920 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x558cd7b2e998 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558cd7b340e0 <col:93> 'bool' false
|-CXXMethodDecl 0x558cd7b2ec70 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558cd7b2eb58 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x558cd7b2ebd8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x558cd7b2ee48 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558cd7b2ed30 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x558cd7b2edb0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x558cd7b2f128 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558cd7b2ef08 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x558cd7b2ef80 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x558cd7b2f000 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x558cd7b2f078 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b2f418 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558cd7b2f1f8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x558cd7b2f270 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x558cd7b2f2f0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x558cd7b2f368 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b2f650 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x558cd7b2f4f0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x558cd7b2f570 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x558cd7b2f838 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x558cd7b2f718 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x558cd7b2f798 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x558cd7b2f8e8 prev 0x558cd7b27088 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558cd7b2f9e0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x558cd7b2fa70 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x558cd7b2fae8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x558cd7b2fba8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x558cd7b2fc70 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x558cd7b2fde8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x558cd7b2fd20 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x558cd7b2fe90 <col:24>
| | `-OptimizeNoneAttr 0x558cd7b2fee8 <col:34>
| |-CXXMethodDecl 0x558cd7b2ff30 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x558cd7b301e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x558cd7b2ffe0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558cd7b30058 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x558cd7b300d8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x558cd7b302a0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x558cd7b302d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x558cd7b30340 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x558cd7b303c8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x558cd7b306e8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x558cd7b30480 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558cd7b304f8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x558cd7b30570 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x558cd7b305f0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x558cd7b30800 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x558cd7b38178 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558cd7b38178
| | `-ParmVarDecl 0x558cd7b38288 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x558cd7b38328 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558cd7b38328
| | `-ParmVarDecl 0x558cd7b38438 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x558cd7bfd990 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558cd7b30878 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x558cd7b30918 <col:38> "" ""
|-CXXMethodDecl 0x558cd7b309a8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x558cd7b30a48 <col:44> "" ""
|-AccessSpecDecl 0x558cd7b30ab8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x558cd7b30ae0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x558cd7b30be0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x558cd7b30c30 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7b30bc0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x558cd7b30ba0 <col:27> 'int' 4
|-FieldDecl 0x558cd7b30ce8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x558cd7b30e98 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x558cd7b30f50 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x558cd7b31fe0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x558cd7b32048 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x558cd7b32198 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x558cd7b320d8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x558cd7b32348 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x558cd7b32258 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x558cd7b32528 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x558cd7b32408 <col:20> col:23 'int'
| `-ParmVarDecl 0x558cd7b32488 <col:25> col:28 'int'
|-CXXMethodDecl 0x558cd7b327d0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x558cd7b325f0 <col:23> col:26 'int'
| |-ParmVarDecl 0x558cd7b32670 <col:28> col:31 'int'
| `-ParmVarDecl 0x558cd7b326e8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x558cd7b32888 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x558cd7b32950 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x558cd7b329a0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x558cd7b329f0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x558cd7b32bd0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x558cd7b32a80 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x558cd7b32af8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b32e78 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x558cd7b32c98 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x558cd7b32d18 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x558cd7b32d90 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b33098 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x558cd7b32f48 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x558cd7b32fc8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x558cd7b333d0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x558cd7b33158 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x558cd7b331d8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x558cd7b33250 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x558cd7b332d0 <col:57> col:60 'int'
|-CXXMethodDecl 0x558cd7b335b8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558cd7b334a0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x558cd7b33520 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x558cd7b33708 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x558cd7b33678 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x558cd7b33a88 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x558cd7b337c8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x558cd7b33848 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x558cd7b338c0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x558cd7b33940 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x558cd7b33ba0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<20> >
         0 |   vector_memory<class sized_array_memory<20> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Classification::Wordwise::Insn>
         0 |   class vector_memory<class sized_array_memory<20> > vm_
         0 |     vector_memory<class sized_array_memory<20> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Classification::Wordwise::Program
         0 |   class Vector<struct Classification::Wordwise::Insn> _insn
         0 |     class vector_memory<class sized_array_memory<20> > vm_
         0 |       vector_memory<class sized_array_memory<20> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   int _output_everything
        20 |   unsigned int _safe_length
        24 |   unsigned int _align_offset
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class Classifier
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Classification::Wordwise::Program _prog
       112 |     class Vector<struct Classification::Wordwise::Insn> _insn
       112 |       class vector_memory<class sized_array_memory<20> > vm_
       112 |         vector_memory<class sized_array_memory<20> >::type * l_
       120 |         vector_memory::size_type n_
       124 |         vector_memory::size_type capacity_
       128 |     int _output_everything
       132 |     unsigned int _safe_length
       136 |     unsigned int _align_offset
           | [sizeof=144, dsize=144, align=8,
           |  nvsize=144, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558cd7b4a3c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<20>'
|-CXXRecordDecl 0x558cd7b4a598 prev 0x558cd7b4a3c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558cd7b4a628 <col:46, col:52> col:46 public
|-TypedefDecl 0x558cd7b4a650 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b4c220 <line:13:5, col:31> col:31 type 'typename sized_array_memory<20>::type':'char_array<20>'
| `-ElaboratedType 0x558cd7b4c1d0 'typename sized_array_memory<20>::type' sugar
|   `-TypedefType 0x558cd7b4ab00 'sized_array_memory<20>::type' sugar
|     |-Typedef 0x558cd7b4aa00 'type'
|     `-TemplateSpecializationType 0x558cd7b4a990 'char_array<20UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558cd7b4a870 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|       |   `-SubstNonTypeTemplateParmExpr 0x558cd7b4a850 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558cd7b4a830 <col:24> 'unsigned long' 20
|       `-RecordType 0x558cd7b4a970 'char_array<20>'
|         `-ClassTemplateSpecialization 0x558cd7b4a890 'char_array'
|-TypedefDecl 0x558cd7b4c2d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<20> >::type *'
| `-PointerType 0x558cd7b4c2a0 'vector_memory<sized_array_memory<20> >::type *'
|   `-TypedefType 0x558cd7b4c280 'vector_memory<sized_array_memory<20> >::type' sugar
|     |-Typedef 0x558cd7b4c220 'type'
|     `-ElaboratedType 0x558cd7b4c1d0 'typename sized_array_memory<20>::type' sugar
|       `-TypedefType 0x558cd7b4ab00 'sized_array_memory<20>::type' sugar
|         |-Typedef 0x558cd7b4aa00 'type'
|         `-TemplateSpecializationType 0x558cd7b4a990 'char_array<20UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558cd7b4a870 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|           |   `-SubstNonTypeTemplateParmExpr 0x558cd7b4a850 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558cd7b4a830 <col:24> 'unsigned long' 20
|           `-RecordType 0x558cd7b4a970 'char_array<20>'
|             `-ClassTemplateSpecialization 0x558cd7b4a890 'char_array'
|-CXXMethodDecl 0x558cd7b4c458 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<20> >::type *) const' inline
| `-ParmVarDecl 0x558cd7b4c368 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXConstructorDecl 0x558cd7b4c548 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558cd7b4c628 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x558cd7b4c8f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x558cd7b4c800 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<20> > &'
|-CXXMethodDecl 0x558cd7b4cb38 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x558cd7b4c9b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd7b4ca28 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x558cd7b4cd08 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x558cd7b4cbf8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd7b4cc70 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x558cd7b4ce68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x558cd7b4cf38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x558cd7b4d188 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x558cd7b4cff8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x558cd7b4d070 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x558cd7b4d3e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, vector_memory<sized_array_memory<20> >::iterator)'
| |-ParmVarDecl 0x558cd7b4d258 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x558cd7b4d2d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x558cd7b4d5a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x558cd7b4d4b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x558cd7b4d768 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x558cd7b4d670 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x558cd7b4d820 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558cd7b4d920 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558cd7b4db58 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x558cd7b4d9d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd7b4da48 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x558cd7b4ddf8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x558cd7b4dd00 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<20> > &'
|-FieldDecl 0x558cd7b4dec0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<20> >::type *'
|-FieldDecl 0x558cd7b4df10 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558cd7b4df60 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558cd7b48da0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Classification::Wordwise::Insn'
|-CXXRecordDecl 0x558cd7b48fa8 prev 0x558cd7b48da0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558cd7b4a330 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Insn>::type':'sized_array_memory<20>'
| `-ElaboratedType 0x558cd7b4a2e0 'typename array_memory<Insn>::type' sugar
|   `-TypedefType 0x558cd7b4a2c0 'conditional<true, sized_array_memory<20>, typed_array_memory<Classification::Wordwise::Insn> >::type' sugar
|     |-Typedef 0x558cd7b4a170 'type'
|     `-SubstTemplateTypeParmType 0x558cd7b49f90 'sized_array_memory<20>' sugar
|       |-TemplateTypeParmType 0x558cd7886be0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd7886b88 'T'
|       `-RecordType 0x558cd7b49ae0 'sized_array_memory<20>'
|         `-ClassTemplateSpecialization 0x558cd7b499f8 'sized_array_memory'
|-FieldDecl 0x558cd7b4dfb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Classification::Wordwise::Insn>::array_memory_type>':'vector_memory<sized_array_memory<20> >' mutable
|-AccessSpecDecl 0x558cd7b4e000 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558cd7b4e038 <line:118:5, col:15> col:15 value_type 'Classification::Wordwise::Insn':'Classification::Wordwise::Insn'
| `-SubstTemplateTypeParmType 0x558cd7b49040 'Classification::Wordwise::Insn' sugar
|   |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558cd78be878 'T'
|   `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|     `-CXXRecord 0x558cd7b3ba40 'Insn'
|-TypedefDecl 0x558cd7b4e0c8 <line:119:5, col:16> col:16 reference 'Classification::Wordwise::Insn &'
| `-LValueReferenceType 0x558cd7b4e090 'Classification::Wordwise::Insn &'
|   `-SubstTemplateTypeParmType 0x558cd7b49040 'Classification::Wordwise::Insn' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|       `-CXXRecord 0x558cd7b3ba40 'Insn'
|-TypedefDecl 0x558cd7b4e158 <line:120:5, col:22> col:22 const_reference 'const Classification::Wordwise::Insn &'
| `-LValueReferenceType 0x558cd7b4e120 'const Classification::Wordwise::Insn &'
|   `-QualType 0x558cd7b49041 'const Classification::Wordwise::Insn' const
|     `-SubstTemplateTypeParmType 0x558cd7b49040 'Classification::Wordwise::Insn' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|         `-CXXRecord 0x558cd7b3ba40 'Insn'
|-TypedefDecl 0x558cd7b4e1e8 <line:121:5, col:16> col:16 pointer 'Classification::Wordwise::Insn *'
| `-PointerType 0x558cd7b4e1b0 'Classification::Wordwise::Insn *'
|   `-SubstTemplateTypeParmType 0x558cd7b49040 'Classification::Wordwise::Insn' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|       `-CXXRecord 0x558cd7b3ba40 'Insn'
|-TypedefDecl 0x558cd7b4e278 <line:122:5, col:22> col:22 const_pointer 'const Classification::Wordwise::Insn *'
| `-PointerType 0x558cd7b4e240 'const Classification::Wordwise::Insn *'
|   `-QualType 0x558cd7b49041 'const Classification::Wordwise::Insn' const
|     `-SubstTemplateTypeParmType 0x558cd7b49040 'Classification::Wordwise::Insn' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|         `-CXXRecord 0x558cd7b3ba40 'Insn'
|-TypedefDecl 0x558cd7b4f0e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Insn>::type':'const Classification::Wordwise::Insn &'
| `-ElaboratedType 0x558cd7b4f090 'typename fast_argument<Insn>::type' sugar
|   `-TypedefType 0x558cd7b4f070 'fast_argument<Classification::Wordwise::Insn, true>::type' sugar
|     |-Typedef 0x558cd7b4efa8 'type'
|     `-LValueReferenceType 0x558cd7b4ef70 'const Classification::Wordwise::Insn &'
|       `-QualType 0x558cd7b4ed11 'const Classification::Wordwise::Insn' const
|         `-SubstTemplateTypeParmType 0x558cd7b4ed10 'Classification::Wordwise::Insn' sugar
|           |-TemplateTypeParmType 0x558cd78912b0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558cd7891258 'T'
|           `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|             `-CXXRecord 0x558cd7b3ba40 'Insn'
|-TypedefDecl 0x558cd7b4f148 <line:126:5, col:22> col:22 const_access_type 'const Classification::Wordwise::Insn &'
| `-LValueReferenceType 0x558cd7b4e120 'const Classification::Wordwise::Insn &'
|   `-QualType 0x558cd7b49041 'const Classification::Wordwise::Insn' const
|     `-SubstTemplateTypeParmType 0x558cd7b49040 'Classification::Wordwise::Insn' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|         `-CXXRecord 0x558cd7b3ba40 'Insn'
|-TypedefDecl 0x558cd7b4f1a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b4f208 <line:130:5, col:16> col:16 iterator 'Classification::Wordwise::Insn *'
| `-PointerType 0x558cd7b4e1b0 'Classification::Wordwise::Insn *'
|   `-SubstTemplateTypeParmType 0x558cd7b49040 'Classification::Wordwise::Insn' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|       `-CXXRecord 0x558cd7b3ba40 'Insn'
|-TypedefDecl 0x558cd7b4f270 <line:131:5, col:22> col:22 const_iterator 'const Classification::Wordwise::Insn *'
| `-PointerType 0x558cd7b4e240 'const Classification::Wordwise::Insn *'
|   `-QualType 0x558cd7b49041 'const Classification::Wordwise::Insn' const
|     `-SubstTemplateTypeParmType 0x558cd7b49040 'Classification::Wordwise::Insn' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-RecordType 0x558cd7b3bad0 'Classification::Wordwise::Insn'
|         `-CXXRecord 0x558cd7b3ba40 'Insn'
|-EnumDecl 0x558cd7b4f2c8 <line:134:5> col:5
| `-EnumConstantDecl 0x558cd7b4f3c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Classification::Wordwise::Insn>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558cd7b4f3a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558cd78bff58 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558cd78bff30 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558cd78bff10 <col:40> 'int' 1
|-CXXConstructorDecl 0x558cd7b4f448 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x558cd7b4f6d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Classification::Wordwise::Insn>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7b4f500 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd7b4f5a0 <col:41, col:61> col:61 v 'Vector<Classification::Wordwise::Insn>::value_argument_type':'const Classification::Wordwise::Insn &'
|-CXXConstructorDecl 0x558cd7b4f998 <line:139:5, col:37> col:12 Vector 'void (const Vector<Classification::Wordwise::Insn> &)' inline
| `-ParmVarDecl 0x558cd7b4f880 <col:19, col:36> col:36 x 'const Vector<Classification::Wordwise::Insn> &'
|-CXXConstructorDecl 0x558cd7b4fc58 <line:141:5, col:32> col:12 Vector 'void (Vector<Classification::Wordwise::Insn> &&)' inline
| `-ParmVarDecl 0x558cd7b4fb40 <col:19, col:31> col:31 x 'Vector<Classification::Wordwise::Insn> &&'
|-CXXMethodDecl 0x558cd7b4ffa0 <line:144:5, col:51> col:23 operator= 'Vector<Classification::Wordwise::Insn> &(const Vector<Classification::Wordwise::Insn> &)' inline
| `-ParmVarDecl 0x558cd7b4fe80 <col:33, col:50> col:50 x 'const Vector<Classification::Wordwise::Insn> &'
|-CXXMethodDecl 0x558cd7b502b0 <line:146:5, col:46> col:23 operator= 'Vector<Classification::Wordwise::Insn> &(Vector<Classification::Wordwise::Insn> &&)' inline
| `-ParmVarDecl 0x558cd7b50190 <col:33, col:45> col:45 x 'Vector<Classification::Wordwise::Insn> &&'
|-CXXMethodDecl 0x558cd7b505a0 <line:148:5, col:70> col:23 assign 'Vector<Classification::Wordwise::Insn> &(Vector::size_type, Vector<Classification::Wordwise::Insn>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7b503e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd7b50460 <col:43, col:69> col:63 v 'Vector<Classification::Wordwise::Insn>::value_argument_type':'const Classification::Wordwise::Insn &'
|-CXXMethodDecl 0x558cd7b506f8 <line:150:5, col:55> col:49 begin 'Vector<Classification::Wordwise::Insn>::iterator ()'
| |-NoInlineAttr 0x558cd7b507d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b50830 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b50878 <line:151:5, col:53> col:49 end 'Vector<Classification::Wordwise::Insn>::iterator ()'
| |-NoInlineAttr 0x558cd7b50928 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b50980 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b50a18 <line:152:5, col:63> col:55 used begin 'Vector<Classification::Wordwise::Insn>::const_iterator () const'
| |-NoInlineAttr 0x558cd7b50ac8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b50b20 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b50b68 <line:153:5, col:61> col:55 used end 'Vector<Classification::Wordwise::Insn>::const_iterator () const'
| |-NoInlineAttr 0x558cd7b50c18 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b50c70 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b50cb8 <line:154:5, col:64> col:55 cbegin 'Vector<Classification::Wordwise::Insn>::const_iterator () const'
| |-NoInlineAttr 0x558cd7b50d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b50dc0 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b50e08 <line:155:5, col:62> col:55 cend 'Vector<Classification::Wordwise::Insn>::const_iterator () const'
| |-NoInlineAttr 0x558cd7b50eb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b50f10 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b50f38 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558cd7b50fe8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558cd7b51098 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558cd7b51258 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Classification::Wordwise::Insn>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7b51148 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd7b511c0 <col:37, col:63> col:57 v 'Vector<Classification::Wordwise::Insn>::value_argument_type':'const Classification::Wordwise::Insn &'
|-CXXMethodDecl 0x558cd7b513a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7b51318 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b51558 <line:163:5, col:65> col:43 used operator[] 'Classification::Wordwise::Insn &(Vector::size_type)'
| |-ParmVarDecl 0x558cd7b51460 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558cd7b51610 <col:20>
| `-OptimizeNoneAttr 0x558cd7b51668 <col:30>
|-CXXMethodDecl 0x558cd7b51758 <line:164:5, col:73> col:49 used operator[] 'const Classification::Wordwise::Insn &(Vector::size_type) const'
| |-ParmVarDecl 0x558cd7b51690 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558cd7b51810 <col:20>
| `-OptimizeNoneAttr 0x558cd7b51868 <col:30>
|-CXXMethodDecl 0x558cd7b51920 <line:165:5, col:29> col:15 at 'Classification::Wordwise::Insn &(Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7b51890 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b51a68 <line:166:5, col:37> col:21 at 'const Classification::Wordwise::Insn &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558cd7b519d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b51b68 <line:167:5, col:21> col:15 front 'Classification::Wordwise::Insn &()' inline
|-CXXMethodDecl 0x558cd7b51c98 <line:168:5, col:29> col:21 front 'const Classification::Wordwise::Insn &() const' inline
|-CXXMethodDecl 0x558cd7b51d68 <line:169:5, col:20> col:15 used back 'Classification::Wordwise::Insn &()' inline
|-CXXMethodDecl 0x558cd7b51e38 <line:170:5, col:28> col:21 back 'const Classification::Wordwise::Insn &() const' inline
|-CXXMethodDecl 0x558cd7b51f78 <line:172:5, col:39> col:15 unchecked_at 'Classification::Wordwise::Insn &(Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7b51ee8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b520c0 <line:173:5, col:47> col:21 unchecked_at 'const Classification::Wordwise::Insn &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558cd7b52030 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b52208 <line:174:5, col:59> col:15 at_u 'Classification::Wordwise::Insn &(Vector::size_type)' inline
| |-ParmVarDecl 0x558cd7b52178 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558cd7b522c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558cd7b523c0 <line:175:5, col:71> col:21 at_u 'const Classification::Wordwise::Insn &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558cd7b52330 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558cd7b52478 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558cd7b52538 <line:177:5, col:20> col:15 data 'Classification::Wordwise::Insn *()' inline
|-CXXMethodDecl 0x558cd7b52638 <line:178:5, col:28> col:21 data 'const Classification::Wordwise::Insn *() const' inline
|-CXXMethodDecl 0x558cd7b527b8 <line:180:5, col:48> col:17 push_back 'void (Vector<Classification::Wordwise::Insn>::value_argument_type)' inline
| `-ParmVarDecl 0x558cd7b526f8 <col:27, col:47> col:47 v 'Vector<Classification::Wordwise::Insn>::value_argument_type':'const Classification::Wordwise::Insn &'
|-FunctionTemplateDecl 0x558cd7b52f78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558cd7b52870 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Classification::Wordwise::Insn>':'fast_argument<Classification::Wordwise::Insn, true>'
| `-CXXMethodDecl 0x558cd7b52ed8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Classification::Wordwise::Insn &&)' inline
|   `-ParmVarDecl 0x558cd7b52dd8 <col:58, col:62> col:62 v 'Classification::Wordwise::Insn &&'
|-CXXMethodDecl 0x558cd7b53058 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558cd7b531a8 <line:186:5, col:49> col:17 push_front 'void (Vector<Classification::Wordwise::Insn>::value_argument_type)' inline
| `-ParmVarDecl 0x558cd7b53118 <col:28, col:48> col:48 v 'Vector<Classification::Wordwise::Insn>::value_argument_type':'const Classification::Wordwise::Insn &'
|-CXXMethodDecl 0x558cd7b53260 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558cd7b534a8 <line:189:5, col:62> col:21 insert 'Vector<Classification::Wordwise::Insn>::iterator (Vector<Classification::Wordwise::Insn>::iterator, Vector<Classification::Wordwise::Insn>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7b53320 <col:28, col:37> col:37 it 'Vector<Classification::Wordwise::Insn>::iterator':'Classification::Wordwise::Insn *'
| `-ParmVarDecl 0x558cd7b53398 <col:41, col:61> col:61 v 'Vector<Classification::Wordwise::Insn>::value_argument_type':'const Classification::Wordwise::Insn &'
|-CXXMethodDecl 0x558cd7b53668 <line:190:5, col:38> col:21 erase 'Vector<Classification::Wordwise::Insn>::iterator (Vector<Classification::Wordwise::Insn>::iterator)' inline
| `-ParmVarDecl 0x558cd7b53578 <col:27, col:36> col:36 it 'Vector<Classification::Wordwise::Insn>::iterator':'Classification::Wordwise::Insn *'
|-CXXMethodDecl 0x558cd7b538b8 <line:191:5, col:49> col:21 erase 'Vector<Classification::Wordwise::Insn>::iterator (Vector<Classification::Wordwise::Insn>::iterator, Vector<Classification::Wordwise::Insn>::iterator)' inline
| |-ParmVarDecl 0x558cd7b53730 <col:27, col:36> col:36 a 'Vector<Classification::Wordwise::Insn>::iterator':'Classification::Wordwise::Insn *'
| `-ParmVarDecl 0x558cd7b537a8 <col:39, col:48> col:48 b 'Vector<Classification::Wordwise::Insn>::iterator':'Classification::Wordwise::Insn *'
|-CXXMethodDecl 0x558cd7b53978 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558cd7b53bd8 <line:195:5, col:34> col:17 swap 'void (Vector<Classification::Wordwise::Insn> &)' inline
| `-ParmVarDecl 0x558cd7b53ae0 <col:22, col:33> col:33 x 'Vector<Classification::Wordwise::Insn> &'
`-CXXDestructorDecl 0x558cd7b53ca8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x558cd7b55278 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7b45cc8 <../elements/standard/classification.hh:155:1, line:235:1> line:155:7 referenced class Program definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-CXXRecordDecl 0x558cd7b45de8 <col:1, col:7> col:7 implicit referenced class Program
|-AccessSpecDecl 0x558cd7b45e78 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x558cd7b45f88 <line:157:5, line:160:5> line:157:5 used Program 'void (unsigned int)'
| |-ParmVarDecl 0x558cd7b45eb8 <col:13, col:37> col:22 used align_offset 'unsigned int' cinit
| | `-ImplicitCastExpr 0x558cd7b54ff0 <col:37> 'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558cd7b54fd0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x558cd7b53d90 '_insn' 'Vector<Classification::Wordwise::Insn>':'Vector<Classification::Wordwise::Insn>'
| | `-CXXConstructExpr 0x558cd7b55208 <col:5> 'Vector<Classification::Wordwise::Insn>':'Vector<Classification::Wordwise::Insn>' 'void ()'
| |-CXXCtorInitializer Field 0x558cd7b53df8 '_output_everything' 'int'
| | `-UnaryOperator 0x558cd7b55050 <line:158:23, col:24> 'int' prefix '-'
| |   `-ImplicitCastExpr 0x558cd7b55038 <col:24> 'int' <IntegralCast>
| |     `-DeclRefExpr 0x558cd7b55018 <col:24> 'Classification::Jumps' EnumConstant 0x558cd7b3b508 'j_never' 'Classification::Jumps'
| |-CXXCtorInitializer Field 0x558cd7b53e60 '_safe_length' 'unsigned int'
| | `-CStyleCastExpr 0x558cd7b55118 <col:47, col:59> 'unsigned int' <NoOp>
| |   `-ImplicitCastExpr 0x558cd7b55100 <col:58, col:59> 'unsigned int' <IntegralCast> part_of_explicit_cast
| |     `-UnaryOperator 0x558cd7b550d0 <col:58, col:59> 'int' prefix '-'
| |       `-IntegerLiteral 0x558cd7b550b0 <col:59> 'int' 1
| |-CXXCtorInitializer Field 0x558cd7b53ec8 '_align_offset' 'unsigned int'
| | `-ImplicitCastExpr 0x558cd7b551c8 <line:159:18> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x558cd7b55188 <col:18> 'unsigned int' lvalue ParmVar 0x558cd7b45eb8 'align_offset' 'unsigned int'
| `-CompoundStmt 0x558cd7b55288 <col:32, line:160:5>
|-CXXMethodDecl 0x558cd7b46090 <line:162:5, line:164:5> line:162:14 align_offset 'unsigned int () const'
| `-CompoundStmt 0x558cd7b55300 <col:35, line:164:5>
|   `-ReturnStmt 0x558cd7b552f0 <line:163:2, col:9>
|     `-ImplicitCastExpr 0x558cd7b552d8 <col:9> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558cd7b552a8 <col:9> 'const unsigned int' lvalue ->_align_offset 0x558cd7b53ec8
|         `-CXXThisExpr 0x558cd7b55298 <col:9> 'const Classification::Wordwise::Program *' implicit this
|-CXXMethodDecl 0x558cd7b46158 <line:165:5, line:167:5> line:165:9 output_everything 'int () const'
| `-CompoundStmt 0x558cd7b55380 <col:35, line:167:5>
|   `-ReturnStmt 0x558cd7b55370 <line:166:2, col:9>
|     `-ImplicitCastExpr 0x558cd7b55358 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x558cd7b55328 <col:9> 'const int' lvalue ->_output_everything 0x558cd7b53df8
|         `-CXXThisExpr 0x558cd7b55318 <col:9> 'const Classification::Wordwise::Program *' implicit this
|-CXXMethodDecl 0x558cd7b46220 <line:168:5, line:170:5> line:168:14 safe_length 'unsigned int () const'
| `-CompoundStmt 0x558cd7b55400 <col:34, line:170:5>
|   `-ReturnStmt 0x558cd7b553f0 <line:169:2, col:9>
|     `-ImplicitCastExpr 0x558cd7b553d8 <col:9> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558cd7b553a8 <col:9> 'const unsigned int' lvalue ->_safe_length 0x558cd7b53e60
|         `-CXXThisExpr 0x558cd7b55398 <col:9> 'const Classification::Wordwise::Program *' implicit this
|-CXXMethodDecl 0x558cd7b462e8 <line:172:5, line:174:5> line:172:9 ninsn 'int () const'
| `-CompoundStmt 0x558cd7b554e8 <col:23, line:174:5>
|   `-ReturnStmt 0x558cd7b554d8 <line:173:2, col:20>
|     `-CXXMemberCallExpr 0x558cd7b55488 <col:9, col:20> 'Vector::size_type':'int'
|       `-MemberExpr 0x558cd7b55458 <col:9, col:15> '<bound member function type>' .size 0x558cd7b50f38
|         `-MemberExpr 0x558cd7b55428 <col:9> 'const Vector<Classification::Wordwise::Insn>':'const Vector<Classification::Wordwise::Insn>' lvalue ->_insn 0x558cd7b53d90
|           `-CXXThisExpr 0x558cd7b55418 <col:9> 'const Classification::Wordwise::Program *' implicit this
|-CXXMethodDecl 0x558cd7b46468 <line:175:5, line:177:5> line:175:17 insn 'const Classification::Wordwise::Insn &(int) const'
| |-ParmVarDecl 0x558cd7b463a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558cd7b55658 <col:35, line:177:5>
|   `-ReturnStmt 0x558cd7b55648 <line:176:2, col:16>
|     `-CXXOperatorCallExpr 0x558cd7b55610 <col:9, col:16> 'const Classification::Wordwise::Insn':'const Classification::Wordwise::Insn' lvalue
|       |-ImplicitCastExpr 0x558cd7b555f8 <col:14, col:16> 'const Classification::Wordwise::Insn &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558cd7b55578 <col:14, col:16> 'const Classification::Wordwise::Insn &(Vector::size_type) const' lvalue CXXMethod 0x558cd7b51758 'operator[]' 'const Classification::Wordwise::Insn &(Vector::size_type) const'
|       |-MemberExpr 0x558cd7b55510 <col:9> 'const Vector<Classification::Wordwise::Insn>':'const Vector<Classification::Wordwise::Insn>' lvalue ->_insn 0x558cd7b53d90
|       | `-CXXThisExpr 0x558cd7b55500 <col:9> 'const Classification::Wordwise::Program *' implicit this
|       `-ImplicitCastExpr 0x558cd7b55560 <col:15> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x558cd7b55540 <col:15> 'int' lvalue ParmVar 0x558cd7b463a0 'i' 'int'
|-CXXMethodDecl 0x558cd7b46558 <line:178:5, line:180:5> line:178:17 begin 'const Classification::Wordwise::Insn *() const'
| `-CompoundStmt 0x558cd7b55770 <col:31, line:180:5>
|   `-ReturnStmt 0x558cd7b55760 <line:179:2, col:21>
|     `-CXXMemberCallExpr 0x558cd7b55740 <col:9, col:21> 'Vector<Classification::Wordwise::Insn>::const_iterator':'const Classification::Wordwise::Insn *'
|       `-MemberExpr 0x558cd7b55710 <col:9, col:15> '<bound member function type>' .begin 0x558cd7b50a18
|         `-MemberExpr 0x558cd7b55680 <col:9> 'const Vector<Classification::Wordwise::Insn>':'const Vector<Classification::Wordwise::Insn>' lvalue ->_insn 0x558cd7b53d90
|           `-CXXThisExpr 0x558cd7b55670 <col:9> 'const Classification::Wordwise::Program *' implicit this
|-CXXMethodDecl 0x558cd7b46618 <line:181:5, line:183:5> line:181:17 end 'const Classification::Wordwise::Insn *() const'
| `-CompoundStmt 0x558cd7b55888 <col:29, line:183:5>
|   `-ReturnStmt 0x558cd7b55878 <line:182:2, col:19>
|     `-CXXMemberCallExpr 0x558cd7b55858 <col:9, col:19> 'Vector<Classification::Wordwise::Insn>::const_iterator':'const Classification::Wordwise::Insn *'
|       `-MemberExpr 0x558cd7b55828 <col:9, col:15> '<bound member function type>' .end 0x558cd7b50b68
|         `-MemberExpr 0x558cd7b55798 <col:9> 'const Vector<Classification::Wordwise::Insn>':'const Vector<Classification::Wordwise::Insn>' lvalue ->_insn 0x558cd7b53d90
|           `-CXXThisExpr 0x558cd7b55788 <col:9> 'const Classification::Wordwise::Program *' implicit this
|-CXXMethodDecl 0x558cd7b46738 <line:185:5, line:187:5> line:185:11 back 'Classification::Wordwise::Insn &()'
| `-CompoundStmt 0x558cd7b57060 <col:18, line:187:5>
|   `-ReturnStmt 0x558cd7b57050 <line:186:2, col:20>
|     `-CXXMemberCallExpr 0x558cd7b57030 <col:9, col:20> 'Classification::Wordwise::Insn':'Classification::Wordwise::Insn' lvalue
|       `-MemberExpr 0x558cd7b57000 <col:9, col:15> '<bound member function type>' .back 0x558cd7b51d68
|         `-MemberExpr 0x558cd7b558b0 <col:9> 'Vector<Classification::Wordwise::Insn>':'Vector<Classification::Wordwise::Insn>' lvalue ->_insn 0x558cd7b53d90
|           `-CXXThisExpr 0x558cd7b558a0 <col:9> 'Classification::Wordwise::Program *' implicit this
|-CXXMethodDecl 0x558cd7b46ca8 <line:189:5, col:79> col:10 add_insn 'void (Vector<int> &, int, uint32_t, uint32_t)'
| |-ParmVarDecl 0x558cd7b469f0 <col:19, col:32> col:32 tree 'Vector<int> &'
| |-ParmVarDecl 0x558cd7b46a70 <col:38, col:42> col:42 offset 'int'
| |-ParmVarDecl 0x558cd7b46ae8 <col:50, col:59> col:59 value 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558cd7b46b60 <col:66, col:75> col:75 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd7b46e88 <line:191:5, col:32> col:17 init_subtree 'Vector<int> () const'
|-CXXMethodDecl 0x558cd7b47108 <line:192:5, col:43> col:10 start_subtree 'void (Vector<int> &) const'
| `-ParmVarDecl 0x558cd7b47010 <col:24, col:37> col:37 tree 'Vector<int> &'
|-CXXMethodDecl 0x558cd7b47428 <line:198:5, col:67> col:10 negate_subtree 'void (Vector<int> &, bool)'
| |-ParmVarDecl 0x558cd7b472a0 <col:25, col:38> col:38 tree 'Vector<int> &'
| `-ParmVarDecl 0x558cd7b47318 <col:44, col:62> col:49 flip_short 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558cd7b55008 <col:62> 'bool' false
|-CXXMethodDecl 0x558cd7b47748 <line:199:5, line:201:5> line:199:17 finish_subtree 'void (Vector<int> &, Classification::Combiner)' inline
| |-ParmVarDecl 0x558cd7b475c0 <col:32, col:45> col:45 used tree 'Vector<int> &'
| |-ParmVarDecl 0x558cd7b47638 <col:51, col:60> col:60 used op 'Classification::Combiner'
| `-CompoundStmt 0x558cd7b57230 <col:64, line:201:5>
|   `-CXXMemberCallExpr 0x558cd7b571a8 <line:200:9, col:54> 'void'
|     |-MemberExpr 0x558cd7b57178 <col:9> '<bound member function type>' ->finish_subtree 0x558cd7b47b98
|     | `-CXXThisExpr 0x558cd7b57168 <col:9> 'Classification::Wordwise::Program *' implicit this
|     |-DeclRefExpr 0x558cd7b570e8 <col:24> 'Vector<int>':'Vector<int>' lvalue ParmVar 0x558cd7b475c0 'tree' 'Vector<int> &'
|     |-ImplicitCastExpr 0x558cd7b571e8 <col:30> 'Classification::Combiner' <LValueToRValue>
|     | `-DeclRefExpr 0x558cd7b57108 <col:30> 'Classification::Combiner' lvalue ParmVar 0x558cd7b47638 'op' 'Classification::Combiner'
|     |-ImplicitCastExpr 0x558cd7b57200 <col:34> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558cd7b57128 <col:34> 'Classification::Jumps' EnumConstant 0x558cd7b3b5a8 'j_success' 'Classification::Jumps'
|     `-ImplicitCastExpr 0x558cd7b57218 <col:45> 'int' <IntegralCast>
|       `-DeclRefExpr 0x558cd7b57148 <col:45> 'Classification::Jumps' EnumConstant 0x558cd7b3b558 'j_failure' 'Classification::Jumps'
|-CXXMethodDecl 0x558cd7b47b98 <line:202:5, col:81> col:10 used finish_subtree 'void (Vector<int> &, Classification::Combiner, int, int)'
| |-ParmVarDecl 0x558cd7b478e0 <col:25, col:38> col:38 tree 'Vector<int> &'
| |-ParmVarDecl 0x558cd7b47958 <col:44, col:53> col:53 op 'Classification::Combiner'
| |-ParmVarDecl 0x558cd7b479d8 <col:57, col:61> col:61 success 'int'
| `-ParmVarDecl 0x558cd7b47a58 <col:70, col:74> col:74 failure 'int'
|-CXXMethodDecl 0x558cd7b47d00 <line:204:5, col:33> col:10 set_failure 'void (int)'
| `-ParmVarDecl 0x558cd7b47c70 <col:22, col:26> col:26 failure 'int'
|-CXXMethodDecl 0x558cd7b47ea8 <line:205:5, col:52> col:10 add_or_program 'void (const Classification::Wordwise::Program &)'
| `-ParmVarDecl 0x558cd7b47de8 <col:25, col:40> col:40 next_program 'const Classification::Wordwise::Program &'
|-CXXMethodDecl 0x558cd7b47f70 <line:207:5, col:36> col:10 combine_compatible_states 'void ()'
|-CXXMethodDecl 0x558cd7b48030 <line:208:5, col:31> col:10 remove_unused_states 'void ()'
|-CXXMethodDecl 0x558cd7b480f0 <line:209:5, col:29> col:10 unaligned_optimize 'void ()'
|-CXXMethodDecl 0x558cd7b48348 <line:210:5, col:52> col:10 count_inbranches 'void (Vector<int> &) const'
| `-ParmVarDecl 0x558cd7b48280 <col:27, col:40> col:40 inbranches 'Vector<int> &'
|-CXXMethodDecl 0x558cd7b485e8 <line:211:5, col:103> col:10 bubble_sort_and_exprs 'void (const int *, const int *, int)'
| |-ParmVarDecl 0x558cd7b48408 <col:32, col:43> col:43 offset_map_begin 'const int *'
| |-ParmVarDecl 0x558cd7b48488 <col:61, col:72> col:72 offset_map_end 'const int *'
| `-ParmVarDecl 0x558cd7b48508 <col:88, col:92> col:92 last_offset 'int'
|-CXXMethodDecl 0x558cd7b48858 <line:212:5, col:90> col:10 optimize 'void (const int *, const int *, int)'
| |-ParmVarDecl 0x558cd7b486b8 <col:19, col:30> col:30 offset_map_begin 'const int *'
| |-ParmVarDecl 0x558cd7b48738 <col:48, col:59> col:59 offset_map_end 'const int *'
| `-ParmVarDecl 0x558cd7b487b8 <col:75, col:79> col:79 last_offset 'int'
|-CXXMethodDecl 0x558cd7b48a78 <line:214:5, col:64> col:10 warn_unused_outputs 'void (int, ErrorHandler *) const'
| |-ParmVarDecl 0x558cd7b48928 <col:30, col:34> col:34 noutputs 'int'
| `-ParmVarDecl 0x558cd7b489a0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b48c00 <line:216:5, col:30> col:9 match 'int (const Packet *)'
| `-ParmVarDecl 0x558cd7b48b38 <col:15, col:29> col:29 p 'const Packet *'
|-CXXMethodDecl 0x558cd7b48cc8 <line:218:5, col:22> col:12 unparse 'String () const'
|-AccessSpecDecl 0x558cd7b48d68 <line:220:3, col:10> col:3 private
|-FieldDecl 0x558cd7b53d90 <line:222:5, col:18> col:18 referenced _insn 'Vector<Classification::Wordwise::Insn>':'Vector<Classification::Wordwise::Insn>'
|-FieldDecl 0x558cd7b53df8 <line:223:5, col:9> col:9 referenced _output_everything 'int'
|-FieldDecl 0x558cd7b53e60 <line:224:5, col:14> col:14 referenced _safe_length 'unsigned int'
|-FieldDecl 0x558cd7b53ec8 <line:225:5, col:14> col:14 referenced _align_offset 'unsigned int'
|-CXXMethodDecl 0x558cd7b541a8 <line:227:5, col:72> col:10 redirect_subtree 'void (int, int, int, int)'
| |-ParmVarDecl 0x558cd7b53f30 <col:27, col:31> col:31 first 'int'
| |-ParmVarDecl 0x558cd7b53fb0 <col:38, col:42> col:42 next 'int'
| |-ParmVarDecl 0x558cd7b54030 <col:48, col:52> col:52 success 'int'
| `-ParmVarDecl 0x558cd7b540b0 <col:61, col:65> col:65 failure 'int'
|-CXXMethodDecl 0x558cd7b54310 <line:229:5, col:45> col:9 used length_checked_match 'int (const Packet *)'
| `-ParmVarDecl 0x558cd7b54278 <col:30, col:44> col:44 p 'const Packet *'
|-CXXMethodDecl 0x558cd7b545c0 <line:230:5, col:78> col:23 map_offset 'int (int, const int *, const int *)' static inline
| |-ParmVarDecl 0x558cd7b543d0 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x558cd7b54450 <col:46, col:57> col:57 begin 'const int *'
| `-ParmVarDecl 0x558cd7b544d0 <col:64, col:75> col:75 end 'const int *'
|-CXXMethodDecl 0x558cd7b54838 <line:231:5, col:76> col:16 hard_map_offset 'int (int, const int *, const int *)' static
| |-ParmVarDecl 0x558cd7b54690 <col:32, col:36> col:36 offset 'int'
| |-ParmVarDecl 0x558cd7b54710 <col:44, col:55> col:55 begin 'const int *'
| `-ParmVarDecl 0x558cd7b54790 <col:62, col:73> col:73 end 'const int *'
|-FriendDecl 0x558cd7b54940 <line:233:5, col:18> col:12 'class DominatorOptimizer':'Classification::Wordwise::DominatorOptimizer'
|-CXXConstructorDecl 0x558cd7b54980 <line:155:7> col:7 implicit Program 'void (const Classification::Wordwise::Program &)' inline default noexcept-unevaluated 0x558cd7b54980
| `-ParmVarDecl 0x558cd7b54a68 <col:7> col:7 'const Classification::Wordwise::Program &'
|-CXXConstructorDecl 0x558cd7b54b08 <col:7> col:7 implicit Program 'void (Classification::Wordwise::Program &&)' inline default noexcept-unevaluated 0x558cd7b54b08
| `-ParmVarDecl 0x558cd7b54c18 <col:7> col:7 'Classification::Wordwise::Program &&'
|-CXXMethodDecl 0x558cd7b54cb8 <col:7> col:7 implicit operator= 'Classification::Wordwise::Program &(const Classification::Wordwise::Program &)' inline default noexcept-unevaluated 0x558cd7b54cb8
| `-ParmVarDecl 0x558cd7b54dc8 <col:7> col:7 'const Classification::Wordwise::Program &'
|-CXXMethodDecl 0x558cd7b54e38 <col:7> col:7 implicit operator= 'Classification::Wordwise::Program &(Classification::Wordwise::Program &&)' inline default noexcept-unevaluated 0x558cd7b54e38
| `-ParmVarDecl 0x558cd7b54f48 <col:7> col:7 'Classification::Wordwise::Program &&'
`-CXXDestructorDecl 0x558cd7b81240 <col:7> col:7 implicit used ~Program 'void () noexcept' inline default
  `-CompoundStmt 0x558cd7bfd980 <col:7>

Layout: <CGRecordLayout
  LLVMType:%"class.Classification::Wordwise::Program" = type <{ %class.Vector, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Classification::Wordwise::Program.base" = type <{ %class.Vector, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7b7f4e0 <../elements/standard/classifier.hh:75:1, line:101:1> line:75:7 class Classifier definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x558cd7b7f638 <col:1, col:7> col:7 implicit referenced class Classifier
|-AccessSpecDecl 0x558cd7b7f6c8 <col:37, col:43> col:37 public
|-CXXConstructorDecl 0x558cd7b7f750 <line:77:5, col:16> col:5 Classifier 'void ()'
|-CXXMethodDecl 0x558cd7b7f850 <line:79:5, col:59> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x558cd7b24038 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x558cd7b81370 <col:36, col:59>
|   `-ReturnStmt 0x558cd7b81360 <col:38, col:45>
|     `-ImplicitCastExpr 0x558cd7b81348 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558cd7b81320 <col:45> 'const char [11]' lvalue "Classifier"
|-CXXMethodDecl 0x558cd7b7f918 <line:80:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x558cd7b24100 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x558cd7b813d0 <col:36, col:52>
|   `-ReturnStmt 0x558cd7b813c0 <col:38, col:45>
|     `-ImplicitCastExpr 0x558cd7b813a8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558cd7b81388 <col:45> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x558cd7b7f9e0 <line:81:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x558cd7b244c8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x558cd7b81430 <col:36, col:51>
|   `-ReturnStmt 0x558cd7b81420 <col:38, col:45>
|     `-ImplicitCastExpr 0x558cd7b81408 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x558cd7b813e8 <col:45> 'const char []' lvalue Var 0x558cd7b24610 'PUSH' 'const char []'
|-CXXMethodDecl 0x558cd7b7faa8 <line:83:5, col:45> col:17 flags 'const char *() const'
| |-Overrides: [ 0x558cd7b24a10 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x558cd7b81490 <col:31, col:45>
|   `-ReturnStmt 0x558cd7b81480 <col:33, col:40>
|     `-ImplicitCastExpr 0x558cd7b81468 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558cd7b81448 <col:40> 'const char [2]' lvalue "A"
|-CXXMethodDecl 0x558cd7b7fb68 <line:84:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x558cd7b28320 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x558cd7b814c8 <col:39, col:54>
|   `-ReturnStmt 0x558cd7b814b8 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x558cd7b814a8 <col:48> 'bool' true
|-CXXMethodDecl 0x558cd7b7fe40 <line:86:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558cd7b258d0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558cd7b7fcf0 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x558cd7b7fd68 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b7ff10 <line:87:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x558cd7b259a0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x558cd7b800d8 <line:89:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x558cd7b22ea8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x558cd7b7ffc8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x558cd7b80040 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x558cd7b80338 <line:91:5, col:73> col:39 empty_program 'Classification::Wordwise::Program (ErrorHandler *) const'
| `-ParmVarDecl 0x558cd7b80230 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b80758 <line:92:5, line:93:50> line:92:17 parse_program 'void (Classification::Wordwise::Program &, Vector<String> &, ErrorHandler *)' static
| |-ParmVarDecl 0x558cd7b80470 <col:31, col:66> col:66 prog 'Classification::Wordwise::Program &'
| |-ParmVarDecl 0x558cd7b805c0 <line:93:10, col:26> col:26 conf 'Vector<String> &'
| `-ParmVarDecl 0x558cd7b80638 <col:32, col:46> col:46 errh 'ErrorHandler *'
|-AccessSpecDecl 0x558cd7b80810 <line:95:3, col:12> col:3 protected
|-FieldDecl 0x558cd7b80890 <line:97:5, col:39> col:39 _prog 'Classification::Wordwise::Program':'Classification::Wordwise::Program'
|-CXXMethodDecl 0x558cd7b80a08 <line:99:5, col:51> col:19 program_string 'String (Element *, void *)' static
| |-ParmVarDecl 0x558cd7b808f0 <col:34, col:42> col:43 'Element *'
| `-ParmVarDecl 0x558cd7b80970 <col:45, col:50> col:51 'void *'
|-CXXConstructorDecl 0x558cd7b80ae8 <line:75:7> col:7 implicit Classifier 'void (const Classifier &)' inline default_delete noexcept-unevaluated 0x558cd7b80ae8
| `-ParmVarDecl 0x558cd7b80bf8 <col:7> col:7 'const Classifier &'
|-CXXConstructorDecl 0x558cd7b80c98 <col:7> col:7 implicit Classifier 'void (Classifier &&)' inline default_delete noexcept-unevaluated 0x558cd7b80c98
| `-ParmVarDecl 0x558cd7b80da8 <col:7> col:7 'Classifier &&'
|-CXXMethodDecl 0x558cd7b80e48 <col:7> col:7 implicit operator= 'Classifier &(const Classifier &)' inline default_delete noexcept-unevaluated 0x558cd7b80e48
| `-ParmVarDecl 0x558cd7b80f58 <col:7> col:7 'const Classifier &'
|-CXXMethodDecl 0x558cd7b80fc8 <col:7> col:7 implicit operator= 'Classifier &(Classifier &&)' inline default_delete noexcept-unevaluated 0x558cd7b80fc8
| `-ParmVarDecl 0x558cd7b810d8 <col:7> col:7 'Classifier &&'
`-CXXDestructorDecl 0x558cd7b81160 <col:7> col:7 implicit ~Classifier 'void ()' inline default noexcept-unevaluated 0x558cd7b81160
  `-Overrides: [ 0x558cd7b22bd8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.Classifier = type { %class.Element.base, [4 x i8], %"class.Classification::Wordwise::Program" }
  NonVirtualBaseLLVMType:%class.Classifier = type { %class.Element.base, [4 x i8], %"class.Classification::Wordwise::Program" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7b814e0 prev 0x558cd7b3b2e8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558cd7b815d8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x558cd7b81668 <col:22, col:28> col:22 public
|-EnumDecl 0x558cd7b81690 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x558cd7b817a8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b81788 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x558cd7b81770 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x558cd7b81750 <col:14> 'int' 999
| |-EnumConstantDecl 0x558cd7b81850 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b81830 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x558cd7b81818 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x558cd7b817f8 <col:14> 'int' 1
| |-EnumConstantDecl 0x558cd7b818e0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b818c0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x558cd7b818a0 <col:17> 'int' 0
| |-EnumConstantDecl 0x558cd7b81970 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b81950 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x558cd7b81930 <col:13> 'int' 1
| |-EnumConstantDecl 0x558cd7b81a00 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b819e0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x558cd7b819c0 <col:16> 'int' 2
| |-EnumConstantDecl 0x558cd7b81a90 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b81a70 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x558cd7b81a50 <col:13> 'int' 3
| |-EnumConstantDecl 0x558cd7b81b20 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b81b00 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x558cd7b81ae0 <col:15> 'int' 4
| |-EnumConstantDecl 0x558cd7b81bb0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b81b90 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x558cd7b81b70 <col:14> 'int' 5
| |-EnumConstantDecl 0x558cd7b81c40 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x558cd7b81c20 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x558cd7b81c00 <col:12> 'int' 6
| `-EnumConstantDecl 0x558cd7b81cd0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x558cd7b81cb0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x558cd7b81c90 <col:13> 'int' 7
|-VarDecl 0x558cd7b81d40 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x558cd7b81dc8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x558cd7b81e50 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x558cd7b81ed8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x558cd7b81f60 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x558cd7b81fe8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x558cd7b82070 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x558cd7b820f8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x558cd7b82180 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x558cd7b82208 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x558cd7b82290 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x558cd7b82390 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x558cd7b997b8 '_nerrors' 'int'
| | `-IntegerLiteral 0x558cd7b99f48 <line:128:13> 'int' 0
| `-CompoundStmt 0x558cd7b99fb8 <col:16, line:129:5>
|-CXXDestructorDecl 0x558cd7b82480 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x558cd7b99fc8 <col:29, line:132:5>
|-CXXMethodDecl 0x558cd7b82638 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x558cd7b82570 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b82700 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558cd7b827e8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x558cd7b9a020 <col:44, line:161:5>
|   `-ReturnStmt 0x558cd7b9a010 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x558cd7b99ff8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b99fd8 <col:9> 'ErrorHandler *' lvalue Var 0x558cd7b99818 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b82958 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x558cd7b82898 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558cd7b82a20 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x558cd7b9a080 <col:43, line:173:5>
|   `-ReturnStmt 0x558cd7b9a070 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x558cd7b9a058 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b9a038 <col:9> 'ErrorHandler *' lvalue Var 0x558cd7b99890 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x558cd7b82ad8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x558cd7b82b58 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x558cd7b82c68 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x558cd7b82bd8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b82db8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x558cd7b82d28 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b82f10 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x558cd7b82e78 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b83068 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x558cd7b82fd0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b95200 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x558cd7b83128 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b95410 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x558cd7b952b8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x558cd7b95338 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b955e8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x558cd7b954d0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x558cd7b95550 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b95808 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558cd7b956a8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x558cd7b95728 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b959e8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558cd7b958c8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x558cd7b95948 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b95bc8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558cd7b95aa8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x558cd7b95b28 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b95d50 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x558cd7b95c88 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x558cd7b95f20 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x558cd7b95e08 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x558cd7b95e80 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x558cd7b9a2d8 <col:57, line:234:5>
|   `-ReturnStmt 0x558cd7b9a2c8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x558cd7b9a2b0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x558cd7b9a258 <col:9, col:41> 'int'
|         |-MemberExpr 0x558cd7b9a228 <col:9> '<bound member function type>' ->xmessage 0x558cd7b95d50
|         | `-CXXThisExpr 0x558cd7b9a218 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x558cd7b9a298 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x558cd7b9a280 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558cd7b9a1f8 <col:18, col:40> 'String' (CXXTemporary 0x558cd7b9a1f8)
|               `-CallExpr 0x558cd7b9a1c0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x558cd7b9a1a8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x558cd7b9a120 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x558cd7b97fa8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x558cd7b9a140 <col:31> 'const String' lvalue ParmVar 0x558cd7b95e80 'str' 'const String &'
|                 `-DeclRefExpr 0x558cd7b9a160 <col:36> 'const String' lvalue ParmVar 0x558cd7b95e08 'anno' 'const String &'
|-CXXMethodDecl 0x558cd7b96260 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x558cd7b95fe0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x558cd7b96060 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x558cd7b96130 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558cd7b9a568 <col:68, line:243:5>
|   `-ReturnStmt 0x558cd7b9a558 <line:242:2, col:41>
|     `-ExprWithCleanups 0x558cd7b9a540 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x558cd7b9a4e0 <col:9, col:41> 'int'
|         |-MemberExpr 0x558cd7b9a4b0 <col:9> '<bound member function type>' ->xmessage 0x558cd7b95f20
|         | `-CXXThisExpr 0x558cd7b9a4a0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x558cd7b9a378 <col:18> 'const String' lvalue ParmVar 0x558cd7b95fe0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x558cd7b9a528 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x558cd7b9a510 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558cd7b9a480 <col:24, col:40> 'String' (CXXTemporary 0x558cd7b9a480)
|               `-CXXMemberCallExpr 0x558cd7b9a418 <col:24, col:40> 'String'
|                 |-MemberExpr 0x558cd7b9a3a8 <col:24> '<bound member function type>' ->vformat 0x558cd7b97440
|                 | `-CXXThisExpr 0x558cd7b9a398 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x558cd7b9a448 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x558cd7b9a3d8 <col:32> 'const char *' lvalue ParmVar 0x558cd7b96060 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x558cd7b9a460 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x558cd7b9a3f8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558cd7b96130 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558cd7b96500 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x558cd7b96328 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x558cd7b963a0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x558cd7b96418 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x558cd7b9a8a8 <col:23, line:254:5>
|   `-ReturnStmt 0x558cd7b9a898 <line:253:2, col:71>
|     `-ExprWithCleanups 0x558cd7b9a880 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x558cd7b9a820 <col:9, col:71> 'int'
|         |-MemberExpr 0x558cd7b9a7f0 <col:9> '<bound member function type>' ->xmessage 0x558cd7b95f20
|         | `-CXXThisExpr 0x558cd7b9a7e0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x558cd7b9a868 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x558cd7b9a850 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x558cd7b9a7a0 <col:18, col:65> 'String' (CXXTemporary 0x558cd7b9a7a0)
|         |     `-CallExpr 0x558cd7b9a738 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x558cd7b9a720 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x558cd7b9a608 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x558cd7b97fa8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x558cd7b9a628 <col:31> 'const String' lvalue ParmVar 0x558cd7b963a0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x558cd7b9a780 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x558cd7b9a768 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x558cd7b9a700 <col:37, col:64> 'String' (CXXTemporary 0x558cd7b9a700)
|         |             `-CallExpr 0x558cd7b9a6d0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x558cd7b9a6b8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x558cd7b9a648 <col:37> 'String (const String &)' lvalue CXXMethod 0x558cd7b985f8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x558cd7b9a668 <col:56> 'const String' lvalue ParmVar 0x558cd7b96328 'landmark' 'const String &'
|         `-DeclRefExpr 0x558cd7b9a7c0 <col:68> 'const String' lvalue ParmVar 0x558cd7b96418 'str' 'const String &'
|-CXXMethodDecl 0x558cd7b96880 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x558cd7b965c8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x558cd7b96640 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x558cd7b966c0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x558cd7b96738 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558cd7b9ab60 <col:34, line:267:5>
|   `-ReturnStmt 0x558cd7b9ab50 <line:266:2, col:51>
|     `-ExprWithCleanups 0x558cd7b9ab38 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x558cd7b9aad0 <col:9, col:51> 'int'
|         |-MemberExpr 0x558cd7b9aaa0 <col:9> '<bound member function type>' ->xmessage 0x558cd7b96500
|         | `-CXXThisExpr 0x558cd7b9aa90 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x558cd7b9a948 <col:18> 'const String' lvalue ParmVar 0x558cd7b965c8 'landmark' 'const String &'
|         |-DeclRefExpr 0x558cd7b9a968 <col:28> 'const String' lvalue ParmVar 0x558cd7b96640 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x558cd7b9ab20 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x558cd7b9ab08 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558cd7b9aa70 <col:34, col:50> 'String' (CXXTemporary 0x558cd7b9aa70)
|               `-CXXMemberCallExpr 0x558cd7b9aa08 <col:34, col:50> 'String'
|                 |-MemberExpr 0x558cd7b9a998 <col:34> '<bound member function type>' ->vformat 0x558cd7b97440
|                 | `-CXXThisExpr 0x558cd7b9a988 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x558cd7b9aa38 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x558cd7b9a9c8 <col:42> 'const char *' lvalue ParmVar 0x558cd7b966c0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x558cd7b9aa50 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x558cd7b9a9e8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558cd7b96738 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558cd7b96990 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x558cd7b9abe0 <col:25, line:288:5>
|   `-ReturnStmt 0x558cd7b9abd0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x558cd7b9abb8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x558cd7b9ab88 <col:9> 'const int' lvalue ->_nerrors 0x558cd7b997b8
|         `-CXXThisExpr 0x558cd7b9ab78 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x558cd7b96ba0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x558cd7b96a48 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x558cd7b96ac8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b96e88 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x558cd7b96c68 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x558cd7b96ce8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x558cd7b96d60 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558cd7b97020 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x558cd7b96f58 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b97268 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x558cd7b970e0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x558cd7b97158 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558cd7b9ae40 <col:58, line:357:5>
|   `-ReturnStmt 0x558cd7b9ae30 <line:356:2, col:29>
|     `-ExprWithCleanups 0x558cd7b9ae18 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x558cd7b9ade8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x558cd7b9add0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x558cd7b9adb0 <col:9, col:29> 'String' (CXXTemporary 0x558cd7b9adb0)
|             `-CallExpr 0x558cd7b9ad40 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x558cd7b9ad28 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558cd7b9aca8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x558cd7b96e88 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x558cd7b9ac48 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x558cd7b9ad78 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x558cd7b9ac68 <col:21> 'const char *' lvalue ParmVar 0x558cd7b970e0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x558cd7b9ad90 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x558cd7b9ac88 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558cd7b97158 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558cd7b97440 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x558cd7b97330 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x558cd7b973a8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558cd7b97598 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x558cd7b97508 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x558cd7b97718 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x558cd7b97650 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x558cd7b979b0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x558cd7b977d0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x558cd7b97850 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x558cd7b978c8 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x558cd7b97b10 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x558cd7b97a80 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x558cd7b9af58 <col:37, line:441:5>
|   `-IfStmt 0x558cd7b9af40 <line:439:2, line:440:8>
|     |-BinaryOperator 0x558cd7b9aec8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x558cd7b9ae98 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x558cd7b9ae58 <col:6> 'int' lvalue ParmVar 0x558cd7b97a80 'level' 'int'
|     | `-ImplicitCastExpr 0x558cd7b9aeb0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x558cd7b9ae78 <col:15> 'ErrorHandler::Level' EnumConstant 0x558cd7b81a90 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x558cd7b9af28 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x558cd7b9aef8 <col:8> 'int' lvalue ->_nerrors 0x558cd7b997b8
|         `-CXXThisExpr 0x558cd7b9aee8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x558cd7b97bd8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x558cd7b9aff0 <col:26, line:448:5>
|   `-BinaryOperator 0x558cd7b9afd0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x558cd7b9af80 <col:2> 'int' lvalue ->_nerrors 0x558cd7b997b8
|     | `-CXXThisExpr 0x558cd7b9af70 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x558cd7b9afb0 <col:13> 'int' 0
|-CXXMethodDecl 0x558cd7b97da0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x558cd7b97c90 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x558cd7b97d08 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x558cd7b97fa8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x558cd7b97e60 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x558cd7b97ed8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x558cd7b98258 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x558cd7b98068 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x558cd7b980e8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x558cd7b98168 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x558cd7b98310 <col:59> 0 0
|-CXXMethodDecl 0x558cd7b984a8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x558cd7b98388 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x558cd7b98408 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x558cd7b9b660 <col:70, line:534:5>
|   |-DeclStmt 0x558cd7b9b160 <line:528:2, col:20>
|   | |-VarDecl 0x558cd7b9b018 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x558cd7b9b080 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x558cd7b9b0b8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x558cd7b9b120 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x558cd7b9b230 <line:529:2, col:23>
|   | `-VarDecl 0x558cd7b9b190 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x558cd7b9b218 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x558cd7b9b1f8 <col:18> 'const char *' lvalue ParmVar 0x558cd7b98388 'begin' 'const char *'
|   |-DoStmt 0x558cd7b9b5f8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x558cd7b9b528 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x558cd7b9b510 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x558cd7b9b4f0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x558cd7b9b248 <col:6> 'const char *' lvalue Var 0x558cd7b9b190 'x' 'const char *'
|   | |     `-CallExpr 0x558cd7b9b440 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x558cd7b9b428 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x558cd7b9b3e0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x558cd7b99c90 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x558cd7b9b4a8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x558cd7b9b490 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x558cd7b9b300 <col:20, col:27> 'String' (CXXTemporary 0x558cd7b9b300)
|   | |       |     `-CXXTemporaryObjectExpr 0x558cd7b9b2c8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x558cd7b9b4c0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x558cd7b9b320 <col:30> 'const char *' lvalue Var 0x558cd7b9b190 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x558cd7b9b4d8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x558cd7b9b340 <col:33> 'const char *' lvalue ParmVar 0x558cd7b98408 'end' 'const char *'
|   | |       |-UnaryOperator 0x558cd7b9b380 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x558cd7b9b360 <col:39> 'String' lvalue Var 0x558cd7b9b018 'name' 'String'
|   | |       |-UnaryOperator 0x558cd7b9b3b8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x558cd7b9b398 <col:46> 'String' lvalue Var 0x558cd7b9b0b8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x558cd7b9b3d0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x558cd7b9b5e0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x558cd7b9b5c8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x558cd7b9b5a8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x558cd7b9b578 <col:11> '<bound member function type>' .operator int (String::*)() const 0x558cd78f1508
|   |         `-ImplicitCastExpr 0x558cd7b9b560 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x558cd7b9b540 <col:11> 'String' lvalue Var 0x558cd7b9b018 'name' 'String'
|   `-ReturnStmt 0x558cd7b9b650 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x558cd7b9b638 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b9b618 <col:9> 'const char *' lvalue Var 0x558cd7b9b190 'x' 'const char *'
|-CXXMethodDecl 0x558cd7b985f8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x558cd7b98568 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x558cd7b9bc68 <col:55, line:550:5>
|   `-IfStmt 0x558cd7b9bc40 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x558cd7b9b8a0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x558cd7b9b888 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558cd7b9b870 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558cd7b9b850 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558cd7b9b820 <col:6> '<bound member function type>' .operator int (String::*)() const 0x558cd78f1508
|     | |       `-DeclRefExpr 0x558cd7b9b6c0 <col:6> 'const String' lvalue ParmVar 0x558cd7b98568 'x' 'const String &'
|     | `-BinaryOperator 0x558cd7b9b800 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x558cd7b9b7d0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x558cd7b9b780 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x558cd7b9b768 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x558cd7b9b720 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x558cd790ad40 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x558cd7b9b6e0 <col:11> 'const String' lvalue ParmVar 0x558cd7b98568 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x558cd7b9b700 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x558cd7b9b7e8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x558cd7b9b7b8 <col:19> 'char' 123
|     |-ReturnStmt 0x558cd7b9b910 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x558cd7b9b8e0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x558cd7b9b8c0 <col:13> 'const String' lvalue ParmVar 0x558cd7b98568 'x' 'const String &'
|     `-IfStmt 0x558cd7b9bc18 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x558cd7b9b9a8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558cd7b9b990 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558cd7b9b970 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558cd7b9b940 <col:11> '<bound member function type>' .operator int (String::*)() const 0x558cd78f1508
|       |       `-DeclRefExpr 0x558cd7b9b920 <col:11> 'const String' lvalue ParmVar 0x558cd7b98568 'x' 'const String &'
|       |-ReturnStmt 0x558cd7b9bb30 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x558cd7b9bb18 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x558cd7b9bae8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x558cd7b9bad0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x558cd7b9bab0 <col:13, col:29> 'String' (CXXTemporary 0x558cd7b9bab0)
|       |         `-CallExpr 0x558cd7b9ba60 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x558cd7b9ba48 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x558cd7b9b9c0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x558cd7b97da0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x558cd7b9ba90 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x558cd7b9b9e0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x558cd7b9ba00 <col:28> 'const String' lvalue ParmVar 0x558cd7b98568 'x' 'const String &'
|       `-ReturnStmt 0x558cd7b9bc08 <line:549:6, col:20>
|         `-ExprWithCleanups 0x558cd7b9bbf0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x558cd7b9bbc0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x558cd7b9bba8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x558cd7b9bb88 <col:13, col:20> 'String' (CXXTemporary 0x558cd7b9bb88)
|                 `-CXXTemporaryObjectExpr 0x558cd7b9bb50 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x558cd7b987f8 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x558cd7b986b0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x558cd7b98728 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558cd7b99f38 <col:71> 'bool' false
|-CXXRecordDecl 0x558cd7b988a8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x558cd7b98ba8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x558cd7b98b40 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x558cd7b98ae0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x558cd7b98aa0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x558cd78edda0 'String'
|       | `-CXXRecord 0x558cd78edd10 'String'
|       |-BuiltinType 0x558cd75c1370 'int'
|       `-DecayedType 0x558cd7b96100 '__va_list_tag *' sugar
|         |-TypedefType 0x558cd7b960d0 'va_list' sugar
|         | |-Typedef 0x558cd77dee80 'va_list'
|         | `-TypedefType 0x558cd77dee30 '__gnuc_va_list' sugar
|         |   |-Typedef 0x558cd7716a48 '__gnuc_va_list'
|         |   `-TypedefType 0x558cd77169b0 '__builtin_va_list' sugar
|         |     |-Typedef 0x558cd7602bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x558cd7602b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x558cd75c20c0 '__va_list_tag'
|         |         `-CXXRecord 0x558cd75c2028 '__va_list_tag'
|         `-PointerType 0x558cd77e4720 '__va_list_tag *'
|           `-RecordType 0x558cd75c20c0 '__va_list_tag'
|             `-CXXRecord 0x558cd75c2028 '__va_list_tag'
|-EnumDecl 0x558cd7b98c00 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x558cd7b98d00 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b99260 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b98ce0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x558cd7b98cc0 <col:16> 'int' 1
| |-EnumConstantDecl 0x558cd7b98d90 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b99278 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b98d70 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x558cd7b98d50 <col:21> 'int' 2
| |-EnumConstantDecl 0x558cd7b98e20 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b99290 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b98e00 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x558cd7b98de0 <col:22> 'int' 4
| |-EnumConstantDecl 0x558cd7b98eb0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b992a8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b98e90 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x558cd7b98e70 <col:17> 'int' 8
| |-EnumConstantDecl 0x558cd7b98f40 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b992c0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b98f20 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x558cd7b98f00 <col:22> 'int' 16
| |-EnumConstantDecl 0x558cd7b98fd0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b992d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b98fb0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558cd7b98f90 <col:19> 'int' 32
| |-EnumConstantDecl 0x558cd7b99060 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b992f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b99040 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x558cd7b99020 <col:17> 'int' 64
| |-EnumConstantDecl 0x558cd7b990f0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b99308 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b990d0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x558cd7b990b0 <col:14> 'int' 128
| |-EnumConstantDecl 0x558cd7b99180 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558cd7b99320 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7b99160 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x558cd7b99140 <col:16> 'int' 256
| `-EnumConstantDecl 0x558cd7b99210 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x558cd7b99338 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7b991f0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x558cd7b991d0 <col:12> 'int' 1024
|-CXXMethodDecl 0x558cd7b99548 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x558cd7b99360 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x558cd7b99400 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x558cd7b996d0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x558cd7b99608 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x558cd7b99778 <line:580:3, col:10> col:3 private
|-FieldDecl 0x558cd7b997b8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x558cd7b99818 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x558cd7b99890 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x558cd7b99c90 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x558cd7b99908 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x558cd7b99988 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x558cd7b99a08 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x558cd7b99a80 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x558cd7b99af8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x558cd7b99b70 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x558cd7b99db8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x558cd7b99db8
| `-ParmVarDecl 0x558cd7b99ec8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x558cd7b9bfc8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x558cd7b9bfc8
  `-ParmVarDecl 0x558cd7b9c0d8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd78f67a0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558cd78f68b8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x558cd78f6958 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x558cd78f69b8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x558cd78f6a18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x558cd78f6ac8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd78f6dd0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558cd78f6ee8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x558cd78f6f90 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x558cd78f6ff8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x558cd78f7088 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x558cd78fd120 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558cd78fd558 <col:12>
|-CXXConstructorDecl 0x558cd78fd228 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558cd78fd338 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558cd78f6f90 'data' 'const char *'
| | `-ImplicitCastExpr 0x558cd78ffae0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x558cd78ffab0 <col:12> 'const char *const' lvalue .data 0x558cd78f6f90
| |     `-DeclRefExpr 0x558cd78ffa90 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd78fd338 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558cd78f6ff8 'length' 'int'
| | `-ImplicitCastExpr 0x558cd78ffb70 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558cd78ffb40 <col:12> 'const int' lvalue .length 0x558cd78f6ff8
| |     `-DeclRefExpr 0x558cd78ffb20 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd78fd338 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558cd78f7088 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x558cd78ffc00 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x558cd78ffbd0 <col:12> 'String::memo_t *const' lvalue .memo 0x558cd78f7088
| |     `-DeclRefExpr 0x558cd78ffbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd78fd338 '' 'const String::rep_t &'
| `-CompoundStmt 0x558cd78ffc58 <col:12>
|-CXXConstructorDecl 0x558cd78fd3d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558cd78fd3d8
| `-ParmVarDecl 0x558cd78fd4e8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x558cd7902a40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558cd790e458 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558cd790e568 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x558cd790ea80 <col:12>
|   |-BinaryOperator 0x558cd790e898 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558cd790e850 <col:12> 'const char *' lvalue ->data 0x558cd78f6f90
|   | | `-CXXThisExpr 0x558cd790e840 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558cd790e880 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x558cd790e810 <col:12> 'const char *const' lvalue .data 0x558cd78f6f90
|   |     `-DeclRefExpr 0x558cd790e7f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd790e568 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558cd790e960 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x558cd790e918 <col:12> 'int' lvalue ->length 0x558cd78f6ff8
|   | | `-CXXThisExpr 0x558cd790e908 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558cd790e948 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x558cd790e8d8 <col:12> 'const int' lvalue .length 0x558cd78f6ff8
|   |     `-DeclRefExpr 0x558cd790e8b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd790e568 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558cd790ea28 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x558cd790e9e0 <col:12> 'String::memo_t *' lvalue ->memo 0x558cd78f7088
|   | | `-CXXThisExpr 0x558cd790e9d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558cd790ea10 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x558cd790e9a0 <col:12> 'String::memo_t *const' lvalue .memo 0x558cd78f7088
|   |     `-DeclRefExpr 0x558cd790e980 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd790e568 '' 'const String::rep_t &'
|   `-ReturnStmt 0x558cd790ea70 <col:12>
|     `-UnaryOperator 0x558cd790ea58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558cd790ea48 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x558cd790e5d8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558cd790e5d8
  `-ParmVarDecl 0x558cd790e6e8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd78edd10 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558cd78ede28 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x558cd78edeb8 <col:16, col:22> col:16 public
|-TypedefDecl 0x558cd78edef8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x558cd75c1dc0 'const char *'
|   `-QualType 0x558cd75c1311 'const char' const
|     `-BuiltinType 0x558cd75c1310 'char'
|-TypedefDecl 0x558cd78edf80 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x558cd78edf50 'String::const_iterator' sugar
|   |-Typedef 0x558cd78edef8 'const_iterator'
|   `-PointerType 0x558cd75c1dc0 'const char *'
|     `-QualType 0x558cd75c1311 'const char' const
|       `-BuiltinType 0x558cd75c1310 'char'
|-TypedefDecl 0x558cd78ee0f0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x558cd78ee060 'int (String::*)() const'
|   |-RecordType 0x558cd78edda0 'String'
|   | `-CXXRecord 0x558cd78edd10 'String'
|   `-ParenType 0x558cd78ee000 'int () const' sugar
|     `-FunctionProtoType 0x558cd78c1b90 'int () const' const cdecl
|       `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd78ee158 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x558cd7716790 'int64_t' sugar
|   |-Typedef 0x558cd762a2d0 'int64_t'
|   `-TypedefType 0x558cd76034d0 '__int64_t' sugar
|     |-Typedef 0x558cd76030a8 '__int64_t'
|     `-BuiltinType 0x558cd75c1390 'long'
|-TypedefDecl 0x558cd78ee1c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x558cd77166b0 'uint64_t' sugar
|   |-Typedef 0x558cd762a470 'uint64_t'
|   `-TypedefType 0x558cd7603560 '__uint64_t' sugar
|     |-Typedef 0x558cd7603118 '__uint64_t'
|     `-BuiltinType 0x558cd75c1430 'unsigned long'
|-TypedefDecl 0x558cd78ee250 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x558cd78ee220 'String::intmax_t' sugar
|   |-Typedef 0x558cd78ee158 'intmax_t'
|   `-TypedefType 0x558cd7716790 'int64_t' sugar
|     |-Typedef 0x558cd762a2d0 'int64_t'
|     `-TypedefType 0x558cd76034d0 '__int64_t' sugar
|       |-Typedef 0x558cd76030a8 '__int64_t'
|       `-BuiltinType 0x558cd75c1390 'long'
|-TypedefDecl 0x558cd78ee2e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x558cd78ee2b0 'String::uintmax_t' sugar
|   |-Typedef 0x558cd78ee1c0 'uintmax_t'
|   `-TypedefType 0x558cd77166b0 'uint64_t' sugar
|     |-Typedef 0x558cd762a470 'uint64_t'
|     `-TypedefType 0x558cd7603560 '__uint64_t' sugar
|       |-Typedef 0x558cd7603118 '__uint64_t'
|       `-BuiltinType 0x558cd75c1430 'unsigned long'
|-CXXConstructorDecl 0x558cd78ee3a0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x558cd78ee548 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x558cd78ee488 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x558cd78ee6f8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x558cd78ee638 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x558cd78ee850 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x558cd78ee7c0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x558cd78eea68 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x558cd78ee918 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x558cd78ee998 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x558cd78eec88 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x558cd78eeb38 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x558cd78eebb8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x558cd78eeea8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558cd78eed58 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x558cd78eedd8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x558cd78ef0c8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x558cd78eef78 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x558cd78eeff8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x558cd78ef258 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x558cd78ef190 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x558cd78ef3d8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x558cd78ef318 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x558cd78ef568 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x558cd78ef4a0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x558cd78ef6c0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x558cd78ef630 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x558cd78ef818 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x558cd78ef788 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x558cd78ef970 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x558cd78ef8e0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x558cd78efaf8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x558cd78efa38 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x558cd78efc88 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x558cd78efbc0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x558cd78efe18 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x558cd78efd50 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x558cd78effa8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x558cd78efee0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x558cd78f00a0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x558cd78f01c8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x558cd78f0348 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x558cd78f0280 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x558cd78f0498 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x558cd78f0408 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x558cd78f0550 <col:63> "" ""
|-CXXMethodDecl 0x558cd78f0698 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x558cd78f05d8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x558cd78f08a8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x558cd78f0758 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x558cd78f07d8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x558cd78f0ac8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x558cd78f0970 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x558cd78f09f0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x558cd78f0da8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x558cd78f0b88 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x558cd78f0c08 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x558cd78fcbf0 <col:55> 'int' 10
| `-ParmVarDecl 0x558cd78f0c80 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558cd78fcc10 <col:76> 'bool' true
|-CXXMethodDecl 0x558cd78f1088 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x558cd78f0e70 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x558cd78f0ef0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x558cd78fcc20 <col:56> 'int' 10
| `-ParmVarDecl 0x558cd78f0f68 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558cd78fcc40 <col:77> 'bool' true
|-CXXMethodDecl 0x558cd78f1190 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x558cd78f1258 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x558cd78f1320 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x558cd78f13c0 <col:20>
| `-OptimizeNoneAttr 0x558cd78f1418 <col:30>
|-CXXConversionDecl 0x558cd78f1508 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558cd78f15d8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558cd78f1698 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x558cd78f1788 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558cd78f1848 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558cd78f19c8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x558cd78f1900 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x558cd78f1b18 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x558cd78f1a88 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x558cd78f1c08 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x558cd78f1cc8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x558cd78f1f18 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x558cd78f1d80 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x558cd78f1e00 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x558cd78f2178 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x558cd78f1fe0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x558cd78f2060 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x558cd78f2248 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x558cd78f2458 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x558cd78f2300 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x558cd78f2380 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x558cd78f2678 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x558cd78f2520 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x558cd78f25a0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x558cd78f2808 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x558cd78f2740 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x558cd78f28f8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x558cd78f2a68 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x558cd78f29a8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558cd78f2c78 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x558cd78f2b28 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558cd78f2ba8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558cd78f2e90 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x558cd78f2d38 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x558cd78f2db0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x558cd78f3020 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x558cd78f2f50 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558cd78f3240 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x558cd78f30e0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x558cd78f3160 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558cd78f3390 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x558cd78f3300 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x558cd78f3568 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x558cd78f3450 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558cd78f34d0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x558cd78f36b8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x558cd78f3628 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x558cd78f38d0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x558cd78f3770 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x558cd78f37f0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x558cd78fcc50 <col:39> 'int' 0
|-CXXMethodDecl 0x558cd78f3af0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x558cd78f3990 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x558cd78f3a10 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x558cd78fcc70 <col:48> 'int' 0
|-CXXMethodDecl 0x558cd78f3cd0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x558cd78f3bb0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x558cd78f3c30 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x558cd78fcc90 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x558cd78f3da0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x558cd78f3e60 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x558cd78f3f20 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x558cd78f3fe0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x558cd78f40a0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x558cd78f4248 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x558cd78f4150 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x558cd78f43c8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x558cd78f4300 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x558cd78f45a0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x558cd78f4488 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x558cd78f4718 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x558cd78f4658 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x558cd78f4860 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x558cd78f47d0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558cd78f49b0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x558cd78f4920 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x558cd78f4b88 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x558cd78f4a70 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558cd78f4af0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558cd78f4d68 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558cd78f4c50 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x558cd78f4cd0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x558cd78f4eb8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x558cd78f4e28 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x558cd78f50c8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x558cd78f4f78 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x558cd78f4ff8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x558cd78f5228 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x558cd78f5190 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558cd78f5380 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x558cd78f52e8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x558cd78f5428 <col:57> "" ""
|-CXXMethodDecl 0x558cd78f5538 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x558cd78f54a8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x558cd78f5688 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x558cd78f55f8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x558cd78f5808 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x558cd78f5740 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x558cd78f58d0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x558cd78f5990 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x558cd78f5a50 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x558cd78f5af0 <col:49> "" ""
|-CXXMethodDecl 0x558cd78f5b80 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x558cd78f5c40 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x558cd78f5d30 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x558cd78f5df8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x558cd78f5eb8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x558cd78f5f78 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x558cd78f6070 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x558cd78f6138 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x558cd78f6200 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x558cd78f63d8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x558cd78f62b8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x558cd78f6338 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x558cd78f6600 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x558cd78f64a0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x558cd78f6520 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x558cd78f6710 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x558cd78f6778 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x558cd78f67a0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558cd78f68b8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x558cd78f6958 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x558cd78f69b8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x558cd78f6a18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x558cd78f6ac8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x558cd78f6b30 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x558cd78f6d68 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x558cd78f6db8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd78f6d48 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x558cd78f6c58 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x558cd78f6c00 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x558cd78f6c40 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x558cd78f6c20 <col:32> 'int' 8
|-CXXRecordDecl 0x558cd78f6dd0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558cd78f6ee8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x558cd78f6f90 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x558cd78f6ff8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x558cd78f7088 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x558cd78fd120 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558cd78fd558 <col:12>
| |-CXXConstructorDecl 0x558cd78fd228 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558cd78fd338 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558cd78f6f90 'data' 'const char *'
| | | `-ImplicitCastExpr 0x558cd78ffae0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x558cd78ffab0 <col:12> 'const char *const' lvalue .data 0x558cd78f6f90
| | |     `-DeclRefExpr 0x558cd78ffa90 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd78fd338 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558cd78f6ff8 'length' 'int'
| | | `-ImplicitCastExpr 0x558cd78ffb70 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x558cd78ffb40 <col:12> 'const int' lvalue .length 0x558cd78f6ff8
| | |     `-DeclRefExpr 0x558cd78ffb20 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd78fd338 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558cd78f7088 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x558cd78ffc00 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x558cd78ffbd0 <col:12> 'String::memo_t *const' lvalue .memo 0x558cd78f7088
| | |     `-DeclRefExpr 0x558cd78ffbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd78fd338 '' 'const String::rep_t &'
| | `-CompoundStmt 0x558cd78ffc58 <col:12>
| |-CXXConstructorDecl 0x558cd78fd3d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558cd78fd3d8
| | `-ParmVarDecl 0x558cd78fd4e8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x558cd7902a40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558cd790e458 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558cd790e568 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x558cd790ea80 <col:12>
| |   |-BinaryOperator 0x558cd790e898 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x558cd790e850 <col:12> 'const char *' lvalue ->data 0x558cd78f6f90
| |   | | `-CXXThisExpr 0x558cd790e840 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558cd790e880 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x558cd790e810 <col:12> 'const char *const' lvalue .data 0x558cd78f6f90
| |   |     `-DeclRefExpr 0x558cd790e7f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd790e568 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558cd790e960 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x558cd790e918 <col:12> 'int' lvalue ->length 0x558cd78f6ff8
| |   | | `-CXXThisExpr 0x558cd790e908 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558cd790e948 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x558cd790e8d8 <col:12> 'const int' lvalue .length 0x558cd78f6ff8
| |   |     `-DeclRefExpr 0x558cd790e8b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd790e568 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558cd790ea28 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x558cd790e9e0 <col:12> 'String::memo_t *' lvalue ->memo 0x558cd78f7088
| |   | | `-CXXThisExpr 0x558cd790e9d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558cd790ea10 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x558cd790e9a0 <col:12> 'String::memo_t *const' lvalue .memo 0x558cd78f7088
| |   |     `-DeclRefExpr 0x558cd790e980 <col:12> 'const String::rep_t' lvalue ParmVar 0x558cd790e568 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x558cd790ea70 <col:12>
| |     `-UnaryOperator 0x558cd790ea58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558cd790ea48 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x558cd790e5d8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558cd790e5d8
|   `-ParmVarDecl 0x558cd790e6e8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x558cd78f7100 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x558cd78f7348 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x558cd78f7168 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x558cd78f71e8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x558cd78f7260 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x558cd78fd0e0 <col:79, line:261:5>
|   |-BinaryOperator 0x558cd78fcd58 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558cd78fccf0 <col:2, col:5> 'const char *' lvalue .data 0x558cd78f6f90
|   | | `-MemberExpr 0x558cd78fccc0 <col:2> 'String::rep_t' lvalue ->_r 0x558cd78f7100
|   | |   `-CXXThisExpr 0x558cd78fccb0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558cd78fcd40 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558cd78fcd20 <col:12> 'const char *' lvalue ParmVar 0x558cd78f7168 'data' 'const char *'
|   |-BinaryOperator 0x558cd78fce20 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x558cd78fcdb8 <col:2, col:5> 'int' lvalue .length 0x558cd78f6ff8
|   | | `-MemberExpr 0x558cd78fcd88 <col:2> 'String::rep_t' lvalue ->_r 0x558cd78f7100
|   | |   `-CXXThisExpr 0x558cd78fcd78 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558cd78fce08 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558cd78fcde8 <col:14> 'int' lvalue ParmVar 0x558cd78f71e8 'length' 'int'
|   `-IfStmt 0x558cd78fd0c8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x558cd78fcf40 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558cd78fcf28 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x558cd78fcf08 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x558cd78fcee8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x558cd78fce80 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x558cd78f7088
|     |       | `-MemberExpr 0x558cd78fce50 <col:7> 'String::rep_t' lvalue ->_r 0x558cd78f7100
|     |       |   `-CXXThisExpr 0x558cd78fce40 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x558cd78fced0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x558cd78fceb0 <col:17> 'String::memo_t *' lvalue ParmVar 0x558cd78f7260 'memo' 'String::memo_t *'
|     `-CallExpr 0x558cd78fd0a0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x558cd78fd088 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558cd78fcf90 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x558cd78e5d78 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x558cd78fcff8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558cd78f6958
|         `-ImplicitCastExpr 0x558cd78fcfe0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x558cd78fcfc0 <col:27> 'String::memo_t *' lvalue ParmVar 0x558cd78f7260 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x558cd78f75f8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x558cd78f7418 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x558cd78f7498 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x558cd78f7510 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x558cd78f7100 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x558cd78fd568 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558cd78fd6f8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x558cd78fd660 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x558cd78fd5d0 <col:2> '<bound member function type>' ->assign_memo 0x558cd78f7348
|     | `-ImplicitCastExpr 0x558cd78fd698 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x558cd78fd5c0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x558cd78fd6b0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x558cd78fd600 <col:14> 'const char *' lvalue ParmVar 0x558cd78f7418 'data' 'const char *'
|     |-ImplicitCastExpr 0x558cd78fd6c8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558cd78fd620 <col:20> 'int' lvalue ParmVar 0x558cd78f7498 'length' 'int'
|     `-ImplicitCastExpr 0x558cd78fd6e0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x558cd78fd640 <col:28> 'String::memo_t *' lvalue ParmVar 0x558cd78f7510 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x558cd78f7788 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x558cd78f76c8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x558cd78fd950 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x558cd78fd8d0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x558cd78fd720 <col:2> '<bound member function type>' ->assign_memo 0x558cd78f7348
|     | `-CXXThisExpr 0x558cd78fd710 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x558cd78fd908 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x558cd78fd7a0 <col:14, col:19> 'const char *' lvalue .data 0x558cd78f6f90
|     |   `-MemberExpr 0x558cd78fd770 <col:14, col:16> 'String::rep_t' lvalue ._r 0x558cd78f7100
|     |     `-DeclRefExpr 0x558cd78fd750 <col:14> 'const String' lvalue ParmVar 0x558cd78f76c8 'x' 'const String &'
|     |-ImplicitCastExpr 0x558cd78fd920 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x558cd78fd820 <col:25, col:30> 'int' lvalue .length 0x558cd78f6ff8
|     |   `-MemberExpr 0x558cd78fd7f0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x558cd78f7100
|     |     `-DeclRefExpr 0x558cd78fd7d0 <col:25> 'const String' lvalue ParmVar 0x558cd78f76c8 'x' 'const String &'
|     `-ImplicitCastExpr 0x558cd78fd938 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x558cd78fd8a0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x558cd78f7088
|         `-MemberExpr 0x558cd78fd870 <col:38, col:40> 'String::rep_t' lvalue ._r 0x558cd78f7100
|           `-DeclRefExpr 0x558cd78fd850 <col:38> 'const String' lvalue ParmVar 0x558cd78f76c8 'x' 'const String &'
|-CXXMethodDecl 0x558cd78f7850 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x558cd78fe310 <col:31, line:278:5>
|   `-IfStmt 0x558cd78fe2f8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x558cd78fd9f0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558cd78fd9d8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x558cd78fd9a8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558cd78f7088
|     |     `-MemberExpr 0x558cd78fd978 <col:6> 'String::rep_t' lvalue ->_r 0x558cd78f7100
|     |       `-CXXThisExpr 0x558cd78fd968 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x558cd78fe2d0 <col:15, line:277:2>
|       |-ParenExpr 0x558cd78fdea0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x558cd78fde70 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x558cd78fdb00 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x558cd78fdae8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x558cd78fdad0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x558cd78fda90 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558cd78f6958
|       |   |       `-ImplicitCastExpr 0x558cd78fda78 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x558cd78fda48 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x558cd78f7088
|       |   |           `-MemberExpr 0x558cd78fda18 <col:27> 'String::rep_t' lvalue ->_r 0x558cd78f7100
|       |   |             `-CXXThisExpr 0x558cd78fda08 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x558cd78fdb60 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x558cd78fdb40 <col:54> 'int' 0
|       |   `-CallExpr 0x558cd78fddd0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x558cd78fddb8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x558cd78fdd38 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x558cd78fde10 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558cd78fdc48 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x558cd78fde28 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558cd78fdc78 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x558cd78fde40 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x558cd78fdcb0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x558cd78fde58 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x558cd78fdd20 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x558cd78fdd08 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x558cd78fdcd0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x558cd78fe1f0 <line:274:6, line:275:22>
|       | |-CallExpr 0x558cd78fe0b0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x558cd78fe098 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x558cd78fe010 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x558cd78e71c0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x558cd78fdfe0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558cd78f6958
|       | |   `-ImplicitCastExpr 0x558cd78fdfc8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x558cd78fdf98 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x558cd78f7088
|       | |       `-MemberExpr 0x558cd78fdf68 <col:40> 'String::rep_t' lvalue ->_r 0x558cd78f7100
|       | |         `-CXXThisExpr 0x558cd78fdf58 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x558cd78fe1b0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x558cd78fe198 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x558cd78fe0d8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x558cd78fc030 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x558cd78fe1d8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x558cd78fe138 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x558cd78f7088
|       |       `-MemberExpr 0x558cd78fe108 <col:15> 'String::rep_t' lvalue ->_r 0x558cd78f7100
|       |         `-CXXThisExpr 0x558cd78fe0f8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x558cd78fe2b0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x558cd78fe248 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558cd78f7088
|         | `-MemberExpr 0x558cd78fe218 <col:6> 'String::rep_t' lvalue ->_r 0x558cd78f7100
|         |   `-CXXThisExpr 0x558cd78fe208 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x558cd78fe298 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x558cd78fe278 <col:16> 'int' 0
|-CXXMethodDecl 0x558cd78f7ae8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x558cd78f7908 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558cd78f7988 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558cd78f7a00 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x558cd78f7bc0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x558cd78f7e10 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x558cd78f7c78 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558cd78f7cf8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558cd78f7d70 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x558cd78f7ff8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x558cd78f7ee0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x558cd78f7f60 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x558cd78f80f8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x558cd78fe3e8 <col:41, line:286:5>
|   `-ReturnStmt 0x558cd78fe3d8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x558cd78fe3a8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x558cd78fe370 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x558cd78fe358 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x558cd78fe338 <col:46> 'int' 1
|-CXXMethodDecl 0x558cd78f8398 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x558cd78f81b0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x558cd78f8230 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x558cd78f82b0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x558cd78fc030 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x558cd78f8460 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x558cd78fc100 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x558cd78fc2d0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x558cd78fc1b8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558cd78fc238 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x558cd78fc390 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x558cd78fc458 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x558cd78fc558 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x558cd78fc5d0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x558cd78fc648 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x558cd78fc6b0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x558cd78fc7b0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x558cd78fc800 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd78fc790 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x558cd78fc770 <col:22> 'int' 14
|-CXXMethodDecl 0x558cd78fca18 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x558cd78fc830 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x558cd78fc8b0 <col:38> col:41 'int'
| `-ParmVarDecl 0x558cd78fc930 <col:43> col:46 'int'
|-FriendDecl 0x558cd78fcb20 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x558cd78fcbb0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558cd79bb0b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x558cd79bb288 prev 0x558cd79bb0b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558cd79bb318 <col:46, col:52> col:46 public
|-TypedefDecl 0x558cd79bb340 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd79bcca0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x558cd79bcc50 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x558cd79bcc30 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x558cd79bb558 'type'
|     `-SubstTemplateTypeParmType 0x558cd79bb520 'String' sugar
|       |-TemplateTypeParmType 0x558cd78b15b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78b1560 'T'
|       `-RecordType 0x558cd78edda0 'String'
|         `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79bcd58 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x558cd79bcd20 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x558cd79bcd00 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x558cd79bcca0 'type'
|     `-ElaboratedType 0x558cd79bcc50 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x558cd79bcc30 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x558cd79bb558 'type'
|         `-SubstTemplateTypeParmType 0x558cd79bb520 'String' sugar
|           |-TemplateTypeParmType 0x558cd78b15b0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558cd78b1560 'T'
|           `-RecordType 0x558cd78edda0 'String'
|             `-CXXRecord 0x558cd78edd10 'String'
|-CXXMethodDecl 0x558cd79bced8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x558cd79bcde8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x558cd79bcfc8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558cd79bd0a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558cd79bd0a8
|-CXXMethodDecl 0x558cd79bd378 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x558cd79bd280 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x558cd79bd5b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558cd79bd430 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd79bd4a8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558cd79bd788 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558cd79bd678 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd79bd6f0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558cd79bd8e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x558cd79bd9b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x558cd79bdc08 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558cd79bda78 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x558cd79bdaf0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558cd79bde68 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x558cd79bdcd8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x558cd79bdd50 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558cd79be028 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x558cd79bdf38 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558cd79be1e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x558cd79be0f0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558cd79be2a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558cd79be350 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558cd79be588 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558cd79be400 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd79be478 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558cd79be828 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x558cd79be730 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x558cd79be8f0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x558cd79be940 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558cd79be990 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558cd7b25540 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x558cd79b9d58 prev 0x558cd7b25540 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558cd79bb020 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x558cd79bafd0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x558cd79bafb0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x558cd79bae60 'type'
|     `-SubstTemplateTypeParmType 0x558cd79bacf0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x558cd7887360 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x558cd7887308 'F'
|       `-RecordType 0x558cd79ba950 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x558cd79ba870 'typed_array_memory'
|-FieldDecl 0x558cd79be9e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x558cd79bea30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558cd79bea68 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x558cd79b9df0 'String' sugar
|   |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558cd78be878 'T'
|   `-RecordType 0x558cd78edda0 'String'
|     `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79beaf8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x558cd79beac0 'String &'
|   `-SubstTemplateTypeParmType 0x558cd79b9df0 'String' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-RecordType 0x558cd78edda0 'String'
|       `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79beb88 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x558cd79beb50 'const String &'
|   `-QualType 0x558cd79b9df1 'const String' const
|     `-SubstTemplateTypeParmType 0x558cd79b9df0 'String' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-RecordType 0x558cd78edda0 'String'
|         `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79bec18 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x558cd79bebe0 'String *'
|   `-SubstTemplateTypeParmType 0x558cd79b9df0 'String' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-RecordType 0x558cd78edda0 'String'
|       `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79beca8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x558cd79bec70 'const String *'
|   `-QualType 0x558cd79b9df1 'const String' const
|     `-SubstTemplateTypeParmType 0x558cd79b9df0 'String' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-RecordType 0x558cd78edda0 'String'
|         `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79bf900 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x558cd79bf8b0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x558cd79bf890 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x558cd79bf7c8 'type'
|     `-LValueReferenceType 0x558cd79bf790 'const String &'
|       `-QualType 0x558cd79bf531 'const String' const
|         `-SubstTemplateTypeParmType 0x558cd79bf530 'String' sugar
|           |-TemplateTypeParmType 0x558cd78912b0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558cd7891258 'T'
|           `-RecordType 0x558cd78edda0 'String'
|             `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79bf968 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x558cd79beb50 'const String &'
|   `-QualType 0x558cd79b9df1 'const String' const
|     `-SubstTemplateTypeParmType 0x558cd79b9df0 'String' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-RecordType 0x558cd78edda0 'String'
|         `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79bf9c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd79bfa28 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x558cd79bebe0 'String *'
|   `-SubstTemplateTypeParmType 0x558cd79b9df0 'String' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-RecordType 0x558cd78edda0 'String'
|       `-CXXRecord 0x558cd78edd10 'String'
|-TypedefDecl 0x558cd79bfa90 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x558cd79bec70 'const String *'
|   `-QualType 0x558cd79b9df1 'const String' const
|     `-SubstTemplateTypeParmType 0x558cd79b9df0 'String' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-RecordType 0x558cd78edda0 'String'
|         `-CXXRecord 0x558cd78edd10 'String'
|-EnumDecl 0x558cd79bfae8 <line:134:5> col:5
| `-EnumConstantDecl 0x558cd79bfbe0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558cd79bfbc0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558cd78bff58 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558cd78bff30 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558cd78bff10 <col:40> 'int' 1
|-CXXConstructorDecl 0x558cd79bfc68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558cd79bfef8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd79bfd20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd79bfdc0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x558cd79c0188 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x558cd79c0070 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x558cd79c0448 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x558cd79c0330 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x558cd79c0760 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x558cd79c0640 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x558cd79c0a70 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x558cd79c0950 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x558cd79c0d60 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd79c0ba8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd79c0c20 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558cd79c0e88 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x558cd79c0f38 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd79c0f90 <col:30> Inherited
|-CXXMethodDecl 0x558cd79c0fd8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x558cd79c1088 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd79c10e0 <col:30> Inherited
|-CXXMethodDecl 0x558cd7bcd710 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558cd7bcd7c0 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7bcd818 <col:30> Inherited
|-CXXMethodDecl 0x558cd7bcd860 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558cd7bcd910 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7bcd968 <col:30> Inherited
|-CXXMethodDecl 0x558cd7bcd9b0 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558cd7bcda60 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7bcdab8 <col:30> Inherited
|-CXXMethodDecl 0x558cd7bcdb00 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558cd7bcdbb0 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7bcdc08 <col:30> Inherited
|-CXXMethodDecl 0x558cd7bcdc30 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558cd7bcdce0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558cd7bcdd90 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558cd7bcdf50 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7bcde40 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd7bcdeb8 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558cd7bce0a0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7bce010 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7bce248 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x558cd7bce158 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558cd7bce300 <col:20>
| `-OptimizeNoneAttr 0x558cd7bce358 <col:30>
|-CXXMethodDecl 0x558cd7bce478 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x558cd7bce380 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558cd7bce530 <col:20>
| `-OptimizeNoneAttr 0x558cd7bce588 <col:30>
|-CXXMethodDecl 0x558cd7bce640 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7bce5b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7bce788 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558cd7bce6f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7bce8b8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x558cd7bce9b8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x558cd7bcea88 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x558cd7bceb58 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x558cd7bcec98 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7bcec08 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7bcede0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558cd7bced50 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7bcef28 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x558cd7bcee98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558cd7bcefe0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558cd7bcf0e0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558cd7bcf050 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558cd7bcf198 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558cd7bcf258 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x558cd7bcf358 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x558cd7bcf4d8 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x558cd7bcf418 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x558cd7bcfc68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558cd7bcf590 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x558cd7bcfbc8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x558cd7bcfac8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x558cd7bcfd48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558cd7bcfe98 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x558cd7bcfe08 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558cd7bcff50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558cd7bd0198 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7bd0010 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x558cd7bd0088 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558cd7bd0328 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x558cd7bd0268 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x558cd7bd0538 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x558cd7bd03f0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x558cd7bd0468 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x558cd7bd05f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558cd7bd0858 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x558cd7bd0760 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x558cd7bd0928 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558cd7bd0928

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558cd7b59280 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x558cd7b59458 prev 0x558cd7b59280 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558cd7b594e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x558cd7b59510 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b5b0e0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x558cd7b5b090 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x558cd7b599c0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x558cd7b598c0 'type'
|     `-TemplateSpecializationType 0x558cd7b59850 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558cd7b59730 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x558cd7b59710 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558cd7b596f0 <col:24> 'unsigned long' 4
|       `-RecordType 0x558cd7b59830 'char_array<4>'
|         `-ClassTemplateSpecialization 0x558cd7b59750 'char_array'
|-TypedefDecl 0x558cd7b5b198 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x558cd7b5b160 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x558cd7b5b140 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x558cd7b5b0e0 'type'
|     `-ElaboratedType 0x558cd7b5b090 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x558cd7b599c0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x558cd7b598c0 'type'
|         `-TemplateSpecializationType 0x558cd7b59850 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558cd7b59730 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x558cd7b59710 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558cd7b596f0 <col:24> 'unsigned long' 4
|           `-RecordType 0x558cd7b59830 'char_array<4>'
|             `-ClassTemplateSpecialization 0x558cd7b59750 'char_array'
|-CXXMethodDecl 0x558cd7b5b318 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x558cd7b5b228 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x558cd7b5b408 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558cd7b5b4e8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x558cd7b5b7b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x558cd7b5b6c0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x558cd7b5b9f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558cd7b5b870 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd7b5b8e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558cd7b5bbc8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558cd7b5bab8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd7b5bb30 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558cd7b5bd28 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x558cd7b5bdf8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x558cd7b5c048 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558cd7b5beb8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x558cd7b5bf30 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558cd7b5c2a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x558cd7b5c118 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x558cd7b5c190 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558cd7b5c468 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x558cd7b5c378 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558cd7b5c628 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x558cd7b5c530 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558cd7b5c6e0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558cd7b5c790 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558cd7b5c9c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558cd7b5c840 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558cd7b5c8b8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558cd7b5cc68 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x558cd7b5cb70 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x558cd7b5cd30 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x558cd7b5cd80 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558cd7b5cdd0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558cd7b467f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x558cd7b68868 prev 0x558cd7b467f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558cd7b69880 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x558cd7b69830 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x558cd7b69810 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x558cd7b696c0 'type'
|     `-SubstTemplateTypeParmType 0x558cd7b58e50 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x558cd7886be0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd7886b88 'T'
|       `-RecordType 0x558cd7b589a0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x558cd7b588b8 'sized_array_memory'
|-FieldDecl 0x558cd7b69980 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x558cd7b699d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558cd7b69a08 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x558cd7b68900 'int' sugar
|   |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558cd78be878 'T'
|   `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b69a98 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x558cd7b69a60 'int &'
|   `-SubstTemplateTypeParmType 0x558cd7b68900 'int' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b69b58 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x558cd7b69b20 'const int &'
|   `-QualType 0x558cd7b68901 'const int' const
|     `-SubstTemplateTypeParmType 0x558cd7b68900 'int' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b69be8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x558cd7b69bb0 'int *'
|   `-SubstTemplateTypeParmType 0x558cd7b68900 'int' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b69c78 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x558cd7b69c40 'const int *'
|   `-QualType 0x558cd7b68901 'const int' const
|     `-SubstTemplateTypeParmType 0x558cd7b68900 'int' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b6a860 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x558cd7b6a810 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x558cd7b6a7f0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x558cd7b6a780 'type'
|     `-SubstTemplateTypeParmType 0x558cd7b6a540 'int' sugar
|       |-TemplateTypeParmType 0x558cd78919e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd7891990 'T'
|       `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b6a8c8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x558cd7b69b20 'const int &'
|   `-QualType 0x558cd7b68901 'const int' const
|     `-SubstTemplateTypeParmType 0x558cd7b68900 'int' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b6a920 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b6a988 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x558cd7b69bb0 'int *'
|   `-SubstTemplateTypeParmType 0x558cd7b68900 'int' sugar
|     |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558cd78be878 'T'
|     `-BuiltinType 0x558cd75c1370 'int'
|-TypedefDecl 0x558cd7b6a9f0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x558cd7b69c40 'const int *'
|   `-QualType 0x558cd7b68901 'const int' const
|     `-SubstTemplateTypeParmType 0x558cd7b68900 'int' sugar
|       |-TemplateTypeParmType 0x558cd78be8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558cd78be878 'T'
|       `-BuiltinType 0x558cd75c1370 'int'
|-EnumDecl 0x558cd7b6aa48 <line:134:5> col:5
| `-EnumConstantDecl 0x558cd7b6ab40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558cd7b6ab20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558cd78bff58 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558cd78bff30 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558cd78bff10 <col:40> 'int' 1
|-CXXConstructorDecl 0x558cd7b6abc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558cd7b6ae18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7b6ac80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd7b6ad20 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x558cd7b6d7a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x558cd7b6d690 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x558cd7b6da68 <line:141:5, col:32> col:12 used Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x558cd7b6d950 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x558cd7b6dd80 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x558cd7b6dc60 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x558cd7b6e090 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x558cd7b6df70 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x558cd7b6e380 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7b6e1c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd7b6e240 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558cd7b6e4a8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x558cd7b6e588 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b6e5e0 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b6e628 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x558cd7b6e6d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b6e730 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b6e7f8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558cd7b6e8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b6e900 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b6e948 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558cd7b6e9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b6ea50 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b6ea98 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558cd7b6eb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b6eba0 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b6ebe8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558cd7b6ec98 <col:20> Inherited
| `-OptimizeNoneAttr 0x558cd7b6ecf0 <col:30> Inherited
|-CXXMethodDecl 0x558cd7b6ed18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558cd7b6edc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558cd7b6ee78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558cd7b6f038 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7b6ef28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558cd7b6efa0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558cd7b6f188 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7b6f0f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b6f338 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x558cd7b6f240 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558cd7b6f3f0 <col:20>
| `-OptimizeNoneAttr 0x558cd7b6f448 <col:30>
|-CXXMethodDecl 0x558cd7b6f568 <line:164:5, col:73> col:49 used operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x558cd7b6f470 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558cd7b6f620 <col:20>
| `-OptimizeNoneAttr 0x558cd7b6f678 <col:30>
|-CXXMethodDecl 0x558cd7b6f730 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7b6f6a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b6f878 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558cd7b6f7e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b6f9a8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x558cd7b6fad8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x558cd7b6fba8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x558cd7b6fc78 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x558cd7b6fdb8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x558cd7b6fd28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b6ff00 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558cd7b6fe70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558cd7b70048 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x558cd7b6ffb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558cd7b70100 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558cd7b70200 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558cd7b70170 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558cd7b702b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558cd7b70378 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x558cd7b70478 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x558cd7b705f8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x558cd7b70538 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x558cd7b70db8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558cd7b706b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x558cd7b70d18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x558cd7b70c18 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x558cd7b70e98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558cd7b70fe8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x558cd7b70f58 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558cd7b710a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558cd7b712e8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558cd7b71160 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x558cd7b711d8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558cd7b714a8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x558cd7b713b8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x558cd7b716f8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x558cd7b71570 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x558cd7b715e8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x558cd7b717b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558cd7b71a18 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x558cd7b71920 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x558cd7b71ae8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x558cd7c00330 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7b3bd08 <../elements/standard/classification.hh:35:5, line:38:5> line:35:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558cd7b3be90 <line:36:2, col:19> col:16 referenced c 'unsigned char [4]'
|-FieldDecl 0x558cd7b3bef0 <line:37:2, col:11> col:11 referenced u 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558cd7b3e970 <line:35:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x558cd7b3eda8 <col:5>
|-CXXConstructorDecl 0x558cd7b3ea78 <col:5> col:5 implicit used constexpr  'void (const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x558cd7b3eb88 <col:5> col:5 'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &'
| `-CompoundStmt 0x558cd7b40b90 <col:5>
|-CXXConstructorDecl 0x558cd7b3ec28 <col:5> col:5 implicit used constexpr  'void (Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558cd7b3ed38 <col:5> col:5 'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &&'
| `-CompoundStmt 0x558cd7b41870 <col:5>
`-CXXDestructorDecl 0x558cd7b40588 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558cd7b40588

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7b3c020 <../elements/standard/classification.hh:39:5, line:42:5> line:39:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558cd7b3c1a0 <line:40:2, col:19> col:16 referenced c 'unsigned char [4]'
|-FieldDecl 0x558cd7b3c200 <line:41:2, col:11> col:11 referenced u 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558cd7b3ee20 <line:39:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x558cd7b3f258 <col:5>
|-CXXConstructorDecl 0x558cd7b3ef28 <col:5> col:5 implicit used constexpr  'void (const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x558cd7b3f038 <col:5> col:5 'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &'
| `-CompoundStmt 0x558cd7b40c48 <col:5>
|-CXXConstructorDecl 0x558cd7b3f0d8 <col:5> col:5 implicit used constexpr  'void (Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558cd7b3f1e8 <col:5> col:5 'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &&'
| `-CompoundStmt 0x558cd7b41968 <col:5>
`-CXXDestructorDecl 0x558cd7b40670 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558cd7b40670

Layout: <CGRecordLayout
  LLVMType:%union.anon.5 = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7b3ba40 <../elements/standard/classification.hh:31:1, line:150:1> line:31:8 referenced struct Insn definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558cd7b3bb58 <col:1, col:8> col:8 implicit referenced struct Insn
|-FieldDecl 0x558cd7b3bbf8 <line:32:5, col:14> col:14 referenced offset 'uint16_t':'unsigned short'
|-FieldDecl 0x558cd7b3bc58 <line:33:5, col:13> col:13 referenced padding 'uint8_t':'unsigned char'
|-FieldDecl 0x558cd7b3bcb8 <line:34:5, col:13> col:13 referenced short_output 'uint8_t':'unsigned char'
|-CXXRecordDecl 0x558cd7b3bd08 <line:35:5, line:38:5> line:35:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558cd7b3be90 <line:36:2, col:19> col:16 referenced c 'unsigned char [4]'
| |-FieldDecl 0x558cd7b3bef0 <line:37:2, col:11> col:11 referenced u 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x558cd7b3e970 <line:35:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558cd7b3eda8 <col:5>
| |-CXXConstructorDecl 0x558cd7b3ea78 <col:5> col:5 implicit used constexpr  'void (const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558cd7b3eb88 <col:5> col:5 'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &'
| | `-CompoundStmt 0x558cd7b40b90 <col:5>
| |-CXXConstructorDecl 0x558cd7b3ec28 <col:5> col:5 implicit used constexpr  'void (Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x558cd7b3ed38 <col:5> col:5 'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &&'
| | `-CompoundStmt 0x558cd7b41870 <col:5>
| `-CXXDestructorDecl 0x558cd7b40588 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558cd7b40588
|-FieldDecl 0x558cd7b3bfb8 <col:5, line:38:7> col:7 referenced mask 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)'
|-CXXRecordDecl 0x558cd7b3c020 <line:39:5, line:42:5> line:39:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558cd7b3c1a0 <line:40:2, col:19> col:16 referenced c 'unsigned char [4]'
| |-FieldDecl 0x558cd7b3c200 <line:41:2, col:11> col:11 referenced u 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x558cd7b3ee20 <line:39:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558cd7b3f258 <col:5>
| |-CXXConstructorDecl 0x558cd7b3ef28 <col:5> col:5 implicit used constexpr  'void (const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558cd7b3f038 <col:5> col:5 'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &'
| | `-CompoundStmt 0x558cd7b40c48 <col:5>
| |-CXXConstructorDecl 0x558cd7b3f0d8 <col:5> col:5 implicit used constexpr  'void (Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x558cd7b3f1e8 <col:5> col:5 'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &&'
| | `-CompoundStmt 0x558cd7b41968 <col:5>
| `-CXXDestructorDecl 0x558cd7b40670 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558cd7b40670
|-FieldDecl 0x558cd7b3c2c8 <col:5, line:42:7> col:7 referenced value 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)'
|-FieldDecl 0x558cd7b3c3c8 <line:43:5, col:16> col:13 referenced j 'int32_t [2]'
|-EnumDecl 0x558cd7b3c418 <line:45:5, line:47:5> line:45:5
| `-EnumConstantDecl 0x558cd7b3c520 <line:46:2, col:10> col:2 width 'Classification::Wordwise::Insn::(anonymous enum at ../elements/standard/classification.hh:45:5)'
|   `-ImplicitCastExpr 0x558cd7b3c570 <col:10> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7b3c500 <col:10> 'int' Int: 4
|       `-IntegerLiteral 0x558cd7b3c4e0 <col:10> 'int' 4
|-CXXConstructorDecl 0x558cd7b3c9a8 <line:49:5, line:57:5> line:49:5 Insn 'void (int, uint32_t, uint32_t, int32_t, int32_t, bool)'
| |-ParmVarDecl 0x558cd7b3c5a0 <col:10, col:14> col:14 used offset_ 'int'
| |-ParmVarDecl 0x558cd7b3c618 <col:23, col:32> col:32 used value_ 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558cd7b3c690 <col:40, col:49> col:49 used mask_ 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558cd7b3c708 <line:50:3, col:22> col:11 used failure_ 'int32_t':'int' cinit
| | `-ImplicitCastExpr 0x558cd7b3e748 <col:22> 'int32_t':'int' <IntegralCast>
| |   `-DeclRefExpr 0x558cd7b3e728 <col:22> 'Classification::Jumps' EnumConstant 0x558cd7b3b558 'j_failure' 'Classification::Jumps'
| |-ParmVarDecl 0x558cd7b3c780 <col:33, col:52> col:41 used success_ 'int32_t':'int' cinit
| | `-ImplicitCastExpr 0x558cd7b3e780 <col:52> 'int32_t':'int' <IntegralCast>
| |   `-DeclRefExpr 0x558cd7b3e760 <col:52> 'Classification::Jumps' EnumConstant 0x558cd7b3b5a8 'j_success' 'Classification::Jumps'
| |-ParmVarDecl 0x558cd7b3c7f8 <line:51:3, col:24> col:8 used short_output_ 'bool' cinit
| | `-CXXBoolLiteralExpr 0x558cd7b3e798 <col:24> 'bool' false
| |-CXXCtorInitializer Field 0x558cd7b3bbf8 'offset' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x558cd7b3e800 <line:52:11> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-ImplicitCastExpr 0x558cd7b3e7e8 <col:11> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x558cd7b3e7a8 <col:11> 'int' lvalue ParmVar 0x558cd7b3c5a0 'offset_' 'int'
| |-CXXCtorInitializer Field 0x558cd7b3bc58 'padding' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x558cd7b3e880 <col:29> 'uint8_t':'unsigned char' <IntegralCast>
| |   `-IntegerLiteral 0x558cd7b3e840 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x558cd7b3bcb8 'short_output' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x558cd7b3e918 <col:46> 'uint8_t':'unsigned char' <IntegralCast>
| |   `-ImplicitCastExpr 0x558cd7b3e900 <col:46> 'bool' <LValueToRValue>
| |     `-DeclRefExpr 0x558cd7b3e8c0 <col:46> 'bool' lvalue ParmVar 0x558cd7b3c7f8 'short_output_' 'bool'
| |-CXXCtorInitializer Field 0x558cd7b3bfb8 'mask' 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)'
| | `-CXXConstructExpr 0x558cd7b3edb8 <line:49:5> 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558cd7b3c2c8 'value' 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)'
| | `-CXXConstructExpr 0x558cd7b3f268 <col:5> 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)' 'void () noexcept'
| `-CompoundStmt 0x558cd7b3f6a8 <line:52:61, line:57:5>
|   |-BinaryOperator 0x558cd7b3f388 <line:53:2, col:11> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x558cd7b3f320 <col:2, col:7> 'uint32_t':'unsigned int' lvalue .u 0x558cd7b3bef0
|   | | `-MemberExpr 0x558cd7b3f2f0 <col:2> 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' lvalue ->mask 0x558cd7b3bfb8
|   | |   `-CXXThisExpr 0x558cd7b3f2e0 <col:2> 'Classification::Wordwise::Insn *' implicit this
|   | `-ImplicitCastExpr 0x558cd7b3f370 <col:11> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558cd7b3f350 <col:11> 'uint32_t':'unsigned int' lvalue ParmVar 0x558cd7b3c690 'mask_' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x558cd7b3f4a8 <line:54:2, col:21> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x558cd7b3f3e8 <col:2, col:8> 'uint32_t':'unsigned int' lvalue .u 0x558cd7b3c200
|   | | `-MemberExpr 0x558cd7b3f3b8 <col:2> 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)' lvalue ->value 0x558cd7b3c2c8
|   | |   `-CXXThisExpr 0x558cd7b3f3a8 <col:2> 'Classification::Wordwise::Insn *' implicit this
|   | `-BinaryOperator 0x558cd7b3f488 <col:12, col:21> 'unsigned int' '&'
|   |   |-ImplicitCastExpr 0x558cd7b3f458 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558cd7b3f418 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x558cd7b3c618 'value_' 'uint32_t':'unsigned int'
|   |   `-ImplicitCastExpr 0x558cd7b3f470 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x558cd7b3f438 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558cd7b3c690 'mask_' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x558cd7b3f598 <line:55:2, col:9> 'int32_t':'int' lvalue '='
|   | |-ArraySubscriptExpr 0x558cd7b3f540 <col:2, col:5> 'int32_t':'int' lvalue
|   | | |-ImplicitCastExpr 0x558cd7b3f528 <col:2> 'int32_t *' <ArrayToPointerDecay>
|   | | | `-MemberExpr 0x558cd7b3f4d8 <col:2> 'int32_t [2]' lvalue ->j 0x558cd7b3c3c8
|   | | |   `-CXXThisExpr 0x558cd7b3f4c8 <col:2> 'Classification::Wordwise::Insn *' implicit this
|   | | `-IntegerLiteral 0x558cd7b3f508 <col:4> 'int' 0
|   | `-ImplicitCastExpr 0x558cd7b3f580 <col:9> 'int32_t':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558cd7b3f560 <col:9> 'int32_t':'int' lvalue ParmVar 0x558cd7b3c708 'failure_' 'int32_t':'int'
|   `-BinaryOperator 0x558cd7b3f688 <line:56:2, col:9> 'int32_t':'int' lvalue '='
|     |-ArraySubscriptExpr 0x558cd7b3f630 <col:2, col:5> 'int32_t':'int' lvalue
|     | |-ImplicitCastExpr 0x558cd7b3f618 <col:2> 'int32_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558cd7b3f5c8 <col:2> 'int32_t [2]' lvalue ->j 0x558cd7b3c3c8
|     | |   `-CXXThisExpr 0x558cd7b3f5b8 <col:2> 'Classification::Wordwise::Insn *' implicit this
|     | `-IntegerLiteral 0x558cd7b3f5f8 <col:4> 'int' 1
|     `-ImplicitCastExpr 0x558cd7b3f670 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b3f650 <col:9> 'int32_t':'int' lvalue ParmVar 0x558cd7b3c780 'success_' 'int32_t':'int'
|-CXXMethodDecl 0x558cd7b3caf8 <line:59:5, col:40> col:13 yes 'int32_t () const'
| `-CompoundStmt 0x558cd7b3f808 <col:25, col:40>
|   `-ReturnStmt 0x558cd7b3f7f8 <col:27, col:37>
|     `-ImplicitCastExpr 0x558cd7b3f7e0 <col:34, col:37> 'int32_t':'int' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558cd7b3f7c0 <col:34, col:37> 'const int32_t':'const int' lvalue
|         |-ImplicitCastExpr 0x558cd7b3f7a8 <col:34> 'const int32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558cd7b3f6e8 <col:34> 'int32_t const[2]' lvalue ->j 0x558cd7b3c3c8
|         |   `-CXXThisExpr 0x558cd7b3f6d8 <col:34> 'const Classification::Wordwise::Insn *' implicit this
|         `-IntegerLiteral 0x558cd7b3f718 <col:36> 'int' 1
|-CXXMethodDecl 0x558cd7b3cbb8 <line:60:5, col:39> col:13 no 'int32_t () const'
| `-CompoundStmt 0x558cd7b3f8e0 <col:24, col:39>
|   `-ReturnStmt 0x558cd7b3f8d0 <col:26, col:36>
|     `-ImplicitCastExpr 0x558cd7b3f8b8 <col:33, col:36> 'int32_t':'int' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558cd7b3f898 <col:33, col:36> 'const int32_t':'const int' lvalue
|         |-ImplicitCastExpr 0x558cd7b3f880 <col:33> 'const int32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558cd7b3f830 <col:33> 'int32_t const[2]' lvalue ->j 0x558cd7b3c3c8
|         |   `-CXXThisExpr 0x558cd7b3f820 <col:33> 'const Classification::Wordwise::Insn *' implicit this
|         `-IntegerLiteral 0x558cd7b3f860 <col:35> 'int' 0
|-CXXMethodDecl 0x558cd7b3cd00 <line:62:5, col:41> col:10 set_yes 'void (int)'
| |-ParmVarDecl 0x558cd7b3cc70 <col:18, col:22> col:22 used dst 'int'
| `-CompoundStmt 0x558cd7b3f9e8 <col:27, col:41>
|   `-BinaryOperator 0x558cd7b3f9c8 <col:29, col:36> 'int32_t':'int' lvalue '='
|     |-ArraySubscriptExpr 0x558cd7b3f970 <col:29, col:32> 'int32_t':'int' lvalue
|     | |-ImplicitCastExpr 0x558cd7b3f958 <col:29> 'int32_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558cd7b3f908 <col:29> 'int32_t [2]' lvalue ->j 0x558cd7b3c3c8
|     | |   `-CXXThisExpr 0x558cd7b3f8f8 <col:29> 'Classification::Wordwise::Insn *' implicit this
|     | `-IntegerLiteral 0x558cd7b3f938 <col:31> 'int' 1
|     `-ImplicitCastExpr 0x558cd7b3f9b0 <col:36> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b3f990 <col:36> 'int' lvalue ParmVar 0x558cd7b3cc70 'dst' 'int'
|-CXXMethodDecl 0x558cd7b3ce50 <line:63:5, col:40> col:10 set_no 'void (int)'
| |-ParmVarDecl 0x558cd7b3cdc0 <col:17, col:21> col:21 used dst 'int'
| `-CompoundStmt 0x558cd7b3faf0 <col:26, col:40>
|   `-BinaryOperator 0x558cd7b3fad0 <col:28, col:35> 'int32_t':'int' lvalue '='
|     |-ArraySubscriptExpr 0x558cd7b3fa78 <col:28, col:31> 'int32_t':'int' lvalue
|     | |-ImplicitCastExpr 0x558cd7b3fa60 <col:28> 'int32_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558cd7b3fa10 <col:28> 'int32_t [2]' lvalue ->j 0x558cd7b3c3c8
|     | |   `-CXXThisExpr 0x558cd7b3fa00 <col:28> 'Classification::Wordwise::Insn *' implicit this
|     | `-IntegerLiteral 0x558cd7b3fa40 <col:30> 'int' 0
|     `-ImplicitCastExpr 0x558cd7b3fab8 <col:35> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b3fa98 <col:35> 'int' lvalue ParmVar 0x558cd7b3cdc0 'dst' 'int'
|-CXXMethodDecl 0x558cd7b3cf20 <line:65:5, line:76:5> line:65:14 required_length 'unsigned int () const'
| `-CompoundStmt 0x558cd7b40350 <col:38, line:76:5>
|   `-IfStmt 0x558cd7b40328 <line:66:2, line:75:22> has_else
|     |-BinaryOperator 0x558cd7b3fbc8 <line:66:6, col:16> 'bool' '=='
|     | |-ImplicitCastExpr 0x558cd7b3fb98 <col:6, col:11> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-MemberExpr 0x558cd7b3fb48 <col:6, col:11> 'const uint32_t':'const unsigned int' lvalue .u 0x558cd7b3bef0
|     | |   `-MemberExpr 0x558cd7b3fb18 <col:6> 'const union (anonymous union at ../elements/standard/classification.hh:35:5)':'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' lvalue ->mask 0x558cd7b3bfb8
|     | |     `-CXXThisExpr 0x558cd7b3fb08 <col:6> 'const Classification::Wordwise::Insn *' implicit this
|     | `-ImplicitCastExpr 0x558cd7b3fbb0 <col:16> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x558cd7b3fb78 <col:16> 'int' 0
|     |-ReturnStmt 0x558cd7b3fc20 <line:67:6, col:13>
|     | `-ImplicitCastExpr 0x558cd7b3fc08 <col:13> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x558cd7b3fbe8 <col:13> 'int' 0
|     `-IfStmt 0x558cd7b40300 <line:68:7, line:75:22> has_else
|       |-ImplicitCastExpr 0x558cd7b3fd48 <line:68:11, col:19> 'bool' <IntegralToBoolean>
|       | `-ImplicitCastExpr 0x558cd7b3fd30 <col:11, col:19> 'unsigned char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x558cd7b3fd10 <col:11, col:19> 'const unsigned char' lvalue
|       |     |-ImplicitCastExpr 0x558cd7b3fcf8 <col:11, col:16> 'const unsigned char *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x558cd7b3fc70 <col:11, col:16> 'unsigned char const[4]' lvalue .c 0x558cd7b3be90
|       |     |   `-MemberExpr 0x558cd7b3fc40 <col:11> 'const union (anonymous union at ../elements/standard/classification.hh:35:5)':'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' lvalue ->mask 0x558cd7b3bfb8
|       |     |     `-CXXThisExpr 0x558cd7b3fc30 <col:11> 'const Classification::Wordwise::Insn *' implicit this
|       |     `-IntegerLiteral 0x558cd7b3fca0 <col:18> 'int' 3
|       |-ReturnStmt 0x558cd7b3fe28 <line:69:6, col:22>
|       | `-ImplicitCastExpr 0x558cd7b3fe10 <col:13, col:22> 'unsigned int' <IntegralCast>
|       |   `-BinaryOperator 0x558cd7b3fdf0 <col:13, col:22> 'int' '+'
|       |     |-ImplicitCastExpr 0x558cd7b3fdd8 <col:13> 'int' <IntegralCast>
|       |     | `-ImplicitCastExpr 0x558cd7b3fdc0 <col:13> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     |   `-MemberExpr 0x558cd7b3fd70 <col:13> 'const uint16_t':'const unsigned short' lvalue ->offset 0x558cd7b3bbf8
|       |     |     `-CXXThisExpr 0x558cd7b3fd60 <col:13> 'const Classification::Wordwise::Insn *' implicit this
|       |     `-IntegerLiteral 0x558cd7b3fda0 <col:22> 'int' 4
|       `-IfStmt 0x558cd7b402d8 <line:70:7, line:75:22> has_else
|         |-ImplicitCastExpr 0x558cd7b3ff18 <line:70:11, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x558cd7b3ff00 <col:11, col:19> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x558cd7b3fee0 <col:11, col:19> 'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x558cd7b3fec8 <col:11, col:16> 'const unsigned char *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x558cd7b3fe78 <col:11, col:16> 'unsigned char const[4]' lvalue .c 0x558cd7b3be90
|         |     |   `-MemberExpr 0x558cd7b3fe48 <col:11> 'const union (anonymous union at ../elements/standard/classification.hh:35:5)':'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' lvalue ->mask 0x558cd7b3bfb8
|         |     |     `-CXXThisExpr 0x558cd7b3fe38 <col:11> 'const Classification::Wordwise::Insn *' implicit this
|         |     `-IntegerLiteral 0x558cd7b3fea8 <col:18> 'int' 2
|         |-ReturnStmt 0x558cd7b3fff8 <line:71:6, col:22>
|         | `-ImplicitCastExpr 0x558cd7b3ffe0 <col:13, col:22> 'unsigned int' <IntegralCast>
|         |   `-BinaryOperator 0x558cd7b3ffc0 <col:13, col:22> 'int' '+'
|         |     |-ImplicitCastExpr 0x558cd7b3ffa8 <col:13> 'int' <IntegralCast>
|         |     | `-ImplicitCastExpr 0x558cd7b3ff90 <col:13> 'uint16_t':'unsigned short' <LValueToRValue>
|         |     |   `-MemberExpr 0x558cd7b3ff40 <col:13> 'const uint16_t':'const unsigned short' lvalue ->offset 0x558cd7b3bbf8
|         |     |     `-CXXThisExpr 0x558cd7b3ff30 <col:13> 'const Classification::Wordwise::Insn *' implicit this
|         |     `-IntegerLiteral 0x558cd7b3ff70 <col:22> 'int' 3
|         `-IfStmt 0x558cd7b402b0 <line:72:7, line:75:22> has_else
|           |-ImplicitCastExpr 0x558cd7b400e8 <line:72:11, col:19> 'bool' <IntegralToBoolean>
|           | `-ImplicitCastExpr 0x558cd7b400d0 <col:11, col:19> 'unsigned char' <LValueToRValue>
|           |   `-ArraySubscriptExpr 0x558cd7b400b0 <col:11, col:19> 'const unsigned char' lvalue
|           |     |-ImplicitCastExpr 0x558cd7b40098 <col:11, col:16> 'const unsigned char *' <ArrayToPointerDecay>
|           |     | `-MemberExpr 0x558cd7b40048 <col:11, col:16> 'unsigned char const[4]' lvalue .c 0x558cd7b3be90
|           |     |   `-MemberExpr 0x558cd7b40018 <col:11> 'const union (anonymous union at ../elements/standard/classification.hh:35:5)':'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' lvalue ->mask 0x558cd7b3bfb8
|           |     |     `-CXXThisExpr 0x558cd7b40008 <col:11> 'const Classification::Wordwise::Insn *' implicit this
|           |     `-IntegerLiteral 0x558cd7b40078 <col:18> 'int' 1
|           |-ReturnStmt 0x558cd7b401c8 <line:73:6, col:22>
|           | `-ImplicitCastExpr 0x558cd7b401b0 <col:13, col:22> 'unsigned int' <IntegralCast>
|           |   `-BinaryOperator 0x558cd7b40190 <col:13, col:22> 'int' '+'
|           |     |-ImplicitCastExpr 0x558cd7b40178 <col:13> 'int' <IntegralCast>
|           |     | `-ImplicitCastExpr 0x558cd7b40160 <col:13> 'uint16_t':'unsigned short' <LValueToRValue>
|           |     |   `-MemberExpr 0x558cd7b40110 <col:13> 'const uint16_t':'const unsigned short' lvalue ->offset 0x558cd7b3bbf8
|           |     |     `-CXXThisExpr 0x558cd7b40100 <col:13> 'const Classification::Wordwise::Insn *' implicit this
|           |     `-IntegerLiteral 0x558cd7b40140 <col:22> 'int' 2
|           `-ReturnStmt 0x558cd7b402a0 <line:75:6, col:22>
|             `-ImplicitCastExpr 0x558cd7b40288 <col:13, col:22> 'unsigned int' <IntegralCast>
|               `-BinaryOperator 0x558cd7b40268 <col:13, col:22> 'int' '+'
|                 |-ImplicitCastExpr 0x558cd7b40250 <col:13> 'int' <IntegralCast>
|                 | `-ImplicitCastExpr 0x558cd7b40238 <col:13> 'uint16_t':'unsigned short' <LValueToRValue>
|                 |   `-MemberExpr 0x558cd7b401e8 <col:13> 'const uint16_t':'const unsigned short' lvalue ->offset 0x558cd7b3bbf8
|                 |     `-CXXThisExpr 0x558cd7b401d8 <col:13> 'const Classification::Wordwise::Insn *' implicit this
|                 `-IntegerLiteral 0x558cd7b40218 <col:22> 'int' 1
|-CXXMethodDecl 0x558cd7b3d148 <line:81:5, col:56> col:10 used implies 'bool (const Classification::Wordwise::Insn &, unsigned int) const'
| |-ParmVarDecl 0x558cd7b3cff8 <col:18, col:30> col:30 x 'const Classification::Wordwise::Insn &'
| `-ParmVarDecl 0x558cd7b3d078 <col:33, col:42> col:42 known_length 'unsigned int'
|-CXXMethodDecl 0x558cd7b3d320 <line:89:5, col:60> col:10 used not_implies 'bool (const Classification::Wordwise::Insn &, unsigned int) const'
| |-ParmVarDecl 0x558cd7b3d208 <col:22, col:34> col:34 x 'const Classification::Wordwise::Insn &'
| `-ParmVarDecl 0x558cd7b3d288 <col:37, col:46> col:46 known_length 'unsigned int'
|-CXXMethodDecl 0x558cd7b3d4f8 <line:93:5, col:60> col:10 used implies_not 'bool (const Classification::Wordwise::Insn &, unsigned int) const'
| |-ParmVarDecl 0x558cd7b3d3e0 <col:22, col:34> col:34 x 'const Classification::Wordwise::Insn &'
| `-ParmVarDecl 0x558cd7b3d460 <col:37, col:46> col:46 known_length 'unsigned int'
|-CXXMethodDecl 0x558cd7b3d6d0 <line:98:5, col:64> col:10 used not_implies_not 'bool (const Classification::Wordwise::Insn &, unsigned int) const'
| |-ParmVarDecl 0x558cd7b3d5b8 <col:26, col:38> col:38 x 'const Classification::Wordwise::Insn &'
| `-ParmVarDecl 0x558cd7b3d638 <col:41, col:50> col:50 known_length 'unsigned int'
|-CXXMethodDecl 0x558cd7b3d8d8 <line:105:5, col:57> col:10 compatible 'bool (const Classification::Wordwise::Insn &, bool) const'
| |-ParmVarDecl 0x558cd7b3d790 <col:21, col:33> col:33 x 'const Classification::Wordwise::Insn &'
| `-ParmVarDecl 0x558cd7b3d808 <col:36, col:41> col:41 consider_short 'bool'
|-CXXMethodDecl 0x558cd7b3da58 <line:111:5, col:47> col:10 generalizable_or_pair 'bool (const Classification::Wordwise::Insn &) const'
| `-ParmVarDecl 0x558cd7b3d998 <col:32, col:44> col:44 x 'const Classification::Wordwise::Insn &'
|-CXXMethodDecl 0x558cd7b3db20 <line:117:5, col:22> col:10 flippable 'bool () const'
|-CXXMethodDecl 0x558cd7b3dbe0 <line:120:5, col:15> col:10 flip 'void ()'
|-CXXMethodDecl 0x558cd7b3dd58 <line:124:5, line:130:5> line:124:10 offset_by 'Classification::Wordwise::Insn (int) const'
| |-ParmVarDecl 0x558cd7b3dc98 <col:20, col:24> col:24 used offset 'int'
| `-CompoundStmt 0x558cd7b41ba8 <col:38, line:130:5>
|   |-DeclStmt 0x558cd7b40e30 <line:125:9, col:23>
|   | `-VarDecl 0x558cd7b40378 <col:9, col:19> col:14 used i 'Classification::Wordwise::Insn' nrvo cinit
|   |   `-CXXConstructExpr 0x558cd7b40e00 <col:18, col:19> 'Classification::Wordwise::Insn' 'void (const Classification::Wordwise::Insn &) noexcept'
|   |     `-UnaryOperator 0x558cd7b403f0 <col:18, col:19> 'const Classification::Wordwise::Insn' lvalue prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x558cd7b403e0 <col:19> 'const Classification::Wordwise::Insn *' this
|   |-ForStmt 0x558cd7b41468 <line:126:9, line:128:27>
|   | |-DeclStmt 0x558cd7b40ee8 <line:126:14, col:23>
|   | | `-VarDecl 0x558cd7b40e60 <col:14, col:22> col:18 used k 'int' cinit
|   | |   `-IntegerLiteral 0x558cd7b40ec8 <col:22> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x558cd7b40f58 <col:25, col:29> 'bool' '<'
|   | | |-ImplicitCastExpr 0x558cd7b40f40 <col:25> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x558cd7b40f00 <col:25> 'int' lvalue Var 0x558cd7b40e60 'k' 'int'
|   | | `-IntegerLiteral 0x558cd7b40f20 <col:29> 'int' 2
|   | |-UnaryOperator 0x558cd7b40f98 <col:32, col:34> 'int' lvalue prefix '++'
|   | | `-DeclRefExpr 0x558cd7b40f78 <col:34> 'int' lvalue Var 0x558cd7b40e60 'k' 'int'
|   | `-IfStmt 0x558cd7b41450 <line:127:13, line:128:27>
|   |   |-BinaryOperator 0x558cd7b410a8 <line:127:17, col:26> 'bool' '>'
|   |   | |-ImplicitCastExpr 0x558cd7b41090 <col:17, col:22> 'int32_t':'int' <LValueToRValue>
|   |   | | `-ArraySubscriptExpr 0x558cd7b41050 <col:17, col:22> 'int32_t':'int' lvalue
|   |   | |   |-ImplicitCastExpr 0x558cd7b41020 <col:17, col:19> 'int32_t *' <ArrayToPointerDecay>
|   |   | |   | `-MemberExpr 0x558cd7b40fd0 <col:17, col:19> 'int32_t [2]' lvalue .j 0x558cd7b3c3c8
|   |   | |   |   `-DeclRefExpr 0x558cd7b40fb0 <col:17> 'Classification::Wordwise::Insn' lvalue Var 0x558cd7b40378 'i' 'Classification::Wordwise::Insn'
|   |   | |   `-ImplicitCastExpr 0x558cd7b41038 <col:21> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x558cd7b41000 <col:21> 'int' lvalue Var 0x558cd7b40e60 'k' 'int'
|   |   | `-IntegerLiteral 0x558cd7b41070 <col:26> 'int' 0
|   |   `-CompoundAssignOperator 0x558cd7b41420 <line:128:17, col:27> 'int32_t':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-ArraySubscriptExpr 0x558cd7b413c8 <col:17, col:22> 'int32_t':'int' lvalue
|   |     | |-ImplicitCastExpr 0x558cd7b41398 <col:17, col:19> 'int32_t *' <ArrayToPointerDecay>
|   |     | | `-MemberExpr 0x558cd7b41348 <col:17, col:19> 'int32_t [2]' lvalue .j 0x558cd7b3c3c8
|   |     | |   `-DeclRefExpr 0x558cd7b41328 <col:17> 'Classification::Wordwise::Insn' lvalue Var 0x558cd7b40378 'i' 'Classification::Wordwise::Insn'
|   |     | `-ImplicitCastExpr 0x558cd7b413b0 <col:21> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558cd7b41378 <col:21> 'int' lvalue Var 0x558cd7b40e60 'k' 'int'
|   |     `-ImplicitCastExpr 0x558cd7b41408 <col:27> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x558cd7b413e8 <col:27> 'int' lvalue ParmVar 0x558cd7b3dc98 'offset' 'int'
|   `-ReturnStmt 0x558cd7b41b90 <line:129:9, col:16>
|     `-CXXConstructExpr 0x558cd7b41b60 <col:16> 'Classification::Wordwise::Insn' 'void (Classification::Wordwise::Insn &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558cd7b414c0 <col:16> 'Classification::Wordwise::Insn' xvalue <NoOp>
|         `-DeclRefExpr 0x558cd7b414a0 <col:16> 'Classification::Wordwise::Insn' lvalue Var 0x558cd7b40378 'i' 'Classification::Wordwise::Insn'
|-CXXMethodDecl 0x558cd7b3de20 <line:132:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x558cd7b3e020 <line:134:5, line:136:5> line:134:16 compare 'int (const Classification::Wordwise::Insn &, const Classification::Wordwise::Insn &)' static
| |-ParmVarDecl 0x558cd7b3ded0 <col:24, col:36> col:36 used a 'const Classification::Wordwise::Insn &'
| |-ParmVarDecl 0x558cd7b3df48 <col:39, col:51> col:51 used b 'const Classification::Wordwise::Insn &'
| `-CompoundStmt 0x558cd7b41d70 <col:54, line:136:5>
|   `-ReturnStmt 0x558cd7b41d60 <line:135:2, col:26>
|     `-CallExpr 0x558cd7b41ce0 <col:9, col:26> 'int'
|       |-ImplicitCastExpr 0x558cd7b41cc8 <col:9> 'int (*)(const void *, const void *, size_t) throw()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558cd7b41ca8 <col:9> 'int (const void *, const void *, size_t) throw()' lvalue Function 0x558cd7821638 'memcmp' 'int (const void *, const void *, size_t) throw()'
|       |-ImplicitCastExpr 0x558cd7b41d18 <col:16, col:17> 'const void *' <BitCast>
|       | `-UnaryOperator 0x558cd7b41c38 <col:16, col:17> 'const Classification::Wordwise::Insn *' prefix '&' cannot overflow
|       |   `-DeclRefExpr 0x558cd7b41c18 <col:17> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b3ded0 'a' 'const Classification::Wordwise::Insn &'
|       |-ImplicitCastExpr 0x558cd7b41d30 <col:20, col:21> 'const void *' <BitCast>
|       | `-UnaryOperator 0x558cd7b41c70 <col:20, col:21> 'const Classification::Wordwise::Insn *' prefix '&' cannot overflow
|       |   `-DeclRefExpr 0x558cd7b41c50 <col:21> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b3df48 'b' 'const Classification::Wordwise::Insn &'
|       `-ImplicitCastExpr 0x558cd7b41d48 <col:24> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558cd7b41c88 <col:24> 'int' 12
|-AccessSpecDecl 0x558cd7b3e0d0 <line:138:3, col:10> col:3 private
|-CXXMethodDecl 0x558cd7b3e368 <line:140:5, line:146:5> line:140:17 implies_short_ok 'bool (bool, const Classification::Wordwise::Insn &, bool, unsigned int) const' inline
| |-ParmVarDecl 0x558cd7b3e108 <col:34, col:39> col:39 used direction 'bool'
| |-ParmVarDecl 0x558cd7b3e180 <col:50, col:62> col:62 used x 'const Classification::Wordwise::Insn &'
| |-ParmVarDecl 0x558cd7b3e1f8 <col:65, col:70> col:70 used next_direction 'bool'
| |-ParmVarDecl 0x558cd7b3e278 <col:86, col:95> col:95 used known_length 'unsigned int'
| `-CompoundStmt 0x558cd7b45aa0 <col:115, line:146:5>
|   `-IfStmt 0x558cd7b45a78 <line:142:2, line:145:77> has_else
|     |-BinaryOperator 0x558cd7b41fc8 <line:142:6, col:55> 'bool' '||'
|     | |-BinaryOperator 0x558cd7b41e48 <col:6, col:22> 'bool' '!='
|     | | |-ImplicitCastExpr 0x558cd7b41e18 <col:6> 'int' <IntegralCast>
|     | | | `-ImplicitCastExpr 0x558cd7b41de8 <col:6> 'uint8_t':'unsigned char' <LValueToRValue>
|     | | |   `-MemberExpr 0x558cd7b41d98 <col:6> 'const uint8_t':'const unsigned char' lvalue ->short_output 0x558cd7b3bcb8
|     | | |     `-CXXThisExpr 0x558cd7b41d88 <col:6> 'const Classification::Wordwise::Insn *' implicit this
|     | | `-ImplicitCastExpr 0x558cd7b41e30 <col:22> 'int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x558cd7b41e00 <col:22> 'bool' <LValueToRValue>
|     | |     `-DeclRefExpr 0x558cd7b41dc8 <col:22> 'bool' lvalue ParmVar 0x558cd7b3e108 'direction' 'bool'
|     | `-BinaryOperator 0x558cd7b41fa8 <col:35, col:55> 'bool' '<='
|     |   |-BinaryOperator 0x558cd7b41ef8 <col:35, col:44> 'int' '+'
|     |   | |-ImplicitCastExpr 0x558cd7b41ee0 <col:35> 'int' <IntegralCast>
|     |   | | `-ImplicitCastExpr 0x558cd7b41ec8 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|     |   | |   `-MemberExpr 0x558cd7b41e78 <col:35> 'const uint16_t':'const unsigned short' lvalue ->offset 0x558cd7b3bbf8
|     |   | |     `-CXXThisExpr 0x558cd7b41e68 <col:35> 'const Classification::Wordwise::Insn *' implicit this
|     |   | `-IntegerLiteral 0x558cd7b41ea8 <col:44> 'int' 4
|     |   `-CStyleCastExpr 0x558cd7b41f80 <col:49, col:55> 'int' <NoOp>
|     |     `-ImplicitCastExpr 0x558cd7b41f68 <col:55> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-ImplicitCastExpr 0x558cd7b41f50 <col:55> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|     |         `-DeclRefExpr 0x558cd7b41f18 <col:55> 'unsigned int' lvalue ParmVar 0x558cd7b3e278 'known_length' 'unsigned int'
|     |-ReturnStmt 0x558cd7b45910 <line:143:6, col:13>
|     | `-CXXBoolLiteralExpr 0x558cd7b41fe8 <col:13> 'bool' true
|     `-ReturnStmt 0x558cd7b45a68 <line:145:6, col:77>
|       `-CXXMemberCallExpr 0x558cd7b459e0 <col:13, col:77> 'bool'
|         |-MemberExpr 0x558cd7b45930 <col:13> '<bound member function type>' ->hard_implies_short_ok 0x558cd7b3e650
|         | `-CXXThisExpr 0x558cd7b45920 <col:13> 'const Classification::Wordwise::Insn *' implicit this
|         |-ImplicitCastExpr 0x558cd7b45a20 <col:35> 'bool' <LValueToRValue>
|         | `-DeclRefExpr 0x558cd7b45960 <col:35> 'bool' lvalue ParmVar 0x558cd7b3e108 'direction' 'bool'
|         |-DeclRefExpr 0x558cd7b45980 <col:46> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b3e180 'x' 'const Classification::Wordwise::Insn &'
|         |-ImplicitCastExpr 0x558cd7b45a38 <col:49> 'bool' <LValueToRValue>
|         | `-DeclRefExpr 0x558cd7b459a0 <col:49> 'bool' lvalue ParmVar 0x558cd7b3e1f8 'next_direction' 'bool'
|         `-ImplicitCastExpr 0x558cd7b45a50 <col:65> 'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x558cd7b459c0 <col:65> 'unsigned int' lvalue ParmVar 0x558cd7b3e278 'known_length' 'unsigned int'
|-CXXMethodDecl 0x558cd7b3e650 <line:148:5, col:107> col:10 used hard_implies_short_ok 'bool (bool, const Classification::Wordwise::Insn &, bool, unsigned int) const'
| |-ParmVarDecl 0x558cd7b3e438 <col:32, col:37> col:37 direction 'bool'
| |-ParmVarDecl 0x558cd7b3e4b0 <col:48, col:60> col:60 x 'const Classification::Wordwise::Insn &'
| |-ParmVarDecl 0x558cd7b3e528 <col:63, col:68> col:68 next_direction 'bool'
| `-ParmVarDecl 0x558cd7b3e5a8 <col:84, col:93> col:93 known_length 'unsigned int'
|-CXXConstructorDecl 0x558cd7b40408 <line:31:8> col:8 implicit used constexpr Insn 'void (const Classification::Wordwise::Insn &) noexcept' inline default trivial
| |-ParmVarDecl 0x558cd7b40518 <col:8> col:8 used 'const Classification::Wordwise::Insn &'
| |-CXXCtorInitializer Field 0x558cd7b3bbf8 'offset' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x558cd7b409e0 <col:8> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x558cd7b409b0 <col:8> 'const uint16_t':'const unsigned short' lvalue .offset 0x558cd7b3bbf8
| |     `-DeclRefExpr 0x558cd7b40990 <col:8> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40518 '' 'const Classification::Wordwise::Insn &'
| |-CXXCtorInitializer Field 0x558cd7b3bc58 'padding' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x558cd7b40a70 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x558cd7b40a40 <col:8> 'const uint8_t':'const unsigned char' lvalue .padding 0x558cd7b3bc58
| |     `-DeclRefExpr 0x558cd7b40a20 <col:8> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40518 '' 'const Classification::Wordwise::Insn &'
| |-CXXCtorInitializer Field 0x558cd7b3bcb8 'short_output' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x558cd7b40b00 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x558cd7b40ad0 <col:8> 'const uint8_t':'const unsigned char' lvalue .short_output 0x558cd7b3bcb8
| |     `-DeclRefExpr 0x558cd7b40ab0 <col:8> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40518 '' 'const Classification::Wordwise::Insn &'
| |-CXXCtorInitializer Field 0x558cd7b3bfb8 'mask' 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)'
| | `-CXXConstructExpr 0x558cd7b40ba0 <col:8> 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' 'void (const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &) noexcept'
| |   `-MemberExpr 0x558cd7b40b60 <col:8> 'const union (anonymous union at ../elements/standard/classification.hh:35:5)':'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' lvalue .mask 0x558cd7b3bfb8
| |     `-DeclRefExpr 0x558cd7b40b40 <col:8> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40518 '' 'const Classification::Wordwise::Insn &'
| |-CXXCtorInitializer Field 0x558cd7b3c2c8 'value' 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)'
| | `-CXXConstructExpr 0x558cd7b40c58 <col:8> 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)' 'void (const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &) noexcept'
| |   `-MemberExpr 0x558cd7b40c18 <col:8> 'const union (anonymous union at ../elements/standard/classification.hh:39:5)':'const Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)' lvalue .value 0x558cd7b3c2c8
| |     `-DeclRefExpr 0x558cd7b40bf8 <col:8> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40518 '' 'const Classification::Wordwise::Insn &'
| |-CXXCtorInitializer Field 0x558cd7b3c3c8 'j' 'int32_t [2]'
| | `-ArrayInitLoopExpr 0x558cd7b40d78 <col:8> 'int32_t [2]'
| |   |-OpaqueValueExpr 0x558cd7b40d00 <col:8> 'int32_t const[2]' lvalue
| |   | `-MemberExpr 0x558cd7b40cd0 <col:8> 'int32_t const[2]' lvalue .j 0x558cd7b3c3c8
| |   |   `-DeclRefExpr 0x558cd7b40cb0 <col:8> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40518 '' 'const Classification::Wordwise::Insn &'
| |   `-ImplicitCastExpr 0x558cd7b40d60 <col:8> 'int32_t':'int' <LValueToRValue>
| |     `-ArraySubscriptExpr 0x558cd7b40d40 <col:8> 'const int32_t':'const int' lvalue
| |       |-ImplicitCastExpr 0x558cd7b40d28 <col:8> 'const int32_t *' <ArrayToPointerDecay>
| |       | `-OpaqueValueExpr 0x558cd7b40d00 <col:8> 'int32_t const[2]' lvalue
| |       |   `-MemberExpr 0x558cd7b40cd0 <col:8> 'int32_t const[2]' lvalue .j 0x558cd7b3c3c8
| |       |     `-DeclRefExpr 0x558cd7b40cb0 <col:8> 'const Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40518 '' 'const Classification::Wordwise::Insn &'
| |       `-ArrayInitIndexExpr 0x558cd7b40d18 <<invalid sloc>> 'unsigned long'
| `-CompoundStmt 0x558cd7b40df0 <col:8>
`-CXXConstructorDecl 0x558cd7b40778 <col:8> col:8 implicit used constexpr Insn 'void (Classification::Wordwise::Insn &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558cd7b40888 <col:8> col:8 used 'Classification::Wordwise::Insn &&'
  |-CXXCtorInitializer Field 0x558cd7b3bbf8 'offset' 'uint16_t':'unsigned short'
  | `-ImplicitCastExpr 0x558cd7b41600 <col:8> 'uint16_t':'unsigned short' <LValueToRValue>
  |   `-MemberExpr 0x558cd7b415d0 <col:8> 'uint16_t':'unsigned short' xvalue .offset 0x558cd7b3bbf8
  |     `-CXXStaticCastExpr 0x558cd7b415a0 <col:8> 'Classification::Wordwise::Insn' xvalue static_cast<struct Classification::Wordwise::Insn &&> <NoOp>
  |       `-DeclRefExpr 0x558cd7b41570 <col:8> 'Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40888 '' 'Classification::Wordwise::Insn &&'
  |-CXXCtorInitializer Field 0x558cd7b3bc58 'padding' 'uint8_t':'unsigned char'
  | `-ImplicitCastExpr 0x558cd7b416d0 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
  |   `-MemberExpr 0x558cd7b416a0 <col:8> 'uint8_t':'unsigned char' xvalue .padding 0x558cd7b3bc58
  |     `-CXXStaticCastExpr 0x558cd7b41670 <col:8> 'Classification::Wordwise::Insn' xvalue static_cast<struct Classification::Wordwise::Insn &&> <NoOp>
  |       `-DeclRefExpr 0x558cd7b41640 <col:8> 'Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40888 '' 'Classification::Wordwise::Insn &&'
  |-CXXCtorInitializer Field 0x558cd7b3bcb8 'short_output' 'uint8_t':'unsigned char'
  | `-ImplicitCastExpr 0x558cd7b417a0 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
  |   `-MemberExpr 0x558cd7b41770 <col:8> 'uint8_t':'unsigned char' xvalue .short_output 0x558cd7b3bcb8
  |     `-CXXStaticCastExpr 0x558cd7b41740 <col:8> 'Classification::Wordwise::Insn' xvalue static_cast<struct Classification::Wordwise::Insn &&> <NoOp>
  |       `-DeclRefExpr 0x558cd7b41710 <col:8> 'Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40888 '' 'Classification::Wordwise::Insn &&'
  |-CXXCtorInitializer Field 0x558cd7b3bfb8 'mask' 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)'
  | `-CXXConstructExpr 0x558cd7b41880 <col:8> 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' 'void (Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5) &&) noexcept'
  |   `-MemberExpr 0x558cd7b41840 <col:8> 'union (anonymous union at ../elements/standard/classification.hh:35:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:35:5)' xvalue .mask 0x558cd7b3bfb8
  |     `-CXXStaticCastExpr 0x558cd7b41810 <col:8> 'Classification::Wordwise::Insn' xvalue static_cast<struct Classification::Wordwise::Insn &&> <NoOp>
  |       `-DeclRefExpr 0x558cd7b417e0 <col:8> 'Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40888 '' 'Classification::Wordwise::Insn &&'
  |-CXXCtorInitializer Field 0x558cd7b3c2c8 'value' 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)'
  | `-CXXConstructExpr 0x558cd7b41978 <col:8> 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)' 'void (Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5) &&) noexcept'
  |   `-MemberExpr 0x558cd7b41938 <col:8> 'union (anonymous union at ../elements/standard/classification.hh:39:5)':'Classification::Wordwise::Insn::(anonymous union at ../elements/standard/classification.hh:39:5)' xvalue .value 0x558cd7b3c2c8
  |     `-CXXStaticCastExpr 0x558cd7b41908 <col:8> 'Classification::Wordwise::Insn' xvalue static_cast<struct Classification::Wordwise::Insn &&> <NoOp>
  |       `-DeclRefExpr 0x558cd7b418d8 <col:8> 'Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40888 '' 'Classification::Wordwise::Insn &&'
  |-CXXCtorInitializer Field 0x558cd7b3c3c8 'j' 'int32_t [2]'
  | `-ArrayInitLoopExpr 0x558cd7b41ad8 <col:8> 'int32_t [2]'
  |   |-OpaqueValueExpr 0x558cd7b41a60 <col:8> 'int32_t [2]' xvalue
  |   | `-MemberExpr 0x558cd7b41a30 <col:8> 'int32_t [2]' xvalue .j 0x558cd7b3c3c8
  |   |   `-CXXStaticCastExpr 0x558cd7b41a00 <col:8> 'Classification::Wordwise::Insn' xvalue static_cast<struct Classification::Wordwise::Insn &&> <NoOp>
  |   |     `-DeclRefExpr 0x558cd7b419d0 <col:8> 'Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40888 '' 'Classification::Wordwise::Insn &&'
  |   `-ImplicitCastExpr 0x558cd7b41ac0 <col:8> 'int32_t':'int' <LValueToRValue>
  |     `-ArraySubscriptExpr 0x558cd7b41aa0 <col:8> 'int32_t':'int' xvalue
  |       |-ImplicitCastExpr 0x558cd7b41a88 <col:8> 'int32_t *' <ArrayToPointerDecay>
  |       | `-OpaqueValueExpr 0x558cd7b41a60 <col:8> 'int32_t [2]' xvalue
  |       |   `-MemberExpr 0x558cd7b41a30 <col:8> 'int32_t [2]' xvalue .j 0x558cd7b3c3c8
  |       |     `-CXXStaticCastExpr 0x558cd7b41a00 <col:8> 'Classification::Wordwise::Insn' xvalue static_cast<struct Classification::Wordwise::Insn &&> <NoOp>
  |       |       `-DeclRefExpr 0x558cd7b419d0 <col:8> 'Classification::Wordwise::Insn' lvalue ParmVar 0x558cd7b40888 '' 'Classification::Wordwise::Insn &&'
  |       `-ArrayInitIndexExpr 0x558cd7b41a78 <<invalid sloc>> 'unsigned long'
  `-CompoundStmt 0x558cd7b41b50 <col:8>

Layout: <CGRecordLayout
  LLVMType:%"struct.Classification::Wordwise::Insn" = type { i16, i8, i8, %union.anon, %union.anon.5, [2 x i32] }
  NonVirtualBaseLLVMType:%"struct.Classification::Wordwise::Insn" = type { i16, i8, i8, %union.anon, %union.anon.5, [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd78e13b0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558cd78e14c8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x558cd78e1558 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x558cd78e1628 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x558cd78e1710 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x558cd78e1928 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558cd78e17d0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e1ad8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558cd78e19e0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558cd78e1c20 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558cd78e1b90 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558cd78e1d68 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558cd78e1cd8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e1eb0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558cd78e1e20 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e1f78 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x558cd78e20c0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x558cd78e2030 <col:28> col:31 'int'
|-CXXMethodDecl 0x558cd78e2188 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x558cd78e22d0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x558cd78e2240 <col:28> col:31 'int'
|-CXXMethodDecl 0x558cd78e2448 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558cd78e2388 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e2590 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558cd78e2500 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e2658 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x558cd78e2818 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558cd78e2708 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558cd78e2780 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e2a68 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558cd78e28d8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558cd78e2950 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558cd78e2b18 <col:86> "" ""
|-CXXMethodDecl 0x558cd78e2d88 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x558cd78e2bf8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x558cd78e2c70 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e2f38 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558cd78e2e48 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558cd78e30e8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558cd78e2ff0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558cd78e33b8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558cd78e31a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558cd78e3218 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558cd78e3290 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e3698 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558cd78e3480 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558cd78e34f8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558cd78e3570 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558cd78e3750 <col:115> "" ""
|-AccessSpecDecl 0x558cd78e37c0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x558cd78e37f8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd78e4d10 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558cd78e4d10
| `-ParmVarDecl 0x558cd78e4e18 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x558cd78e4eb8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558cd78e4eb8
| `-ParmVarDecl 0x558cd78e4fc8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x558cd791a5f8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558cd7b0c3f0 <col:7>
|-CXXConstructorDecl 0x558cd791a6d0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558cd791a6d0
| `-ParmVarDecl 0x558cd791a7e8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x558cd791a858 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558cd791a858
| `-ParmVarDecl 0x558cd791a968 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x558cd7b0edf0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7afaf98 prev 0x558cd7af01a0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558cd7afb090 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x558cd7afb180 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x558cd7afb2a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x558cd7afb428 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x558cd7afb5a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x558cd7afb728 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x558cd7b0c558 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558cd7b0cdc8 <col:11>
|-CXXDestructorDecl 0x558cd7b0c630 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558cd7b0c768 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558cd7b0c768
| `-ParmVarDecl 0x558cd7b0c878 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x558cd7b0c918 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558cd7b0c918
| `-ParmVarDecl 0x558cd7b0ca28 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x558cd7b0f7e8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x558cd7b0f8f8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x558cd7b0fb78 <col:11>
|   `-ReturnStmt 0x558cd7b0fb68 <col:11>
|     `-UnaryOperator 0x558cd7b0fb50 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558cd7b0fb40 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x558cd7b0f968 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558cd7b0f968
  `-ParmVarDecl 0x558cd7b0fa78 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7afb790 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558cd7afb8a8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x558cd7afb948 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x558cd7afb9b0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x558cd7afba18 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x558cd7afba80 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x558cd7afbae0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x558cd7afbba0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x558cd7afbc00 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x558cd7afbc60 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x558cd7b0c468 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x558cd7afb948 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x558cd7b0cdd8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x558cd7b0ce30 <col:12>
|-CXXConstructorDecl 0x558cd7b0ca98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558cd7b0ca98
| `-ParmVarDecl 0x558cd7b0cba8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x558cd7b0cc48 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558cd7b0cc48
| `-ParmVarDecl 0x558cd7b0cd58 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x558cd7b0eed0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558cd7ae98b0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558cd7ae99c8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x558cd7ae9a58 <col:16, col:22> col:16 public
|-EnumDecl 0x558cd7ae9a80 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x558cd7ae9b80 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x558cd7ae9c60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7ae9b60 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x558cd7ae9b40 <col:21> 'int' 28
| `-EnumConstantDecl 0x558cd7ae9c10 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x558cd7ae9c78 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7ae9bf0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x558cd7ae9bd0 <col:22> 'int' 64
|-CXXMethodDecl 0x558cd7ae9fb8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x558cd7ae9ca0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558cd7ae9d20 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x558cd7ae9d98 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558cd7ae9e10 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558cd7aea078 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aea278 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x558cd7aea0f0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x558cd7aea168 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558cd7aea328 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aea488 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x558cd7aea398 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558cd7aea530 <col:72> warn_unused_result ""
|-TypedefDecl 0x558cd7aea890 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x558cd7aea820 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x558cd7aea7c0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x558cd7aea780 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x558cd75c12d0 'void'
|       |-PointerType 0x558cd7869c50 'unsigned char *'
|       | `-BuiltinType 0x558cd75c13d0 'unsigned char'
|       |-TypedefType 0x558cd76661e0 'size_t' sugar
|       | |-Typedef 0x558cd7631b20 'size_t'
|       | `-BuiltinType 0x558cd75c1430 'unsigned long'
|       `-PointerType 0x558cd75c1ad0 'void *'
|         `-BuiltinType 0x558cd75c12d0 'void'
|-CXXMethodDecl 0x558cd7aead08 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x558cd7aea900 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x558cd7aea978 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558cd7aeaa10 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x558cd7aeaa90 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x558cd7b05400 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x558cd7b053e8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x558cd7b053b0 <col:58> 'int' 0
| |-ParmVarDecl 0x558cd7aeab10 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x558cd7b05428 <col:76> 'int' 0
| |-ParmVarDecl 0x558cd7aeab90 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x558cd7b05448 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x558cd7aeadd8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aeae58 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558cd7aeaf18 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x558cd7aeafb8 <col:20>
| `-OptimizeNoneAttr 0x558cd7aeb010 <col:30>
|-CXXMethodDecl 0x558cd7aeb088 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x558cd7aeb128 <col:20>
| `-OptimizeNoneAttr 0x558cd7aeb180 <col:30>
|-CXXMethodDecl 0x558cd7aeb1f8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x558cd7aeb298 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aeb348 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x558cd7aeb3e8 <col:20>
| |-OptimizeNoneAttr 0x558cd7aeb440 <col:30>
| `-WarnUnusedResultAttr 0x558cd7aeb468 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aeb4c0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x558cd7aeb560 <col:20>
| `-OptimizeNoneAttr 0x558cd7aeb5b8 <col:30>
|-CXXMethodDecl 0x558cd7aeb608 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x558cd7aeb6a8 <col:20>
| `-OptimizeNoneAttr 0x558cd7aeb700 <col:30>
|-CXXMethodDecl 0x558cd7aeb748 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x558cd7aeb7e8 <col:20>
| `-OptimizeNoneAttr 0x558cd7aeb840 <col:30>
|-CXXMethodDecl 0x558cd7aeb888 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558cd7aeb948 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558cd7aeba10 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558cd7aebad8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558cd7aebb98 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558cd7aebcb8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x558cd7b05510 <col:54, line:99:5>
|   `-ReturnStmt 0x558cd7b05500 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x558cd7b054e8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x558cd7b054b8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558cd7afbf98
|         `-CXXThisExpr 0x558cd7b054a8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x558cd7aebe58 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x558cd7aebd68 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x558cd7b055c0 <col:67, line:103:5>
|   `-BinaryOperator 0x558cd7b055a0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558cd7b05538 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558cd7afbf98
|     | `-CXXThisExpr 0x558cd7b05528 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558cd7b05588 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b05568 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x558cd7aebd68 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x558cd7aebf50 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x558cd7b05640 <col:33, line:107:5>
|   `-ReturnStmt 0x558cd7b05630 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x558cd7b05618 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558cd7b055e8 <col:16> 'void *' lvalue ->_destructor_argument 0x558cd7afc000
|         `-CXXThisExpr 0x558cd7b055d8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558cd7aec010 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x558cd7b05c70 <col:25, line:113:5>
|   |-ParenExpr 0x558cd7b059b8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x558cd7b05988 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b056f8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558cd7b056d0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x558cd7b05698 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x558cd7b05668 <col:24> '<bound member function type>' ->shared 0x558cd7aeb088
|   |   |       `-ImplicitCastExpr 0x558cd7b056b8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x558cd7b05658 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558cd7b05758 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b05738 <col:42> 'int' 0
|   |   `-CallExpr 0x558cd7b058e8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b058d0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b058b0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b05928 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b057c8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x558cd7b05940 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b057f0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b05958 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b05828 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x558cd7b05970 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b05898 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b05880 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b05848 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x558cd7b05bb8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x558cd7b059e8 <col:2> 'unsigned char *' lvalue ->_head 0x558cd7afbda0
|   | | `-CXXThisExpr 0x558cd7b059d8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x558cd7b05ba0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x558cd7b05b80 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x558cd7b05a28 <col:10> 'unsigned char *' lvalue ->_data 0x558cd7afbe08
|   |     | `-CXXThisExpr 0x558cd7b05a18 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x558cd7b05b68 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x558cd7b05b48 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x558cd7b05a68 <col:18> 'unsigned char *' lvalue ->_tail 0x558cd7afbe70
|   |         | `-CXXThisExpr 0x558cd7b05a58 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x558cd7b05b30 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x558cd7b05b10 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x558cd7b05aa8 <col:26> 'unsigned char *' lvalue ->_end 0x558cd7afbed8
|   |             | `-CXXThisExpr 0x558cd7b05a98 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x558cd7b05af8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x558cd7b05ad8 <col:33> 'int' 0
|   `-BinaryOperator 0x558cd7b05c50 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558cd7b05be8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558cd7afbf98
|     | `-CXXThisExpr 0x558cd7b05bd8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558cd7b05c38 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x558cd7b05c18 <col:16> 'int' 0
|-CXXMethodDecl 0x558cd7aec150 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558cd7aec0c0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558cd7aec1f8 <col:20>
| |-OptimizeNoneAttr 0x558cd7aec250 <col:30>
| `-WarnUnusedResultAttr 0x558cd7aec278 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aec348 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558cd7aec2b8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558cd7aec3f0 <col:20>
| |-OptimizeNoneAttr 0x558cd7aec448 <col:30>
| `-WarnUnusedResultAttr 0x558cd7aec470 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aec5a8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558cd7aec4b0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558cd7aec650 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aec750 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x558cd7aec6c0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558cd7aec7f8 <col:20>
| `-OptimizeNoneAttr 0x558cd7aec850 <col:30>
|-CXXMethodDecl 0x558cd7aec918 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558cd7aec888 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558cd7aec9c0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aecac0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558cd7aeca30 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558cd7aecb68 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aecc68 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x558cd7aecbd8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558cd7aecd10 <col:20>
| `-OptimizeNoneAttr 0x558cd7aecd68 <col:30>
|-CXXMethodDecl 0x558cd7aecef8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x558cd7aecda8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x558cd7aece20 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x558cd7b05468 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x558cd7aecfa8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x558cd7aed1a8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558cd7aed020 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x558cd7aed098 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd7aed3b8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558cd7aed268 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558cd7aed2e0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd7aed5c8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x558cd7aed478 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x558cd7aed4f8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x558cd7b05478 <col:39> 'int' 0
|-CXXMethodDecl 0x558cd7aed698 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x558cd7aed760 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558cd7aed828 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x558cd7aed8e8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558cd7aed9b0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x558cd7aedaf8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x558cd7aeda68 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x558cd7aedcc8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558cd7aedbb8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x558cd7aedc30 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd7aedd98 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x558cd7aede58 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x558cd7aedef8 <col:20>
| `-OptimizeNoneAttr 0x558cd7aedf50 <col:30>
|-CXXMethodDecl 0x558cd7aedfa0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558cd7aee040 <col:20>
| `-OptimizeNoneAttr 0x558cd7aee098 <col:30>
|-CXXMethodDecl 0x558cd7aee0e8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x558cd7aee1a8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558cd7aee270 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x558cd7aee310 <col:20>
| `-OptimizeNoneAttr 0x558cd7aee368 <col:30>
|-CXXMethodDecl 0x558cd7aee4b8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558cd7aee3a8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x558cd7aee420 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd7aee608 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x558cd7aee578 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd7aee6e0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x558cd7aee7a0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x558cd7aee840 <col:20>
| `-OptimizeNoneAttr 0x558cd7aee898 <col:30>
|-CXXMethodDecl 0x558cd7aee8e8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558cd7aee988 <col:20>
| `-OptimizeNoneAttr 0x558cd7aee9e0 <col:30>
|-CXXMethodDecl 0x558cd7aeea30 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x558cd7aeeaf8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x558cd7aeeb98 <col:20>
| `-OptimizeNoneAttr 0x558cd7aeebf0 <col:30>
|-CXXMethodDecl 0x558cd7aeec38 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x558cd7aeed58 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x558cd7aeeec8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x558cd7aeee08 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x558cd7aeefb8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x558cd7aef058 <col:20>
| `-OptimizeNoneAttr 0x558cd7aef0b0 <col:30>
|-CXXMethodDecl 0x558cd7aef100 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x558cd7aef1c0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558cd7aef3f8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x558cd7aef270 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x558cd7aef2e8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558cd7aef4a8 <col:20>
| `-OptimizeNoneAttr 0x558cd7aef500 <col:30>
|-CXXMethodDecl 0x558cd7aef5a8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x558cd7aef648 <col:20>
| `-OptimizeNoneAttr 0x558cd7aef6a0 <col:30>
|-CXXMethodDecl 0x558cd7aef6f0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x558cd7aef790 <col:20>
| `-OptimizeNoneAttr 0x558cd7aef7e8 <col:30>
|-CXXMethodDecl 0x558cd7aef830 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x558cd7aef8d0 <col:20>
| `-OptimizeNoneAttr 0x558cd7aef928 <col:30>
|-CXXMethodDecl 0x558cd7aefa28 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x558cd7aef960 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x558cd7aefad0 <col:20>
| `-OptimizeNoneAttr 0x558cd7aefb28 <col:30>
|-CXXMethodDecl 0x558cd7aefce8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x558cd7aefb60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x558cd7aefbd8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558cd7aefd98 <col:20>
| `-OptimizeNoneAttr 0x558cd7aefdf0 <col:30>
|-CXXMethodDecl 0x558cd7aefe98 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x558cd7aeffb8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x558cd7af00d8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x558cd7af0178 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x558cd7af01a0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x558cd7af02c8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x558cd7af0368 <col:20>
| `-OptimizeNoneAttr 0x558cd7af03c0 <col:30>
|-CXXMethodDecl 0x558cd7af0468 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x558cd7af0508 <col:20>
| `-OptimizeNoneAttr 0x558cd7af0560 <col:30>
|-AccessSpecDecl 0x558cd7af0588 <line:344:3, col:9> col:3 public
|-EnumDecl 0x558cd7af05b0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x558cd7af06b0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x558cd7af0700 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7af0690 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x558cd7af0670 <col:14> 'int' 48
|-CXXMethodDecl 0x558cd7af0768 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x558cd7af0808 <col:20>
| `-OptimizeNoneAttr 0x558cd7af0860 <col:30>
|-CXXMethodDecl 0x558cd7af08d8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x558cd7af0978 <col:20>
| `-OptimizeNoneAttr 0x558cd7af09d0 <col:30>
|-CXXMethodDecl 0x558cd7af0a98 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558cd7af0a08 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x558cd7af0c38 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x558cd7af0dd8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x558cd7af0ce8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x558cd7af0e80 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x558cd7af0f80 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558cd7af1330 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af0f60 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x558cd7af0f40 <col:9> 'int' 0
| |-EnumConstantDecl 0x558cd7af1010 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558cd7af1348 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af0ff0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558cd7af0fd0 <col:14> 'int' 1
| |-EnumConstantDecl 0x558cd7af10a0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558cd7af1360 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af1080 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x558cd7af1060 <col:14> 'int' 2
| |-EnumConstantDecl 0x558cd7af1130 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558cd7af1378 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af1110 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x558cd7af10f0 <col:14> 'int' 3
| |-EnumConstantDecl 0x558cd7af11c0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558cd7af1390 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af11a0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x558cd7af1180 <col:13> 'int' 4
| |-EnumConstantDecl 0x558cd7af1250 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558cd7af13a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af1230 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x558cd7af1210 <col:13> 'int' 5
| `-EnumConstantDecl 0x558cd7af12e0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x558cd7af13c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7af12c0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x558cd7af12a0 <col:14> 'int' 6
|-CXXMethodDecl 0x558cd7af1428 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x558cd7af14c8 <col:20>
| `-OptimizeNoneAttr 0x558cd7af1520 <col:30>
|-CXXMethodDecl 0x558cd7af1618 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x558cd7af1558 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x558cd7af16c0 <col:20>
| `-OptimizeNoneAttr 0x558cd7af1718 <col:30>
|-CXXMethodDecl 0x558cd7af1788 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x558cd7af18b0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x558cd7af1a28 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x558cd7af1960 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x558cd7af1af0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x558cd7af1bb8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x558cd7af1cf8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x558cd7af1c68 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x558cd7af1da0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x558cd7af1ea0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558cd7af20a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af1e80 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x558cd7af1e60 <col:23> 'int' 0
| |-EnumConstantDecl 0x558cd7af1f30 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558cd7af20b8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af1f10 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x558cd7af1ef0 <col:45> 'int' 4
| |-EnumConstantDecl 0x558cd7af1fc0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558cd7af20d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af1fa0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x558cd7af1f80 <col:24> 'int' 0
| `-EnumConstantDecl 0x558cd7af2050 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x558cd7af20e8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7af2030 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x558cd7af2010 <col:47> 'int' 16
|-CXXMethodDecl 0x558cd7af2148 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x558cd7af22b8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x558cd7af21f8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x558cd7af2360 <col:20>
| `-OptimizeNoneAttr 0x558cd7af23b8 <col:30>
|-CXXMethodDecl 0x558cd7af2408 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x558cd7b05d90 <col:18, col:36>
|   `-ReturnStmt 0x558cd7b05d80 <col:20, col:33>
|     `-ImplicitCastExpr 0x558cd7b05d68 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x558cd7b05d48 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x558cd7b05d18 <col:27> '<bound member function type>' ->xanno 0x558cd7af0468
|           `-CXXThisExpr 0x558cd7b05d08 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x558cd7af2500 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x558cd7b05ea0 <col:30, col:48>
|   `-ReturnStmt 0x558cd7b05e90 <col:32, col:45>
|     `-ImplicitCastExpr 0x558cd7b05e78 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x558cd7b05e58 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x558cd7b05e28 <col:39> '<bound member function type>' ->xanno 0x558cd7af02c8
|           `-CXXThisExpr 0x558cd7b05e18 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x558cd7af25e8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x558cd7b06038 <col:24, col:50>
|   `-ReturnStmt 0x558cd7b06028 <col:26, col:47>
|     `-UnaryOperator 0x558cd7b06010 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558cd7b05ff0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x558cd7b05fd8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558cd7b05f88 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x558cd7afb2a8
|         |   `-CXXMemberCallExpr 0x558cd7b05f68 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x558cd7b05f38 <col:34> '<bound member function type>' ->xanno 0x558cd7af0468
|         |       `-CXXThisExpr 0x558cd7b05f28 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x558cd7b05fb8 <col:46> 'int' 0
|-CXXMethodDecl 0x558cd7af26f0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x558cd7b06208 <col:36, col:62>
|   `-ReturnStmt 0x558cd7b061f8 <col:38, col:59>
|     `-UnaryOperator 0x558cd7b061e0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558cd7b061c0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558cd7b061a8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558cd7b06120 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x558cd7afb2a8
|         |   `-CXXMemberCallExpr 0x558cd7b06100 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558cd7b060d0 <col:46> '<bound member function type>' ->xanno 0x558cd7af02c8
|         |       `-CXXThisExpr 0x558cd7b060c0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558cd7b06150 <col:58> 'int' 0
|-CXXMethodDecl 0x558cd7af2808 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x558cd7b063a0 <col:26, col:53>
|   `-ReturnStmt 0x558cd7b06390 <col:28, col:50>
|     `-UnaryOperator 0x558cd7b06378 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558cd7b06358 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x558cd7b06340 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558cd7b062f0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x558cd7afb5a8
|         |   `-CXXMemberCallExpr 0x558cd7b062d0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x558cd7b062a0 <col:36> '<bound member function type>' ->xanno 0x558cd7af0468
|         |       `-CXXThisExpr 0x558cd7b06290 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x558cd7b06320 <col:49> 'int' 0
|-CXXMethodDecl 0x558cd7af2928 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x558cd7b06578 <col:38, col:65>
|   `-ReturnStmt 0x558cd7b06568 <col:40, col:62>
|     `-UnaryOperator 0x558cd7b06550 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558cd7b06530 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x558cd7b06518 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558cd7b06488 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x558cd7afb5a8
|         |   `-CXXMemberCallExpr 0x558cd7b06468 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558cd7b06438 <col:48> '<bound member function type>' ->xanno 0x558cd7af02c8
|         |       `-CXXThisExpr 0x558cd7b06428 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558cd7b064b8 <col:61> 'int' 0
|-CXXMethodDecl 0x558cd7af2ad8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x558cd7af29e0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x558cd7b06c48 <col:34, line:463:5>
|   |-ParenExpr 0x558cd7b06a90 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x558cd7b06a60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b066c8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b06698 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b065e8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b065d0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b06590 <col:23> 'int' lvalue ParmVar 0x558cd7af29e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b065b0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b06678 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b06648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b06608 <col:33> 'int' lvalue ParmVar 0x558cd7af29e0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558cd7b06660 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558cd7b06628 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558cd7b06728 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b06708 <col:56> 'int' 0
|   |   `-CallExpr 0x558cd7b069c0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b069a8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b06988 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b06a00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b06818 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558cd7b06a18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b06848 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b06a30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b06880 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x558cd7b06a48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b06970 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b06958 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b06918 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x558cd7b06c38 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x558cd7b06c20 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558cd7b06c00 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558cd7b06bd0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558cd7b06b80 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x558cd7afb2a8
|         |   `-CXXMemberCallExpr 0x558cd7b06b60 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558cd7b06b30 <col:9> '<bound member function type>' ->xanno 0x558cd7af02c8
|         |       `-CXXThisExpr 0x558cd7b06b20 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x558cd7b06be8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x558cd7b06bb0 <col:21> 'int' lvalue ParmVar 0x558cd7af29e0 'i' 'int'
|-CXXMethodDecl 0x558cd7af2d28 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x558cd7af2b98 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x558cd7af2c10 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x558cd7b072d8 <col:40, line:472:5>
|   |-ParenExpr 0x558cd7b070f0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x558cd7b070c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b06da0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b06d70 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b06cc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b06ca8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b06c68 <col:23> 'int' lvalue ParmVar 0x558cd7af2b98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b06c88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b06d50 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b06d20 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b06ce0 <col:33> 'int' lvalue ParmVar 0x558cd7af2b98 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558cd7b06d38 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558cd7b06d00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558cd7b06e00 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b06de0 <col:56> 'int' 0
|   |   `-CallExpr 0x558cd7b07020 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b07008 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b06fe8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b07060 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b06e70 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558cd7b07078 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b06ea0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b07090 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b06ed8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x558cd7b070a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b06fd0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b06fb8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b06f78 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x558cd7b072b8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x558cd7b07260 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x558cd7b07230 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558cd7b071e0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x558cd7afb2a8
|     | |   `-CXXMemberCallExpr 0x558cd7b071c0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x558cd7b07190 <col:2> '<bound member function type>' ->xanno 0x558cd7af0468
|     | |       `-CXXThisExpr 0x558cd7b07180 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x558cd7b07248 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558cd7b07210 <col:14> 'int' lvalue ParmVar 0x558cd7af2b98 'i' 'int'
|     `-ImplicitCastExpr 0x558cd7b072a0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b07280 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x558cd7af2c10 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x558cd7af2ee8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x558cd7af2df0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558cd7b07a58 <col:36, line:485:5>
|   |-ParenExpr 0x558cd7b077c0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b07790 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b07470 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b07440 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b07350 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b07338 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b072f8 <col:23> 'int' lvalue ParmVar 0x558cd7af2df0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b07318 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b07420 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b07408 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b07370 <col:33> 'int' lvalue ParmVar 0x558cd7af2df0 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b073e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b073d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b07390 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b073b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558cd7b074d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b074b0 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b076f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b076d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b076b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b07730 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b07540 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558cd7b07748 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b07578 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b07760 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b075b0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x558cd7b07778 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b076a0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b07688 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b07648 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x558cd7b07a48 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x558cd7b07a30 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x558cd7b07a18 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558cd7b079e8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x558cd7b07988 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558cd7b07958 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558cd7b078d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x558cd7afb180
|             |   `-CXXMemberCallExpr 0x558cd7b078b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558cd7b07880 <col:61> '<bound member function type>' ->xanno 0x558cd7af02c8
|             |       `-CXXThisExpr 0x558cd7b07870 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558cd7b07970 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558cd7b07900 <col:74> 'int' lvalue ParmVar 0x558cd7af2df0 'i' 'int'
|-CXXMethodDecl 0x558cd7af3138 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x558cd7af2fa8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558cd7af3020 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x558cd7b081a8 <col:42, line:500:5>
|   |-ParenExpr 0x558cd7b07f40 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b07f10 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b07bf0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b07bc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b07ad0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b07ab8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b07a78 <col:23> 'int' lvalue ParmVar 0x558cd7af2fa8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b07a98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b07ba0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b07b88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b07af0 <col:33> 'int' lvalue ParmVar 0x558cd7af2fa8 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b07b68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b07b50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b07b10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b07b30 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558cd7b07c50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b07c30 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b07e70 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b07e58 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b07e38 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b07eb0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b07cc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558cd7b07ec8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b07cf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b07ee0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b07d30 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x558cd7b07ef8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b07e20 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b07e08 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b07dc8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x558cd7b08188 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x558cd7b08138 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558cd7b08108 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x558cd7b080b0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558cd7b08080 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558cd7b08030 <col:48, col:57> 'char [48]' lvalue ->c 0x558cd7afb180
|     |     |   `-CXXMemberCallExpr 0x558cd7b08010 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558cd7b07fe0 <col:48> '<bound member function type>' ->xanno 0x558cd7af0468
|     |     |       `-CXXThisExpr 0x558cd7b07fd0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558cd7b08098 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558cd7b08060 <col:61> 'int' lvalue ParmVar 0x558cd7af2fa8 'i' 'int'
|     `-ImplicitCastExpr 0x558cd7b08170 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b08150 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x558cd7af3020 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x558cd7af32f8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x558cd7af3200 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558cd7b08908 <col:35, line:513:5>
|   |-ParenExpr 0x558cd7b08618 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b085e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b08340 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b08310 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b08220 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b08208 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b081c8 <col:23> 'int' lvalue ParmVar 0x558cd7af3200 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b081e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b082f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b082d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b08240 <col:33> 'int' lvalue ParmVar 0x558cd7af3200 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b082b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b082a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b08260 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b08280 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558cd7b083a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b08380 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b08548 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b08530 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b08510 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b08588 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b08410 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558cd7b085a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b08448 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b085b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b08480 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x558cd7b085d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b084f8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b084e0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b084a0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x558cd7b088f8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x558cd7b088e0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x558cd7b088c8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558cd7b08898 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x558cd7b08810 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558cd7b087e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558cd7b08790 <col:60, col:69> 'char const[48]' lvalue ->c 0x558cd7afb180
|             |   `-CXXMemberCallExpr 0x558cd7b08770 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558cd7b08740 <col:60> '<bound member function type>' ->xanno 0x558cd7af02c8
|             |       `-CXXThisExpr 0x558cd7b08730 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558cd7b087f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558cd7b087c0 <col:73> 'int' lvalue ParmVar 0x558cd7af3200 'i' 'int'
|-CXXMethodDecl 0x558cd7af3548 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x558cd7af33b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558cd7af3430 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x558cd7b09028 <col:41, line:528:5>
|   |-ParenExpr 0x558cd7b08db0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b08d80 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b08aa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b08a70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b08980 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b08968 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b08928 <col:23> 'int' lvalue ParmVar 0x558cd7af33b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b08948 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b08a50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b08a38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b089a0 <col:33> 'int' lvalue ParmVar 0x558cd7af33b8 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b08a18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b08a00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b089c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b089e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558cd7b08b00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b08ae0 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b08ce0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b08cc8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b08ca8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b08d20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b08b70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558cd7b08d38 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b08ba8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b08d50 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b08be0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x558cd7b08d68 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b08c90 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b08c78 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b08c38 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x558cd7b09008 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x558cd7b08fb8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558cd7b08f88 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x558cd7b08f30 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558cd7b08ef0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558cd7b08ea0 <col:47, col:56> 'char [48]' lvalue ->c 0x558cd7afb180
|     |     |   `-CXXMemberCallExpr 0x558cd7b08e80 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558cd7b08e50 <col:47> '<bound member function type>' ->xanno 0x558cd7af0468
|     |     |       `-CXXThisExpr 0x558cd7b08e40 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558cd7b08f08 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558cd7b08ed0 <col:60> 'int' lvalue ParmVar 0x558cd7af33b8 'i' 'int'
|     `-ImplicitCastExpr 0x558cd7b08ff0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b08fd0 <col:65> 'int16_t':'short' lvalue ParmVar 0x558cd7af3430 'x' 'int16_t':'short'
|-CXXMethodDecl 0x558cd7af3708 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x558cd7af3610 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558cd7b096f8 <col:36, line:541:5>
|   |-ParenExpr 0x558cd7b09498 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b09468 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b091c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b09190 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b090a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b09088 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b09048 <col:23> 'int' lvalue ParmVar 0x558cd7af3610 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b09068 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b09170 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b09158 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b090c0 <col:33> 'int' lvalue ParmVar 0x558cd7af3610 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b09138 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b09120 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b090e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b09100 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558cd7b09220 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b09200 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b093c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b093b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b09390 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b09408 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b09290 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558cd7b09420 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b092c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b09438 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b09300 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x558cd7b09450 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b09378 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b09360 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b09320 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x558cd7b096e8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x558cd7b096d0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x558cd7b096b8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558cd7b09688 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x558cd7b09630 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558cd7b09600 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558cd7b095b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x558cd7afb180
|             |   `-CXXMemberCallExpr 0x558cd7b09590 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558cd7b09560 <col:61> '<bound member function type>' ->xanno 0x558cd7af02c8
|             |       `-CXXThisExpr 0x558cd7b09550 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558cd7b09618 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558cd7b095e0 <col:74> 'int' lvalue ParmVar 0x558cd7af3610 'i' 'int'
|-CXXMethodDecl 0x558cd7af38d8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x558cd7af37c8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x558cd7af3840 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558cd7af3988 <col:20>
| `-OptimizeNoneAttr 0x558cd7af39e0 <col:30>
|-CXXMethodDecl 0x558cd7af3b18 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x558cd7af3a20 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558cd7b09dc8 <col:35, line:562:5>
|   |-ParenExpr 0x558cd7b09b68 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b09b38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b09890 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b09860 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b09770 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b09758 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b09718 <col:23> 'int' lvalue ParmVar 0x558cd7af3a20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b09738 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b09840 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b09828 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b09790 <col:33> 'int' lvalue ParmVar 0x558cd7af3a20 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b09808 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b097f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b097b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b097d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558cd7b098f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b098d0 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b09a98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b09a80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b09a60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b09ad8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b09960 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558cd7b09af0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b09998 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b09b08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b099d0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x558cd7b09b20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b09a48 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b09a30 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b099f0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x558cd7b09db8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x558cd7b09da0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x558cd7b09d88 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558cd7b09d58 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x558cd7b09d00 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558cd7b09cd0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558cd7b09c80 <col:60, col:69> 'char const[48]' lvalue ->c 0x558cd7afb180
|             |   `-CXXMemberCallExpr 0x558cd7b09c60 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558cd7b09c30 <col:60> '<bound member function type>' ->xanno 0x558cd7af02c8
|             |       `-CXXThisExpr 0x558cd7b09c20 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558cd7b09ce8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558cd7b09cb0 <col:73> 'int' lvalue ParmVar 0x558cd7af3a20 'i' 'int'
|-CXXMethodDecl 0x558cd7af3d28 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x558cd7af3bd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558cd7af3c50 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x558cd7b0a4a8 <col:41, line:577:5>
|   |-ParenExpr 0x558cd7b0a238 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b0a208 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b09f60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b09f30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b09e40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b09e28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b09de8 <col:23> 'int' lvalue ParmVar 0x558cd7af3bd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b09e08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b09f10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b09ef8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b09e60 <col:33> 'int' lvalue ParmVar 0x558cd7af3bd8 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b09ed8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b09ec0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b09e80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b09ea0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558cd7b09fc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b09fa0 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b0a168 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b0a150 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b0a130 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b0a1a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0a030 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558cd7b0a1c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0a068 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b0a1d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b0a0a0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x558cd7b0a1f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b0a118 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b0a100 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b0a0c0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x558cd7b0a488 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x558cd7b0a438 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558cd7b0a408 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x558cd7b0a3a8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558cd7b0a378 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558cd7b0a328 <col:47, col:56> 'char [48]' lvalue ->c 0x558cd7afb180
|     |     |   `-CXXMemberCallExpr 0x558cd7b0a308 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558cd7b0a2d8 <col:47> '<bound member function type>' ->xanno 0x558cd7af0468
|     |     |       `-CXXThisExpr 0x558cd7b0a2c8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558cd7b0a390 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558cd7b0a358 <col:60> 'int' lvalue ParmVar 0x558cd7af3bd8 'i' 'int'
|     `-ImplicitCastExpr 0x558cd7b0a470 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b0a450 <col:65> 'int32_t':'int' lvalue ParmVar 0x558cd7af3c50 'x' 'int32_t':'int'
|-CXXMethodDecl 0x558cd7af3ee8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x558cd7af3df0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558cd7b0abd8 <col:36, line:591:5>
|   |-ParenExpr 0x558cd7b0a918 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b0a8e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b0a640 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b0a610 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b0a520 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b0a508 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b0a4c8 <col:23> 'int' lvalue ParmVar 0x558cd7af3df0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b0a4e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b0a5f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b0a5d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b0a540 <col:33> 'int' lvalue ParmVar 0x558cd7af3df0 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b0a5b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b0a5a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b0a560 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b0a580 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558cd7b0a6a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b0a680 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b0a848 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b0a830 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b0a810 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b0a888 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0a710 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558cd7b0a8a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0a748 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b0a8b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b0a780 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x558cd7b0a8d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b0a7f8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b0a7e0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b0a7a0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x558cd7b0abc8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x558cd7b0abb0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x558cd7b0ab98 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558cd7b0ab68 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x558cd7b0aae0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558cd7b0aab0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558cd7b0aa60 <col:61, col:70> 'char const[48]' lvalue ->c 0x558cd7afb180
|             |   `-CXXMemberCallExpr 0x558cd7b0aa40 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558cd7b0aa10 <col:61> '<bound member function type>' ->xanno 0x558cd7af02c8
|             |       `-CXXThisExpr 0x558cd7b0aa00 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558cd7b0aac8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558cd7b0aa90 <col:74> 'int' lvalue ParmVar 0x558cd7af3df0 'i' 'int'
|-CXXMethodDecl 0x558cd7af4138 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x558cd7af3fa8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558cd7af4020 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x558cd7b0b2b8 <col:42, line:606:5>
|   |-ParenExpr 0x558cd7b0b048 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x558cd7b0b018 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b0ad70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b0ad40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b0ac50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b0ac38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b0abf8 <col:23> 'int' lvalue ParmVar 0x558cd7af3fa8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b0ac18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b0ad20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558cd7b0ad08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b0ac70 <col:33> 'int' lvalue ParmVar 0x558cd7af3fa8 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b0ace8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b0acd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b0ac90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558cd7b0acb0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558cd7b0add0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b0adb0 <col:60> 'int' 0
|   |   `-CallExpr 0x558cd7b0af78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b0af60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b0af40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b0afb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0ae40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558cd7b0afd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0ae78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b0afe8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b0aeb0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x558cd7b0b000 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b0af28 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b0af10 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b0aed0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x558cd7b0b298 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x558cd7b0b248 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558cd7b0b218 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x558cd7b0b1b8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558cd7b0b188 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558cd7b0b138 <col:48, col:57> 'char [48]' lvalue ->c 0x558cd7afb180
|     |     |   `-CXXMemberCallExpr 0x558cd7b0b118 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558cd7b0b0e8 <col:48> '<bound member function type>' ->xanno 0x558cd7af0468
|     |     |       `-CXXThisExpr 0x558cd7b0b0d8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558cd7b0b1a0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558cd7b0b168 <col:61> 'int' lvalue ParmVar 0x558cd7af3fa8 'i' 'int'
|     `-ImplicitCastExpr 0x558cd7b0b280 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x558cd7b0b260 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x558cd7af4020 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x558cd7af42d0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x558cd7af4200 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x558cd7b0bb28 <col:33, line:620:5>
|   |-ParenExpr 0x558cd7b0b8a0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x558cd7b0b870 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b0b4c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b0b490 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b0b330 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b0b318 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b0b2d8 <col:23> 'int' lvalue ParmVar 0x558cd7af4200 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b0b2f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b0b470 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558cd7b0b458 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b0b350 <col:33> 'int' lvalue ParmVar 0x558cd7af4200 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b0b438 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b0b420 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b0b370 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558cd7b0b3f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558cd7b0b3e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558cd7b0b3a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558cd7b0b520 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b0b500 <col:79> 'int' 0
|   |   `-CallExpr 0x558cd7b0b7d0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b0b7b8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b0b798 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b0b810 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0b608 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558cd7b0b828 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0b650 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b0b840 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b0b688 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x558cd7b0b858 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b0b780 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b0b768 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b0b728 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x558cd7b0bb18 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x558cd7b0bb00 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x558cd7b0bae8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558cd7b0bab8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x558cd7b0ba30 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x558cd7b0ba00 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558cd7b0b9b0 <col:67, col:76> 'char const[48]' lvalue ->c 0x558cd7afb180
|             |   `-CXXMemberCallExpr 0x558cd7b0b990 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558cd7b0b960 <col:67> '<bound member function type>' ->xanno 0x558cd7af02c8
|             |       `-CXXThisExpr 0x558cd7b0b950 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558cd7b0ba18 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558cd7b0b9e0 <col:80> 'int' lvalue ParmVar 0x558cd7af4200 'i' 'int'
|-CXXMethodDecl 0x558cd7af44e8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x558cd7af4390 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558cd7af4410 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x558cd7b0c350 <col:45, line:635:5>
|   |-ParenExpr 0x558cd7b0c098 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x558cd7b0c068 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558cd7b0bd30 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558cd7b0bd00 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558cd7b0bba0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558cd7b0bb88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558cd7b0bb48 <col:23> 'int' lvalue ParmVar 0x558cd7af4390 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558cd7b0bb68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558cd7b0bce0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558cd7b0bcc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558cd7b0bbc0 <col:33> 'int' lvalue ParmVar 0x558cd7af4390 'i' 'int'
|   |   |     `-BinaryOperator 0x558cd7b0bca8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558cd7b0bc90 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558cd7b0bbe0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558cd7af06b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558cd7b0bc68 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558cd7b0bc50 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558cd7b0bc18 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558cd7b0bd90 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558cd7b0bd70 <col:79> 'int' 0
|   |   `-CallExpr 0x558cd7b0bfc8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558cd7b0bfb0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558cd7b0bf90 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558cd765cff0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558cd7b0c008 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0be00 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558cd7b0c020 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558cd7b0be48 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558cd7b0c038 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558cd7b0be80 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x558cd7b0c050 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558cd7b0bf78 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558cd7b0bf60 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558cd7b0bf18 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x558cd7b0c330 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x558cd7b0c298 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558cd7b0c268 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x558cd7b0c208 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558cd7b0c1d8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558cd7b0c188 <col:54, col:63> 'char [48]' lvalue ->c 0x558cd7afb180
|     |     |   `-CXXMemberCallExpr 0x558cd7b0c168 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558cd7b0c138 <col:54> '<bound member function type>' ->xanno 0x558cd7af0468
|     |     |       `-CXXThisExpr 0x558cd7b0c128 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558cd7b0c1f0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558cd7b0c1b8 <col:67> 'int' lvalue ParmVar 0x558cd7af4390 'i' 'int'
|     `-CXXConstCastExpr 0x558cd7b0c300 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x558cd7b0c2e8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x558cd7b0c2b0 <col:91> 'const void *' lvalue ParmVar 0x558cd7af4410 'x' 'const void *'
|-CXXMethodDecl 0x558cd7af45b8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x558cd7b0c3d8 <col:34, line:640:5>
|   `-ReturnStmt 0x558cd7b0c3c8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x558cd7b0c3b0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x558cd7b0c380 <col:16> 'Packet *' lvalue ->_data_packet 0x558cd7afbd38
|         `-CXXThisExpr 0x558cd7b0c370 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558cd7af46f8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x558cd7af4668 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558cd7b05498 <col:46> 'bool' true
|-CXXMethodDecl 0x558cd7af4878 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x558cd7af47b0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x558cd7af4920 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x558cd7af50d0 <line:660:22> "" ""
| |-EnumConstantDecl 0x558cd7af4a20 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af5140 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4a00 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x558cd7af49e0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558cd7ae9b80 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558cd7af4ab0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af5158 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4a90 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x558cd7af4a70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558cd7ae9c10 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558cd7af4b40 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af5170 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4b20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558cd7af4b00 <col:21> 'int' 0
| |-EnumConstantDecl 0x558cd7af4bd0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af5188 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4bb0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x558cd7af4b90 <col:19> 'int' 16
| |-EnumConstantDecl 0x558cd7af4c60 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af51a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4c40 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x558cd7af4c20 <col:21> 'int' 16
| |-EnumConstantDecl 0x558cd7af4cf0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af51b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4cd0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558cd7af4cb0 <col:19> 'int' 32
| |-EnumConstantDecl 0x558cd7af4d80 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af51d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4d60 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x558cd7af4d40 <col:19> 'int' EnumConstant 0x558cd7af4bd0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558cd7af4e10 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af51e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4df0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x558cd7af4dd0 <col:19> 'int' EnumConstant 0x558cd7af4cf0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558cd7af4ee0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af5200 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4ec0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x558cd7af4ea0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558cd7af4e60 <col:23> 'int' EnumConstant 0x558cd7af4e10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558cd7af4e80 <col:40> 'int' 2
| |-EnumConstantDecl 0x558cd7af4fb0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558cd7af5218 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558cd7af4f90 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x558cd7af4f70 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558cd7af4f30 <col:23> 'int' EnumConstant 0x558cd7af4e10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558cd7af4f50 <col:40> 'int' 4
| `-EnumConstantDecl 0x558cd7af5080 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x558cd7af5230 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558cd7af5060 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x558cd7af5040 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x558cd7af5000 <col:23> 'int' EnumConstant 0x558cd7af4e10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x558cd7af5020 <col:40> 'int' 8
|-CXXMethodDecl 0x558cd7af5270 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x558cd7af5310 <col:68> "" ""
|-CXXMethodDecl 0x558cd7af53a8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x558cd7af5448 <col:45> "" ""
|-CXXMethodDecl 0x558cd7af54e0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558cd7af5580 <col:57> "" ""
|-CXXMethodDecl 0x558cd7af5618 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x558cd7af56b8 <col:45> "" ""
|-CXXMethodDecl 0x558cd7af5750 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558cd7af57f0 <col:57> "" ""
|-CXXMethodDecl 0x558cd7af5880 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x558cd7af5920 <col:51> "" ""
|-CXXMethodDecl 0x558cd7af59b0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558cd7af5a50 <col:63> "" ""
|-CXXMethodDecl 0x558cd7af5ae0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x558cd7af5b80 <col:53> "" ""
|-CXXMethodDecl 0x558cd7af5c10 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558cd7af5cb0 <col:65> "" ""
|-CXXMethodDecl 0x558cd7af5dc8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558cd7af5d38 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x558cd7af5e70 <col:61> "" ""
|-CXXMethodDecl 0x558cd7af6008 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558cd7af5ef8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x558cd7af5f70 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558cd7af60b8 <col:67> "" ""
|-CXXMethodDecl 0x558cd7af61d0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558cd7af6140 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558cd7af6278 <col:63> "" ""
|-CXXMethodDecl 0x558cd7af6410 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558cd7af6300 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558cd7af6378 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558cd7af64c0 <col:69> "" ""
|-CXXMethodDecl 0x558cd7af65d8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558cd7af6548 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558cd7af6680 <col:63> "" ""
|-CXXMethodDecl 0x558cd7af8d58 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558cd7af8c48 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558cd7af8cc0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558cd7af8e08 <col:69> "" ""
|-CXXMethodDecl 0x558cd7af8f20 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x558cd7af8e90 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x558cd7af8fc8 <col:62> "" ""
|-CXXMethodDecl 0x558cd7af9160 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558cd7af9050 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558cd7af90c8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x558cd7af9210 <col:68> "" ""
|-CXXMethodDecl 0x558cd7af9328 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x558cd7af9298 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558cd7af93d0 <col:63> "" ""
|-CXXMethodDecl 0x558cd7af9568 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x558cd7af9458 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558cd7af94d0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x558cd7af9618 <col:69> "" ""
|-CXXMethodDecl 0x558cd7af96a8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558cd7af9748 <col:64> "" ""
|-CXXMethodDecl 0x558cd7af97d8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x558cd7af9878 <col:52> "" ""
|-CXXMethodDecl 0x558cd7af9908 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558cd7af99a8 <col:67> "" ""
|-CXXMethodDecl 0x558cd7af9a38 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x558cd7af9ad8 <col:55> "" ""
|-CXXMethodDecl 0x558cd7af9bf0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558cd7af9b60 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558cd7af9c98 <col:58> "" ""
|-CXXMethodDecl 0x558cd7af9e30 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558cd7af9d20 <col:33> col:36 'int'
| |-ParmVarDecl 0x558cd7af9d98 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558cd7af9ee0 <col:62> "" ""
|-CXXMethodDecl 0x558cd7af9ff8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x558cd7af9f68 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558cd7afa0a0 <col:58> "" ""
|-CXXMethodDecl 0x558cd7afa238 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x558cd7afa128 <col:33> col:36 'int'
| |-ParmVarDecl 0x558cd7afa1a0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x558cd7afa2e8 <col:62> "" ""
|-CXXMethodDecl 0x558cd7afa400 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558cd7afa370 <col:34> col:37 'int'
| `-DeprecatedAttr 0x558cd7afa4a8 <col:60> "" ""
|-CXXMethodDecl 0x558cd7afa640 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558cd7afa530 <col:34> col:37 'int'
| |-ParmVarDecl 0x558cd7afa5a8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558cd7afa6f0 <col:64> "" ""
|-CXXMethodDecl 0x558cd7afa808 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x558cd7afa778 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558cd7afa8b0 <col:58> "" ""
|-CXXMethodDecl 0x558cd7afaa48 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558cd7afa938 <col:33> col:36 'int'
| |-ParmVarDecl 0x558cd7afa9b0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x558cd7afaaf8 <col:62> "" ""
|-CXXMethodDecl 0x558cd7afac10 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558cd7afab80 <col:33> col:36 'int'
| `-DeprecatedAttr 0x558cd7afacb8 <col:59> "" ""
|-CXXMethodDecl 0x558cd7afae50 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558cd7afad40 <col:33> col:36 'int'
| |-ParmVarDecl 0x558cd7afadb8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558cd7afaf00 <col:63> "" ""
|-AccessSpecDecl 0x558cd7afaf70 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x558cd7afaf98 prev 0x558cd7af01a0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558cd7afb090 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x558cd7afb180 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x558cd7afb2a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x558cd7afb428 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x558cd7afb5a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x558cd7afb728 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x558cd7b0c558 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558cd7b0cdc8 <col:11>
| |-CXXDestructorDecl 0x558cd7b0c630 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x558cd7b0c768 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558cd7b0c768
| | `-ParmVarDecl 0x558cd7b0c878 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x558cd7b0c918 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558cd7b0c918
| | `-ParmVarDecl 0x558cd7b0ca28 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x558cd7b0f7e8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558cd7b0f8f8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x558cd7b0fb78 <col:11>
| |   `-ReturnStmt 0x558cd7b0fb68 <col:11>
| |     `-UnaryOperator 0x558cd7b0fb50 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558cd7b0fb40 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x558cd7b0f968 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558cd7b0f968
|   `-ParmVarDecl 0x558cd7b0fa78 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x558cd7afb790 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558cd7afb8a8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x558cd7afb948 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x558cd7afb9b0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x558cd7afba18 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x558cd7afba80 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x558cd7afbae0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x558cd7afbba0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x558cd7afbc00 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x558cd7afbc60 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x558cd7b0c468 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x558cd7afb948 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x558cd7b0cdd8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x558cd7b0ce30 <col:12>
| |-CXXConstructorDecl 0x558cd7b0ca98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558cd7b0ca98
| | `-ParmVarDecl 0x558cd7b0cba8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x558cd7b0cc48 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558cd7b0cc48
| | `-ParmVarDecl 0x558cd7b0cd58 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x558cd7b0eed0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x558cd7afbcd8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x558cd7afbd38 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x558cd7afbda0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x558cd7afbe08 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x558cd7afbe70 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x558cd7afbed8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x558cd7afbf38 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x558cd7afbf98 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x558cd7afc000 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x558cd7afc088 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x558cd7afbcd8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x558cd7b0c400 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558cd7afbf38 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x558cd7b0ce40 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x558cd7b0cea0 <col:21, line:755:5>
|-CXXConstructorDecl 0x558cd7afc228 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x558cd7afc168 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x558cd7afc320 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x558cd7afc508 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x558cd7afc410 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x558cd7afc7d8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x558cd7afc5c0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558cd7afc638 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558cd7afc6b0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd7afc9f8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x558cd7afc8a8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x558cd7afc920 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x558cd7b04fd8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x558cd7afcab8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x558cd7afcb30 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x558cd7afcba8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x558cd7b05130 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558cd7b050a0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558cd7b05278 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558cd7b051e8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x558cd7b05370 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<20>
         0 |   char [20] x
           | [sizeof=20, dsize=20, align=1,
           |  nvsize=20, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558cd7b4a890 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 20
|-PackedAttr 0x558cd7c1aa00 <line:167:18>
|-CXXRecordDecl 0x558cd7c1aac0 prev 0x558cd7b4a890 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x558cd7c1abd0 <line:166:5, col:13> col:10 x 'char [20]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [20 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [20 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558cd7b59750 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x558cd7c1bfe8 <line:167:18>
|-CXXRecordDecl 0x558cd7c1c0a8 prev 0x558cd7b59750 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x558cd7c1c1b8 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.4 = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.4 = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
