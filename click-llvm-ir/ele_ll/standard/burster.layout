
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616242920b8 prev 0x561624289858 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5616242921b0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x561624292240 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5616242922b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x561624292378 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x561624292440 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5616242925b8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5616242924f0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x561624292660 <col:24>
| `-OptimizeNoneAttr 0x5616242926b8 <col:34>
|-CXXMethodDecl 0x561624292700 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5616242929b8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5616242927b0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561624292828 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5616242928a8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x561624292a70 <line:229:7, col:14> col:7 private
|-FieldDecl 0x561624292aa8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x561624292b10 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x561624292b98 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x561624292eb8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x561624292c50 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561624292cc8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x561624292d40 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x561624292dc0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x561624292fd0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56162429a948 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56162429a948
| `-ParmVarDecl 0x56162429aa58 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56162429aaf8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56162429aaf8
| `-ParmVarDecl 0x56162429ac08 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56162435d7c8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616242850d0 prev 0x561624284e50 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5616242851c8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x561624285258 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5616242852b8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x5616242853a8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5616242854a8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x561624285678 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x561624285528 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5616242855a0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x561624285808 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x561624285740 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5616242858b0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5616242859e8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x561624285920 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x561624285b88 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x561624285ac8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x561624285d28 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x561624285c68 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x561624285dd0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x561624285ed0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x561624285fb0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624285eb0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x561624285e90 <col:26> 'int' 1
| `-EnumConstantDecl 0x561624285f60 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x561624285fc8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624285f40 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x561624285f20 <col:44> 'int' 2
|-CXXMethodDecl 0x561624286110 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x561624285ff8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561624286078 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x561624286268 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5616242861d8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5616242864a8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x561624286328 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5616242863a0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x561624286558 <col:20>
| `-OptimizeNoneAttr 0x5616242865b0 <col:30>
|-CXXMethodDecl 0x5616242866b8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5616242865f0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x561624286760 <col:20>
| `-OptimizeNoneAttr 0x5616242867b8 <col:30>
|-CXXMethodDecl 0x561624286808 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5616242868d0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5616242869e8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x561624286a70 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x561624286af8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x561624286b80 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x561624286c08 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x561624286c98 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x561624286d58 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x561624286de0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x561624286e68 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x561624286ef0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x561624286f78 <line:66:5, col:36> col:23 used PULL_TO_PUSH 'const char []' static
|-VarDecl 0x561624287000 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x561624287090 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x561624287150 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5616242871e0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x561624287330 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x561624287298 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5616242874c0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5616242873f0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x561624287770 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x561624287578 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5616242875f8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x561624287678 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x561624287828 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x561624287930 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561624287bc0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624287910 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5616242878f0 <col:33> 'int' 0
| |-EnumConstantDecl 0x5616242879c0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561624287bd8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242879a0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x561624287980 <col:32> 'int' 20
| |-EnumConstantDecl 0x561624287a50 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561624287bf0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624287a30 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x561624287a10 <col:38> 'int' 90
| |-EnumConstantDecl 0x561624287ae0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561624287c08 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624287ac0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x561624287aa0 <col:35> 'int' 100
| `-EnumConstantDecl 0x561624287b70 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x561624287c20 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624287b50 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x561624287b30 <col:32> 'int' 2000
|-CXXMethodDecl 0x561624287c60 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5616242880a0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561624287f10 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x561624287f88 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561624288170 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5616242882f0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x561624288220 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5616242884f8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5616242883a8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x561624288420 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5616242885f8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x561624288698 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x561624288760 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5616242887f0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x561624288a20 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242887d0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5616242887b0 <col:36> 'int' EnumConstant 0x561624288760 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x561624288840 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561624288890 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5616242888e0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561624288930 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561624288980 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5616242889d0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x561624288b08 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x561624288a48 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x561624288bd0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x561624288c90 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x561624288d50 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x561624288e10 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x561624288f28 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x561624288ff0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x561624289170 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5616242890a0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x561624289298 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561624289498 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x561624289348 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5616242893c8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x561624296de8 <col:54, line:127:5>
|   |-ParenExpr 0x561624296c98 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x561624296c68 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x561624296958 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561624296930 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x561624296918 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x561624296900 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5616242968d0 <col:31> 'Router *' lvalue ->_router 0x5616242947b0
|   |   |         `-CXXThisExpr 0x5616242968c0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5616242969b8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561624296998 <col:48> 'int' 0
|   |   `-CallExpr 0x561624296bc8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x561624296bb0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561624296b90 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561624296c08 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624296a28 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x561624296c20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624296a48 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x561624296c38 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561624296a80 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x561624296c50 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561624296b78 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561624296b60 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561624296b18 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x561624296d30 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x561624296cc8 <col:9> 'Router *' lvalue ->_router 0x5616242947b0
|   | | `-CXXThisExpr 0x561624296cb8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x561624296d18 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561624296cf8 <col:19> 'Router *' lvalue ParmVar 0x561624289348 'r' 'Router *'
|   `-BinaryOperator 0x561624296dc8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x561624296d60 <col:9> 'int' lvalue ->_eindex 0x561624294818
|     | `-CXXThisExpr 0x561624296d50 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x561624296db0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x561624296d90 <col:19> 'int' lvalue ParmVar 0x5616242893c8 'eindex' 'int'
|-CXXMethodDecl 0x561624289620 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x561624289558 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5616242896f0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5616242897b8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x561624289858 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x561624289aa8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x561624289920 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5616242899a0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x561624289b58 <col:20>
| `-OptimizeNoneAttr 0x561624289bb0 <col:30>
|-CXXMethodDecl 0x561624289cb8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561624289bf0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x561624289d60 <col:20>
| `-OptimizeNoneAttr 0x561624289db8 <col:30>
|-CXXMethodDecl 0x561624289e88 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561624289df8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x561624289f30 <col:20>
| `-OptimizeNoneAttr 0x561624289f88 <col:30>
|-CXXMethodDecl 0x56162428a118 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x561624289fc0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56162428a040 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56162428a2a8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56162428a1e0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56162428a3f8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56162428a368 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56162428a548 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56162428a4b8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56162428a698 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56162428a608 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56162428a958 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56162428a750 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56162428a7d0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56162428a878 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56162428aa30 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56162428aaf0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56162428adc0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56162428ac70 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56162428ace8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56162428aee8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56162428b0c0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56162428afa0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56162428b020 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56162428b2a8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56162428b188 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56162428b208 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56162428b618 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56162428b368 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56162428b3e0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56162428b460 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5616242963d0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5616242963b0 <col:106> 'int' 0
| `-ParmVarDecl 0x56162428b4d8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561624296408 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5616242963e8 <col:126> 'int' 0
|-CXXMethodDecl 0x56162428b9b8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56162428b6e8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56162428b780 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56162428b800 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56162428b878 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561624296440 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561624296420 <col:114> 'int' 0
|-CXXMethodDecl 0x56162428bd48 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56162428ba90 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56162428bb08 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56162428bb88 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x561624296458 <col:96> 'int' 0
| `-ParmVarDecl 0x56162428bc00 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561624296498 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561624296478 <col:116> 'int' 0
|-CXXMethodDecl 0x56162428c0c8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56162428be18 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56162428be90 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56162428bf10 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5616242964d0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5616242964b0 <col:109> 'int' 0
| `-ParmVarDecl 0x56162428bf88 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561624296508 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5616242964e8 <col:129> 'int' 0
|-CXXMethodDecl 0x56162428c448 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56162428c198 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56162428c210 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56162428c290 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56162428c308 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561624296540 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561624296520 <col:117> 'int' 0
|-CXXMethodDecl 0x56162428c7d8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56162428c520 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428c598 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56162428c618 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x561624296558 <col:99> 'int' 0
| `-ParmVarDecl 0x56162428c690 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561624296598 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561624296578 <col:119> 'int' 0
|-CXXMethodDecl 0x56162428cbf8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56162428c8a8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56162428c928 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56162428c9a0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56162428ca20 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5616242965d0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5616242965b0 <col:108> 'int' 0
| `-ParmVarDecl 0x56162428caa0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x561624296608 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5616242965e8 <col:141> 'int' 0
|-CXXMethodDecl 0x56162428d018 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56162428ccd0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56162428cd50 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56162428cdc8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56162428ce48 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56162428cec8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561624296620 <col:121> 'int' 0
|-CXXMethodDecl 0x56162428d448 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56162428d0f8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56162428d178 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56162428d1f0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56162428d270 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x561624296640 <col:98> 'int' 0
| `-ParmVarDecl 0x56162428d2f0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561624296660 <col:123> 'int' 0
|-CXXMethodDecl 0x56162428d710 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56162428d520 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56162428d5a0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56162428d620 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x561624296680 <col:80> 'int' 0
|-EnumDecl 0x56162428d7c8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56162428d8d0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56162428db60 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162428d8b0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56162428d890 <col:42> 'int' 1
| |-EnumConstantDecl 0x56162428d960 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56162428db78 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162428d940 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56162428d920 <col:40> 'int' 2
| |-EnumConstantDecl 0x56162428d9f0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56162428db90 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162428d9d0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56162428d9b0 <col:44> 'int' 4
| |-EnumConstantDecl 0x56162428da80 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56162428dba8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162428da60 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56162428da40 <col:36> 'int' 7
| `-EnumConstantDecl 0x56162428db10 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56162428dbc0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56162428daf0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56162428dad0 <col:34> 'int' 6
|-CXXMethodDecl 0x56162428de78 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56162428dbe8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56162428dc88 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56162428dd08 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56162428dd80 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x561624296738 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561624296720 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x561624296708 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5616242966e8 <col:98, col:105> 'String' (CXXTemporary 0x5616242966e8)
|           `-CXXTemporaryObjectExpr 0x5616242966b0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56162428e118 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56162428df48 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56162428dfc0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56162428e038 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5616242967e8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5616242967d0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5616242967b8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561624296798 <col:94, col:101> 'String' (CXXTemporary 0x561624296798)
| |         `-CXXTemporaryObjectExpr 0x561624296760 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x561624296fd0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x561624296f48 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x561624296f18 <col:9> '<bound member function type>' ->add_task_handlers 0x56162428de78
|     | `-CXXThisExpr 0x561624296f08 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561624296f88 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561624296e88 <col:27> 'Task *' lvalue ParmVar 0x56162428df48 'task' 'Task *'
|     |-ImplicitCastExpr 0x561624296fa0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x561624296ea8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56162428dfc0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x561624296fb8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561624296ec8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56162428db10 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561624296ee8 <col:62> 'const String' lvalue ParmVar 0x56162428e038 'prefix' 'const String &'
|-CXXMethodDecl 0x56162428e328 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56162428e1e0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56162428e258 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561624296898 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561624296880 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561624296868 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561624296848 <col:70, col:77> 'String' (CXXTemporary 0x561624296848)
| |         `-CXXTemporaryObjectExpr 0x561624296810 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5616242971a8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x561624297120 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5616242970f0 <col:9> '<bound member function type>' ->add_task_handlers 0x56162428de78
|     | `-CXXThisExpr 0x5616242970e0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561624297160 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561624297060 <col:27> 'Task *' lvalue ParmVar 0x56162428e1e0 'task' 'Task *'
|     |-ImplicitCastExpr 0x561624297178 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x561624297080 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x561624297190 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5616242970a0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56162428db10 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5616242970c0 <col:57> 'const String' lvalue ParmVar 0x56162428e258 'prefix' 'const String &'
|-CXXMethodDecl 0x56162428e608 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56162428e3f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428e470 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428e4e8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56162428e8b8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56162428e6d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428e758 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428e7d8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56162428eba8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56162428e988 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428ea08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428ea80 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56162428ee58 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56162428ec78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428ecf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428ed78 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56162428f108 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56162428ef28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428efa8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428f028 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56162428f3b8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56162428f1d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428f258 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428f2d0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56162428f668 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56162428f488 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428f508 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428f588 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56162428f978 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56162428f790 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428f810 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428f890 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56162428fc58 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56162428fa48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428fac8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428fb70 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56162428ff38 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56162428fd28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56162428fda8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56162428fe50 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5616242901a0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561624290008 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561624290088 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561624290100 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x561624290448 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x561624290270 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5616242902f0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561624290368 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5616242906f8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x561624290518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561624290598 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561624290618 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5616242909a8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5616242907c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561624290848 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5616242908c0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x561624290c58 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x561624290a78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561624290af8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561624290b70 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x561624290f28 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x561624290d28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561624290da8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561624290e48 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x561624291258 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x561624290ff8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561624291078 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5616242910f0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x561624291168 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5616242968b0 <col:93> 'bool' false
|-CXXMethodDecl 0x561624291440 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561624291328 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5616242913a8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x561624291618 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561624291500 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x561624291580 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5616242918f8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5616242916d8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x561624291750 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5616242917d0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x561624291848 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x561624291be8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5616242919c8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x561624291a40 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x561624291ac0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x561624291b38 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x561624291e20 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x561624291cc0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x561624291d40 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x561624292008 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x561624291ee8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x561624291f68 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5616242920b8 prev 0x561624289858 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5616242921b0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x561624292240 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5616242922b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x561624292378 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x561624292440 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5616242925b8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5616242924f0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x561624292660 <col:24>
| | `-OptimizeNoneAttr 0x5616242926b8 <col:34>
| |-CXXMethodDecl 0x561624292700 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5616242929b8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5616242927b0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561624292828 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5616242928a8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x561624292a70 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x561624292aa8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x561624292b10 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x561624292b98 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x561624292eb8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x561624292c50 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561624292cc8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x561624292d40 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x561624292dc0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x561624292fd0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56162429a948 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56162429a948
| | `-ParmVarDecl 0x56162429aa58 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56162429aaf8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56162429aaf8
| | `-ParmVarDecl 0x56162429ac08 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56162435d7c8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561624293048 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5616242930e8 <col:38> "" ""
|-CXXMethodDecl 0x561624293178 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x561624293218 <col:44> "" ""
|-AccessSpecDecl 0x561624293288 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5616242932b0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5616242933b0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x561624293400 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624293390 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x561624293370 <col:27> 'int' 4
|-FieldDecl 0x5616242934b8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x561624293668 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x561624293720 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5616242947b0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x561624294818 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x561624294968 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5616242948a8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x561624294b18 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x561624294a28 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x561624294cf8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x561624294bd8 <col:20> col:23 'int'
| `-ParmVarDecl 0x561624294c58 <col:25> col:28 'int'
|-CXXMethodDecl 0x561624294fa0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x561624294dc0 <col:23> col:26 'int'
| |-ParmVarDecl 0x561624294e40 <col:28> col:31 'int'
| `-ParmVarDecl 0x561624294eb8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x561624295058 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x561624295120 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x561624295170 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5616242951c0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5616242953a0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x561624295250 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5616242952c8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561624295648 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x561624295468 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5616242954e8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x561624295560 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x561624295868 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x561624295718 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x561624295798 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x561624295ba0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x561624295928 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5616242959a8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x561624295a20 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x561624295aa0 <col:57> col:60 'int'
|-CXXMethodDecl 0x561624295d88 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561624295c70 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x561624295cf0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x561624295ed8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x561624295e48 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x561624296258 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x561624295f98 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x561624296018 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x561624296090 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x561624296110 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x561624296370 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class TimedUnqueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   int _burst
       112 |   class Task _task
       112 |     struct TaskLink (base)
       112 |       struct TaskLink * _prev
       120 |       struct TaskLink * _next
       128 |       unsigned int _pass
       132 |     unsigned int _stride
       136 |     int _tickets
       140 |     union Task::Status _status
       140 |       struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
       140 |         int16_t home_thread_id
       142 |         uint8_t is_scheduled
       143 |         uint8_t is_strong_unscheduled
       140 |       uint32_t status
       144 |     TaskCallback _hook
       152 |     void * _thunk
       160 |     class RouterThread * _thread
       168 |     class Element * _owner
       176 |     union Task::Pending _pending_nextptr
       176 |       class Task * t
       176 |       uintptr_t x
       184 |   class Timer _timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
       232 |   unsigned int _interval
       240 |   class NotifierSignal _signal
       240 |     union NotifierSignal::vmvalue _v
       240 |       class atomic_uint32_t * v1
       240 |       struct NotifierSignal::vmpair * vm
       248 |     uint32_t _mask
           | [sizeof=256, dsize=256, align=8,
           |  nvsize=256, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616242a29f0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5616242a2b08 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x5616242a2bd8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x5616242a2c38 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x5616242a2ca0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x5616242a2d28 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x5616242a2f90 <col:16, line:46:5>
|   |-BinaryOperator 0x5616242a2ed8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x5616242a2df8 <col:9> 'TaskLink *' lvalue ->_prev 0x5616242a2bd8
|   | | `-CXXThisExpr 0x5616242a2de8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x5616242a2ec0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x5616242a2ea0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x5616242a2e38 <col:17> 'TaskLink *' lvalue ->_next 0x5616242a2c38
|   |     | `-CXXThisExpr 0x5616242a2e28 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x5616242a2e88 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x5616242a2e68 <col:25> 'int' 0
|   `-BinaryOperator 0x5616242a2f70 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x5616242a2f08 <col:9> 'unsigned int' lvalue ->_pass 0x5616242a2ca0
|     | `-CXXThisExpr 0x5616242a2ef8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x5616242a2f58 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5616242a2f38 <col:17> 'int' 0
|-CXXConstructorDecl 0x56162432f4c8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x56162432f4c8
| `-ParmVarDecl 0x56162432f5d8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x56162432f678 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x56162432f678
| `-ParmVarDecl 0x56162432f788 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x56162432f978 <col:8> col:8 implicit ~TaskLink 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561624330178 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x561624330178
| `-ParmVarDecl 0x561624330288 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5616243302f8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5616243302f8
  `-ParmVarDecl 0x561624330408 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616242060b8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5616242061e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x561624206248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x5616242062a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x561624336688 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x561624336760 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x561624336a18 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561624336a18
| `-ParmVarDecl 0x561624336b28 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x561624336bc8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561624336bc8
  `-ParmVarDecl 0x561624336cd8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561624205f08 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561624206028 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x5616242060b8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5616242061e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x561624206248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x5616242062a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x561624336688 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x561624336760 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x561624336a18 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561624336a18
| | `-ParmVarDecl 0x561624336b28 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x561624336bc8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561624336bc8
|   `-ParmVarDecl 0x561624336cd8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x561624206368 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x5616242063c8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x561624206368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5616242061e8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x561624206420 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x561624206368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561624206248 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x561624206478 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x561624206368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5616242062a8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x5616242064d0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561624336598 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561624336ef8 <col:11>
|-CXXConstructorDecl 0x561624336868 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x561624336868
| `-ParmVarDecl 0x561624336978 <col:11> col:11 'const Task::Status &'
|-CXXConstructorDecl 0x561624336d78 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x561624336d78
| `-ParmVarDecl 0x561624336e88 <col:11> col:11 'Task::Status &&'
`-CXXDestructorDecl 0x56162435d8b0 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162421da00 prev 0x561624214840 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56162421daf8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56162421db98 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x561624224960 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561624224d48 <col:11>
|-CXXConstructorDecl 0x561624224a40 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561624224b28 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561624225490 <col:11>
|-CXXConstructorDecl 0x561624224bc8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561624224cd8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x561624226ce8 <col:11>
|-CXXDestructorDecl 0x561624225ff8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561623f2cba8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561623f2ccb8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561623f2d580 <col:11>
|   `-ReturnStmt 0x561623f2d570 <col:11>
|     `-UnaryOperator 0x561623f2d558 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561623f2d548 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x561623f2cd28 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x561623f2ce38 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x5616242bf420 <col:11>
    `-ReturnStmt 0x5616242bf410 <col:11>
      `-UnaryOperator 0x5616242bf3f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5616242bf3e8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616242139f8 prev 0x561624213708 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561624213af0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x561624213b80 <col:19, col:25> col:19 public
|-TypedefDecl 0x561624213bb8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x561623e78d80 'int32_t' sugar
|   |-Typedef 0x561623d8b328 'int32_t'
|   `-TypedefType 0x561623d64510 '__int32_t' sugar
|     |-Typedef 0x561623d64128 '__int32_t'
|     `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x561624213c20 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x561623e78f40 'int64_t' sugar
|   |-Typedef 0x561623d8b390 'int64_t'
|   `-TypedefType 0x561623d64630 '__int64_t' sugar
|     |-Typedef 0x561623d64208 '__int64_t'
|     `-BuiltinType 0x561623d225a0 'long'
|-EnumDecl 0x561624213c78 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x561624213df0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x561624213dd0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x561624213da8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x561624213d90 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x561624213d60 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x561624213ee8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x561624213ec8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x561624213ea0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x561624213e88 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x561624213e60 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x561624213e40 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x561624213f38 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x561624214040 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561624214590 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624214020 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x561624214000 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x5616242140d0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5616242145a8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242140b0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561624214090 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x561624214160 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5616242145c0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624214140 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561624214120 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5616242141f0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5616242145d8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242141d0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5616242141b0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x561624214280 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5616242145f0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624214260 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561624214240 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561624214310 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561624214608 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242142f0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x5616242142d0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x5616242143a0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561624214620 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624214380 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x561624214360 <col:26> 'int' EnumConstant 0x561624214040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x561624214470 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561624214638 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624214450 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x561624214430 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x5616242143f0 <col:27> 'int' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x561624214410 <col:44> 'int' EnumConstant 0x561624214310 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x561624214540 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x561624214650 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624214520 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x561624214500 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x5616242144c0 <col:27> 'int' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x5616242144e0 <col:44> 'int' EnumConstant 0x5616242141f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x561624214668 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x561624214770 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x5616242147c0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624214750 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x561624214730 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x5616242147e8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x561623e789b0 'uninitialized_type'
|   `-CXXRecord 0x561623e78918 'uninitialized_type'
|-CXXRecordDecl 0x561624214840 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x561624214950 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561624224d58 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561624224e78 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x561624224e30 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x561624224dc0 <col:9> '<bound member function type>' ->assign 0x561624219598
|     | `-CXXThisExpr 0x561624224db0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561624224df0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x561624224e60 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561624224e10 <col:19> 'int' 0
|-CXXConstructorDecl 0x561624214b98 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x561624214a10 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x561624214a88 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561624220690 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561624220670 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561624224e90 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561624224fe0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x561624224f68 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x561624224ef8 <col:9> '<bound member function type>' ->assign 0x561624219598
|     | `-CXXThisExpr 0x561624224ee8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561624224fb0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561624224f98 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561624224f28 <col:16> 'long' lvalue ParmVar 0x561624214a10 'sec' 'long'
|     `-ImplicitCastExpr 0x561624224fc8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561624224f48 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561624214a88 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561624214df8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561624214c68 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x561624214ce0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5616242206c8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5616242206a8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561624224ff8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561624225130 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x5616242250d0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x561624225060 <col:9> '<bound member function type>' ->assign 0x561624219598
|     | `-CXXThisExpr 0x561624225050 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561624225100 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561624225090 <col:16> 'int' lvalue ParmVar 0x561624214c68 'sec' 'int'
|     `-ImplicitCastExpr 0x561624225118 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5616242250b0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561624214ce0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561624215058 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x561624214ec8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x561624214f40 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561624220700 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5616242206e0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561624225148 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561624225298 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x561624225220 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x5616242251b0 <col:9> '<bound member function type>' ->assign 0x561624219598
|     | `-CXXThisExpr 0x5616242251a0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561624225268 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561624225250 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5616242251e0 <col:16> 'unsigned long' lvalue ParmVar 0x561624214ec8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x561624225280 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561624225200 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561624214f40 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5616242161f0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x561624215128 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x5616242151a0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561624220738 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561624220718 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5616242252b0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561624225400 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x561624225388 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x561624225318 <col:9> '<bound member function type>' ->assign 0x561624219598
|     | `-CXXThisExpr 0x561624225308 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5616242253d0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5616242253b8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561624225348 <col:16> 'unsigned int' lvalue ParmVar 0x561624215128 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x5616242253e8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561624225368 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5616242151a0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561624216350 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x5616242162c0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x5616242164e8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x561624216428 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x561624216718 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x561624216620 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x5616242168c8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x561624216808 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5616242254a0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x561624225418 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x561624216808 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561624225500 <col:19, line:214:5>
|-CXXConstructorDecl 0x561624216a98 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x5616242169d8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561624225510 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5616242255c0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x561624225598 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x561624225568 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x5616242169d8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x561624216c88 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x561624216c00 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x5616242137a0 'Timestamp'
|   | `-CXXRecord 0x5616242139f8 'Timestamp'
|   `-ParenType 0x561624216ba0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x561624216b70 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x561624213d40 'Timestamp::seconds_type' sugar
|         |-Typedef 0x561624213bb8 'seconds_type'
|         `-TypedefType 0x561623e78d80 'int32_t' sugar
|           |-Typedef 0x561623d8b328 'int32_t'
|           `-TypedefType 0x561623d64510 '__int32_t' sugar
|             |-Typedef 0x561623d64128 '__int32_t'
|             `-BuiltinType 0x561623d22580 'int'
|-CXXConversionDecl 0x561624216dc8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561624216e98 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x5616242256c8 <col:37, line:231:5>
|   `-ReturnStmt 0x5616242256b8 <line:227:9, col:23>
|     `-BinaryOperator 0x561624225698 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x561624225668 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561624225618 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56162421db98
|       |   `-MemberExpr 0x5616242255e8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56162421eb48
|       |     `-CXXThisExpr 0x5616242255d8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561624225680 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x561624225648 <col:23> 'int' 0
|-CXXMethodDecl 0x561624216f58 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x561624217018 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5616242170d8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x561624217198 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x561624217258 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5616242173c8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x561624217308 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x561624217510 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x561624217480 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5616242175d8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561624217678 <col:54> "" ""
|-CXXMethodDecl 0x561624217708 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5616242177a8 <col:54> "" ""
|-CXXMethodDecl 0x561624217838 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5616242178d8 <col:54> "" ""
|-CXXMethodDecl 0x5616242179d8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x561624217aa8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x561624217bd8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x561624217cd0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x561624217e08 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5616242258e0 <col:39, line:271:5>
|   `-ReturnStmt 0x5616242258d0 <line:267:9, col:61>
|     `-CallExpr 0x561624225870 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561624225858 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5616242256e0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56162421ee78 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5616242258a0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561624225740 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56162421db98
|       |   `-MemberExpr 0x561624225710 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56162421eb48
|       |     `-CXXThisExpr 0x561624225700 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5616242258b8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5616242257e0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5616242257b0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x561624225770 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5616242257c8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x561624225790 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214310 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561624217ec8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561624225aa0 <col:39, line:279:5>
|   `-ReturnStmt 0x561624225a90 <line:275:9, col:61>
|     `-CallExpr 0x561624225a30 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561624225a18 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5616242258f8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56162421ee78 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x561624225a60 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561624225958 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56162421db98
|       |   `-MemberExpr 0x561624225928 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56162421eb48
|       |     `-CXXThisExpr 0x561624225918 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561624225a78 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5616242259f8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5616242259c8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x561624225988 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5616242259e0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5616242259a8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242141f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561624217f88 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561624225c38 <col:39, line:287:5>
|   `-ReturnStmt 0x561624225c28 <line:283:9, col:53>
|     `-BinaryOperator 0x561624225c08 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x561624225bd8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561624225af8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56162421db98
|       |   `-MemberExpr 0x561624225ac8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56162421eb48
|       |     `-CXXThisExpr 0x561624225ab8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561624225bf0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x561624225bb8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561624225b98 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561624225b68 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561624225b28 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561624225b80 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561624225b48 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561624218078 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561624226ed0 <col:40, line:293:5>
|   |-DeclStmt 0x561624225d80 <line:291:9, col:48>
|   | `-VarDecl 0x561624225c60 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561624225d60 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561624225d08 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561624225cd8 <col:22> '<bound member function type>' ->subsec 0x561624217018
|   |     |   `-CXXThisExpr 0x561624225cc8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561624225d48 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561624225d28 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214470 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561624226ec0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x561624226ea8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561624226e78 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561624226e60 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561624226e40 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561624226e10 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561624226ba8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561624226b90 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561624225d98 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561624225c60 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561624226db0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x561624226d98 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561624226d68 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x561624226bc0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561624226b30 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561624226b18 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x561624226ac8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561624213948 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561624226a68 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561624225dc8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561624225db8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x561624226ab0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x561624226a98 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561624226288 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561624225df0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561624225e80 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561624225e50 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561624225e10 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214470 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561624225e68 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561624225e30 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561624225c60 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561624226de0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561624226b78 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561624226b68 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561624218138 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561624227428 <col:40, line:302:5>
|   |-DeclStmt 0x561624227020 <line:297:9, col:48>
|   | `-VarDecl 0x561624226f00 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561624227000 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561624226fa8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561624226f78 <col:22> '<bound member function type>' ->subsec 0x561624217018
|   |     |   `-CXXThisExpr 0x561624226f68 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561624226fe8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561624226fc8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214540 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561624227418 <line:298:9, col:70>
|     `-ExprWithCleanups 0x561624227400 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5616242273d0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5616242273b8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561624227398 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561624227368 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561624227290 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561624227278 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561624227038 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561624226f00 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561624227308 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5616242272f0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5616242272c0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5616242272a8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561624227218 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561624227200 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5616242271e0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561624213948 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561624227180 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561624227068 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561624227058 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5616242271c8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5616242271b0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561624227140 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561624227090 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561624227120 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5616242270f0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5616242270b0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214540 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561624227108 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5616242270d0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561624226f00 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561624227338 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561624227260 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561624227250 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5616242181f8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5616242274b0 <col:40, line:306:5>
|   `-ReturnStmt 0x5616242274a0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x561624227470 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x561624227458 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561624227448 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x561624218398 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x5616242182a8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x561624218568 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x561624218470 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x561624218658 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x5616242187c8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x561624218708 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x5616242275f8 <col:56, line:320:5>
|   `-ReturnStmt 0x5616242275e8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x5616242275d0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x5616242275a0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561624227588 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561624227548 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561624227518 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5616242274d8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561624218708 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x561624227530 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5616242274f8 <col:31> 'int' 0
|-CXXMethodDecl 0x561624218a08 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561624218880 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5616242188f8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5616242277c8 <col:72, line:326:5>
|   `-ReturnStmt 0x5616242277b8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x5616242277a0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561624227770 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561624227758 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561624227718 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561624227700 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561624227620 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561624218880 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5616242276c0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5616242276a8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561624227640 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56162421d2f0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5616242276e8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561624227660 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5616242188f8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624218bb8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561624218ac8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561624227e90 <col:56, line:337:5>
|   |-DeclStmt 0x561624227ac8 <line:329:9, col:51>
|   | `-VarDecl 0x5616242277f0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561624227ab0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561624227a80 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561624227a68 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561624227a50 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561624227a20 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561624227a08 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5616242279f0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5616242278e0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561624227c80 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561624227b30 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56162421db98
|   | | `-MemberExpr 0x561624227b00 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56162421eb48
|   | |   `-DeclRefExpr 0x561624227ae0 <col:9> 'Timestamp' lvalue Var 0x5616242277f0 't' 'Timestamp'
|   | `-BinaryOperator 0x561624227c60 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561624227c30 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561624227b60 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561624218ac8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561624227c48 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561624227c10 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561624227bf0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561624227bc0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x561624227b80 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561624227bd8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561624227ba0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214310 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561624227e78 <line:336:9, col:16>
|     `-CXXConstructExpr 0x561624227e48 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561624227e30 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561624227e10 <col:16> 'Timestamp' lvalue Var 0x5616242277f0 't' 'Timestamp'
|-CXXMethodDecl 0x561624218d80 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561624218c70 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561624218ce8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624228048 <col:72, line:343:5>
|   `-ReturnStmt 0x561624228038 <line:342:9, col:51>
|     `-ExprWithCleanups 0x561624228020 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561624227ff0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561624227fd8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561624227f98 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561624227f80 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561624227ec8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561624218c70 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561624227f40 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561624227f28 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561624227ee8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56162421d438 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561624227f68 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561624227f08 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561624218ce8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624218ed0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561624218e40 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561624228490 <col:56, line:354:5>
|   |-DeclStmt 0x561624228238 <line:346:9, col:51>
|   | `-VarDecl 0x561624228070 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561624228220 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5616242281f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5616242281d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5616242281c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561624228190 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561624228178 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561624228160 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561624228130 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5616242283f0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5616242282a0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56162421db98
|   | | `-MemberExpr 0x561624228270 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56162421eb48
|   | |   `-DeclRefExpr 0x561624228250 <col:9> 'Timestamp' lvalue Var 0x561624228070 't' 'Timestamp'
|   | `-BinaryOperator 0x5616242283d0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5616242283a0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616242282d0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561624218e40 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5616242283b8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561624228380 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561624228360 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561624228330 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5616242282f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561624228348 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561624228310 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242141f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561624228478 <line:353:9, col:16>
|     `-CXXConstructExpr 0x561624228448 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561624228430 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561624228410 <col:16> 'Timestamp' lvalue Var 0x561624228070 't' 'Timestamp'
|-CXXMethodDecl 0x561624219098 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561624218f88 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561624219000 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624228648 <col:72, line:360:5>
|   `-ReturnStmt 0x561624228638 <line:359:9, col:51>
|     `-ExprWithCleanups 0x561624228620 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5616242285f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5616242285d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561624228598 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561624228580 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5616242284c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561624218f88 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561624228540 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561624228528 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5616242284e8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56162421d580 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561624228568 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561624228508 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561624219000 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5616242191e8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561624219158 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561624234fb8 <col:56, line:371:5>
|   |-DeclStmt 0x561624228838 <line:363:9, col:51>
|   | `-VarDecl 0x561624228670 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561624228820 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5616242287f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5616242287d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5616242287c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561624228790 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561624228778 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561624228760 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561624228730 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561624234f18 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5616242288a0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56162421db98
|   | | `-MemberExpr 0x561624228870 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56162421eb48
|   | |   `-DeclRefExpr 0x561624228850 <col:9> 'Timestamp' lvalue Var 0x561624228670 't' 'Timestamp'
|   | `-CallExpr 0x561624234eb8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x561624234ea0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5616242288d0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56162421ee78 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x561624234ee8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616242288f0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x561624219158 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561624234f00 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x561624234e80 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x561624234e50 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x561624228910 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x561624234e68 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x561624228930 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561624234fa0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x561624234f70 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561624234f58 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561624234f38 <col:16> 'Timestamp' lvalue Var 0x561624228670 't' 'Timestamp'
|-CXXMethodDecl 0x5616242192d8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5616242350f8 <col:39, line:377:5>
|   `-ReturnStmt 0x5616242350e8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5616242350d0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5616242350a0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561624235088 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561624235048 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x561624234ff0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x561624235030 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561624235010 <col:29> 'int' 1
|-CXXMethodDecl 0x561624219398 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5616242351d8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x561624235190 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x561624235120 <col:9> '<bound member function type>' ->assign 0x561624219598
|     | `-CXXThisExpr 0x561624235110 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561624235150 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5616242351c0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561624235170 <col:19> 'int' 0
|-CXXMethodDecl 0x561624219598 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561624219448 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5616242194c0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561624220770 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561624220750 <col:60> 'int' 0
| `-CompoundStmt 0x5616242353d0 <col:63, line:395:5>
|   `-BinaryOperator 0x5616242353b0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x561624235230 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56162421db98
|     | `-MemberExpr 0x561624235200 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56162421eb48
|     |   `-CXXThisExpr 0x5616242351f0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x561624235390 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x561624235320 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5616242352c0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5616242352a8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x561624235290 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x561624235260 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561624219448 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x561624235308 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5616242352e8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x561624235378 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x561624235360 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x561624235340 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5616242194c0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624219768 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561624219658 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5616242196d0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624235528 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5616242354e0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5616242353f8 <col:9> '<bound member function type>' ->assign 0x561624219598
|     | `-CXXThisExpr 0x5616242353e8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561624235510 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561624235428 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561624219658 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5616242354a0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x561624235488 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561624235448 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56162421d438 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5616242354c8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561624235468 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5616242196d0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624219938 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561624219828 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5616242198a0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624235680 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x561624235638 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x561624235550 <col:9> '<bound member function type>' ->assign 0x561624219598
|     | `-CXXThisExpr 0x561624235540 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561624235668 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561624235580 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561624219828 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5616242355f8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5616242355e0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5616242355a0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56162421d580 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x561624235620 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5616242355c0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5616242198a0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624219b08 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5616242199f8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561624219a70 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5616242207a8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561624220788 <col:57> 'int' 0
| `-DeprecatedAttr 0x561624219bb8 <col:75> "" ""
|-CXXMethodDecl 0x561624219d48 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561624219c38 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561624219cb0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561624219df8 <col:74> "" ""
|-CXXMethodDecl 0x561624219f88 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561624219e78 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561624219ef0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56162421a038 <col:74> "" ""
|-CXXMethodDecl 0x56162421a0c8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x56162421a168 <col:42> "" ""
|-CXXMethodDecl 0x56162421c9a0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x56162421c880 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56162421c900 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x56162421ca70 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x56162421cb30 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x56162421cbd0 <col:20>
| `-OptimizeNoneAttr 0x56162421cc28 <col:30>
|-CXXMethodDecl 0x56162421cc70 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x56162421cd30 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x56162421cdf0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56162421ceb0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x56162421cf70 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56162421d030 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x56162421d0f0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56162421d1b0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x56162421d2f0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56162421d260 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5616242357c8 <col:58, line:512:5>
|   `-ReturnStmt 0x5616242357b8 <line:511:9, col:53>
|     `-BinaryOperator 0x561624235798 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561624235768 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561624235698 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162421d260 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561624235780 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561624235748 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561624235728 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5616242356f8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5616242356b8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561624235710 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5616242356d8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214310 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56162421d438 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56162421d3a8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624235910 <col:58, line:516:5>
|   `-ReturnStmt 0x561624235900 <line:515:9, col:53>
|     `-BinaryOperator 0x5616242358e0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5616242358b0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5616242357e0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162421d3a8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5616242358c8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561624235890 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561624235870 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561624235840 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561624235800 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561624235858 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561624235820 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242141f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56162421d580 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56162421d4f0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624235a58 <col:58, line:520:5>
|   `-ReturnStmt 0x561624235a48 <line:519:9, col:53>
|     `-BinaryOperator 0x561624235a28 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5616242359f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561624235928 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162421d4f0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561624235a10 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5616242359d8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5616242359b8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561624235988 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561624235948 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5616242359a0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561624235968 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56162421d6c8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56162421d638 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624235ba0 <col:60, line:524:5>
|   `-ReturnStmt 0x561624235b90 <line:523:9, col:55>
|     `-BinaryOperator 0x561624235b70 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561624235b40 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561624235a70 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162421d638 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561624235b58 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561624235b20 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561624235b00 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x561624235ad0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561624235a90 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561624235ae8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561624235ab0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214310 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56162421d810 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56162421d780 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624235ce8 <col:60, line:528:5>
|   `-ReturnStmt 0x561624235cd8 <line:527:9, col:55>
|     `-BinaryOperator 0x561624235cb8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561624235c88 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561624235bb8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162421d780 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561624235ca0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561624235c68 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561624235c48 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x561624235c18 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561624235bd8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561624235c30 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561624235bf8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242141f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56162421d958 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56162421d8c8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624235e30 <col:60, line:532:5>
|   `-ReturnStmt 0x561624235e20 <line:531:9, col:55>
|     `-BinaryOperator 0x561624235e00 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561624235dd0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561624235d00 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162421d8c8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561624235de8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561624235db0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561624235d90 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561624235d60 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561624235d20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561624214040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561624235d78 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561624235d40 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5616242143a0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56162421da00 prev 0x561624214840 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56162421daf8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56162421db98 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x561624224960 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561624224d48 <col:11>
| |-CXXConstructorDecl 0x561624224a40 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561624224b28 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x561624225490 <col:11>
| |-CXXConstructorDecl 0x561624224bc8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x561624224cd8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x561624226ce8 <col:11>
| |-CXXDestructorDecl 0x561624225ff8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561623f2cba8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561623f2ccb8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x561623f2d580 <col:11>
| |   `-ReturnStmt 0x561623f2d570 <col:11>
| |     `-UnaryOperator 0x561623f2d558 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561623f2d548 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x561623f2cd28 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x561623f2ce38 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x5616242bf420 <col:11>
|     `-ReturnStmt 0x5616242bf410 <col:11>
|       `-UnaryOperator 0x5616242bf3f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5616242bf3e8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x56162421dc00 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56162421dd00 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56162421df00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162421dce0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56162421dcc0 <col:21> 'int' 0
| |-EnumConstantDecl 0x56162421dd90 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56162421df18 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162421dd70 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56162421dd50 <col:23> 'int' 1
| |-EnumConstantDecl 0x56162421de20 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56162421df30 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162421de00 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56162421dde0 <col:23> 'int' 2
| `-EnumConstantDecl 0x56162421deb0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56162421df48 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56162421de90 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56162421de70 <col:27> 'int' 3
|-CXXMethodDecl 0x56162421df88 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56162421e050 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56162421e258 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56162421e100 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56162421e180 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x5616242207c0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56162421e468 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56162421e318 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56162421e390 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56162421e538 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56162421e5f8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56162421e768 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56162421e6a8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56162421e830 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56162421e8f0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56162421e9b0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56162421ea70 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56162421eb10 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56162421eb48 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56162421ebb8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x561624235e48 <col:27, line:684:5>
|-CXXMethodDecl 0x56162421ec78 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x561624235e58 <col:27, line:696:5>
|-CXXMethodDecl 0x56162421ee78 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56162421ed28 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56162421eda0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624235fe0 <col:66, line:700:5>
|   `-ReturnStmt 0x561624235fd0 <line:699:9, col:31>
|     `-CallExpr 0x561624235f70 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x561624235f58 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561624235f08 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x5616240a1228 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x561624235fa0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x561624235ec8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56162421ed28 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x561624235fb8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561624235ee8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162421eda0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56162421f1e8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56162421ef38 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56162421efb0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56162421f028 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56162421f0a0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561624236330 <col:64, line:707:5>
|   |-DeclStmt 0x561624236070 <line:704:9, col:24>
|   | `-VarDecl 0x561624236008 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x561624236280 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x561624236088 <col:9> 'int32_t':'int' lvalue ParmVar 0x56162421efb0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x561624236268 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x561624236200 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5616242361e8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561624236168 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x5616240a64f8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x561624236238 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x561624236108 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56162421f028 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x561624236250 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x561624236128 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162421f0a0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x561624236148 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x561624236008 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x561624236310 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5616242362a0 <col:9> 'int32_t':'int' lvalue ParmVar 0x56162421ef38 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5616242362f8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5616242362e0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5616242362c0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x561624236008 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56162421f488 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56162421f2b8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56162421f330 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56162421f3a8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56162421f728 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56162421f550 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56162421f5c8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56162421f640 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56162421f8b8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56162421f7f0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56162421fab8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56162421f970 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56162421f9e8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56162421fd88 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56162421fcc8 parent 0x561623d22488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56162421fb78 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56162421fbf0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56162421ffa8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56162421fee8 parent 0x561623d22488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56162421fdd8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56162421fe50 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x561624220170 <line:719:5, col:57> col:29
| `-FunctionDecl 0x5616242200b8 parent 0x561623d22488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56162421fff8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x5616242203f8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x561624220338 parent 0x561623d22488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5616242201e8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x561624220260 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x561624220618 <line:721:5, col:73> col:30
| `-FunctionDecl 0x561624220558 parent 0x561623d22488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561624220448 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5616242204c0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x561624225ea0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561624225f88 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5616242269f8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5616242269b0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56162421eb48
| |     `-DeclRefExpr 0x561624226990 <col:7> 'const Timestamp' lvalue ParmVar 0x561624225f88 '' 'const Timestamp &'
| `-CompoundStmt 0x561624226a58 <col:7>
|-CXXConstructorDecl 0x561624226108 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561624226218 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56162421eb48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561624226cf8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x561624226ca0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56162421eb48
| |     `-CXXStaticCastExpr 0x561624226c70 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x561624226c40 <col:7> 'Timestamp' lvalue ParmVar 0x561624226218 '' 'Timestamp &&'
| `-CompoundStmt 0x561624226d58 <col:7>
|-CXXDestructorDecl 0x5616242262c8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561623f2c9f8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561623f2cb08 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x561623f2d5f8 <col:7>
|   |-CXXMemberCallExpr 0x561623f2d598 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x561623f2d4d8 <col:7> '<bound member function type>' .operator= 0x561623f2cba8
|   | | `-MemberExpr 0x561623f2d3e8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56162421eb48
|   | |   `-CXXThisExpr 0x561623f2d3d8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x561623f2d4a8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56162421eb48
|   |   `-DeclRefExpr 0x561623f2d488 <col:7> 'const Timestamp' lvalue ParmVar 0x561623f2cb08 '' 'const Timestamp &'
|   `-ReturnStmt 0x561623f2d5e8 <col:7>
|     `-UnaryOperator 0x561623f2d5d0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561623f2d5c0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x561623f2cea8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x561623f2cfb8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x5616242bf498 <col:7>
    |-CXXMemberCallExpr 0x5616242bf438 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x5616242bf3a0 <col:7> '<bound member function type>' .operator= 0x561623f2cd28
    | | `-MemberExpr 0x5616242bf270 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56162421eb48
    | |   `-CXXThisExpr 0x5616242bf260 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x5616242bf370 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56162421eb48
    |   `-CXXStaticCastExpr 0x5616242bf340 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x5616242bf310 <col:7> 'Timestamp' lvalue ParmVar 0x561623f2cfb8 '' 'Timestamp &&'
    `-ReturnStmt 0x5616242bf488 <col:7>
      `-UnaryOperator 0x5616242bf470 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5616242bf460 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5616242c4190 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x5616242c4368 prev 0x5616242c4190 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5616242c43f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5616242c4420 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x5616242c9e20 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x5616242c9dd0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x5616242c48d0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x5616242c47d0 'type'
|     `-TemplateSpecializationType 0x5616242c4760 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5616242c4640 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x5616242c4620 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5616242c4600 <col:24> 'unsigned long' 16
|       `-RecordType 0x5616242c4740 'char_array<16>'
|         `-ClassTemplateSpecialization 0x5616242c4660 'char_array'
|-TypedefDecl 0x5616242c9ed8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x5616242c9ea0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x5616242c9e80 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x5616242c9e20 'type'
|     `-ElaboratedType 0x5616242c9dd0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x5616242c48d0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x5616242c47d0 'type'
|         `-TemplateSpecializationType 0x5616242c4760 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5616242c4640 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x5616242c4620 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5616242c4600 <col:24> 'unsigned long' 16
|           `-RecordType 0x5616242c4740 'char_array<16>'
|             `-ClassTemplateSpecialization 0x5616242c4660 'char_array'
|-CXXMethodDecl 0x5616242ca058 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x5616242c9f68 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x5616242ca148 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5616242ca228 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5616242ca228
|-CXXMethodDecl 0x5616242ca4f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5616242ca400 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x5616242ca738 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5616242ca5b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5616242ca628 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5616242ca908 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5616242ca7f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5616242ca870 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5616242caa68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5616242cab38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5616242cad88 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5616242cabf8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5616242cac70 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5616242cafe8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x5616242cae58 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5616242caed0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5616242cb1a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5616242cb0b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5616242cb368 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5616242cb270 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5616242cb420 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5616242cb4d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5616242cb708 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5616242cb580 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5616242cb5f8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5616242cb9a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5616242cb8b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x5616242cba70 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x5616242cbac0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5616242cbb10 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5616242c2aa8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x5616242c2cb8 prev 0x5616242c2aa8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5616242c4100 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x5616242c40b0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x5616242c4090 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x5616242c3f40 'type'
|     `-SubstTemplateTypeParmType 0x5616242c3d60 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x561623fe93b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561623fe9358 'T'
|       `-RecordType 0x5616242c38b0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x5616242c37c8 'sized_array_memory'
|-FieldDecl 0x5616242cbb60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x5616242cbbb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5616242cbbe8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x5616242c2d50 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561624021048 'T'
|   `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|     `-CXXRecord 0x5616242c1c20 'heap_element'
|-TypedefDecl 0x5616242cbca8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x5616242cbc70 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x5616242c2d50 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|       `-CXXRecord 0x5616242c1c20 'heap_element'
|-TypedefDecl 0x5616242cbd38 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5616242cbd00 'const TimerSet::heap_element &'
|   `-QualType 0x5616242c2d51 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5616242c2d50 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|         `-CXXRecord 0x5616242c1c20 'heap_element'
|-TypedefDecl 0x5616242cbdc8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x5616242cbd90 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5616242c2d50 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|       `-CXXRecord 0x5616242c1c20 'heap_element'
|-TypedefDecl 0x5616242cbe88 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x5616242cbe50 'const TimerSet::heap_element *'
|   `-QualType 0x5616242c2d51 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5616242c2d50 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|         `-CXXRecord 0x5616242c1c20 'heap_element'
|-TypedefDecl 0x5616242cccf0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x5616242ccca0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x5616242ccc80 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x5616242ccbb8 'type'
|     `-LValueReferenceType 0x5616242ccb80 'const TimerSet::heap_element &'
|       `-QualType 0x5616242cc921 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x5616242cc920 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x561623ff3a80 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561623ff3a28 'T'
|           `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|             `-CXXRecord 0x5616242c1c20 'heap_element'
|-TypedefDecl 0x5616242ccd58 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5616242cbd00 'const TimerSet::heap_element &'
|   `-QualType 0x5616242c2d51 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5616242c2d50 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|         `-CXXRecord 0x5616242c1c20 'heap_element'
|-TypedefDecl 0x5616242ccdb0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x5616242cce18 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x5616242cbd90 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5616242c2d50 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|       `-CXXRecord 0x5616242c1c20 'heap_element'
|-TypedefDecl 0x5616242cce80 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x5616242cbe50 'const TimerSet::heap_element *'
|   `-QualType 0x5616242c2d51 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5616242c2d50 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x5616242c1cb0 'TimerSet::heap_element'
|         `-CXXRecord 0x5616242c1c20 'heap_element'
|-EnumDecl 0x5616242cced8 <line:134:5> col:5
| `-EnumConstantDecl 0x5616242ccfd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5616242ccfb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561624022728 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561624022700 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5616240226e0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5616242cd058 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5616242cd2e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5616242cd110 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5616242cd1b0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x5616242cd5a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5616242cd490 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x5616242cd868 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5616242cd750 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5616242cdbb0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5616242cda90 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x5616242cdec0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5616242cdda0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5616242ce1b0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5616242cdff8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5616242ce070 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5616242ce308 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x5616242ce3e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242ce440 <col:30> Inherited
|-CXXMethodDecl 0x5616242ce488 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x5616242ce538 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242ce590 <col:30> Inherited
|-CXXMethodDecl 0x5616242ce658 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5616242ce708 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242ce760 <col:30> Inherited
|-CXXMethodDecl 0x5616242ce7a8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5616242ce858 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242ce8b0 <col:30> Inherited
|-CXXMethodDecl 0x5616242ce8f8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5616242ce9a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242cea00 <col:30> Inherited
|-CXXMethodDecl 0x5616242cea48 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5616242ceaf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242ceb50 <col:30> Inherited
|-CXXMethodDecl 0x5616242ceb78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5616242cec28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5616242cecd8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5616242cee98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5616242ced88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5616242cee00 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5616242cefe8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5616242cef58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242cf198 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x5616242cf0a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5616242cf250 <col:20>
| `-OptimizeNoneAttr 0x5616242cf2a8 <col:30>
|-CXXMethodDecl 0x5616242cf3c8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x5616242cf2d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5616242cf480 <col:20>
| `-OptimizeNoneAttr 0x5616242cf4d8 <col:30>
|-CXXMethodDecl 0x5616242cf590 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5616242cf500 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242cf6d8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5616242cf648 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242cf808 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5616242cf938 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5616242cfa08 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5616242cfad8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5616242cfc18 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5616242cfb88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242cfd60 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5616242cfcd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242cfea8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x5616242cfe18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5616242cff60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5616242d0060 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5616242cffd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5616242d0118 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5616242d01d8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x5616242d02d8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x5616242d0488 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5616242d0398 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x5616242d0c78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5616242d0540 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x5616242d0bd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x5616242d0ad8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x5616242d0d58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5616242d0ea8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5616242d0e18 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5616242d0f60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5616242d11a8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5616242d1020 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5616242d1098 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5616242d1400 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x5616242d1278 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5616242d1658 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x5616242d14c8 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5616242d1540 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5616242d1718 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5616242d1978 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5616242d1880 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x5616242d1a48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5616242d1a48

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5616242d2f70 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x5616242d3148 prev 0x5616242d2f70 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5616242d31d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5616242d3200 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x5616242d4dd0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x5616242d4d80 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x5616242d36b0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x5616242d35b0 'type'
|     `-TemplateSpecializationType 0x5616242d3540 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5616242d3420 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x5616242d3400 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5616242d33e0 <col:24> 'unsigned long' 8
|       `-RecordType 0x5616242d3520 'char_array<8>'
|         `-ClassTemplateSpecialization 0x5616242d3440 'char_array'
|-TypedefDecl 0x5616242d4e88 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x5616242d4e50 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x5616242d4e30 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x5616242d4dd0 'type'
|     `-ElaboratedType 0x5616242d4d80 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x5616242d36b0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x5616242d35b0 'type'
|         `-TemplateSpecializationType 0x5616242d3540 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5616242d3420 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x5616242d3400 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5616242d33e0 <col:24> 'unsigned long' 8
|           `-RecordType 0x5616242d3520 'char_array<8>'
|             `-ClassTemplateSpecialization 0x5616242d3440 'char_array'
|-CXXMethodDecl 0x5616242d5008 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x5616242d4f18 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x5616242d50f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5616242d51d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5616242d51d8
|-CXXMethodDecl 0x5616242d54a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5616242d53b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x5616242d56e8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5616242d5560 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5616242d55d8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5616242d58b8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5616242d57a8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5616242d5820 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5616242d5a18 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5616242d5ae8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5616242d5d38 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5616242d5ba8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5616242d5c20 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5616242d5f98 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x5616242d5e08 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5616242d5e80 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5616242d6158 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5616242d6068 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5616242d6318 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5616242d6220 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5616242d63d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5616242d6480 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5616242d66b8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5616242d6530 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5616242d65a8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5616242d6958 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5616242d6860 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x5616242d6a20 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x5616242d6a70 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5616242d6ac0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5616242d1b90 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x5616242d1d98 prev 0x5616242d1b90 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5616242d2ee0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5616242d2e90 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x5616242d2e70 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x5616242d2d20 'type'
|     `-SubstTemplateTypeParmType 0x5616242d2b40 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561623fe93b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561623fe9358 'T'
|       `-RecordType 0x5616242d2690 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5616242d25a8 'sized_array_memory'
|-FieldDecl 0x5616242d6b10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5616242d6b60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5616242d6b98 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x5616242d1e30 'Timer *' sugar
|   |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561624021048 'T'
|   `-PointerType 0x561624285c30 'Timer *'
|     `-RecordType 0x561624284d80 'Timer'
|       `-CXXRecord 0x561624208a18 'Timer'
|-TypedefDecl 0x5616242d6c58 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x5616242d6c20 'Timer *&'
|   `-SubstTemplateTypeParmType 0x5616242d1e30 'Timer *' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-PointerType 0x561624285c30 'Timer *'
|       `-RecordType 0x561624284d80 'Timer'
|         `-CXXRecord 0x561624208a18 'Timer'
|-TypedefDecl 0x5616242d6d18 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x5616242d6ce0 'Timer *const &'
|   `-QualType 0x5616242d1e31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5616242d1e30 'Timer *' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-PointerType 0x561624285c30 'Timer *'
|         `-RecordType 0x561624284d80 'Timer'
|           `-CXXRecord 0x561624208a18 'Timer'
|-TypedefDecl 0x5616242d6dd8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x5616242d6da0 'Timer **'
|   `-SubstTemplateTypeParmType 0x5616242d1e30 'Timer *' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-PointerType 0x561624285c30 'Timer *'
|       `-RecordType 0x561624284d80 'Timer'
|         `-CXXRecord 0x561624208a18 'Timer'
|-TypedefDecl 0x5616242d6e98 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x5616242d6e60 'Timer *const *'
|   `-QualType 0x5616242d1e31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5616242d1e30 'Timer *' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-PointerType 0x561624285c30 'Timer *'
|         `-RecordType 0x561624284d80 'Timer'
|           `-CXXRecord 0x561624208a18 'Timer'
|-TypedefDecl 0x5616242d7a70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x5616242d7a20 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x5616242d7a00 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x5616242d7990 'type'
|     `-SubstTemplateTypeParmType 0x5616242d7750 'Timer *' sugar
|       |-TemplateTypeParmType 0x561623ff41b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561623ff4160 'T'
|       `-PointerType 0x561624285c30 'Timer *'
|         `-RecordType 0x561624284d80 'Timer'
|           `-CXXRecord 0x561624208a18 'Timer'
|-TypedefDecl 0x5616242d7ad8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x5616242d6ce0 'Timer *const &'
|   `-QualType 0x5616242d1e31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5616242d1e30 'Timer *' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-PointerType 0x561624285c30 'Timer *'
|         `-RecordType 0x561624284d80 'Timer'
|           `-CXXRecord 0x561624208a18 'Timer'
|-TypedefDecl 0x5616242d7b30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x5616242d7b98 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x5616242d6da0 'Timer **'
|   `-SubstTemplateTypeParmType 0x5616242d1e30 'Timer *' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-PointerType 0x561624285c30 'Timer *'
|       `-RecordType 0x561624284d80 'Timer'
|         `-CXXRecord 0x561624208a18 'Timer'
|-TypedefDecl 0x5616242d7c00 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x5616242d6e60 'Timer *const *'
|   `-QualType 0x5616242d1e31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5616242d1e30 'Timer *' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-PointerType 0x561624285c30 'Timer *'
|         `-RecordType 0x561624284d80 'Timer'
|           `-CXXRecord 0x561624208a18 'Timer'
|-EnumDecl 0x5616242d7c58 <line:134:5> col:5
| `-EnumConstantDecl 0x5616242d7d50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5616242d7d30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561624022728 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561624022700 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5616240226e0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5616242d7dd8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5616242d8068 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5616242d7e90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5616242d7f30 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x5616242d8328 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5616242d8210 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x5616242d85e8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5616242d84d0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5616242d8930 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5616242d8810 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x5616242d8c40 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5616242d8b20 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5616242d8f30 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5616242d8d78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5616242d8df0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5616242d9088 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5616242d9168 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242d91c0 <col:30> Inherited
|-CXXMethodDecl 0x5616242d9208 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5616242d92b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242d9310 <col:30> Inherited
|-CXXMethodDecl 0x5616242dd420 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5616242dd4d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242dd528 <col:30> Inherited
|-CXXMethodDecl 0x5616242dd570 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5616242dd620 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242dd678 <col:30> Inherited
|-CXXMethodDecl 0x5616242dd6c0 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5616242dd770 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242dd7c8 <col:30> Inherited
|-CXXMethodDecl 0x5616242dd810 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5616242dd8c0 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616242dd918 <col:30> Inherited
|-CXXMethodDecl 0x5616242dd940 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5616242dd9f0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5616242ddaa0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5616242ddc60 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5616242ddb50 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5616242ddbc8 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5616242dddb0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5616242ddd20 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242ddf58 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x5616242dde68 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5616242de010 <col:20>
| `-OptimizeNoneAttr 0x5616242de068 <col:30>
|-CXXMethodDecl 0x5616242de188 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5616242de090 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5616242de240 <col:20>
| `-OptimizeNoneAttr 0x5616242de298 <col:30>
|-CXXMethodDecl 0x5616242de350 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5616242de2c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242de498 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5616242de408 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242de5c8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x5616242de6f8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x5616242de7c8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x5616242de898 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x5616242de9d8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5616242de948 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242deb20 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5616242dea90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616242dec68 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5616242debd8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5616242ded20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5616242dee20 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5616242ded90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5616242deed8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5616242def98 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x5616242df098 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x5616242df218 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5616242df158 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x5616242df9d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5616242df2d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x5616242df938 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x5616242df838 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x5616242dfab8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5616242dfc08 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5616242dfb78 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5616242dfcc0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5616242dff08 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5616242dfd80 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5616242dfdf8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5616242e00c8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x5616242dffd8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x5616242e0318 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x5616242e0190 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5616242e0208 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x5616242e03d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5616242e0638 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5616242e0540 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x5616242e0708 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5616242e0708

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162429f2e0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56162429f3f8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x56162429f488 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x56162429f510 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x56162429f600 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56162429f700 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x56162429f7c0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x56162429f880 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x56162429f9a8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56162429f9a8
| `-ParmVarDecl 0x56162429fab8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x5616242e14b8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x5616242e14b8
  `-ParmVarDecl 0x5616242e15c8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616242c0da0 prev 0x56162420cbc8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5616242c0e98 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x5616242c0f28 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5616242c0fb0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x5616242c10a8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x5616242e1930 <col:43, col:67>
|   `-ReturnStmt 0x5616242e1920 <col:45, col:52>
|     `-CXXConstructExpr 0x5616242e18f0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x5616242e18c0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x5616242c2890
|         `-CXXThisExpr 0x5616242e18b0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5616242c1168 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x5616242c1370 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x5616242c1218 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x5616242c1290 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x5616242c1468 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x5616242c1530 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5616242e19b0 <col:39, col:67>
|   `-ReturnStmt 0x5616242e19a0 <col:41, col:48>
|     `-ImplicitCastExpr 0x5616242e1988 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5616242e1958 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x5616242c2978
|         `-CXXThisExpr 0x5616242e1948 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5616242c15f8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5616242e1a30 <col:35, col:59>
|   `-ReturnStmt 0x5616242e1a20 <col:37, col:44>
|     `-ImplicitCastExpr 0x5616242e1a08 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5616242e19d8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x5616242c29e0
|         `-CXXThisExpr 0x5616242e19c8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5616242c1740 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x5616242c16b0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x5616242c1888 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5616242c17f8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5616242c1a88 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x5616242c1940 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x5616242c19b8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x5616242c1b58 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5616242c1bf8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x5616242c1c20 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5616242c1d38 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x5616242c1dd8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x5616242c1e38 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x5616242c1f68 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x5616242c1e98 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x5616242c1dd8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x5616242e1b08 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x5616242e1ab0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x5616242e1a80 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x56162420a058
|   |       `-ImplicitCastExpr 0x5616242e1ad0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x5616242e1a68 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x5616242e1a48 <col:17> 'Timer *' lvalue ParmVar 0x5616242c1e98 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x5616242c1e38 't' 'Timer *'
|   | `-ImplicitCastExpr 0x5616242e1ba0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616242e1b60 <col:41> 'Timer *' lvalue ParmVar 0x5616242c1e98 't_' 'Timer *'
|   `-CompoundStmt 0x5616242e1bf0 <col:45, line:44:2>
|-CXXRecordDecl 0x5616242c2030 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5616242c2148 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x5616242c2398 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x5616242c2218 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x5616242c2290 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x5616242e1d20 <col:71, line:49:2>
|     `-ReturnStmt 0x5616242e1d10 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x5616242e1cd8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x5616242e1cc0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5616242e1ca0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x561624242f98 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x5616242e1c20 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x5616242c1dd8
|         | `-DeclRefExpr 0x5616242e1c00 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x5616242c2218 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x5616242e1c70 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x5616242c1dd8
|           `-DeclRefExpr 0x5616242e1c50 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x5616242c2290 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x5616242c2460 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5616242c2578 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x5616242c2798 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x5616242c2618 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x5616242c2690 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x5616242e1f28 <col:63, line:54:2>
|     `-BinaryOperator 0x5616242e1f08 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x5616242e1db8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x56162420c068
|       | `-ImplicitCastExpr 0x5616242e1da0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x5616242e1d70 <col:6, col:9> 'Timer *' lvalue ->t 0x5616242c1e38
|       |     `-ImplicitCastExpr 0x5616242e1d58 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x5616242e1d38 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x5616242c2690 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x5616242e1ef0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x5616242e1ed0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x5616242e1e78 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x5616242e1e58 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x5616242e1e28 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x5616242e1de8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x5616242c2690 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x5616242e1e40 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5616242e1e08 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x5616242c2618 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x5616242e1eb8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x5616242e1e98 <col:39> 'int' 1
|-FieldDecl 0x5616242c2890 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x5616242c2900 <col:44, col:53> aligned
|   `-ConstantExpr 0x5616242c28e0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x5616242c2860 <col:52> 'int' 8
|-FieldDecl 0x5616242c2978 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x5616242c29e0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x5616242c2a48 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x5616242d1b30 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x5616242e07f0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x5616242e0850 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x5616242e08b0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x5616242e0910 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5616242e0a00 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x5616242e0970 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x5616242e0ac8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x5616242e2380 <col:29, line:81:5>
|   `-IfStmt 0x5616242e2358 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x5616242e2010 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x5616242e1fb0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x5616242e1f80 <col:6, col:18> '<bound member function type>' .size 0x5616242ceb78
|     |     `-ImplicitCastExpr 0x5616242e1ff8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x5616242e1f50 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5616242d1b30
|     |         `-CXXThisExpr 0x5616242e1f40 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x5616242e2200 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x5616242e21e8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x5616242e21c8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x561623f2c9f8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x5616242e2038 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5616242c2890
|     | | `-CXXThisExpr 0x5616242e2028 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x5616242e21b0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x5616242e2180 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x5616242c1dd8
|     |     `-CXXMemberCallExpr 0x5616242e2158 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x5616242e2128 <col:22, col:34> '<bound member function type>' .unchecked_at 0x5616242cfc18
|     |       | `-MemberExpr 0x5616242e2078 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5616242d1b30
|     |       |   `-CXXThisExpr 0x5616242e2068 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x5616242e2108 <col:47> 'int' 0
|     `-ExprWithCleanups 0x5616242e2340 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x5616242e2308 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x5616242e22f0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5616242e22d0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x561623f2cea8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x5616242e2248 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5616242c2890
|         | `-CXXThisExpr 0x5616242e2238 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x5616242e22b8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5616242e2288 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5616242e0c08 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x5616242e0b78 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x5616242e0cd0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x5616242e0d90 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x5616242e0e50 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x5616242e0f40 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x5616242e0fa8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x5616242e0fa8
| `-ParmVarDecl 0x5616242e10b8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x5616242e1158 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x5616242e1158
| `-ParmVarDecl 0x5616242e1268 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x5616242e1308 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x5616242e1308
| `-ParmVarDecl 0x5616242e1418 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x5616242e1638 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x5616242e1638
| `-ParmVarDecl 0x5616242e1748 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x5616242e17d0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x5616242e17d0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561624318218 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x561624318428 prev 0x561624318218 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561624319500 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5616243194b0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x561624319490 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x561624319340 'type'
|     `-SubstTemplateTypeParmType 0x5616242d2b40 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561623fe93b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561623fe9358 'T'
|       `-RecordType 0x5616242d2690 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5616242d25a8 'sized_array_memory'
|-FieldDecl 0x561624319600 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561624319650 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561624319688 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x5616243184c0 'pollfd' sugar
|   |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561624021048 'T'
|   `-RecordType 0x56162430c290 'pollfd'
|     `-CXXRecord 0x56162430c200 'pollfd'
|-TypedefDecl 0x561624319748 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x561624319710 'pollfd &'
|   `-SubstTemplateTypeParmType 0x5616243184c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x56162430c290 'pollfd'
|       `-CXXRecord 0x56162430c200 'pollfd'
|-TypedefDecl 0x561624319808 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x5616243197d0 'const pollfd &'
|   `-QualType 0x5616243184c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5616243184c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x56162430c290 'pollfd'
|         `-CXXRecord 0x56162430c200 'pollfd'
|-TypedefDecl 0x561624319898 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x561624319860 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5616243184c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x56162430c290 'pollfd'
|       `-CXXRecord 0x56162430c200 'pollfd'
|-TypedefDecl 0x561624319958 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x561624319920 'const pollfd *'
|   `-QualType 0x5616243184c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5616243184c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x56162430c290 'pollfd'
|         `-CXXRecord 0x56162430c200 'pollfd'
|-TypedefDecl 0x56162431a530 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x56162431a4e0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x56162431a4c0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x56162431a450 'type'
|     `-SubstTemplateTypeParmType 0x56162431a210 'pollfd' sugar
|       |-TemplateTypeParmType 0x561623ff41b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561623ff4160 'T'
|       `-RecordType 0x56162430c290 'pollfd'
|         `-CXXRecord 0x56162430c200 'pollfd'
|-TypedefDecl 0x56162431a598 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x5616243197d0 'const pollfd &'
|   `-QualType 0x5616243184c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5616243184c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x56162430c290 'pollfd'
|         `-CXXRecord 0x56162430c200 'pollfd'
|-TypedefDecl 0x56162431a5f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x56162431a658 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x561624319860 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5616243184c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x56162430c290 'pollfd'
|       `-CXXRecord 0x56162430c200 'pollfd'
|-TypedefDecl 0x56162431a6c0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x561624319920 'const pollfd *'
|   `-QualType 0x5616243184c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5616243184c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x56162430c290 'pollfd'
|         `-CXXRecord 0x56162430c200 'pollfd'
|-EnumDecl 0x56162431a718 <line:134:5> col:5
| `-EnumConstantDecl 0x56162431a810 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56162431a7f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561624022728 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561624022700 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5616240226e0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56162431a898 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56162431ab28 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56162431a950 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56162431a9f0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x56162431ade8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56162431acd0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x56162431b0a8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56162431af90 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56162431b3f0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56162431b2d0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x56162431b700 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56162431b5e0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56162431b9f0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56162431b838 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56162431b8b0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56162431bb48 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56162431bc28 <col:20> Inherited
| `-OptimizeNoneAttr 0x56162431bc80 <col:30> Inherited
|-CXXMethodDecl 0x56162431bcc8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56162431bd78 <col:20> Inherited
| `-OptimizeNoneAttr 0x56162431bdd0 <col:30> Inherited
|-CXXMethodDecl 0x56162431be98 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56162431bf48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56162431bfa0 <col:30> Inherited
|-CXXMethodDecl 0x56162431bfe8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56162431c098 <col:20> Inherited
| `-OptimizeNoneAttr 0x56162431c0f0 <col:30> Inherited
|-CXXMethodDecl 0x56162431c138 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56162431c1e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56162431c240 <col:30> Inherited
|-CXXMethodDecl 0x56162431c288 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56162431c338 <col:20> Inherited
| `-OptimizeNoneAttr 0x56162431c390 <col:30> Inherited
|-CXXMethodDecl 0x56162431c3b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56162431c468 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56162431c518 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56162431c6d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56162431c5c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56162431c640 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56162431c828 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56162431c798 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56162431c9d8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x56162431c8e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56162431ca90 <col:20>
| `-OptimizeNoneAttr 0x56162431cae8 <col:30>
|-CXXMethodDecl 0x56162431cc08 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x56162431cb10 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56162431ccc0 <col:20>
| `-OptimizeNoneAttr 0x56162431cd18 <col:30>
|-CXXMethodDecl 0x56162431cdd0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56162431cd40 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56162431cf18 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56162431ce88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56162431d048 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x56162431d178 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x56162431d248 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x56162431d318 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x56162431d458 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56162431d3c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56162431d5a0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56162431d510 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56162431d6e8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x56162431d658 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56162431d7a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56162431d8a0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56162431d810 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56162431d958 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56162431da18 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x56162431db18 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x56162431dcc8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56162431dbd8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x56162431e488 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56162431dd80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x56162431e3e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x56162431e2e8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x56162431e568 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56162431e6b8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56162431e628 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56162431e770 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56162431e9b8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56162431e830 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56162431e8a8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56162431eb78 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x56162431ea88 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56162431edc8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x56162431ec40 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56162431ecb8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56162431ee88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56162431f108 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56162431eff0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x56162431f1d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56162431f1d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5616243207c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x561624320998 prev 0x5616243207c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561624320a28 <col:46, col:52> col:46 public
|-TypedefDecl 0x561624320a50 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x561624322620 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5616243225d0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x561624320f00 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x561624320e00 'type'
|     `-TemplateSpecializationType 0x561624320d90 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561624320c70 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x561624320c50 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561624320c30 <col:24> 'unsigned long' 24
|       `-RecordType 0x561624320d70 'char_array<24>'
|         `-ClassTemplateSpecialization 0x561624320c90 'char_array'
|-TypedefDecl 0x5616243226d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5616243226a0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x561624322680 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x561624322620 'type'
|     `-ElaboratedType 0x5616243225d0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x561624320f00 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x561624320e00 'type'
|         `-TemplateSpecializationType 0x561624320d90 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561624320c70 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x561624320c50 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561624320c30 <col:24> 'unsigned long' 24
|           `-RecordType 0x561624320d70 'char_array<24>'
|             `-ClassTemplateSpecialization 0x561624320c90 'char_array'
|-CXXMethodDecl 0x561624322858 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x561624322768 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x561624322948 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561624322a28 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561624322a28
|-CXXMethodDecl 0x561624322cf8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x561624322c00 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x561624322f38 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561624322db0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561624322e28 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561624323108 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561624322ff8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561624323070 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561624323268 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x561624323338 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x561624323588 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5616243233f8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x561624323470 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5616243237e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x561624323658 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5616243236d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5616243239a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5616243238b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561624323b68 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x561624323a70 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561624323c20 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561624323cd0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561624323f08 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561624323d80 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561624323df8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5616243241a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5616243240b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x561624324270 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5616243242c0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561624324310 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56162431f320 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x56162431f528 prev 0x56162431f320 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561624320730 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x5616243206e0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x5616243206c0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x561624320570 'type'
|     `-SubstTemplateTypeParmType 0x561624320390 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x561623fe93b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561623fe9358 'T'
|       `-RecordType 0x56162431fee0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x56162431fe00 'sized_array_memory'
|-FieldDecl 0x561624324360 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5616243243b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5616243243e8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x56162431f5c0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561624021048 'T'
|   `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-TypedefDecl 0x5616243244a8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561624324470 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x56162431f5c0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-TypedefDecl 0x561624324568 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561624324530 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56162431f5c1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56162431f5c0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-TypedefDecl 0x5616243245f8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5616243245c0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56162431f5c0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-TypedefDecl 0x5616243246b8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x561624324680 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56162431f5c1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56162431f5c0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-TypedefDecl 0x561624325310 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5616243252c0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5616243252a0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5616243251d8 'type'
|     `-LValueReferenceType 0x5616243251a0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x561624324f41 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x561624324f40 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x561623ff3a80 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561623ff3a28 'T'
|           `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-TypedefDecl 0x561624325378 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561624324530 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56162431f5c1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56162431f5c0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-TypedefDecl 0x5616243253d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x561624325438 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5616243245c0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56162431f5c0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561624021048 'T'
|     `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-TypedefDecl 0x5616243254a0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x561624324680 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56162431f5c1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56162431f5c0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5616240210a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561624021048 'T'
|       `-RecordType 0x561624317d80 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561624317cf0 'SelectorInfo'
|-EnumDecl 0x5616243254f8 <line:134:5> col:5
| `-EnumConstantDecl 0x5616243255f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5616243255d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561624022728 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561624022700 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5616240226e0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561624325678 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561624325908 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561624325730 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5616243257d0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x561624325bc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561624325ab0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x561624325e88 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x561624325d70 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5616243261d0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5616243260b0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5616243264e0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5616243263c0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5616243267d0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561624326618 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561624326690 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561624326928 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x561624326a08 <col:20> Inherited
| `-OptimizeNoneAttr 0x561624326a60 <col:30> Inherited
|-CXXMethodDecl 0x561624326aa8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x561624326b58 <col:20> Inherited
| `-OptimizeNoneAttr 0x561624326bb0 <col:30> Inherited
|-CXXMethodDecl 0x561624326c78 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561624326d28 <col:20> Inherited
| `-OptimizeNoneAttr 0x561624326d80 <col:30> Inherited
|-CXXMethodDecl 0x561624326dc8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561624326e78 <col:20> Inherited
| `-OptimizeNoneAttr 0x561624326ed0 <col:30> Inherited
|-CXXMethodDecl 0x561624326f18 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561624326fc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561624327020 <col:30> Inherited
|-CXXMethodDecl 0x5616243270c0 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561624327170 <col:20> Inherited
| `-OptimizeNoneAttr 0x5616243271c8 <col:30> Inherited
|-CXXMethodDecl 0x5616243271f0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5616243272a0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561624327350 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561624327510 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561624327400 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561624327478 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561624327660 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5616243275d0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561624327808 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x561624327718 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5616243278c0 <col:20>
| `-OptimizeNoneAttr 0x561624327918 <col:30>
|-CXXMethodDecl 0x561624327a38 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x561624327940 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561624327af0 <col:20>
| `-OptimizeNoneAttr 0x561624327b48 <col:30>
|-CXXMethodDecl 0x561624327c00 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x561624327b70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561624327d48 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561624327cb8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561624327e78 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x561624327fa8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x561624328078 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x561624328148 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x561624328288 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5616243281f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5616243283d0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561624328340 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561624328518 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x561624328488 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5616243285d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5616243286d0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561624328640 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561624328788 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561624328848 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x561624328948 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x561624328af8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x561624328a08 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5616243292b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561624328bb0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x561624329218 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x561624329118 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x561624329398 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5616243294e8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x561624329458 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5616243295a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5616243297e8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561624329660 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5616243296d8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5616243299a8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5616243298b8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x561624329bf8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x561624329a70 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x561624329ae8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x561624329cb8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561624329f18 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561624329e20 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x561624329fe8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561624329fe8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162430ce90 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56162430cfa8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x56162430d038 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x561624317100 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x5616243171f0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x5616243171f0
|-CXXMethodDecl 0x5616243172f0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x561624317590 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5616243173a8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x561624317420 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x5616243174a0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x561624317800 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x561624317660 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x5616243176d8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x561624317758 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x561624317958 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x5616243178c8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x561624317a20 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x56162432b698 <col:34, line:50:5>
|   |-BinaryOperator 0x56162432b068 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x56162432b028 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x5616243181a8
|   | | `-CXXThisExpr 0x56162432b018 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x56162432b058 <col:23> 'bool' true
|   `-CallExpr 0x56162432b670 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x56162432b658 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56162432b5d8 <col:2> 'void (long)' lvalue Function 0x56162432b4d8 'ignore_result' 'void (long)' (FunctionTemplate 0x561623fe4358 'ignore_result')
|     `-CallExpr 0x56162432b280 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x56162432b268 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56162432b1e8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x5616242e5430 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x56162432b2b8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x56162432b190 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x56162432b178 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x56162432b128 <col:22> 'int [2]' lvalue ->_wake_pipe 0x561624318148
|       |   |   `-CXXThisExpr 0x56162432b118 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x56162432b158 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x56162432b2e8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x56162432b2d0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x56162432b1b0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x56162432b300 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56162432b1c8 <col:41> 'int' 1
|-CXXMethodDecl 0x561624317b60 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561624317ad0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561624317c28 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x561624317cc8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x561624317cf0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561624317e08 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x561624317ea8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x561624317f08 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x561624317f70 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x561624318020 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x561624317ea8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x56162432b6f8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56162432b6b8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x561624317f08 'write' 'Element *'
|   | `-ImplicitCastExpr 0x56162432b778 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56162432b738 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x561624317f70 'pollfd' 'int'
|   | `-UnaryOperator 0x56162432b7d8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x56162432b7b8 <col:35> 'int' 1
|   `-CompoundStmt 0x56162432b850 <line:64:2, line:65:2>
|-FieldDecl 0x561624318148 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x5616243181a8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x56162431f2c0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x56162432a0d0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x56162432a308 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x56162432a138 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x56162432a1b0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x56162432a228 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x56162432a4f0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x56162432a3d8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x56162432a458 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x56162432a738 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x56162432a5b8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x56162432a638 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x56162432a948 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x56162432a7f8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x56162432a870 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x56162432aa98 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x56162432aa08 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x56162432ab60 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x56162432ac20 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x56162432ace8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x56162432ace8
| `-ParmVarDecl 0x56162432adf8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x56162432ae98 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x56162432ae98
  `-ParmVarDecl 0x56162432afa8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162429e248 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56162429e368 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x56162429e3f8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56162429e480 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x56162429e570 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56162429e670 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x56162429e730 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x56162429e7f0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x56162429e8d8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x56162429e9f8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x56162429e9f8
| `-ParmVarDecl 0x56162429eb08 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5616243304a8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5616243304a8
  `-ParmVarDecl 0x5616243305b8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561624043b80 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561624043c98 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x561624043d28 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x561624043df8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x561624043ee0 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5616240440f8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561624043fa0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5616240442a8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5616240441b0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5616240443f0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561624044360 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561624044538 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5616240444a8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624044680 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5616240445f0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624044748 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x561624044890 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x561624044800 <col:28> col:31 'int'
|-CXXMethodDecl 0x561624044958 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x561624044aa0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x561624044a10 <col:28> col:31 'int'
|-CXXMethodDecl 0x561624044c18 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561624044b58 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624044d60 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561624044cd0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624044e28 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x561624044fe8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561624044ed8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561624044f50 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624045238 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5616240450a8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561624045120 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5616240452e8 <col:86> "" ""
|-CXXMethodDecl 0x561624045558 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5616240453c8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x561624045440 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624045708 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561624045618 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5616240458b8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5616240457c0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561624045b88 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561624045970 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5616240459e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561624045a60 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624045e68 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561624045c50 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561624045cc8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561624045d40 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561624045f20 <col:115> "" ""
|-AccessSpecDecl 0x561624045f90 <line:84:3, col:10> col:3 private
|-FieldDecl 0x561624045fc8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5616240474e0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5616240474e0
| `-ParmVarDecl 0x5616240475e8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x561624047688 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561624047688
| `-ParmVarDecl 0x561624047798 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56162407cdc8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56162426ebc0 <col:7>
|-CXXConstructorDecl 0x56162407cea0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56162407cea0
| `-ParmVarDecl 0x56162407cfb8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56162407d028 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56162407d028
| `-ParmVarDecl 0x56162407d138 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5616242715c0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561624206788 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5616242068a8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x561624206948 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x5616242069a8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x56162432faa8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56162432faa8
| `-ParmVarDecl 0x56162432fbb8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x56162432fc58 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56162432fc58
| `-ParmVarDecl 0x56162432fd68 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x56162432fdd8 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561624330658 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561624330658
| `-ParmVarDecl 0x561624330768 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5616243307d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5616243307d8
| `-ParmVarDecl 0x5616243308e8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x561624336f58 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x561624337030 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616242a0140 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5616242a0258 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x5616242a02e8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x5616242a0370 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x5616242a0430 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x561623d22580 'int'
|-CXXMethodDecl 0x5616242a04f8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x5616242a0598 <col:45> always_inline
|-CXXMethodDecl 0x5616242a06c8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x5616242a0600 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x5616242a0770 <col:49> always_inline
|-CXXConstructorDecl 0x5616242a0868 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5616242a0868
| `-ParmVarDecl 0x5616242a0978 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x5616242a0a18 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5616242a0a18
| `-ParmVarDecl 0x5616242a0b28 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x56162432fec0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x56162432fec0
|-CXXMethodDecl 0x561624330988 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x561624330988
| `-ParmVarDecl 0x561624330a98 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x561624330b08 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x561624330b08
  `-ParmVarDecl 0x561624330c18 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162432bcc0 prev 0x56162430ce00 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56162432bdb8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x56162432be48 <col:22, col:28> col:22 public
|-EnumDecl 0x56162432be70 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x56162432bf88 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x56162432bf68 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56162432bf50 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56162432bf30 <col:32> 'int' 1
| `-EnumConstantDecl 0x56162432c030 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x56162432c010 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56162432bff8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56162432bfd8 <col:53> 'int' 1000
|-CXXMethodDecl 0x56162432c0d0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x56162432c190 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56162432c278 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x561624330cd8 <col:34, col:52>
|   `-ReturnStmt 0x561624330cc8 <col:36, col:43>
|     `-MemberExpr 0x561624330c98 <col:43> 'TimerSet' lvalue ->_timers 0x56162432df48
|       `-CXXThisExpr 0x561624330c88 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56162432c368 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x561624330d40 <col:46, col:64>
|   `-ReturnStmt 0x561624330d30 <col:48, col:55>
|     `-MemberExpr 0x561624330d00 <col:55> 'const TimerSet' lvalue ->_timers 0x56162432df48
|       `-CXXThisExpr 0x561624330cf0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56162432c458 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x561624330da8 <col:36, col:55>
|   `-ReturnStmt 0x561624330d98 <col:38, col:45>
|     `-MemberExpr 0x561624330d68 <col:45> 'SelectSet' lvalue ->_selects 0x56162432dfa8
|       `-CXXThisExpr 0x561624330d58 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56162432c548 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x561624330e10 <col:48, col:67>
|   `-ReturnStmt 0x561624330e00 <col:50, col:57>
|     `-MemberExpr 0x561624330dd0 <col:57> 'const SelectSet' lvalue ->_selects 0x56162432dfa8
|       `-CXXThisExpr 0x561624330dc0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56162432c608 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x56162432c6f8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x56162432c868 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x56162432c7a8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x56162432c930 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x56162432cd78 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x56162432c9e0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x56162432cc60 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x56162432ce48 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x56162432cf08 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x56162432cfc8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x56162432d108 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x56162432d078 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x56162432d1d0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x56162432d290 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x56162432d350 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x56162432d410 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x56162432d550 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56162432d4c0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56162432d618 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x56162432d6d8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x56162432d778 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x56162432d840 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432d890 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432d8e0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432d930 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432d980 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432d9d0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432da20 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432da70 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432dac0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56162432db10 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x56162432db60 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x56162432dc58 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x56162432dbc8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x56162432dda8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x56162432dd18 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x56162432de50 <line:104:3, col:10> col:3 private
|-FieldDecl 0x56162432de88 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x56162432dee8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x56162432df48 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x56162432dfa8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x56162432e028 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x56162432e098 <col:40, col:50> aligned
|   `-ConstantExpr 0x56162432e078 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x56162432dff8 <col:48> 'int' 64
|-FieldDecl 0x56162432e108 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x56162432e168 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x56162432e260 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x56162432e370 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x56162432e3d0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x56162432e450 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x56162432e4c0 <col:36, col:46> aligned
|   `-ConstantExpr 0x56162432e4a0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x56162432e420 <col:44> 'int' 64
|-FieldDecl 0x56162432e538 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x56162432e598 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x56162432e5e8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x56162432e628 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x56162432e690 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x56162432e6e0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x56162432e888 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x56162432e718 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x56162432e798 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x56162432e988 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x56162432e988
|-CXXMethodDecl 0x56162432ea90 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x56162432eb58 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x561624330f08 <col:34, line:217:5>
|   `-ReturnStmt 0x561624330ef8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x561624330ee0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561624330eb0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x5616242a2ca0
|         `-ImplicitCastExpr 0x561624330e98 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x561624330e68 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x5616242a2c38
|             `-MemberExpr 0x561624330e38 <col:16> 'const TaskLink' lvalue ->_task_link 0x56162432de88
|               `-CXXThisExpr 0x561624330e28 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56162432ec18 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x56162432ecd8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x561624331630 <col:39, line:226:5>
|   |-DeclStmt 0x561624331158 <line:223:9, col:68>
|   | `-VarDecl 0x561624330f30 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x561624331110 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5616243310e0 <col:24, col:38> '<bound member function type>' .compare_swap 0x56162404a9a0
|   |     | `-MemberExpr 0x561624330fa8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x56162432e108
|   |     |   `-CXXThisExpr 0x561624330f98 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x561624331098 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x561624331080 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x561624331058 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x561624331038 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x561624331140 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5616243310c0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5616243311a0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x561624331170 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x561624330f30 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x561624331610 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5616243315e0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5616243312b8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x561624331288 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x561624331270 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5616243311c8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x561624330f30 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x561624331248 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x561624331230 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x561624331208 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5616243311e8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x561624331318 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5616243312f8 <col:60> 'int' 0
|       `-CallExpr 0x561624331540 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x561624331528 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561624331508 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x561624331580 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x561624331408 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x561624331598 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x561624331438 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5616243315b0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x561624331478 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5616243315c8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5616243314f0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5616243314d8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x561624331498 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x56162432ee20 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x56162432ed90 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x56162432eee8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x56162432efa8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x56162432f0d0 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x56162432f190 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x56162432f250 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x56162432f340 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x56162432f3a0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56162432f430 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x56162432f7f8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x56162432f7f8
| `-ParmVarDecl 0x56162432f908 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x56162432ffc8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x56162432ffc8
  `-ParmVarDecl 0x5616243300d8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616242a2fb0 prev 0x561624284c40 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x5616242a30e8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x5616242a3178 <col:33, col:39> col:33 public
|-EnumDecl 0x5616242a31a0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x5616242a32e0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x5616242a32c0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x5616242a32a0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5616242a3260 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x5616242a3280 <col:26> 'int' 16
| `-EnumConstantDecl 0x5616242a33b0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x5616242a3390 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x5616242a3370 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x5616242a3330 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x5616242a3350 <col:47> 'int' 31
|-EnumDecl 0x5616242a3400 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x5616242a3540 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x5616242a3660 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242a3520 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x5616242a3500 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x5616242a34c0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x5616242a34e0 <col:29> 'int' 15
| `-EnumConstantDecl 0x5616242a3610 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x5616242a3678 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5616242a35f0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x5616242a35d0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x5616242a3590 <col:51> 'int' 1
|         `-IntegerLiteral 0x5616242a35b0 <col:54> 'int' 10
|-CXXConstructorDecl 0x5616242a3848 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x5616242a36a0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x5616242a3720 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x5616242a39d8 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x5616242a3910 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x5616242a3ad0 <line:91:5, col:11> col:5 used ~Task 'void () noexcept'
|-CXXMethodDecl 0x5616242a3c58 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x5616242078e8 <col:42, line:100:5>
|   `-ReturnStmt 0x5616242078d8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x5616242078c0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x561624207890 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x561624206610
|         `-CXXThisExpr 0x561624207880 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5616242a3d20 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x561624207968 <col:36, line:105:5>
|   `-ReturnStmt 0x561624207958 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x561624207940 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561624207910 <col:16> 'void *const' lvalue ->_thunk 0x561624206678
|         `-CXXThisExpr 0x561624207900 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5616242a3de0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x5616242079e8 <col:37, line:110:5>
|   `-ReturnStmt 0x5616242079d8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x5616242079c0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561624207990 <col:16> 'Element *const' lvalue ->_owner 0x561624206738
|         `-CXXThisExpr 0x561624207980 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5616242a3ea0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x5616242a3f68 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x5616242a4028 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x5616242a40e8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x561624207ad0 <col:35, line:137:5>
|   `-ReturnStmt 0x561624207ac0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x561624207a88 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x561624207a58 <col:16, col:24> '<bound member function type>' ->router 0x561624297450
|         `-ImplicitCastExpr 0x561624207aa8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x561624207a40 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x561624207a10 <col:16> 'Element *const' lvalue ->_owner 0x561624206738
|               `-CXXThisExpr 0x561624207a00 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5616242a41a8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x5616242a43a8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5616242a4258 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x5616242a42d0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x5616242a45b8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x5616242a4468 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x5616242a44e0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x5616242a4688 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x561624207be0 <col:35, line:181:5>
|   `-ReturnStmt 0x561624207bd0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x561624207bb8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x561624207ba0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x561624207b70 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x561624206248
|           `-MemberExpr 0x561624207b28 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561624206368
|             `-MemberExpr 0x561624207af8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x561624206598
|               `-CXXThisExpr 0x561624207ae8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561624205290 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x561624207cf8 <col:30, line:192:5>
|   `-BinaryOperator 0x561624207cd8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561624207c80 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561624206248
|     | `-MemberExpr 0x561624207c38 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561624206368
|     |   `-MemberExpr 0x561624207c08 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561624206598
|     |     `-CXXThisExpr 0x561624207bf8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561624207cc0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561624207cb0 <col:32> 'bool' false
|-CXXMethodDecl 0x561624205350 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x561624208048 <col:30, line:206:5>
|   |-BinaryOperator 0x561624207df0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561624207d98 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561624206248
|   | | `-MemberExpr 0x561624207d50 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561624206368
|   | |   `-MemberExpr 0x561624207d20 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561624206598
|   | |     `-CXXThisExpr 0x561624207d10 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561624207dd8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561624207dc8 <col:32> 'bool' true
|   |-CallExpr 0x561624207e90 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x561624207e78 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561624207e58 <col:9> 'void ()' lvalue Function 0x56162429de00 'click_fence' 'void ()'
|   `-IfStmt 0x561624208030 <line:204:9, line:205:32>
|     |-BinaryOperator 0x561624207f70 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x561624207f40 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x561624207ef0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x5616242069a8
|     | |   `-MemberExpr 0x561624207ec0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x561624206a20
|     | |     `-CXXThisExpr 0x561624207eb0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x561624207f58 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x561624207f20 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x561624207ff0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x561624207fa0 <col:13> '<bound member function type>' ->complete_schedule 0x561624207420
|       | `-CXXThisExpr 0x561624207f90 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x561624208018 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x561624207fd0 <col:31> 'int' 0
|-CXXMethodDecl 0x561624205410 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x561624208170 <col:35, line:240:5>
|   `-BinaryOperator 0x561624208150 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5616242080f8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561624206248
|     | `-MemberExpr 0x5616242080b0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561624206368
|     |   `-MemberExpr 0x561624208080 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561624206598
|     |     `-CXXThisExpr 0x561624208070 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561624208138 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561624208128 <col:32> 'bool' true
|-CXXMethodDecl 0x5616242054d0 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x561624208388 <col:37, line:253:5>
|   |-BinaryOperator 0x561624208268 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561624208210 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561624206248
|   | | `-MemberExpr 0x5616242081c8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561624206368
|   | |   `-MemberExpr 0x561624208198 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561624206598
|   | |     `-CXXThisExpr 0x561624208188 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561624208250 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561624208240 <col:32> 'bool' false
|   `-BinaryOperator 0x561624208368 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561624208310 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x5616242062a8
|     | `-MemberExpr 0x5616242082c8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561624206368
|     |   `-MemberExpr 0x561624208298 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561624206598
|     |     `-CXXThisExpr 0x561624208288 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561624208350 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561624208340 <col:41> 'bool' true
|-CXXMethodDecl 0x561624205590 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x561624208508 <col:37, line:264:5>
|   |-BinaryOperator 0x561624208488 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561624208430 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x5616242062a8
|   | | `-MemberExpr 0x5616242083e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561624206368
|   | |   `-MemberExpr 0x5616242083b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561624206598
|   | |     `-CXXThisExpr 0x5616242083a8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561624208470 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561624208460 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x5616242084e8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x5616242084b8 <col:9> '<bound member function type>' ->reschedule 0x561624205350
|       `-CXXThisExpr 0x5616242084a8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x5616242056d8 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x561624205648 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x5616242057a8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x5616242058f0 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x561624205860 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x561624205a40 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x5616242059b0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x561624205b08 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x561624205bc8 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x561624205c68 <col:53> "" ""
|-CXXMethodDecl 0x561624205d00 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x561624205da0 <col:47> "" ""
|-AccessSpecDecl 0x561624205e10 <line:303:3, col:10> col:3 private
|-FieldDecl 0x561624205e50 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x561624205eb8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x561624205f08 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561624206028 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x5616242060b8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x5616242061e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x561624206248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x5616242062a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x561624336688 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x561624336760 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x561624336a18 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561624336a18
| | | `-ParmVarDecl 0x561624336b28 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x561624336bc8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561624336bc8
| |   `-ParmVarDecl 0x561624336cd8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x561624206368 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x5616242063c8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x561624206368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5616242061e8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x561624206420 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x561624206368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561624206248 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x561624206478 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x561624206368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5616242062a8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x5616242064d0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x561624336598 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561624336ef8 <col:11>
| |-CXXConstructorDecl 0x561624336868 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x561624336868
| | `-ParmVarDecl 0x561624336978 <col:11> col:11 'const Task::Status &'
| |-CXXConstructorDecl 0x561624336d78 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x561624336d78
| | `-ParmVarDecl 0x561624336e88 <col:11> col:11 'Task::Status &&'
| `-CXXDestructorDecl 0x56162435d8b0 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial
|-FieldDecl 0x561624206598 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x561624206610 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x561624206678 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5616242066d8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x561624206738 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x561624206788 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5616242068a8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x561624206948 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x5616242069a8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x56162432faa8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56162432faa8
| | `-ParmVarDecl 0x56162432fbb8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x56162432fc58 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56162432fc58
| | `-ParmVarDecl 0x56162432fd68 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x56162432fdd8 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561624330658 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561624330658
| | `-ParmVarDecl 0x561624330768 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5616243307d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5616243307d8
| | `-ParmVarDecl 0x5616243308e8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x561624336f58 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561624337030 <col:11>
|-FieldDecl 0x561624206a20 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x561624206b68 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x561624206aa8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x561624206d18 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x561624206c28 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x561624206de0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x561624206ea0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x561624206f60 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x561624208618 <col:41, line:355:5>
|   `-ReturnStmt 0x561624208608 <line:354:9, col:38>
|     `-BinaryOperator 0x5616242085e8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x5616242085b8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x561624208568 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x5616242069a8
|       |   `-MemberExpr 0x561624208538 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x561624206a20
|       |     `-CXXThisExpr 0x561624208528 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x5616242085d0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x561624208598 <col:38> 'int' 0
|-CXXMethodDecl 0x561624207020 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x561624207160 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x5616242070d0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x5616242072d8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x561624207218 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x561624207420 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x561624207390 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x5616242074e8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x5616242076b0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x561624207598 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x561624207618 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x5616242077b0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x561624207840 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162420c118 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56162420c248 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x56162420cd38 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561624208a18 prev 0x561624284cf0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561624208b10 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x561624208ba0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x561624208c00 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x561624208ca8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x561624208dc8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x561624208f68 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x561624208ea8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x5616242091b8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x561624209028 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x5616242090a8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x561624209310 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x561624209280 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x561624209498 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x5616242093d0 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x561624209648 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x561624209588 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x561624209740 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x56162420cf10 <col:21, line:58:5>
|   `-IfStmt 0x56162420cef8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x56162420ce60 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x56162420ce30 <col:6> '<bound member function type>' ->scheduled 0x561624209f98
|     |   `-ImplicitCastExpr 0x56162420ce80 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x56162420ce20 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x56162420ced8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x56162420cea8 <col:6> '<bound member function type>' ->unschedule 0x56162420b5c0
|         `-CXXThisExpr 0x56162420ce98 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x561624209840 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x56162420d0b0 <col:26, line:65:5>
|   |-BinaryOperator 0x56162420cfd0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56162420cf68 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56162420c248
|   | | `-MemberExpr 0x56162420cf38 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56162420c308
|   | |   `-CXXThisExpr 0x56162420cf28 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56162420cfb8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56162420cf98 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56162420c768 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56162420d090 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x56162420d000 <col:2> 'void *' lvalue ->_thunk 0x56162420c388
|     | `-CXXThisExpr 0x56162420cff0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x56162420d068 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x56162420d030 <col:20> 'int' 1
|-CXXMethodDecl 0x561624209980 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x5616242098f0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x56162420d210 <col:52, line:71:5>
|   |-CStyleCastExpr 0x56162420d100 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56162420d0d0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x5616242098f0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x56162420d1f0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x56162420d1c0 <col:2> '<bound member function type>' ->assign 0x561624209840
|       `-CXXThisExpr 0x56162420d1b0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x561624209b50 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x561624209a38 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x561624209ab8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x5616242bd6f0 <col:58, line:79:5>
|   |-BinaryOperator 0x5616242bd638 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5616242bd5d0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56162420c248
|   | | `-MemberExpr 0x56162420d240 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56162420c308
|   | |   `-CXXThisExpr 0x56162420d230 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5616242bd620 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616242bd600 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x561624209a38 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x5616242bd6d0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5616242bd668 <col:2> 'void *' lvalue ->_thunk 0x56162420c388
|     | `-CXXThisExpr 0x5616242bd658 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5616242bd6b8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x5616242bd698 <col:11> 'void *' lvalue ParmVar 0x561624209ab8 'user_data' 'void *'
|-CXXMethodDecl 0x561624209ca0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x561624209c10 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x5616242bd888 <col:35, line:87:5>
|   |-BinaryOperator 0x5616242bd7b8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5616242bd750 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56162420c248
|   | | `-MemberExpr 0x5616242bd720 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56162420c308
|   | |   `-CXXThisExpr 0x5616242bd710 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5616242bd7a0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616242bd780 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56162420c940 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5616242bd868 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5616242bd7e8 <col:2> 'void *' lvalue ->_thunk 0x56162420c388
|     | `-CXXThisExpr 0x5616242bd7d8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5616242bd850 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5616242bd838 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x5616242bd818 <col:11> 'Element *' lvalue ParmVar 0x561624209c10 'element' 'Element *'
|-CXXMethodDecl 0x561624209de8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x561624209d58 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x5616242bda20 <col:29, line:94:5>
|   |-BinaryOperator 0x5616242bd950 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5616242bd8e8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56162420c248
|   | | `-MemberExpr 0x5616242bd8b8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56162420c308
|   | |   `-CXXThisExpr 0x5616242bd8a8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5616242bd938 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616242bd918 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56162420cb18 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5616242bda00 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5616242bd980 <col:2> 'void *' lvalue ->_thunk 0x56162420c388
|     | `-CXXThisExpr 0x5616242bd970 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5616242bd9e8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5616242bd9d0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x5616242bd9b0 <col:11> 'Task *' lvalue ParmVar 0x561624209d58 'task' 'Task *'
|-CXXMethodDecl 0x561624209ed8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x5616242bdb00 <col:37, line:100:5>
|   `-ReturnStmt 0x5616242bdaf0 <line:99:2, col:19>
|     `-BinaryOperator 0x5616242bdad0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x5616242bdaa0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x5616242bda50 <col:9> 'Element *const' lvalue ->_owner 0x56162420c3e8
|       |   `-CXXThisExpr 0x5616242bda40 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x5616242bdab8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x5616242bda80 <col:19> 'int' 0
|-CXXMethodDecl 0x561624209f98 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x5616242bdbc0 <col:35, line:105:5>
|   `-ReturnStmt 0x5616242bdbb0 <line:104:2, col:23>
|     `-BinaryOperator 0x5616242bdb90 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x5616242bdb78 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x5616242bdb28 <col:9> 'const int' lvalue ->_schedpos1 0x56162420c068
|       |   `-CXXThisExpr 0x5616242bdb18 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x5616242bdb58 <col:23> 'int' 0
|-CXXMethodDecl 0x56162420a058 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x5616242bdc28 <col:51, line:118:5>
|   `-ReturnStmt 0x5616242bdc18 <line:117:2, col:9>
|     `-MemberExpr 0x5616242bdbe8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|       `-CXXThisExpr 0x5616242bdbd8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56162420a118 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x5616242be180 <col:37, line:136:5>
|   `-IfStmt 0x5616242be158 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x5616242bdce8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x5616242bdcd0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x5616242bdcb0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x5616242bdc80 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x561624216dc8
|     |       `-MemberExpr 0x5616242bdc50 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|     |         `-CXXThisExpr 0x5616242bdc40 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x5616242be0c8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x5616242be0b0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x5616242be080 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x5616242be068 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x5616242be030 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x5616242be018 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x5616242bdff8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5616242455a0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x5616242bdf98 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x5616242bdf80 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x5616242bdea8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x5616242bde90 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x5616242bde70 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561624245260 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x5616242bde10 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x5616242bdd10 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|     |         |     |   `-CXXThisExpr 0x5616242bdd00 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x5616242bde58 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x5616242bde40 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x5616242bddf0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x5616242bddd8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x5616242bdd78 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5616242388c0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x5616242bdfe0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x5616242bdfc8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x5616242bdf60 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x5616242bdf48 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x5616242bdf18 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x561624093e10 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x5616242be148 <line:135:6, col:13>
|       `-CXXConstructExpr 0x5616242be118 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x5616242be0e8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|           `-CXXThisExpr 0x5616242be0d8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x56162420a1d8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x5616242be268 <col:35, line:141:5>
|   `-ReturnStmt 0x5616242be258 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x5616242be220 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x5616242be1f0 <col:9, col:17> '<bound member function type>' ->router 0x561624297450
|         `-ImplicitCastExpr 0x5616242be240 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x5616242be1d8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x5616242be1a8 <col:9> 'Element *const' lvalue ->_owner 0x56162420c3e8
|               `-CXXThisExpr 0x5616242be198 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56162420a298 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x5616242be2e8 <col:37, line:146:5>
|   `-ReturnStmt 0x5616242be2d8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x5616242be2c0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x5616242be290 <col:9> 'Element *const' lvalue ->_owner 0x56162420c3e8
|         `-CXXThisExpr 0x5616242be280 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56162420a358 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x5616242be368 <col:41, line:151:5>
|   `-ReturnStmt 0x5616242be358 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x5616242be340 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x5616242be310 <col:9> 'RouterThread *const' lvalue ->_thread 0x56162420c448
|         `-CXXThisExpr 0x5616242be300 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56162420a420 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x56162420a5e0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56162420a4d0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56162420a548 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56162420cd28 <col:50> 'bool' false
|-CXXMethodDecl 0x56162420a768 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x56162420a6a0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x56162420a8b0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56162420a820 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56162420a9f8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56162420a968 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56162420ab40 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56162420aab0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x56162420ac88 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56162420abf8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x56162420ad50 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x5616242be4d0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x5616242be4b8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x5616242be460 <col:2, col:47> 'void'
|       |-MemberExpr 0x5616242be390 <col:2> '<bound member function type>' ->schedule_at_steady 0x56162420a8b0
|       | `-CXXThisExpr 0x5616242be380 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5616242be4a0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5616242be488 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5616242be440 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x5616242be428 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x5616242be3f8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x561624093e10 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x56162420ae90 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x56162420ae00 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x56162420afd8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56162420af48 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5616242be658 <col:56, line:241:5>
|   `-ExprWithCleanups 0x5616242be640 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x5616242be5e8 <col:2, col:40> 'void'
|       |-MemberExpr 0x5616242be4f8 <col:2> '<bound member function type>' ->schedule_after 0x56162420ae90
|       | `-CXXThisExpr 0x5616242be4e8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5616242be628 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5616242be610 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5616242be5a8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x5616242be578 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x5616242be538 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162420af48 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x5616242be590 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5616242be558 <col:38> 'int' 0
|-CXXMethodDecl 0x56162420b120 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56162420b090 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5616242be8c8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x5616242be8b0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x5616242be858 <col:2, col:49> 'void'
|       |-MemberExpr 0x5616242be680 <col:2> '<bound member function type>' ->schedule_after 0x56162420ae90
|       | `-CXXThisExpr 0x5616242be670 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5616242be898 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5616242be880 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5616242be800 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x5616242be7e8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5616242be758 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561624218bb8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5616242be840 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x5616242be828 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5616242be738 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162420b090 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56162420b268 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x56162420b1d8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x5616242beaa8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x5616242bea90 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x5616242bea38 <col:2, col:38> 'void'
|       |-MemberExpr 0x5616242be8f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56162420a8b0
|       | `-CXXThisExpr 0x5616242be8e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5616242bea78 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5616242bea60 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5616242bea00 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5616242be9e8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5616242be9c8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561624245260 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5616242be998 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5616242be980 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5616242be930 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|             |     `-CXXThisExpr 0x5616242be920 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x5616242be960 <col:33> 'const Timestamp' lvalue ParmVar 0x56162420b1d8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x56162420b3b0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56162420b320 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5616242bed80 <col:58, line:270:5>
|   `-ExprWithCleanups 0x5616242bed68 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x5616242bed10 <col:2, col:79> 'void'
|       |-MemberExpr 0x5616242bead0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56162420a8b0
|       | `-CXXThisExpr 0x5616242beac0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5616242bed50 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5616242bed38 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5616242becd0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x5616242bec08 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x5616242bebf0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x5616242beb80 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x5616242beb50 <col:31, col:41> '<bound member function type>' .sec 0x561624095908
|             | |     `-ImplicitCastExpr 0x5616242beba0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x5616242beb20 <col:31> 'Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|             | |         `-CXXThisExpr 0x5616242beb10 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x5616242bebd8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x5616242bebb8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162420b320 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x5616242bec98 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x5616242bec68 <col:60, col:70> '<bound member function type>' .subsec 0x561624096000
|                 `-ImplicitCastExpr 0x5616242becb8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x5616242bec38 <col:60> 'Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|                     `-CXXThisExpr 0x5616242bec28 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x56162420b4f8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56162420b468 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5616242bf0b8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x5616242bf0a0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x5616242bf048 <col:2, col:65> 'void'
|       |-MemberExpr 0x5616242beda8 <col:2> '<bound member function type>' ->schedule_at_steady 0x56162420a8b0
|       | `-CXXThisExpr 0x5616242bed98 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5616242bf088 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5616242bf070 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5616242bf010 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x5616242beff8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5616242befd8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561624245260 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5616242bef78 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5616242bef60 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5616242bede8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|             |     `-CXXThisExpr 0x5616242bedd8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x5616242befc0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x5616242befa8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x5616242bef08 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x5616242beef0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x5616242beec0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561624218bb8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x5616242bef48 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x5616242bef30 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x5616242beea0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x56162420b468 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56162420b5c0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x56162420b680 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x5616242bf580 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x5616242bf110 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x5616242bf0e0 <col:2> '<bound member function type>' ->unschedule 0x56162420b5c0
|   |   `-CXXThisExpr 0x5616242bf0d0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x5616242bf568 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x5616242bf530 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x5616242bf518 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5616242bf1c8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x561623f2cea8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x5616242bf140 <col:2> 'Timestamp' lvalue ->_expiry_s 0x56162420c0c8
|       | `-CXXThisExpr 0x5616242bf130 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5616242bf1b0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x5616242bf180 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56162420b740 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x5616242bf8d8 <col:42, line:310:5>
|   |-IfStmt 0x5616242bf720 <line:306:2, line:307:23>
|   | |-CallExpr 0x5616242bf650 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x5616242bf638 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x5616242bf5d8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x561624236d30 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x5616242bf710 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x5616242bf6f8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x5616242bf6c8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5616242bf6b0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x5616242bf680 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x5616242bf8c8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x5616242bf8b0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x5616242bf880 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5616242bf868 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x5616242bf828 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5616242bf810 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5616242bf7e0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561624218ed0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5616242bf850 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x5616242bf7c0 <col:30> 'int' 500
|-CXXMethodDecl 0x56162420b880 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56162420b7f0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56162420b928 <col:69> "" ""
|-CXXMethodDecl 0x56162420ba38 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56162420b9a8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56162420bae0 <col:70> "" ""
|-CXXMethodDecl 0x56162420bbf0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56162420bb60 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56162420bc98 <col:71> "" ""
|-CXXMethodDecl 0x56162420bda8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56162420bd18 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56162420be50 <col:72> "" ""
|-EnumDecl 0x56162420bec0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x56162420bfc0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x56162420c010 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56162420bfa0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x56162420bf80 <col:25> 'int' 1
|-AccessSpecDecl 0x56162420c028 <line:339:3, col:10> col:3 private
|-FieldDecl 0x56162420c068 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x56162420c0c8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x56162420c118 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56162420c248 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x56162420cd38 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x56162420c308 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x56162420c388 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56162420c3e8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x56162420c448 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x56162420c598 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x56162420c4a8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x56162420c768 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56162420c650 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x56162420c6d0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x56162420c940 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56162420c828 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x56162420c8a8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x56162420cb18 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56162420ca00 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x56162420ca80 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x56162420cce8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162433e7c8 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56162433e8e8 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x56162433e988 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x56162433e9e8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x561624347e38 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x561624347e38

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162433ea50 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56162433eb68 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x56162433ec08 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x56162433ec98 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x5616243469d0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561624346e08 <col:11>
|-CXXConstructorDecl 0x561624346ad8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x561624346ad8
| `-ParmVarDecl 0x561624346be8 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x561624346c88 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x561624346c88
| `-ParmVarDecl 0x561624346d98 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x561624347b00 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162433c700 prev 0x561624284da0 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56162433c7f8 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x56162433c888 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x56162433c9b8 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x56162433c930 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x561624284e30 'NotifierSignal'
|   | `-CXXRecord 0x56162433c700 'NotifierSignal'
|   `-ParenType 0x56162433c8d0 'bool () const' sugar
|     `-FunctionProtoType 0x561623dcb730 'bool () const' const cdecl
|       `-BuiltinType 0x561623d22500 'bool'
|-CXXConstructorDecl 0x56162433ca48 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x56162433cc88 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x56162433cb00 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x56162433cb78 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56162433ce38 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x56162433cd78 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x56162433cf30 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x56162433d058 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x56162433d118 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x56162433d1d8 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x56162433d298 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x56162433d388 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x56162433d4f8 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56162433d678 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x56162433d5b8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x56162433d740 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x56162433d800 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x56162433d8c0 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x56162433d980 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x56162433dc38 <line:36:5, col:76> col:17
| `-FunctionDecl 0x56162433db78 parent 0x561623d22488 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x56162433da30 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x56162433daa8 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x56162433de58 <line:37:5, col:76> col:17
| `-FunctionDecl 0x56162433dd98 parent 0x561623d22488 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x56162433dc88 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x56162433dd00 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x56162433df98 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x56162433dea8 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x56162433e0e0 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x56162433e050 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x56162433e3a8 <line:41:5, col:78> col:27
| `-FunctionDecl 0x56162433e2e8 parent 0x561623d22488 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x56162433e198 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x56162433e210 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x56162433e4b8 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x56162433e3f8 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x56162433e638 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x56162433e570 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x56162433e700 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x56162433e7a0 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x56162433e7c8 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56162433e8e8 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x56162433e988 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x56162433e9e8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x561624347e38 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x561624347e38
|-CXXRecordDecl 0x56162433ea50 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56162433eb68 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x56162433ec08 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x56162433ec98 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x5616243469d0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561624346e08 <col:11>
| |-CXXConstructorDecl 0x561624346ad8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x561624346ad8
| | `-ParmVarDecl 0x561624346be8 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x561624346c88 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x561624346c88
| | `-ParmVarDecl 0x561624346d98 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x561624347b00 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x56162433ed10 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x56162433ed70 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x56162433edc0 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x56162433eec0 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x56162433f0c0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162433eea0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56162433ee80 <col:14> 'int' 1
| |-EnumConstantDecl 0x56162433ef50 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x56162433f0d8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162433ef30 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x56162433ef10 <col:30> 'int' 2
| |-EnumConstantDecl 0x56162433efe0 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x56162433f0f0 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162433efc0 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x56162433efa0 <col:52> 'int' 4
| `-EnumConstantDecl 0x56162433f070 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x56162433f108 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56162433f050 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x56162433f030 <col:23> 'int' 8
|-VarDecl 0x56162433f130 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x56162433f238 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x56162433f1a8 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x56162433f400 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x56162433f2f0 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x56162433f368 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x56162433f638 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x56162433f4e8 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x56162433f560 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162435b178 <../elements/standard/timedunqueue.hh:36:1, line:58:1> line:36:7 referenced class TimedUnqueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56162435b2d8 <col:1, col:7> col:7 implicit referenced class TimedUnqueue
|-AccessSpecDecl 0x56162435b368 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x56162435b3f0 <line:38:5, col:18> col:5 used TimedUnqueue 'void ()'
|-CXXMethodDecl 0x56162435b4f0 <line:40:5, col:61> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x561624286808 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56162435c7f0 <col:36, col:61>
|   `-ReturnStmt 0x56162435c7e0 <col:38, col:45>
|     `-ImplicitCastExpr 0x56162435c7c8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56162435c7a0 <col:45> 'const char [13]' lvalue "TimedUnqueue"
|-CXXMethodDecl 0x56162435b5b8 <line:41:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x5616242868d0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56162435c850 <col:36, col:56>
|   `-ReturnStmt 0x56162435c840 <col:38, col:45>
|     `-ImplicitCastExpr 0x56162435c828 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56162435c808 <col:45> 'const char []' lvalue Var 0x561624286b80 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x56162435b680 <line:42:5, col:59> col:17 processing 'const char *() const'
| |-Overrides: [ 0x561624286c98 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x56162435c8b0 <col:36, col:59>
|   `-ReturnStmt 0x56162435c8a0 <col:38, col:45>
|     `-ImplicitCastExpr 0x56162435c888 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56162435c868 <col:45> 'const char []' lvalue Var 0x561624286f78 'PULL_TO_PUSH' 'const char []'
|-CXXMethodDecl 0x56162435b950 <line:44:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5616242880a0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56162435b800 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x56162435b878 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56162435baa8 <line:45:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x5616242882f0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x56162435ba10 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56162435bbf0 <line:47:5, col:29> col:10 run_task 'bool (Task *)'
| |-Overrides: [ 0x561624285b88 Element::run_task 'bool (Task *)' ]
| `-ParmVarDecl 0x56162435bb60 <col:19, col:25> col:25 task 'Task *'
|-AccessSpecDecl 0x56162435bc98 <line:49:3, col:12> col:3 protected
|-FieldDecl 0x56162435bcd8 <line:51:5, col:9> col:9 referenced _burst 'int'
|-FieldDecl 0x56162435bd38 <line:52:5, col:10> col:10 _task 'Task'
|-FieldDecl 0x56162435bd98 <line:53:5, col:11> col:11 _timer 'Timer'
|-FieldDecl 0x56162435be00 <line:54:5, col:14> col:14 _interval 'unsigned int'
|-EnumDecl 0x56162435be50 <line:55:5, col:27> col:5
| `-EnumConstantDecl 0x56162435bf50 <col:12, col:25> col:12 use_signal 'TimedUnqueue::(anonymous enum at ../elements/standard/timedunqueue.hh:55:5)'
|   `-ImplicitCastExpr 0x56162435bfa0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56162435bf30 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x56162435bf10 <col:25> 'int' 1
|-FieldDecl 0x56162435bfc8 <line:56:5, col:20> col:20 _signal 'NotifierSignal'
|-CXXConstructorDecl 0x56162435c048 <line:36:7> col:7 implicit TimedUnqueue 'void (const TimedUnqueue &)' inline default_delete noexcept-unevaluated 0x56162435c048
| `-ParmVarDecl 0x56162435c158 <col:7> col:7 'const TimedUnqueue &'
|-CXXConstructorDecl 0x56162435c1f8 <col:7> col:7 implicit TimedUnqueue 'void (TimedUnqueue &&)' inline default_delete noexcept-unevaluated 0x56162435c1f8
| `-ParmVarDecl 0x56162435c308 <col:7> col:7 'TimedUnqueue &&'
|-CXXMethodDecl 0x56162435c3a8 <col:7> col:7 implicit operator= 'TimedUnqueue &(const TimedUnqueue &)' inline default_delete noexcept-unevaluated 0x56162435c3a8
| `-ParmVarDecl 0x56162435c4b8 <col:7> col:7 'const TimedUnqueue &'
|-CXXMethodDecl 0x56162435c528 <col:7> col:7 implicit operator= 'TimedUnqueue &(TimedUnqueue &&)' inline default_delete noexcept-unevaluated 0x56162435c528
| `-ParmVarDecl 0x56162435c638 <col:7> col:7 'TimedUnqueue &&'
`-CXXDestructorDecl 0x56162435c6c0 <col:7> col:7 implicit used ~TimedUnqueue 'void () noexcept' inline default
  |-Overrides: [ 0x5616242853a8 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x56162435d990 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.TimedUnqueue = type { %class.Element.base, i32, %class.Task, %class.Timer, i32, [4 x i8], %class.NotifierSignal }
  NonVirtualBaseLLVMType:%class.TimedUnqueue = type { %class.Element.base, i32, %class.Task, %class.Timer, i32, [4 x i8], %class.NotifierSignal }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Burster
         0 |   class TimedUnqueue (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     int _burst
       112 |     class Task _task
       112 |       struct TaskLink (base)
       112 |         struct TaskLink * _prev
       120 |         struct TaskLink * _next
       128 |         unsigned int _pass
       132 |       unsigned int _stride
       136 |       int _tickets
       140 |       union Task::Status _status
       140 |         struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
       140 |           int16_t home_thread_id
       142 |           uint8_t is_scheduled
       143 |           uint8_t is_strong_unscheduled
       140 |         uint32_t status
       144 |       TaskCallback _hook
       152 |       void * _thunk
       160 |       class RouterThread * _thread
       168 |       class Element * _owner
       176 |       union Task::Pending _pending_nextptr
       176 |         class Task * t
       176 |         uintptr_t x
       184 |     class Timer _timer
       184 |       int _schedpos1
       192 |       class Timestamp _expiry_s
       192 |         union Timestamp::rep_t _t
       192 |           int64_t x
       200 |       union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |         TimerCallback callback
       208 |       void * _thunk
       216 |       class Element * _owner
       224 |       class RouterThread * _thread
       232 |     unsigned int _interval
       240 |     class NotifierSignal _signal
       240 |       union NotifierSignal::vmvalue _v
       240 |         class atomic_uint32_t * v1
       240 |         struct NotifierSignal::vmpair * vm
       248 |       uint32_t _mask
           | [sizeof=256, dsize=256, align=8,
           |  nvsize=256, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162435c8c8 <../elements/standard/burster.hh:19:1, line:26:1> line:19:7 class Burster definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'TimedUnqueue'
|-CXXRecordDecl 0x56162435ca28 <col:1, col:7> col:7 implicit referenced class Burster
|-AccessSpecDecl 0x56162435cab8 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x56162435cb40 <line:21:5, col:13> col:5 Burster 'void ()'
|-CXXMethodDecl 0x56162435cc40 <line:23:5, col:56> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56162435b4f0 TimedUnqueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x56162435d608 <col:36, col:56>
|   `-ReturnStmt 0x56162435d5f8 <col:38, col:45>
|     `-ImplicitCastExpr 0x56162435d5e0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56162435d5c0 <col:45> 'const char [8]' lvalue "Burster"
|-CXXMethodDecl 0x56162435cd90 <line:24:5, col:32> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5616242874c0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x56162435ccf8 <col:16, col:28> col:28 name 'const char *'
|-CXXConstructorDecl 0x56162435ce68 <line:19:7> col:7 implicit Burster 'void (const Burster &)' inline default_delete noexcept-unevaluated 0x56162435ce68
| `-ParmVarDecl 0x56162435cf78 <col:7> col:7 'const Burster &'
|-CXXConstructorDecl 0x56162435d018 <col:7> col:7 implicit Burster 'void (Burster &&)' inline default_delete noexcept-unevaluated 0x56162435d018
| `-ParmVarDecl 0x56162435d128 <col:7> col:7 'Burster &&'
|-CXXMethodDecl 0x56162435d1c8 <col:7> col:7 implicit operator= 'Burster &(const Burster &)' inline default_delete noexcept-unevaluated 0x56162435d1c8
| `-ParmVarDecl 0x56162435d2d8 <col:7> col:7 'const Burster &'
|-CXXMethodDecl 0x56162435d348 <col:7> col:7 implicit operator= 'Burster &(Burster &&)' inline default_delete noexcept-unevaluated 0x56162435d348
| `-ParmVarDecl 0x56162435d458 <col:7> col:7 'Burster &&'
`-CXXDestructorDecl 0x56162435d4e0 <col:7> col:7 implicit ~Burster 'void ()' inline default noexcept-unevaluated 0x56162435d4e0
  `-Overrides: [ 0x56162435c6c0 TimedUnqueue::~TimedUnqueue 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.Burster = type { %class.TimedUnqueue }
  NonVirtualBaseLLVMType:%class.Burster = type { %class.TimedUnqueue }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162425d768 prev 0x561624252970 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56162425d860 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56162425d950 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56162425da78 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56162425dbf8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56162425dd78 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56162425def8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56162426ed28 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56162426f598 <col:11>
|-CXXDestructorDecl 0x56162426ee00 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56162426ef38 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56162426ef38
| `-ParmVarDecl 0x56162426f048 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56162426f0e8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56162426f0e8
| `-ParmVarDecl 0x56162426f1f8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x561624271fb8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5616242720c8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x561624272348 <col:11>
|   `-ReturnStmt 0x561624272338 <col:11>
|     `-UnaryOperator 0x561624272320 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561624272310 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x561624272138 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561624272138
  `-ParmVarDecl 0x561624272248 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162425df60 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56162425e078 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56162425e118 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56162425e180 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56162425e1e8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56162425e250 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56162425e2b0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56162425e370 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56162425e3d0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56162425e430 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56162426ec38 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56162425e118 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56162426f5a8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56162426f600 <col:12>
|-CXXConstructorDecl 0x56162426f268 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56162426f268
| `-ParmVarDecl 0x56162426f378 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56162426f418 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56162426f418
| `-ParmVarDecl 0x56162426f528 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5616242716a0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56162424c080 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56162424c198 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56162424c228 <col:16, col:22> col:16 public
|-EnumDecl 0x56162424c250 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56162424c350 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56162424c430 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56162424c330 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56162424c310 <col:21> 'int' 28
| `-EnumConstantDecl 0x56162424c3e0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56162424c448 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56162424c3c0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56162424c3a0 <col:22> 'int' 64
|-CXXMethodDecl 0x56162424c788 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56162424c470 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56162424c4f0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56162424c568 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56162424c5e0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56162424c848 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56162424ca48 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56162424c8c0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56162424c938 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56162424caf8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56162424cc58 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56162424cb68 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56162424cd00 <col:72> warn_unused_result ""
|-TypedefDecl 0x56162424d060 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56162424cff0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56162424cf90 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56162424cf50 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x561623d224e0 'void'
|       |-PointerType 0x561623fcc420 'unsigned char *'
|       | `-BuiltinType 0x561623d225e0 'unsigned char'
|       |-TypedefType 0x561623dc89f0 'size_t' sugar
|       | |-Typedef 0x561623d92be0 'size_t'
|       | `-BuiltinType 0x561623d22640 'unsigned long'
|       `-PointerType 0x561623d22ce0 'void *'
|         `-BuiltinType 0x561623d224e0 'void'
|-CXXMethodDecl 0x56162424d4d8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56162424d0d0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56162424d148 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56162424d1e0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56162424d260 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x561624267bd0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x561624267bb8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x561624267b80 <col:58> 'int' 0
| |-ParmVarDecl 0x56162424d2e0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x561624267bf8 <col:76> 'int' 0
| |-ParmVarDecl 0x56162424d360 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x561624267c18 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56162424d5a8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56162424d628 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56162424d6e8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56162424d788 <col:20>
| `-OptimizeNoneAttr 0x56162424d7e0 <col:30>
|-CXXMethodDecl 0x56162424d858 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56162424d8f8 <col:20>
| `-OptimizeNoneAttr 0x56162424d950 <col:30>
|-CXXMethodDecl 0x56162424d9c8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56162424da68 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56162424db18 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56162424dbb8 <col:20>
| |-OptimizeNoneAttr 0x56162424dc10 <col:30>
| `-WarnUnusedResultAttr 0x56162424dc38 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56162424dc90 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56162424dd30 <col:20>
| `-OptimizeNoneAttr 0x56162424dd88 <col:30>
|-CXXMethodDecl 0x56162424ddd8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56162424de78 <col:20>
| `-OptimizeNoneAttr 0x56162424ded0 <col:30>
|-CXXMethodDecl 0x56162424df18 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x56162424dfb8 <col:20>
| `-OptimizeNoneAttr 0x56162424e010 <col:30>
|-CXXMethodDecl 0x56162424e058 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56162424e118 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56162424e1e0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56162424e2a8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56162424e368 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56162424e488 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x561624267ce0 <col:54, line:99:5>
|   `-ReturnStmt 0x561624267cd0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x561624267cb8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x561624267c88 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56162425e768
|         `-CXXThisExpr 0x561624267c78 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56162424e628 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56162424e538 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x561624267d90 <col:67, line:103:5>
|   `-BinaryOperator 0x561624267d70 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561624267d08 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56162425e768
|     | `-CXXThisExpr 0x561624267cf8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561624267d58 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x561624267d38 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56162424e538 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56162424e720 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x561624267e10 <col:33, line:107:5>
|   `-ReturnStmt 0x561624267e00 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x561624267de8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561624267db8 <col:16> 'void *' lvalue ->_destructor_argument 0x56162425e7d0
|         `-CXXThisExpr 0x561624267da8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56162424e7e0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x561624268440 <col:25, line:113:5>
|   |-ParenExpr 0x561624268188 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x561624268158 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x561624267ec8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561624267ea0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x561624267e68 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x561624267e38 <col:24> '<bound member function type>' ->shared 0x56162424d858
|   |   |       `-ImplicitCastExpr 0x561624267e88 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x561624267e28 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561624267f28 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561624267f08 <col:42> 'int' 0
|   |   `-CallExpr 0x5616242680b8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5616242680a0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561624268080 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5616242680f8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624267f98 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x561624268110 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624267fc0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561624268128 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561624267ff8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x561624268140 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561624268068 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561624268050 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561624268018 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x561624268388 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5616242681b8 <col:2> 'unsigned char *' lvalue ->_head 0x56162425e570
|   | | `-CXXThisExpr 0x5616242681a8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x561624268370 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x561624268350 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5616242681f8 <col:10> 'unsigned char *' lvalue ->_data 0x56162425e5d8
|   |     | `-CXXThisExpr 0x5616242681e8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x561624268338 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x561624268318 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x561624268238 <col:18> 'unsigned char *' lvalue ->_tail 0x56162425e640
|   |         | `-CXXThisExpr 0x561624268228 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x561624268300 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5616242682e0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x561624268278 <col:26> 'unsigned char *' lvalue ->_end 0x56162425e6a8
|   |             | `-CXXThisExpr 0x561624268268 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5616242682c8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5616242682a8 <col:33> 'int' 0
|   `-BinaryOperator 0x561624268420 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5616242683b8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56162425e768
|     | `-CXXThisExpr 0x5616242683a8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561624268408 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5616242683e8 <col:16> 'int' 0
|-CXXMethodDecl 0x56162424e920 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56162424e890 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56162424e9c8 <col:20>
| |-OptimizeNoneAttr 0x56162424ea20 <col:30>
| `-WarnUnusedResultAttr 0x56162424ea48 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56162424eb18 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56162424ea88 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56162424ebc0 <col:20>
| |-OptimizeNoneAttr 0x56162424ec18 <col:30>
| `-WarnUnusedResultAttr 0x56162424ec40 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56162424ed78 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56162424ec80 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56162424ee20 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56162424ef20 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56162424ee90 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56162424efc8 <col:20>
| `-OptimizeNoneAttr 0x56162424f020 <col:30>
|-CXXMethodDecl 0x56162424f0e8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56162424f058 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56162424f190 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56162424f290 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56162424f200 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56162424f338 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56162424f438 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56162424f3a8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56162424f4e0 <col:20>
| `-OptimizeNoneAttr 0x56162424f538 <col:30>
|-CXXMethodDecl 0x56162424f6c8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56162424f578 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56162424f5f0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x561624267c38 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56162424f778 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56162424f978 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56162424f7f0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56162424f868 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56162424fb88 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56162424fa38 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56162424fab0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56162424fd98 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56162424fc48 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56162424fcc8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x561624267c48 <col:39> 'int' 0
|-CXXMethodDecl 0x56162424fe68 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56162424ff30 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56162424fff8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5616242500b8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561624250180 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5616242502c8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x561624250238 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x561624250498 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561624250388 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x561624250400 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624250568 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x561624250628 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5616242506c8 <col:20>
| `-OptimizeNoneAttr 0x561624250720 <col:30>
|-CXXMethodDecl 0x561624250770 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561624250810 <col:20>
| `-OptimizeNoneAttr 0x561624250868 <col:30>
|-CXXMethodDecl 0x5616242508b8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x561624250978 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561624250a40 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x561624250ae0 <col:20>
| `-OptimizeNoneAttr 0x561624250b38 <col:30>
|-CXXMethodDecl 0x561624250c88 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561624250b78 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x561624250bf0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624250dd8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x561624250d48 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624250eb0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x561624250f70 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x561624251010 <col:20>
| `-OptimizeNoneAttr 0x561624251068 <col:30>
|-CXXMethodDecl 0x5616242510b8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561624251158 <col:20>
| `-OptimizeNoneAttr 0x5616242511b0 <col:30>
|-CXXMethodDecl 0x561624251200 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5616242512c8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x561624251368 <col:20>
| `-OptimizeNoneAttr 0x5616242513c0 <col:30>
|-CXXMethodDecl 0x561624251408 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x561624251528 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x561624251698 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5616242515d8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x561624251788 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x561624251828 <col:20>
| `-OptimizeNoneAttr 0x561624251880 <col:30>
|-CXXMethodDecl 0x5616242518d0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x561624251990 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561624251bc8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x561624251a40 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x561624251ab8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561624251c78 <col:20>
| `-OptimizeNoneAttr 0x561624251cd0 <col:30>
|-CXXMethodDecl 0x561624251d78 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x561624251e18 <col:20>
| `-OptimizeNoneAttr 0x561624251e70 <col:30>
|-CXXMethodDecl 0x561624251ec0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x561624251f60 <col:20>
| `-OptimizeNoneAttr 0x561624251fb8 <col:30>
|-CXXMethodDecl 0x561624252000 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5616242520a0 <col:20>
| `-OptimizeNoneAttr 0x5616242520f8 <col:30>
|-CXXMethodDecl 0x5616242521f8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x561624252130 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5616242522a0 <col:20>
| `-OptimizeNoneAttr 0x5616242522f8 <col:30>
|-CXXMethodDecl 0x5616242524b8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x561624252330 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5616242523a8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561624252568 <col:20>
| `-OptimizeNoneAttr 0x5616242525c0 <col:30>
|-CXXMethodDecl 0x561624252668 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x561624252788 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5616242528a8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x561624252948 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x561624252970 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x561624252a98 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x561624252b38 <col:20>
| `-OptimizeNoneAttr 0x561624252b90 <col:30>
|-CXXMethodDecl 0x561624252c38 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x561624252cd8 <col:20>
| `-OptimizeNoneAttr 0x561624252d30 <col:30>
|-AccessSpecDecl 0x561624252d58 <line:344:3, col:9> col:3 public
|-EnumDecl 0x561624252d80 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x561624252e80 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x561624252ed0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624252e60 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x561624252e40 <col:14> 'int' 48
|-CXXMethodDecl 0x561624252f38 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x561624252fd8 <col:20>
| `-OptimizeNoneAttr 0x561624253030 <col:30>
|-CXXMethodDecl 0x5616242530a8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x561624253148 <col:20>
| `-OptimizeNoneAttr 0x5616242531a0 <col:30>
|-CXXMethodDecl 0x561624253268 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5616242531d8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x561624253408 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5616242535a8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5616242534b8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x561624253650 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x561624253750 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561624253b00 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624253730 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x561624253710 <col:9> 'int' 0
| |-EnumConstantDecl 0x5616242537e0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561624253b18 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242537c0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5616242537a0 <col:14> 'int' 1
| |-EnumConstantDecl 0x561624253870 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561624253b30 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624253850 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x561624253830 <col:14> 'int' 2
| |-EnumConstantDecl 0x561624253900 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561624253b48 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242538e0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5616242538c0 <col:14> 'int' 3
| |-EnumConstantDecl 0x561624253990 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561624253b60 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624253970 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x561624253950 <col:13> 'int' 4
| |-EnumConstantDecl 0x561624253a20 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561624253b78 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624253a00 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5616242539e0 <col:13> 'int' 5
| `-EnumConstantDecl 0x561624253ab0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x561624253b90 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624253a90 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x561624253a70 <col:14> 'int' 6
|-CXXMethodDecl 0x561624253bf8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x561624253c98 <col:20>
| `-OptimizeNoneAttr 0x561624253cf0 <col:30>
|-CXXMethodDecl 0x561624253de8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x561624253d28 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x561624253e90 <col:20>
| `-OptimizeNoneAttr 0x561624253ee8 <col:30>
|-CXXMethodDecl 0x561624253f58 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x561624254080 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5616242541f8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x561624254130 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5616242542c0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x561624254388 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5616242544c8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x561624254438 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x561624254570 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x561624254670 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561624254870 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624254650 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x561624254630 <col:23> 'int' 0
| |-EnumConstantDecl 0x561624254700 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561624254888 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242546e0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5616242546c0 <col:45> 'int' 4
| |-EnumConstantDecl 0x561624254790 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5616242548a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624254770 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x561624254750 <col:24> 'int' 0
| `-EnumConstantDecl 0x561624254820 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5616242548b8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624254800 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5616242547e0 <col:47> 'int' 16
|-CXXMethodDecl 0x561624254918 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x561624254a88 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5616242549c8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x561624254b30 <col:20>
| `-OptimizeNoneAttr 0x561624254b88 <col:30>
|-CXXMethodDecl 0x561624254bd8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x561624268560 <col:18, col:36>
|   `-ReturnStmt 0x561624268550 <col:20, col:33>
|     `-ImplicitCastExpr 0x561624268538 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x561624268518 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5616242684e8 <col:27> '<bound member function type>' ->xanno 0x561624252c38
|           `-CXXThisExpr 0x5616242684d8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x561624254cd0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x561624268670 <col:30, col:48>
|   `-ReturnStmt 0x561624268660 <col:32, col:45>
|     `-ImplicitCastExpr 0x561624268648 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x561624268628 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5616242685f8 <col:39> '<bound member function type>' ->xanno 0x561624252a98
|           `-CXXThisExpr 0x5616242685e8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x561624254db8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x561624268808 <col:24, col:50>
|   `-ReturnStmt 0x5616242687f8 <col:26, col:47>
|     `-UnaryOperator 0x5616242687e0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5616242687c0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5616242687a8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561624268758 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56162425da78
|         |   `-CXXMemberCallExpr 0x561624268738 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x561624268708 <col:34> '<bound member function type>' ->xanno 0x561624252c38
|         |       `-CXXThisExpr 0x5616242686f8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x561624268788 <col:46> 'int' 0
|-CXXMethodDecl 0x561624254ec0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5616242689d8 <col:36, col:62>
|   `-ReturnStmt 0x5616242689c8 <col:38, col:59>
|     `-UnaryOperator 0x5616242689b0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561624268990 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561624268978 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5616242688f0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56162425da78
|         |   `-CXXMemberCallExpr 0x5616242688d0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5616242688a0 <col:46> '<bound member function type>' ->xanno 0x561624252a98
|         |       `-CXXThisExpr 0x561624268890 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561624268920 <col:58> 'int' 0
|-CXXMethodDecl 0x561624254fd8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x561624268b70 <col:26, col:53>
|   `-ReturnStmt 0x561624268b60 <col:28, col:50>
|     `-UnaryOperator 0x561624268b48 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561624268b28 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x561624268b10 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561624268ac0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56162425dd78
|         |   `-CXXMemberCallExpr 0x561624268aa0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x561624268a70 <col:36> '<bound member function type>' ->xanno 0x561624252c38
|         |       `-CXXThisExpr 0x561624268a60 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x561624268af0 <col:49> 'int' 0
|-CXXMethodDecl 0x5616242550f8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x561624268d48 <col:38, col:65>
|   `-ReturnStmt 0x561624268d38 <col:40, col:62>
|     `-UnaryOperator 0x561624268d20 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561624268d00 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x561624268ce8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561624268c58 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56162425dd78
|         |   `-CXXMemberCallExpr 0x561624268c38 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561624268c08 <col:48> '<bound member function type>' ->xanno 0x561624252a98
|         |       `-CXXThisExpr 0x561624268bf8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561624268c88 <col:61> 'int' 0
|-CXXMethodDecl 0x5616242552a8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5616242551b0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x561624269418 <col:34, line:463:5>
|   |-ParenExpr 0x561624269260 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x561624269230 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561624268e98 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561624268e68 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561624268db8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561624268da0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561624268d60 <col:23> 'int' lvalue ParmVar 0x5616242551b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561624268d80 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561624268e48 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561624268e18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561624268dd8 <col:33> 'int' lvalue ParmVar 0x5616242551b0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561624268e30 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561624268df8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561624268ef8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561624268ed8 <col:56> 'int' 0
|   |   `-CallExpr 0x561624269190 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561624269178 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561624269158 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5616242691d0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624268fe8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5616242691e8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624269018 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561624269200 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561624269050 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x561624269218 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561624269140 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561624269128 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5616242690e8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x561624269408 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5616242693f0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5616242693d0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5616242693a0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561624269350 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56162425da78
|         |   `-CXXMemberCallExpr 0x561624269330 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561624269300 <col:9> '<bound member function type>' ->xanno 0x561624252a98
|         |       `-CXXThisExpr 0x5616242692f0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5616242693b8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x561624269380 <col:21> 'int' lvalue ParmVar 0x5616242551b0 'i' 'int'
|-CXXMethodDecl 0x5616242554f8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x561624255368 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5616242553e0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x561624269aa8 <col:40, line:472:5>
|   |-ParenExpr 0x5616242698c0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x561624269890 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561624269570 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561624269540 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561624269490 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561624269478 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561624269438 <col:23> 'int' lvalue ParmVar 0x561624255368 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561624269458 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561624269520 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5616242694f0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5616242694b0 <col:33> 'int' lvalue ParmVar 0x561624255368 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561624269508 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5616242694d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5616242695d0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5616242695b0 <col:56> 'int' 0
|   |   `-CallExpr 0x5616242697f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5616242697d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5616242697b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561624269830 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624269640 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561624269848 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624269670 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561624269860 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5616242696a8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x561624269878 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5616242697a0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561624269788 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561624269748 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x561624269a88 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x561624269a30 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x561624269a00 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5616242699b0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56162425da78
|     | |   `-CXXMemberCallExpr 0x561624269990 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x561624269960 <col:2> '<bound member function type>' ->xanno 0x561624252c38
|     | |       `-CXXThisExpr 0x561624269950 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x561624269a18 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5616242699e0 <col:14> 'int' lvalue ParmVar 0x561624255368 'i' 'int'
|     `-ImplicitCastExpr 0x561624269a70 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x561624269a50 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5616242553e0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5616242556b8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5616242555c0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56162426a228 <col:36, line:485:5>
|   |-ParenExpr 0x561624269f90 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x561624269f60 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561624269c40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561624269c10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561624269b20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561624269b08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561624269ac8 <col:23> 'int' lvalue ParmVar 0x5616242555c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561624269ae8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561624269bf0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561624269bd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561624269b40 <col:33> 'int' lvalue ParmVar 0x5616242555c0 'i' 'int'
|   |   |     `-BinaryOperator 0x561624269bb8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561624269ba0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561624269b60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561624269b80 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561624269ca0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561624269c80 <col:60> 'int' 0
|   |   `-CallExpr 0x561624269ec0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561624269ea8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561624269e88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561624269f00 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624269d10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561624269f18 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561624269d48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561624269f30 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561624269d80 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x561624269f48 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561624269e70 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561624269e58 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561624269e18 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56162426a218 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56162426a200 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56162426a1e8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56162426a1b8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56162426a158 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56162426a128 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56162426a0a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56162425d950
|             |   `-CXXMemberCallExpr 0x56162426a080 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56162426a050 <col:61> '<bound member function type>' ->xanno 0x561624252a98
|             |       `-CXXThisExpr 0x56162426a040 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56162426a140 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56162426a0d0 <col:74> 'int' lvalue ParmVar 0x5616242555c0 'i' 'int'
|-CXXMethodDecl 0x561624255908 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x561624255778 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5616242557f0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56162426a978 <col:42, line:500:5>
|   |-ParenExpr 0x56162426a710 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56162426a6e0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56162426a3c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426a390 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426a2a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426a288 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426a248 <col:23> 'int' lvalue ParmVar 0x561624255778 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426a268 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426a370 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56162426a358 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426a2c0 <col:33> 'int' lvalue ParmVar 0x561624255778 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426a338 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426a320 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426a2e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56162426a300 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56162426a420 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426a400 <col:60> 'int' 0
|   |   `-CallExpr 0x56162426a640 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56162426a628 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426a608 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426a680 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426a490 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56162426a698 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426a4c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426a6b0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426a500 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56162426a6c8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426a5f0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426a5d8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426a598 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56162426a958 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56162426a908 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56162426a8d8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56162426a880 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56162426a850 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56162426a800 <col:48, col:57> 'char [48]' lvalue ->c 0x56162425d950
|     |     |   `-CXXMemberCallExpr 0x56162426a7e0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56162426a7b0 <col:48> '<bound member function type>' ->xanno 0x561624252c38
|     |     |       `-CXXThisExpr 0x56162426a7a0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56162426a868 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56162426a830 <col:61> 'int' lvalue ParmVar 0x561624255778 'i' 'int'
|     `-ImplicitCastExpr 0x56162426a940 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56162426a920 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5616242557f0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x561624255ac8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5616242559d0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56162426b0d8 <col:35, line:513:5>
|   |-ParenExpr 0x56162426ade8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56162426adb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56162426ab10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426aae0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426a9f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426a9d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426a998 <col:23> 'int' lvalue ParmVar 0x5616242559d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426a9b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426aac0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56162426aaa8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426aa10 <col:33> 'int' lvalue ParmVar 0x5616242559d0 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426aa88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426aa70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426aa30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56162426aa50 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56162426ab70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426ab50 <col:60> 'int' 0
|   |   `-CallExpr 0x56162426ad18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56162426ad00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426ace0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426ad58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426abe0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56162426ad70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426ac18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426ad88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426ac50 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56162426ada0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426acc8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426acb0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426ac70 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56162426b0c8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56162426b0b0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56162426b098 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56162426b068 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56162426afe0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56162426afb0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56162426af60 <col:60, col:69> 'char const[48]' lvalue ->c 0x56162425d950
|             |   `-CXXMemberCallExpr 0x56162426af40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56162426af10 <col:60> '<bound member function type>' ->xanno 0x561624252a98
|             |       `-CXXThisExpr 0x56162426af00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56162426afc8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56162426af90 <col:73> 'int' lvalue ParmVar 0x5616242559d0 'i' 'int'
|-CXXMethodDecl 0x561624255d18 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x561624255b88 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561624255c00 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56162426b7f8 <col:41, line:528:5>
|   |-ParenExpr 0x56162426b580 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56162426b550 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56162426b270 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426b240 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426b150 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426b138 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426b0f8 <col:23> 'int' lvalue ParmVar 0x561624255b88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426b118 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426b220 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56162426b208 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426b170 <col:33> 'int' lvalue ParmVar 0x561624255b88 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426b1e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426b1d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426b190 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56162426b1b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56162426b2d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426b2b0 <col:60> 'int' 0
|   |   `-CallExpr 0x56162426b4b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56162426b498 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426b478 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426b4f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426b340 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56162426b508 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426b378 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426b520 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426b3b0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56162426b538 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426b460 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426b448 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426b408 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56162426b7d8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56162426b788 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56162426b758 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56162426b700 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56162426b6c0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56162426b670 <col:47, col:56> 'char [48]' lvalue ->c 0x56162425d950
|     |     |   `-CXXMemberCallExpr 0x56162426b650 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56162426b620 <col:47> '<bound member function type>' ->xanno 0x561624252c38
|     |     |       `-CXXThisExpr 0x56162426b610 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56162426b6d8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56162426b6a0 <col:60> 'int' lvalue ParmVar 0x561624255b88 'i' 'int'
|     `-ImplicitCastExpr 0x56162426b7c0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56162426b7a0 <col:65> 'int16_t':'short' lvalue ParmVar 0x561624255c00 'x' 'int16_t':'short'
|-CXXMethodDecl 0x561624255ed8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x561624255de0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56162426bec8 <col:36, line:541:5>
|   |-ParenExpr 0x56162426bc68 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56162426bc38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56162426b990 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426b960 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426b870 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426b858 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426b818 <col:23> 'int' lvalue ParmVar 0x561624255de0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426b838 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426b940 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56162426b928 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426b890 <col:33> 'int' lvalue ParmVar 0x561624255de0 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426b908 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426b8f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426b8b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56162426b8d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56162426b9f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426b9d0 <col:60> 'int' 0
|   |   `-CallExpr 0x56162426bb98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56162426bb80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426bb60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426bbd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426ba60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56162426bbf0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426ba98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426bc08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426bad0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56162426bc20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426bb48 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426bb30 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426baf0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56162426beb8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56162426bea0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56162426be88 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56162426be58 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56162426be00 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56162426bdd0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56162426bd80 <col:61, col:70> 'char const[48]' lvalue ->c 0x56162425d950
|             |   `-CXXMemberCallExpr 0x56162426bd60 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56162426bd30 <col:61> '<bound member function type>' ->xanno 0x561624252a98
|             |       `-CXXThisExpr 0x56162426bd20 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56162426bde8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56162426bdb0 <col:74> 'int' lvalue ParmVar 0x561624255de0 'i' 'int'
|-CXXMethodDecl 0x5616242560a8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x561624255f98 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x561624256010 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561624256158 <col:20>
| `-OptimizeNoneAttr 0x5616242561b0 <col:30>
|-CXXMethodDecl 0x5616242562e8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5616242561f0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56162426c598 <col:35, line:562:5>
|   |-ParenExpr 0x56162426c338 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56162426c308 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56162426c060 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426c030 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426bf40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426bf28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426bee8 <col:23> 'int' lvalue ParmVar 0x5616242561f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426bf08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426c010 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56162426bff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426bf60 <col:33> 'int' lvalue ParmVar 0x5616242561f0 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426bfd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426bfc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426bf80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56162426bfa0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56162426c0c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426c0a0 <col:60> 'int' 0
|   |   `-CallExpr 0x56162426c268 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56162426c250 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426c230 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426c2a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426c130 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56162426c2c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426c168 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426c2d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426c1a0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56162426c2f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426c218 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426c200 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426c1c0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56162426c588 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56162426c570 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56162426c558 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56162426c528 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56162426c4d0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56162426c4a0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56162426c450 <col:60, col:69> 'char const[48]' lvalue ->c 0x56162425d950
|             |   `-CXXMemberCallExpr 0x56162426c430 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56162426c400 <col:60> '<bound member function type>' ->xanno 0x561624252a98
|             |       `-CXXThisExpr 0x56162426c3f0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56162426c4b8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56162426c480 <col:73> 'int' lvalue ParmVar 0x5616242561f0 'i' 'int'
|-CXXMethodDecl 0x5616242564f8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5616242563a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561624256420 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56162426cc78 <col:41, line:577:5>
|   |-ParenExpr 0x56162426ca08 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56162426c9d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56162426c730 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426c700 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426c610 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426c5f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426c5b8 <col:23> 'int' lvalue ParmVar 0x5616242563a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426c5d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426c6e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56162426c6c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426c630 <col:33> 'int' lvalue ParmVar 0x5616242563a8 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426c6a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426c690 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426c650 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56162426c670 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56162426c790 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426c770 <col:60> 'int' 0
|   |   `-CallExpr 0x56162426c938 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56162426c920 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426c900 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426c978 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426c800 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56162426c990 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426c838 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426c9a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426c870 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56162426c9c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426c8e8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426c8d0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426c890 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56162426cc58 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56162426cc08 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56162426cbd8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56162426cb78 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56162426cb48 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56162426caf8 <col:47, col:56> 'char [48]' lvalue ->c 0x56162425d950
|     |     |   `-CXXMemberCallExpr 0x56162426cad8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56162426caa8 <col:47> '<bound member function type>' ->xanno 0x561624252c38
|     |     |       `-CXXThisExpr 0x56162426ca98 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56162426cb60 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56162426cb28 <col:60> 'int' lvalue ParmVar 0x5616242563a8 'i' 'int'
|     `-ImplicitCastExpr 0x56162426cc40 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56162426cc20 <col:65> 'int32_t':'int' lvalue ParmVar 0x561624256420 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5616242566b8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5616242565c0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56162426d3a8 <col:36, line:591:5>
|   |-ParenExpr 0x56162426d0e8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56162426d0b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56162426ce10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426cde0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426ccf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426ccd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426cc98 <col:23> 'int' lvalue ParmVar 0x5616242565c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426ccb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426cdc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56162426cda8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426cd10 <col:33> 'int' lvalue ParmVar 0x5616242565c0 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426cd88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426cd70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426cd30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56162426cd50 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56162426ce70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426ce50 <col:60> 'int' 0
|   |   `-CallExpr 0x56162426d018 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56162426d000 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426cfe0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426d058 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426cee0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56162426d070 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426cf18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426d088 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426cf50 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56162426d0a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426cfc8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426cfb0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426cf70 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56162426d398 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56162426d380 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56162426d368 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56162426d338 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56162426d2b0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56162426d280 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56162426d230 <col:61, col:70> 'char const[48]' lvalue ->c 0x56162425d950
|             |   `-CXXMemberCallExpr 0x56162426d210 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56162426d1e0 <col:61> '<bound member function type>' ->xanno 0x561624252a98
|             |       `-CXXThisExpr 0x56162426d1d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56162426d298 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56162426d260 <col:74> 'int' lvalue ParmVar 0x5616242565c0 'i' 'int'
|-CXXMethodDecl 0x561624256908 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x561624256778 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5616242567f0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56162426da88 <col:42, line:606:5>
|   |-ParenExpr 0x56162426d818 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56162426d7e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56162426d540 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426d510 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426d420 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426d408 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426d3c8 <col:23> 'int' lvalue ParmVar 0x561624256778 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426d3e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426d4f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56162426d4d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426d440 <col:33> 'int' lvalue ParmVar 0x561624256778 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426d4b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426d4a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426d460 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56162426d480 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56162426d5a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426d580 <col:60> 'int' 0
|   |   `-CallExpr 0x56162426d748 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56162426d730 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426d710 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426d788 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426d610 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56162426d7a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426d648 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426d7b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426d680 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56162426d7d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426d6f8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426d6e0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426d6a0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56162426da68 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56162426da18 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56162426d9e8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56162426d988 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56162426d958 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56162426d908 <col:48, col:57> 'char [48]' lvalue ->c 0x56162425d950
|     |     |   `-CXXMemberCallExpr 0x56162426d8e8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56162426d8b8 <col:48> '<bound member function type>' ->xanno 0x561624252c38
|     |     |       `-CXXThisExpr 0x56162426d8a8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56162426d970 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56162426d938 <col:61> 'int' lvalue ParmVar 0x561624256778 'i' 'int'
|     `-ImplicitCastExpr 0x56162426da50 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56162426da30 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5616242567f0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x561624256aa0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5616242569d0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56162426e2f8 <col:33, line:620:5>
|   |-ParenExpr 0x56162426e070 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56162426e040 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56162426dc90 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426dc60 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426db00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426dae8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426daa8 <col:23> 'int' lvalue ParmVar 0x5616242569d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426dac8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426dc40 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56162426dc28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426db20 <col:33> 'int' lvalue ParmVar 0x5616242569d0 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426dc08 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426dbf0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426db40 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56162426dbc8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56162426dbb0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56162426db78 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56162426dcf0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426dcd0 <col:79> 'int' 0
|   |   `-CallExpr 0x56162426dfa0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56162426df88 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426df68 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426dfe0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426ddd8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56162426dff8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426de20 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426e010 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426de58 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56162426e028 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426df50 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426df38 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426def8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56162426e2e8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56162426e2d0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56162426e2b8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56162426e288 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56162426e200 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56162426e1d0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56162426e180 <col:67, col:76> 'char const[48]' lvalue ->c 0x56162425d950
|             |   `-CXXMemberCallExpr 0x56162426e160 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56162426e130 <col:67> '<bound member function type>' ->xanno 0x561624252a98
|             |       `-CXXThisExpr 0x56162426e120 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56162426e1e8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56162426e1b0 <col:80> 'int' lvalue ParmVar 0x5616242569d0 'i' 'int'
|-CXXMethodDecl 0x561624256cb8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x561624256b60 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561624256be0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56162426eb20 <col:45, line:635:5>
|   |-ParenExpr 0x56162426e868 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56162426e838 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56162426e500 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56162426e4d0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56162426e370 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56162426e358 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56162426e318 <col:23> 'int' lvalue ParmVar 0x561624256b60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56162426e338 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56162426e4b0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56162426e498 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56162426e390 <col:33> 'int' lvalue ParmVar 0x561624256b60 'i' 'int'
|   |   |     `-BinaryOperator 0x56162426e478 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56162426e460 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56162426e3b0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561624252e80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56162426e438 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56162426e420 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56162426e3e8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56162426e560 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56162426e540 <col:79> 'int' 0
|   |   `-CallExpr 0x56162426e798 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56162426e780 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56162426e760 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56162426e7d8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426e5d0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56162426e7f0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56162426e618 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56162426e808 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56162426e650 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56162426e820 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56162426e748 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56162426e730 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56162426e6e8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56162426eb00 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56162426ea68 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56162426ea38 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56162426e9d8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56162426e9a8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56162426e958 <col:54, col:63> 'char [48]' lvalue ->c 0x56162425d950
|     |     |   `-CXXMemberCallExpr 0x56162426e938 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56162426e908 <col:54> '<bound member function type>' ->xanno 0x561624252c38
|     |     |       `-CXXThisExpr 0x56162426e8f8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56162426e9c0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56162426e988 <col:67> 'int' lvalue ParmVar 0x561624256b60 'i' 'int'
|     `-CXXConstCastExpr 0x56162426ead0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56162426eab8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56162426ea80 <col:91> 'const void *' lvalue ParmVar 0x561624256be0 'x' 'const void *'
|-CXXMethodDecl 0x561624256d88 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56162426eba8 <col:34, line:640:5>
|   `-ReturnStmt 0x56162426eb98 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56162426eb80 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56162426eb50 <col:16> 'Packet *' lvalue ->_data_packet 0x56162425e508
|         `-CXXThisExpr 0x56162426eb40 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561624256ec8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x561624256e38 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561624267c68 <col:46> 'bool' true
|-CXXMethodDecl 0x561624257048 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x561624256f80 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5616242570f0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5616242578a0 <line:660:22> "" ""
| |-EnumConstantDecl 0x5616242571f0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561624257910 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242571d0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5616242571b0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56162424c350 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561624257280 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561624257928 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624257260 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x561624257240 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56162424c3e0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561624257310 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561624257940 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242572f0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5616242572d0 <col:21> 'int' 0
| |-EnumConstantDecl 0x5616242573a0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561624257958 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624257380 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x561624257360 <col:19> 'int' 16
| |-EnumConstantDecl 0x561624257430 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561624257970 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624257410 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5616242573f0 <col:21> 'int' 16
| |-EnumConstantDecl 0x5616242574c0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561624257988 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242574a0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561624257480 <col:19> 'int' 32
| |-EnumConstantDecl 0x561624257550 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5616242579a0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624257530 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x561624257510 <col:19> 'int' EnumConstant 0x5616242573a0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5616242575e0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5616242579b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5616242575c0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5616242575a0 <col:19> 'int' EnumConstant 0x5616242574c0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5616242576b0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5616242579d0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624257690 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x561624257670 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561624257630 <col:23> 'int' EnumConstant 0x5616242575e0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561624257650 <col:40> 'int' 2
| |-EnumConstantDecl 0x561624257780 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5616242579e8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561624257760 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x561624257740 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561624257700 <col:23> 'int' EnumConstant 0x5616242575e0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561624257720 <col:40> 'int' 4
| `-EnumConstantDecl 0x561624257850 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x561624257a00 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624257830 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x561624257810 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5616242577d0 <col:23> 'int' EnumConstant 0x5616242575e0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5616242577f0 <col:40> 'int' 8
|-CXXMethodDecl 0x561624257a40 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x561624257ae0 <col:68> "" ""
|-CXXMethodDecl 0x561624257b78 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x561624257c18 <col:45> "" ""
|-CXXMethodDecl 0x561624257cb0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561624257d50 <col:57> "" ""
|-CXXMethodDecl 0x561624257de8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x561624257e88 <col:45> "" ""
|-CXXMethodDecl 0x561624257f20 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561624257fc0 <col:57> "" ""
|-CXXMethodDecl 0x561624258050 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5616242580f0 <col:51> "" ""
|-CXXMethodDecl 0x561624258180 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561624258220 <col:63> "" ""
|-CXXMethodDecl 0x5616242582b0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x561624258350 <col:53> "" ""
|-CXXMethodDecl 0x5616242583e0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561624258480 <col:65> "" ""
|-CXXMethodDecl 0x561624258598 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561624258508 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x561624258640 <col:61> "" ""
|-CXXMethodDecl 0x5616242587d8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5616242586c8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x561624258740 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561624258888 <col:67> "" ""
|-CXXMethodDecl 0x5616242589a0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561624258910 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561624258a48 <col:63> "" ""
|-CXXMethodDecl 0x561624258be0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561624258ad0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561624258b48 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561624258c90 <col:69> "" ""
|-CXXMethodDecl 0x561624258da8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561624258d18 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561624258e50 <col:63> "" ""
|-CXXMethodDecl 0x56162425b528 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56162425b418 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56162425b490 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56162425b5d8 <col:69> "" ""
|-CXXMethodDecl 0x56162425b6f0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56162425b660 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56162425b798 <col:62> "" ""
|-CXXMethodDecl 0x56162425b930 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56162425b820 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56162425b898 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56162425b9e0 <col:68> "" ""
|-CXXMethodDecl 0x56162425baf8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56162425ba68 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56162425bba0 <col:63> "" ""
|-CXXMethodDecl 0x56162425bd38 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56162425bc28 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56162425bca0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56162425bde8 <col:69> "" ""
|-CXXMethodDecl 0x56162425be78 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56162425bf18 <col:64> "" ""
|-CXXMethodDecl 0x56162425bfa8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56162425c048 <col:52> "" ""
|-CXXMethodDecl 0x56162425c0d8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56162425c178 <col:67> "" ""
|-CXXMethodDecl 0x56162425c208 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56162425c2a8 <col:55> "" ""
|-CXXMethodDecl 0x56162425c3c0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56162425c330 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56162425c468 <col:58> "" ""
|-CXXMethodDecl 0x56162425c600 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56162425c4f0 <col:33> col:36 'int'
| |-ParmVarDecl 0x56162425c568 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56162425c6b0 <col:62> "" ""
|-CXXMethodDecl 0x56162425c7c8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56162425c738 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56162425c870 <col:58> "" ""
|-CXXMethodDecl 0x56162425ca08 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56162425c8f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56162425c970 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56162425cab8 <col:62> "" ""
|-CXXMethodDecl 0x56162425cbd0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56162425cb40 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56162425cc78 <col:60> "" ""
|-CXXMethodDecl 0x56162425ce10 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56162425cd00 <col:34> col:37 'int'
| |-ParmVarDecl 0x56162425cd78 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56162425cec0 <col:64> "" ""
|-CXXMethodDecl 0x56162425cfd8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56162425cf48 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56162425d080 <col:58> "" ""
|-CXXMethodDecl 0x56162425d218 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56162425d108 <col:33> col:36 'int'
| |-ParmVarDecl 0x56162425d180 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56162425d2c8 <col:62> "" ""
|-CXXMethodDecl 0x56162425d3e0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56162425d350 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56162425d488 <col:59> "" ""
|-CXXMethodDecl 0x56162425d620 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56162425d510 <col:33> col:36 'int'
| |-ParmVarDecl 0x56162425d588 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56162425d6d0 <col:63> "" ""
|-AccessSpecDecl 0x56162425d740 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56162425d768 prev 0x561624252970 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56162425d860 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56162425d950 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56162425da78 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56162425dbf8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56162425dd78 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56162425def8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56162426ed28 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56162426f598 <col:11>
| |-CXXDestructorDecl 0x56162426ee00 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56162426ef38 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56162426ef38
| | `-ParmVarDecl 0x56162426f048 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56162426f0e8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56162426f0e8
| | `-ParmVarDecl 0x56162426f1f8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x561624271fb8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5616242720c8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x561624272348 <col:11>
| |   `-ReturnStmt 0x561624272338 <col:11>
| |     `-UnaryOperator 0x561624272320 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561624272310 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x561624272138 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561624272138
|   `-ParmVarDecl 0x561624272248 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56162425df60 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56162425e078 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56162425e118 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56162425e180 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56162425e1e8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56162425e250 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56162425e2b0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56162425e370 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56162425e3d0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56162425e430 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56162426ec38 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56162425e118 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56162426f5a8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56162426f600 <col:12>
| |-CXXConstructorDecl 0x56162426f268 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56162426f268
| | `-ParmVarDecl 0x56162426f378 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56162426f418 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56162426f418
| | `-ParmVarDecl 0x56162426f528 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5616242716a0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56162425e4a8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56162425e508 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56162425e570 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56162425e5d8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56162425e640 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56162425e6a8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56162425e708 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56162425e768 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56162425e7d0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56162425e858 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56162425e4a8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56162426ebd0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56162425e708 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56162426f610 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56162426f670 <col:21, line:755:5>
|-CXXConstructorDecl 0x56162425e9f8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56162425e938 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56162425eaf0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56162425ecd8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56162425ebe0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56162425efa8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56162425ed90 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56162425ee08 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56162425ee80 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56162425f1c8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56162425f078 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56162425f0f0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5616242677a8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56162425f288 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56162425f300 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56162425f378 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x561624267900 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561624267870 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561624267a48 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5616242679b8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x561624267b40 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561624058f70 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561624059088 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x561624059128 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x561624059188 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5616240591e8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x561624059298 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616240595a0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5616240596b8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x561624059760 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5616240597c8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x561624059858 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56162405f8f0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56162405fd28 <col:12>
|-CXXConstructorDecl 0x56162405f9f8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56162405fb08 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561624059760 'data' 'const char *'
| | `-ImplicitCastExpr 0x5616240622b0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x561624062280 <col:12> 'const char *const' lvalue .data 0x561624059760
| |     `-DeclRefExpr 0x561624062260 <col:12> 'const String::rep_t' lvalue ParmVar 0x56162405fb08 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5616240597c8 'length' 'int'
| | `-ImplicitCastExpr 0x561624062340 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x561624062310 <col:12> 'const int' lvalue .length 0x5616240597c8
| |     `-DeclRefExpr 0x5616240622f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56162405fb08 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561624059858 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5616240623d0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5616240623a0 <col:12> 'String::memo_t *const' lvalue .memo 0x561624059858
| |     `-DeclRefExpr 0x561624062380 <col:12> 'const String::rep_t' lvalue ParmVar 0x56162405fb08 '' 'const String::rep_t &'
| `-CompoundStmt 0x561624062428 <col:12>
|-CXXConstructorDecl 0x56162405fba8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56162405fba8
| `-ParmVarDecl 0x56162405fcb8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x561624065210 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561624070c28 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561624070d38 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x561624071250 <col:12>
|   |-BinaryOperator 0x561624071068 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561624071020 <col:12> 'const char *' lvalue ->data 0x561624059760
|   | | `-CXXThisExpr 0x561624071010 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561624071050 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x561624070fe0 <col:12> 'const char *const' lvalue .data 0x561624059760
|   |     `-DeclRefExpr 0x561624070fc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561624070d38 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561624071130 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5616240710e8 <col:12> 'int' lvalue ->length 0x5616240597c8
|   | | `-CXXThisExpr 0x5616240710d8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561624071118 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5616240710a8 <col:12> 'const int' lvalue .length 0x5616240597c8
|   |     `-DeclRefExpr 0x561624071088 <col:12> 'const String::rep_t' lvalue ParmVar 0x561624070d38 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5616240711f8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5616240711b0 <col:12> 'String::memo_t *' lvalue ->memo 0x561624059858
|   | | `-CXXThisExpr 0x5616240711a0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5616240711e0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x561624071170 <col:12> 'String::memo_t *const' lvalue .memo 0x561624059858
|   |     `-DeclRefExpr 0x561624071150 <col:12> 'const String::rep_t' lvalue ParmVar 0x561624070d38 '' 'const String::rep_t &'
|   `-ReturnStmt 0x561624071240 <col:12>
|     `-UnaryOperator 0x561624071228 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561624071218 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x561624070da8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561624070da8
  `-ParmVarDecl 0x561624070eb8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5616240504e0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5616240505f8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x561624050688 <col:16, col:22> col:16 public
|-TypedefDecl 0x5616240506c8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x561623d22fd0 'const char *'
|   `-QualType 0x561623d22521 'const char' const
|     `-BuiltinType 0x561623d22520 'char'
|-TypedefDecl 0x561624050750 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x561624050720 'String::const_iterator' sugar
|   |-Typedef 0x5616240506c8 'const_iterator'
|   `-PointerType 0x561623d22fd0 'const char *'
|     `-QualType 0x561623d22521 'const char' const
|       `-BuiltinType 0x561623d22520 'char'
|-TypedefDecl 0x5616240508c0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x561624050830 'int (String::*)() const'
|   |-RecordType 0x561624050570 'String'
|   | `-CXXRecord 0x5616240504e0 'String'
|   `-ParenType 0x5616240507d0 'int () const' sugar
|     `-FunctionProtoType 0x561624024360 'int () const' const cdecl
|       `-BuiltinType 0x561623d22580 'int'
|-TypedefDecl 0x561624050928 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x561623e78f40 'int64_t' sugar
|   |-Typedef 0x561623d8b390 'int64_t'
|   `-TypedefType 0x561623d64630 '__int64_t' sugar
|     |-Typedef 0x561623d64208 '__int64_t'
|     `-BuiltinType 0x561623d225a0 'long'
|-TypedefDecl 0x561624050990 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x561623e78e60 'uint64_t' sugar
|   |-Typedef 0x561623d8b530 'uint64_t'
|   `-TypedefType 0x561623d646c0 '__uint64_t' sugar
|     |-Typedef 0x561623d64278 '__uint64_t'
|     `-BuiltinType 0x561623d22640 'unsigned long'
|-TypedefDecl 0x561624050a20 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5616240509f0 'String::intmax_t' sugar
|   |-Typedef 0x561624050928 'intmax_t'
|   `-TypedefType 0x561623e78f40 'int64_t' sugar
|     |-Typedef 0x561623d8b390 'int64_t'
|     `-TypedefType 0x561623d64630 '__int64_t' sugar
|       |-Typedef 0x561623d64208 '__int64_t'
|       `-BuiltinType 0x561623d225a0 'long'
|-TypedefDecl 0x561624050ab0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x561624050a80 'String::uintmax_t' sugar
|   |-Typedef 0x561624050990 'uintmax_t'
|   `-TypedefType 0x561623e78e60 'uint64_t' sugar
|     |-Typedef 0x561623d8b530 'uint64_t'
|     `-TypedefType 0x561623d646c0 '__uint64_t' sugar
|       |-Typedef 0x561623d64278 '__uint64_t'
|       `-BuiltinType 0x561623d22640 'unsigned long'
|-CXXConstructorDecl 0x561624050b70 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x561624050d18 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x561624050c58 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x561624050ec8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x561624050e08 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x561624051020 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x561624050f90 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x561624051238 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5616240510e8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x561624051168 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x561624051458 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x561624051308 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x561624051388 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x561624051678 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561624051528 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5616240515a8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x561624051898 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x561624051748 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5616240517c8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x561624051a28 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x561624051960 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x561624051ba8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x561624051ae8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x561624051d38 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x561624051c70 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x561624051e90 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x561624051e00 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x561624051fe8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x561624051f58 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x561624052140 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5616240520b0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5616240522c8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x561624052208 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x561624052458 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x561624052390 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5616240525e8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x561624052520 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x561624052778 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5616240526b0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x561624052870 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x561624052998 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x561624052b18 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x561624052a50 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x561624052c68 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x561624052bd8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x561624052d20 <col:63> "" ""
|-CXXMethodDecl 0x561624052e68 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x561624052da8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x561624053078 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x561624052f28 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x561624052fa8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x561624053298 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x561624053140 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5616240531c0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x561624053578 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x561624053358 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5616240533d8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56162405f3c0 <col:55> 'int' 10
| `-ParmVarDecl 0x561624053450 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56162405f3e0 <col:76> 'bool' true
|-CXXMethodDecl 0x561624053858 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x561624053640 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5616240536c0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56162405f3f0 <col:56> 'int' 10
| `-ParmVarDecl 0x561624053738 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56162405f410 <col:77> 'bool' true
|-CXXMethodDecl 0x561624053960 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x561624053a28 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x561624053af0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x561624053b90 <col:20>
| `-OptimizeNoneAttr 0x561624053be8 <col:30>
|-CXXConversionDecl 0x561624053cd8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561624053da8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561624053e68 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x561624053f58 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561624054018 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561624054198 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5616240540d0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5616240542e8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x561624054258 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5616240543d8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x561624054498 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5616240546e8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x561624054550 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5616240545d0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x561624054948 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5616240547b0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x561624054830 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x561624054a18 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x561624054c28 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x561624054ad0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x561624054b50 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x561624054e48 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x561624054cf0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x561624054d70 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x561624054fd8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x561624054f10 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5616240550c8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x561624055238 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x561624055178 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561624055448 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5616240552f8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561624055378 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561624055660 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x561624055508 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x561624055580 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5616240557f0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x561624055720 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561624055a10 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5616240558b0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x561624055930 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561624055b60 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x561624055ad0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x561624055d38 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x561624055c20 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561624055ca0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x561624055e88 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x561624055df8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5616240560a0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x561624055f40 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x561624055fc0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56162405f420 <col:39> 'int' 0
|-CXXMethodDecl 0x5616240562c0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x561624056160 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5616240561e0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56162405f440 <col:48> 'int' 0
|-CXXMethodDecl 0x5616240564a0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x561624056380 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x561624056400 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56162405f460 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x561624056570 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x561624056630 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5616240566f0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5616240567b0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x561624056870 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x561624056a18 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x561624056920 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x561624056b98 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x561624056ad0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x561624056d70 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x561624056c58 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x561624056ee8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x561624056e28 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x561624057030 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x561624056fa0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561624057180 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5616240570f0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x561624057358 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x561624057240 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5616240572c0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561624057538 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561624057420 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5616240574a0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x561624057688 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5616240575f8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x561624057898 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x561624057748 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5616240577c8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5616240579f8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x561624057960 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561624057b50 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x561624057ab8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x561624057bf8 <col:57> "" ""
|-CXXMethodDecl 0x561624057d08 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x561624057c78 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x561624057e58 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x561624057dc8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x561624057fd8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x561624057f10 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5616240580a0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x561624058160 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x561624058220 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5616240582c0 <col:49> "" ""
|-CXXMethodDecl 0x561624058350 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x561624058410 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x561624058500 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5616240585c8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x561624058688 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x561624058748 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x561624058840 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x561624058908 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5616240589d0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x561624058ba8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x561624058a88 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x561624058b08 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x561624058dd0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x561624058c70 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x561624058cf0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x561624058ee0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x561624058f48 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x561624058f70 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561624059088 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x561624059128 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x561624059188 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5616240591e8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x561624059298 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x561624059300 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x561624059538 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x561624059588 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561624059518 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x561624059428 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5616240593d0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x561624059410 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5616240593f0 <col:32> 'int' 8
|-CXXRecordDecl 0x5616240595a0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5616240596b8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x561624059760 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5616240597c8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x561624059858 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56162405f8f0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56162405fd28 <col:12>
| |-CXXConstructorDecl 0x56162405f9f8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56162405fb08 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561624059760 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5616240622b0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x561624062280 <col:12> 'const char *const' lvalue .data 0x561624059760
| | |     `-DeclRefExpr 0x561624062260 <col:12> 'const String::rep_t' lvalue ParmVar 0x56162405fb08 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5616240597c8 'length' 'int'
| | | `-ImplicitCastExpr 0x561624062340 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x561624062310 <col:12> 'const int' lvalue .length 0x5616240597c8
| | |     `-DeclRefExpr 0x5616240622f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56162405fb08 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561624059858 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5616240623d0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5616240623a0 <col:12> 'String::memo_t *const' lvalue .memo 0x561624059858
| | |     `-DeclRefExpr 0x561624062380 <col:12> 'const String::rep_t' lvalue ParmVar 0x56162405fb08 '' 'const String::rep_t &'
| | `-CompoundStmt 0x561624062428 <col:12>
| |-CXXConstructorDecl 0x56162405fba8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56162405fba8
| | `-ParmVarDecl 0x56162405fcb8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x561624065210 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561624070c28 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561624070d38 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x561624071250 <col:12>
| |   |-BinaryOperator 0x561624071068 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x561624071020 <col:12> 'const char *' lvalue ->data 0x561624059760
| |   | | `-CXXThisExpr 0x561624071010 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561624071050 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x561624070fe0 <col:12> 'const char *const' lvalue .data 0x561624059760
| |   |     `-DeclRefExpr 0x561624070fc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561624070d38 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561624071130 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5616240710e8 <col:12> 'int' lvalue ->length 0x5616240597c8
| |   | | `-CXXThisExpr 0x5616240710d8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561624071118 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5616240710a8 <col:12> 'const int' lvalue .length 0x5616240597c8
| |   |     `-DeclRefExpr 0x561624071088 <col:12> 'const String::rep_t' lvalue ParmVar 0x561624070d38 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5616240711f8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5616240711b0 <col:12> 'String::memo_t *' lvalue ->memo 0x561624059858
| |   | | `-CXXThisExpr 0x5616240711a0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5616240711e0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x561624071170 <col:12> 'String::memo_t *const' lvalue .memo 0x561624059858
| |   |     `-DeclRefExpr 0x561624071150 <col:12> 'const String::rep_t' lvalue ParmVar 0x561624070d38 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x561624071240 <col:12>
| |     `-UnaryOperator 0x561624071228 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561624071218 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x561624070da8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561624070da8
|   `-ParmVarDecl 0x561624070eb8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5616240598d0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x561624059b18 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x561624059938 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5616240599b8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x561624059a30 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56162405f8b0 <col:79, line:261:5>
|   |-BinaryOperator 0x56162405f528 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56162405f4c0 <col:2, col:5> 'const char *' lvalue .data 0x561624059760
|   | | `-MemberExpr 0x56162405f490 <col:2> 'String::rep_t' lvalue ->_r 0x5616240598d0
|   | |   `-CXXThisExpr 0x56162405f480 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56162405f510 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56162405f4f0 <col:12> 'const char *' lvalue ParmVar 0x561624059938 'data' 'const char *'
|   |-BinaryOperator 0x56162405f5f0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56162405f588 <col:2, col:5> 'int' lvalue .length 0x5616240597c8
|   | | `-MemberExpr 0x56162405f558 <col:2> 'String::rep_t' lvalue ->_r 0x5616240598d0
|   | |   `-CXXThisExpr 0x56162405f548 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56162405f5d8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56162405f5b8 <col:14> 'int' lvalue ParmVar 0x5616240599b8 'length' 'int'
|   `-IfStmt 0x56162405f898 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56162405f710 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56162405f6f8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56162405f6d8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56162405f6b8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56162405f650 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x561624059858
|     |       | `-MemberExpr 0x56162405f620 <col:7> 'String::rep_t' lvalue ->_r 0x5616240598d0
|     |       |   `-CXXThisExpr 0x56162405f610 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56162405f6a0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56162405f680 <col:17> 'String::memo_t *' lvalue ParmVar 0x561624059a30 'memo' 'String::memo_t *'
|     `-CallExpr 0x56162405f870 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56162405f858 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56162405f760 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x561624048548 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56162405f7c8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561624059128
|         `-ImplicitCastExpr 0x56162405f7b0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56162405f790 <col:27> 'String::memo_t *' lvalue ParmVar 0x561624059a30 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x561624059dc8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x561624059be8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x561624059c68 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x561624059ce0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5616240598d0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56162405fd38 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56162405fec8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56162405fe30 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56162405fda0 <col:2> '<bound member function type>' ->assign_memo 0x561624059b18
|     | `-ImplicitCastExpr 0x56162405fe68 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56162405fd90 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56162405fe80 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56162405fdd0 <col:14> 'const char *' lvalue ParmVar 0x561624059be8 'data' 'const char *'
|     |-ImplicitCastExpr 0x56162405fe98 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56162405fdf0 <col:20> 'int' lvalue ParmVar 0x561624059c68 'length' 'int'
|     `-ImplicitCastExpr 0x56162405feb0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56162405fe10 <col:28> 'String::memo_t *' lvalue ParmVar 0x561624059ce0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x561624059f58 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x561624059e98 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x561624060120 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5616240600a0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56162405fef0 <col:2> '<bound member function type>' ->assign_memo 0x561624059b18
|     | `-CXXThisExpr 0x56162405fee0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5616240600d8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56162405ff70 <col:14, col:19> 'const char *' lvalue .data 0x561624059760
|     |   `-MemberExpr 0x56162405ff40 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5616240598d0
|     |     `-DeclRefExpr 0x56162405ff20 <col:14> 'const String' lvalue ParmVar 0x561624059e98 'x' 'const String &'
|     |-ImplicitCastExpr 0x5616240600f0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56162405fff0 <col:25, col:30> 'int' lvalue .length 0x5616240597c8
|     |   `-MemberExpr 0x56162405ffc0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5616240598d0
|     |     `-DeclRefExpr 0x56162405ffa0 <col:25> 'const String' lvalue ParmVar 0x561624059e98 'x' 'const String &'
|     `-ImplicitCastExpr 0x561624060108 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x561624060070 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x561624059858
|         `-MemberExpr 0x561624060040 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5616240598d0
|           `-DeclRefExpr 0x561624060020 <col:38> 'const String' lvalue ParmVar 0x561624059e98 'x' 'const String &'
|-CXXMethodDecl 0x56162405a020 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x561624060ae0 <col:31, line:278:5>
|   `-IfStmt 0x561624060ac8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5616240601c0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5616240601a8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x561624060178 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561624059858
|     |     `-MemberExpr 0x561624060148 <col:6> 'String::rep_t' lvalue ->_r 0x5616240598d0
|     |       `-CXXThisExpr 0x561624060138 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x561624060aa0 <col:15, line:277:2>
|       |-ParenExpr 0x561624060670 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x561624060640 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5616240602d0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5616240602b8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5616240602a0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x561624060260 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561624059128
|       |   |       `-ImplicitCastExpr 0x561624060248 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x561624060218 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x561624059858
|       |   |           `-MemberExpr 0x5616240601e8 <col:27> 'String::rep_t' lvalue ->_r 0x5616240598d0
|       |   |             `-CXXThisExpr 0x5616240601d8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x561624060330 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x561624060310 <col:54> 'int' 0
|       |   `-CallExpr 0x5616240605a0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x561624060588 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x561624060508 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561623dbf750 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5616240605e0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561624060418 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5616240605f8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561624060448 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x561624060610 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x561624060480 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x561624060628 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5616240604f0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5616240604d8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5616240604a0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5616240609c0 <line:274:6, line:275:22>
|       | |-CallExpr 0x561624060880 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x561624060868 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5616240607e0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x561624049990 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5616240607b0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561624059128
|       | |   `-ImplicitCastExpr 0x561624060798 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x561624060768 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x561624059858
|       | |       `-MemberExpr 0x561624060738 <col:40> 'String::rep_t' lvalue ->_r 0x5616240598d0
|       | |         `-CXXThisExpr 0x561624060728 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x561624060980 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x561624060968 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5616240608a8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56162405e800 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5616240609a8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x561624060908 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x561624059858
|       |       `-MemberExpr 0x5616240608d8 <col:15> 'String::rep_t' lvalue ->_r 0x5616240598d0
|       |         `-CXXThisExpr 0x5616240608c8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x561624060a80 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x561624060a18 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561624059858
|         | `-MemberExpr 0x5616240609e8 <col:6> 'String::rep_t' lvalue ->_r 0x5616240598d0
|         |   `-CXXThisExpr 0x5616240609d8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x561624060a68 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x561624060a48 <col:16> 'int' 0
|-CXXMethodDecl 0x56162405a2b8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56162405a0d8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56162405a158 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56162405a1d0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56162405a390 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56162405a5e0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56162405a448 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56162405a4c8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56162405a540 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56162405a7c8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56162405a6b0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56162405a730 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56162405a8c8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x561624060bb8 <col:41, line:286:5>
|   `-ReturnStmt 0x561624060ba8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x561624060b78 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x561624060b40 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x561624060b28 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x561624060b08 <col:46> 'int' 1
|-CXXMethodDecl 0x56162405ab68 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56162405a980 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56162405aa00 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56162405aa80 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56162405e800 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56162405ac30 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56162405e8d0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56162405eaa0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56162405e988 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56162405ea08 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56162405eb60 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56162405ec28 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56162405ed28 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56162405eda0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56162405ee18 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56162405ee80 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56162405ef80 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56162405efd0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56162405ef60 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56162405ef40 <col:22> 'int' 14
|-CXXMethodDecl 0x56162405f1e8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56162405f000 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56162405f080 <col:38> col:41 'int'
| `-ParmVarDecl 0x56162405f100 <col:43> col:46 'int'
|-FriendDecl 0x56162405f2f0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56162405f380 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5616242c4660 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x56162437ba18 <line:167:18>
|-CXXRecordDecl 0x56162437bad8 prev 0x5616242c4660 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56162437bbe8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
